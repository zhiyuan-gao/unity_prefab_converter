#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "CountertopL_6X6"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "CountertopL_6X6" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.915633, -0.914332, -0.517404), (0.913169, 0.914472, 0.418626)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [5, 13, 17, 4, 8, 15, 14, 9, 1, 5, 4, 0, 0, 4, 17, 16, 2, 6, 7, 3, 0, 8, 9, 1, 3, 10, 11, 2, 15, 8, 0, 16, 7, 13, 12, 3, 3, 12, 14, 10, 15, 11, 10, 14, 2, 11, 15, 16, 17, 6, 2, 16, 13, 7, 6, 17, 13, 19, 18, 12, 12, 18, 20, 14, 20, 28, 9, 14, 5, 22, 19, 13, 22, 24, 23, 21, 25, 24, 22, 5, 1, 26, 25, 5, 9, 27, 26, 1, 28, 29, 27, 9, 21, 23, 29, 28, 19, 22, 21, 18, 18, 21, 28, 20, 24, 25, 26, 23, 23, 26, 27, 29]
            rel material:binding = </root/_materials/M_CountertopL_6X6_0>
            normal3f[] normals = [(0.0000014210825, 1, -0.000005533658), (-7.8945726e-7, 1, -0.0000029663604), (4.296506e-7, 1, -0.0000067396145), (8.593012e-7, 1, -0.000013479229), (1, 0, 0), (1, 0, 0), (1, -5.524751e-7, 3.9554064e-7), (1, 1.4249296e-7, 1.6776227e-7), (-1, 0, 0), (-1, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-3.295098e-8, 0, -1), (-6.590231e-8, 0, -1), (0.0000015957025, 0, -1), (3.8252531e-7, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, -5.7556065e-7), (0, -1, -5.755604e-7), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (-3.295098e-8, 0, -1), (3.8252531e-7, 0, -1), (-0.0000016475915, 0, 1), (-0.0000016475915, 0, 1), (-8.239005e-7, 0, 1), (-8.2376084e-7, 0, 1), (-8.2376084e-7, 0, 1), (-8.239005e-7, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, -5.524751e-7, 3.9554064e-7), (0.0000016285846, 0, -1), (0, 0, -1), (0, 0, -1), (3.8252531e-7, 0, -1), (0.0000015957025, 0, -1), (0.0000032573073, 0, -1), (0.0000016285846, 0, -1), (3.8252531e-7, 0, -1), (-7.8945726e-7, 1, -0.0000029663604), (0, 1, 0), (0, 1, 0), (4.296506e-7, 1, -0.0000067396145), (0.99999964, 0.00042097195, -0.0006315931), (0.99999964, 0.00042097195, -0.0006315931), (0.99999964, 0.00042097195, -0.0006315931), (0.99999964, 0.00042097195, -0.0006315931), (0.00042061077, 0.9999998, -0.00063103315), (0.00042061077, 0.9999998, -0.00063103315), (0.00042061077, 0.9999998, -0.00063103315), (0.00042061077, 0.9999998, -0.00063103315), (1, -0.0000016574254, 0.0000011866218), (1, 0.0000010602929, -4.1946673e-9), (1, 1.4249296e-7, 1.6776227e-7), (1, -5.524751e-7, 3.9554064e-7), (0.0000014210825, 1, -0.000005533658), (0.0000040627115, 1, 0.0000015462122), (-0.0000032276728, 1, 0.0000045801476), (-7.8945726e-7, 1, -0.0000029663604), (0.99997866, 0.0004112383, 0.0065214317), (0.99997866, 0.0004112383, 0.0065214317), (0.99997866, 0.0004112383, 0.0065214317), (0.99997866, 0.0004112383, 0.0065214317), (0.000010328342, 1, -0.0000010612665), (0.000010328342, 1, -0.0000010612665), (0.0000040627115, 1, 0.0000015462122), (0.0000014210825, 1, -0.000005533658), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, -5.7556065e-7), (0, -1, -0.0000011511208), (0, -1, -0.0000011511208), (0, -1, -5.755604e-7), (1, 0.0000010602929, -4.1946673e-9), (0.99999994, 0.0000033960123, -0.0000010276316), (0.99999994, 0.0000033960123, -0.0000010276316), (1, 1.4249296e-7, 1.6776227e-7), (0.0004088753, 0.9999786, 0.0065214713), (0.0004088753, 0.9999786, 0.0065214713), (0.0004088753, 0.9999786, 0.0065214713), (0.0004088753, 0.9999786, 0.0065214713), (-0.009768191, -0.000060224844, 0.9999523), (-0.009768191, -0.000060224844, 0.9999523), (-0.0049141655, -0.004914724, 0.9999758), (-0.004914372, -0.0049145175, 0.9999758), (-0.004914372, -0.0049145175, 0.9999758), (-0.0049141655, -0.004914724, 0.9999758), (-0.000060216375, -0.009768684, 0.99995226), (-0.000060216375, -0.009768684, 0.99995226), (0.00036523794, -0.00004209796, 0.9999999), (0.00036523794, -0.00004209796, 0.9999999), (0.00016159118, 0.00016153614, 0.99999994), (0.00016159228, 0.00016153502, 0.9999999), (0.00016159228, 0.00016153502, 0.9999999), (0.00016159118, 0.00016153614, 0.99999994), (-0.000042053773, 0.0003651684, 0.99999994), (-0.000042053773, 0.0003651684, 0.99999994)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.913169, 0.914471, 0.418626), (0.913169, 0.914471, 0.388626), (0.30357, 0.304871, 0.418626), (0.30357, 0.304871, 0.388626), (0.913169, -0.91433, 0.418626), (0.913169, -0.914331, 0.388626), (0.30357, -0.91433, 0.418626), (0.30357, -0.91433, 0.388626), (-0.915632, 0.914471, 0.418626), (-0.915632, 0.914471, 0.388626), (-0.915632, 0.304871, 0.388626), (-0.915632, 0.304871, 0.418626), (0.323574, 0.324871, 0.388626), (0.323574, -0.91433, 0.388626), (-0.915632, 0.324871, 0.388626), (-0.915632, 0.324871, 0.418626), (0.323574, 0.324871, 0.418626), (0.323574, -0.91433, 0.418626), (0.322531, 0.323829, -0.437404), (0.323574, -0.914329, -0.437404), (-0.915632, 0.324871, -0.437404), (0.342535, 0.343834, -0.437143), (0.343575, -0.914326, -0.437273), (0.343578, 0.344877, -0.517143), (0.343575, -0.914326, -0.517273), (0.913169, -0.914332, -0.517404), (0.913169, 0.914472, -0.517404), (-0.915633, 0.914472, -0.517404), (-0.915631, 0.344871, -0.437273), (-0.915631, 0.344871, -0.517273)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-9.541759, 1.172035), (-9.541759, 0.250789), (-9.494883, 0.250789), (-9.494883, 1.172035), (-9.510265, 0.21952), (-9.510265, 1.140796), (-9.557138, 1.140796), (-9.557138, 0.21952), (-10.016743, 1.726506), (-10.016743, -1.131009), (-9.969867, -1.131007), (-9.969867, 1.726506), (-11.114737, 1.7265), (-11.114737, -1.131003), (-10.193494, -1.131003), (-10.193494, 0.805253), (-9.464119, -0.15816), (-9.464119, 1.746895), (-9.510992, 1.746895), (-9.510992, -0.15816), (-9.401396, 1.726541), (-9.401396, -1.131047), (-9.354523, -1.131047), (-9.354523, 1.726541), (-9.526376, 1.746874), (-9.526376, -0.158138), (-9.4795, -0.158138), (-9.4795, 1.746874), (-8.257234, 0.805248), (-8.257234, 1.726499), (-11.114737, 1.7265), (-10.193494, 0.805253), (-8.308513, 1.734459), (-8.308513, 1.765716), (-10.244729, 1.765716), (-10.213479, 1.734459), (-10.213479, 1.734459), (-10.244729, 1.765716), (-10.244729, -0.170509), (-10.213479, -0.170509), (-9.510265, 1.140796), (-9.510265, 1.172045), (-9.557138, 1.172045), (-9.557138, 1.140796), (-10.162236, 0.774), (-8.257234, 0.774), (-8.257234, 0.805248), (-10.193494, 0.805253), (-10.193494, -1.131003), (-10.162236, -1.131003), (-10.162236, 0.774), (-10.193494, 0.805253), (-9.541759, 0.250789), (-9.541759, 0.219531), (-9.494883, 0.219531), (-9.494883, 0.250789), (-20.121113, 0.82238), (-20.121113, 0.177044), (-19.153801, 0.177044), (-19.152987, 0.82238), (-20.121115, 0.604265), (-20.1203, -0.041073), (-19.152987, -0.041073), (-19.152987, 0.604265), (-19.302881, -0.136494), (-19.302982, -0.120869), (-19.948217, 0.324131), (-19.948217, -0.136494), (-20.18472, -0.188997), (-19.539484, 0.256001), (-19.539383, 0.271627), (-20.18472, 0.271627), (-19.658186, 0.962328), (-19.658186, 0.899826), (-18.674427, 0.899927), (-18.675241, 0.962427), (-19.476883, -0.188999), (-19.476984, 0.256001), (-19.539484, 0.256001), (-20.18472, -0.188997), (-19.95377, 0.435837), (-19.95377, -0.272003), (-18.525017, -0.272001), (-18.525019, 0.435837), (-18.525019, -0.032083), (-18.525019, 0.675753), (-19.95377, 0.675753), (-19.95377, -0.032084), (-19.302982, -0.120869), (-19.240482, -0.120869), (-19.24038, 0.324131), (-19.948217, 0.324131), (-19.984516, 0.982698), (-19.985329, 0.920198), (-19.001554, 0.920097), (-19.001554, 0.982595), (-20.115873, 1.265289), (-20.131498, 1.265285), (-20.130686, 0.282339), (-20.115059, 0.297966), (-20.115059, 0.297966), (-20.130686, 0.282339), (-19.147734, 0.281527), (-19.147732, 0.297153), (-19.953766, 0.41058), (-19.95377, -0.034418), (-18.525017, -0.034418), (-18.970013, 0.410578), (-18.970013, 0.410578), (-18.525017, -0.034418), (-18.525017, 1.394333), (-18.970016, 1.394333)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_CountertopL_6X6_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                rel material:binding = </root/_materials/M_CountertopL_6X6_0>
            }

            def GeomSubset "M_CountertopL_6X6_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27]
                rel material:binding = </root/_materials/M_CountertopL_6X6_1>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_CountertopL_6X6_0"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopL_6X6_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopL_6X6_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/marbleBase2.jpg@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopL_6X6_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_CountertopL_6X6_1"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopL_6X6_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopL_6X6_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_CountertopL_6X6_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/DarkWood2.tif@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopL_6X6_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopL_6X6_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

