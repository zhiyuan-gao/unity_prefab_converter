#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "Television_4"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Television_4" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.546104, -0.04474, -0.296062), (0.546104, -0.002989, 0.390669)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 22, 28, 29, 24, 28, 23, 25, 29, 37, 36, 22, 24, 24, 29, 38, 37, 39, 38, 29, 25, 40, 39, 25, 23, 41, 36, 45, 44, 37, 38, 47, 46, 39, 40, 53, 52, 36, 37, 46, 45, 38, 39, 52, 47, 40, 41, 44, 53, 76, 78, 84, 82, 78, 79, 85, 84, 79, 77, 83, 85, 80, 76, 82, 86, 77, 81, 87, 83, 81, 80, 86, 87, 82, 84, 90, 88, 84, 85, 91, 90, 85, 83, 89, 91, 86, 82, 88, 92, 83, 87, 93, 89, 87, 86, 92, 93, 94, 95, 103, 102, 95, 94, 96, 97, 97, 96, 98, 99, 99, 98, 100, 101, 101, 100, 104, 105, 102, 103, 105, 104, 41, 40, 96, 94, 40, 23, 98, 96, 23, 28, 100, 98, 36, 41, 94, 102, 28, 22, 104, 100, 22, 36, 102, 104, 95, 97, 78, 76, 97, 99, 79, 78, 99, 101, 77, 79, 103, 95, 76, 80, 101, 105, 81, 77, 105, 103, 80, 81, 4, 5, 7, 6, 42, 43, 44, 45, 46, 47, 48, 49, 51, 50, 52, 53, 49, 42, 45, 46, 48, 47, 52, 50, 44, 43, 51, 53, 20, 26, 32, 33, 27, 21, 35, 34, 20, 31, 43, 42, 30, 26, 49, 48, 21, 27, 50, 51, 26, 20, 42, 49, 27, 30, 48, 50, 31, 21, 51, 43, 33, 32, 54, 55, 34, 35, 57, 56, 26, 30, 59, 58, 32, 26, 58, 54, 31, 20, 60, 61, 20, 33, 55, 60, 30, 27, 62, 59, 27, 34, 56, 62, 21, 31, 61, 63, 35, 21, 63, 57, 55, 54, 64, 67, 56, 57, 69, 68, 58, 59, 71, 70, 54, 58, 70, 64, 61, 60, 72, 73, 60, 55, 67, 72, 59, 62, 74, 71, 62, 56, 68, 74, 63, 61, 73, 75, 57, 63, 75, 69, 8, 9, 11, 10, 89, 88, 90, 91, 92, 88, 89, 93, 12, 13, 15, 14, 64, 65, 66, 67, 66, 65, 68, 69, 70, 71, 65, 64, 73, 72, 67, 66, 71, 74, 68, 65, 75, 73, 66, 69, 16, 17, 19, 18]
            rel material:binding = </root/_materials/M_Television_4_0>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (0, -0.99999994, 0), (0, -1, 0), (0, -1, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -1, 0), (0, -1, 0), (0, -0.99999994, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0, 0, 1), (1.2825528e-8, 0, 1), (1.27375e-8, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1.2825528e-8, 0, 1), (-1.27375e-8, 0, 1), (0, 0, 1), (1.2825528e-8, 0, 1), (0, 0, 1), (0, 0, 1), (1.27375e-8, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1.2825528e-8, 0, 1), (0, 0, 1), (0, 0, 1), (-1.27375e-8, 0, 1), (0, 1, -4.9490154e-8), (0, 1, -2.4745058e-8), (0, 1, -2.4745082e-8), (0, 1, -4.9490154e-8), (0, 1, -2.4745058e-8), (0, 1, 2.4745052e-8), (0, 1, 2.4745072e-8), (0, 1, -2.4745082e-8), (0, 1, 2.4745052e-8), (0, 1, 4.9490136e-8), (0, 1, 4.9490136e-8), (0, 1, 2.4745072e-8), (0, 1, -2.4745058e-8), (0, 1, -4.9490154e-8), (0, 1, -4.9490154e-8), (0, 1, -2.4745082e-8), (0, 1, 4.9490136e-8), (0, 1, 2.4745052e-8), (0, 1, 2.4745072e-8), (0, 1, 4.9490136e-8), (0, 1, 2.4745052e-8), (0, 1, -2.4745058e-8), (0, 1, -2.4745082e-8), (0, 1, 2.4745072e-8), (0, 0, -1), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 0.99999994), (0, 0, 1), (0, 0, 1), (0, 0, 0.99999994), (0, 0, -0.99999994), (0, 0, -1), (0, 0, -1), (0, 0, -0.99999994), (0, 0, 1), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-0.0000025756642, 0.9891778, 0.14672145), (0, 1, 9.303738e-8), (0, 1, 9.303738e-8), (-2.3283064e-8, 0.97132915, 0.23773876), (0, 1, 9.303738e-8), (-0.0000025756642, 0.9891778, 0.14672145), (2.2165477e-7, 0.97132915, 0.23773877), (0, 1, 9.303738e-8), (0, 1, 0), (0.22701012, 0.9738924, 0.0000010309741), (0.22700524, 0.9738936, -8.074567e-7), (0, 1, 0), (0, 1, 0), (0.0000015990809, 0.97133875, -0.23769979), (0.000002575664, 0.9891778, -0.14672165), (0, 1, -4.6524406e-8), (0, 1, -4.6524406e-8), (0.000002575664, 0.9891778, -0.14672165), (-0.0000016959384, 0.97133875, -0.23769984), (0, 1, -9.304881e-8), (-0.22701013, 0.97389233, 4.796311e-7), (0, 1, 0), (0, 1, 0), (-0.22700524, 0.9738936, -0.0000013895333), (0, 0.9399849, 0.34121612), (0, 0.93998486, 0.3412161), (2.2165477e-7, 0.97132915, 0.23773877), (-0.0000025756642, 0.9891778, 0.14672145), (0.32742876, 0.94487584, 0), (0.32742876, 0.94487584, 0), (0.22700524, 0.9738936, -8.074567e-7), (0.22701012, 0.9738924, 0.0000010309741), (0, 0.9399847, -0.34121647), (0, 0.93998474, -0.3412165), (0.000002575664, 0.9891778, -0.14672165), (0.0000015990809, 0.97133875, -0.23769979), (0, 0.93998486, 0.3412161), (0, 0.9399849, 0.34121612), (-0.0000025756642, 0.9891778, 0.14672145), (-2.3283064e-8, 0.97132915, 0.23773876), (0, 0.93998474, -0.3412165), (0, 0.9399847, -0.34121647), (-0.0000016959384, 0.97133875, -0.23769984), (0.000002575664, 0.9891778, -0.14672165), (-0.32742876, 0.94487584, 0), (-0.32742876, 0.94487584, 0), (-0.22701013, 0.97389233, 4.796311e-7), (-0.22700524, 0.9738936, -0.0000013895333), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0.010387071, 0.999946, 0), (0, 1, 0), (0, 1, 0), (0.010387071, 0.999946, 0), (0.010387071, -0.999946, 0), (0, -1, 0), (0, -1, 0), (0.010387071, -0.999946, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (-0.010387071, -0.999946, 0), (-0.010387071, -0.999946, 0), (0, 1, 0), (0, 1, 0), (-0.010387071, 0.999946, 0), (-0.010387071, 0.999946, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1.2825528e-8, 0, -1), (0, 0, -1), (0, 0, -1), (-1.27375e-8, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1.2825528e-8, 0, -1), (0, 0, -1), (0, 0, -1), (1.27375e-8, 0, -1), (0, 0, -1), (-1.2825528e-8, 0, -1), (-1.27375e-8, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1.2825528e-8, 0, -1), (1.27375e-8, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.0022868426, -0.9999968, -0.001126424), (0, -0.9999836, -0.005733146), (0, -0.9999836, -0.005733146), (-0.0022797007, -0.9999968, -0.0011407953), (-0.0026921208, -0.99999636, -0.00031759002), (-0.0022868426, -0.9999968, -0.001126424), (-0.0022797007, -0.9999968, -0.0011407953), (-0.0026921208, -0.99999636, -0.00031759002), (0, 0.9941192, 0.10829134), (-0.00010509654, 0.9940964, 0.10850032), (-0.00010510383, 0.9940964, 0.10850033), (0, 0.9941192, 0.10829134), (-0.00010509654, 0.9940964, 0.10850032), (-0.000210204, 0.99407357, 0.10870932), (-0.000210204, 0.99407357, 0.10870932), (-0.00010510383, 0.9940964, 0.10850033), (0, -0.9999836, -0.005733146), (0.0022897087, -0.99999684, -0.0010214021), (0.0022797005, -0.9999968, -0.0011407953), (0, -0.9999836, -0.005733146), (0.0022897087, -0.99999684, -0.0010214021), (0.0026921208, -0.99999636, -0.00031759002), (0.0026921208, -0.99999636, -0.00031759002), (0.0022797005, -0.9999968, -0.0011407953), (0.00010509654, 0.9940964, 0.10850032), (0, 0.9941192, 0.10829134), (0, 0.9941192, 0.10829134), (0.00010510383, 0.9940964, 0.10850033), (0.000210204, 0.99407357, 0.10870932), (0.00010509654, 0.9940964, 0.10850032), (0.00010510383, 0.9940964, 0.10850033), (0.000210204, 0.99407357, 0.10870932), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.99999994, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.99999994, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 1, 0), (0, 1, 0), (0, 0.99999994, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 0.99999994), (0, 0, 1), (0, 0, 1), (0, 0, 0.99999994), (0, 0, 1), (0, 0, 1), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, -0.99999994, 0), (0, -1, 0), (0, -1, 0), (0, -0.99999994, 0), (0, 0.9940516, 0.10891031), (0, 0.99405164, 0.108910315), (0, 0.99405164, 0.108910315), (0, 0.9940516, 0.10891031), (0, -1, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -1, 0), (0, 0.99405164, 0.108910315), (0, 0.9940516, 0.10891031), (0, 0.9940516, 0.10891031), (0, 0.99405164, 0.108910315), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.000799, -0.004588, 0.069715), (-0.000799, -0.004588, 0.069715), (0.000799, -0.002989, 0.069715), (-0.000799, -0.002989, 0.069715), (0.000799, -0.004588, 0.069715), (-0.000799, -0.004588, 0.069715), (0.000799, -0.002989, 0.069715), (-0.000799, -0.002989, 0.069715), (0.000799, -0.004588, 0.069715), (-0.000799, -0.004588, 0.069715), (0.000799, -0.002989, 0.069715), (-0.000799, -0.002989, 0.069715), (0.000799, -0.004588, 0.069715), (-0.000799, -0.004588, 0.069715), (0.000799, -0.002989, 0.069715), (-0.000799, -0.002989, 0.069715), (0.000799, -0.004588, 0.069715), (-0.000799, -0.004588, 0.069715), (0.000799, -0.002989, 0.069715), (-0.000799, -0.002989, 0.069715), (0.546104, -0.040837, -0.201353), (-0.546104, -0.040837, -0.201353), (0.546104, -0.040837, 0.390669), (-0.546104, -0.040837, 0.390669), (0.546104, -0.003789, 0.390669), (-0.546104, -0.003789, 0.390669), (0.546104, -0.003789, -0.201353), (-0.546104, -0.003789, -0.201353), (0, -0.040837, 0.390669), (0, -0.003789, 0.390669), (0, -0.003789, -0.201353), (0, -0.040837, -0.201353), (0.546104, -0.003732, -0.296062), (0.546104, -0.030482, -0.296062), (-0.546104, -0.003732, -0.296062), (-0.546104, -0.030482, -0.296062), (0.546104, -0.040837, -0.193929), (0.546104, -0.003789, -0.193929), (0, -0.003789, -0.193929), (-0.546104, -0.003789, -0.193929), (-0.546104, -0.040837, -0.193929), (0, -0.040837, -0.193929), (0.540547, -0.03522, -0.201353), (0, -0.029605, -0.201353), (0, -0.029605, -0.193929), (0.540547, -0.03522, -0.193929), (0.540547, -0.009403, -0.193929), (0, -0.015018, -0.193929), (0, -0.015018, -0.201353), (0.540547, -0.009403, -0.201353), (-0.540547, -0.009403, -0.201353), (-0.540547, -0.03522, -0.201353), (-0.540547, -0.009403, -0.193929), (-0.540547, -0.03522, -0.193929), (0.536104, -0.003732, -0.296062), (0.536104, -0.030482, -0.296062), (-0.536104, -0.003732, -0.296062), (-0.536104, -0.030482, -0.296062), (0.536104, -0.003732, -0.211295), (0, -0.003732, -0.211295), (0.536104, -0.039754, -0.211295), (0, -0.039754, -0.211295), (-0.536104, -0.003732, -0.211295), (-0.536104, -0.039754, -0.211295), (0.536104, -0.007537, -0.292062), (0, -0.007537, -0.292062), (0, -0.026889, -0.292062), (0.536104, -0.026889, -0.292062), (-0.536104, -0.007537, -0.292062), (-0.536104, -0.026889, -0.292062), (0.536104, -0.007537, -0.211295), (0, -0.007537, -0.211295), (0.536104, -0.035738, -0.211295), (0, -0.035738, -0.211295), (-0.536104, -0.007537, -0.211295), (-0.536104, -0.035738, -0.211295), (0, -0.031688, -0.174929), (0, -0.031688, 0.37167), (-0.527104, -0.031688, -0.174929), (-0.527104, -0.031688, 0.37167), (0.527104, -0.031688, -0.174929), (0.527104, -0.031688, 0.37167), (0, -0.031688, -0.137929), (0, -0.031688, 0.33467), (-0.490104, -0.031688, -0.137929), (-0.490104, -0.031688, 0.33467), (0.490104, -0.031688, -0.137929), (0.490104, -0.031688, 0.33467), (0, -0.024634, -0.137929), (0, -0.024634, 0.33467), (-0.490104, -0.024634, -0.137929), (-0.490104, -0.024634, 0.33467), (0.490104, -0.024634, -0.137929), (0.490104, -0.024634, 0.33467), (0, -0.04474, -0.183177), (0, -0.04474, -0.174929), (-0.534841, -0.04474, -0.183177), (-0.527104, -0.04474, -0.174929), (-0.534841, -0.04474, 0.379917), (-0.527104, -0.04474, 0.37167), (0, -0.04474, 0.379917), (0, -0.04474, 0.37167), (0.534841, -0.04474, -0.183177), (0.527104, -0.04474, -0.174929), (0.534841, -0.04474, 0.379917), (0.527104, -0.04474, 0.37167)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-43.702526, -17.630894), (-43.70171, -17.630894), (-43.70171, -17.630075), (-43.702526, -17.630075), (-45.171474, -0.048853), (-44.10483, -0.048854), (-44.104824, 0.023501), (-45.17148, 0.023504), (-44.10483, -0.048854), (-43.038177, -0.048853), (-43.03818, 0.023504), (-44.104824, 0.023501), (-43.910107, 0.928184), (-43.91011, 1.00054), (-45.05192, 1.00054), (-45.05192, 0.928179), (-45.171432, -0.417764), (-44.104828, -0.41776), (-44.104824, 0.724029), (-45.171432, 0.724028), (-43.038216, 0.724033), (-44.104824, 0.724029), (-44.104828, -0.41776), (-43.038216, -0.41776), (-43.947933, 0.903055), (-43.947926, 0.975428), (-45.089935, 0.975423), (-45.089935, 0.903056), (-44.104824, 0.355026), (-45.171177, 0.355025), (-45.16032, 0.344047), (-44.104824, 0.333086), (-45.171177, 0.282666), (-44.104824, 0.282667), (-44.104828, 0.304609), (-45.16032, 0.293632), (-43.038483, 0.28267), (-43.038483, 0.355025), (-43.049328, 0.34405), (-43.049328, 0.293636), (-45.171177, 0.355025), (-45.171177, 0.282666), (-45.16032, 0.293632), (-45.16032, 0.344047), (-44.104824, 0.282667), (-43.038483, 0.28267), (-43.049328, 0.293636), (-44.104828, 0.304609), (-43.038483, 0.355025), (-44.104824, 0.355026), (-44.104824, 0.333086), (-43.049328, 0.34405), (-44.09509, 0.246906), (-43.065582, 0.246906), (-43.137848, 0.31917), (-44.09509, 0.31917), (-43.065582, 0.246906), (-43.065586, 1.3145), (-43.137848, 1.242232), (-43.137848, 0.31917), (-43.065586, 1.3145), (-44.095093, 1.314501), (-44.09509, 1.242229), (-43.137848, 1.242232), (-45.1246, 0.246902), (-44.09509, 0.246906), (-44.09509, 0.31917), (-45.052338, 0.319174), (-44.095093, 1.314501), (-45.124603, 1.314501), (-45.05233, 1.242229), (-44.09509, 1.242229), (-45.124603, 1.314501), (-45.1246, 0.246902), (-45.052338, 0.319174), (-45.05233, 1.242229), (-44.076138, 0.949373), (-43.11955, 0.949373), (-43.11955, 0.963147), (-44.076138, 0.963151), (-44.02879, 0.903056), (-44.951687, 0.903056), (-44.95169, 0.889269), (-44.028793, 0.889269), (-43.118362, 0.974838), (-44.076138, 0.974841), (-44.07613, 0.961058), (-43.11837, 0.961061), (-45.032722, 0.949369), (-44.076138, 0.949373), (-44.076138, 0.963151), (-45.032722, 0.963147), (-44.076138, 0.974841), (-45.0339, 0.974839), (-45.0339, 0.961061), (-44.07613, 0.961058), (-44.951187, 0.879529), (-44.029297, 0.879529), (-44.029297, 0.893285), (-44.951187, 0.893286), (-44.10483, -0.075213), (-44.104824, -0.058818), (-45.15262, -0.058812), (-45.168003, -0.075216), (-44.104824, -0.058818), (-44.10483, -0.075213), (-43.041653, -0.075216), (-43.05703, -0.058815), (-43.05703, -0.058815), (-43.041653, -0.075216), (-43.041653, 1.044127), (-43.057037, 1.027726), (-43.057037, 1.027726), (-43.041653, 1.044127), (-44.104824, 1.044124), (-44.10483, 1.027726), (-44.10483, 1.027726), (-44.104824, 1.044124), (-45.168003, 1.044123), (-45.15262, 1.027727), (-45.168003, -0.075216), (-45.15262, -0.058812), (-45.15262, 1.027727), (-45.168003, 1.044123), (-44.104824, -0.096587), (-43.01926, -0.096585), (-43.041653, -0.075216), (-44.10483, -0.075213), (-43.01926, -0.096585), (-43.019264, 1.065498), (-43.041653, 1.044127), (-43.041653, -0.075216), (-43.019264, 1.065498), (-44.10483, 1.065495), (-44.104824, 1.044124), (-43.041653, 1.044127), (-45.19039, -0.096583), (-44.104824, -0.096587), (-44.10483, -0.075213), (-45.168003, -0.075216), (-44.10483, 1.065495), (-45.190388, 1.065496), (-45.168003, 1.044123), (-44.104824, 1.044124), (-45.190388, 1.065496), (-45.19039, -0.096583), (-45.168003, -0.075216), (-45.168003, 1.044123), (-44.09509, 0.917772), (-43.065617, 0.917772), (-43.065617, 0.943262), (-44.09509, 0.943262), (-43.975414, 0.933009), (-45.04298, 0.933013), (-45.04298, 0.907523), (-43.975414, 0.907519), (-43.065426, 0.956908), (-44.095093, 0.956906), (-44.09509, 0.93141), (-43.06543, 0.93141), (-45.124565, 0.917772), (-44.09509, 0.917772), (-44.09509, 0.943262), (-45.12456, 0.943262), (-44.095093, 0.956906), (-45.12476, 0.956912), (-45.124756, 0.931414), (-44.09509, 0.93141), (-45.04271, 0.894704), (-43.975685, 0.894702), (-43.97569, 0.920181), (-45.04271, 0.920179), (-31.065247, -18.17474), (-31.06379, -18.17474), (-31.06379, -18.173283), (-31.065247, -18.173283), (-31.333117, 1.550957), (-31.333117, 0.494933), (-31.31862, 0.494933), (-31.31862, 1.550957), (-31.320627, 1.550957), (-31.320627, 0.494932), (-31.306131, 0.494932), (-31.306131, 1.550957), (-31.094086, 0.038977), (-31.094086, -0.01145), (-31.079586, -0.01145), (-31.079586, 0.038977), (-31.081596, 0.038975), (-31.081596, -0.011448), (-31.067097, -0.011448), (-31.067097, 0.038975), (-31.306131, 0.494932), (-31.320627, 0.494932), (-31.320627, -0.561092), (-31.306131, -0.561092), (-31.31862, 0.494933), (-31.333117, 0.494933), (-31.333117, -0.561092), (-31.31862, -0.561092), (-31.229715, 0.137664), (-31.302076, 0.137664), (-31.30219, -0.047312), (-31.249945, -0.047312), (-31.1888, 0.137667), (-31.261156, 0.137667), (-31.240944, -0.047314), (-31.188696, -0.047314), (-31.573484, 1.566759), (-31.573484, 0.5), (-31.551544, 0.5), (-31.56251, 1.555903), (-31.50112, 0.5), (-31.50112, 1.566759), (-31.512077, 1.555903), (-31.523043, 0.5), (-31.573484, -0.566758), (-31.50112, -0.566758), (-31.512077, -0.555903), (-31.56251, -0.555903), (-31.50112, 1.566759), (-31.573484, 1.566759), (-31.56251, 1.555903), (-31.512077, 1.555903), (-31.50112, -0.566758), (-31.50112, 0.5), (-31.523043, 0.5), (-31.512077, -0.555903), (-31.573484, 0.5), (-31.573484, -0.566758), (-31.56251, -0.555903), (-31.551544, 0.5), (-31.127535, 0.040313), (-31.127535, -0.011934), (-31.108004, -0.011934), (-31.108004, 0.040313), (-31.091948, -0.011934), (-31.091948, 0.040313), (-31.111479, 0.040313), (-31.111479, -0.011934), (-31.564066, 1.566448), (-31.564066, 0.5), (-31.544641, 0.5), (-31.544641, 1.54692), (-31.379107, 1.566448), (-31.564066, 1.566448), (-31.544641, 1.54692), (-31.379107, 1.54692), (-31.286068, 0.5), (-31.286068, 1.569755), (-31.305546, 1.550166), (-31.305546, 0.5), (-31.286068, 1.569755), (-31.471592, 1.569755), (-31.471592, 1.550166), (-31.305546, 1.550166), (-31.564066, 0.5), (-31.564066, -0.566448), (-31.544641, -0.54692), (-31.544641, 0.5), (-31.564066, -0.566448), (-31.379107, -0.566448), (-31.379107, -0.54692), (-31.544641, -0.54692), (-31.286068, -0.569754), (-31.286068, 0.5), (-31.305546, 0.5), (-31.305546, -0.550166), (-31.471592, -0.569754), (-31.286068, -0.569754), (-31.305546, -0.550166), (-31.471592, -0.550166), (-31.20146, -0.042133), (-31.149216, -0.042133), (-31.156649, -0.034321), (-31.194443, -0.034321), (-31.180325, -0.042138), (-31.128077, -0.042138), (-31.135096, -0.034326), (-31.172892, -0.034326), (-31.306263, 1.537282), (-31.306263, 0.490881), (-31.298824, 0.490881), (-31.298824, 1.537282), (-31.149216, -0.042133), (-31.149216, 0.123418), (-31.156649, 0.123418), (-31.156649, -0.034321), (-31.28782, 0.490881), (-31.28782, 1.538022), (-31.295664, 1.538022), (-31.295664, 0.490881), (-31.21957, 0.123418), (-31.20146, -0.042133), (-31.194443, -0.034321), (-31.21173, 0.123418), (-31.306263, 0.490881), (-31.306263, -0.555519), (-31.298824, -0.555519), (-31.298824, 0.490881), (-31.180325, 0.123423), (-31.180325, -0.042138), (-31.172892, -0.034326), (-31.172892, 0.123423), (-31.28782, -0.55626), (-31.28782, 0.490881), (-31.295664, 0.490881), (-31.295664, -0.55626), (-31.128077, -0.042138), (-31.109974, 0.123423), (-31.117815, 0.123423), (-31.135096, -0.034326), (-19.204947, -17.666058), (-19.204208, -17.666058), (-19.204208, -17.66532), (-19.204947, -17.66532), (0.5, 0.629742), (0.5, 0.147601), (1, 0.147601), (1, 0.629742), (-0, 0.147601), (0.5, 0.147601), (0.5, 0.629742), (-0, 0.629742), (-7.803469, -17.666058), (-7.80273, -17.666058), (-7.80273, -17.66532), (-7.803469, -17.66532), (-7.161953, 1.296892), (-7.161953, 0.24982), (-7.124157, 0.24982), (-7.124157, 1.296892), (-7.124157, 0.24982), (-7.161953, 0.24982), (-7.161953, -0.797253), (-7.124157, -0.797253), (-7.296365, 1.296897), (-7.296365, 0.24982), (-7.138618, 0.24982), (-7.138618, 1.296897), (-7.094067, 0.24982), (-7.094067, 1.300026), (-7.252285, 1.300026), (-7.252285, 0.24982), (-7.296365, 0.24982), (-7.296365, -0.797258), (-7.138618, -0.797258), (-7.138618, 0.24982), (-7.094067, -0.800387), (-7.094067, 0.24982), (-7.252285, 0.24982), (-7.252285, -0.800387), (-7.81002, -17.666058), (-7.809281, -17.666058), (-7.809281, -17.66532), (-7.81002, -17.66532)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_Television_4_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42]
                rel material:binding = </root/_materials/M_Television_4_0>
            }

            def GeomSubset "M_Television_4_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77]
                rel material:binding = </root/_materials/M_Television_4_1>
            }

            def GeomSubset "M_Television_4_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [78, 79, 80]
                rel material:binding = </root/_materials/M_Television_4_2>
            }

            def GeomSubset "M_Television_4_3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [81, 82, 83, 84, 85, 86, 87]
                rel material:binding = </root/_materials/M_Television_4_3>
            }

            def GeomSubset "M_Television_4_4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [88]
                rel material:binding = </root/_materials/M_Television_4_4>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_Television_4_0"
        {
            token outputs:surface.connect = </root/_materials/M_Television_4_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.19852942, 0.19852942, 0.19852942)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_Television_4_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Television_4_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_Television_4_1"
        {
            token outputs:surface.connect = </root/_materials/M_Television_4_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_Television_4_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_Television_4_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Television_4_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Television_4_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_Television_4_2"
        {
            token outputs:surface.connect = </root/_materials/M_Television_4_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0, 0, 0)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }

        def Material "M_Television_4_3"
        {
            token outputs:surface.connect = </root/_materials/M_Television_4_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.5661765, 0.5661765, 0.5661765)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }

        def Material "M_Television_4_4"
        {
            token outputs:surface.connect = </root/_materials/M_Television_4_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.8, 0.8, 0.8)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 1
                float inputs:specular = 0
                token outputs:surface
            }
        }
    }
}

