#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshTelevision_4_0_GeomSubset_0"
    {
        def Mesh "MeshTelevision_4_0_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 22, 28, 29, 24, 28, 23, 25, 29, 37, 36, 22, 24, 24, 29, 38, 37, 39, 38, 29, 25, 40, 39, 25, 23, 41, 36, 45, 44, 37, 38, 47, 46, 39, 40, 53, 52, 36, 37, 46, 45, 38, 39, 52, 47, 40, 41, 44, 53, 76, 78, 84, 82, 78, 79, 85, 84, 79, 77, 83, 85, 80, 76, 82, 86, 77, 81, 87, 83, 81, 80, 86, 87, 82, 84, 90, 88, 84, 85, 91, 90, 85, 83, 89, 91, 86, 82, 88, 92, 83, 87, 93, 89, 87, 86, 92, 93, 94, 95, 103, 102, 95, 94, 96, 97, 97, 96, 98, 99, 99, 98, 100, 101, 101, 100, 104, 105, 102, 103, 105, 104, 41, 40, 96, 94, 40, 23, 98, 96, 23, 28, 100, 98, 36, 41, 94, 102, 28, 22, 104, 100, 22, 36, 102, 104, 95, 97, 78, 76, 97, 99, 79, 78, 99, 101, 77, 79, 103, 95, 76, 80, 101, 105, 81, 77, 105, 103, 80, 81]
            rel material:binding = </root/_materials/M_Television_4_0>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (0, 0.99999994, 0), (0, 1, 0), (0, 1, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 1, 0), (0, 1, 0), (0, 0.99999994, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0, 0, -1), (1.2825528e-8, 0, -1), (1.27375e-8, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1.2825528e-8, 0, -1), (-1.27375e-8, 0, -1), (0, 0, -1), (1.2825528e-8, 0, -1), (0, 0, -1), (0, 0, -1), (1.27375e-8, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1.2825528e-8, 0, -1), (0, 0, -1), (0, 0, -1), (-1.27375e-8, 0, -1), (0, -1, 4.9490154e-8), (0, -1, 2.4745058e-8), (0, -1, 2.4745082e-8), (0, -1, 4.9490154e-8), (0, -1, 2.4745058e-8), (0, -1, -2.4745052e-8), (0, -1, -2.4745072e-8), (0, -1, 2.4745082e-8), (0, -1, -2.4745052e-8), (0, -1, -4.9490136e-8), (0, -1, -4.9490136e-8), (0, -1, -2.4745072e-8), (0, -1, 2.4745058e-8), (0, -1, 4.9490154e-8), (0, -1, 4.9490154e-8), (0, -1, 2.4745082e-8), (0, -1, -4.9490136e-8), (0, -1, -2.4745052e-8), (0, -1, -2.4745072e-8), (0, -1, -4.9490136e-8), (0, -1, -2.4745052e-8), (0, -1, 2.4745058e-8), (0, -1, 2.4745082e-8), (0, -1, -2.4745072e-8), (0, 0, 1), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -0.99999994), (0, 0, -1), (0, 0, -1), (0, 0, -0.99999994), (0, 0, 0.99999994), (0, 0, 1), (0, 0, 1), (0, 0, 0.99999994), (0, 0, -1), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.0000028777818, -0.97924215, -0.2026937), (0, -1, -9.303738e-8), (0, -1, -9.303738e-8), (2.6077032e-8, -0.96105057, -0.27637276), (0, -1, -9.303738e-8), (0.0000028777818, -0.97924215, -0.2026937), (-2.4680048e-7, -0.96105057, -0.27637276), (0, -1, -9.303738e-8), (0, -1, 0), (0.27378714, -0.9617903, 0.0000011390075), (0.27378234, -0.96179175, -8.912757e-7), (0, -1, 0), (0, -1, 0), (-0.0000017732382, -0.9610491, 0.27637783), (-0.000002877782, -0.97924215, 0.2026939), (0, -1, 4.6524406e-8), (0, -1, 4.6524406e-8), (-0.000002877782, -0.97924215, 0.2026939), (0.0000018822029, -0.9610491, 0.27637786), (0, -1, 9.304881e-8), (-0.27378714, -0.9617903, 5.289912e-7), (0, -1, 0), (0, -1, 0), (-0.27378234, -0.9617917, -0.0000015338883), (0, -0.9399849, -0.34121612), (0, -0.93998486, -0.3412161), (-2.4680048e-7, -0.96105057, -0.27637276), (0.0000028777818, -0.97924215, -0.2026937), (0.32742876, -0.94487584, 0), (0.32742876, -0.94487584, 0), (0.27378234, -0.96179175, -8.912757e-7), (0.27378714, -0.9617903, 0.0000011390075), (0, -0.9399847, 0.34121647), (0, -0.93998474, 0.3412165), (-0.000002877782, -0.97924215, 0.2026939), (-0.0000017732382, -0.9610491, 0.27637783), (0, -0.93998486, -0.3412161), (0, -0.9399849, -0.34121612), (0.0000028777818, -0.97924215, -0.2026937), (2.6077032e-8, -0.96105057, -0.27637276), (0, -0.93998474, 0.3412165), (0, -0.9399847, 0.34121647), (0.0000018822029, -0.9610491, 0.27637786), (-0.000002877782, -0.97924215, 0.2026939), (-0.32742876, -0.94487584, 0), (-0.32742876, -0.94487584, 0), (-0.27378714, -0.9617903, 5.289912e-7), (-0.27378234, -0.9617917, -0.0000015338883), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.000799, -0.004588, 0.069715), (0.000799, -0.004588, 0.069715), (-0.000799, -0.002989, 0.069715), (0.000799, -0.002989, 0.069715), (-0.000799, -0.004588, 0.069715), (0.000799, -0.004588, 0.069715), (-0.000799, -0.002989, 0.069715), (0.000799, -0.002989, 0.069715), (-0.000799, -0.004588, 0.069715), (0.000799, -0.004588, 0.069715), (-0.000799, -0.002989, 0.069715), (0.000799, -0.002989, 0.069715), (-0.000799, -0.004588, 0.069715), (0.000799, -0.004588, 0.069715), (-0.000799, -0.002989, 0.069715), (0.000799, -0.002989, 0.069715), (-0.000799, -0.004588, 0.069715), (0.000799, -0.004588, 0.069715), (-0.000799, -0.002989, 0.069715), (0.000799, -0.002989, 0.069715), (-0.546104, -0.040837, -0.201353), (0.546104, -0.040837, -0.201353), (-0.546104, -0.040837, 0.390669), (0.546104, -0.040837, 0.390669), (-0.546104, -0.003789, 0.390669), (0.546104, -0.003789, 0.390669), (-0.546104, -0.003789, -0.201353), (0.546104, -0.003789, -0.201353), (0, -0.040837, 0.390669), (0, -0.003789, 0.390669), (0, -0.003789, -0.201353), (0, -0.040837, -0.201353), (-0.546104, -0.003732, -0.296062), (-0.546104, -0.030482, -0.296062), (0.546104, -0.003732, -0.296062), (0.546104, -0.030482, -0.296062), (-0.546104, -0.040837, -0.193929), (-0.546104, -0.003789, -0.193929), (0, -0.003789, -0.193929), (0.546104, -0.003789, -0.193929), (0.546104, -0.040837, -0.193929), (0, -0.040837, -0.193929), (-0.540547, -0.03522, -0.201353), (-0, -0.029605, -0.201353), (-0, -0.029605, -0.193929), (-0.540547, -0.03522, -0.193929), (-0.540547, -0.009403, -0.193929), (-0, -0.015018, -0.193929), (-0, -0.015018, -0.201353), (-0.540547, -0.009403, -0.201353), (0.540547, -0.009403, -0.201353), (0.540547, -0.03522, -0.201353), (0.540547, -0.009403, -0.193929), (0.540547, -0.03522, -0.193929), (-0.536104, -0.003732, -0.296062), (-0.536104, -0.030482, -0.296062), (0.536104, -0.003732, -0.296062), (0.536104, -0.030482, -0.296062), (-0.536104, -0.003732, -0.211295), (0, -0.003732, -0.211295), (-0.536104, -0.039754, -0.211295), (0, -0.039754, -0.211295), (0.536104, -0.003732, -0.211295), (0.536104, -0.039754, -0.211295), (-0.536104, -0.007537, -0.292062), (-0, -0.007537, -0.292062), (-0, -0.026889, -0.292062), (-0.536104, -0.026889, -0.292062), (0.536104, -0.007537, -0.292062), (0.536104, -0.026889, -0.292062), (-0.536104, -0.007537, -0.211295), (0, -0.007537, -0.211295), (-0.536104, -0.035738, -0.211295), (0, -0.035738, -0.211295), (0.536104, -0.007537, -0.211295), (0.536104, -0.035738, -0.211295), (0, -0.031688, -0.174929), (0, -0.031688, 0.37167), (0.527104, -0.031688, -0.174929), (0.527104, -0.031688, 0.37167), (-0.527104, -0.031688, -0.174929), (-0.527104, -0.031688, 0.37167), (0, -0.031688, -0.137929), (0, -0.031688, 0.33467), (0.490104, -0.031688, -0.137929), (0.490104, -0.031688, 0.33467), (-0.490104, -0.031688, -0.137929), (-0.490104, -0.031688, 0.33467), (0, -0.024634, -0.137929), (0, -0.024634, 0.33467), (0.490104, -0.024634, -0.137929), (0.490104, -0.024634, 0.33467), (-0.490104, -0.024634, -0.137929), (-0.490104, -0.024634, 0.33467), (0, -0.04474, -0.183177), (0, -0.04474, -0.174929), (0.534841, -0.04474, -0.183177), (0.527104, -0.04474, -0.174929), (0.534841, -0.04474, 0.379917), (0.527104, -0.04474, 0.37167), (0, -0.04474, 0.379917), (0, -0.04474, 0.37167), (-0.534841, -0.04474, -0.183177), (-0.527104, -0.04474, -0.174929), (-0.534841, -0.04474, 0.379917), (-0.527104, -0.04474, 0.37167)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-43.702526, -17.630894), (-43.70171, -17.630894), (-43.70171, -17.630075), (-43.702526, -17.630075), (-45.171474, -0.048853), (-44.10483, -0.048854), (-44.104824, 0.023501), (-45.17148, 0.023504), (-44.10483, -0.048854), (-43.038177, -0.048853), (-43.03818, 0.023504), (-44.104824, 0.023501), (-43.910107, 0.928184), (-43.91011, 1.00054), (-45.05192, 1.00054), (-45.05192, 0.928179), (-45.171432, -0.417764), (-44.104828, -0.41776), (-44.104824, 0.724029), (-45.171432, 0.724028), (-43.038216, 0.724033), (-44.104824, 0.724029), (-44.104828, -0.41776), (-43.038216, -0.41776), (-43.947933, 0.903055), (-43.947926, 0.975428), (-45.089935, 0.975423), (-45.089935, 0.903056), (-44.104824, 0.355026), (-45.171177, 0.355025), (-45.16032, 0.344047), (-44.104824, 0.333086), (-45.171177, 0.282666), (-44.104824, 0.282667), (-44.104828, 0.304609), (-45.16032, 0.293632), (-43.038483, 0.28267), (-43.038483, 0.355025), (-43.049328, 0.34405), (-43.049328, 0.293636), (-45.171177, 0.355025), (-45.171177, 0.282666), (-45.16032, 0.293632), (-45.16032, 0.344047), (-44.104824, 0.282667), (-43.038483, 0.28267), (-43.049328, 0.293636), (-44.104828, 0.304609), (-43.038483, 0.355025), (-44.104824, 0.355026), (-44.104824, 0.333086), (-43.049328, 0.34405), (-44.09509, 0.246906), (-43.065582, 0.246906), (-43.137848, 0.31917), (-44.09509, 0.31917), (-43.065582, 0.246906), (-43.065586, 1.3145), (-43.137848, 1.242232), (-43.137848, 0.31917), (-43.065586, 1.3145), (-44.095093, 1.314501), (-44.09509, 1.242229), (-43.137848, 1.242232), (-45.1246, 0.246902), (-44.09509, 0.246906), (-44.09509, 0.31917), (-45.052338, 0.319174), (-44.095093, 1.314501), (-45.124603, 1.314501), (-45.05233, 1.242229), (-44.09509, 1.242229), (-45.124603, 1.314501), (-45.1246, 0.246902), (-45.052338, 0.319174), (-45.05233, 1.242229), (-44.076138, 0.949373), (-43.11955, 0.949373), (-43.11955, 0.963147), (-44.076138, 0.963151), (-44.02879, 0.903056), (-44.951687, 0.903056), (-44.95169, 0.889269), (-44.028793, 0.889269), (-43.118362, 0.974838), (-44.076138, 0.974841), (-44.07613, 0.961058), (-43.11837, 0.961061), (-45.032722, 0.949369), (-44.076138, 0.949373), (-44.076138, 0.963151), (-45.032722, 0.963147), (-44.076138, 0.974841), (-45.0339, 0.974839), (-45.0339, 0.961061), (-44.07613, 0.961058), (-44.951187, 0.879529), (-44.029297, 0.879529), (-44.029297, 0.893285), (-44.951187, 0.893286), (-44.10483, -0.075213), (-44.104824, -0.058818), (-45.15262, -0.058812), (-45.168003, -0.075216), (-44.104824, -0.058818), (-44.10483, -0.075213), (-43.041653, -0.075216), (-43.05703, -0.058815), (-43.05703, -0.058815), (-43.041653, -0.075216), (-43.041653, 1.044127), (-43.057037, 1.027726), (-43.057037, 1.027726), (-43.041653, 1.044127), (-44.104824, 1.044124), (-44.10483, 1.027726), (-44.10483, 1.027726), (-44.104824, 1.044124), (-45.168003, 1.044123), (-45.15262, 1.027727), (-45.168003, -0.075216), (-45.15262, -0.058812), (-45.15262, 1.027727), (-45.168003, 1.044123), (-44.104824, -0.096587), (-43.01926, -0.096585), (-43.041653, -0.075216), (-44.10483, -0.075213), (-43.01926, -0.096585), (-43.019264, 1.065498), (-43.041653, 1.044127), (-43.041653, -0.075216), (-43.019264, 1.065498), (-44.10483, 1.065495), (-44.104824, 1.044124), (-43.041653, 1.044127), (-45.19039, -0.096583), (-44.104824, -0.096587), (-44.10483, -0.075213), (-45.168003, -0.075216), (-44.10483, 1.065495), (-45.190388, 1.065496), (-45.168003, 1.044123), (-44.104824, 1.044124), (-45.190388, 1.065496), (-45.19039, -0.096583), (-45.168003, -0.075216), (-45.168003, 1.044123), (-44.09509, 0.917772), (-43.065617, 0.917772), (-43.065617, 0.943262), (-44.09509, 0.943262), (-43.975414, 0.933009), (-45.04298, 0.933013), (-45.04298, 0.907523), (-43.975414, 0.907519), (-43.065426, 0.956908), (-44.095093, 0.956906), (-44.09509, 0.93141), (-43.06543, 0.93141), (-45.124565, 0.917772), (-44.09509, 0.917772), (-44.09509, 0.943262), (-45.12456, 0.943262), (-44.095093, 0.956906), (-45.12476, 0.956912), (-45.124756, 0.931414), (-44.09509, 0.93141), (-45.04271, 0.894704), (-43.975685, 0.894702), (-43.97569, 0.920181), (-45.04271, 0.920179)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_Television_4_0"
        {
            token outputs:surface.connect = </root/_materials/M_Television_4_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.19852942, 0.19852942, 0.19852942)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_Television_4_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Television_4_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

