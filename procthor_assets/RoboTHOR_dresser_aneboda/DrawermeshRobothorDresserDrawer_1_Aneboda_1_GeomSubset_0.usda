#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "DrawermeshRobothorDresserDrawer_1_Aneboda_1_GeomSubset_0"
    {
        def Mesh "DrawermeshRobothorDresserDrawer_1_Aneboda_1_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 5, 4, 1, 3, 6, 5, 0, 2, 7, 6, 3, 1, 4, 7, 2, 1, 14, 15, 0, 12, 3, 0, 15, 2, 13, 14, 1, 3, 12, 13, 2, 6, 10, 9, 5, 8, 4, 5, 9, 7, 11, 10, 6, 4, 8, 11, 7, 9, 13, 12, 8, 10, 14, 13, 9, 11, 15, 14, 10, 8, 12, 15, 11, 22, 16, 17, 23, 23, 17, 18, 24, 24, 18, 19, 25, 25, 19, 20, 26, 26, 20, 21, 27, 27, 21, 16, 22, 18, 17, 20, 19, 20, 17, 16, 21, 22, 23, 26, 27, 24, 25, 26, 23, 30, 31, 28, 29, 28, 33, 32, 29, 31, 34, 33, 28, 30, 35, 34, 31, 29, 32, 35, 30, 48, 49, 50, 51, 40, 41, 43, 42, 42, 43, 37, 36, 37, 43, 41, 39, 42, 36, 38, 40, 39, 41, 46, 45, 41, 40, 47, 46, 40, 38, 44, 47, 45, 46, 50, 49, 46, 47, 51, 50, 47, 44, 48, 51]
            rel material:binding = </root/_materials/M_RobothorDresserDrawer_1_Aneboda_0>
            normal3f[] normals = [(-0.99999994, -0.00029962198, 0), (-0.99999994, -0.00029962198, 0), (-0.99999994, -0.00029962198, 0), (-0.99999994, -0.00029962198, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0.00019976796, 0), (1, 0.00019976796, 0), (1, 0.00019976796, 0), (1, 0.00019976796, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.00027959814, 0.99999994, -0.000029473073), (-0.0002922389, 0.99999994, -0.000008844381), (-0.0002794264, 0.99999994, -0.000027202643), (-0.00028030414, 1, 0.000028375023), (-0.0002805557, 0.99999994, 0.000030857827), (-0.00029319644, 1, 0.0000075272887), (-0.00028030414, 1, 0.000028375023), (-0.0002794264, 0.99999994, -0.000027202643), (-0.00029249053, 1, -0.000007773986), (-0.0002933682, 0.99999994, 0.0000064632504), (-0.0002922389, 0.99999994, -0.000008844381), (-0.00027959814, 0.99999994, -0.000029473073), (-0.00029319644, 1, 0.0000075272887), (-0.0002805557, 0.99999994, 0.000030857827), (-0.0002933682, 0.99999994, 0.0000064632504), (-0.00029249053, 1, -0.000007773986), (0.00030518026, -1, -0.000039868053), (0.00030603242, -0.99999994, 0.000039465285), (0.00030493602, -0.99999994, -0.000043149248), (0.00029266684, -0.99999994, 0.0000062567856), (0.00029250013, -0.99999994, 0.000006542451), (0.0002933515, -1, -0.000005073209), (0.00029266684, -0.99999994, 0.0000062567856), (0.00030493602, -0.99999994, -0.000043149248), (0.00030586575, -0.99999994, 0.00004240517), (0.00029359566, -0.99999994, -0.00000489946), (0.00030603242, -0.99999994, 0.000039465285), (0.00030518026, -1, -0.000039868053), (0.0002933515, -1, -0.000005073209), (0.00029250013, -0.99999994, 0.000006542451), (0.00029359566, -0.99999994, -0.00000489946), (0.00030586575, -0.99999994, 0.00004240517), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, -0.00019893171, 0), (-1, -0.00019893171, 0), (-1, -0.00019893171, 0), (-1, -0.00019893171, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0.000299912, 0), (1, 0.000299912, 0), (1, 0.000299912, 0), (1, 0.000299912, 0), (-1.9654426e-7, 0, -1), (-1.9654426e-7, 0, -1), (-1.9654426e-7, 0, -1), (-1.9654426e-7, 0, -1), (-0.00030011026, 0.99999994, 0), (-0.00030011026, 0.99999994, 0), (-0.00030011026, 0.99999994, 0), (-0.00030011026, 0.99999994, 0), (3.6851077e-8, 0, -0.99999994), (3.6851077e-8, 0, -0.99999994), (3.6851077e-8, 0, -0.99999994), (3.6851077e-8, 0, -0.99999994), (0.00028997642, -0.9999999, 0), (0.00028997642, -0.9999999, 0), (0.00028997642, -0.9999999, 0), (0.00028997642, -0.9999999, 0), (-1.512781e-7, 0, 1), (-1.512781e-7, 0, 1), (-1.512781e-7, 0, 1), (-1.512781e-7, 0, 1), (-0.00029012602, 0.9999999, 0), (-0.00029012602, 0.9999999, 0), (-0.00029012602, 0.9999999, 0), (-0.00029012602, 0.9999999, 0), (1, 0.00024558144, 0), (1, 0.0002820276, 0.000018270088), (1, 0.00028198207, 0.000018247267), (1, 0.00024558144, 0), (1, 0.00028198207, 0.000018247267), (1, 0.0002820276, 0.000018270088), (0.9999999, 0.00031845097, 0.00003652876), (0.9999999, 0.00031845097, 0.00003652876), (-1, -0.00031844326, -0.000036504123), (-1, -0.00028203812, -0.00001825728), (-0.99999994, -0.00028199644, -0.000018236402), (-1, -0.00031844326, -0.000036504123), (-1, -0.00024561214, 0), (-1, -0.00024561214, 0), (-0.99999994, -0.00028199644, -0.000018236402), (-1, -0.00028203812, -0.00001825728), (-0.00028947464, 1, 0), (-0.00028947464, 1, 0), (-0.00028947464, 1, 0), (-0.00028947464, 1, 0), (-0.9999999, -0.0003979019, 0), (-0.9999999, -0.0003979019, 0), (-0.9999999, -0.0003979019, 0), (-0.9999999, -0.0003979019, 0), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0.9999999, 0.0003979019, 0), (0.9999999, 0.0003979019, 0), (0.9999999, 0.0003979019, 0), (0.9999999, 0.0003979019, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.399844, -0.189918, 0.142049), (-0.399844, -0.189918, 0.432959), (0.400156, -0.189686, 0.432959), (0.400156, -0.189686, 0.142049), (-0.399841, -0.199919, 0.432959), (-0.399841, -0.199919, 0.142049), (0.400158, -0.199686, 0.142049), (0.400158, -0.199686, 0.432959), (-0.379841, -0.199913, 0.162049), (0.380158, -0.199693, 0.162049), (0.380158, -0.199693, 0.412959), (-0.379841, -0.199913, 0.412959), (-0.379844, -0.189913, 0.162049), (0.380156, -0.189692, 0.162049), (0.380156, -0.189692, 0.412959), (-0.379844, -0.189913, 0.412959), (0.050158, -0.199776, 0.422967), (0.050163, -0.214537, 0.422967), (0.050163, -0.214537, 0.41583), (0.050165, -0.222682, 0.41583), (0.050165, -0.222682, 0.4311), (0.050158, -0.199776, 0.4311), (-0.049842, -0.199805, 0.422967), (-0.049837, -0.214567, 0.422967), (-0.049837, -0.214567, 0.41583), (-0.049835, -0.222711, 0.41583), (-0.049835, -0.222711, 0.4311), (-0.049842, -0.199805, 0.4311), (-0.379844, -0.192565, 0.162049), (-0.379844, -0.192565, 0.412959), (0.380156, -0.192345, 0.412959), (0.380156, -0.192345, 0.162049), (-0.379842, -0.197565, 0.412959), (-0.379842, -0.197565, 0.162049), (0.380158, -0.197345, 0.162049), (0.380158, -0.197345, 0.412959), (-0.365217, -0.189918, 0.146777), (0.366466, -0.189918, 0.146777), (-0.365217, -0.189918, 0.39583), (0.366466, -0.189918, 0.39583), (-0.365217, 0.187641, 0.39583), (0.366466, 0.187641, 0.39583), (-0.365217, 0.187641, 0.146777), (0.366466, 0.187641, 0.146777), (-0.354044, -0.189918, 0.39583), (0.355293, -0.189918, 0.39583), (0.355293, 0.178996, 0.39583), (-0.354044, 0.178996, 0.39583), (-0.354044, -0.189918, 0.156056), (0.355293, -0.189918, 0.156056), (0.355293, 0.178996, 0.156056), (-0.354044, 0.178996, 0.156056)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-2.205307, 1.783927), (-2.205307, 1.801266), (-2.70976, 1.801266), (-2.70976, 1.783926), (4.215607, 4.173339), (4.215612, 4.19068), (2.828376, 4.191082), (2.82837, 4.173741), (-2.70976, 1.738154), (-2.70976, 1.720815), (-2.205308, 1.720815), (-2.205307, 1.738154), (1.411349, 4.215861), (1.411354, 4.198522), (2.798592, 4.198923), (2.798586, 4.216263), (1.411354, 3.648294), (2.763909, 3.682977), (1.446035, 3.682978), (1.411354, 4.152749), (1.446036, 4.118066), (2.798592, 4.152749), (1.411354, 4.152749), (1.446035, 3.682978), (2.798592, 3.648295), (2.76391, 4.118066), (2.763909, 3.682977), (1.411354, 3.648294), (2.798592, 4.152749), (1.446036, 4.118066), (2.76391, 4.118066), (2.798592, 3.648295), (2.798597, 3.09807), (2.763915, 3.567841), (2.763916, 3.132751), (1.41136, 3.098069), (1.446041, 3.132751), (1.41136, 3.602522), (1.41136, 3.098069), (2.763916, 3.132751), (2.798597, 3.602523), (1.446041, 3.567841), (2.763915, 3.567841), (2.798597, 3.09807), (1.41136, 3.602522), (1.446041, 3.132751), (1.446041, 3.567841), (2.798597, 3.602523), (-0.160065, -0.357349), (-0.160071, -0.340009), (-1.477946, -0.340392), (-1.47794, -0.357731), (-2.640393, 1.422592), (-2.640393, 1.40525), (-2.205302, 1.405251), (-2.205302, 1.422591), (-1.477942, -0.403503), (-1.477947, -0.420844), (-0.160071, -0.421227), (-0.160067, -0.403886), (-2.205301, 1.342137), (-2.205302, 1.359477), (-2.640393, 1.359477), (-2.640392, 1.342137), (-2.39625, -0.082031), (-2.222845, -0.082081), (-2.222838, -0.056482), (-2.396244, -0.056432), (-2.396239, -0.140229), (-2.222836, -0.140229), (-2.222835, -0.127854), (-2.396239, -0.127854), (-2.396245, -0.200123), (-2.222842, -0.200173), (-2.222837, -0.186051), (-2.396242, -0.186002), (-2.396242, -0.272426), (-2.222836, -0.272425), (-2.222837, -0.245946), (-2.396242, -0.245947), (-2.396242, 0.311748), (-2.222835, 0.311797), (-2.222849, 0.351518), (-2.396253, 0.351468), (-2.396242, -0.332304), (-2.222835, -0.332304), (-2.222836, -0.318198), (-2.396242, -0.318198), (-2.880967, -3.040746), (-2.880967, -3.028369), (-2.89509, -3.014266), (-2.89509, -3.040746), (-2.89509, -3.014266), (-2.880967, -3.028369), (-2.855371, -3.028369), (-2.855371, -3.014266), (-2.89509, -3.100622), (-2.869492, -3.100622), (-2.855371, -3.086519), (-2.89509, -3.086518), (-2.869492, -3.112997), (-2.855371, -3.112997), (-2.855371, -3.086519), (-2.869492, -3.100622), (-2.721058, -2.80933), (-1.985971, -2.80933), (-1.985971, -0.582761), (-2.721058, -0.582761), (0.578987, -0.442451), (0.593634, -0.442451), (0.593634, 0.292736), (0.578987, 0.292736), (-3.109867, -2.809379), (-3.095219, -2.809383), (-3.094574, -0.582715), (-3.109221, -0.58271), (0.539194, 0.292668), (0.524544, 0.292668), (0.524544, -0.442383), (0.539194, -0.442383), (-3.150044, -0.582713), (-3.164689, -0.582718), (-3.16405, -2.809381), (-3.149399, -2.809377), (-0.68829, -1.129599), (1.111853, -1.129599), (1.111853, -0.402833), (-0.68829, -0.402833), (-0.210293, -1.411714), (1.633492, -1.411714), (1.633493, -0.993113), (-0.210293, -0.993114), (-0.210293, -1.40976), (1.633492, -1.40976), (1.633492, -0.666107), (-0.210293, -0.666107), (-0.016182, -1.251679), (0.727471, -1.251679), (0.727471, -0.833079), (-0.016182, -0.833079), (-0.016182, -1.371247), (0.727471, -1.371247), (0.727471, -0.952647), (-0.016182, -0.952647), (1.63349, -1.201146), (1.633491, -0.457495), (1.611669, -0.474381), (1.611669, -1.201146), (1.633491, -0.457495), (-0.210291, -0.457495), (-0.18847, -0.474381), (1.611669, -0.474381), (-0.210291, -0.457495), (-0.210291, -1.201146), (-0.18847, -1.201146), (-0.18847, -0.474381), (0.70474, -1.078809), (-0.022027, -1.078809), (-0.022027, -1.479285), (0.70474, -1.479285), (1.111853, -0.725041), (-0.68829, -0.725041), (-0.68829, -1.125518), (1.111853, -1.125518), (0.70474, -1.193441), (-0.022027, -1.193441), (-0.022027, -1.593917), (0.70474, -1.593917)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_RobothorDresserDrawer_1_Aneboda_0"
        {
            token outputs:surface.connect = </root/_materials/M_RobothorDresserDrawer_1_Aneboda_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_RobothorDresserDrawer_1_Aneboda_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_RobothorDresserDrawer_1_Aneboda_0/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/TexturesCom_WoodWhite1.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_RobothorDresserDrawer_1_Aneboda_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_RobothorDresserDrawer_1_Aneboda_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

