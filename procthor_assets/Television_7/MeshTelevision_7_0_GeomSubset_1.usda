#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshTelevision_7_0_GeomSubset_1"
    {
        def Mesh "MeshTelevision_7_0_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [4, 5, 7, 6, 20, 31, 64, 65, 28, 22, 66, 67, 22, 20, 65, 66, 31, 21, 63, 64, 21, 23, 62, 63, 23, 28, 67, 62, 51, 50, 49, 48, 52, 51, 48, 45, 53, 52, 45, 44, 54, 53, 44, 47, 55, 54, 47, 46, 50, 55, 46, 49, 57, 56, 50, 51, 58, 57, 51, 52, 59, 58, 52, 53, 60, 59, 53, 54, 61, 60, 54, 55, 56, 61, 55, 50, 63, 62, 56, 57, 64, 63, 57, 58, 65, 64, 58, 59, 66, 65, 59, 60, 67, 66, 60, 61, 62, 67, 61, 56, 44, 45, 69, 68, 46, 47, 71, 70, 47, 44, 68, 71, 45, 48, 72, 69, 48, 49, 73, 72, 49, 46, 70, 73]
            rel material:binding = </root/_materials/M_Television_7_1>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0.29350796, 0.9559566), (0, 0.293508, 0.95595664), (-6.12805e-7, 0.4738894, 0.88058436), (5.0105155e-7, 0.4226659, 0.90628564), (0, 0.29348788, -0.95596284), (0, 0.29348788, -0.95596284), (-1.8673018e-7, 0.42266738, -0.90628487), (0, 0.47390243, -0.8805773), (-0.97261506, 0.23242185, 1.6556677e-7), (-0.97261506, 0.23242185, 1.6556677e-7), (-0.9144365, 0.4047295, -2.7939677e-9), (-0.9144371, 0.4047282, 5.075708e-8), (0, 0.293508, 0.95595664), (0, 0.29350796, 0.9559566), (7.543713e-8, 0.4226659, 0.90628564), (-6.12805e-7, 0.4738894, 0.88058436), (0.97261506, 0.23242185, 1.6556677e-7), (0.97261506, 0.23242185, 1.6556677e-7), (0.91443706, 0.4047282, -3.306195e-7), (0.9144365, 0.40472952, -3.8580038e-7), (0, 0.29348788, -0.95596284), (0, 0.29348788, -0.95596284), (0, 0.47390243, -0.8805773), (-3.8533472e-7, 0.42258638, -0.9063226), (0.5207008, 0.8537393, 5.8673322e-8), (0.5207002, 0.85373956, 3.46452e-7), (0.2233567, 0.9747368, 7.4246185e-7), (0.2233567, 0.9747368, 7.4246185e-7), (3.9404964e-7, 0.8753991, 0.483401), (6.519258e-8, 0.81456715, 0.5800693), (0, 0.9608563, 0.27704713), (0, 0.9608563, 0.27704713), (1.8742867e-7, 0.8145671, 0.5800693), (3.9404964e-7, 0.8753991, 0.483401), (0, 0.9608563, 0.27704713), (0, 0.9608563, 0.27704713), (-0.5207003, 0.85373956, 6.686896e-7), (-0.5207008, 0.8537393, -0.0000014137477), (-0.2233567, 0.9747368, 7.4246185e-7), (-0.2233567, 0.9747368, 7.4246185e-7), (-3.9191397e-7, 0.8753994, -0.48340043), (4.1443855e-8, 0.81460875, -0.5800108), (0, 0.960832, -0.27713144), (0, 0.960832, -0.27713144), (-2.8894283e-7, 0.8146087, -0.58001083), (-3.9191397e-7, 0.8753994, -0.48340043), (0, 0.960832, -0.27713144), (0, 0.960832, -0.27713144), (0.70399, 0.7102099, -1.5320256e-7), (0.7040232, 0.710177, -2.7986243e-7), (0.5207002, 0.85373956, 3.46452e-7), (0.5207008, 0.8537393, 5.8673322e-8), (4.8495497e-7, 0.6972755, 0.71680325), (5.844049e-7, 0.66478467, 0.747035), (6.519258e-8, 0.81456715, 0.5800693), (3.9404964e-7, 0.8753991, 0.483401), (-5.727634e-8, 0.66478467, 0.747035), (4.8495497e-7, 0.6972755, 0.71680325), (3.9404964e-7, 0.8753991, 0.483401), (1.8742867e-7, 0.8145671, 0.5800693), (-0.70402324, 0.710177, 2.575107e-7), (-0.70399, 0.7102099, 3.8091093e-7), (-0.5207008, 0.8537393, -0.0000014137477), (-0.5207003, 0.85373956, 6.686896e-7), (-4.8495906e-7, 0.6972938, -0.71678543), (-3.9092265e-7, 0.66481155, -0.74701107), (4.1443855e-8, 0.81460875, -0.5800108), (-3.9191397e-7, 0.8753994, -0.48340043), (-1.2782402e-7, 0.6648115, -0.747011), (-4.8495906e-7, 0.6972938, -0.71678543), (-3.9191397e-7, 0.8753994, -0.48340043), (-2.8894283e-7, 0.8146087, -0.58001083), (0.9144365, 0.40472952, -3.8580038e-7), (0.91443706, 0.4047282, -3.306195e-7), (0.7040232, 0.710177, -2.7986243e-7), (0.70399, 0.7102099, -1.5320256e-7), (-6.12805e-7, 0.4738894, 0.88058436), (7.543713e-8, 0.4226659, 0.90628564), (5.844049e-7, 0.66478467, 0.747035), (4.8495497e-7, 0.6972755, 0.71680325), (5.0105155e-7, 0.4226659, 0.90628564), (-6.12805e-7, 0.4738894, 0.88058436), (4.8495497e-7, 0.6972755, 0.71680325), (-5.727634e-8, 0.66478467, 0.747035), (-0.9144371, 0.4047282, 5.075708e-8), (-0.9144365, 0.4047295, -2.7939677e-9), (-0.70399, 0.7102099, 3.8091093e-7), (-0.70402324, 0.710177, 2.575107e-7), (0, 0.47390243, -0.8805773), (-1.8673018e-7, 0.42266738, -0.90628487), (-3.9092265e-7, 0.66481155, -0.74701107), (-4.8495906e-7, 0.6972938, -0.71678543), (-3.8533472e-7, 0.42258638, -0.9063226), (0, 0.47390243, -0.8805773), (-4.8495906e-7, 0.6972938, -0.71678543), (-1.2782402e-7, 0.6648115, -0.747011), (0, 0.7300155, -0.68343055), (0, 0.7300156, -0.6834306), (0, 0.7300156, -0.6834306), (0, 0.7300155, -0.68343055), (0, 0.7299939, 0.6834537), (0, 0.7299938, 0.6834536), (0, 0.7299938, 0.6834536), (0, 0.7299939, 0.6834537), (0.86051667, 0.50942224, 4.0560315e-7), (0.86051667, 0.50942224, 4.0560315e-7), (0.86051667, 0.50942224, 4.0560315e-7), (0.86051667, 0.50942224, 4.0560315e-7), (0, 0.7300156, -0.6834306), (0, 0.7300155, -0.68343055), (0, 0.7300155, -0.68343055), (0, 0.7300156, -0.6834306), (-0.86051667, 0.50942224, 4.0560315e-7), (-0.86051667, 0.50942224, 4.0560315e-7), (-0.86051667, 0.50942224, 4.0560315e-7), (-0.86051667, 0.50942224, 4.0560315e-7), (0, 0.7299938, 0.6834536), (0, 0.7299939, 0.6834537), (0, 0.7299939, 0.6834537), (0, 0.7299938, 0.6834536)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.000799, 0.053736, 0.038319), (-0.000799, 0.053736, 0.038319), (0.000799, 0.055336, 0.038319), (-0.000799, 0.055336, 0.038319), (0.000799, 0.053736, 0.038319), (-0.000799, 0.053736, 0.038319), (0.000799, 0.055336, 0.038319), (-0.000799, 0.055336, 0.038319), (0.000799, 0.053736, 0.038319), (-0.000799, 0.053736, 0.038319), (0.000799, 0.055336, 0.038319), (-0.000799, 0.055336, 0.038319), (0.000799, 0.053736, 0.038319), (-0.000799, 0.053736, 0.038319), (0.000799, 0.055336, 0.038319), (-0.000799, 0.055336, 0.038319), (0.000799, 0.053736, 0.038319), (-0.000799, 0.053736, 0.038319), (0.000799, 0.055336, 0.038319), (-0.000799, 0.055336, 0.038319), (0.546104, 0.006724, -0.289822), (-0.546104, 0.006724, -0.289822), (0.546104, 0.006724, 0.416345), (-0.546104, 0.006724, 0.416345), (0.546104, 0.054536, 0.416345), (-0.546104, 0.054536, 0.416345), (0.546104, 0.054536, -0.289822), (-0.546104, 0.054536, -0.289822), (0, 0.006724, 0.416345), (0, 0.054536, 0.416345), (0, 0.054536, -0.289822), (0, 0.006724, -0.289822), (0.546104, 0.054536, -0.356064), (0, 0.054536, -0.356064), (0, 0.006724, -0.356064), (0.546104, 0.006724, -0.356064), (-0.546104, 0.054536, -0.356064), (-0.546104, 0.006724, -0.356064), (0.546104, -0.02242, -0.289822), (0, -0.02242, -0.289822), (0.546104, -0.02242, -0.356064), (0, -0.02242, -0.356064), (-0.546104, -0.02242, -0.289822), (-0.546104, -0.02242, -0.356064), (0.512911, -0.025624, -0.260289), (0, -0.025624, -0.260289), (0, -0.025625, 0.386812), (0.512911, -0.025625, 0.386812), (-0.512911, -0.025624, -0.260289), (-0.512911, -0.025625, 0.386812), (-0.526158, -0.022589, 0.397338), (-0.526158, -0.022589, -0.270815), (0, -0.022589, -0.270815), (0.526158, -0.022589, -0.270815), (0.526158, -0.022589, 0.397338), (0, -0.022589, 0.397338), (-0.534535, -0.016158, 0.404791), (-0.534535, -0.016158, -0.278268), (0, -0.016158, -0.278268), (0.534535, -0.016158, -0.278268), (0.534535, -0.016158, 0.404791), (0, -0.016158, 0.404791), (-0.542912, -0.006634, 0.412244), (-0.542912, -0.006633, -0.285721), (0, -0.006633, -0.285721), (0.542912, -0.006633, -0.285721), (0.542912, -0.006634, 0.412244), (0, -0.006634, 0.412244), (0.503305, -0.009398, -0.242957), (0, -0.009398, -0.242957), (0, -0.009398, 0.36948), (0.503305, -0.009398, 0.36948), (-0.503305, -0.009398, -0.242957), (-0.503305, -0.009398, 0.36948), (0.550927, 0.006724, 0.422098), (-0, 0.006724, 0.422098), (-0, 0.047647, 0.422098), (0.550927, 0.047647, 0.422098), (0.555749, 0.047647, -0.368663), (-0, 0.047647, -0.368663), (-0, 0.006724, -0.368663), (0.555749, 0.006724, -0.368663), (-0.555749, 0.047647, -0.289822), (-0.555749, 0.006724, -0.289822), (-0.550927, 0.047647, 0.422098), (-0.550927, 0.006724, 0.422098), (0.555749, 0.047647, -0.289822), (0.555749, 0.006724, -0.289822), (-0.555749, 0.047647, -0.368663), (-0.555749, 0.006724, -0.368663), (-0.550096, 0.051919, 0.420308), (-0.552515, 0.05034, -0.290779), (-0.552515, 0.05034, -0.366707), (-0, 0.05034, -0.366707), (0.552515, 0.05034, -0.366707), (0.552515, 0.05034, -0.290779), (0.550096, 0.051919, 0.420308), (-0, 0.051919, 0.420308), (0.539104, -0.027598, -0.301422), (0, -0.027598, -0.301422), (0.539104, -0.027598, -0.344451), (0, -0.027598, -0.344451), (-0.539104, -0.027598, -0.301422), (-0.539104, -0.027598, -0.34445), (0.539104, -0.02242, -0.29751), (0, -0.02242, -0.29751), (0.539104, -0.026292, -0.299468), (0, -0.026292, -0.299468), (0.539104, -0.022412, -0.34838), (0.539104, -0.026287, -0.346415), (0, -0.022412, -0.34838), (0, -0.026287, -0.346415), (-0.539104, -0.02242, -0.29751), (-0.539104, -0.026292, -0.299467), (-0.539104, -0.022412, -0.34838), (-0.539104, -0.026287, -0.346415)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-30.803862, -18.17474), (-30.802402, -18.17474), (-30.802402, -18.173283), (-30.803862, -18.173283), (-31.571966, 1.679643), (-31.571966, 0.5), (-31.543114, 0.5), (-31.543114, 1.672748), (-31.474876, 0.5), (-31.474876, 1.679604), (-31.503735, 1.672709), (-31.503735, 0.5), (-30.889788, 1.097456), (-30.889788, -0.449497), (-30.860527, -0.440513), (-30.860527, 1.088472), (-31.571966, 0.5), (-31.571966, -0.679643), (-31.543114, -0.672748), (-31.543114, 0.5), (-30.791979, -0.449485), (-30.791979, 1.097444), (-30.821241, 1.08846), (-30.821241, -0.440501), (-31.474876, -0.679604), (-31.474876, 0.5), (-31.503735, 0.5), (-31.503735, -0.672708), (-31.925726, -0.690066), (-30.437592, -0.690066), (-30.461033, -0.660563), (-31.902275, -0.660563), (-31.925726, 0.48181), (-31.925726, -0.690066), (-31.902275, -0.660563), (-31.902275, 0.48181), (-31.925726, 1.653687), (-31.925726, 0.48181), (-31.902275, 0.48181), (-31.902275, 1.624183), (-30.437592, 1.653687), (-31.925726, 1.653687), (-31.902275, 1.624183), (-30.461033, 1.624183), (-30.437592, 0.48181), (-30.437592, 1.653687), (-30.461033, 1.624183), (-30.461033, 0.48181), (-30.437592, -0.690066), (-30.437592, 0.48181), (-30.461033, 0.48181), (-30.461033, -0.660563), (-30.842108, -0.424174), (-30.842108, 1.072133), (-30.856195, 1.055805), (-30.856195, -0.407847), (-31.52254, 0.5), (-31.52254, -0.654653), (-31.508642, -0.636558), (-31.508642, 0.5), (-31.52254, 1.654652), (-31.52254, 0.5), (-31.508642, 0.5), (-31.508642, 1.636557), (-30.839663, 1.072145), (-30.839663, -0.424186), (-30.825573, -0.407858), (-30.825573, 1.055817), (-31.524302, 0.5), (-31.524302, 1.654614), (-31.538197, 1.636519), (-31.538197, 0.5), (-31.524302, -0.654613), (-31.524302, 0.5), (-31.538197, 0.5), (-31.538197, -0.636519), (-30.821241, -0.440501), (-30.821241, 1.08846), (-30.842108, 1.072133), (-30.842108, -0.424174), (-31.543114, 0.5), (-31.543114, -0.672748), (-31.52254, -0.654653), (-31.52254, 0.5), (-31.543114, 1.672748), (-31.543114, 0.5), (-31.52254, 0.5), (-31.52254, 1.654652), (-30.860527, 1.088472), (-30.860527, -0.440513), (-30.839663, -0.424186), (-30.839663, 1.072145), (-31.503735, 0.5), (-31.503735, 1.672709), (-31.524302, 1.654614), (-31.524302, 0.5), (-31.503735, -0.672708), (-31.503735, 0.5), (-31.524302, 0.5), (-31.524302, -0.654613), (-31.902275, 1.624183), (-31.902275, 0.48181), (-31.863676, 0.48181), (-31.863676, 1.602788), (-30.461033, 0.48181), (-30.461033, 1.624183), (-30.499641, 1.602788), (-30.499641, 0.48181), (-30.461033, 1.624183), (-31.902275, 1.624183), (-31.863676, 1.602788), (-30.499641, 1.602788), (-31.902275, 0.48181), (-31.902275, -0.660563), (-31.863676, -0.639168), (-31.863676, 0.48181), (-31.902275, -0.660563), (-30.461033, -0.660563), (-30.499641, -0.639168), (-31.863676, -0.639168), (-30.461033, -0.660563), (-30.461033, 0.48181), (-30.499641, 0.48181), (-30.499641, -0.639168)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_Television_7_1"
        {
            token outputs:surface.connect = </root/_materials/M_Television_7_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_Television_7_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_Television_7_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Television_7_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Television_7_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

