#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshBook_10_0_GeomSubset_0"
    {
        def Mesh "MeshBook_10_0_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [1, 0, 3, 2, 4, 5, 6, 7, 7, 6, 10, 11, 8, 9, 11, 10, 6, 2, 3, 10, 7, 11, 24, 25, 6, 5, 1, 2, 0, 8, 10, 3, 11, 9, 27, 24, 25, 26, 4, 7, 17, 16, 20, 21, 21, 22, 18, 17, 16, 19, 23, 20, 21, 20, 13, 14, 14, 15, 22, 21, 20, 23, 12, 13, 25, 24, 16, 17, 17, 18, 26, 25, 24, 27, 19, 16, 135, 134, 132, 133, 13, 12, 132, 134, 15, 14, 135, 133, 132, 12, 15, 133, 13, 134, 135, 14]
            rel material:binding = </root/_materials/M_Book_10_0>
            normal3f[] normals = [(1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, -0.0000032593648), (0, 1, 0), (0, 1, 0), (0, 1, -0.0000060290463), (-0.5704085, 0, -0.8213611), (-0.0035435557, 0, -0.9999937), (-0.0035435408, -0.0000061450096, -0.9999937), (-0.57040846, -9.347593e-9, -0.8213611), (0, -1, 0), (0, -1, -0.0000032593578), (2.2773747e-8, -0.9999999, -0.0004854132), (0, -1, 0), (-0.0035435557, 0, -0.9999937), (0, 0, -1), (0, 0, -1), (-0.0035435408, -0.0000061450096, -0.9999937), (-0.5704085, 0, -0.8213611), (-0.57040846, -9.347593e-9, -0.8213611), (-0.8831554, 0, -0.46908057), (-0.8831554, 0, -0.46908057), (0, 1, 0), (0, 1, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, -0.99999994, 0), (0, -1, 0), (0, -1, 0), (0, -0.99999994, 0), (2.2773747e-8, -0.9999999, -0.0004854132), (0, -1, -0.0000032593578), (0, -1, -0.0000011609712), (0, -1, 8.0811805e-7), (0, 1, 8.0811026e-7), (0, 1, -0.0000011609812), (0, 1, -0.0000032593648), (0, 1, -0.0000060290463), (-0.9419749, 0, -0.33568338), (-0.9419749, -9.266364e-10, -0.33568338), (-0.98734695, 0, -0.15857537), (-0.98734695, 0, -0.15857537), (0, 1, 0), (0, 1, 0), (0, 1, 0.000004213541), (0, 1, 0.0000033604447), (0, -1, -0.000001009955), (0, -1, 6.8934423e-7), (0, -1, -0.000004084099), (0, -1, -0.000003640527), (-0.98734695, 0, -0.15857537), (-0.98734695, 0, -0.15857537), (-0.9961694, 0.000002399087, 0.08744359), (-0.99618036, 0, 0.08731949), (-0.000010676682, 0.99743706, 0.071550354), (5.904585e-7, 0.9978037, 0.066240326), (0, 1, 0), (0, 1, 0), (0, -1, -0.000003640527), (0, -1, -0.000004084099), (-0.0000016641628, -0.99782205, 0.065963194), (-0.0000063739717, -0.9974569, 0.07127181), (-0.8831554, 0, -0.46908057), (-0.8831554, 0, -0.46908057), (-0.9419749, -9.266364e-10, -0.33568338), (-0.9419749, 0, -0.33568338), (0, 1, 0.0000033604447), (0, 1, 0.000004213541), (0, 1, -0.0000011609812), (0, 1, 8.0811026e-7), (0, -1, 8.0811805e-7), (0, -1, -0.0000011609712), (0, -1, 6.8934423e-7), (0, -1, -0.000001009955), (-0.24649745, -6.109476e-7, 0.96914345), (-0.2464965, 0, 0.9691437), (0.24650267, 6.0070306e-7, 0.96914214), (0.24650386, 0, 0.96914184), (-0.000033206183, -0.9975422, 0.07006836), (-0.00008326769, -0.9979009, 0.0647594), (-4.6630547e-8, -0.71999, 0.69398445), (-4.551839e-8, -0.71999, 0.69398445), (5.904585e-7, 0.9978037, 0.066240326), (-0.000010676682, 0.99743706, 0.071550354), (2.7792295e-9, 0.7189999, 0.6950101), (-1.39843905e-8, 0.7189999, 0.6950101), (0.24650267, 6.0070306e-7, 0.96914214), (0.4747127, 7.802599e-8, 0.8801409), (0.47471273, 6.170012e-9, 0.88014084), (0.24650386, 0, 0.96914184), (-0.9961694, 0.000002399087, 0.08744359), (-0.2464965, 0, 0.9691437), (-0.24649745, -6.109476e-7, 0.96914345), (-0.99618036, 0, 0.08731949)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.118243, -0.150567, -0.00725), (0.118243, 0.150566, -0.00725), (0.118243, 0.150566, -0.007627), (0.118243, -0.150567, -0.007627), (-0.122435, 0.150566, -0.006367), (-0.119719, 0.150566, -0.00725), (-0.121041, 0.150566, -0.007627), (-0.12351, 0.150566, -0.006783), (-0.119719, -0.150567, -0.00725), (-0.122435, -0.150567, -0.006367), (-0.121041, -0.150567, -0.007627), (-0.12351, -0.150567, -0.006783), (-0.123928, -0.150567, -0.00139), (-0.125376, -0.150567, -0.00139), (-0.125376, 0.150566, -0.00139), (-0.123928, 0.150566, -0.00139), (-0.124943, -0.150567, -0.004086), (-0.124943, 0.150566, -0.004086), (-0.123504, 0.150566, -0.003878), (-0.123504, -0.150567, -0.003878), (-0.125159, -0.150567, -0.002738), (-0.125159, 0.150566, -0.002738), (-0.123737, 0.150566, -0.002634), (-0.123737, -0.150567, -0.002634), (-0.124198, -0.150567, -0.005435), (-0.124198, 0.150566, -0.005435), (-0.122998, 0.150566, -0.005122), (-0.122998, -0.150567, -0.005122), (-0.12201, 0.150566, -0.00139), (0.118243, 0.150566, -0.00139), (0.118243, -0.150567, -0.00139), (-0.12201, -0.150567, -0.00139), (-0.121552, 0.150566, -0.00432), (0.118243, 0.150566, -0.00432), (0.118243, -0.150567, -0.00432), (-0.121552, -0.150567, -0.00432), (-0.12201, -0.148921, 0.000084), (-0.123928, -0.150567, -0.00139), (-0.12201, 0.148922, 0.000084), (-0.123928, 0.150566, -0.00139), (0.116722, -0.148921, -0.001016), (0.116722, 0.148922, -0.001016), (0.118243, -0.150567, -0.00725), (0.118243, 0.150566, -0.00725), (-0.119719, 0.150566, -0.00725), (-0.122435, 0.150566, -0.006367), (-0.122435, -0.150567, -0.006367), (-0.119719, -0.150567, -0.00725), (-0.123504, 0.150566, -0.003878), (-0.123504, -0.150567, -0.003878), (-0.03818, 0.150566, -0.00725), (-0.039402, 0.150566, -0.00432), (-0.039707, 0.150566, -0.00139), (-0.040132, 0.148922, 0.004632), (-0.040132, -0.148921, 0.004632), (-0.039707, -0.150567, -0.00139), (-0.039402, -0.150567, -0.00432), (-0.03818, -0.150567, -0.00725), (0.035964, 0.150566, -0.00725), (0.035353, 0.150566, -0.00432), (0.0352, 0.150566, -0.00139), (0.03435, 0.148922, 0.002845), (0.03435, -0.148921, 0.002845), (0.0352, -0.150567, -0.00139), (0.035353, -0.150567, -0.00432), (0.035964, -0.150567, -0.00725), (-0.016917, 0.150566, -0.00725), (-0.017935, 0.150566, -0.00432), (-0.01819, 0.150566, -0.00139), (-0.018756, 0.148922, 0.004373), (-0.018756, -0.148921, 0.004373), (-0.01819, -0.150567, -0.00139), (-0.017935, -0.150567, -0.00432), (-0.016917, -0.150567, -0.00725), (0.009523, 0.150566, -0.00725), (0.008709, 0.150566, -0.00432), (0.008505, 0.150566, -0.00139), (0.007797, 0.148922, 0.00376), (0.007797, -0.148921, 0.00376), (0.008505, -0.150567, -0.00139), (0.008709, -0.150567, -0.00432), (0.009523, -0.150567, -0.00725), (-0.102481, 0.150566, -0.00725), (-0.104192, 0.150566, -0.00432), (-0.10462, 0.150566, -0.00139), (-0.104704, 0.148922, 0.003031), (-0.104704, -0.148921, 0.003031), (-0.10462, -0.150567, -0.00139), (-0.104192, -0.150567, -0.00432), (-0.102481, -0.150567, -0.00725), (-0.087991, 0.150566, -0.00725), (-0.089579, 0.150566, -0.00432), (-0.089977, 0.150566, -0.00139), (-0.090147, 0.148922, 0.004218), (-0.090147, -0.148921, 0.004218), (-0.089977, -0.150567, -0.00139), (-0.089579, -0.150567, -0.00432), (-0.087991, -0.150567, -0.00725), (-0.072127, 0.150566, -0.00725), (-0.073593, 0.150566, -0.00432), (-0.07396, 0.150566, -0.00139), (-0.074215, 0.148922, 0.004697), (-0.074215, -0.148921, 0.004697), (-0.07396, -0.150567, -0.00139), (-0.073593, -0.150567, -0.00432), (-0.072127, -0.150567, -0.00725), (-0.056263, 0.150566, -0.00725), (-0.057607, 0.150566, -0.00432), (-0.057943, 0.150566, -0.00139), (-0.058283, 0.148922, 0.004725), (-0.058283, -0.148921, 0.004725), (-0.057943, -0.150567, -0.00139), (-0.057607, -0.150567, -0.00432), (-0.056263, -0.150567, -0.00725), (0.062378, 0.150566, -0.00725), (0.062072, 0.150566, -0.00432), (0.061996, 0.150566, -0.00139), (0.060934, 0.148922, 0.001847), (0.060934, -0.148921, 0.001847), (0.061996, -0.150567, -0.00139), (0.062072, -0.150567, -0.00432), (0.062378, -0.150567, -0.00725), (0.088831, 0.150566, -0.00725), (0.088678, 0.150566, -0.00432), (0.08864, 0.150566, -0.00139), (0.087471, 0.148922, 0.000678), (0.087471, -0.148921, 0.000678), (0.08864, -0.150567, -0.00139), (0.088678, -0.150567, -0.00432), (0.088831, -0.150567, -0.00725), (-0.123698, -0.149132, -0.00056), (-0.123698, 0.149132, -0.00056), (-0.124363, -0.15034, -0.001156), (-0.124363, 0.15034, -0.001156), (-0.124942, -0.15034, -0.001156), (-0.124942, 0.15034, -0.001156), (-0.113365, 0.150566, -0.00725), (-0.115137, 0.150566, -0.00432), (-0.11558, 0.150566, -0.00139), (-0.115622, 0.148922, 0.0016), (-0.115622, -0.148921, 0.0016), (-0.11558, -0.150567, -0.00139), (-0.115137, -0.150567, -0.00432), (-0.113365, -0.150567, -0.00725), (-0.124707, -0.149232, -0.001101), (-0.124707, -0.150567, -0.00139), (-0.124707, 0.149233, -0.001101), (-0.124707, 0.150566, -0.00139), (0.109734, 0.150566, -0.00725), (0.109694, 0.150566, -0.00432), (0.109684, 0.150566, -0.00139), (0.108437, 0.148922, -0.000387), (0.108437, -0.148921, -0.000387), (0.109684, -0.150567, -0.00139), (0.109694, -0.150567, -0.00432), (0.109734, -0.150567, -0.00725)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(0.522716, 0.830982), (0.522731, 0.668184), (0.523472, 0.668173), (0.523457, 0.830994), (0.525883, 0.832557), (0.525445, 0.832557), (0.525446, 0.830994), (0.525858, 0.830994), (0.525858, 0.830994), (0.525446, 0.830994), (0.525446, 0.668173), (0.525858, 0.668173), (0.525445, 0.666869), (0.525883, 0.666869), (0.525858, 0.668173), (0.525446, 0.668173), (0.525446, 0.830994), (0.523457, 0.830994), (0.523472, 0.668173), (0.525446, 0.668173), (0.525858, 0.830994), (0.525858, 0.668173), (0.526779, 0.668173), (0.526779, 0.830994), (0.525446, 0.830994), (0.525445, 0.832557), (0.523467, 0.832576), (0.523457, 0.830994), (0.523485, 0.666854), (0.525445, 0.666869), (0.525446, 0.668173), (0.523472, 0.668173), (0.525858, 0.668173), (0.525883, 0.666869), (0.526824, 0.666869), (0.526779, 0.668173), (0.526779, 0.830994), (0.526798, 0.832557), (0.525883, 0.832557), (0.525858, 0.830994), (0.527699, 0.830994), (0.527699, 0.668173), (0.52862, 0.668173), (0.52862, 0.830994), (0.52862, 0.830994), (0.528628, 0.832557), (0.527713, 0.832557), (0.527699, 0.830994), (0.527699, 0.668173), (0.527764, 0.666869), (0.528705, 0.666869), (0.52862, 0.668173), (0.52862, 0.830994), (0.52862, 0.668173), (0.529506, 0.668114), (0.529504, 0.830994), (0.529504, 0.830994), (0.529501, 0.832557), (0.528628, 0.832557), (0.52862, 0.830994), (0.52862, 0.668173), (0.528705, 0.666869), (0.529506, 0.666869), (0.529506, 0.668114), (0.526779, 0.830994), (0.526779, 0.668173), (0.527699, 0.668173), (0.527699, 0.830994), (0.527699, 0.830994), (0.527713, 0.832557), (0.526798, 0.832557), (0.526779, 0.830994), (0.526779, 0.668173), (0.526824, 0.666869), (0.527764, 0.666869), (0.527699, 0.668173), (0.529721, 0.831463), (0.529721, 0.667825), (0.530008, 0.667825), (0.530008, 0.831463), (0.529506, 0.668114), (0.529506, 0.666869), (0.529721, 0.667227), (0.529721, 0.667825), (0.529501, 0.832557), (0.529504, 0.830994), (0.529721, 0.831463), (0.529721, 0.832115), (0.530008, 0.667825), (0.53034, 0.667825), (0.530334, 0.831463), (0.530008, 0.831463), (0.529506, 0.668114), (0.529721, 0.667825), (0.529721, 0.831463), (0.529504, 0.830994)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_Book_10_0"
        {
            token outputs:surface.connect = </root/_materials/M_Book_10_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_Book_10_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Book_Cover_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Book_10_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

