#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "ToasterLever_13_ToasterLever_13_1_GeomSubset_2"
    {
        def Mesh "ToasterLever_13_ToasterLever_13_1_GeomSubset_2"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4]
            int[] faceVertexIndices = [8, 9, 11, 10]
            rel material:binding = </root/_materials/M_ToasterLever_13_2>
            normal3f[] normals = [(0.84711933, -3.7028762e-8, -0.53140277), (-3.7028762e-8, -0.84711933, -0.53140277), (-0.84711933, 3.7028762e-8, -0.53140277), (3.7028762e-8, 0.84711933, -0.53140277)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.002036, -0.220749, 0.039601), (-0.002036, -0.216678, 0.039601), (0.002036, -0.220749, 0.039601), (0.002036, -0.216678, 0.039601), (-0.002036, -0.220749, 0.039601), (-0.002036, -0.216678, 0.039601), (0.002036, -0.220749, 0.039601), (0.002036, -0.216678, 0.039601), (-0.002036, -0.220749, 0.039601), (-0.002036, -0.216678, 0.039601), (0.002036, -0.220749, 0.039601), (0.002036, -0.216678, 0.039601), (-0.002036, -0.220749, 0.039601), (-0.002036, -0.216678, 0.039601), (0.002036, -0.220749, 0.039601), (0.002036, -0.216678, 0.039601), (-0.002036, -0.220749, 0.039601), (-0.002036, -0.216678, 0.039601), (0.002036, -0.220749, 0.039601), (0.002036, -0.216678, 0.039601), (-0.002036, -0.220749, 0.039601), (-0.002036, -0.216678, 0.039601), (0.002036, -0.220749, 0.039601), (0.002036, -0.216678, 0.039601), (0, -0.225779, 0.039601), (-0.001975, -0.211037, 0.040419), (-0.001511, -0.211037, 0.041113), (-0.000818, -0.211037, 0.041576), (0, -0.211037, 0.041739), (0.000818, -0.211037, 0.041576), (0.001512, -0.211037, 0.041113), (0.001975, -0.211037, 0.040419), (0.002138, -0.211037, 0.039601), (0.001975, -0.211037, 0.038783), (0.001512, -0.211037, 0.03809), (0.000818, -0.211037, 0.037626), (0, -0.211037, 0.037463), (-0.000818, -0.211037, 0.037626), (-0.001511, -0.211037, 0.03809), (-0.001975, -0.211037, 0.038783), (-0.002138, -0.211037, 0.039601), (-0.001975, -0.201847, 0.040419), (-0.001511, -0.201847, 0.041113), (-0.000818, -0.201847, 0.041576), (0, -0.201847, 0.041739), (0.000818, -0.201847, 0.041576), (0.001512, -0.201847, 0.041113), (0.001975, -0.201847, 0.040419), (0.002138, -0.201847, 0.039601), (0.001975, -0.201847, 0.038783), (0.001512, -0.201847, 0.03809), (0.000818, -0.201847, 0.037626), (0, -0.201847, 0.037463), (-0.000818, -0.201847, 0.037626), (-0.001511, -0.201847, 0.03809), (-0.001975, -0.201847, 0.038783), (-0.002138, -0.201847, 0.039601), (-0.00633, -0.211398, 0.042223), (-0.00593, -0.211037, 0.042057), (-0.004845, -0.211398, 0.044446), (-0.004539, -0.211037, 0.04414), (-0.002622, -0.211398, 0.045931), (-0.002456, -0.211037, 0.045531), (0, -0.211398, 0.046453), (0, -0.211037, 0.04602), (0.002622, -0.211398, 0.045931), (0.002456, -0.211037, 0.045531), (0.004845, -0.211398, 0.044446), (0.004539, -0.211037, 0.04414), (0.00633, -0.211398, 0.042223), (0.00593, -0.211037, 0.042057), (0.006852, -0.211398, 0.039601), (0.006419, -0.211037, 0.039601), (0.00633, -0.211398, 0.036979), (0.00593, -0.211037, 0.037145), (0.004845, -0.211398, 0.034756), (0.004539, -0.211037, 0.035062), (0.002622, -0.211398, 0.033271), (0.002456, -0.211037, 0.033671), (0, -0.211398, 0.032749), (0, -0.211037, 0.033182), (-0.002622, -0.211398, 0.033271), (-0.002456, -0.211037, 0.033671), (-0.004845, -0.211398, 0.034756), (-0.004539, -0.211037, 0.035062), (-0.00633, -0.211398, 0.036979), (-0.00593, -0.211037, 0.037145), (-0.006852, -0.211398, 0.039601), (-0.006419, -0.211037, 0.039601), (-0.00593, -0.225779, 0.042057), (-0.00633, -0.225419, 0.042223), (-0.004845, -0.225419, 0.044446), (-0.004539, -0.225779, 0.04414), (-0.002456, -0.225779, 0.045531), (-0.002622, -0.225419, 0.045931), (0, -0.225419, 0.046453), (0, -0.225779, 0.04602), (0.002456, -0.225779, 0.045531), (0.002622, -0.225419, 0.045931), (0.004845, -0.225419, 0.044446), (0.004539, -0.225779, 0.04414), (0.00593, -0.225779, 0.042057), (0.00633, -0.225419, 0.042223), (0.006852, -0.225419, 0.039601), (0.006419, -0.225779, 0.039601), (0.00593, -0.225779, 0.037145), (0.00633, -0.225419, 0.036979), (0.004845, -0.225419, 0.034756), (0.004539, -0.225779, 0.035062), (0.002456, -0.225779, 0.033671), (0.002622, -0.225419, 0.033271), (0, -0.225419, 0.032749), (0, -0.225779, 0.033182), (-0.002456, -0.225779, 0.033671), (-0.002622, -0.225419, 0.033271), (-0.004845, -0.225419, 0.034756), (-0.004539, -0.225779, 0.035062), (-0.00593, -0.225779, 0.037145), (-0.00633, -0.225419, 0.036979), (-0.006852, -0.225419, 0.039601), (-0.006419, -0.225779, 0.039601)]
            bool[] primvars:sharp_face = [0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-46.930313, -17.700754), (-46.866486, -17.700754), (-46.866486, -17.636938), (-46.930313, -17.636938)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_ToasterLever_13_2"
        {
            token outputs:surface.connect = </root/_materials/M_ToasterLever_13_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_ToasterLever_13_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_ToasterLever_13_2/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_ToasterLever_13_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_ToasterLever_13_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

