#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.0"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "DresserDrawer_220_2"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "DresserDrawer_220_2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.504291, -0.252704, -0.082433), (0.522951, 0.20308, 0.19465)]
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 2, 1, 0, 3, 2, 4, 6, 5, 4, 7, 6, 8, 10, 9, 8, 11, 10, 12, 14, 13, 12, 15, 14, 16, 18, 17, 16, 19, 18, 20, 22, 21, 20, 23, 22, 24, 26, 25, 24, 27, 26, 19, 28, 4, 16, 11, 29, 7, 30, 24, 27, 31, 8, 17, 15, 10, 18, 5, 14, 6, 25, 13, 26, 9, 12, 29, 19, 16, 29, 28, 19, 28, 7, 4, 28, 30, 7, 27, 30, 31, 27, 24, 30, 11, 31, 29, 11, 8, 31, 17, 14, 15, 17, 18, 14, 5, 13, 14, 5, 6, 13, 12, 25, 26, 12, 13, 25, 15, 9, 10, 15, 12, 9, 4, 18, 19, 4, 5, 18, 10, 16, 17, 10, 11, 16, 24, 6, 7, 24, 25, 6, 8, 26, 27, 8, 9, 26, 32, 28, 29, 32, 33, 28, 34, 32, 29, 34, 29, 31, 33, 30, 28, 33, 35, 30, 35, 31, 30, 35, 34, 31, 36, 38, 37, 36, 39, 38, 35, 38, 39, 35, 33, 38, 34, 39, 36, 34, 35, 39, 32, 36, 37, 32, 34, 36, 23, 40, 22, 23, 41, 40, 42, 33, 32, 42, 41, 33, 20, 42, 32, 20, 32, 37, 23, 37, 38, 23, 20, 37, 41, 23, 38, 41, 38, 33, 40, 21, 22, 40, 43, 21, 41, 43, 40, 41, 42, 43, 42, 21, 43, 42, 20, 21]
            rel material:binding = </root/_materials/M_DresserDrawer_220_2_0>
            normal3f[] normals = [(0.000007903922, -1, 0), (0.000007903921, -1, 0), (0.00000790392, -0.99999994, 0), (0.000007903922, -1, 0), (0.000007903922, -0.99999994, 0), (0.000007903921, -1, 0), (-1, -0.0000023985956, 2.1030525e-7), (-1, -0.00004097596, 0.00000359271), (-1, 0, 0), (-1, -0.0000023985956, 2.1030525e-7), (-1, -0.000043374555, 0.0000038030155), (-1, -0.00004097596, 0.00000359271), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1.7815292e-8, 0, 1), (-2.6570884e-10, 0, 1), (-1.8080936e-8, 0, 1), (-1.7815292e-8, 0, 1), (0, 0, 1), (-2.6570884e-10, 0, 1), (-0.000008886384, -1, -1.1943276e-7), (-0.000008886377, -1, -2.2895287e-8), (-0.000008886385, -0.99999994, -1.423281e-7), (-0.000008886384, -1, -1.1943276e-7), (-0.000008886374, -1, 0), (-0.000008886377, -1, -2.2895287e-8), (3.275493e-9, 0, -1), (4.8841015e-11, 0, -1), (3.3243464e-9, 0, -1), (3.275493e-9, 0, -1), (0, 0, -1), (4.8841015e-11, 0, -1), (-0.39266095, 0.42175534, 0.81727576), (-0.39266095, 0.42175534, 0.81727576), (-0.39266095, 0.42175534, 0.81727576), (0.39266342, 0.4218809, 0.81720984), (0.39266342, 0.4218809, 0.81720984), (0.39266342, 0.4218809, 0.81720984), (-0.39266238, 0.42175508, -0.8172752), (-0.39222598, 0.42190143, -0.8174092), (-0.39222598, 0.4219014, -0.8174092), (0.39266354, 0.4218835, -0.8172084), (0.39266354, 0.4218835, -0.8172084), (0.39266354, 0.4218835, -0.8172084), (0.3924339, -0.4216366, 0.81744605), (0.39243388, -0.4216366, 0.81744605), (0.39243388, -0.4216366, 0.81744605), (-0.39290324, -0.42220533, 0.8169269), (-0.39285353, -0.42214262, 0.81698316), (-0.3928536, -0.4221426, 0.81698316), (-0.39251307, -0.4218848, -0.8172802), (-0.39251307, -0.4218848, -0.8172802), (-0.39251307, -0.4218848, -0.8172802), (0.39250886, -0.4220443, -0.8171997), (0.39250886, -0.4220443, -0.8171997), (0.39250886, -0.4220443, -0.8171997), (1.3501532e-8, 0.45872682, 0.88857734), (0.0000018232636, 0.4585893, 0.88864833), (0, 0.45872787, 0.88857687), (1.3501532e-8, 0.45872682, 0.88857734), (6.810865e-8, 0.45888644, 0.8884949), (0.0000018232636, 0.4585893, 0.88864833), (-0.6814129, 0.7318992, 0.0000025824158), (-0.6814095, 0.7319024, 0.0000026536939), (-0.681413, 0.7318991, 0.0000025796421), (-0.6814129, 0.7318992, 0.0000025824158), (-0.6814093, 0.7319025, 0.0000026564674), (-0.6814095, 0.7319024, 0.0000026536939), (0.0000018089536, 0.4587287, -0.8885763), (1.3383708e-8, 0.45858917, -0.88864845), (-7.509391e-8, 0.4590279, -0.88842183), (0.0000018089536, 0.4587287, -0.8885763), (0, 0.4585881, -0.8886489), (1.3383708e-8, 0.45858917, -0.88864845), (0.6813046, 0.7320002, 0), (0.6812977, 0.73200643, 0), (0.68130475, 0.7319998, 0), (0.6813046, 0.7320002, 0), (0.6812974, 0.73200667, 0), (0.6812977, 0.73200643, 0), (-1.3493652e-8, -0.45886788, 0.88850456), (-0.000001823834, -0.45873028, 0.88857555), (0, -0.45886892, 0.888504), (-1.3493652e-8, -0.45886788, 0.88850456), (-0.0000018373217, -0.45872927, 0.8885761), (-0.000001823834, -0.45873028, 0.88857555), (-0.6811592, -0.73213536, 0), (-0.6811626, -0.73213214, 0), (-0.6811591, -0.7321355, 0), (-0.6811592, -0.73213536, 0), (-0.6811627, -0.73213196, 0), (-0.6811626, -0.73213214, 0), (3.0242063e-7, -0.45857194, -0.8886573), (-1.3472603e-8, -0.45873034, -0.88857555), (-0.0000018345534, -0.45887116, -0.88850284), (3.0242063e-7, -0.45857194, -0.8886573), (0, -0.4587293, -0.88857603), (-1.3472603e-8, -0.45873034, -0.88857555), (0.6813649, -0.7319438, 2.0954552e-11), (0.6812666, -0.7320354, 1.6106506e-8), (0.6813648, -0.7319441, -2.2900652e-8), (0.6813649, -0.7319438, 2.0954552e-11), (0.6815124, -0.73180646, 0), (0.6812666, -0.7320354, 1.6106506e-8), (-0.43307185, 0.000013523226, 0.9013594), (-0.43308374, 0.0000060745274, 0.90135366), (-0.43306217, 0.000019598676, 0.9013641), (-0.43307185, 0.000013523226, 0.9013594), (-0.43309346, 0, 0.90134907), (-0.43308374, 0.0000060745274, 0.90135366), (0.4330949, 0, 0.90134835), (0.43309304, 0, 0.9013492), (0.4330964, 0, 0.90134764), (0.4330949, 0, 0.90134835), (0.43309155, 0, 0.9013499), (0.43309304, 0, 0.9013492), (-0.43306196, -0.000018469538, -0.90136415), (-0.43306193, -0.000019091358, -0.90136415), (-0.43306202, -0.000017962331, -0.90136415), (-0.43306196, -0.000018469538, -0.90136415), (-0.4330619, -0.000019598674, -0.90136427), (-0.43306193, -0.000019091358, -0.90136415), (0.43309337, 0, -0.90134907), (0.4330937, 0, -0.90134895), (0.4330931, 0, -0.9013492), (0.43309337, 0, -0.90134907), (0.43309385, 0, -0.90134877), (0.4330937, 0, -0.90134895), (-0.000008229829, 0.9999999, 0.00047554978), (0.000001176155, 1, 0.0000016992645), (-2.8284228e-7, 0.99999994, 0.00033369847), (-0.000008229829, 0.9999999, 0.00047554978), (0.0000023597288, 1, 0.000003511396), (0.000001176155, 1, 0.0000016992645), (0.0000023597281, 1, 0.0000061665314), (-0.000008229829, 0.9999999, 0.00047554978), (-2.8284228e-7, 0.99999994, 0.00033369847), (0.0000023597281, 1, 0.0000061665314), (-2.8284228e-7, 0.99999994, 0.00033369847), (0.0000011761589, 1, 0.0000029554476), (0.0000023597288, 1, 0.000003511396), (0.0000011329669, 1, -0.0000027982899), (0.000001176155, 1, 0.0000016992645), (0.0000023597288, 1, 0.000003511396), (0.0000022714826, 1, -0.000005573363), (0.0000011329669, 1, -0.0000027982899), (0.0000022714826, 1, -0.000005573363), (0.0000011761589, 1, 0.0000029554476), (0.0000011329669, 1, -0.0000027982899), (0.0000022714826, 1, -0.000005573363), (0.0000023597281, 1, 0.0000061665314), (0.0000011761589, 1, 0.0000029554476), (0.0000041281382, 1, 0), (0.0000041281382, 1, 0), (0.0000041281382, 1, 0), (0.0000041281382, 1, 0), (0.0000041281382, 1, 0), (0.0000041281382, 1, 0), (-1, 0.0000024979483, 0), (-1, 0.0000024979483, 0), (-1, 0.0000024979483, 0), (-1, 0.0000024979483, 0), (-0.99999994, 0.0000024979483, 0), (-1, 0.0000024979483, 0), (6.484999e-10, 0, -1), (2.2114216e-10, 0, -1), (8.696421e-10, 0, -1), (6.484999e-10, 0, -1), (0, 0, -1), (2.2114216e-10, 0, -1), (1, -0.0000024979483, 0), (1, -0.0000024979483, 0), (0.99999994, -0.0000024979483, 0), (1, -0.0000024979483, 0), (1, -0.0000024979483, 0), (1, -0.0000024979483, 0), (1, -0.0000028926072, 0), (1, -0.0000028469212, 0), (1, -0.0000029623372, 0), (1, -0.0000028926072, 0), (1, -0.0000027771912, 0), (1, -0.0000028469212, 0), (3.9796035e-8, 0, 1), (8.3255885e-12, 0, 1), (3.7711413e-8, 0, 1), (3.9796035e-8, 0, 1), (2.263965e-8, 0, 1), (8.3255885e-12, 0, 1), (1.8368622e-8, 0, 1), (3.9796035e-8, 0, 1), (3.7711413e-8, 0, 1), (1.8368622e-8, 0, 1), (3.7711413e-8, 0, 1), (1.513534e-8, 0, 1), (5.9399474e-7, 0, 1), (1.513534e-8, 0, 1), (5.6265543e-7, 0, 1), (5.9399474e-7, 0, 1), (1.8368622e-8, 0, 1), (1.513534e-8, 0, 1), (2.263965e-8, 0, 1), (5.9399474e-7, 0, 1), (5.6265543e-7, 0, 1), (2.263965e-8, 0, 1), (5.6265543e-7, 0, 1), (8.3255885e-12, 0, 1), (4.8199817e-9, 0, 1), (1.469135e-9, 0, 1), (6.2890924e-9, 0, 1), (4.8199817e-9, 0, 1), (0, 0, 1), (1.469135e-9, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0.000001115726, 0.0000016411636), (-1, 0.0000018466798, 0.0000027163512), (-1, 0, 0), (-1, 0.000001115726, 0.0000016411636), (-1, 0.0000029624057, 0.0000043575146), (-1, 0.0000018466798, 0.0000027163512)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.449321, -0.252697, -0.072282), (-0.436764, -0.252704, -0.072282), (-0.436764, -0.252704, 0.186038), (0.449321, -0.252697, 0.186039), (-0.50429, -0.21561, 0.189329), (-0.50429, -0.238819, 0.189329), (-0.50429, -0.238819, -0.077112), (-0.504291, -0.21561, -0.077112), (0.522951, -0.21561, -0.077112), (0.522951, -0.238823, -0.077112), (0.522951, -0.238823, 0.189329), (0.522951, -0.21561, 0.189329), (0.511877, -0.249122, -0.077112), (-0.493216, -0.249122, -0.077112), (-0.493216, -0.249122, 0.189329), (0.511877, -0.249122, 0.189329), (0.511877, -0.21561, 0.19465), (0.511877, -0.238819, 0.19465), (-0.493216, -0.238815, 0.19465), (-0.493215, -0.21561, 0.19465), (0.459567, 0.171936, 0.180272), (0.459566, 0.171936, -0.052264), (-0.440904, 0.171944, -0.052264), (-0.440904, 0.171944, 0.180272), (-0.493216, -0.21561, -0.082433), (-0.493215, -0.238815, -0.082433), (0.511877, -0.238819, -0.082433), (0.511877, -0.21561, -0.082433), (-0.493215, -0.205299, 0.189329), (0.511877, -0.205303, 0.189329), (-0.493216, -0.205299, -0.077112), (0.511877, -0.205303, -0.077112), (0.493024, -0.205303, 0.180272), (-0.474364, -0.205299, 0.180272), (0.493024, -0.205303, -0.068054), (-0.474364, -0.205299, -0.068054), (0.493025, 0.203076, -0.068054), (0.493025, 0.203076, 0.180272), (-0.474363, 0.20308, 0.180272), (-0.474363, 0.20308, -0.068054), (-0.440905, -0.174167, -0.052264), (-0.440905, -0.174167, 0.180272), (0.459566, -0.174167, 0.180272), (0.459566, -0.174167, -0.052264)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(0, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0.264035, 0.818362), (0.257421, 0.67128), (0.257421, 0.818362), (0.264035, 0.818362), (0.264035, 0.67128), (0.257421, 0.67128), (0.264035, 0.67128), (0.257421, 0.818362), (0.257421, 0.67128), (0.264035, 0.67128), (0.264035, 0.818362), (0.257421, 0.818362), (0.096714, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (-0.169862, 0.818362), (0.096714, 0.264035), (-0.169862, 0.257421), (0.096714, 0.257421), (0.096714, 0.264035), (-0.169862, 0.264035), (-0.169862, 0.257421), (0.08284, 0.813362), (-0.155988, 0.684997), (0.08284, 0.684997), (0.08284, 0.813362), (-0.155988, 0.813362), (-0.155988, 0.684997), (0.830137, 0.264035), (1.096714, 0.257421), (0.830137, 0.257421), (0.830137, 0.264035), (1.096714, 0.264035), (1.096714, 0.257421), (0.830137, 0.264035), (0.830137, 0.266973), (0.8272, 0.264035), (0.264035, 0.821299), (0.264035, 0.818362), (0.266973, 0.818362), (0.8272, 0.264035), (0.830137, 0.266973), (0.830137, 0.264035), (0.096714, 0.264035), (0.096714, 0.266973), (0.099651, 0.264035), (0.257421, 0.821299), (0.254484, 0.818362), (0.257421, 0.818362), (0.830137, 0.257421), (0.8272, 0.257421), (0.830137, 0.254484), (0.8272, 0.257421), (0.830137, 0.257421), (0.830137, 0.254484), (0.096714, 0.257421), (0.099651, 0.257421), (0.096714, 0.254484), (0.096714, 0.266973), (-0.169862, 0.264035), (0.096714, 0.264035), (0.096714, 0.266973), (-0.169862, 0.266973), (-0.169862, 0.264035), (0.830137, 0.818362), (0.8272, 0.67128), (0.8272, 0.818362), (0.830137, 0.818362), (0.830137, 0.67128), (0.8272, 0.67128), (0.096714, 0.264035), (-0.169862, 0.266973), (0.096714, 0.266973), (0.096714, 0.264035), (-0.169862, 0.264035), (-0.169862, 0.266973), (0.264035, 0.818362), (0.266973, 0.67128), (0.266973, 0.818362), (0.264035, 0.818362), (0.264035, 0.67128), (0.266973, 0.67128), (0.096714, 0.257421), (-0.169862, 0.254484), (0.096714, 0.254484), (0.096714, 0.257421), (-0.169862, 0.257421), (-0.169862, 0.254484), (0.8272, 0.818362), (0.830137, 0.67128), (0.830137, 0.818362), (0.8272, 0.818362), (0.8272, 0.67128), (0.830137, 0.67128), (0.096714, 0.254484), (-0.169862, 0.257421), (0.096714, 0.257421), (0.096714, 0.254484), (-0.169862, 0.254484), (-0.169862, 0.257421), (0.254484, 0.818362), (0.257421, 0.67128), (0.257421, 0.818362), (0.254484, 0.818362), (0.254484, 0.67128), (0.257421, 0.67128), (0.8272, 0.264035), (0.830137, 0.257421), (0.830137, 0.264035), (0.8272, 0.264035), (0.8272, 0.257421), (0.830137, 0.257421), (0.257421, 0.818362), (0.264035, 0.821299), (0.257421, 0.821299), (0.257421, 0.818362), (0.264035, 0.818362), (0.264035, 0.821299), (0.830137, 0.264035), (0.8272, 0.257421), (0.8272, 0.264035), (0.830137, 0.264035), (0.830137, 0.257421), (0.8272, 0.257421), (0.099651, 0.264035), (0.096714, 0.257421), (0.096714, 0.264035), (0.099651, 0.264035), (0.099651, 0.257421), (0.096714, 0.257421), (0.091714, 0.813362), (-0.169862, 0.818362), (0.096714, 0.818362), (0.091714, 0.813362), (-0.164862, 0.813362), (-0.169862, 0.818362), (0.091714, 0.67628), (0.091714, 0.813362), (0.096714, 0.818362), (0.091714, 0.67628), (0.096714, 0.818362), (0.096714, 0.67128), (0.835137, 0.813362), (0.830137, 0.67128), (0.830137, 0.818362), (0.835137, 0.813362), (0.835137, 0.67628), (0.830137, 0.67128), (0.835137, 0.67628), (1.096714, 0.67128), (0.830137, 0.67128), (0.835137, 0.67628), (1.091714, 0.67628), (1.096714, 0.67128), (0.091714, 0.67628), (-0.164862, 0.813362), (0.091714, 0.813362), (0.091714, 0.67628), (-0.164862, 0.67628), (-0.164862, 0.813362), (0.266973, 0.67628), (0.38336, 0.813362), (0.38336, 0.67628), (0.266973, 0.67628), (0.266973, 0.813362), (0.38336, 0.813362), (0.091714, 0.266973), (-0.164862, 0.38336), (0.091714, 0.38336), (0.091714, 0.266973), (-0.164862, 0.266973), (-0.164862, 0.38336), (0.266973, 0.813362), (0.38336, 0.67628), (0.38336, 0.813362), (0.266973, 0.813362), (0.266973, 0.67628), (0.38336, 0.67628), (0.374486, 0.813362), (0.275847, 0.684997), (0.374486, 0.684997), (0.374486, 0.813362), (0.275847, 0.813362), (0.275847, 0.684997), (0.08284, 0.275847), (-0.164862, 0.266973), (0.091714, 0.266973), (0.08284, 0.275847), (-0.155988, 0.275847), (-0.164862, 0.266973), (0.08284, 0.374486), (0.08284, 0.275847), (0.091714, 0.266973), (0.08284, 0.374486), (0.091714, 0.266973), (0.091714, 0.38336), (0.844011, 0.374486), (1.091714, 0.38336), (0.835137, 0.38336), (0.844011, 0.374486), (1.08284, 0.374486), (1.091714, 0.38336), (0.844011, 0.275847), (0.844011, 0.374486), (0.835137, 0.38336), (0.844011, 0.275847), (0.835137, 0.38336), (0.835137, 0.266973), (0.844011, 0.275847), (1.08284, 0.374486), (0.844011, 0.374486), (0.844011, 0.275847), (1.08284, 0.275847), (1.08284, 0.374486), (0.844011, 0.813362), (1.08284, 0.684997), (0.844011, 0.684997), (0.844011, 0.813362), (1.08284, 0.813362), (1.08284, 0.684997), (0.275847, 0.813362), (0.374486, 0.684997), (0.275847, 0.684997), (0.275847, 0.813362), (0.374486, 0.813362), (0.374486, 0.684997)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_DresserDrawer_220_2_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1]
                rel material:binding = </root/_materials/M_DresserDrawer_220_2_0>
            }

            def GeomSubset "M_DresserDrawer_220_2_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77]
                rel material:binding = </root/_materials/M_DresserDrawer_220_2_1>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_DresserDrawer_220_2_0"
        {
            token outputs:surface.connect = </root/_materials/M_DresserDrawer_220_2_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_DresserDrawer_220_2_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/FlowerDecal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_DresserDrawer_220_2_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_DresserDrawer_220_2_1"
        {
            token outputs:surface.connect = </root/_materials/M_DresserDrawer_220_2_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (1, 0.97794116, 0.97794116)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_DresserDrawer_220_2_1/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_DresserDrawer_220_2_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

