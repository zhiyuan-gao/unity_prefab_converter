#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.0"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "DresserDrawer_220_3"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "DresserDrawer_220_3" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.504291, -0.252704, -0.372529), (0.522951, 0.20308, -0.095446)]
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 2, 1, 0, 3, 2, 4, 6, 5, 4, 7, 6, 8, 10, 9, 8, 11, 10, 12, 14, 13, 12, 15, 14, 16, 18, 17, 16, 19, 18, 20, 22, 21, 20, 23, 22, 24, 26, 25, 24, 27, 26, 19, 28, 4, 16, 11, 29, 7, 30, 24, 27, 31, 8, 17, 15, 10, 18, 5, 14, 6, 25, 13, 26, 9, 12, 29, 19, 16, 29, 28, 19, 28, 7, 4, 28, 30, 7, 27, 30, 31, 27, 24, 30, 11, 31, 29, 11, 8, 31, 17, 14, 15, 17, 18, 14, 5, 13, 14, 5, 6, 13, 12, 25, 26, 12, 13, 25, 15, 9, 10, 15, 12, 9, 4, 18, 19, 4, 5, 18, 10, 16, 17, 10, 11, 16, 24, 6, 7, 24, 25, 6, 8, 26, 27, 8, 9, 26, 32, 28, 29, 32, 33, 28, 34, 32, 29, 34, 29, 31, 33, 30, 28, 33, 35, 30, 35, 31, 30, 35, 34, 31, 36, 38, 37, 36, 39, 38, 35, 38, 39, 35, 33, 38, 34, 39, 36, 34, 35, 39, 32, 36, 37, 32, 34, 36, 23, 40, 22, 23, 41, 40, 42, 33, 32, 42, 41, 33, 20, 42, 32, 20, 32, 37, 23, 37, 38, 23, 20, 37, 41, 23, 38, 41, 38, 33, 40, 21, 22, 40, 43, 21, 41, 43, 40, 41, 42, 43, 42, 21, 43, 42, 20, 21]
            rel material:binding = </root/_materials/M_DresserDrawer_220_3_0>
            normal3f[] normals = [(0.000007903921, -1, 0), (0.00000790392, -1, 0), (0.00000790392, -1, 0), (0.000007903921, -1, 0), (0.000007903921, -1, 0), (0.00000790392, -1, 0), (-1, -0.0000023985954, 2.1030522e-7), (-1, -0.000040975956, 0.0000035927098), (-1, 0, 0), (-1, -0.0000023985954, 2.1030522e-7), (-1, -0.00004337455, 0.000003803015), (-1, -0.000040975956, 0.0000035927098), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 1.726037e-8), (0, -1, 8.738206e-8), (0, -1, 1.0464247e-7), (0, -1, 1.726037e-8), (0, -1, 0), (0, -1, 8.738206e-8), (-3.8991965e-9, 0, 1), (-5.815192e-11, 0, 1), (-3.957337e-9, 0, 1), (-3.8991965e-9, 0, 1), (0, 0, 1), (-5.815192e-11, 0, 1), (-0.000008886385, -1, -1.5847935e-8), (-0.000008886377, -1, -8.267039e-8), (-0.000008886387, -1, 0), (-0.000008886385, -1, -1.5847935e-8), (-0.000008886375, -1, -9.851828e-8), (-0.000008886377, -1, -8.267039e-8), (2.8710993e-8, 0, -1), (4.2811082e-10, 0, -1), (2.9139212e-8, 0, -1), (2.8710993e-8, 0, -1), (0, 0, -1), (4.2811082e-10, 0, -1), (-0.39268398, 0.4217834, 0.8172503), (-0.39268398, 0.4217834, 0.8172503), (-0.39268398, 0.4217834, 0.8172503), (0.39266285, 0.42188364, 0.8172087), (0.39266285, 0.42188364, 0.8172087), (0.39266285, 0.42188364, 0.8172087), (-0.39266095, 0.42175534, -0.81727576), (-0.39266095, 0.42175534, -0.81727576), (-0.39266095, 0.42175534, -0.81727576), (0.39266482, 0.42188066, -0.81720936), (0.39266482, 0.42188066, -0.81720936), (0.39266482, 0.42188066, -0.81720936), (0.39276665, -0.42199516, 0.81710124), (0.39276665, -0.42199516, 0.81710124), (0.39276665, -0.42199516, 0.81710124), (-0.39286143, -0.42207602, 0.8170139), (-0.39286146, -0.422076, 0.8170139), (-0.39286143, -0.42207602, 0.8170139), (-0.39250708, -0.42191595, -0.8172669), (-0.39250708, -0.42191595, -0.8172669), (-0.39250708, -0.42191595, -0.8172669), (0.39251083, -0.4220413, -0.8172003), (0.39251083, -0.4220413, -0.8172003), (0.39251083, -0.4220413, -0.8172003), (1.3354781e-8, 0.45872763, 0.8885769), (0.0000018034453, 0.45859015, 0.8886479), (0, 0.4587287, 0.8885764), (1.3354781e-8, 0.45872763, 0.8885769), (-6.9575856e-7, 0.459015, 0.88842845), (0.0000018034453, 0.45859015, 0.8886479), (-0.68141294, 0.73189914, 0.0000025824156), (-0.68116385, 0.732131, 1.9244958e-7), (-0.68141305, 0.7318991, 0.0000025796421), (-0.68141294, 0.73189914, 0.0000025824156), (-0.6814093, 0.7319025, 0.0000026564674), (-0.68116385, 0.732131, 1.9244958e-7), (-0.000001912957, 0.4591541, -0.88835657), (-1.8001609e-8, 0.45888677, -0.8884947), (3.1186562e-7, 0.45902738, -0.8884221), (-0.000001912957, 0.4591541, -0.88835657), (0, 0.45858762, -0.8886492), (-1.8001609e-8, 0.45888677, -0.8884947), (0.6813045, 0.73200005, 0), (0.68129766, 0.7320066, 0), (0.6813048, 0.7319998, 0), (0.6813045, 0.73200005, 0), (0.68129736, 0.7320068, 0), (0.68129766, 0.7320066, 0), (-1.34936995e-8, -0.4588684, 0.88850427), (-0.0000018238397, -0.45873204, 0.88857466), (0, -0.4588694, 0.8885037), (-1.34936995e-8, -0.4588684, 0.88850427), (-0.0000018373281, -0.45873103, 0.88857514), (-0.0000018238397, -0.45873204, 0.88857466), (-0.68115795, -0.7321364, -0.000002581565), (-0.6811306, -0.7321619, -9.6661424e-8), (-0.6811591, -0.7321354, -0.0000026782318), (-0.68115795, -0.7321364, -0.000002581565), (-0.6811296, -0.7321629, 0), (-0.6811306, -0.7321619, -9.6661424e-8), (-0.0000018426091, -0.4588696, -0.8885037), (-1.3632678e-8, -0.45872888, -0.88857627), (-0.0000018562476, -0.45887062, -0.8885031), (-0.0000018426091, -0.4588696, -0.8885037), (0, -0.45872787, -0.88857687), (-1.3632678e-8, -0.45872888, -0.88857627), (0.6810432, -0.7322431, -0.000015687656), (0.68103117, -0.7322545, 7.964862e-7), (0.6812974, -0.73200667, 0.000022065153), (0.6810432, -0.7322431, -0.000015687656), (0.68102115, -0.7322637, 0), (0.68103117, -0.7322545, 7.964862e-7), (-0.43308485, -0.000013523841, 0.9013532), (-0.43307143, -0.000006074684, 0.90135956), (-0.43309575, -0.000019600124, 0.9013479), (-0.43308485, -0.000013523841, 0.9013532), (-0.43306056, 0, 0.90136486), (-0.43307143, -0.000006074684, 0.90135956), (0.4330939, 0, 0.9013488), (0.43309316, 0, 0.9013492), (0.43309444, 0, 0.9013486), (0.4330939, 0, 0.9013488), (0.4330926, 0, 0.9013495), (0.43309316, 0, 0.9013492), (-0.43306106, -0.00001846955, -0.90136456), (-0.4330599, -0.00001909138, -0.90136516), (-0.43306202, -0.000017962331, -0.90136415), (-0.43306106, -0.00001846955, -0.90136456), (-0.43305895, -0.000019598705, -0.90136564), (-0.4330599, -0.00001909138, -0.90136516), (0.43309107, 0, -0.9013502), (0.43309426, 0, -0.90134865), (0.43308842, 0, -0.9013514), (0.43309107, 0, -0.9013502), (0.43309683, 0, -0.90134734), (0.43309426, 0, -0.90134865), (-0.000008230456, 0.9999999, 0.00047554978), (0.000001176155, 1, 0.0000016992645), (-2.8284205e-7, 0.99999994, 0.00033369847), (-0.000008230456, 0.9999999, 0.00047554978), (0.0000023597288, 1, 0.000003511396), (0.000001176155, 1, 0.0000016992645), (0.000002359712, 1, 0.000004313492), (-0.000008230456, 0.9999999, 0.00047554978), (-2.8284205e-7, 0.99999994, 0.00033369847), (0.000002359712, 1, 0.000004313492), (-2.8284205e-7, 0.99999994, 0.00033369847), (0.000001176216, 1, 0.0000020502002), (0.0000023597288, 1, 0.000003511396), (0.0000011329633, 1, -0.0000027982899), (0.000001176155, 1, 0.0000016992645), (0.0000023597288, 1, 0.000003511396), (0.0000022714755, 1, -0.000005579681), (0.0000011329633, 1, -0.0000027982899), (0.0000022714755, 1, -0.000005579681), (0.000001176216, 1, 0.0000020502002), (0.0000011329633, 1, -0.0000027982899), (0.0000022714755, 1, -0.000005579681), (0.000002359712, 1, 0.000004313492), (0.000001176216, 1, 0.0000020502002), (0.0000041281337, 1, 1.6061119e-8), (0.0000041281373, 1, 8.435688e-8), (0.000004128133, 0.99999994, 0), (0.0000041281337, 1, 1.6061119e-8), (0.0000041281382, 1, 1.00418035e-7), (0.0000041281373, 1, 8.435688e-8), (-1, 8.68823e-7, -0.0000014192362), (-1, 0.0000016291251, -0.000002661202), (-1, 0.0000024979481, -0.000004080438), (-1, 8.68823e-7, -0.0000014192362), (-1, 0, 0), (-1, 0.0000016291251, -0.000002661202), (8.8884367e-10, 0, -1), (3.0310074e-10, 0, -1), (1.1919449e-9, 0, -1), (8.8884367e-10, 0, -1), (0, 0, -0.99999994), (3.0310074e-10, 0, -1), (1, -8.688232e-7, 0.000002661202), (1, -0.0000016291253, 0.0000014192362), (1, -0.0000024979483, 0), (1, -8.688232e-7, 0.000002661202), (1, 0, 0.000004080438), (1, -0.0000016291253, 0.0000014192362), (1, -0.0000017312414, 0.000002716381), (1, -0.0000010459502, 0.000001641134), (0.99999994, -0.0000027771914, 0.0000043575146), (1, -0.0000017312414, 0.000002716381), (1, 0, 0), (1, -0.0000010459502, 0.000001641134), (-1.3628191e-7, 0, 1), (9.794559e-11, 0, 1), (-1.2912938e-7, 0, 1), (-1.3628191e-7, 0, 1), (-6.7919177e-9, 0, 1), (9.794559e-11, 0, 1), (3.1468264e-9, 0, 1), (-1.3628191e-7, 0, 1), (-1.2912938e-7, 0, 1), (3.1468264e-9, 0, 1), (-1.2912938e-7, 0, 1), (7.473726e-9, 0, 1), (-1.8038165e-7, 0, 1), (7.473726e-9, 0, 1), (-1.710563e-7, 0, 1), (-1.8038165e-7, 0, 1), (3.1468264e-9, 0, 1), (7.473726e-9, 0, 1), (-6.7919177e-9, 0, 1), (-1.8038165e-7, 0, 1), (-1.710563e-7, 0, 1), (-6.7919177e-9, 0, 1), (-1.710563e-7, 0, 1), (9.794559e-11, 0, 1), (2.5453842e-8, 0, 1), (7.758356e-9, 0, 1), (3.3212068e-8, 0, 1), (2.5453842e-8, 0, 1), (0, 0, 1), (7.758356e-9, 0, 1), (0, 1, 1.1333689e-8), (0, 1, 5.9121938e-8), (0, 1, 0), (0, 1, 1.1333689e-8), (0, 1, 7.0455656e-8), (0, 1, 5.9121938e-8), (-1, 9.762603e-7, -0.000002636459), (-1, 0.0000016158448, -0.0000015928944), (-1, 0, -0.000004229353), (-1, 9.762603e-7, -0.000002636459), (-1, 0.000002592105, 0), (-1, 0.0000016158448, -0.0000015928944)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.449321, -0.252697, -0.365453), (-0.436764, -0.252704, -0.365453), (-0.436764, -0.252704, -0.107134), (0.449321, -0.252697, -0.107133), (-0.50429, -0.21561, -0.100767), (-0.50429, -0.238819, -0.100767), (-0.50429, -0.238819, -0.367208), (-0.504291, -0.21561, -0.367208), (0.522951, -0.21561, -0.367208), (0.522951, -0.238823, -0.367208), (0.522951, -0.238815, -0.100767), (0.522951, -0.21561, -0.100767), (0.511877, -0.249122, -0.367208), (-0.493215, -0.249122, -0.367208), (-0.493216, -0.249122, -0.100767), (0.511877, -0.249122, -0.100767), (0.511877, -0.21561, -0.095446), (0.511877, -0.238819, -0.095446), (-0.493215, -0.238815, -0.095446), (-0.493216, -0.21561, -0.095446), (0.459566, 0.171936, -0.109824), (0.459566, 0.171936, -0.34236), (-0.440904, 0.171944, -0.34236), (-0.440905, 0.171944, -0.109824), (-0.493216, -0.21561, -0.372529), (-0.493215, -0.238815, -0.372529), (0.511877, -0.238819, -0.372529), (0.511877, -0.21561, -0.372529), (-0.493215, -0.205299, -0.100767), (0.511877, -0.205303, -0.100767), (-0.493216, -0.205299, -0.367208), (0.511877, -0.205303, -0.367208), (0.493024, -0.205303, -0.109824), (-0.474364, -0.205299, -0.109824), (0.493025, -0.205303, -0.35815), (-0.474364, -0.205299, -0.35815), (0.493025, 0.203076, -0.35815), (0.493025, 0.203076, -0.109824), (-0.474364, 0.20308, -0.109824), (-0.474363, 0.20308, -0.35815), (-0.440905, -0.174167, -0.34236), (-0.440905, -0.174167, -0.109824), (0.459565, -0.174167, -0.109824), (0.459566, -0.174167, -0.34236)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(0, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0.264035, 0.818362), (0.257421, 0.67128), (0.257421, 0.818362), (0.264035, 0.818362), (0.264035, 0.67128), (0.257421, 0.67128), (0.264035, 0.67128), (0.257421, 0.818362), (0.257421, 0.67128), (0.264035, 0.67128), (0.264035, 0.818362), (0.257421, 0.818362), (0.096714, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (-0.169862, 0.818362), (0.096714, 0.264035), (-0.169862, 0.257421), (0.096714, 0.257421), (0.096714, 0.264035), (-0.169862, 0.264035), (-0.169862, 0.257421), (0.08284, 0.813362), (-0.155988, 0.684997), (0.08284, 0.684997), (0.08284, 0.813362), (-0.155988, 0.813362), (-0.155988, 0.684997), (0.830137, 0.264035), (1.096714, 0.257421), (0.830137, 0.257421), (0.830137, 0.264035), (1.096714, 0.264035), (1.096714, 0.257421), (0.830137, 0.264035), (0.830137, 0.266973), (0.8272, 0.264035), (0.264035, 0.821299), (0.264035, 0.818362), (0.266973, 0.818362), (0.8272, 0.264035), (0.830137, 0.266973), (0.830137, 0.264035), (0.096714, 0.264035), (0.096714, 0.266973), (0.099651, 0.264035), (0.257421, 0.821299), (0.254484, 0.818362), (0.257421, 0.818362), (0.830137, 0.257421), (0.8272, 0.257421), (0.830137, 0.254484), (0.8272, 0.257421), (0.830137, 0.257421), (0.830137, 0.254484), (0.096714, 0.257421), (0.099651, 0.257421), (0.096714, 0.254484), (0.096714, 0.266973), (-0.169862, 0.264035), (0.096714, 0.264035), (0.096714, 0.266973), (-0.169862, 0.266973), (-0.169862, 0.264035), (0.830137, 0.818362), (0.8272, 0.67128), (0.8272, 0.818362), (0.830137, 0.818362), (0.830137, 0.67128), (0.8272, 0.67128), (0.096714, 0.264035), (-0.169862, 0.266973), (0.096714, 0.266973), (0.096714, 0.264035), (-0.169862, 0.264035), (-0.169862, 0.266973), (0.264035, 0.818362), (0.266973, 0.67128), (0.266973, 0.818362), (0.264035, 0.818362), (0.264035, 0.67128), (0.266973, 0.67128), (0.096714, 0.257421), (-0.169862, 0.254484), (0.096714, 0.254484), (0.096714, 0.257421), (-0.169862, 0.257421), (-0.169862, 0.254484), (0.8272, 0.818362), (0.830137, 0.67128), (0.830137, 0.818362), (0.8272, 0.818362), (0.8272, 0.67128), (0.830137, 0.67128), (0.096714, 0.254484), (-0.169862, 0.257421), (0.096714, 0.257421), (0.096714, 0.254484), (-0.169862, 0.254484), (-0.169862, 0.257421), (0.254484, 0.818362), (0.257421, 0.67128), (0.257421, 0.818362), (0.254484, 0.818362), (0.254484, 0.67128), (0.257421, 0.67128), (0.8272, 0.264035), (0.830137, 0.257421), (0.830137, 0.264035), (0.8272, 0.264035), (0.8272, 0.257421), (0.830137, 0.257421), (0.257421, 0.818362), (0.264035, 0.821299), (0.257421, 0.821299), (0.257421, 0.818362), (0.264035, 0.818362), (0.264035, 0.821299), (0.830137, 0.264035), (0.8272, 0.257421), (0.8272, 0.264035), (0.830137, 0.264035), (0.830137, 0.257421), (0.8272, 0.257421), (0.099651, 0.264035), (0.096714, 0.257421), (0.096714, 0.264035), (0.099651, 0.264035), (0.099651, 0.257421), (0.096714, 0.257421), (0.091714, 0.813362), (-0.169862, 0.818362), (0.096714, 0.818362), (0.091714, 0.813362), (-0.164862, 0.813362), (-0.169862, 0.818362), (0.091714, 0.67628), (0.091714, 0.813362), (0.096714, 0.818362), (0.091714, 0.67628), (0.096714, 0.818362), (0.096714, 0.67128), (0.835137, 0.813362), (0.830137, 0.67128), (0.830137, 0.818362), (0.835137, 0.813362), (0.835137, 0.67628), (0.830137, 0.67128), (0.835137, 0.67628), (1.096714, 0.67128), (0.830137, 0.67128), (0.835137, 0.67628), (1.091714, 0.67628), (1.096714, 0.67128), (0.091714, 0.67628), (-0.164862, 0.813362), (0.091714, 0.813362), (0.091714, 0.67628), (-0.164862, 0.67628), (-0.164862, 0.813362), (0.266973, 0.67628), (0.38336, 0.813362), (0.38336, 0.67628), (0.266973, 0.67628), (0.266973, 0.813362), (0.38336, 0.813362), (0.091714, 0.266973), (-0.164862, 0.38336), (0.091714, 0.38336), (0.091714, 0.266973), (-0.164862, 0.266973), (-0.164862, 0.38336), (0.266973, 0.813362), (0.38336, 0.67628), (0.38336, 0.813362), (0.266973, 0.813362), (0.266973, 0.67628), (0.38336, 0.67628), (0.374486, 0.813362), (0.275847, 0.684997), (0.374486, 0.684997), (0.374486, 0.813362), (0.275847, 0.813362), (0.275847, 0.684997), (0.08284, 0.275847), (-0.164862, 0.266973), (0.091714, 0.266973), (0.08284, 0.275847), (-0.155988, 0.275847), (-0.164862, 0.266973), (0.08284, 0.374486), (0.08284, 0.275847), (0.091714, 0.266973), (0.08284, 0.374486), (0.091714, 0.266973), (0.091714, 0.38336), (0.844011, 0.374486), (1.091714, 0.38336), (0.835137, 0.38336), (0.844011, 0.374486), (1.08284, 0.374486), (1.091714, 0.38336), (0.844011, 0.275847), (0.844011, 0.374486), (0.835137, 0.38336), (0.844011, 0.275847), (0.835137, 0.38336), (0.835137, 0.266973), (0.844011, 0.275847), (1.08284, 0.374486), (0.844011, 0.374486), (0.844011, 0.275847), (1.08284, 0.275847), (1.08284, 0.374486), (0.844011, 0.813362), (1.08284, 0.684997), (0.844011, 0.684997), (0.844011, 0.813362), (1.08284, 0.813362), (1.08284, 0.684997), (0.275847, 0.813362), (0.374486, 0.684997), (0.275847, 0.684997), (0.275847, 0.813362), (0.374486, 0.813362), (0.374486, 0.684997)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_DresserDrawer_220_3_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1]
                rel material:binding = </root/_materials/M_DresserDrawer_220_3_0>
            }

            def GeomSubset "M_DresserDrawer_220_3_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77]
                rel material:binding = </root/_materials/M_DresserDrawer_220_3_1>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_DresserDrawer_220_3_0"
        {
            token outputs:surface.connect = </root/_materials/M_DresserDrawer_220_3_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_DresserDrawer_220_3_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/FlowerDecal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_DresserDrawer_220_3_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_DresserDrawer_220_3_1"
        {
            token outputs:surface.connect = </root/_materials/M_DresserDrawer_220_3_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (1, 0.97794116, 0.97794116)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_DresserDrawer_220_3_1/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_DresserDrawer_220_3_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

