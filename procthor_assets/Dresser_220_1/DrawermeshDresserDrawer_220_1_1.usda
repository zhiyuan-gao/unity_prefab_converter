#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "DresserDrawer_220_1"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "DresserDrawer_220_1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.522951, -0.252704, 0.208044), (0.50429, 0.20308, 0.485127)]
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 2, 1, 0, 3, 2, 4, 6, 5, 4, 7, 6, 8, 10, 9, 8, 11, 10, 12, 14, 13, 12, 15, 14, 16, 18, 17, 16, 19, 18, 20, 22, 21, 20, 23, 22, 24, 26, 25, 24, 27, 26, 19, 28, 4, 16, 11, 29, 7, 30, 24, 27, 31, 8, 17, 15, 10, 18, 5, 14, 6, 25, 13, 26, 9, 12, 29, 19, 16, 29, 28, 19, 28, 7, 4, 28, 30, 7, 27, 30, 31, 27, 24, 30, 11, 31, 29, 11, 8, 31, 17, 14, 15, 17, 18, 14, 5, 13, 14, 5, 6, 13, 12, 25, 26, 12, 13, 25, 15, 9, 10, 15, 12, 9, 4, 18, 19, 4, 5, 18, 10, 16, 17, 10, 11, 16, 24, 6, 7, 24, 25, 6, 8, 26, 27, 8, 9, 26, 32, 28, 29, 32, 33, 28, 34, 32, 29, 34, 29, 31, 33, 30, 28, 33, 35, 30, 35, 31, 30, 35, 34, 31, 36, 38, 37, 36, 39, 38, 35, 38, 39, 35, 33, 38, 34, 39, 36, 34, 35, 39, 32, 36, 37, 32, 34, 36, 23, 40, 22, 23, 41, 40, 42, 33, 32, 42, 41, 33, 20, 42, 32, 20, 32, 37, 23, 37, 38, 23, 20, 37, 41, 23, 38, 41, 38, 33, 40, 21, 22, 40, 43, 21, 41, 43, 40, 41, 42, 43, 42, 21, 43, 42, 20, 21]
            rel material:binding = </root/_materials/M_DresserDrawer_220_1_0>
            normal3f[] normals = [(0.000009013845, 1, 0), (0.000009013843, 1, 0), (0.000009013842, 0.99999994, 0), (0.000009013845, 1, 0), (0.000009013845, 1, 0), (0.000009013843, 1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, -1.945229e-8), (0, 1, -9.8478715e-8), (0, 1, -1.1793095e-7), (0, 1, -1.945229e-8), (0, 1, 0), (0, 1, -9.8478715e-8), (-1.056436e-9, 0, -1), (-1.5755505e-11, 0, -1), (-1.072189e-9, 0, -1), (-1.056436e-9, 0, -1), (0, 0, -1), (-1.5755505e-11, 0, -1), (-0.000007777648, 1, 0), (-0.0000077776485, 1, 0), (-0.000007777647, 1, 0), (-0.000007777648, 1, 0), (-0.0000077776485, 1, 0), (-0.0000077776485, 1, 0), (6.1860073e-9, 0, 1), (9.223725e-11, 0, 1), (6.27827e-9, 0, 1), (6.1860073e-9, 0, 1), (0, 0, 0.99999994), (9.223725e-11, 0, 1), (-0.3926934, -0.42174998, -0.81726307), (-0.3926934, -0.42174998, -0.81726307), (-0.39309713, -0.42149985, -0.817198), (0.39266482, -0.42188066, -0.81720936), (0.39266482, -0.42188066, -0.81720936), (0.39266482, -0.42188066, -0.81720936), (-0.39269063, -0.42175055, 0.81726414), (-0.39269063, -0.42175055, 0.81726414), (-0.39269063, -0.42175055, 0.81726414), (0.39266482, -0.42188066, 0.81720936), (0.39266482, -0.42188066, 0.81720936), (0.39266482, -0.42188066, 0.81720936), (0.3927374, 0.42199862, -0.8171136), (0.3927374, 0.42199862, -0.8171136), (0.3927374, 0.42199862, -0.8171136), (-0.39250708, 0.42191595, -0.8172669), (-0.39250708, 0.42191595, -0.8172669), (-0.39250708, 0.42191595, -0.8172669), (-0.39211932, 0.4216165, 0.81760746), (-0.39211932, 0.4216165, 0.8176075), (-0.39250952, 0.4218855, 0.8172814), (0.39251065, 0.42204165, 0.81720024), (0.39251065, 0.42204165, 0.81720024), (0.39251065, 0.42204165, 0.81720024), (-1.9460202e-8, -0.45842895, -0.88873106), (0.0000018232631, -0.45858967, -0.88864815), (0, -0.45872822, -0.8885767), (-1.9460202e-8, -0.45842895, -0.88873106), (0.0000018367584, -0.45858863, -0.8886486), (0.0000018232631, -0.45858967, -0.88864815), (-0.681446, -0.7318683, 0), (-0.6814427, -0.7318714, 0), (-0.6814462, -0.7318682, 0), (-0.681446, -0.7318683, 0), (-0.68144256, -0.73187155, 0), (-0.6814427, -0.7318714, 0), (-1.6927766e-7, -0.45843, 0.88873047), (1.33870754e-8, -0.4585886, 0.8886486), (-1.671242e-8, -0.4583032, 0.88879585), (-1.6927766e-7, -0.45843, 0.88873047), (0, -0.45858762, 0.8886492), (1.33870754e-8, -0.4585886, 0.8886486), (0.6813046, -0.7320002, 0), (0.6812977, -0.73200643, 0), (0.68130475, -0.7319998, 0), (0.6813046, -0.7320002, 0), (0.6812974, -0.73200667, 0), (0.6812977, -0.73200643, 0), (3.2415798e-8, 0.45844218, -0.8887242), (-0.000001823835, 0.4587296, -0.888576), (0, 0.45886922, -0.8885038), (3.2415798e-8, 0.45844218, -0.8887242), (-0.0000018373222, 0.4583025, -0.8887962), (-0.000001823835, 0.4587296, -0.888576), (-0.68112725, 0.732165, -0.0000025814427), (-0.6811615, 0.7321332, -9.666344e-8), (-0.681126, 0.73216635, -0.0000026781015), (-0.68112725, 0.732165, -0.0000025814427), (-0.68116283, 0.73213196, 0), (-0.6811615, 0.7321332, -9.666344e-8), (-0.0000017972088, 0.4588692, 0.8885038), (-1.3284137e-8, 0.45872748, 0.88857704), (-0.0000018104997, 0.45887023, 0.88850325), (-0.0000017972088, 0.4588692, 0.8885038), (0, 0.4587264, 0.8885776), (-1.3284137e-8, 0.45872748, 0.88857704), (0.681259, 0.73204255, -0.00001859553), (0.6810287, 0.7322567, -6.964136e-7), (0.6812679, 0.7320342, -0.000019291734), (0.681259, 0.73204255, -0.00001859553), (0.6810198, 0.73226506, 0), (0.6810287, 0.7322567, -6.964136e-7), (-0.4330834, 0.000013523869, -0.90135384), (-0.4330731, 0.000006074697, -0.90135884), (-0.4330918, 0.000019600166, -0.90134984), (-0.4330834, 0.000013523869, -0.90135384), (-0.4330647, 0, -0.9013628), (-0.4330731, 0.000006074697, -0.90135884), (0.43306848, 0.000012395292, -0.90136105), (0.43308392, 0.0000055685214, -0.9013536), (0.43305582, 0.000017962346, -0.9013671), (0.43306848, 0.000012395292, -0.90136105), (0.4330966, 0, -0.9013476), (0.43308392, 0.0000055685214, -0.9013536), (-0.43308458, 0.000006074895, 0.9013533), (-0.4330725, 0.000013522847, 0.9013591), (-0.43309438, 0, 0.9013486), (-0.43308458, 0.000006074895, 0.9013533), (-0.4330627, 0.000019598665, 0.9013638), (-0.4330725, 0.000013522847, 0.9013591), (0.43308356, 0.000012395497, 0.90135384), (0.43307114, 0.0000055669716, 0.9013598), (0.43309364, 0.000017963643, 0.90134895), (0.43308356, 0.000012395497, 0.90135384), (0.43306103, 0, 0.90136456), (0.43307114, 0.0000055669716, 0.9013598), (-5.261213e-7, -0.99999994, -0.00033184656), (-3.1979755e-7, -0.99999994, -0.00033822778), (0.0000011329674, -0.99999994, -0.00033370205), (-5.261213e-7, -0.99999994, -0.00033184656), (0.0000023596992, -1, -0.0000055285645), (-3.1979755e-7, -0.99999994, -0.00033822778), (0.0000023597604, -1, -0.0000061673145), (-5.261213e-7, -0.99999994, -0.00033184656), (0.0000011329674, -0.99999994, -0.00033370205), (0.0000023597604, -1, -0.0000061673145), (0.0000011329674, -0.99999994, -0.00033370205), (0.0000011760441, -1, -0.0000029554822), (0.0000023596992, -1, -0.0000055285645), (0.0000011328593, -1, 0.0000028003133), (-3.1979755e-7, -0.99999994, -0.00033822778), (0.0000023596992, -1, -0.0000055285645), (0.000002271527, -1, 0.000005574068), (0.0000011328593, -1, 0.0000028003133), (0.000002271527, -1, 0.000005574068), (0.0000011760441, -1, -0.0000029554822), (0.0000011328593, -1, 0.0000028003133), (0.000002271527, -1, 0.000005574068), (0.0000023597604, -1, -0.0000061673145), (0.0000011760441, -1, -0.0000029554822), (0.000004128139, -1, 0), (0.0000041281382, -1, 0), (0.0000041281387, -1, 0), (0.000004128139, -1, 0), (0.0000041281382, -1, 0), (0.0000041281382, -1, 0), (-1, -0.0000024979483, 0), (-1, -0.0000024979483, 0), (-0.99999994, -0.0000024979483, 0), (-1, -0.0000024979483, 0), (-1, -0.0000024979481, 0), (-1, -0.0000024979483, 0), (6.1371432e-9, 0, 1), (2.092801e-9, 0, 1), (8.229945e-9, 0, 1), (6.1371432e-9, 0, 1), (0, 0, 1), (2.092801e-9, 0, 1), (1, 0.0000016291253, 0.0000026612022), (1, 8.688232e-7, 0.0000014192364), (1, 0, 0), (1, 0.0000016291253, 0.0000026612022), (0.99999994, 0.0000024979483, 0.0000040804384), (1, 8.688232e-7, 0.0000014192364), (1, 0.000002883235, 0), (1, 0.0000028412592, 0), (1, 0.0000029473026, 0), (1, 0.000002883235, 0), (0.99999994, 0.0000027771914, 0), (1, 0.0000028412592, 0), (-7.2615126e-7, 0.0000013991059, -1), (0.0000011399814, 0, -1), (7.853774e-7, 0.0000013258119, -1), (-7.2615126e-7, 0.0000013991059, -1), (4.3224063e-7, 5.3326435e-8, -1), (0.0000011399814, 0, -1), (0.000012369246, -0.000015978716, -1), (-7.2615126e-7, 0.0000013991059, -1), (7.853774e-7, 0.0000013258119, -1), (0.000012369246, -0.000015978716, -1), (7.853774e-7, 0.0000013258119, -1), (0.000013685432, -0.000015070146, -1), (-0.000015746262, -0.000014635221, -1), (0.000013685432, -0.000015070146, -1), (-0.000014798538, -0.000013744924, -1), (-0.000015746262, -0.000014635221, -1), (0.000012369246, -0.000015978716, -1), (0.000013685432, -0.000015070146, -1), (4.3224063e-7, 5.3326435e-8, -1), (-0.000015746262, -0.000014635221, -1), (-0.000014798538, -0.000013744924, -1), (4.3224063e-7, 5.3326435e-8, -1), (-0.000014798538, -0.000013744924, -1), (0.0000011399814, 0, -1), (-3.371997e-8, 0.0000028845732, -1), (-1.0277898e-8, 0.0000028846046, -1), (-4.39977e-8, 0.0000028845598, -1), (-3.371997e-8, 0.0000028845732, -1), (0, 0.000002884618, -1), (-1.0277898e-8, 0.0000028846046, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, -0.0000029598275, 0), (-1, -0.0000028875584, 0), (-1, -0.0000030701378, 0), (-1, -0.0000029598275, 0), (-1, -0.000002777248, 0), (-1, -0.0000028875584, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.449321, -0.252696, 0.220043), (0.436763, -0.252704, 0.220044), (0.436763, -0.252704, 0.478363), (-0.449321, -0.252696, 0.478364), (0.50429, -0.21561, 0.479806), (0.50429, -0.238819, 0.479806), (0.50429, -0.238819, 0.213365), (0.50429, -0.21561, 0.213365), (-0.522951, -0.21561, 0.213365), (-0.522951, -0.238822, 0.213365), (-0.522951, -0.238815, 0.479806), (-0.522951, -0.21561, 0.479806), (-0.511876, -0.249122, 0.213365), (0.493216, -0.249122, 0.213365), (0.493215, -0.249122, 0.479806), (-0.511876, -0.249122, 0.479806), (-0.511877, -0.21561, 0.485127), (-0.511876, -0.238819, 0.485127), (0.493215, -0.238815, 0.485127), (0.493216, -0.21561, 0.485127), (-0.459567, 0.171937, 0.470749), (-0.459567, 0.171937, 0.238213), (0.440904, 0.171944, 0.238213), (0.440904, 0.171944, 0.470749), (0.493216, -0.21561, 0.208044), (0.493215, -0.238815, 0.208044), (-0.511876, -0.238819, 0.208044), (-0.511877, -0.21561, 0.208044), (0.493216, -0.205299, 0.479806), (-0.511877, -0.205303, 0.479806), (0.493216, -0.205299, 0.213365), (-0.511877, -0.205303, 0.213365), (-0.493025, -0.205303, 0.470748), (0.474364, -0.205299, 0.470748), (-0.493024, -0.205303, 0.222422), (0.474364, -0.205299, 0.222422), (-0.493025, 0.203076, 0.222422), (-0.493025, 0.203076, 0.470748), (0.474363, 0.20308, 0.470748), (0.474363, 0.20308, 0.222422), (0.440905, -0.174167, 0.238212), (0.440905, -0.174167, 0.470748), (-0.459566, -0.174167, 0.470748), (-0.459566, -0.174167, 0.238212)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(0, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0.264035, 0.818362), (0.257421, 0.67128), (0.257421, 0.818362), (0.264035, 0.818362), (0.264035, 0.67128), (0.257421, 0.67128), (0.264035, 0.67128), (0.257421, 0.818362), (0.257421, 0.67128), (0.264035, 0.67128), (0.264035, 0.818362), (0.257421, 0.818362), (0.096714, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (-0.169862, 0.818362), (0.096714, 0.264035), (-0.169862, 0.257421), (0.096714, 0.257421), (0.096714, 0.264035), (-0.169862, 0.264035), (-0.169862, 0.257421), (0.08284, 0.813362), (-0.155988, 0.684997), (0.08284, 0.684997), (0.08284, 0.813362), (-0.155988, 0.813362), (-0.155988, 0.684997), (0.830137, 0.264035), (1.096714, 0.257421), (0.830137, 0.257421), (0.830137, 0.264035), (1.096714, 0.264035), (1.096714, 0.257421), (0.830137, 0.264035), (0.830137, 0.266973), (0.8272, 0.264035), (0.264035, 0.821299), (0.264035, 0.818362), (0.266973, 0.818362), (0.8272, 0.264035), (0.830137, 0.266973), (0.830137, 0.264035), (0.096714, 0.264035), (0.096714, 0.266973), (0.099651, 0.264035), (0.257421, 0.821299), (0.254484, 0.818362), (0.257421, 0.818362), (0.830137, 0.257421), (0.8272, 0.257421), (0.830137, 0.254484), (0.8272, 0.257421), (0.830137, 0.257421), (0.830137, 0.254484), (0.096714, 0.257421), (0.099651, 0.257421), (0.096714, 0.254484), (0.096714, 0.266973), (-0.169862, 0.264035), (0.096714, 0.264035), (0.096714, 0.266973), (-0.169862, 0.266973), (-0.169862, 0.264035), (0.830137, 0.818362), (0.8272, 0.67128), (0.8272, 0.818362), (0.830137, 0.818362), (0.830137, 0.67128), (0.8272, 0.67128), (0.096714, 0.264035), (-0.169862, 0.266973), (0.096714, 0.266973), (0.096714, 0.264035), (-0.169862, 0.264035), (-0.169862, 0.266973), (0.264035, 0.818362), (0.266973, 0.67128), (0.266973, 0.818362), (0.264035, 0.818362), (0.264035, 0.67128), (0.266973, 0.67128), (0.096714, 0.257421), (-0.169862, 0.254484), (0.096714, 0.254484), (0.096714, 0.257421), (-0.169862, 0.257421), (-0.169862, 0.254484), (0.8272, 0.818362), (0.830137, 0.67128), (0.830137, 0.818362), (0.8272, 0.818362), (0.8272, 0.67128), (0.830137, 0.67128), (0.096714, 0.254484), (-0.169862, 0.257421), (0.096714, 0.257421), (0.096714, 0.254484), (-0.169862, 0.254484), (-0.169862, 0.257421), (0.254484, 0.818362), (0.257421, 0.67128), (0.257421, 0.818362), (0.254484, 0.818362), (0.254484, 0.67128), (0.257421, 0.67128), (0.8272, 0.264035), (0.830137, 0.257421), (0.830137, 0.264035), (0.8272, 0.264035), (0.8272, 0.257421), (0.830137, 0.257421), (0.257421, 0.818362), (0.264035, 0.821299), (0.257421, 0.821299), (0.257421, 0.818362), (0.264035, 0.818362), (0.264035, 0.821299), (0.830137, 0.264035), (0.8272, 0.257421), (0.8272, 0.264035), (0.830137, 0.264035), (0.830137, 0.257421), (0.8272, 0.257421), (0.099651, 0.264035), (0.096714, 0.257421), (0.096714, 0.264035), (0.099651, 0.264035), (0.099651, 0.257421), (0.096714, 0.257421), (0.091714, 0.813362), (-0.169862, 0.818362), (0.096714, 0.818362), (0.091714, 0.813362), (-0.164862, 0.813362), (-0.169862, 0.818362), (0.091714, 0.67628), (0.091714, 0.813362), (0.096714, 0.818362), (0.091714, 0.67628), (0.096714, 0.818362), (0.096714, 0.67128), (0.835137, 0.813362), (0.830137, 0.67128), (0.830137, 0.818362), (0.835137, 0.813362), (0.835137, 0.67628), (0.830137, 0.67128), (0.835137, 0.67628), (1.096714, 0.67128), (0.830137, 0.67128), (0.835137, 0.67628), (1.091714, 0.67628), (1.096714, 0.67128), (0.091714, 0.67628), (-0.164862, 0.813362), (0.091714, 0.813362), (0.091714, 0.67628), (-0.164862, 0.67628), (-0.164862, 0.813362), (0.266973, 0.67628), (0.38336, 0.813362), (0.38336, 0.67628), (0.266973, 0.67628), (0.266973, 0.813362), (0.38336, 0.813362), (0.091714, 0.266973), (-0.164862, 0.38336), (0.091714, 0.38336), (0.091714, 0.266973), (-0.164862, 0.266973), (-0.164862, 0.38336), (0.266973, 0.813362), (0.38336, 0.67628), (0.38336, 0.813362), (0.266973, 0.813362), (0.266973, 0.67628), (0.38336, 0.67628), (0.374486, 0.813362), (0.275847, 0.684997), (0.374486, 0.684997), (0.374486, 0.813362), (0.275847, 0.813362), (0.275847, 0.684997), (0.08284, 0.275847), (-0.164862, 0.266973), (0.091714, 0.266973), (0.08284, 0.275847), (-0.155988, 0.275847), (-0.164862, 0.266973), (0.08284, 0.374486), (0.08284, 0.275847), (0.091714, 0.266973), (0.08284, 0.374486), (0.091714, 0.266973), (0.091714, 0.38336), (0.844011, 0.374486), (1.091714, 0.38336), (0.835137, 0.38336), (0.844011, 0.374486), (1.08284, 0.374486), (1.091714, 0.38336), (0.844011, 0.275847), (0.844011, 0.374486), (0.835137, 0.38336), (0.844011, 0.275847), (0.835137, 0.38336), (0.835137, 0.266973), (0.844011, 0.275847), (1.08284, 0.374486), (0.844011, 0.374486), (0.844011, 0.275847), (1.08284, 0.275847), (1.08284, 0.374486), (0.844011, 0.813362), (1.08284, 0.684997), (0.844011, 0.684997), (0.844011, 0.813362), (1.08284, 0.813362), (1.08284, 0.684997), (0.275847, 0.813362), (0.374486, 0.684997), (0.275847, 0.684997), (0.275847, 0.813362), (0.374486, 0.813362), (0.374486, 0.684997)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_DresserDrawer_220_1_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1]
                rel material:binding = </root/_materials/M_DresserDrawer_220_1_0>
            }

            def GeomSubset "M_DresserDrawer_220_1_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77]
                rel material:binding = </root/_materials/M_DresserDrawer_220_1_1>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_DresserDrawer_220_1_0"
        {
            token outputs:surface.connect = </root/_materials/M_DresserDrawer_220_1_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_DresserDrawer_220_1_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/FlowerDecal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_DresserDrawer_220_1_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_DresserDrawer_220_1_1"
        {
            token outputs:surface.connect = </root/_materials/M_DresserDrawer_220_1_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (1, 0.97794116, 0.97794116)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_DresserDrawer_220_1_1/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_DresserDrawer_220_1_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

