#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshTelevisionStand_22_1_GeomSubset_0"
    {
        def Mesh "MeshTelevisionStand_22_1_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 20, 21, 22, 23, 37, 24, 25, 39, 39, 25, 26, 41, 41, 26, 27, 43, 43, 27, 24, 37, 24, 27, 26, 25, 30, 38, 40, 32, 32, 40, 42, 34, 34, 42, 36, 29, 29, 36, 38, 30, 28, 20, 23, 35, 35, 23, 22, 33, 33, 22, 21, 31, 31, 21, 20, 28, 31, 28, 29, 30, 33, 31, 30, 32, 35, 33, 32, 34, 28, 35, 34, 29, 37, 39, 38, 36, 43, 37, 36, 42, 41, 43, 42, 40, 39, 41, 40, 38]
            rel material:binding = </root/_materials/M_TelevisionStand_22_0>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0.12232736, 0.9924898), (0, 0, 1), (0, 0, 1), (-0.00012667276, 0.12232739, 0.9924898), (1, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (1, 0, 0), (9.997762e-9, -0.10273742, -0.9947085), (0, 0, -1), (0, 0, -1), (0, -0.10273743, -0.9947085), (-1, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 1.8168468e-8, 0), (1, -4.3727258e-7, 0), (1, -3.717214e-7, 0), (1, -2.5750384e-7, 0), (0, -0.8959192, -0.444217), (6.8060886e-9, -0.5435362, -0.83938575), (0, -0.5435362, -0.83938575), (-5.698604e-9, -0.8959192, -0.444217), (-1, 2.4397963e-7, 0), (-1, 0, 0), (-1, 0, 0), (-1, 3.5958865e-7, 0), (-7.894048e-11, 0.8976175, 0.44077528), (0.0000066932193, 0.7265807, 0.68708104), (0, 0.7265807, 0.68708104), (0, 0.8976175, 0.44077528), (-1, 2.5757367e-7, 0), (-1, 0, 0), (-1, 0, 0), (-1, 3.4175804e-7, 0), (-0.000004798053, -0.9957946, -0.09161379), (0, -0.9964442, -0.084254436), (0, -0.9964442, -0.084254436), (0, -0.9957946, -0.09161379), (1, 3.4175804e-7, 0), (1, 0, 0), (1, 0, 0), (1, 2.5757367e-7, 0), (0, 0.9955974, 0.09373264), (0, 0.9964442, 0.084254436), (0, 0.9964442, 0.084254436), (-1.0660264e-8, 0.9955974, 0.09373264), (0, 0.9955974, 0.09373264), (-1.0660264e-8, 0.9955974, 0.09373264), (-7.894048e-11, 0.8976175, 0.44077528), (0, 0.8976175, 0.44077528), (1, 3.4175804e-7, 0), (1, 2.5757367e-7, 0), (1, 1.8168468e-8, 0), (1, -2.5750384e-7, 0), (-0.000004798053, -0.9957946, -0.09161379), (0, -0.9957946, -0.09161379), (0, -0.8959192, -0.444217), (-5.698604e-9, -0.8959192, -0.444217), (-1, 2.5757367e-7, 0), (-1, 3.4175804e-7, 0), (-1, 2.4397963e-7, 0), (-1, 3.5958865e-7, 0), (0, 0.12232736, 0.9924898), (-0.00012667276, 0.12232739, 0.9924898), (0, 0.7265807, 0.68708104), (0.0000066932193, 0.7265807, 0.68708104), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (9.997762e-9, -0.10273742, -0.9947085), (0, -0.10273743, -0.9947085), (0, -0.5435362, -0.83938575), (6.8060886e-9, -0.5435362, -0.83938575), (1, 0, 0), (1, 0, 0), (1, -3.717214e-7, 0), (1, -4.3727258e-7, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.00072, 0.008436, 0.06547), (0.00072, 0.008436, 0.06547), (-0.00072, 0.009875, 0.06547), (0.00072, 0.009875, 0.06547), (-0.00072, 0.008436, 0.06547), (0.00072, 0.008436, 0.06547), (-0.00072, 0.009875, 0.06547), (0.00072, 0.009875, 0.06547), (-0.00072, 0.008436, 0.06547), (0.00072, 0.008436, 0.06547), (-0.00072, 0.009875, 0.06547), (0.00072, 0.009875, 0.06547), (-0.00072, 0.008436, 0.06547), (0.00072, 0.008436, 0.06547), (-0.00072, 0.009875, 0.06547), (0.00072, 0.009875, 0.06547), (-0.00072, 0.008436, 0.06547), (0.00072, 0.008436, 0.06547), (-0.00072, 0.009875, 0.06547), (0.00072, 0.009875, 0.06547), (-0.204376, 0.095978, -0.389475), (0.204376, 0.095978, -0.389475), (0.204376, 0.078681, -0.389475), (-0.204376, 0.078681, -0.389475), (-0.204376, 0.002133, -0.006329), (0.204376, 0.002133, -0.006329), (0.204376, 0.002133, -0.019184), (-0.204376, 0.002133, -0.019184), (-0.204376, 0.066132, -0.036498), (-0.204376, 0.061559, -0.023887), (0.204376, 0.061559, -0.023887), (0.204376, 0.066132, -0.036498), (0.204376, 0.045336, -0.026923), (0.204376, 0.048835, -0.036498), (-0.204376, 0.045336, -0.026923), (-0.204376, 0.048835, -0.036498), (-0.204376, 0.054487, -0.012777), (-0.204376, 0.044956, -0.006329), (0.204376, 0.054487, -0.012777), (0.204376, 0.044956, -0.006329), (0.204376, 0.042307, -0.023332), (0.204376, 0.033382, -0.019184), (-0.204376, 0.042307, -0.023332), (-0.204376, 0.033382, -0.019184), (-0.355437, 0.094384, -0.395995), (-0.336037, 0.113784, -0.395995), (0.336037, 0.113784, -0.395995), (0.355436, 0.094384, -0.395995), (0.355436, -0.097443, -0.395995), (0.336037, -0.116843, -0.395995), (-0.355437, -0.097443, -0.395995), (-0.336037, -0.116843, -0.395995), (-0.355437, 0.094384, -0.384464), (-0.336037, 0.113784, -0.384464), (0.336037, 0.113784, -0.384464), (0.355436, 0.094384, -0.384464), (0.355436, -0.097443, -0.384464), (0.336037, -0.116843, -0.384464), (-0.336037, -0.116843, -0.384464), (-0.355437, -0.097443, -0.384464), (-0.330339, 0.108086, -0.380394), (-0.349739, 0.088686, -0.380394), (0.330339, 0.108086, -0.380394), (0.349739, 0.088686, -0.380394), (0.330339, -0.111145, -0.380394), (0.349739, -0.091745, -0.380394), (-0.349739, -0.091745, -0.380394), (-0.330339, -0.111145, -0.380394), (0.343461, 0.112307, -0.384464), (0.343461, 0.112307, -0.395995), (0.349754, 0.108101, -0.384464), (0.349754, 0.108101, -0.395995), (0.35396, 0.101808, -0.384464), (0.35396, 0.101808, -0.395995), (-0.343461, 0.112307, -0.395995), (-0.343461, 0.112307, -0.384464), (-0.349754, 0.108101, -0.395995), (-0.349754, 0.108101, -0.384464), (-0.353959, 0.101808, -0.395995), (-0.353959, 0.101808, -0.384464), (0.343461, -0.115366, -0.395995), (0.343461, -0.115366, -0.384464), (0.349754, -0.111161, -0.395995), (0.349754, -0.111161, -0.384464), (0.35396, -0.104867, -0.395995), (0.35396, -0.104867, -0.384464), (-0.343461, -0.115366, -0.384464), (-0.343461, -0.115366, -0.395995), (-0.349754, -0.111161, -0.384464), (-0.349754, -0.111161, -0.395995), (-0.353959, -0.104867, -0.384464), (-0.353959, -0.104867, -0.395995), (-0.337763, 0.106609, -0.380394), (-0.344057, 0.102404, -0.380394), (-0.348262, 0.09611, -0.380394), (0.337763, 0.106609, -0.380394), (0.344057, 0.102404, -0.380394), (0.348262, 0.09611, -0.380394), (-0.348262, -0.09917, -0.380394), (-0.344057, -0.105463, -0.380394), (-0.337763, -0.109668, -0.380394), (0.337763, -0.109668, -0.380394), (0.344057, -0.105463, -0.380394), (0.348262, -0.09917, -0.380394), (-0.329751, 0.102117, -0.380394), (-0.34377, 0.088098, -0.380394), (0.329751, 0.102117, -0.380394), (0.34377, 0.088098, -0.380394), (0.329751, -0.105176, -0.380394), (0.34377, -0.091158, -0.380394), (-0.34377, -0.091158, -0.380394), (-0.329751, -0.105176, -0.380394), (-0.335433, 0.100986, -0.380394), (-0.339753, 0.0981, -0.380394), (-0.342639, 0.093781, -0.380394), (0.335433, 0.100986, -0.380394), (0.339753, 0.0981, -0.380394), (0.342639, 0.093781, -0.380394), (-0.342639, -0.09684, -0.380394), (-0.339753, -0.10116, -0.380394), (-0.335433, -0.104046, -0.380394), (0.335433, -0.104046, -0.380394), (0.339753, -0.10116, -0.380394), (0.342639, -0.09684, -0.380394)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-44.352688, -17.673101), (-44.352688, -17.674849), (-44.35094, -17.674849), (-44.35094, -17.673101), (-44.47255, -0.028669), (-43.67421, -0.028668), (-43.674206, 0.00511), (-44.47255, 0.005113), (-44.498806, 0.068869), (-44.4988, -0.02028), (-43.647957, -0.020277), (-43.647953, 0.06887), (-44.93188, 0.403673), (-44.93188, 0.320036), (-44.906776, 0.32004), (-44.906776, 0.381066), (-43.662434, 0.091459), (-43.662437, 0.154299), (-44.484318, 0.154295), (-44.484325, 0.091462), (-44.90676, 0.322592), (-44.906757, 0.383617), (-44.931866, 0.38362), (-44.931866, 0.29999), (-44.472557, 0.163879), (-44.472557, 0.138769), (-43.6742, 0.138773), (-43.674194, 0.163882), (-44.897587, 0.436103), (-44.91929, 0.422284), (-44.898674, 0.398496), (-44.891663, 0.404417), (-43.662434, 0.067424), (-43.662437, 0.07351), (-44.48432, 0.073516), (-44.484318, 0.06742), (-44.891647, 0.299246), (-44.898655, 0.305155), (-44.91927, 0.281376), (-44.897575, 0.267561), (-44.4988, 0.103422), (-44.498806, 0.088705), (-43.647953, 0.088706), (-43.647957, 0.103425), (-44.872948, 0.258634), (-44.183598, 0.200346), (-44.183598, 0.234122), (-44.872944, 0.292407), (-44.47358, 0.721855), (-44.473583, 0.03066), (-43.673176, 0.030666), (-43.673176, 0.721858), (-44.872963, 0.41125), (-44.183586, 0.469538), (-44.183586, 0.503321), (-44.872963, 0.445032), (-44.172977, 0.362967), (-44.172977, 1.05432), (-44.973564, 1.054321), (-44.973564, 0.362963), (-44.172977, 0.362967), (-44.973564, 0.362963), (-44.973564, 0.338266), (-44.172974, 0.338268), (-44.872963, 0.41125), (-44.872963, 0.445032), (-44.897587, 0.436103), (-44.891663, 0.404417), (-44.47358, 0.721855), (-43.673176, 0.721858), (-43.673176, 0.740603), (-44.47358, 0.740598), (-44.872948, 0.258634), (-44.872944, 0.292407), (-44.891647, 0.299246), (-44.897575, 0.267561), (-44.498806, 0.068869), (-43.647953, 0.06887), (-43.647953, 0.088706), (-44.498806, 0.088705), (-44.90676, 0.322592), (-44.931866, 0.29999), (-44.91927, 0.281376), (-44.898655, 0.305155), (-43.662434, 0.091459), (-44.484325, 0.091462), (-44.48432, 0.073516), (-43.662437, 0.07351), (-44.93188, 0.403673), (-44.906776, 0.381066), (-44.898674, 0.398496), (-44.91929, 0.422284)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_TelevisionStand_22_0"
        {
            token outputs:surface.connect = </root/_materials/M_TelevisionStand_22_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.7977941, 0.8238844, 0.875)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_TelevisionStand_22_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_TelevisionStand_22_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

