#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "FridgeDrawer1_23_FridgeDrawer1D5_1_GeomSubset_3"
    {
        def Mesh "FridgeDrawer1_23_FridgeDrawer1D5_1_GeomSubset_3"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4]
            int[] faceVertexIndices = [12, 13, 15, 14]
            rel material:binding = </root/_materials/M_FridgeDrawer1D5_3>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.07076, 0.02883, -0.869403), (0.070752, 0.02883, -0.869403), (0.07076, 0.028837, -0.869403), (0.070752, 0.028837, -0.869403), (0.07076, 0.02883, -0.869403), (0.070752, 0.02883, -0.869403), (0.07076, 0.028837, -0.869403), (0.070752, 0.028837, -0.869403), (0.07076, 0.02883, -0.869403), (0.070752, 0.02883, -0.869403), (0.07076, 0.028837, -0.869403), (0.070752, 0.028837, -0.869403), (0.07076, 0.02883, -0.869403), (0.070752, 0.02883, -0.869403), (0.07076, 0.028837, -0.869403), (0.070752, 0.028837, -0.869403), (0.07076, 0.02883, -0.869403), (0.070752, 0.02883, -0.869403), (0.07076, 0.028837, -0.869403), (0.070752, 0.028837, -0.869403), (0.07076, 0.02883, -0.869403), (0.070752, 0.02883, -0.869403), (0.07076, 0.028837, -0.869403), (0.070752, 0.028837, -0.869403), (0.07076, 0.02883, -0.869403), (0.070752, 0.02883, -0.869403), (0.07076, 0.028837, -0.869403), (0.070752, 0.028837, -0.869403), (0.08193, 0.181681, -0.138602), (-0.371544, 0.18168, -0.138602), (0.081931, -0.222334, -0.138602), (-0.371543, -0.222335, -0.138602), (-0.101635, 0.181681, -0.138602), (-0.036822, 0.181681, -0.138602), (-0.252793, 0.18168, -0.138602), (-0.187979, 0.181681, -0.138602), (-0.101633, -0.241088, -0.138602), (-0.037074, -0.237099, -0.138602), (-0.252537, -0.2371, -0.138602), (-0.187978, -0.241088, -0.138602), (-0.036822, 0.181681, -0.425567), (0.08193, 0.181681, -0.425567), (-0.252793, 0.18168, -0.425567), (-0.371544, 0.18168, -0.425567), (-0.187979, 0.181681, -0.425567), (-0.101635, 0.181681, -0.425567), (0.073991, 0.173858, -0.138602), (-0.363606, 0.173857, -0.138602), (0.073993, -0.215434, -0.138602), (-0.363604, -0.215435, -0.138602), (-0.101635, 0.173858, -0.138602), (-0.036822, 0.173858, -0.138602), (-0.252792, 0.173857, -0.138602), (-0.187979, 0.173858, -0.138602), (-0.101882, -0.233265, -0.138602), (-0.037819, -0.229306, -0.138602), (-0.251793, -0.229307, -0.138602), (-0.18773, -0.233265, -0.138602), (0.073991, 0.173858, -0.416937), (-0.363606, 0.173857, -0.416937), (-0.101635, 0.173858, -0.416937), (-0.036822, 0.173858, -0.416937), (-0.252792, 0.173857, -0.416937), (-0.187979, 0.173858, -0.416937), (0.08193, 0.181681, -0.146732), (-0.036822, 0.181681, -0.146732), (0.081931, -0.222334, -0.146732), (-0.037074, -0.237099, -0.146732), (-0.371543, -0.222335, -0.146732), (-0.252537, -0.2371, -0.146732), (-0.371544, 0.18168, -0.146732), (-0.252793, 0.18168, -0.146732), (-0.187978, -0.241088, -0.146732), (-0.101633, -0.241088, -0.146732), (-0.101635, 0.181681, -0.146732), (-0.187979, 0.181681, -0.146732), (-0.18773, -0.233265, -0.146732), (-0.251793, -0.229307, -0.146732), (-0.363604, -0.215435, -0.146732), (-0.363606, 0.173857, -0.146732), (-0.252792, 0.173857, -0.146732), (-0.187979, 0.173858, -0.146732), (-0.101635, 0.173858, -0.146732), (-0.036822, 0.173858, -0.146732), (0.073991, 0.173858, -0.146732), (0.073993, -0.215434, -0.146732), (-0.037819, -0.229306, -0.146732), (-0.101882, -0.233265, -0.146732), (0.083017, 0.182753, -0.140265), (-0.372632, 0.182752, -0.140265), (0.083019, -0.223279, -0.140265), (-0.37263, -0.22328, -0.140265), (-0.101635, 0.182752, -0.140265), (-0.036822, 0.182753, -0.140265), (-0.252793, 0.182752, -0.140265), (-0.187979, 0.182752, -0.140265), (-0.101599, -0.24216, -0.140265), (-0.036972, -0.238166, -0.140265), (-0.25264, -0.238167, -0.140265), (-0.188012, -0.24216, -0.140265), (0.083017, 0.182753, -0.145068), (-0.036822, 0.182753, -0.145068), (0.083019, -0.223279, -0.145068), (-0.036972, -0.238166, -0.145068), (-0.37263, -0.22328, -0.145068), (-0.25264, -0.238167, -0.145068), (-0.372632, 0.182752, -0.145068), (-0.252793, 0.182752, -0.145068), (-0.188012, -0.24216, -0.145068), (-0.101599, -0.24216, -0.145068), (-0.101635, 0.182752, -0.145068), (-0.187979, 0.182752, -0.145068), (-0.037074, -0.237099, -0.391171), (-0.037056, -0.207628, -0.425568), (0.081931, -0.222334, -0.391171), (0.081931, -0.192863, -0.425568), (-0.252555, -0.207629, -0.425568), (-0.252537, -0.2371, -0.391171), (-0.371543, -0.192864, -0.425568), (-0.371543, -0.222335, -0.391171), (-0.101633, -0.211618, -0.425568), (-0.101633, -0.241088, -0.391171), (-0.187978, -0.241088, -0.391171), (-0.187978, -0.211618, -0.425568), (0.073993, -0.185963, -0.416937), (0.073993, -0.215434, -0.38254), (-0.363604, -0.215435, -0.38254), (-0.363604, -0.185964, -0.416937), (-0.101864, -0.203795, -0.416937), (-0.101882, -0.233265, -0.38254), (-0.037819, -0.229306, -0.38254), (-0.037746, -0.199836, -0.416937), (-0.251866, -0.199837, -0.416937), (-0.251793, -0.229307, -0.38254), (-0.187748, -0.203795, -0.416937), (-0.18773, -0.233265, -0.38254), (-0.252549, -0.218907, -0.422949), (-0.187978, -0.222896, -0.422949), (-0.252543, -0.228468, -0.415493), (-0.187978, -0.232457, -0.415493), (-0.252539, -0.234856, -0.404334), (-0.187978, -0.238845, -0.404334), (-0.101633, -0.222896, -0.422949), (-0.037063, -0.218906, -0.422949), (-0.101633, -0.232457, -0.415493), (-0.037069, -0.228467, -0.415493), (-0.101633, -0.238845, -0.404334), (-0.037073, -0.234856, -0.404334), (-0.371543, -0.204142, -0.422949), (-0.371543, -0.213703, -0.415493), (-0.371543, -0.220092, -0.404334), (0.081931, -0.204141, -0.422949), (0.081931, -0.213702, -0.415493), (0.081931, -0.22009, -0.404334), (0.073993, -0.197241, -0.414319), (-0.037774, -0.211114, -0.414319), (0.073993, -0.206802, -0.406862), (-0.037798, -0.220675, -0.406862), (0.073993, -0.21319, -0.395703), (-0.037813, -0.227063, -0.395703), (-0.251838, -0.211114, -0.414319), (-0.363604, -0.197242, -0.414319), (-0.251814, -0.220675, -0.406862), (-0.363604, -0.206803, -0.406862), (-0.251798, -0.227064, -0.395703), (-0.363604, -0.213192, -0.395703), (-0.101871, -0.215072, -0.414319), (-0.187741, -0.215073, -0.414319), (-0.101877, -0.224633, -0.406862), (-0.187735, -0.224634, -0.406862), (-0.101881, -0.231022, -0.395703), (-0.187731, -0.231022, -0.395703)]
            bool[] primvars:sharp_face = [0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-88.71463, -110.74826), (-88.71463, -113.93459), (-85.655075, -113.93459), (-85.655075, -110.74826)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer1D5_3"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1D5_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.5735294, 0.5735294, 0.5735294)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1D5_3/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D5_3/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

