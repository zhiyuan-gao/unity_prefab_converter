#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "FridgeDrawer1B5"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "FridgeDrawer1B5" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(0.002622, -0.228923, -0.984512), (0.296638, 0.214333, -0.639065)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 8, 4, 3, 8, 4, 3, 4, 4, 4, 4, 3, 4, 8, 3, 4, 8]
            int[] faceVertexIndices = [0, 1, 3, 2, 68, 61, 81, 78, 56, 37, 41, 55, 61, 34, 35, 60, 60, 35, 36, 62, 55, 41, 40, 67, 69, 38, 39, 68, 67, 40, 38, 69, 62, 36, 37, 56, 68, 39, 34, 61, 28, 34, 39, 29, 56, 75, 74, 62, 69, 77, 76, 67, 69, 68, 78, 77, 55, 67, 76, 79, 60, 62, 74, 80, 60, 80, 81, 61, 75, 56, 55, 79, 83, 82, 28, 29, 93, 92, 91, 90, 35, 34, 28, 82, 86, 87, 36, 35, 86, 40, 41, 84, 88, 38, 89, 83, 29, 39, 89, 38, 40, 88, 37, 36, 87, 85, 41, 37, 90, 91, 37, 85, 93, 90, 85, 84, 92, 93, 84, 41, 91, 92, 4, 5, 7, 6, 8, 9, 11, 10, 12, 13, 15, 14, 16, 17, 19, 18, 20, 21, 23, 22, 24, 25, 27, 26, 65, 66, 70, 71, 64, 65, 71, 72, 63, 64, 72, 73, 54, 63, 73, 57, 59, 70, 66, 58, 52, 53, 59, 58, 33, 32, 31, 30, 31, 32, 42, 45, 43, 44, 46, 47, 47, 46, 48, 49, 49, 48, 50, 51, 51, 50, 45, 42, 74, 75, 57, 73, 72, 71, 70, 59, 76, 77, 52, 58, 77, 78, 52, 76, 58, 66, 65, 64, 63, 54, 79, 74, 59, 53, 80, 80, 53, 81, 54, 57, 75, 79, 78, 81, 53, 52, 83, 33, 30, 82, 85, 44, 43, 84, 86, 82, 30, 87, 86, 30, 31, 88, 84, 43, 47, 49, 51, 42, 32, 83, 89, 33, 88, 32, 33, 89, 87, 31, 45, 50, 48, 46, 44, 85]
            rel material:binding = </root/_materials/M_FridgeDrawer1B5_0>
            normal3f[] normals = [(0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0.0000035606772, 0.8796972, -0.47553432), (0.0000035606772, 0.8796972, -0.47553432), (1.5998376e-7, 0.8744486, -0.48511827), (7.27945e-7, 0.8744486, -0.48511818), (-0.035997327, 0.09911034, -0.99442506), (-0.021698084, 0.06519184, -0.99763685), (0.021698844, 0.06519642, -0.99763644), (0.03599935, 0.099105775, -0.9944254), (0.0000038002718, 0, -1), (0.000003352617, 0, -1), (0.0000036657277, 0, -1), (0.000003618199, 0, -1), (0.000003618199, 0, -1), (0.0000036657277, 0, -1), (-0.0021173283, -0.00010266667, -0.9999978), (-0.00040660053, 6.792834e-7, -0.9999999), (0.03599935, 0.099105775, -0.9944254), (0.021698844, 0.06519642, -0.99763644), (0.002119176, -0.00010287174, -0.9999978), (0.0004082285, 5.9453305e-7, -0.9999998), (-9.045565e-7, 0, -1), (-9.16439e-7, 0, -1), (-8.3823954e-7, 0, -1), (-9.5004737e-7, 0, -1), (0.0004082285, 5.9453305e-7, -0.9999998), (0.002119176, -0.00010287174, -0.9999978), (-9.16439e-7, 0, -1), (-9.045565e-7, 0, -1), (-0.00040660053, 6.792834e-7, -0.9999999), (-0.0021173283, -0.00010266667, -0.9999978), (-0.021698084, 0.06519184, -0.99763685), (-0.035997327, 0.09911034, -0.99442506), (-9.5004737e-7, 0, -1), (-8.3823954e-7, 0, -1), (0.000003352617, 0, -1), (0.0000038002718, 0, -1), (-8.4692897e-7, -0.98250455, 0.18623868), (0, -1, 0), (0, -1, 0), (-8.09724e-7, -0.9825047, 0.18623765), (0.99971366, 0.0076759304, 0.022663735), (0.99972624, 0.0078482125, 0.02204382), (0.9997567, -0.0026142492, 0.021899724), (0.9997688, -0.00039363536, 0.021500343), (-0.9996489, -0.006007765, 0.025805993), (-0.99956864, -0.0066864025, 0.028595692), (-0.9997572, -0.0024969843, 0.021898648), (-0.99976873, -0.0004801622, 0.02150229), (-0.9996489, -0.006007765, 0.025805993), (-0.9964178, -0.055039212, 0.06420478), (-0.99668163, -0.058600266, 0.056495834), (-0.99956864, -0.0066864025, 0.028595692), (-0.9997137, 0.007681788, 0.02266478), (-0.99976873, -0.0004801622, 0.02150229), (-0.9997572, -0.0024969843, 0.021898648), (-0.9997262, 0.007853625, 0.022042451), (0.99964815, -0.0061115697, 0.025808983), (0.9997688, -0.00039363536, 0.021500343), (0.9997567, -0.0026142492, 0.021899724), (0.9995678, -0.006798871, 0.028599655), (0.99964815, -0.0061115697, 0.025808983), (0.9995678, -0.006798871, 0.028599655), (0.9966816, -0.05860022, 0.056495886), (0.99641776, -0.055039078, 0.06420488), (-0.0000029283938, -0.9834993, -0.18091196), (-0.0000039339484, -0.98349965, -0.18090971), (-0.0000039339484, -0.98349965, -0.18090971), (-0.0000029284051, -0.9834992, -0.18091194), (-0.000002412062, -0.8457391, 0.53359646), (-0.0000024120638, -0.8457391, 0.53359646), (-8.4692897e-7, -0.98250455, 0.18623868), (-8.09724e-7, -0.9825047, 0.18623765), (0.0000037546436, 0.98665124, 0.16284728), (0.0000037546436, 0.98665124, 0.16284728), (0.0000037546436, 0.98665124, 0.16284728), (0.0000037546436, 0.98665124, 0.16284728), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, -3.473565e-7, 0), (-1, 0.0000011196353, 1.8606409e-7), (-1, 0.0000014288468, 1.1930676e-7), (-1, 0, 0), (-1, -3.473565e-7, 0), (1, -0.0000014288468, -1.17990915e-7), (1, -0.0000012800724, -1.05705475e-7), (1, -0.0000020022437, -2.446706e-7), (1, -0.0000014519723, -1.8400823e-7), (1, 9.0088115e-9, 0), (1, 4.5044057e-9, 0), (1, 1.2236839e-8, 0), (1, 1.8017623e-8, 0), (1, 1.8017623e-8, 0), (1, 4.5044057e-9, 0), (1, 9.0088115e-9, 0), (1, -0.0000014288468, -1.17990915e-7), (1, -0.0000014519723, -1.8400823e-7), (-1, 0.0000012800724, 1.06884315e-7), (-1, 0.0000014288468, 1.1930676e-7), (-1, 0.0000011196353, 1.8606409e-7), (-1, 0.0000020208292, 2.4740385e-7), (0.021698844, 0.06519642, -0.99763644), (-0.021698084, 0.06519184, -0.99763685), (1.04272e-7, 0, -1), (1.04272e-7, 0, -1), (-1, 0.0000012800724, 1.06884315e-7), (-1, 0.0000020208292, 2.4740385e-7), (-1, 0, 0), (-1, 0, 0), (4.016678e-8, 0, 1), (4.016678e-8, 0, 1), (4.016678e-8, 0, 1), (4.016678e-8, 0, 1), (1, -0.0000020022437, -2.446706e-7), (1, -0.0000012800724, -1.05705475e-7), (1, 0, 0), (1, 0, 0), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (-9.747455e-7, -0.39898777, -0.9169562), (4.2520696e-7, -0.1760704, -0.98437756), (-0.00073092437, -0.17606193, -0.9843788), (-0.0000011940127, -0.3989775, -0.91696066), (-0.0000020171515, -0.71757585, -0.69648045), (-9.747455e-7, -0.39898777, -0.9169562), (-0.0000011940127, -0.3989775, -0.91696066), (-6.428604e-8, -0.7175762, -0.69648), (-8.350333e-7, -0.9197671, -0.39246482), (-0.0000020171515, -0.71757585, -0.69648045), (-6.428604e-8, -0.7175762, -0.69648), (-0.0000010359508, -0.9197717, -0.3924541), (3.4186814e-7, -0.9872835, -0.1589693), (-8.350333e-7, -0.9197671, -0.39246482), (-0.0000010359508, -0.9197717, -0.3924541), (-4.0333543e-7, -0.9872606, -0.15911119), (-6.7288056e-8, 0.5386816, -0.8425094), (-0.00073092437, -0.17606193, -0.9843788), (4.2520696e-7, -0.1760704, -0.98437756), (9.21463e-7, 0.5386823, -0.8425089), (0.000004176516, 0.44823518, -0.8939156), (0.0000028395464, 0.44823432, -0.89391595), (-6.7288056e-8, 0.5386816, -0.8425094), (9.21463e-7, 0.5386823, -0.8425089), (0.00006680181, -0.54562396, 0.83803016), (-0.000001615094, -0.43827707, 0.89883995), (0.00007276634, -0.4382764, 0.8988402), (-0.000002441967, -0.5456231, 0.8380306), (0.00007276634, -0.4382764, 0.8988402), (-0.000001615094, -0.43827707, 0.89883995), (1.0307764e-8, 0.18895103, 0.9819865), (3.0373107e-7, 0.1889513, 0.9819864), (0.0000037447885, 0.9825511, 0.18599263), (-8.792938e-7, 0.98255116, 0.18599266), (-1.03139655e-7, 0.92790186, 0.37282446), (0.0000035058101, 0.9279182, 0.37278393), (0.0000035058101, 0.9279182, 0.37278393), (-1.03139655e-7, 0.92790186, 0.37282446), (-2.296656e-8, 0.7177716, 0.6962785), (0.0000027059118, 0.7177712, 0.696279), (0.0000027059118, 0.7177712, 0.696279), (-2.296656e-8, 0.7177716, 0.6962785), (9.096925e-8, 0.39274937, 0.9196455), (0.000001208711, 0.3927485, 0.91964585), (0.000001208711, 0.3927485, 0.91964585), (9.096925e-8, 0.39274937, 0.9196455), (3.0373107e-7, 0.1889513, 0.9819864), (1.0307764e-8, 0.18895103, 0.9819865), (0.9997567, -0.0026142492, 0.021899724), (0.99972624, 0.0078482125, 0.02204382), (0.9997415, 0.008065554, 0.02126174), (0.9997415, 0.008065554, 0.02126174), (0.9997415, 0.008065554, 0.02126174), (0.9997415, 0.008065554, 0.02126174), (0.9997415, 0.008065554, 0.02126174), (0.9997671, -0.0018879259, 0.021499135), (-0.9997572, -0.0024969843, 0.021898648), (-0.99956864, -0.0066864025, 0.028595692), (-0.9996887, 0.013776502, 0.020801026), (-0.99976707, -0.001916812, 0.021499675), (-0.99956864, -0.0066864025, 0.028595692), (-0.99668163, -0.058600266, 0.056495834), (-0.9996887, 0.013776502, 0.020801026), (-0.9997572, -0.0024969843, 0.021898648), (-0.99976707, -0.001916812, 0.021499675), (-0.9997414, 0.008070406, 0.021257335), (-0.9997414, 0.008070406, 0.021257335), (-0.9997414, 0.008070406, 0.021257335), (-0.9997414, 0.008070406, 0.021257335), (-0.9997414, 0.008070406, 0.021257335), (-0.9997262, 0.007853625, 0.022042451), (0.9997567, -0.0026142492, 0.021899724), (0.9997671, -0.0018879259, 0.021499135), (0.9996885, 0.013790007, 0.020799264), (0.9995678, -0.006798871, 0.028599655), (0.9995678, -0.006798871, 0.028599655), (0.9996885, 0.013790007, 0.020799264), (0.9966816, -0.05860022, 0.056495886), (3.4186814e-7, -0.9872835, -0.1589693), (-4.0333543e-7, -0.9872606, -0.15911119), (-0.0000029283938, -0.9834993, -0.18091196), (-0.0000029284051, -0.9834992, -0.18091194), (7.27945e-7, 0.8744486, -0.48511818), (1.5998376e-7, 0.8744486, -0.48511827), (0.0000028395464, 0.44823432, -0.89391595), (0.000004176516, 0.44823518, -0.8939156), (-0.000002412062, -0.8457391, 0.53359646), (0.00006680181, -0.54562396, 0.83803016), (-0.000002441967, -0.5456231, 0.8380306), (-0.0000024120638, -0.8457391, 0.53359646), (0.0000037630975, 0.98665005, 0.16285504), (-8.792938e-7, 0.98255116, 0.18599266), (0.0000037447885, 0.9825511, 0.18599263), (0.0000037630975, 0.98665005, 0.16285504), (-1, -3.473565e-7, 0), (-1, 0, 0), (-1, -0.0000010937059, 0), (-1, 0.0000011196353, 1.8606409e-7), (-1, -3.473565e-7, 0), (-1, -0.0000010937059, 0), (-1, 0.000001237671, 3.0192354e-7), (1, -0.0000014519723, -1.8400823e-7), (1, -0.0000020022437, -2.446706e-7), (1, -0.0000029501957, -5.000511e-7), (1, -0.0000029501957, -5.000511e-7), (1, -0.0000029501957, -5.000511e-7), (1, -0.0000029501957, -5.000511e-7), (1, -0.0000029501957, -5.000511e-7), (1, -0.0000017615863, -2.9858467e-7), (1, 1.2236839e-8, 0), (1, 4.5044057e-9, 0), (1, 0, 0), (1, -0.0000014519723, -1.8400823e-7), (1, -0.0000017615863, -2.9858467e-7), (1, 0, 0), (1, 4.5044057e-9, 0), (-1, 0.0000011196353, 1.8606409e-7), (-1, 0.000001237671, 3.0192354e-7), (-1, 0.0000030102735, 5.0564284e-7), (-1, 0.0000030102735, 5.0564284e-7), (-1, 0.0000030102735, 5.0564284e-7), (-1, 0.0000030102735, 5.0564284e-7), (-1, 0.0000030102735, 5.0564284e-7), (-1, 0.0000020208292, 2.4740385e-7)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.00263, 0.04257, -0.984512), (0.002622, 0.04257, -0.984512), (0.00263, 0.042579, -0.984512), (0.002622, 0.042579, -0.984512), (0.00263, 0.04257, -0.984512), (0.002622, 0.04257, -0.984512), (0.00263, 0.042579, -0.984512), (0.002622, 0.042579, -0.984512), (0.00263, 0.04257, -0.984512), (0.002622, 0.04257, -0.984512), (0.00263, 0.042579, -0.984512), (0.002622, 0.042579, -0.984512), (0.00263, 0.04257, -0.984512), (0.002622, 0.04257, -0.984512), (0.00263, 0.042579, -0.984512), (0.002622, 0.042579, -0.984512), (0.00263, 0.04257, -0.984512), (0.002622, 0.04257, -0.984512), (0.00263, 0.042579, -0.984512), (0.002622, 0.042579, -0.984512), (0.00263, 0.04257, -0.984512), (0.002622, 0.04257, -0.984512), (0.00263, 0.042579, -0.984512), (0.002622, 0.042579, -0.984512), (0.00263, 0.04257, -0.984512), (0.002622, 0.04257, -0.984512), (0.00263, 0.042579, -0.984512), (0.002622, 0.042579, -0.984512), (0.296638, 0.214333, -0.648088), (0.035202, 0.214333, -0.648088), (0.296638, 0.142836, -0.761408), (0.296638, 0.137748, -0.76426), (0.035202, 0.137749, -0.76426), (0.035202, 0.142837, -0.761408), (0.296638, 0.214333, -0.640315), (0.296638, 0.142836, -0.640315), (0.296638, 0.137748, -0.640315), (0.296637, -0.214654, -0.640315), (0.035202, 0.142837, -0.640315), (0.035202, 0.214333, -0.640315), (0.035202, 0.137749, -0.640315), (0.035201, -0.214653, -0.640315), (0.035201, -0.176775, -0.76426), (0.035201, -0.197789, -0.742486), (0.296637, -0.19779, -0.742486), (0.296637, -0.176775, -0.76426), (0.296637, -0.196191, -0.750818), (0.035201, -0.19619, -0.750818), (0.296637, -0.191635, -0.757882), (0.035201, -0.191634, -0.757882), (0.296637, -0.184818, -0.762602), (0.035201, -0.184817, -0.762602), (0.041553, 0.138068, -0.756038), (0.290287, 0.138067, -0.756038), (0.039157, -0.188891, -0.740781), (0.041455, -0.207601, -0.639065), (0.290382, -0.207602, -0.639065), (0.292681, -0.188891, -0.740781), (0.041553, 0.136021, -0.757186), (0.290287, 0.13602, -0.757186), (0.287793, 0.142836, -0.640315), (0.290384, 0.207178, -0.640315), (0.287793, 0.137748, -0.640315), (0.039218, -0.187862, -0.747244), (0.039218, -0.18526, -0.751278), (0.039218, -0.181367, -0.753973), (0.039172, -0.175889, -0.754937), (0.044047, 0.137749, -0.640315), (0.041456, 0.207179, -0.640315), (0.044047, 0.142837, -0.640315), (0.292666, -0.175889, -0.754937), (0.292619, -0.181368, -0.753973), (0.292619, -0.185261, -0.751278), (0.292619, -0.187862, -0.747244), (0.288299, 0.137397, -0.664029), (0.290947, -0.20301, -0.664029), (0.04354, 0.137398, -0.664029), (0.043536, 0.14186, -0.664029), (0.039673, 0.19436, -0.664029), (0.040891, -0.203009, -0.664029), (0.288304, 0.141859, -0.664029), (0.292167, 0.194359, -0.664029), (0.296638, 0.204275, -0.664029), (0.035202, 0.204276, -0.664029), (0.035201, -0.210739, -0.664029), (0.296637, -0.21074, -0.664029), (0.296638, 0.142836, -0.664029), (0.296638, 0.137748, -0.664029), (0.035202, 0.137749, -0.664029), (0.035202, 0.142837, -0.664029), (0.296637, -0.228923, -0.640315), (0.035201, -0.228922, -0.640315), (0.035201, -0.225008, -0.664029), (0.296637, -0.225009, -0.664029)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-169.97336, -111.24891), (-169.97327, -111.24891), (-169.97327, -111.24882), (-169.97336, -111.24882), (-169.98497, -0.441013), (-169.98497, 0.306962), (-170.05624, 0.31232), (-170.05624, -0.44637), (-171.06587, -0.430929), (-171.08351, -0.45084), (-170.34538, -0.45084), (-170.36304, -0.430929), (-171.06587, 0.740172), (-171.08351, 0.760373), (-171.08351, 0.558507), (-171.05856, 0.558507), (-171.05856, 0.558507), (-171.08351, 0.558507), (-171.08351, 0.544142), (-171.05856, 0.544142), (-170.36304, -0.430929), (-170.34538, -0.45084), (-170.34538, 0.544142), (-170.37036, 0.544142), (-170.37036, 0.558507), (-170.34538, 0.558507), (-170.34538, 0.760373), (-170.36304, 0.740172), (-170.37036, 0.544142), (-170.34538, 0.544142), (-170.34538, 0.558507), (-170.37036, 0.558507), (-171.05856, 0.544142), (-171.08351, 0.544142), (-171.08351, -0.45084), (-171.06587, -0.430929), (-170.36304, 0.740172), (-170.34538, 0.760373), (-171.08351, 0.760373), (-171.06587, 0.740172), (-170.18422, 0.332852), (-170.20743, 0.332852), (-170.20743, -0.447998), (-170.18422, -0.447998), (-170.25665, 0.689313), (-170.32704, 0.676365), (-170.32704, -0.283505), (-170.26018, -0.284494), (-170.1996, 0.507894), (-170.26646, 0.505139), (-170.26646, 0.492558), (-170.1996, 0.493547), (-170.1996, 0.507894), (-170.1996, 0.689329), (-170.26646, 0.653181), (-170.26646, 0.505139), (-170.19608, -0.480286), (-170.1996, 0.493547), (-170.26646, 0.492558), (-170.26646, -0.467338), (-170.26018, -0.29884), (-170.26018, -0.284494), (-170.32704, -0.283505), (-170.32704, -0.296085), (-170.26018, -0.29884), (-170.32704, -0.296085), (-170.32704, -0.444123), (-170.26018, -0.48027), (-169.94984, 0.823687), (-170.0208, 0.822084), (-170.0208, 0.114588), (-169.94984, 0.112984), (-170.13661, -0.447998), (-170.13661, 0.332852), (-170.18422, 0.332852), (-170.18422, -0.447998), (-170.14914, 0.313385), (-170.14914, -0.42853), (-170.08185, -0.42853), (-170.08185, 0.313385), (-170.37283, 0.557807), (-170.37283, 0.759339), (-170.39474, 0.759339), (-170.43965, 0.730989), (-170.43965, 0.557807), (-170.43965, 0.543466), (-170.37283, 0.543466), (-170.37283, 0.557807), (-170.43965, 0.557807), (-170.31628, -0.274279), (-170.31628, 0.7192), (-170.38312, 0.708166), (-170.38312, -0.274279), (-170.31628, -0.288623), (-170.38312, -0.288623), (-170.38312, -0.461829), (-170.3382, -0.490183), (-170.31628, -0.490183), (-170.38312, -0.288623), (-170.31628, -0.288623), (-170.31628, -0.274279), (-170.38312, -0.274279), (-170.37283, -0.449873), (-170.37283, 0.543466), (-170.43965, 0.543466), (-170.43965, -0.438841), (-170.34538, -0.45084), (-171.08351, -0.45084), (-171.08351, -0.491128), (-170.34538, -0.491128), (-170.37283, -0.449873), (-170.43965, -0.438841), (-170.43965, -0.479062), (-170.37283, -0.490095), (-170.08905, 0.310877), (-170.08905, -0.426022), (-170.04883, -0.426022), (-170.04883, 0.310877), (-170.38312, 0.708166), (-170.31628, 0.7192), (-170.31628, 0.759428), (-170.38312, 0.748393), (-141.89807, -111.91363), (-140.40054, -111.91363), (-140.40054, -110.22088), (-141.89807, -110.22088), (-118.539474, -113.51364), (-115.08669, -113.51364), (-115.08669, -109.61047), (-118.539474, -109.61047), (-88.715126, -113.93459), (-85.89745, -113.93459), (-85.89745, -110.74826), (-88.715126, -110.74826), (-68.9167, -112.289925), (-68.91669, -112.289925), (-68.91669, -112.28991), (-68.9167, -112.28991), (-68.92258, -112.289925), (-68.92256, -112.289925), (-68.92256, -112.28991), (-68.92258, -112.28991), (-68.92845, -112.289925), (-68.92844, -112.289925), (-68.92844, -112.28991), (-68.92845, -112.28991), (-70.83784, -0.438784), (-70.8377, -0.423362), (-71.55128, -0.423362), (-71.55115, -0.438784), (-70.83784, -0.449743), (-70.83784, -0.438784), (-71.55115, -0.438784), (-71.55115, -0.449743), (-70.83784, -0.457065), (-70.83784, -0.449743), (-71.55115, -0.449743), (-71.55115, -0.457065), (-71.43768, -0.333447), (-71.42053, -0.333284), (-71.42053, 0.339168), (-71.43768, 0.339332), (-71.54458, 0.454642), (-71.55128, -0.423362), (-70.8377, -0.423362), (-70.844406, 0.454642), (-70.844406, 0.460405), (-71.54458, 0.460405), (-71.54458, 0.454642), (-70.844406, 0.454642), (-71.18148, -0.808759), (-71.18148, -0.7944), (-71.91933, -0.7944), (-71.91933, -0.808759), (-71.91933, -0.7944), (-71.18148, -0.7944), (-71.18148, 0.09327), (-71.91933, 0.09327), (-71.50983, -0.338489), (-71.50983, 0.354443), (-71.53191, 0.354443), (-71.53191, -0.338489), (-71.18148, 0.148064), (-71.91933, 0.148064), (-71.91933, 0.135208), (-71.18148, 0.135208), (-71.18148, 0.135208), (-71.91933, 0.135208), (-71.91933, 0.115966), (-71.18148, 0.115966), (-71.18148, 0.115966), (-71.91933, 0.115966), (-71.91933, 0.09327), (-71.18148, 0.09327), (-71.19581, -0.792136), (-71.19581, 0.104068), (-71.39788, 0.066898), (-71.414894, 0.064189), (-71.425514, 0.05734), (-71.43261, 0.04709), (-71.43515, 0.032667), (-71.44107, -0.788509), (-71.071, -0.045896), (-71.071, -0.03415), (-71.31323, -0.044133), (-71.31625, -0.049523), (-71.071, -0.03415), (-71.071, 0.10407), (-71.31323, -0.044133), (-71.071, -0.045896), (-71.31625, -0.049523), (-71.31033, -0.870702), (-71.3078, -0.885125), (-71.300705, -0.895375), (-71.290085, -0.902224), (-71.27306, -0.904932), (-71.071, -0.942102), (-71.19581, -0.792136), (-71.44107, -0.788509), (-71.43805, -0.793899), (-71.19581, -0.803881), (-71.19581, -0.803881), (-71.43805, -0.793899), (-71.19581, -0.942101), (-71.43768, -0.333447), (-71.43768, 0.339332), (-71.641365, 0.334729), (-71.641365, -0.328845), (-70.83911, 0.618864), (-71.549866, 0.618864), (-71.54458, 0.460405), (-70.844406, 0.460405), (-71.18148, -0.982156), (-71.18148, -0.808759), (-71.91933, -0.808759), (-71.91933, -0.982156), (-71.30188, 0.354443), (-71.50983, 0.354443), (-71.50983, -0.338489), (-71.30188, -0.338489), (-71.78952, -0.023314), (-71.78952, 0.138402), (-72.04584, -0.023314), (-71.78952, -0.036705), (-71.78952, -0.023314), (-72.04584, -0.023314), (-72.053345, -0.036705), (-71.655205, -0.778869), (-71.655205, 0.138403), (-71.86172, 0.104318), (-71.88365, 0.100107), (-71.902245, 0.088116), (-71.914665, 0.070172), (-71.91903, 0.049004), (-71.91903, -0.778869), (-71.655205, -0.953977), (-71.655205, -0.792261), (-71.91152, -0.792261), (-71.655205, -0.778869), (-71.91903, -0.778869), (-71.91152, -0.792261), (-71.655205, -0.792261), (-71.78952, -0.036705), (-72.053345, -0.036705), (-72.053345, -0.864578), (-72.04898, -0.885746), (-72.03656, -0.903691), (-72.01796, -0.915681), (-71.99603, -0.919892), (-71.78952, -0.953977)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_FridgeDrawer1B5_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]
                rel material:binding = </root/_materials/M_FridgeDrawer1B5_0>
            }

            def GeomSubset "M_FridgeDrawer1B5_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [30]
                rel material:binding = </root/_materials/M_FridgeDrawer1B5_1>
            }

            def GeomSubset "M_FridgeDrawer1B5_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [31]
                rel material:binding = </root/_materials/M_FridgeDrawer1B5_2>
            }

            def GeomSubset "M_FridgeDrawer1B5_3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [32]
                rel material:binding = </root/_materials/M_FridgeDrawer1B5_3>
            }

            def GeomSubset "M_FridgeDrawer1B5_4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]
                rel material:binding = </root/_materials/M_FridgeDrawer1B5_4>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer1B5_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1B5_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1B5_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge.tga@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1B5_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer1B5_1"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1B5_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1B5_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1B5_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1B5_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1B5_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer1B5_2"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1B5_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1B5_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1B5_2/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1B5_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1B5_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer1B5_3"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1B5_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.8014706, 0.8014706, 0.8014706)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1B5_3/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1B5_3/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer1B5_4"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1B5_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.39705884, 0.39705884, 0.39705884)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }
    }
}

