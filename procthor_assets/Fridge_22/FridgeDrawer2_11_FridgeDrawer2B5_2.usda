#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.0"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "FridgeDrawer2B5"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "FridgeDrawer2B5" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.00263, -0.226135, -0.984512), (0.285717, 0.217121, -0.639065)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 8, 4, 3, 8, 4, 3, 4, 4, 4, 4, 3, 4, 8, 3, 4, 8]
            int[] faceVertexIndices = [0, 1, 3, 2, 68, 61, 81, 78, 56, 37, 41, 55, 61, 34, 35, 60, 60, 35, 36, 62, 55, 41, 40, 67, 69, 38, 39, 68, 67, 40, 38, 69, 62, 36, 37, 56, 68, 39, 34, 61, 28, 34, 39, 29, 56, 75, 74, 62, 69, 77, 76, 67, 69, 68, 78, 77, 55, 67, 76, 79, 60, 62, 74, 80, 60, 80, 81, 61, 75, 56, 55, 79, 83, 82, 28, 29, 93, 92, 91, 90, 35, 34, 28, 82, 86, 87, 36, 35, 86, 40, 41, 84, 88, 38, 89, 83, 29, 39, 89, 38, 40, 88, 37, 36, 87, 85, 41, 37, 90, 91, 37, 85, 93, 90, 85, 84, 92, 93, 84, 41, 91, 92, 4, 5, 7, 6, 8, 9, 11, 10, 12, 13, 15, 14, 16, 17, 19, 18, 20, 21, 23, 22, 24, 25, 27, 26, 65, 66, 70, 71, 64, 65, 71, 72, 63, 64, 72, 73, 54, 63, 73, 57, 59, 70, 66, 58, 52, 53, 59, 58, 33, 32, 31, 30, 31, 32, 42, 45, 43, 44, 46, 47, 47, 46, 48, 49, 49, 48, 50, 51, 51, 50, 45, 42, 74, 75, 57, 73, 72, 71, 70, 59, 76, 77, 52, 58, 77, 78, 52, 76, 58, 66, 65, 64, 63, 54, 79, 74, 59, 53, 80, 80, 53, 81, 54, 57, 75, 79, 78, 81, 53, 52, 83, 33, 30, 82, 85, 44, 43, 84, 86, 82, 30, 87, 86, 30, 31, 88, 84, 43, 47, 49, 51, 42, 32, 83, 89, 33, 88, 32, 33, 89, 87, 31, 45, 50, 48, 46, 44, 85]
            rel material:binding = </root/_materials/M_FridgeDrawer2B5_0>
            normal3f[] normals = [(0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0.0000035606818, -0.8796966, 0.47553548), (0.0000035606818, -0.8796966, 0.47553548), (4.6528294e-7, -0.85844296, 0.5129092), (-6.4924825e-7, -0.8584428, 0.5129095), (-0.050594404, -0.068206154, 0.9963875), (-0.017306479, -0.028737698, 0.99943715), (0.017305246, -0.02873384, 0.9994373), (0.050594274, -0.068210945, 0.9963872), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.08201152, 0.0021007936, 0.9966292), (-0.08197802, 0.0020990553, 0.996632), (0.050594274, -0.068210945, 0.9963872), (0.017305246, -0.02873384, 0.9994373), (0.08200784, 0.0020972083, 0.9966295), (0.0819742, 0.0020994947, 0.9966323), (-9.044972e-7, 0, 1), (-9.1637406e-7, 0, 1), (-8.3827274e-7, 0, 1), (-9.4994664e-7, 0, 1), (0.0819742, 0.0020994947, 0.9966323), (0.08200784, 0.0020972083, 0.9966295), (-9.1637406e-7, 0, 1), (-9.044972e-7, 0, 1), (-0.08197802, 0.0020990553, 0.996632), (-0.08201152, 0.0021007936, 0.9966292), (-0.017306479, -0.028737698, 0.99943715), (-0.050594404, -0.068206154, 0.9963875), (-9.4994664e-7, 0, 1), (-8.3827274e-7, 0, 1), (0, 0, 1), (0, 0, 1), (-8.1174284e-7, 0.9206549, -0.39037758), (0, 1, 0), (0, 1, 0), (-8.589989e-7, 0.92065525, -0.39037663), (0.9997141, -0.0076773707, -0.022643788), (0.9997354, -0.00798013, -0.021571787), (0.9997356, -0.007882763, -0.021601597), (0.9997158, -0.007585723, -0.022598054), (-0.99682397, 0.05108552, -0.0610909), (-0.997467, 0.060811274, -0.036899492), (-0.9997355, -0.007886579, -0.02160105), (-0.99971575, -0.007589763, -0.02259897), (-0.99682397, 0.05108552, -0.0610909), (-0.9964171, 0.055030964, -0.06422303), (-0.99692965, 0.06348781, -0.04583301), (-0.997467, 0.060811274, -0.036899492), (-0.9997137, -0.007681844, -0.022664858), (-0.99971575, -0.007589763, -0.02259897), (-0.9997355, -0.007886579, -0.02160105), (-0.99973524, -0.007978486, -0.021581918), (0.99682415, 0.05108343, -0.061090272), (0.9997158, -0.007585723, -0.022598054), (0.9997356, -0.007882763, -0.021601597), (0.99746996, 0.06076581, -0.036893282), (0.99682415, 0.05108343, -0.061090272), (0.99746996, 0.06076581, -0.036893282), (0.99692976, 0.0634935, -0.04582083), (0.9964178, 0.055039134, -0.064204656), (-0.000003913758, 0.9834987, 0.18091534), (-0.000003933948, 0.98349965, 0.18091016), (-0.000003933948, 0.98349965, 0.18091016), (-0.000003913757, 0.9834987, 0.18091534), (-0.0000024120623, 0.8457391, -0.5335966), (-0.000002412064, 0.8457391, -0.5335966), (-8.1174284e-7, 0.9206549, -0.39037758), (-8.589989e-7, 0.92065525, -0.39037663), (0.0000037546442, -0.98665136, -0.16284671), (0.0000037546442, -0.98665136, -0.16284671), (0.0000037546442, -0.98665136, -0.16284671), (0.0000037546442, -0.98665136, -0.16284671), (-1, -9.008734e-9, 0), (-0.99999994, -1.8017467e-8, 0), (-0.99999994, -1.8017467e-8, 0), (-1, -1.2236817e-8, 0), (-1, 6.350524e-9, 0), (-1, -0.0000014389926, -1.836701e-7), (-1, -0.0000014253447, -1.17772046e-7), (-1, -9.008734e-9, 0), (-1, 6.350524e-9, 0), (1, 0.0000014288468, 1.1930676e-7), (1, 0.0000012800724, 1.06884315e-7), (1, 0.0000020128923, 2.4739919e-7), (1, 0.0000014605778, 1.860603e-7), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0.0000014288468, 1.1930676e-7), (1, 0.0000014605778, 1.860603e-7), (-1, -0.0000012769345, -1.0550934e-7), (-1, -0.0000014253447, -1.17772046e-7), (-1, -0.0000014389926, -1.836701e-7), (-1, -0.0000019991107, -2.4422073e-7), (0.017305246, -0.02873384, 0.9994373), (-0.017306479, -0.028737698, 0.99943715), (1.0427189e-7, 0, 0.99999994), (1.0427189e-7, 0, 0.99999994), (-1, -0.0000012769345, -1.0550934e-7), (-1, -0.0000019991107, -2.4422073e-7), (-1, 0, 0), (-1, 0, 0), (4.016666e-8, 0, -1), (4.016666e-8, 0, -1), (4.016666e-8, 0, -1), (4.016666e-8, 0, -1), (1, 0.0000020128923, 2.4739919e-7), (1, 0.0000012800724, 1.06884315e-7), (1, 0, 0), (1, 0, 0), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (3.3783726e-7, 0.36320972, 0.9317073), (1.5331898e-7, 0.01011889, 0.9999488), (0.0006673788, 0.010125764, 0.9999485), (-0.0000013528913, 0.36322245, 0.9317024), (-0.0000020160794, 0.7194433, 0.69455117), (3.3783726e-7, 0.36320972, 0.9317073), (-0.0000013528913, 0.36322245, 0.9317024), (-6.228652e-8, 0.7194742, 0.69451904), (-0.0000018046537, 0.9452609, 0.3263157), (-0.0000020160794, 0.7194433, 0.69455117), (-6.228652e-8, 0.7194742, 0.69451904), (0.0000013144163, 0.9452726, 0.3262815), (-2.5788904e-7, 0.9838289, 0.17911068), (-0.0000018046537, 0.9452609, 0.3263157), (0.0000013144163, 0.9452726, 0.3262815), (4.965259e-7, 0.983829, 0.17910978), (0.0000016018748, 0.0034487562, 0.999994), (0.0006673788, 0.010125764, 0.9999485), (1.5331898e-7, 0.01011889, 0.9999488), (8.034845e-7, 0.0034480095, 0.9999941), (7.348135e-7, -0.8475834, 0.5306622), (0.000002494194, -0.84758294, 0.530663), (0.0000016018748, 0.0034487562, 0.999994), (8.034845e-7, 0.0034480095, 0.9999941), (-0.000002371806, 0.83316743, -0.5530209), (-2.6320458e-7, 0.009057045, -0.999959), (-0.00014124184, 0.009056449, -0.999959), (-0.000002686817, 0.83316696, -0.5530216), (-0.00014124184, 0.009056449, -0.999959), (-2.6320458e-7, 0.009057045, -0.999959), (-8.134637e-8, -0.0052497387, -0.99998623), (-3.9927028e-7, -0.0052495226, -0.9999862), (0.000002826752, -0.98622656, -0.16539972), (0.0000028250652, -0.98622656, -0.16539943), (7.008782e-8, -0.9285004, -0.3713313), (0.0000018151236, -0.9285004, -0.37133127), (0.0000018151236, -0.9285004, -0.37133127), (7.008782e-8, -0.9285004, -0.3713313), (3.1496143e-8, -0.7195045, -0.69448775), (0.0000014011683, -0.719468, -0.6945256), (0.0000014011683, -0.719468, -0.6945256), (3.1496143e-8, -0.7195045, -0.69448775), (1.7385102e-7, -0.39422238, -0.91901505), (5.481504e-7, -0.39422238, -0.919015), (5.481504e-7, -0.39422238, -0.919015), (1.7385102e-7, -0.39422238, -0.91901505), (-3.9927028e-7, -0.0052495226, -0.9999862), (-8.134637e-8, -0.0052497387, -0.99998623), (0.9997356, -0.007882763, -0.021601597), (0.9997354, -0.00798013, -0.021571787), (0.9997415, -0.008065873, -0.021262098), (0.9997415, -0.008065873, -0.021262098), (0.9997415, -0.008065873, -0.021262098), (0.9997415, -0.008065873, -0.021262098), (0.9997415, -0.008065873, -0.021262098), (0.9997412, -0.007987928, -0.02130125), (-0.9997355, -0.007886579, -0.02160105), (-0.997467, 0.060811274, -0.036899492), (-0.998474, 0.049975708, -0.02349829), (-0.9997401, -0.007993775, -0.021349132), (-0.997467, 0.060811274, -0.036899492), (-0.99692965, 0.06348781, -0.04583301), (-0.998474, 0.049975708, -0.02349829), (-0.9997355, -0.007886579, -0.02160105), (-0.9997401, -0.007993775, -0.021349132), (-0.9997413, -0.008071495, -0.021262549), (-0.9997413, -0.008071495, -0.021262549), (-0.9997413, -0.008071495, -0.021262549), (-0.9997413, -0.008071495, -0.021262549), (-0.9997413, -0.008071495, -0.021262549), (-0.99973524, -0.007978486, -0.021581918), (0.9997356, -0.007882763, -0.021601597), (0.9997412, -0.007987928, -0.02130125), (0.99847376, 0.04997944, -0.023498166), (0.99746996, 0.06076581, -0.036893282), (0.99746996, 0.06076581, -0.036893282), (0.99847376, 0.04997944, -0.023498166), (0.99692976, 0.0634935, -0.04582083), (-2.5788904e-7, 0.9838289, 0.17911068), (4.965259e-7, 0.983829, 0.17910978), (-0.000003913758, 0.9834987, 0.18091534), (-0.000003913757, 0.9834987, 0.18091534), (-6.4924825e-7, -0.8584428, 0.5129095), (4.6528294e-7, -0.85844296, 0.5129092), (0.000002494194, -0.84758294, 0.530663), (7.348135e-7, -0.8475834, 0.5306622), (-0.0000024120623, 0.8457391, -0.5335966), (-0.000002371806, 0.83316743, -0.5530209), (-0.000002686817, 0.83316696, -0.5530216), (-0.000002412064, 0.8457391, -0.5335966), (0.0000037630975, -0.98665005, -0.16285469), (0.0000028250652, -0.98622656, -0.16539943), (0.000002826752, -0.98622656, -0.16539972), (0.0000037630975, -0.98665005, -0.16285469), (-1, 6.350524e-9, 0), (-1, -1.2236817e-8, 0), (-1, 3.4178306e-8, 0), (-1, -0.0000014389926, -1.836701e-7), (-1, 6.350524e-9, 0), (-1, 3.4178306e-8, 0), (-1, -0.0000017432002, -2.9803843e-7), (1, 0.0000014605778, 1.860603e-7), (1, 0.0000020128923, 2.4739919e-7), (1, 0.0000029846174, 5.056277e-7), (1, 0.0000029846174, 5.056277e-7), (1, 0.0000029846174, 5.056277e-7), (1, 0.0000029846174, 5.056277e-7), (1, 0.0000029846174, 5.056277e-7), (1, 0.0000017821397, 3.0191453e-7), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0.0000014605778, 1.860603e-7), (1, 0.0000017821397, 3.0191453e-7), (1, 0, 0), (1, 0, 0), (-1, -0.0000014389926, -1.836701e-7), (-1, -0.0000017432002, -2.9803843e-7), (-1, -0.0000029487005, -4.991363e-7), (-1, -0.0000029487005, -4.991363e-7), (-1, -0.0000029487005, -4.991363e-7), (-1, -0.0000029487005, -4.991363e-7), (-1, -0.0000029487005, -4.991363e-7), (-1, -0.0000019991107, -2.4422073e-7)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.00263, 0.04257, -0.984512), (-0.002622, 0.04257, -0.984512), (-0.00263, 0.042579, -0.984512), (-0.002622, 0.042579, -0.984512), (-0.00263, 0.04257, -0.984512), (-0.002622, 0.04257, -0.984512), (-0.00263, 0.042579, -0.984512), (-0.002622, 0.042579, -0.984512), (-0.00263, 0.04257, -0.984512), (-0.002622, 0.04257, -0.984512), (-0.00263, 0.042579, -0.984512), (-0.002622, 0.042579, -0.984512), (-0.00263, 0.04257, -0.984512), (-0.002622, 0.04257, -0.984512), (-0.00263, 0.042579, -0.984512), (-0.002622, 0.042579, -0.984512), (-0.00263, 0.04257, -0.984512), (-0.002622, 0.04257, -0.984512), (-0.00263, 0.042579, -0.984512), (-0.002622, 0.042579, -0.984512), (-0.00263, 0.04257, -0.984512), (-0.002622, 0.04257, -0.984512), (-0.00263, 0.042579, -0.984512), (-0.002622, 0.042579, -0.984512), (-0.00263, 0.04257, -0.984512), (-0.002622, 0.04257, -0.984512), (-0.00263, 0.042579, -0.984512), (-0.002622, 0.042579, -0.984512), (0.02428, 0.217121, -0.648088), (0.285716, 0.217121, -0.648088), (0.02428, 0.145624, -0.761408), (0.02428, 0.140536, -0.76426), (0.285716, 0.140537, -0.76426), (0.285716, 0.145625, -0.761408), (0.02428, 0.217121, -0.640315), (0.02428, 0.145624, -0.640315), (0.02428, 0.140536, -0.640315), (0.024281, -0.211866, -0.640315), (0.285716, 0.145625, -0.640315), (0.285716, 0.217121, -0.640315), (0.285716, 0.140537, -0.640315), (0.285717, -0.211865, -0.640315), (0.285717, -0.173987, -0.76426), (0.285717, -0.195001, -0.742486), (0.024281, -0.195002, -0.742486), (0.024281, -0.173987, -0.76426), (0.024281, -0.193402, -0.750818), (0.285717, -0.193402, -0.750818), (0.024281, -0.188847, -0.757882), (0.285717, -0.188846, -0.757882), (0.024281, -0.182029, -0.762602), (0.285717, -0.182029, -0.762602), (0.279365, 0.140856, -0.756038), (0.030631, 0.140855, -0.756038), (0.281761, -0.186102, -0.740781), (0.279462, -0.204813, -0.639065), (0.030535, -0.204814, -0.639065), (0.028237, -0.186103, -0.740781), (0.279365, 0.138809, -0.757186), (0.030631, 0.138808, -0.757186), (0.033125, 0.145624, -0.640315), (0.030534, 0.209966, -0.640315), (0.033125, 0.140536, -0.640315), (0.281699, -0.185074, -0.747244), (0.281699, -0.182472, -0.751278), (0.281699, -0.178579, -0.753973), (0.281746, -0.173101, -0.754937), (0.276871, 0.140537, -0.640315), (0.279461, 0.209967, -0.640315), (0.276871, 0.145625, -0.640315), (0.028252, -0.173101, -0.754937), (0.028298, -0.17858, -0.753973), (0.028298, -0.182473, -0.751278), (0.028298, -0.185074, -0.747244), (0.032619, 0.140185, -0.664029), (0.029971, -0.200222, -0.664029), (0.277377, 0.140186, -0.664029), (0.277382, 0.144648, -0.664029), (0.281245, 0.197148, -0.664029), (0.280027, -0.200221, -0.664029), (0.032614, 0.144647, -0.664029), (0.028751, 0.197147, -0.664029), (0.02428, 0.207063, -0.664029), (0.285716, 0.207064, -0.664029), (0.285717, -0.207951, -0.664029), (0.024281, -0.207952, -0.664029), (0.02428, 0.145624, -0.664029), (0.02428, 0.140536, -0.664029), (0.285716, 0.140537, -0.664029), (0.285716, 0.145625, -0.664029), (0.024281, -0.226135, -0.640315), (0.285717, -0.226134, -0.640315), (0.285717, -0.22222, -0.664029), (0.024281, -0.222221, -0.664029)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-169.97336, -111.24891), (-169.97327, -111.24891), (-169.97327, -111.24882), (-169.97336, -111.24882), (-169.98495, -0.441027), (-169.98495, 0.306977), (-170.05623, 0.312336), (-170.05623, -0.446386), (-171.06586, -0.430896), (-171.0835, -0.450806), (-170.3454, -0.450806), (-170.36307, -0.430896), (-171.06586, 0.740137), (-171.0835, 0.760337), (-171.0835, 0.558483), (-171.05853, 0.558483), (-171.05853, 0.558483), (-171.0835, 0.558483), (-171.0835, 0.544119), (-171.05853, 0.544119), (-170.36307, -0.430896), (-170.3454, -0.450806), (-170.3454, 0.544119), (-170.37038, 0.544119), (-170.37038, 0.558483), (-170.3454, 0.558483), (-170.3454, 0.760337), (-170.36307, 0.740137), (-170.37038, 0.544119), (-170.3454, 0.544119), (-170.3454, 0.558483), (-170.37038, 0.558483), (-171.05853, 0.544119), (-171.0835, 0.544119), (-171.0835, -0.450806), (-171.06586, -0.430896), (-170.36307, 0.740137), (-170.3454, 0.760337), (-171.0835, 0.760337), (-171.06586, 0.740137), (-170.18422, 0.332868), (-170.20743, 0.332868), (-170.20743, -0.448013), (-170.18422, -0.448013), (-170.25665, 0.689361), (-170.32704, 0.676411), (-170.32704, -0.283537), (-170.26018, -0.284526), (-170.1996, 0.507848), (-170.26646, 0.505093), (-170.26646, 0.492514), (-170.1996, 0.493503), (-170.1996, 0.507848), (-170.1996, 0.689262), (-170.26646, 0.653118), (-170.26646, 0.505093), (-170.19608, -0.480219), (-170.1996, 0.493503), (-170.26646, 0.492514), (-170.26646, -0.467272), (-170.26018, -0.298874), (-170.26018, -0.284526), (-170.32704, -0.283537), (-170.32704, -0.296118), (-170.26018, -0.298874), (-170.32704, -0.296118), (-170.32704, -0.444169), (-170.26018, -0.480318), (-169.94984, 0.823703), (-170.0208, 0.822099), (-170.0208, 0.114573), (-169.94984, 0.112969), (-170.13661, -0.448013), (-170.13661, 0.332868), (-170.18422, 0.332868), (-170.18422, -0.448013), (-170.14914, 0.313381), (-170.14914, -0.428526), (-170.08185, -0.428526), (-170.08185, 0.313381), (-170.37283, 0.557843), (-170.37283, 0.759393), (-170.39474, 0.759393), (-170.43965, 0.73104), (-170.43965, 0.557843), (-170.43965, 0.543501), (-170.37283, 0.543501), (-170.37283, 0.557843), (-170.43965, 0.557843), (-170.31628, -0.274287), (-170.31628, 0.719211), (-170.38312, 0.708177), (-170.38312, -0.274287), (-170.31628, -0.288631), (-170.38312, -0.288631), (-170.38312, -0.46184), (-170.3382, -0.490195), (-170.31628, -0.490195), (-170.38312, -0.288631), (-170.31628, -0.288631), (-170.31628, -0.274287), (-170.38312, -0.274287), (-170.37283, -0.449923), (-170.37283, 0.543501), (-170.43965, 0.543501), (-170.43965, -0.43889), (-170.3454, -0.450806), (-171.0835, -0.450806), (-171.0835, -0.491092), (-170.3454, -0.491092), (-170.37283, -0.449923), (-170.43965, -0.43889), (-170.43965, -0.479115), (-170.37283, -0.490148), (-170.08905, 0.310792), (-170.08905, -0.425937), (-170.04883, -0.425937), (-170.04883, 0.310792), (-170.38312, 0.708177), (-170.31628, 0.719211), (-170.31628, 0.75944), (-170.38312, 0.748405), (-141.89807, -111.91363), (-140.40054, -111.91363), (-140.40054, -110.22088), (-141.89807, -110.22088), (-118.539474, -113.51364), (-115.08669, -113.51364), (-115.08669, -109.61047), (-118.539474, -109.61047), (-88.715126, -113.93459), (-85.89745, -113.93459), (-85.89745, -110.74826), (-88.715126, -110.74826), (-68.9167, -112.289925), (-68.91669, -112.289925), (-68.91669, -112.28991), (-68.9167, -112.28991), (-68.92258, -112.289925), (-68.92256, -112.289925), (-68.92256, -112.28991), (-68.92258, -112.28991), (-68.92845, -112.289925), (-68.92844, -112.289925), (-68.92844, -112.28991), (-68.92845, -112.28991), (-70.83784, -0.438783), (-70.83771, -0.423362), (-71.55128, -0.423362), (-71.55115, -0.438783), (-70.83784, -0.449742), (-70.83784, -0.438783), (-71.55115, -0.438783), (-71.55115, -0.449742), (-70.83784, -0.457065), (-70.83784, -0.449742), (-71.55115, -0.449742), (-71.55115, -0.457065), (-71.43768, -0.333447), (-71.42053, -0.333283), (-71.42053, 0.339169), (-71.43768, 0.339332), (-71.54458, 0.454642), (-71.55128, -0.423362), (-70.83771, -0.423362), (-70.844406, 0.454642), (-70.844406, 0.460406), (-71.54458, 0.460406), (-71.54458, 0.454642), (-70.844406, 0.454642), (-71.18148, -0.808759), (-71.18148, -0.7944), (-71.91933, -0.7944), (-71.91933, -0.808759), (-71.91933, -0.7944), (-71.18148, -0.7944), (-71.18148, 0.09327), (-71.91933, 0.09327), (-71.50983, -0.338489), (-71.50983, 0.354444), (-71.53191, 0.354444), (-71.53191, -0.338489), (-71.18148, 0.148064), (-71.91933, 0.148064), (-71.91933, 0.135208), (-71.18148, 0.135208), (-71.18148, 0.135208), (-71.91933, 0.135208), (-71.91933, 0.115967), (-71.18148, 0.115967), (-71.18148, 0.115967), (-71.91933, 0.115967), (-71.91933, 0.09327), (-71.18148, 0.09327), (-71.19581, -0.792136), (-71.19581, 0.104068), (-71.39788, 0.066898), (-71.414894, 0.06419), (-71.425514, 0.057341), (-71.43261, 0.047091), (-71.43515, 0.032667), (-71.44107, -0.788509), (-71.071, -0.045896), (-71.071, -0.03415), (-71.31323, -0.044132), (-71.31625, -0.049523), (-71.071, -0.03415), (-71.071, 0.10407), (-71.31323, -0.044132), (-71.071, -0.045896), (-71.31625, -0.049523), (-71.31033, -0.870702), (-71.3078, -0.885126), (-71.300705, -0.895375), (-71.290085, -0.902224), (-71.27306, -0.904933), (-71.071, -0.942103), (-71.19581, -0.792136), (-71.44107, -0.788509), (-71.43805, -0.793899), (-71.19581, -0.803882), (-71.19581, -0.803882), (-71.43805, -0.793899), (-71.19581, -0.942101), (-71.43768, -0.333447), (-71.43768, 0.339332), (-71.64136, 0.33473), (-71.64136, -0.328844), (-70.83911, 0.618864), (-71.549866, 0.618864), (-71.54458, 0.460406), (-70.844406, 0.460406), (-71.18148, -0.982156), (-71.18148, -0.808759), (-71.91933, -0.808759), (-71.91933, -0.982156), (-71.30188, 0.354444), (-71.50983, 0.354444), (-71.50983, -0.338489), (-71.30188, -0.338489), (-71.78952, -0.023314), (-71.78952, 0.138402), (-72.04584, -0.023314), (-71.78952, -0.036706), (-71.78952, -0.023314), (-72.04584, -0.023314), (-72.053345, -0.036706), (-71.655205, -0.778869), (-71.655205, 0.138402), (-71.86172, 0.104317), (-71.88365, 0.100106), (-71.902245, 0.088116), (-71.914665, 0.070171), (-71.91903, 0.049003), (-71.91903, -0.778869), (-71.655205, -0.953976), (-71.655205, -0.79226), (-71.91152, -0.79226), (-71.655205, -0.778869), (-71.91903, -0.778869), (-71.91152, -0.79226), (-71.655205, -0.79226), (-71.78952, -0.036706), (-72.053345, -0.036706), (-72.053345, -0.864577), (-72.04898, -0.885745), (-72.03656, -0.90369), (-72.01796, -0.91568), (-71.99603, -0.919891), (-71.78952, -0.953976)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_FridgeDrawer2B5_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]
                rel material:binding = </root/_materials/M_FridgeDrawer2B5_0>
            }

            def GeomSubset "M_FridgeDrawer2B5_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [30]
                rel material:binding = </root/_materials/M_FridgeDrawer2B5_1>
            }

            def GeomSubset "M_FridgeDrawer2B5_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [31]
                rel material:binding = </root/_materials/M_FridgeDrawer2B5_2>
            }

            def GeomSubset "M_FridgeDrawer2B5_3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [32]
                rel material:binding = </root/_materials/M_FridgeDrawer2B5_3>
            }

            def GeomSubset "M_FridgeDrawer2B5_4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]
                rel material:binding = </root/_materials/M_FridgeDrawer2B5_4>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer2B5_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2B5_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2B5_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge.tga@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2B5_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer2B5_1"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2B5_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer2B5_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2B5_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2B5_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2B5_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer2B5_2"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2B5_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer2B5_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2B5_2/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2B5_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2B5_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer2B5_3"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2B5_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.8014706, 0.8014706, 0.8014706)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2B5_3/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2B5_3/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer2B5_4"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2B5_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.39705884, 0.39705884, 0.39705884)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }
    }
}

