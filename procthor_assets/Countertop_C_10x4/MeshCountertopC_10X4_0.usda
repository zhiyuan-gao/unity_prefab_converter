#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.0"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "CountertopC_10X4"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "CountertopC_10X4" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-1.523137, -0.611576, -0.517404), (1.524867, 0.627625, 0.418626)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 3, 3, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [44, 45, 9, 10, 0, 15, 16, 4, 2, 3, 6, 5, 0, 1, 8, 7, 3, 2, 10, 9, 14, 15, 0, 7, 6, 3, 11, 12, 3, 9, 13, 11, 2, 15, 14, 10, 16, 15, 2, 5, 46, 30, 29, 47, 26, 1, 0, 4, 4, 27, 28, 26, 6, 29, 30, 5, 32, 27, 4, 16, 6, 12, 31, 29, 5, 30, 32, 16, 7, 8, 45, 44, 8, 13, 9, 45, 14, 7, 44, 10, 27, 32, 30, 46, 31, 28, 47, 29, 28, 27, 46, 47, 12, 11, 17, 18, 11, 13, 19, 17, 19, 13, 8, 21, 20, 22, 23, 36, 37, 38, 39, 18, 17, 20, 21, 23, 22, 25, 24, 12, 18, 33, 31, 33, 28, 31, 33, 35, 28, 26, 24, 25, 1, 19, 8, 34, 40, 41, 42, 43, 19, 34, 37, 36, 35, 33, 40, 43, 18, 21, 40, 33, 21, 23, 41, 40, 23, 24, 42, 41, 24, 26, 43, 42, 26, 28, 35, 43, 8, 1, 37, 34, 1, 25, 38, 37, 25, 22, 39, 38, 22, 20, 36, 39, 20, 17, 19, 36]
            rel material:binding = </root/_materials/M_CountertopC_10X4_0>
            normal3f[] normals = [(0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, 0, 1), (2.1261555e-7, 0, 1), (-2.753584e-7, 0, 1), (2.7340205e-8, 0, 1), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (-1, 0, 0), (-1, 3.881199e-9, 0), (-1, 0, 0), (-1, 0, 0), (1, 0.0000031556792, 0), (1, 0.0000031556792, 0), (1, 0.0000031556792, 0), (1, 0.0000031556792, 0), (6.378268e-7, 0, 1), (2.1261555e-7, 0, 1), (0, 0, 1), (0, 0, 1), (3.6990155e-8, 0, -1), (0, 0, -1), (0, 0, -1), (3.698077e-8, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (8.5048487e-7, 0, 1), (2.1261555e-7, 0, 1), (6.378268e-7, 0, 1), (8.505457e-7, 0, 1), (-2.753584e-7, 0, 1), (2.1261555e-7, 0, 1), (8.5048487e-7, 0, 1), (-0.000001183685, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, -3.8811976e-9, 0), (-1, -0.0000030570643, 0), (-1, -0.0000030570643, 0), (-1, -0.0000030570643, 0), (-1, -0.0000030570643, 0), (-8.740808e-7, 0, 1), (2.7339942e-8, 0, 1), (2.7340205e-8, 0, 1), (-2.753584e-7, 0, 1), (3.6990155e-8, 0, -1), (3.698077e-8, 0, -1), (3.6989793e-8, 0, -1), (3.698201e-8, 0, -1), (-0.000001183685, 0, 1), (-0.0000011834243, 0, 1), (-8.740808e-7, 0, 1), (-2.753584e-7, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (6.378268e-7, 0, 1), (0, 0, 1), (0, 0, 1), (8.505457e-7, 0, 1), (2.7339942e-8, 0, 1), (-8.740808e-7, 0, 1), (-0.0000011834243, 0, 1), (0, 0, 1), (3.6989793e-8, 0, -1), (0, 0, -1), (0, 0, -1), (3.698201e-8, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0.0000017789207, -1, 0), (0.0000017789207, -1, 0), (0.0000017789207, -1, 0), (0.0000017789207, -1, 0), (0.0025242958, 0.010267286, -0.99994415), (-0.0025244774, 0.010267213, -0.99994415), (-0.0025032423, 0.010296717, -0.9999438), (0.0026338415, 0.010153903, -0.99994504), (-0.00018922097, -0.00019306208, -0.9999999), (0.00018925004, -0.00019306217, -0.9999999), (0.00018931803, -0.00019296719, -0.99999994), (-0.00018928922, -0.00019296679, -0.99999994), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-0.0000017789141, -1, 0), (-0.0000017789141, -1, 0), (-0.0000017789141, -1, 0), (-0.0000017789141, -1, 0), (-0.0050308215, 0.0016656049, -0.99998593), (-0.00011128952, 0.0032195495, -0.9999949), (-0.00011128952, 0.0032195495, -0.9999949), (-0.0050293086, 0.0016660825, -0.99998593), (0.000113056434, 0.0032186708, -0.9999948), (0.0050315796, 0.0016651605, -0.99998593), (0.0050300686, 0.0016656375, -0.99998593), (0.000113056434, 0.0032186708, -0.9999948), (0.0025242958, 0.010267286, -0.99994415), (0.0026338415, 0.010153903, -0.99994504), (0.0050300686, 0.0016656375, -0.99998593), (0.0050315796, 0.0016651605, -0.99998593), (-0.9999987, -0.0016480401, 0), (-0.9999987, -0.0016480401, 0), (-0.9999987, -0.0016480401, 0), (-0.9999987, -0.0016480401, 0), (-0.00018922097, -0.00019306208, -0.9999999), (-0.00018928922, -0.00019296679, -0.99999994), (-0.0003785754, 0.00007146353, -0.9999999), (-0.0003785754, 0.00007146353, -0.9999999), (1, -1.26002835e-8, 0), (1, -3.8811976e-9, 0), (1, -5.8127365e-9, 0), (1, -1.26002835e-8, 0), (1, -3.8811976e-9, 0), (1, 0, 0), (1, 0, 0), (1, -5.8127365e-9, 0), (-1, 0, 0), (-1, 3.881199e-9, 0), (-1, 5.812744e-9, 0), (-1, 0, 0), (-1, 3.881199e-9, 0), (-1, 1.2600296e-8, 0), (-1, 1.2600296e-8, 0), (-1, 5.812744e-9, 0), (0.00018931803, -0.00019296719, -0.99999994), (0.00018925004, -0.00019306217, -0.9999999), (0.00037863353, 0.00007146335, -0.9999999), (0.00037863353, 0.00007146335, -0.9999999), (0.99999857, -0.0016498179, 0), (0.99999857, -0.0016498179, 0), (0.99999857, -0.0016498179, 0), (0.99999857, -0.0016498179, 0), (-0.0025032423, 0.010296717, -0.9999438), (-0.0025244774, 0.010267213, -0.99994415), (-0.0050308215, 0.0016656049, -0.99998593), (-0.0050293086, 0.0016660825, -0.99998593)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-1.523137, 0.627625, 0.418626), (-1.523137, 0.627625, 0.388626), (-0.913533, 0.018026, 0.418626), (-0.913533, 0.018026, 0.388626), (1.524867, 0.627625, 0.418626), (0.915265, 0.018026, 0.418626), (0.915265, 0.018026, 0.388626), (-1.523137, -0.591576, 0.418626), (-1.523137, -0.591576, 0.388626), (-0.913531, -0.611576, 0.388626), (-0.913531, -0.611576, 0.418626), (-0.933534, 0.038029, 0.388626), (0.935262, 0.038029, 0.388626), (-0.933534, -0.591576, 0.388626), (-0.933534, -0.591576, 0.418626), (-0.933534, 0.038029, 0.418626), (0.935262, 0.038029, 0.418626), (-0.933534, 0.038029, -0.437404), (0.935262, 0.038029, -0.437404), (-0.933534, -0.591576, -0.437404), (-0.952497, 0.056991, -0.437143), (0.954226, 0.056991, -0.437143), (-0.952497, 0.056991, -0.517143), (0.954226, 0.056991, -0.517143), (1.524867, 0.627625, -0.517404), (-1.523137, 0.627625, -0.517404), (1.524867, 0.627625, 0.388626), (1.524867, -0.591576, 0.418626), (1.524867, -0.591576, 0.388626), (0.915267, -0.611576, 0.388626), (0.915267, -0.611576, 0.418626), (0.935262, -0.591576, 0.388626), (0.935262, -0.591576, 0.418626), (0.935262, -0.591576, -0.437404), (-1.523137, -0.591576, -0.437274), (1.524867, -0.591576, -0.437273), (-0.953534, -0.571575, -0.437273), (-1.523137, -0.571576, -0.437274), (-1.523137, -0.571576, -0.517404), (-0.953534, -0.571575, -0.517274), (0.955262, -0.571575, -0.437273), (0.955262, -0.571575, -0.517274), (1.524867, -0.571576, -0.517404), (1.524867, -0.571576, -0.437273), (-1.523137, -0.611576, 0.418626), (-1.523137, -0.611576, 0.388626), (1.524867, -0.611576, 0.418626), (1.524867, -0.611576, 0.388626)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-9.81571, 0.984111), (-9.81571, 0.937237), (-8.863175, 0.937237), (-8.863175, 0.984111), (-12.119101, 1.395955), (-11.197849, 0.474713), (-8.277851, 0.474713), (-7.356596, 1.395955), (-10.967435, 0.90092), (-10.967435, 0.854046), (-8.109854, 0.854046), (-8.109854, 0.90092), (-10.410439, 0.917559), (-10.410439, 0.870685), (-8.505434, 0.870685), (-8.505434, 0.917559), (-8.850845, 0.903961), (-8.850845, 0.950836), (-9.834575, 0.950836), (-9.834575, 0.903961), (-11.197849, -0.509043), (-11.197849, 0.474713), (-12.119101, 1.395955), (-12.119101, -0.509043), (-8.309118, 0.267693), (-11.166577, 0.267693), (-11.197829, 0.236441), (-8.277871, 0.236441), (-11.166577, 0.267693), (-11.166573, 1.251435), (-11.197829, 1.220183), (-11.197829, 0.236441), (-11.166596, 0.443457), (-11.197849, 0.474713), (-11.197849, -0.509043), (-11.166593, -0.540295), (-8.277851, 0.474713), (-11.197849, 0.474713), (-11.166596, 0.443457), (-8.309099, 0.443457), (-8.863179, 1.000749), (-9.815704, 1.000749), (-9.815704, 0.953875), (-8.863179, 0.953875), (-7.356539, 0.884282), (-12.119157, 0.884282), (-12.119157, 0.837408), (-7.356539, 0.837408), (-8.47416, 0.934196), (-10.379209, 0.934196), (-10.379209, 0.887322), (-8.47416, 0.887322), (-9.834588, 0.920599), (-8.850832, 0.920599), (-8.850832, 0.967473), (-9.834588, 0.967473), (-8.277851, -0.509043), (-7.356596, -0.509043), (-7.356596, 1.395955), (-8.277851, 0.474713), (-8.309118, 0.267693), (-8.277871, 0.236441), (-8.277871, 1.220183), (-8.309114, 1.251435), (-8.309099, 0.443457), (-8.309094, -0.540296), (-8.277851, -0.509043), (-8.277851, 0.474713), (-8.505434, 0.917559), (-8.505434, 0.870685), (-8.474183, 0.870685), (-8.474183, 0.917559), (-12.119068, 1.220183), (-11.197829, 1.220183), (-11.166573, 1.251435), (-12.119068, 1.251435), (-11.197849, -0.509043), (-12.119101, -0.509043), (-12.119101, -0.540295), (-11.166593, -0.540295), (-7.356596, -0.509043), (-8.277851, -0.509043), (-8.309094, -0.540296), (-7.356596, -0.540296), (-8.277871, 1.220183), (-7.356628, 1.220183), (-7.356628, 1.251435), (-8.309114, 1.251435), (-10.379209, 0.887322), (-10.379209, 0.934196), (-10.410462, 0.934196), (-10.410462, 0.887322), (-18.464323, 0.969711), (-19.924318, 0.969711), (-19.924318, 0.324377), (-18.464323, 0.324377), (-20.03299, 0.437941), (-20.03299, -0.05394), (-19.387653, -0.05394), (-19.387653, 0.437941), (-19.387653, 0.293081), (-20.03299, 0.293081), (-20.03299, -0.167542), (-18.453346, 0.579464), (-19.942984, 0.579464), (-19.942984, 0.516962), (-18.453346, 0.516962), (-19.708647, 0.311935), (-20.153654, 0.311935), (-20.153654, 0.249334), (-19.708647, 0.249435), (-18.58384, -0.207292), (-20.043919, -0.207294), (-20.058733, -0.222107), (-18.569025, -0.222107), (-18.569065, 0.383795), (-20.058693, 0.383795), (-20.504507, -0.06201), (-18.123253, -0.06201), (-20.204145, -0.21661), (-19.55881, -0.21661), (-19.55881, 0.27527), (-20.204145, 0.27527), (-19.55881, -0.071068), (-20.204145, 0.389563), (-20.204145, -0.071066), (-19.55881, -0.071068), (-19.55891, 0.389563), (-20.204145, 0.389563), (-18.123255, 0.087166), (-18.123255, 0.795002), (-20.504505, 0.795002), (-20.504505, 0.087166), (-19.387653, 0.293081), (-20.03299, -0.167542), (-19.387754, -0.167541), (-20.153652, 0.335127), (-20.153652, 0.272627), (-19.708647, 0.272526), (-19.708647, 0.335127), (-20.043919, 0.284611), (-20.504572, 0.284611), (-20.504572, 0.268986), (-20.059546, 0.268986), (-18.123188, 0.284611), (-18.58384, 0.284611), (-18.568214, 0.268986), (-18.123188, 0.268986), (-18.58384, -0.207292), (-18.569025, -0.222107), (-18.568214, 0.268986), (-18.58384, 0.284611), (-20.10699, 0.265553), (-20.10699, 0.203053), (-19.615921, 0.202951), (-19.615921, 0.265451), (-19.725529, 0.217733), (-19.279716, 0.663549), (-20.216599, 0.663549), (-20.216597, 0.218544), (-19.034815, 0.431402), (-19.034815, 1.139235), (-19.971691, 0.494003), (-19.971691, 0.431402), (-19.034815, 1.139235), (-19.987316, 1.139235), (-19.987316, 0.494003), (-19.971691, 0.494003), (-19.273935, 0.949894), (-20.226437, 0.949894), (-19.28956, 0.304661), (-19.273935, 0.304661), (-20.226437, 0.949894), (-20.226437, 0.24206), (-19.28956, 0.24206), (-19.28956, 0.304661), (-19.27972, 0.096403), (-19.725529, 0.542219), (-20.216595, 0.541405), (-20.216595, 0.096403), (-19.691593, 0.226244), (-19.691593, 0.288744), (-20.182663, 0.288643), (-20.182663, 0.226143), (-20.058733, -0.222107), (-20.043919, -0.207294), (-20.043919, 0.284611), (-20.059546, 0.268986)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_CountertopC_10X4_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
                rel material:binding = </root/_materials/M_CountertopC_10X4_0>
            }

            def GeomSubset "M_CountertopC_10X4_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47]
                rel material:binding = </root/_materials/M_CountertopC_10X4_1>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_CountertopC_10X4_0"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopC_10X4_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopC_10X4_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/marbleBase2.jpg@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopC_10X4_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_CountertopC_10X4_1"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopC_10X4_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopC_10X4_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_CountertopC_10X4_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/DarkWood2.tif@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopC_10X4_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopC_10X4_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

