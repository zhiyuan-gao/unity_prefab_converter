#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshWindowFixed_96X72_0_GeomSubset_1"
    {
        def Mesh "MeshWindowFixed_96X72_0_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [96, 97, 99, 98, 98, 99, 101, 100, 100, 101, 103, 102, 102, 103, 97, 96, 97, 103, 101, 99, 102, 96, 98, 100]
            rel material:binding = </root/_materials/M_WindowFixed_96X72_1>
            normal3f[] normals = [(-8.7198947e-7, -1, 0), (-8.7198947e-7, -1, 0), (-8.7198947e-7, -1, 0), (-8.7198947e-7, -1, 0), (2.140208e-8, 0, -0.99999994), (2.140208e-8, 0, -0.99999994), (2.140208e-8, 0, -0.99999994), (2.140208e-8, 0, -0.99999994), (0.0000013080856, 1, 0), (0.0000013080856, 1, 0), (0.0000013080856, 1, 0), (0.0000013080856, 1, 0), (-1.5660904e-8, 0, 0.99999994), (-1.5660904e-8, 0, 0.99999994), (-1.5660904e-8, 0, 0.99999994), (-1.5660904e-8, 0, 0.99999994), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(1.2192, -0.040627, 0.913469), (1.2192, -0.040626, -0.915331), (-1.2192, -0.040624, -0.915331), (-1.171812, -0.040624, -0.858167), (1.171812, -0.040626, -0.858167), (1.171812, -0.040626, 0.856306), (1.171812, 0.040624, 0.856306), (1.171812, 0.040624, -0.858167), (-1.171812, 0.040626, -0.858167), (-1.2192, 0.040627, -0.915331), (1.2192, 0.040624, -0.915331), (1.2192, 0.040624, 0.913469), (-1.171812, 0.040626, 0.856306), (-1.171812, -0.040624, 0.856306), (-1.2192, 0.040626, 0.913469), (-1.2192, -0.040624, 0.913469), (-1.171812, 0.028626, 0.856306), (-1.171812, -0.028623, 0.856306), (1.171812, -0.028626, 0.856306), (1.171812, 0.028624, 0.856306), (1.171812, 0.028624, -0.858167), (1.171812, -0.028626, -0.858167), (-1.171812, -0.028623, -0.858167), (-1.171812, 0.028626, -0.858167), (-1.146812, 0.028626, 0.831306), (-1.146812, -0.028623, 0.831306), (1.146811, -0.028626, 0.831306), (1.146811, 0.028624, 0.831306), (1.146811, 0.028624, -0.833167), (1.146811, -0.028626, -0.833167), (-1.146812, -0.028623, -0.833167), (-1.146812, 0.028626, -0.833167), (0.753102, 0.019742, -0.8399), (0.79304, 0.019742, -0.8399), (0.753102, 0.019742, 0.839443), (0.79304, 0.019742, 0.839443), (0.753102, -0.019744, 0.839443), (0.79304, -0.019744, 0.839443), (0.753102, -0.019744, -0.8399), (0.79304, -0.019744, -0.8399), (-0.806999, 0.019744, -0.8399), (-0.767061, 0.019744, -0.8399), (-0.806999, 0.019744, 0.839443), (-0.767061, 0.019744, 0.839443), (-0.806999, -0.019742, 0.839443), (-0.767061, -0.019742, 0.839443), (-0.806999, -0.019742, -0.8399), (-0.767061, -0.019742, -0.8399), (1.160435, 0.012894, -0.011968), (1.160435, 0.012894, 0.011511), (-1.160435, 0.012897, -0.011968), (-1.160435, 0.012897, 0.011511), (-1.160435, -0.012894, -0.011968), (-1.160435, -0.012894, 0.011511), (1.160435, -0.012897, -0.011968), (1.160435, -0.012897, 0.011511), (1.160435, 0.012894, 0.438032), (1.160435, 0.012894, 0.461511), (-1.160435, 0.012897, 0.438032), (-1.160435, 0.012897, 0.461511), (-1.160435, -0.012894, 0.438032), (-1.160435, -0.012894, 0.461511), (1.160435, -0.012897, 0.438032), (1.160435, -0.012897, 0.461511), (1.160435, 0.012894, -0.461968), (1.160435, 0.012894, -0.438489), (-1.160435, 0.012897, -0.461968), (-1.160435, 0.012897, -0.438489), (-1.160435, -0.012894, -0.461968), (-1.160435, -0.012894, -0.438489), (1.160435, -0.012897, -0.461968), (1.160435, -0.012897, -0.438489), (-0.019969, 0.019743, -0.8399), (0.019969, 0.019743, -0.8399), (-0.019969, 0.019743, 0.839443), (0.019969, 0.019743, 0.839443), (-0.019969, -0.019743, 0.839443), (0.019969, -0.019743, 0.839443), (-0.019969, -0.019743, -0.8399), (0.019969, -0.019743, -0.8399), (0.358757, 0.017971, -0.833167), (0.43439, 0.017971, -0.833167), (0.358757, 0.017971, 0.831306), (0.43439, 0.01797, 0.831306), (0.358757, -0.017971, 0.831306), (0.43439, -0.017971, 0.831306), (0.358757, -0.017971, -0.833167), (0.43439, -0.017971, -0.833167), (-0.444257, 0.017972, -0.833167), (-0.368624, 0.017972, -0.833167), (-0.444257, 0.017971, 0.831306), (-0.368624, 0.017971, 0.831306), (-0.444257, -0.01797, 0.831306), (-0.368624, -0.01797, 0.831306), (-0.444257, -0.01797, -0.833167), (-0.368624, -0.01797, -0.833167), (-1.146812, 0.005013, -0.832416), (1.146811, 0.005011, -0.832416), (-1.146812, 0.005013, 0.832057), (1.146811, 0.005011, 0.832057), (-1.146812, -0.00501, 0.832057), (1.146811, -0.005013, 0.832057), (-1.146812, -0.00501, -0.832416), (1.146811, -0.005013, -0.832416)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-20.437054, 1.732495), (-20.437054, -0.059399), (-19.136684, -0.059399), (-19.136684, 1.732495), (-20.72132, 1.732373), (-20.72132, -0.059278), (-20.713488, -0.059278), (-20.713488, 1.732373), (-22.298122, 1.732494), (-22.298122, -0.059398), (-20.997753, -0.059398), (-20.997753, 1.732494), (-22.582388, 1.732565), (-22.582388, -0.05947), (-22.574556, -0.05947), (-22.574556, 1.732565), (-20.624449, 2.312233), (-20.616617, 2.312233), (-20.616617, 3.612557), (-20.624449, 3.612557), (-20.569782, 2.312179), (-20.56195, 2.312179), (-20.56195, 3.612611), (-20.569782, 3.612611)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_WindowFixed_96X72_1"
        {
            token outputs:surface.connect = </root/_materials/M_WindowFixed_96X72_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }
    }
}

