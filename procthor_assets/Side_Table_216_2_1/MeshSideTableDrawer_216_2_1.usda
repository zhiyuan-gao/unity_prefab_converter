#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "SideTableDrawer_216_2"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "SideTableDrawer_216_2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.520907, -0.283799, 0.067173), (0.486293, 0.166418, 0.226373)]
            int[] faceVertexCounts = [3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [16, 1, 0, 16, 17, 1, 24, 25, 26, 27, 18, 3, 2, 18, 19, 3, 19, 0, 3, 19, 16, 0, 0, 5, 4, 0, 1, 5, 1, 6, 5, 1, 2, 6, 2, 7, 6, 2, 3, 7, 3, 4, 7, 3, 0, 4, 4, 5, 8, 4, 8, 9, 7, 4, 9, 5, 10, 8, 5, 6, 10, 6, 11, 10, 6, 7, 11, 7, 9, 11, 18, 17, 16, 19, 2, 1, 21, 20, 1, 17, 22, 21, 17, 18, 23, 22, 18, 2, 20, 23, 20, 21, 25, 24, 21, 22, 26, 25, 22, 23, 27, 26, 23, 20, 24, 27, 12, 14, 13, 12, 15, 14, 9, 15, 12, 9, 8, 15, 8, 14, 15, 8, 10, 14, 10, 13, 14, 10, 11, 13, 11, 12, 13, 11, 9, 12]
            rel material:binding = </root/_materials/M_SideTableDrawer_216_2_0>
            normal3f[] normals = [(1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0.49166465, 0.8344056, -0.24906434), (0.52186847, 0.8484657, 0.08808592), (0.5241312, 0.84668773, -0.09168626), (0.49166465, 0.8344056, -0.24906434), (0.48628435, 0.8395743, 0.24216253), (0.52186847, 0.8484657, 0.08808592), (-0.039603267, 0.9481833, -0.31524605), (0.011393493, 0.8897435, -0.4563185), (-0.014197886, 0.88803446, -0.45955768), (-0.039603267, 0.9481833, -0.31524605), (0.032179087, 0.9506884, -0.30847377), (0.011393493, 0.8897435, -0.4563185), (-0.49166363, 0.8344063, 0.24906428), (-0.52186894, 0.84846544, -0.08808596), (-0.5241295, 0.8466888, 0.091686144), (-0.49166363, 0.8344063, 0.24906428), (-0.4861561, 0.83964485, -0.2421751), (-0.52186894, 0.84846544, -0.08808596), (0.03960326, 0.94818324, 0.31524622), (-0.011393493, 0.8897435, 0.4563186), (0.014197901, 0.88803434, 0.45955777), (0.03960326, 0.94818324, 0.31524622), (-0.032179087, 0.9506883, 0.30847386), (-0.011393493, 0.8897435, 0.4563186), (-0.01139327, 0.995723, -0.091683865), (-0.01426192, 0.9960146, 0.08804285), (0, 1, 0.0000016202955), (-0.01139327, 0.995723, -0.091683865), (0, 1, 0.0000016202955), (0, 1, 3.0696123e-7), (0.01425689, 0.9960103, -0.08809204), (-0.01139327, 0.995723, -0.091683865), (0, 1, 3.0696123e-7), (-0.01426192, 0.9960146, 0.08804285), (0, 1, -3.0696128e-7), (0, 1, 0.0000016202955), (-0.01426192, 0.9960146, 0.08804285), (0.01139327, 0.995723, 0.091683865), (0, 1, -3.0696128e-7), (0.01139327, 0.995723, 0.091683865), (0, 1, -0.000001620295), (0, 1, -3.0696128e-7), (0.01139327, 0.995723, 0.091683865), (0.01425689, 0.9960103, -0.08809204), (0, 1, -0.000001620295), (0.01425689, 0.9960103, -0.08809204), (0, 1, 3.0696123e-7), (0, 1, -0.000001620295), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0.0000010997692, 0, -1), (-0.0000010997708, 0, -1), (-0.0000010997743, 0, -1), (0.0000010997692, 0, -1), (-0.0000010997708, 0, -1), (-0.0000010997694, 0, -1), (-0.0000010997746, 0, -1), (-0.0000010997743, 0, -1), (-0.0000010997694, 0, -1), (0.0000010997679, 0, -1), (0.0000010997696, 0, -1), (-0.0000010997746, 0, -1), (0.0000010997679, 0, -1), (0.0000010997692, 0, -1), (0.0000010997692, 0, -1), (0.0000010997696, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.520907, -0.265, 0.067173), (-0.520907, -0.265, 0.226373), (0.486293, -0.265, 0.226373), (0.486293, -0.265, 0.067173), (-0.503707, -0.27, 0.084373), (-0.503707, -0.27, 0.209173), (0.469093, -0.27, 0.209173), (0.469093, -0.27, 0.084373), (-0.073007, -0.27, 0.156277), (-0.073007, -0.27, 0.137269), (0.038393, -0.27, 0.156277), (0.038393, -0.27, 0.137269), (-0.073007, -0.283799, 0.137269), (0.038393, -0.283799, 0.137269), (0.038393, -0.283799, 0.156277), (-0.073007, -0.283799, 0.156277), (-0.520907, 0.166418, 0.067173), (-0.520907, 0.166418, 0.226373), (0.486293, 0.166418, 0.226373), (0.486293, 0.166418, 0.067173), (0.478293, -0.257, 0.226373), (-0.512907, -0.257, 0.226373), (-0.512907, 0.158418, 0.226373), (0.478293, 0.158418, 0.226373), (0.478293, -0.257, 0.077509), (-0.512907, -0.257, 0.077509), (-0.512907, 0.158418, 0.077509), (0.478293, 0.158418, 0.077509)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(0.756615, 0.472934), (0.857648, 0.746724), (0.756615, 0.746724), (0.756615, 0.472934), (0.857648, 0.472934), (0.857648, 0.746724), (0.857065, -0.064453), (0.857065, 0.564591), (0.593429, 0.564591), (0.593429, -0.064453), (0.772259, 0.746724), (0.671226, 0.472934), (0.772259, 0.472934), (0.772259, 0.746724), (0.671226, 0.746724), (0.671226, 0.472934), (0.246721, -0.065526), (-0.027069, 0.573673), (-0.027069, -0.065526), (0.246721, -0.065526), (0.246721, 0.573673), (-0.027069, 0.573673), (0.31536, 0.575296), (0.224785, 0.564325), (0.304389, 0.564325), (0.31536, 0.575296), (0.213814, 0.575296), (0.224785, 0.564325), (0.213814, 0.575296), (0.224785, -0.056178), (0.224785, 0.564325), (0.213814, 0.575296), (0.213814, -0.067149), (0.224785, -0.056178), (0.213814, -0.067149), (0.304389, -0.056178), (0.224785, -0.056178), (0.213814, -0.067149), (0.31536, -0.067149), (0.304389, -0.056178), (0.31536, -0.067149), (0.304389, 0.564325), (0.304389, -0.056178), (0.31536, -0.067149), (0.31536, 0.575296), (0.304389, 0.564325), (0.304389, 0.564325), (0.224785, 0.564325), (0.258525, 0.289602), (0.304389, 0.564325), (0.258525, 0.289602), (0.270649, 0.289602), (0.304389, -0.056178), (0.304389, 0.564325), (0.270649, 0.289602), (0.224785, 0.564325), (0.258525, 0.218545), (0.258525, 0.289602), (0.224785, 0.564325), (0.224785, -0.056178), (0.258525, 0.218545), (0.224785, -0.056178), (0.270649, 0.218545), (0.258525, 0.218545), (0.224785, -0.056178), (0.304389, -0.056178), (0.270649, 0.218545), (0.304389, -0.056178), (0.270649, 0.289602), (0.270649, 0.218545), (0.624726, -0.065525), (0.624726, 0.573672), (0.523693, 0.573672), (0.523693, -0.065525), (0.556524, -0.065526), (0.556524, 0.573673), (0.551447, 0.568596), (0.551447, -0.060449), (0.556524, 0.573673), (0.282734, 0.573673), (0.287811, 0.568596), (0.551447, 0.568596), (0.282734, 0.573673), (0.282734, -0.065526), (0.287811, -0.060449), (0.287811, 0.568596), (0.282734, -0.065526), (0.556524, -0.065526), (0.551447, -0.060449), (0.287811, -0.060449), (0.919428, -0.064453), (0.919428, 0.564591), (0.824955, 0.564591), (0.824955, -0.064453), (0.686177, 0.482015), (0.686177, 0.745652), (0.591704, 0.745652), (0.591704, 0.482015), (0.842697, 1.064453), (0.842697, 0.435409), (0.93717, 0.435409), (0.93717, 1.064453), (0.605962, 0.482016), (0.605962, 0.745651), (0.511489, 0.745651), (0.511489, 0.482016), (0.404804, 0.051283), (0.30155, 0.081877), (0.30155, 0.051283), (0.404804, 0.051283), (0.404804, 0.081877), (0.30155, 0.081877), (1.579994, 0.344985), (1.5494, 0.375579), (1.5494, 0.344985), (1.579994, 0.344985), (1.579994, 0.375579), (1.5494, 0.375579), (1.469473, 0.375579), (1.366219, 0.344985), (1.469473, 0.344985), (1.469473, 0.375579), (1.366219, 0.375579), (1.366219, 0.344985), (1.512687, 0.375579), (1.543281, 0.344985), (1.543281, 0.375579), (1.512687, 0.375579), (1.512687, 0.344985), (1.543281, 0.344985), (0.404804, 0.045164), (0.30155, 0.01457), (0.404804, 0.01457), (0.404804, 0.045164), (0.30155, 0.045164), (0.30155, 0.01457)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_SideTableDrawer_216_2_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]
                rel material:binding = </root/_materials/M_SideTableDrawer_216_2_0>
            }

            def GeomSubset "M_SideTableDrawer_216_2_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [32, 33, 34, 35, 36, 37, 38, 39, 40, 41]
                rel material:binding = </root/_materials/M_SideTableDrawer_216_2_1>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_SideTableDrawer_216_2_0"
        {
            token outputs:surface.connect = </root/_materials/M_SideTableDrawer_216_2_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_SideTableDrawer_216_2_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_SideTableDrawer_216_2_0/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/TexturesCom_WoodFine0038_1_seamless_albedo_S.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_216_2_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/TexturesCom_Medieval Metal_normalmap_S.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_216_2_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_SideTableDrawer_216_2_1"
        {
            token outputs:surface.connect = </root/_materials/M_SideTableDrawer_216_2_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.75735295, 0.63906455, 0.14478807)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_SideTableDrawer_216_2_1/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Copper_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_216_2_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

