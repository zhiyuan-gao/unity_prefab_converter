#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.0"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "CountertopL_8X8"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "CountertopL_8X8" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-1.219356, -1.220116, -0.517404), (1.219046, 1.218287, 0.418626)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [5, 13, 17, 4, 8, 15, 14, 9, 1, 5, 4, 0, 0, 4, 17, 16, 2, 6, 7, 3, 0, 8, 9, 1, 3, 10, 11, 2, 15, 8, 0, 16, 7, 13, 12, 3, 3, 12, 14, 10, 15, 11, 10, 14, 2, 11, 15, 16, 17, 6, 2, 16, 13, 7, 6, 17, 13, 19, 18, 12, 12, 18, 20, 14, 20, 28, 9, 14, 5, 22, 19, 13, 22, 24, 23, 21, 25, 24, 22, 5, 1, 26, 25, 5, 9, 27, 26, 1, 28, 29, 27, 9, 21, 23, 29, 28, 19, 22, 21, 18, 18, 21, 28, 20, 24, 25, 26, 23, 23, 26, 27, 29]
            rel material:binding = </root/_materials/M_CountertopL_8X8_0>
            normal3f[] normals = [(0.000002066836, -1, 0.000014102589), (5.113208e-8, -1, 0.000008960053), (8.593e-7, -1, 0.00001516411), (0.0000017186, -1, 0.00003032822), (1, 0, 0), (1, 0, 0), (1, 0.000001262799, -7.910803e-7), (1, 1.05534575e-7, -5.446412e-7), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (1.13935826e-7, 0, 1), (2.8489197e-8, 0, 1), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (2.8489197e-8, 0, 1), (-7.8489126e-7, 0, -1), (-7.8489126e-7, 0, -1), (-3.9249554e-7, 0, -1), (-3.92429e-7, 0, -1), (-3.92429e-7, 0, -1), (-3.9249554e-7, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0.000001262799, -7.910803e-7), (1.13930994e-7, 0, 1), (0, 0, 1), (0, 0, 1), (2.8489197e-8, 0, 1), (1.13935826e-7, 0, 1), (2.2787165e-7, 0, 1), (1.13930994e-7, 0, 1), (2.8489197e-8, 0, 1), (5.113208e-8, -1, 0.000008960053), (0, -1, 0), (0, -1, 0), (8.593e-7, -1, 0.00001516411), (0.9999997, -0.00028241964, 0.0006321374), (0.9999997, -0.00028241964, 0.0006321374), (0.9999997, -0.00028241964, 0.0006321374), (0.9999997, -0.00028241964, 0.0006321374), (0.00028188544, -0.9999997, 0.000630973), (0.00028188544, -0.9999997, 0.000630973), (0.00028188544, -0.9999997, 0.000630973), (0.00028188544, -0.9999997, 0.000630973), (1, 0.0000037883967, -0.000002373241), (1, -0.0000012168854, -5.7675334e-7), (1, 1.05534575e-7, -5.446412e-7), (1, 0.000001262799, -7.910803e-7), (0.000002066836, -1, 0.000014102589), (0.00000400383, -1, -0.0000015937048), (-0.0000015652038, -1, -0.0000034480595), (5.113208e-8, -1, 0.000008960053), (0.9999788, -0.00027680633, -0.006514218), (0.9999788, -0.00027680633, -0.006514218), (0.9999788, -0.00027680633, -0.006514218), (0.9999788, -0.00027680633, -0.006514218), (0.0000087900735, -0.99999994, 0), (0.0000087900735, -0.99999994, 0), (0.00000400383, -1, -0.0000015937048), (0.000002066836, -1, 0.000014102589), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, -0.0000012168854, -5.7675334e-7), (1, -0.0000055185296, 9.671858e-7), (1, -0.0000055185296, 9.671858e-7), (1, 1.05534575e-7, -5.446412e-7), (0.00027572503, -0.9999787, -0.0065137343), (0.00027572503, -0.9999787, -0.0065137343), (0.00027572503, -0.9999787, -0.0065137343), (0.00027572503, -0.9999787, -0.0065137343), (-0.009778407, 0.00004046834, -0.9999522), (-0.009778407, 0.00004046834, -0.9999522), (-0.004909692, 0.0048969053, -0.999976), (-0.004909688, 0.00489691, -0.99997604), (-0.004909688, 0.00489691, -0.99997604), (-0.004909692, 0.0048969053, -0.999976), (-0.00004073843, 0.009753117, -0.99995244), (-0.00004073843, 0.009753117, -0.99995244), (0.00035932465, 0.000030181689, -0.9999999), (0.00035932465, 0.000030181689, -0.9999999), (0.00016447756, -0.00016412899, -0.99999994), (0.00016447807, -0.00016412843, -0.9999999), (0.00016447807, -0.00016412843, -0.9999999), (0.00016447756, -0.00016412899, -0.99999994), (-0.000030368712, -0.0003584388, -0.9999999), (-0.000030368712, -0.0003584388, -0.9999999)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-1.219356, 1.218287, 0.418626), (-1.219356, 1.218287, 0.388626), (-0.609756, 0.608687, 0.418626), (-0.609756, 0.608687, 0.388626), (-1.219356, -1.220114, 0.418626), (-1.219356, -1.220116, 0.388626), (-0.609756, -1.220114, 0.418626), (-0.609756, -1.220114, 0.388626), (1.219045, 1.218287, 0.418626), (1.219045, 1.218287, 0.388626), (1.219045, 0.608687, 0.388626), (1.219045, 0.608687, 0.418626), (-0.62976, 0.628687, 0.388626), (-0.62976, -1.220114, 0.388626), (1.219045, 0.628687, 0.388626), (1.219045, 0.628687, 0.418626), (-0.62976, 0.628687, 0.418626), (-0.62976, -1.220114, 0.418626), (-0.628716, 0.627645, -0.437404), (-0.62976, -1.220114, -0.437404), (1.219045, 0.628687, -0.437404), (-0.648721, 0.64765, -0.437143), (-0.64976, -1.220111, -0.437273), (-0.649763, 0.648692, -0.517143), (-0.64976, -1.220111, -0.517273), (-1.219356, -1.220116, -0.517404), (-1.219356, 1.218287, -0.517404), (1.219046, 1.218287, -0.517404), (1.219043, 0.648687, -0.437274), (1.219043, 0.648687, -0.517274)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-9.565491, 1.116878), (-9.565491, 0.19563), (-9.518617, 0.19563), (-9.518617, 1.116878), (-9.531218, 0.16436), (-9.531218, 1.085643), (-9.578091, 1.085643), (-9.578091, 0.16436), (-10.018128, 2.189204), (-10.018128, -1.620815), (-9.971254, -1.620813), (-9.971254, 2.189204), (-11.608206, 2.189197), (-11.608206, -1.620806), (-10.68696, -1.620806), (-10.68696, 1.267949), (-9.493415, -0.647065), (-9.493415, 2.21052), (-9.540289, 2.21052), (-9.540289, -0.647065), (-9.433916, 2.189251), (-9.433917, -1.620862), (-9.387042, -1.620864), (-9.387043, 2.189251), (-9.552891, 2.210449), (-9.552891, -0.646994), (-9.506015, -0.646994), (-9.506015, 2.210449), (-7.798203, 1.267945), (-7.798201, 2.189197), (-11.608206, 2.189197), (-10.68696, 1.267949), (-7.849374, 2.197172), (-7.849374, 2.228427), (-10.73814, 2.228427), (-10.706889, 2.197172), (-10.706889, 2.197172), (-10.73814, 2.228427), (-10.738138, -0.660343), (-10.706889, -0.660343), (-9.531218, 1.085643), (-9.531218, 1.116892), (-9.578091, 1.116892), (-9.578091, 1.085643), (-10.655705, 1.236696), (-7.798203, 1.236697), (-7.798203, 1.267945), (-10.68696, 1.267949), (-10.68696, -1.620806), (-10.655705, -1.620806), (-10.655705, 1.236696), (-10.68696, 1.267949), (-9.565491, 0.19563), (-9.565491, 0.164375), (-9.518617, 0.164375), (-9.518617, 0.19563), (-20.462372, 0.781883), (-20.462372, 0.136551), (-19.018806, 0.136551), (-19.017992, 0.781883), (-20.462372, 0.596075), (-20.461557, -0.049257), (-19.017992, -0.049259), (-19.017992, 0.596075), (-19.346231, -0.116997), (-19.346333, -0.101376), (-19.991568, 0.343628), (-19.991568, -0.117001), (-20.192633, -0.200525), (-19.5474, 0.244469), (-19.547297, 0.260096), (-20.192633, 0.260096), (-19.937984, 0.952965), (-19.937984, 0.890461), (-18.47797, 0.890564), (-18.478783, 0.953064), (-19.484797, -0.200527), (-19.484898, 0.244469), (-19.5474, 0.244469), (-20.192633, -0.200525), (-20.222427, 0.418118), (-20.222427, -0.289719), (-18.317425, -0.289719), (-18.317425, 0.418118), (-18.31743, -0.084883), (-18.317427, 0.622955), (-20.222425, 0.622955), (-20.222425, -0.084883), (-19.346333, -0.101376), (-19.283833, -0.101376), (-19.28373, 0.343628), (-19.991568, 0.343628), (-19.93718, 0.978401), (-19.937992, 0.915901), (-18.477964, 0.915798), (-18.477964, 0.978296), (-20.456728, 1.48843), (-20.472355, 1.48843), (-20.471544, 0.029245), (-20.455914, 0.044874), (-20.455914, 0.044874), (-20.471544, 0.029245), (-19.012356, 0.028435), (-19.012356, 0.044058), (-20.222424, 0.132826), (-20.222427, -0.31217), (-18.317425, -0.31217), (-18.76242, 0.132824), (-18.76242, 0.132824), (-18.317425, -0.31217), (-18.317425, 1.592831), (-18.762424, 1.592829)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_CountertopL_8X8_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                rel material:binding = </root/_materials/M_CountertopL_8X8_0>
            }

            def GeomSubset "M_CountertopL_8X8_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27]
                rel material:binding = </root/_materials/M_CountertopL_8X8_1>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_CountertopL_8X8_0"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopL_8X8_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopL_8X8_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/marbleBase2.jpg@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopL_8X8_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_CountertopL_8X8_1"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopL_8X8_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopL_8X8_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_CountertopL_8X8_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/DarkWood2.tif@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopL_8X8_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopL_8X8_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

