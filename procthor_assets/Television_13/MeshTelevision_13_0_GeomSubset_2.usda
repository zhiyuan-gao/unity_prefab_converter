#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshTelevision_13_0_GeomSubset_2"
    {
        def Mesh "MeshTelevision_13_0_GeomSubset_2"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4]
            int[] faceVertexIndices = [8, 9, 11, 10, 90, 81, 82, 89, 80, 90, 89, 83]
            rel material:binding = </root/_materials/M_Television_13_2>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, -5.541233e-14), (0, -1, -2.4726832e-8), (0, -1, -2.4726832e-8), (0, -1, 1.9224685e-14), (0, -1, 2.4726797e-8), (0, -1, -5.541233e-14), (0, -1, 1.9224685e-14), (0, -1, 2.4726797e-8)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.000696, -0.078771, 0.088426), (0.000695, -0.078771, 0.088426), (-0.000696, -0.07738, 0.088426), (0.000695, -0.07738, 0.088426), (-0.000696, -0.078771, 0.088426), (0.000695, -0.078771, 0.088426), (-0.000696, -0.07738, 0.088426), (0.000695, -0.07738, 0.088426), (-0.000696, -0.078771, 0.088426), (0.000695, -0.078771, 0.088426), (-0.000696, -0.07738, 0.088426), (0.000695, -0.07738, 0.088426), (-0.000696, -0.078771, 0.088426), (0.000695, -0.078771, 0.088426), (-0.000696, -0.07738, 0.088426), (0.000695, -0.07738, 0.088426), (-0.000696, -0.078771, 0.088426), (0.000695, -0.078771, 0.088426), (-0.000696, -0.07738, 0.088426), (0.000695, -0.07738, 0.088426), (0.525377, -0.118254, -0.145763), (0.525377, -0.159178, -0.145763), (0.525377, -0.118254, 0.372501), (0.525377, -0.159178, 0.372501), (-0.525376, -0.118254, -0.145763), (-0.525376, -0.158525, -0.145763), (-0.525376, -0.158525, 0.372501), (-0.525376, -0.118254, 0.372501), (0.486858, -0.110256, 0.372501), (0.486858, -0.110256, -0.145763), (0.486858, -0.167175, -0.145763), (0.486858, -0.167175, 0.372501), (0.448339, -0.105845, 0.372501), (0.448339, -0.105845, -0.145763), (0.448339, -0.171587, -0.145763), (0.448339, -0.171587, 0.372501), (-0.486858, -0.110256, 0.372501), (-0.486858, -0.166523, 0.372501), (-0.486858, -0.166523, -0.145763), (-0.486858, -0.110256, -0.145763), (-0.448339, -0.105845, 0.372501), (-0.448339, -0.170934, 0.372501), (-0.448339, -0.170934, -0.145763), (-0.448339, -0.105845, -0.145763), (-0.406737, -0.17228, -0.145763), (-0.412902, -0.172172, -0.145763), (-0.406738, -0.17228, 0.372501), (-0.412901, -0.172172, 0.372501), (0.406738, -0.17228, -0.145763), (0.412901, -0.172172, -0.145763), (0.406738, -0.17228, 0.372501), (0.412902, -0.172172, 0.372501), (-0.406737, -0.105152, 0.372501), (-0.412902, -0.104608, 0.372501), (0.406738, -0.105152, 0.372501), (0.412901, -0.104608, 0.372501), (-0.406738, -0.1045, -0.145763), (-0.412901, -0.104608, -0.145763), (0.406738, -0.1045, -0.145763), (0.412902, -0.104608, -0.145763), (-0.406663, -0.168028, -0.141511), (-0.412827, -0.16792, -0.141511), (-0.412827, -0.108857, -0.141511), (-0.406663, -0.10875, -0.141511), (-0.406663, -0.168028, 0.368249), (-0.412827, -0.16792, 0.368249), (-0.406663, -0.10875, 0.368249), (-0.412827, -0.108857, 0.368249), (0.406664, -0.168028, -0.141511), (0.412827, -0.16792, -0.141511), (0.412828, -0.16792, 0.368249), (0.406664, -0.168028, 0.368249), (0.406664, -0.10875, -0.141511), (0.412828, -0.108857, -0.141511), (0.412827, -0.108857, 0.368249), (0.406664, -0.10875, 0.368249), (-0.378025, -0.17228, -0.11705), (0.378026, -0.17228, -0.11705), (0.378026, -0.17228, 0.343788), (-0.378025, -0.17228, 0.343788), (-0.358013, -0.150873, -0.097039), (0.358014, -0.150873, -0.097039), (0.358014, -0.150873, 0.323777), (-0.358014, -0.150873, 0.323777), (0.293635, -0.078075, -0.067982), (0.293636, -0.078075, 0.272226), (-0.293635, -0.078075, -0.067982), (-0.293635, -0.078075, 0.272226), (0, -0.17228, 0.343788), (0, -0.150873, 0.323777), (0.000001, -0.150873, -0.097039), (0.000001, -0.17228, -0.11705), (0, -0.17228, -0.145763), (0, -0.1045, -0.145763), (0, -0.078075, -0.067982), (0.000001, -0.078075, 0.272226), (0, -0.105152, 0.372501), (0, -0.17228, 0.372501)]
            bool[] primvars:sharp_face = [0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-19.267904, -17.596893), (-19.266922, -17.596893), (-19.266922, -17.595913), (-19.267904, -17.595913), (0.5, 0.094818), (0.999999, 0.094818), (0.999999, 0.682526), (0.499999, 0.682526), (0.000001, 0.094817), (0.5, 0.094818), (0.499999, 0.682526), (-0, 0.682525)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_Television_13_2"
        {
            token outputs:surface.connect = </root/_materials/M_Television_13_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0, 0, 0)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }
    }
}

