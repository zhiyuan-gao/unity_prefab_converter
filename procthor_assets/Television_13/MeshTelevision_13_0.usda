#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "Television_13"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Television_13" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.525377, -0.17228, -0.145763), (0.525376, -0.07738, 0.372501)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 97, 50, 54, 96, 93, 58, 48, 92, 85, 84, 94, 95, 56, 44, 60, 63, 44, 46, 64, 60, 46, 52, 66, 64, 52, 56, 63, 66, 50, 48, 68, 71, 48, 58, 72, 68, 54, 50, 71, 75, 58, 54, 75, 72, 92, 48, 77, 91, 48, 50, 78, 77, 50, 97, 88, 78, 46, 44, 76, 79, 91, 77, 81, 90, 77, 78, 82, 81, 78, 88, 89, 82, 79, 76, 80, 83, 54, 58, 84, 85, 58, 93, 94, 84, 56, 52, 87, 86, 96, 54, 85, 95, 88, 79, 83, 89, 76, 91, 90, 80, 44, 92, 91, 76, 56, 93, 92, 44, 94, 93, 56, 86, 95, 94, 86, 87, 52, 96, 95, 87, 46, 97, 96, 52, 88, 97, 46, 79, 4, 5, 7, 6, 21, 20, 22, 23, 24, 25, 26, 27, 29, 28, 22, 20, 30, 29, 20, 21, 31, 30, 21, 23, 28, 31, 23, 22, 33, 32, 28, 29, 34, 33, 29, 30, 35, 34, 30, 31, 32, 35, 31, 28, 37, 36, 27, 26, 38, 37, 26, 25, 39, 38, 25, 24, 36, 39, 24, 27, 41, 40, 36, 37, 42, 41, 37, 38, 43, 42, 38, 39, 40, 43, 39, 36, 60, 61, 62, 63, 61, 60, 64, 65, 65, 64, 66, 67, 68, 69, 70, 71, 69, 68, 72, 73, 71, 70, 74, 75, 67, 66, 63, 62, 75, 74, 73, 72, 49, 59, 33, 34, 59, 55, 32, 33, 55, 51, 35, 32, 57, 45, 42, 43, 47, 53, 40, 41, 53, 57, 43, 40, 51, 49, 34, 35, 47, 41, 42, 45, 45, 57, 62, 61, 47, 45, 61, 65, 53, 47, 65, 67, 57, 53, 67, 62, 49, 51, 70, 69, 59, 49, 69, 73, 51, 55, 74, 70, 55, 59, 73, 74, 8, 9, 11, 10, 90, 81, 82, 89, 80, 90, 89, 83, 12, 13, 15, 14, 16, 17, 19, 18]
            rel material:binding = </root/_materials/M_Television_13_0>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, 2.0208264e-8), (0, -1, 2.0208264e-8), (0, -1, 1.0104112e-8), (0, -1, 1.0104151e-8), (-0.9996789, 0.023686081, -0.00900504), (-0.9998749, -0.0018899725, -0.015710028), (-0.99987483, -0.0018902263, -0.015709769), (-0.9998773, 0.002180735, -0.015517286), (-0.9998749, -0.0018899725, -0.015710028), (-0.9998749, -0.00189383, 0.015706537), (-0.9998749, -0.001892535, 0.015705844), (-0.99987483, -0.0018902263, -0.015709769), (-0.9998749, -0.00189383, 0.015706537), (-0.991912, 0.12651879, 0.010183319), (-0.99988383, 0.0026968615, 0.015003018), (-0.9998749, -0.001892535, 0.015705844), (-0.991912, 0.12651879, 0.010183319), (-0.9996789, 0.023686081, -0.00900504), (-0.9998773, 0.002180735, -0.015517286), (-0.99988383, 0.0026968615, 0.015003018), (0.9998783, -0.0018102648, 0.015488715), (0.9998783, -0.0018112245, -0.015489707), (0.99987835, -0.001810241, -0.015488719), (0.99987835, -0.0018112129, 0.015489739), (0.9998783, -0.0018112245, -0.015489707), (0.999684, 0.023494855, -0.008944482), (0.9998808, 0.0021010856, -0.0152994795), (0.99987835, -0.001810241, -0.015488719), (0.9919395, 0.12631145, 0.010080429), (0.9998783, -0.0018102648, 0.015488715), (0.99987835, -0.0018112129, 0.015489739), (0.9998873, 0.0026177592, 0.014783125), (0.999684, 0.023494855, -0.008944482), (0.9919395, 0.12631145, 0.010080429), (0.9998873, 0.0026177592, 0.014783125), (0.9998808, 0.0021010856, -0.0152994795), (0, 1, 3.3066078e-7), (0, 1, 0), (0, 1, 0), (0, 1, 3.3064617e-7), (0, 1, 0), (0, 1, -3.3066033e-7), (0, 1, -3.306507e-7), (0, 1, 0), (0, 1, -3.3066033e-7), (0, 1, -3.306531e-7), (0, 1, -3.306531e-7), (0, 1, -3.306507e-7), (0, 1, 0), (0, 1, 3.3066033e-7), (0, 1, 3.3065106e-7), (0, 1, 0), (0, 0.682886, -0.730525), (0, 0.68288606, -0.7305248), (0, 0.68288606, -0.7305248), (0, 0.682886, -0.730525), (-0.7305079, 0.6829042, 0), (-0.7305079, 0.6829042, 0), (-0.7305079, 0.6829042, 0), (-0.7305079, 0.6829042, 0), (0, 0.682886, 0.7305249), (0, 0.6828861, 0.7305249), (0, 0.6828861, 0.7305249), (0, 0.682886, 0.7305249), (0.73051655, 0.68289495, -8.058874e-7), (0.73051655, 0.68289495, -8.058874e-7), (0.73051655, 0.68289495, -8.058874e-7), (0.73051655, 0.68289495, -8.058874e-7), (0.9919395, 0.12631145, 0.010080429), (0.999684, 0.023494855, -0.008944482), (0.2300999, -0.9731667, -0.0007388492), (0.2300999, -0.9731667, -0.0007388492), (0, -0.94684887, 0.3216786), (0, -0.9468489, 0.32167864), (0, -0.9468489, 0.32167864), (0, -0.94684887, 0.3216786), (-0.9996789, 0.023686081, -0.00900504), (-0.991912, 0.12651879, 0.010183319), (-0.23009984, -0.9731667, -0.0007393821), (-0.23009984, -0.9731667, -0.0007393821), (0, -0.9654224, -0.26069057), (0, -0.96542245, -0.2606906), (0, -0.96542245, -0.2606906), (0, -0.9654224, -0.26069057), (0, 0.6828861, 0.7305249), (0, 0.68288624, 0.7305248), (0, 0.68288624, 0.7305248), (0, 0.6828861, 0.7305249), (0, 0.68288577, -0.7305252), (0, 0.682886, -0.730525), (0, 0.682886, -0.730525), (0, 0.68288577, -0.7305252), (0, 1, 3.3066033e-7), (0, 1, 3.3066078e-7), (0, 1, 3.3064617e-7), (0, 1, 3.3065106e-7), (0, 0, 0.99999994), (0, 0, 1), (0, 0, 1), (0, 0, 0.99999994), (0, -0.9468489, 0.32167864), (0, -0.9468489, 0.32167864), (0, -0.94684887, 0.32167864), (0, -0.94684887, 0.32167864), (0, -1, 1.0104151e-8), (0, -1, 1.0104112e-8), (0, -1, 0), (0, -1, 0), (0, -0.9654224, -0.26069057), (0, -0.9654224, -0.26069057), (0, -0.9654224, -0.26069057), (0, -0.9654224, -0.26069057), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, -3.306531e-7), (0, 1, -3.306531e-7), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0.770037, 0.63799924, 0), (0.77002335, -0.63801587, 0.0000034054888), (0.77002335, -0.63801587, 0), (0.770037, 0.63799924, 3.3896725e-7), (-0.7723437, -0.63520485, 0), (-0.77234364, 0.6352049, -4.583123e-10), (-0.77234364, 0.6352049, 0), (-0.7723437, -0.63520485, -0.0000020093892), (0.1586997, -0.9873269, 0), (0.1586997, -0.9873269, 0), (0.77002335, -0.63801587, 0), (0.77002335, -0.63801587, 0.0000034054888), (1.10649395e-7, 0, 1), (1.10649225e-7, 0, 1), (2.4711304e-7, 0, 1), (2.4711304e-7, 0, 1), (0.15870006, 0.98732686, 0), (0.15870006, 0.98732686, 0), (0.770037, 0.63799924, 0), (0.770037, 0.63799924, 3.3896725e-7), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0.07264728, -0.9973576, -1.2832812e-8), (0.07264728, -0.9973576, -1.26786e-8), (0.1586997, -0.9873269, 0), (0.1586997, -0.9873269, 0), (-2.0559698e-7, 0, 1), (-2.0672726e-7, 0, 1), (1.10649225e-7, 0, 1), (1.10649395e-7, 0, 1), (0.06312051, 0.9980059, 1.2876621e-8), (0.06312051, 0.9980059, 1.2689314e-8), (0.15870006, 0.98732686, 0), (0.15870006, 0.98732686, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.15809868, 0.98742324, 3.5682532e-7), (-0.15809868, 0.98742324, 0), (-0.77234364, 0.6352049, 0), (-0.77234364, 0.6352049, -4.583123e-10), (-1.1214757e-7, 0, 1), (-1.1214756e-7, 0, 1), (-2.5045978e-7, 0, 1), (-2.5045978e-7, 0, 1), (-0.1580987, -0.98742324, -3.568253e-7), (-0.1580987, -0.98742324, 0), (-0.7723437, -0.63520485, 0), (-0.7723437, -0.63520485, -0.0000020093892), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.07266129, 0.99735665, -2.5513124e-8), (-0.07266129, 0.99735665, -2.5357162e-8), (-0.15809868, 0.98742324, 0), (-0.15809868, 0.98742324, 3.5682532e-7), (2.0774483e-7, 0, 1), (2.0774662e-7, 0, 1), (-1.1214756e-7, 0, 1), (-1.1214757e-7, 0, 1), (-0.07264728, -0.9973576, 1.2832812e-8), (-0.07264728, -0.9973576, 1.26786e-8), (-0.1580987, -0.98742324, 0), (-0.1580987, -0.98742324, -3.568253e-7), (-2.1694649e-7, 0, 0.99999994), (-2.1694649e-7, 0, 0.99999994), (-2.1694649e-7, 0, 0.99999994), (-2.1694649e-7, 0, 0.99999994), (-0.017519057, 0.9998466, 0), (-0.017519057, 0.9998466, 0), (-0.017519057, 0.9998466, 0), (-0.017519057, 0.9998466, 0), (0.0000035509402, 0, -0.99999994), (0.0000035509402, 0, -0.99999994), (0.0000035509402, 0, -0.99999994), (0.0000035509402, 0, -0.99999994), (0.017520469, 0.9998465, 0), (0.017520469, 0.9998465, 0), (0.017520469, 0.9998465, 0), (0.017520469, 0.9998465, 0), (2.169643e-7, 0, 1), (2.169643e-7, 0, 1), (2.169643e-7, 0, 1), (2.169643e-7, 0, 1), (-0.0000035512326, 0, -1), (-0.0000035512326, 0, -1), (-0.0000035512326, 0, -1), (-0.0000035512326, 0, -1), (-0.017355952, -0.9998494, 0), (-0.017355952, -0.9998494, 0), (-0.017355952, -0.9998494, 0), (-0.017355952, -0.9998494, 0), (0.017357351, -0.9998494, -1.8523501e-8), (0.017357351, -0.9998494, -1.8523501e-8), (0.017357351, -0.9998494, -1.8523501e-8), (0.017357351, -0.9998494, -1.8523501e-8), (-3.9429167e-7, 0, 1), (-3.9429167e-7, 0, 1), (-2.0672726e-7, 0, 1), (-2.0559698e-7, 0, 1), (0.03488524, -0.9993913, -2.5339146e-8), (0.03488524, -0.9993913, -2.5339146e-8), (0.07264728, -0.9973576, -1.26786e-8), (0.07264728, -0.9973576, -1.2832812e-8), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (3.962326e-7, 0, 1), (3.962326e-7, 0, 1), (2.0774662e-7, 0, 1), (2.0774483e-7, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.03488524, -0.9993913, 2.5339146e-8), (-0.03488524, -0.9993913, 2.5339146e-8), (-0.07264728, -0.9973576, 1.26786e-8), (-0.07264728, -0.9973576, 1.2832812e-8), (0.016505415, 0.9998638, 2.5351126e-8), (0.016505415, 0.9998638, 2.5351126e-8), (0.06312051, 0.9980059, 1.2689314e-8), (0.06312051, 0.9980059, 1.2876621e-8), (-0.03491315, 0.99939036, -5.0678242e-8), (-0.07266129, 0.99735665, -2.5357162e-8), (-0.07266129, 0.99735665, -2.5513124e-8), (-0.03491315, 0.99939036, -5.0678242e-8), (0.99987787, 0.0019961423, 0.015503157), (0.9998782, -0.0019105179, 0.0154895), (0.9998778, -0.0019988632, 0.015500863), (0.9998778, 0.0019963938, 0.015502905), (0.99987817, 0.0019089496, -0.015489529), (0.99987787, 0.0019961423, 0.015503157), (0.9998778, 0.0019963938, 0.015502905), (0.9998782, 0.0019096462, -0.015490787), (0.9998778, -0.001997746, -0.015503196), (0.99987817, 0.0019089496, -0.015489529), (0.9998782, 0.0019096462, -0.015490787), (0.9998779, -0.0020022476, -0.01549675), (0.9998782, -0.0019105179, 0.0154895), (0.9998778, -0.001997746, -0.015503196), (0.9998779, -0.0020022476, -0.01549675), (0.9998778, -0.0019988632, 0.015500863), (-0.99987954, 0.002010826, 0.0153882615), (-0.99987966, 0.002018732, -0.015382511), (-0.99987966, 0.002017703, -0.015381607), (-0.9998796, 0.0020118128, 0.015389198), (-0.99987966, -0.0020156195, 0.01538449), (-0.99987954, 0.002010826, 0.0153882615), (-0.9998796, 0.0020118128, 0.015389198), (-0.9998797, -0.0020198408, 0.015378337), (-0.99987966, 0.002018732, -0.015382511), (-0.9998795, -0.002008705, -0.015391221), (-0.9998796, -0.0020139376, -0.015385998), (-0.99987966, 0.002017703, -0.015381607), (-0.9998795, -0.002008705, -0.015391221), (-0.99987966, -0.0020156195, 0.01538449), (-0.9998797, -0.0020198408, 0.015378337), (-0.9998796, -0.0020139376, -0.015385998), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 5.541233e-14), (0, 1, 2.4726832e-8), (0, 1, 2.4726832e-8), (0, 1, -1.9224685e-14), (0, 1, -2.4726797e-8), (0, 1, 5.541233e-14), (0, 1, -1.9224685e-14), (0, 1, -2.4726797e-8), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.000696, -0.078771, 0.088426), (-0.000695, -0.078771, 0.088426), (0.000696, -0.07738, 0.088426), (-0.000695, -0.07738, 0.088426), (0.000696, -0.078771, 0.088426), (-0.000695, -0.078771, 0.088426), (0.000696, -0.07738, 0.088426), (-0.000695, -0.07738, 0.088426), (0.000696, -0.078771, 0.088426), (-0.000695, -0.078771, 0.088426), (0.000696, -0.07738, 0.088426), (-0.000695, -0.07738, 0.088426), (0.000696, -0.078771, 0.088426), (-0.000695, -0.078771, 0.088426), (0.000696, -0.07738, 0.088426), (-0.000695, -0.07738, 0.088426), (0.000696, -0.078771, 0.088426), (-0.000695, -0.078771, 0.088426), (0.000696, -0.07738, 0.088426), (-0.000695, -0.07738, 0.088426), (-0.525377, -0.118254, -0.145763), (-0.525377, -0.159178, -0.145763), (-0.525377, -0.118254, 0.372501), (-0.525377, -0.159178, 0.372501), (0.525376, -0.118254, -0.145763), (0.525376, -0.158525, -0.145763), (0.525376, -0.158525, 0.372501), (0.525376, -0.118254, 0.372501), (-0.486858, -0.110256, 0.372501), (-0.486858, -0.110256, -0.145763), (-0.486858, -0.167175, -0.145763), (-0.486858, -0.167175, 0.372501), (-0.448339, -0.105845, 0.372501), (-0.448339, -0.105845, -0.145763), (-0.448339, -0.171587, -0.145763), (-0.448339, -0.171587, 0.372501), (0.486858, -0.110256, 0.372501), (0.486858, -0.166523, 0.372501), (0.486858, -0.166523, -0.145763), (0.486858, -0.110256, -0.145763), (0.448339, -0.105845, 0.372501), (0.448339, -0.170934, 0.372501), (0.448339, -0.170934, -0.145763), (0.448339, -0.105845, -0.145763), (0.406737, -0.17228, -0.145763), (0.412902, -0.172172, -0.145763), (0.406738, -0.17228, 0.372501), (0.412901, -0.172172, 0.372501), (-0.406738, -0.17228, -0.145763), (-0.412901, -0.172172, -0.145763), (-0.406738, -0.17228, 0.372501), (-0.412902, -0.172172, 0.372501), (0.406737, -0.105152, 0.372501), (0.412902, -0.104608, 0.372501), (-0.406738, -0.105152, 0.372501), (-0.412901, -0.104608, 0.372501), (0.406738, -0.1045, -0.145763), (0.412901, -0.104608, -0.145763), (-0.406738, -0.1045, -0.145763), (-0.412902, -0.104608, -0.145763), (0.406663, -0.168028, -0.141511), (0.412827, -0.16792, -0.141511), (0.412827, -0.108857, -0.141511), (0.406663, -0.10875, -0.141511), (0.406663, -0.168028, 0.368249), (0.412827, -0.16792, 0.368249), (0.406663, -0.10875, 0.368249), (0.412827, -0.108857, 0.368249), (-0.406664, -0.168028, -0.141511), (-0.412827, -0.16792, -0.141511), (-0.412828, -0.16792, 0.368249), (-0.406664, -0.168028, 0.368249), (-0.406664, -0.10875, -0.141511), (-0.412828, -0.108857, -0.141511), (-0.412827, -0.108857, 0.368249), (-0.406664, -0.10875, 0.368249), (0.378025, -0.17228, -0.11705), (-0.378026, -0.17228, -0.11705), (-0.378026, -0.17228, 0.343788), (0.378025, -0.17228, 0.343788), (0.358013, -0.150873, -0.097039), (-0.358014, -0.150873, -0.097039), (-0.358014, -0.150873, 0.323777), (0.358014, -0.150873, 0.323777), (-0.293635, -0.078075, -0.067982), (-0.293636, -0.078075, 0.272226), (0.293635, -0.078075, -0.067982), (0.293635, -0.078075, 0.272226), (-0, -0.17228, 0.343788), (-0, -0.150873, 0.323777), (-0.000001, -0.150873, -0.097039), (-0.000001, -0.17228, -0.11705), (-0, -0.17228, -0.145763), (-0, -0.1045, -0.145763), (-0, -0.078075, -0.067982), (-0.000001, -0.078075, 0.272226), (-0, -0.105152, 0.372501), (-0, -0.17228, 0.372501)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-43.666134, -17.768993), (-43.665054, -17.768993), (-43.665054, -17.767914), (-43.666134, -17.767914), (-44.140533, -0.061677), (-43.34614, -0.061675), (-43.346138, 0.069431), (-44.140533, 0.069427), (-44.14054, -0.003397), (-43.346134, -0.003396), (-43.346134, 0.128986), (-44.140533, 0.128985), (-43.561443, -0.01531), (-43.561447, 0.655631), (-44.14054, 0.655631), (-44.140533, -0.015309), (-43.51986, 0.875575), (-43.51986, 1.007969), (-43.528168, 0.999654), (-43.528164, 0.88388), (-43.51986, 1.007969), (-44.532154, 1.007968), (-44.523846, 0.999654), (-43.528168, 0.999654), (-44.532154, 1.007968), (-44.532154, 0.876844), (-44.52385, 0.88388), (-44.523846, 0.999654), (-44.532154, 0.876844), (-43.51986, 0.875575), (-43.528164, 0.88388), (-44.52385, 0.88388), (-44.938152, 0.88137), (-43.926105, 0.881368), (-43.934406, 0.889677), (-44.929855, 0.889676), (-43.926105, 0.881368), (-43.926105, 1.013736), (-43.934406, 1.005427), (-43.934406, 0.889677), (-44.938152, 1.012457), (-44.938152, 0.88137), (-44.929855, 0.889676), (-44.929848, 1.005427), (-43.926105, 1.013736), (-44.938152, 1.012457), (-44.929848, 1.005427), (-43.934406, 1.005427), (-44.14054, 0.15705), (-43.27691, 0.157046), (-43.337875, 0.218013), (-44.140537, 0.218007), (-43.27691, 0.157046), (-43.27691, 1.257471), (-43.337875, 1.19651), (-43.337875, 0.218013), (-43.27691, 1.257471), (-44.14054, 1.257475), (-44.14054, 1.196513), (-43.337875, 1.19651), (-45.00416, 1.257472), (-45.004166, 0.157049), (-44.9432, 0.218011), (-44.943195, 1.19651), (-44.140537, 0.218007), (-43.337875, 0.218013), (-43.380363, 0.260505), (-44.140533, 0.260505), (-43.337875, 0.218013), (-43.337875, 1.19651), (-43.38037, 1.154024), (-43.380363, 0.260505), (-43.337875, 1.19651), (-44.14054, 1.196513), (-44.14054, 1.154024), (-43.38037, 1.154024), (-44.943195, 1.19651), (-44.9432, 0.218011), (-44.900703, 0.260505), (-44.90071, 1.154024), (-43.338394, -0.21306), (-43.338394, 0.809027), (-43.561447, 0.655631), (-43.561443, -0.01531), (-43.338394, 0.809027), (-44.14054, 0.809027), (-44.14054, 0.655631), (-43.561447, 0.655631), (-44.942688, 0.809027), (-44.942688, -0.21306), (-44.719627, -0.015309), (-44.71963, 0.655629), (-44.14054, -0.21306), (-43.338394, -0.21306), (-43.561443, -0.01531), (-44.140533, -0.015309), (-44.14054, 1.196513), (-44.943195, 1.19651), (-44.90071, 1.154024), (-44.14054, 1.154024), (-44.9432, 0.218011), (-44.140537, 0.218007), (-44.140533, 0.260505), (-44.900703, 0.260505), (-45.004166, 0.157049), (-44.14054, 0.15705), (-44.140537, 0.218007), (-44.9432, 0.218011), (-44.93494, -0.003397), (-44.14054, -0.003397), (-44.140533, 0.128985), (-44.93494, 0.128985), (-44.14054, 0.655631), (-44.14054, 0.809027), (-44.942688, 0.809027), (-44.71963, 0.655629), (-44.140533, -0.015309), (-44.14054, 0.655631), (-44.71963, 0.655629), (-44.719627, -0.015309), (-44.942688, -0.21306), (-44.14054, -0.21306), (-44.140533, -0.015309), (-44.719627, -0.015309), (-44.934933, -0.061678), (-44.140533, -0.061677), (-44.140533, 0.069427), (-44.934933, 0.069426), (-44.14054, 1.196513), (-44.14054, 1.257475), (-45.00416, 1.257472), (-44.943195, 1.19651), (-30.972933, -17.529812), (-30.97121, -17.529812), (-30.97121, -17.52809), (-30.972933, -17.52809), (-31.567825, -0.183867), (-31.487896, -0.183867), (-31.487896, 0.828366), (-31.567825, 0.828366), (-31.508926, -0.183892), (-31.430275, -0.183892), (-31.430275, 0.828391), (-31.508926, 0.828391), (-31.333626, 0.83083), (-31.333626, -0.186331), (-31.258034, -0.186331), (-31.258034, 0.83083), (-30.722244, 0.681907), (-30.833418, 0.681907), (-30.817793, 0.606674), (-30.737862, 0.606674), (-31.187458, 0.830781), (-31.187458, -0.186282), (-31.111872, -0.186282), (-31.111872, 0.830781), (-30.81327, 0.681911), (-30.924433, 0.681911), (-30.908817, 0.606684), (-30.828894, 0.606684), (-31.409225, 0.83083), (-31.409225, -0.186331), (-31.333626, -0.186331), (-31.333626, 0.83083), (-30.713625, 0.757142), (-30.84203, 0.757142), (-30.833418, 0.681907), (-30.722244, 0.681907), (-31.26305, 0.830781), (-31.26305, -0.186282), (-31.187458, -0.186282), (-31.187458, 0.830781), (-30.804655, 0.757138), (-30.933048, 0.757138), (-30.924433, 0.681911), (-30.81327, 0.681911), (-30.653917, 0.740599), (-30.544024, 0.740599), (-30.559647, 0.815829), (-30.638298, 0.815829), (-31.110836, -0.18632), (-31.110836, 0.830819), (-31.186436, 0.830819), (-31.186436, -0.18632), (-30.743666, 0.751123), (-30.633772, 0.751123), (-30.649393, 0.826353), (-30.728046, 0.826353), (-30.964664, -0.186328), (-30.964664, 0.830827), (-31.040264, 0.830827), (-31.040264, -0.186328), (-30.662533, 0.66537), (-30.535408, 0.66537), (-30.544024, 0.740599), (-30.653917, 0.740599), (-31.03524, -0.18632), (-31.03524, 0.830819), (-31.110836, 0.830819), (-31.110836, -0.18632), (-30.752281, 0.675894), (-30.625158, 0.675894), (-30.633772, 0.751123), (-30.743666, 0.751123), (-30.889069, -0.186328), (-30.889069, 0.830827), (-30.964664, 0.830827), (-30.964664, -0.186328), (-30.913948, 0.741521), (-30.925993, 0.741311), (-30.925993, 0.625889), (-30.913948, 0.625679), (-30.672316, -0.180842), (-30.660276, -0.180842), (-30.660276, 0.814817), (-30.672316, 0.814817), (-30.93975, 0.625938), (-30.927715, 0.625728), (-30.927715, 0.741471), (-30.93975, 0.741262), (-30.656725, -0.180792), (-30.644688, -0.180792), (-30.644686, 0.814768), (-30.656725, 0.814768), (-30.941477, 0.741311), (-30.95352, 0.741521), (-30.95352, 0.625679), (-30.941475, 0.625889), (-30.967278, 0.625728), (-30.955242, 0.625938), (-30.955246, 0.741262), (-30.967278, 0.741471), (-30.641134, -0.180842), (-30.629095, -0.180842), (-30.629095, 0.814817), (-30.641134, 0.814817), (-30.625542, -0.180792), (-30.613504, -0.180792), (-30.613503, 0.814768), (-30.625542, 0.814768), (-30.712484, 0.826358), (-30.84445, 0.826357), (-30.84203, 0.757142), (-30.713625, 0.757142), (-31.478775, 0.83083), (-31.478775, -0.186331), (-31.409225, -0.186331), (-31.409225, 0.83083), (-30.802238, 0.826348), (-30.934193, 0.826347), (-30.933048, 0.757138), (-30.804655, 0.757138), (-30.754698, 0.606681), (-30.62274, 0.606682), (-30.625158, 0.675894), (-30.752281, 0.675894), (-30.66495, 0.596157), (-30.532991, 0.596159), (-30.535408, 0.66537), (-30.662533, 0.66537), (-30.819515, -0.186328), (-30.819515, 0.830827), (-30.889069, 0.830827), (-30.889069, -0.186328), (-31.332592, 0.830781), (-31.332598, -0.186282), (-31.26305, -0.186282), (-31.26305, 0.830781), (-30.965689, 0.830819), (-31.03524, 0.830819), (-31.03524, -0.18632), (-30.965689, -0.18632), (-30.877493, -0.183903), (-30.745522, -0.183903), (-30.75382, -0.175598), (-30.869186, -0.175598), (-30.877493, 0.828402), (-30.877493, -0.183903), (-30.869186, -0.175598), (-30.869186, 0.820097), (-30.745522, 0.828402), (-30.877493, 0.828402), (-30.869186, 0.820097), (-30.75382, 0.820097), (-30.745522, -0.183903), (-30.745522, 0.828402), (-30.75382, 0.820097), (-30.75382, -0.175598), (-30.65392, -0.183925), (-30.65392, 0.828424), (-30.662222, 0.820118), (-30.662222, -0.175619), (-30.785896, -0.183925), (-30.65392, -0.183925), (-30.662222, -0.175619), (-30.777592, -0.175619), (-30.65392, 0.828424), (-30.785896, 0.828424), (-30.777592, 0.820118), (-30.662222, 0.820118), (-30.785896, 0.828424), (-30.785896, -0.183925), (-30.777592, -0.175619), (-30.777592, 0.820118), (-19.267904, -17.596893), (-19.266922, -17.596893), (-19.266922, -17.595913), (-19.267904, -17.595913), (0.5, 0.094818), (0.999999, 0.094818), (0.999999, 0.682526), (0.499999, 0.682526), (0.000001, 0.094817), (0.5, 0.094818), (0.499999, 0.682526), (-0, 0.682525), (-7.866991, -17.596893), (-7.866009, -17.596893), (-7.866009, -17.595913), (-7.866991, -17.595913), (-7.874107, -17.596893), (-7.873126, -17.596893), (-7.873126, -17.595913), (-7.874107, -17.595913)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_Television_13_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]
                rel material:binding = </root/_materials/M_Television_13_0>
            }

            def GeomSubset "M_Television_13_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75]
                rel material:binding = </root/_materials/M_Television_13_1>
            }

            def GeomSubset "M_Television_13_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [76, 77, 78]
                rel material:binding = </root/_materials/M_Television_13_2>
            }

            def GeomSubset "M_Television_13_3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [79]
                rel material:binding = </root/_materials/M_Television_13_3>
            }

            def GeomSubset "M_Television_13_4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [80]
                rel material:binding = </root/_materials/M_Television_13_4>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_Television_13_0"
        {
            token outputs:surface.connect = </root/_materials/M_Television_13_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.5709343, 0.61240906, 0.64705884)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_Television_13_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Television_13_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_Television_13_1"
        {
            token outputs:surface.connect = </root/_materials/M_Television_13_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_Television_13_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_Television_13_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/MetalBumpy_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Television_13_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/MetalBumpy_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Television_13_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_Television_13_2"
        {
            token outputs:surface.connect = </root/_materials/M_Television_13_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0, 0, 0)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }

        def Material "M_Television_13_3"
        {
            token outputs:surface.connect = </root/_materials/M_Television_13_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.5661765, 0.5661765, 0.5661765)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }

        def Material "M_Television_13_4"
        {
            token outputs:surface.connect = </root/_materials/M_Television_13_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.8, 0.8, 0.8)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 1
                float inputs:specular = 0
                token outputs:surface
            }
        }
    }
}

