#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshTelevision_13_0_GeomSubset_0"
    {
        def Mesh "MeshTelevision_13_0_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 97, 50, 54, 96, 93, 58, 48, 92, 85, 84, 94, 95, 56, 44, 60, 63, 44, 46, 64, 60, 46, 52, 66, 64, 52, 56, 63, 66, 50, 48, 68, 71, 48, 58, 72, 68, 54, 50, 71, 75, 58, 54, 75, 72, 92, 48, 77, 91, 48, 50, 78, 77, 50, 97, 88, 78, 46, 44, 76, 79, 91, 77, 81, 90, 77, 78, 82, 81, 78, 88, 89, 82, 79, 76, 80, 83, 54, 58, 84, 85, 58, 93, 94, 84, 56, 52, 87, 86, 96, 54, 85, 95, 88, 79, 83, 89, 76, 91, 90, 80, 44, 92, 91, 76, 56, 93, 92, 44, 94, 93, 56, 86, 95, 94, 86, 87, 52, 96, 95, 87, 46, 97, 96, 52, 88, 97, 46, 79]
            rel material:binding = </root/_materials/M_Television_13_0>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, -2.0208264e-8), (0, 1, -2.0208264e-8), (0, 1, -1.0104112e-8), (0, 1, -1.0104151e-8), (-0.2643516, 0.96442604, 0.0008008877), (-0.9998765, 0.015602387, 0.0018983522), (-0.99987644, 0.015601654, 0.0018971106), (-0.999857, -0.01678707, 0.002010908), (-0.9998765, 0.015602387, 0.0018983522), (-0.9998769, 0.015571591, -0.0019277171), (-0.9998769, 0.0155713, -0.0019280137), (-0.99987644, 0.015601654, 0.0018971106), (-0.9998769, 0.015571591, -0.0019277171), (-0.2661535, 0.9639305, 0.0006733537), (-0.9998551, -0.01691036, -0.0019898433), (-0.9998769, 0.0155713, -0.0019280137), (-0.2661535, 0.9639305, 0.0006733537), (-0.2643516, 0.96442604, 0.0008008877), (-0.999857, -0.01678707, 0.002010908), (-0.9998551, -0.01691036, -0.0019898433), (0.99987817, 0.015486827, -0.0019124434), (0.99987817, 0.015486807, 0.0019124406), (0.9998782, 0.015487781, 0.0019134232), (0.9998782, 0.015486795, -0.0019124718), (0.99987817, 0.015486807, 0.0019124406), (0.2644797, 0.96439093, 0.0007995665), (0.9998601, -0.016598735, 0.0020998693), (0.9998782, 0.015487781, 0.0019134232), (0.26626575, 0.96389943, 0.0007176185), (0.99987817, 0.015486827, -0.0019124434), (0.9998782, 0.015486795, -0.0019124718), (0.9998568, -0.016809996, -0.0018903324), (0.2644797, 0.96439093, 0.0007995665), (0.26626575, 0.96389943, 0.0007176185), (0.9998568, -0.016809996, -0.0018903324), (0.9998601, -0.016598735, 0.0020998693), (0, -1, -3.3066078e-7), (0, -1, 0), (0, -1, 0), (0, -1, -3.3064617e-7), (0, -1, 0), (0, -1, 3.3066033e-7), (0, -1, 3.306507e-7), (0, -1, 0), (0, -1, 3.3066033e-7), (0, -1, 3.306531e-7), (0, -1, 3.306531e-7), (0, -1, 3.306507e-7), (0, -1, 0), (0, -1, -3.3066033e-7), (0, -1, -3.3065106e-7), (0, -1, 0), (0, -0.682886, 0.730525), (0, -0.68288606, 0.7305248), (0, -0.68288606, 0.7305248), (0, -0.682886, 0.730525), (-0.7305079, -0.6829042, 0), (-0.7305079, -0.6829042, 0), (-0.7305079, -0.6829042, 0), (-0.7305079, -0.6829042, 0), (0, -0.682886, -0.7305249), (0, -0.6828861, -0.7305249), (0, -0.6828861, -0.7305249), (0, -0.682886, -0.7305249), (0.73051655, -0.68289495, 8.058874e-7), (0.73051655, -0.68289495, 8.058874e-7), (0.73051655, -0.68289495, 8.058874e-7), (0.73051655, -0.68289495, 8.058874e-7), (0.26626575, 0.96389943, 0.0007176185), (0.2644797, 0.96439093, 0.0007995665), (0.2300999, 0.9731667, 0.0007388492), (0.2300999, 0.9731667, 0.0007388492), (0, 0.94684887, -0.3216786), (0, 0.9468489, -0.32167864), (0, 0.9468489, -0.32167864), (0, 0.94684887, -0.3216786), (-0.2643516, 0.96442604, 0.0008008877), (-0.2661535, 0.9639305, 0.0006733537), (-0.23009984, 0.9731667, 0.0007393821), (-0.23009984, 0.9731667, 0.0007393821), (0, 0.9654224, 0.26069057), (0, 0.96542245, 0.2606906), (0, 0.96542245, 0.2606906), (0, 0.9654224, 0.26069057), (0, -0.6828861, -0.7305249), (0, -0.68288624, -0.7305248), (0, -0.68288624, -0.7305248), (0, -0.6828861, -0.7305249), (0, -0.68288577, 0.7305252), (0, -0.682886, 0.730525), (0, -0.682886, 0.730525), (0, -0.68288577, 0.7305252), (0, -1, -3.3066033e-7), (0, -1, -3.3066078e-7), (0, -1, -3.3064617e-7), (0, -1, -3.3065106e-7), (0, 0, -0.99999994), (0, 0, -1), (0, 0, -1), (0, 0, -0.99999994), (0, 0.9468489, -0.32167864), (0, 0.9468489, -0.32167864), (0, 0.94684887, -0.32167864), (0, 0.94684887, -0.32167864), (0, 1, -1.0104151e-8), (0, 1, -1.0104112e-8), (0, 1, 0), (0, 1, 0), (0, 0.9654224, 0.26069057), (0, 0.9654224, 0.26069057), (0, 0.9654224, 0.26069057), (0, 0.9654224, 0.26069057), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, 3.306531e-7), (0, -1, 3.306531e-7), (0, -1, 0), (0, -1, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.000696, -0.078771, 0.088426), (0.000695, -0.078771, 0.088426), (-0.000696, -0.07738, 0.088426), (0.000695, -0.07738, 0.088426), (-0.000696, -0.078771, 0.088426), (0.000695, -0.078771, 0.088426), (-0.000696, -0.07738, 0.088426), (0.000695, -0.07738, 0.088426), (-0.000696, -0.078771, 0.088426), (0.000695, -0.078771, 0.088426), (-0.000696, -0.07738, 0.088426), (0.000695, -0.07738, 0.088426), (-0.000696, -0.078771, 0.088426), (0.000695, -0.078771, 0.088426), (-0.000696, -0.07738, 0.088426), (0.000695, -0.07738, 0.088426), (-0.000696, -0.078771, 0.088426), (0.000695, -0.078771, 0.088426), (-0.000696, -0.07738, 0.088426), (0.000695, -0.07738, 0.088426), (0.525377, -0.118254, -0.145763), (0.525377, -0.159178, -0.145763), (0.525377, -0.118254, 0.372501), (0.525377, -0.159178, 0.372501), (-0.525376, -0.118254, -0.145763), (-0.525376, -0.158525, -0.145763), (-0.525376, -0.158525, 0.372501), (-0.525376, -0.118254, 0.372501), (0.486858, -0.110256, 0.372501), (0.486858, -0.110256, -0.145763), (0.486858, -0.167175, -0.145763), (0.486858, -0.167175, 0.372501), (0.448339, -0.105845, 0.372501), (0.448339, -0.105845, -0.145763), (0.448339, -0.171587, -0.145763), (0.448339, -0.171587, 0.372501), (-0.486858, -0.110256, 0.372501), (-0.486858, -0.166523, 0.372501), (-0.486858, -0.166523, -0.145763), (-0.486858, -0.110256, -0.145763), (-0.448339, -0.105845, 0.372501), (-0.448339, -0.170934, 0.372501), (-0.448339, -0.170934, -0.145763), (-0.448339, -0.105845, -0.145763), (-0.406737, -0.17228, -0.145763), (-0.412902, -0.172172, -0.145763), (-0.406738, -0.17228, 0.372501), (-0.412901, -0.172172, 0.372501), (0.406738, -0.17228, -0.145763), (0.412901, -0.172172, -0.145763), (0.406738, -0.17228, 0.372501), (0.412902, -0.172172, 0.372501), (-0.406737, -0.105152, 0.372501), (-0.412902, -0.104608, 0.372501), (0.406738, -0.105152, 0.372501), (0.412901, -0.104608, 0.372501), (-0.406738, -0.1045, -0.145763), (-0.412901, -0.104608, -0.145763), (0.406738, -0.1045, -0.145763), (0.412902, -0.104608, -0.145763), (-0.406663, -0.168028, -0.141511), (-0.412827, -0.16792, -0.141511), (-0.412827, -0.108857, -0.141511), (-0.406663, -0.10875, -0.141511), (-0.406663, -0.168028, 0.368249), (-0.412827, -0.16792, 0.368249), (-0.406663, -0.10875, 0.368249), (-0.412827, -0.108857, 0.368249), (0.406664, -0.168028, -0.141511), (0.412827, -0.16792, -0.141511), (0.412828, -0.16792, 0.368249), (0.406664, -0.168028, 0.368249), (0.406664, -0.10875, -0.141511), (0.412828, -0.108857, -0.141511), (0.412827, -0.108857, 0.368249), (0.406664, -0.10875, 0.368249), (-0.378025, -0.17228, -0.11705), (0.378026, -0.17228, -0.11705), (0.378026, -0.17228, 0.343788), (-0.378025, -0.17228, 0.343788), (-0.358013, -0.150873, -0.097039), (0.358014, -0.150873, -0.097039), (0.358014, -0.150873, 0.323777), (-0.358014, -0.150873, 0.323777), (0.293635, -0.078075, -0.067982), (0.293636, -0.078075, 0.272226), (-0.293635, -0.078075, -0.067982), (-0.293635, -0.078075, 0.272226), (0, -0.17228, 0.343788), (0, -0.150873, 0.323777), (0.000001, -0.150873, -0.097039), (0.000001, -0.17228, -0.11705), (0, -0.17228, -0.145763), (0, -0.1045, -0.145763), (0, -0.078075, -0.067982), (0.000001, -0.078075, 0.272226), (0, -0.105152, 0.372501), (0, -0.17228, 0.372501)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-43.666134, -17.768993), (-43.665054, -17.768993), (-43.665054, -17.767914), (-43.666134, -17.767914), (-44.140533, -0.061677), (-43.34614, -0.061675), (-43.346138, 0.069431), (-44.140533, 0.069427), (-44.14054, -0.003397), (-43.346134, -0.003396), (-43.346134, 0.128986), (-44.140533, 0.128985), (-43.561443, -0.01531), (-43.561447, 0.655631), (-44.14054, 0.655631), (-44.140533, -0.015309), (-43.51986, 0.875575), (-43.51986, 1.007969), (-43.528168, 0.999654), (-43.528164, 0.88388), (-43.51986, 1.007969), (-44.532154, 1.007968), (-44.523846, 0.999654), (-43.528168, 0.999654), (-44.532154, 1.007968), (-44.532154, 0.876844), (-44.52385, 0.88388), (-44.523846, 0.999654), (-44.532154, 0.876844), (-43.51986, 0.875575), (-43.528164, 0.88388), (-44.52385, 0.88388), (-44.938152, 0.88137), (-43.926105, 0.881368), (-43.934406, 0.889677), (-44.929855, 0.889676), (-43.926105, 0.881368), (-43.926105, 1.013736), (-43.934406, 1.005427), (-43.934406, 0.889677), (-44.938152, 1.012457), (-44.938152, 0.88137), (-44.929855, 0.889676), (-44.929848, 1.005427), (-43.926105, 1.013736), (-44.938152, 1.012457), (-44.929848, 1.005427), (-43.934406, 1.005427), (-44.14054, 0.15705), (-43.27691, 0.157046), (-43.337875, 0.218013), (-44.140537, 0.218007), (-43.27691, 0.157046), (-43.27691, 1.257471), (-43.337875, 1.19651), (-43.337875, 0.218013), (-43.27691, 1.257471), (-44.14054, 1.257475), (-44.14054, 1.196513), (-43.337875, 1.19651), (-45.00416, 1.257472), (-45.004166, 0.157049), (-44.9432, 0.218011), (-44.943195, 1.19651), (-44.140537, 0.218007), (-43.337875, 0.218013), (-43.380363, 0.260505), (-44.140533, 0.260505), (-43.337875, 0.218013), (-43.337875, 1.19651), (-43.38037, 1.154024), (-43.380363, 0.260505), (-43.337875, 1.19651), (-44.14054, 1.196513), (-44.14054, 1.154024), (-43.38037, 1.154024), (-44.943195, 1.19651), (-44.9432, 0.218011), (-44.900703, 0.260505), (-44.90071, 1.154024), (-43.338394, -0.21306), (-43.338394, 0.809027), (-43.561447, 0.655631), (-43.561443, -0.01531), (-43.338394, 0.809027), (-44.14054, 0.809027), (-44.14054, 0.655631), (-43.561447, 0.655631), (-44.942688, 0.809027), (-44.942688, -0.21306), (-44.719627, -0.015309), (-44.71963, 0.655629), (-44.14054, -0.21306), (-43.338394, -0.21306), (-43.561443, -0.01531), (-44.140533, -0.015309), (-44.14054, 1.196513), (-44.943195, 1.19651), (-44.90071, 1.154024), (-44.14054, 1.154024), (-44.9432, 0.218011), (-44.140537, 0.218007), (-44.140533, 0.260505), (-44.900703, 0.260505), (-45.004166, 0.157049), (-44.14054, 0.15705), (-44.140537, 0.218007), (-44.9432, 0.218011), (-44.93494, -0.003397), (-44.14054, -0.003397), (-44.140533, 0.128985), (-44.93494, 0.128985), (-44.14054, 0.655631), (-44.14054, 0.809027), (-44.942688, 0.809027), (-44.71963, 0.655629), (-44.140533, -0.015309), (-44.14054, 0.655631), (-44.71963, 0.655629), (-44.719627, -0.015309), (-44.942688, -0.21306), (-44.14054, -0.21306), (-44.140533, -0.015309), (-44.719627, -0.015309), (-44.934933, -0.061678), (-44.140533, -0.061677), (-44.140533, 0.069427), (-44.934933, 0.069426), (-44.14054, 1.196513), (-44.14054, 1.257475), (-45.00416, 1.257472), (-44.943195, 1.19651)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_Television_13_0"
        {
            token outputs:surface.connect = </root/_materials/M_Television_13_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.5709343, 0.61240906, 0.64705884)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_Television_13_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Television_13_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

