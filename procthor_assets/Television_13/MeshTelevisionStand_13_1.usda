#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.0"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "TelevisionStand_13"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "TelevisionStand_13" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.237522, -0.142382, -0.372941), (0.237522, 0.171873, 0.088426)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 31, 30, 28, 29, 46, 47, 45, 44, 23, 27, 31, 29, 43, 42, 40, 41, 24, 20, 28, 30, 20, 23, 33, 32, 23, 29, 37, 33, 29, 28, 36, 37, 28, 20, 32, 36, 30, 31, 39, 38, 31, 27, 35, 39, 27, 24, 34, 35, 24, 30, 38, 34, 37, 36, 42, 43, 36, 32, 40, 42, 32, 33, 41, 40, 33, 37, 43, 41, 34, 38, 49, 54, 55, 48, 46, 44, 35, 34, 54, 52, 53, 55, 44, 45, 39, 35, 52, 50, 51, 53, 45, 47, 38, 39, 50, 49, 48, 51, 47, 46, 51, 48, 56, 57, 57, 56, 58, 59, 59, 58, 60, 61, 61, 60, 49, 50, 53, 51, 57, 62, 62, 57, 59, 63, 63, 59, 61, 64, 64, 61, 50, 52, 55, 53, 62, 65, 65, 62, 63, 66, 66, 63, 64, 67, 67, 64, 52, 54, 48, 55, 65, 56, 56, 65, 66, 58, 58, 66, 67, 60, 60, 67, 54, 49, 4, 5, 7, 6, 20, 21, 22, 23, 24, 25, 21, 20, 70, 71, 69, 68, 26, 27, 23, 22, 24, 27, 26, 25, 78, 79, 76, 77, 21, 25, 76, 79, 72, 73, 75, 74, 26, 22, 78, 77, 71, 70, 74, 75, 70, 25, 72, 74, 25, 26, 73, 72, 26, 71, 75, 73, 76, 25, 70, 68, 77, 76, 68, 69, 26, 77, 69, 71, 22, 21, 79, 78, 8, 9, 11, 10, 12, 13, 15, 14, 16, 17, 19, 18]
            rel material:binding = </root/_materials/M_TelevisionStand_13_0>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -0.005553418, -0.9999846), (0, -0.005553418, -0.9999846), (0, 0.0055531375, -0.9999846), (0, 0.0055531375, -0.9999846), (0, -0.9999388, 0.011058638), (0, -0.9999388, 0.011058638), (0, -0.9999388, 0.011058638), (0, -0.9999388, 0.011058638), (0.9989134, -0.00003141864, 0.046604484), (0.9989134, 2.4847395e-8, 0.046604432), (0.99996376, 0.000047345828, 0.008516201), (0.99996376, -0.00004734453, 0.0085161915), (0, 0.9999378, 0.011152895), (0, 0.9999378, 0.011152895), (0, 0.9999378, 0.011152895), (0, 0.9999378, 0.011152895), (-0.9989134, 0.000031419495, 0.04660449), (-0.9989134, -2.3988832e-8, 0.046604425), (-0.99996376, -0.00004734453, 0.0085161915), (-0.99996376, 0.000047345828, 0.008516201), (0, -0.011106106, 0.99993837), (0, -0.011106106, 0.99993837), (0, 0.08543882, 0.99634343), (0, 0.08543882, 0.99634343), (0.9989134, -0.00003141864, 0.046604484), (0.99996376, -0.00004734453, 0.0085161915), (0.99996334, 0.0007873703, 0.008525509), (0.99996346, 0.0006843804, 0.008524361), (0, 0.0055531375, -0.9999846), (0, 0.0055531375, -0.9999846), (0, -0.08543883, -0.99634343), (0, -0.08543883, -0.99634343), (-0.99996376, -0.00004734453, 0.0085161915), (-0.9989134, -2.3988832e-8, 0.046604425), (-0.99996346, 0.0006842839, 0.008524361), (-0.99996334, 0.00078726094, 0.008525509), (0, -0.005553418, -0.9999846), (0, -0.005553418, -0.9999846), (0, 0.32791138, -0.94470847), (0, 0.32791138, -0.94470847), (0.99996376, 0.000047345828, 0.008516201), (0.9989134, 2.4847395e-8, 0.046604432), (0.99996114, -0.0023133259, 0.008505055), (0.9999592, -0.0029095034, 0.008556813), (0, 0.011106109, 0.99993837), (0, 0.011106109, 0.99993837), (0, -0.32652378, 0.94518906), (0, -0.32652378, 0.94518906), (-0.9989134, 0.000031419495, 0.04660449), (-0.99996376, 0.000047345828, 0.008516201), (-0.9999609, -0.0024334171, 0.008503415), (-0.99996114, -0.0023138009, 0.008505033), (0, -0.08543883, -0.99634343), (0, -0.08543883, -0.99634343), (0, -0.18118629, -0.9834488), (0, -0.18118629, -0.9834488), (-0.99996334, 0.00078726094, 0.008525509), (-0.99996346, 0.0006842839, 0.008524361), (-0.9999623, 0.0015722316, 0.008534267), (-0.9999623, 0.0015722316, 0.008534267), (0, 0.08543882, 0.99634343), (0, 0.08543882, 0.99634343), (0, 0.18118626, 0.98344874), (0, 0.18118626, 0.98344874), (0.99996346, 0.0006843804, 0.008524361), (0.99996334, 0.0007873703, 0.008525509), (0.9999623, 0.0015724383, 0.008534267), (0.9999623, 0.0015724383, 0.008534267), (-0.99996114, -0.0023138009, 0.008505033), (-0.9999609, -0.0024334171, 0.008503415), (-0.999953, -0.0045103095, 0.008578402), (-0.9999517, -0.0047989856, 0.008582516), (-0.9999631, -0.0010521938, 0.008524539), (-0.99996316, -0.000980037, 0.008518569), (-0.99996346, -0.00082188856, 0.008505484), (-0.99996346, -0.00082188856, 0.008505484), (0, -0.32652378, 0.94518906), (0, -0.32652378, 0.94518906), (0, -0.6048016, 0.7963762), (0, -0.6048016, 0.7963762), (0, -0.2755442, 0.96128845), (0, -0.2755441, 0.9612884), (0, -0.2500306, 0.968238), (0, -0.2500306, 0.968238), (0.9999592, -0.0029095034, 0.008556813), (0.99996114, -0.0023133259, 0.008505055), (0.9999517, -0.00479805, 0.008582512), (0.9999531, -0.004509935, 0.008578401), (0.9999629, -0.0009855093, 0.008555546), (0.9999628, -0.0010735337, 0.008561696), (0.9999633, -0.0007925828, 0.008542067), (0.9999633, -0.0007925828, 0.008542067), (0, 0.32791138, -0.94470847), (0, 0.32791138, -0.94470847), (0, 0.6071887, -0.7945577), (0, 0.6071887, -0.7945577), (0, 0.2787924, -0.9603514), (0, 0.2787924, -0.9603514), (0, 0.25335658, -0.96737295), (0, 0.25335658, -0.96737295), (0, 0.2787924, -0.9603514), (0, 0.2787924, -0.9603514), (0, 0.35398278, -0.93525195), (0, 0.35398278, -0.93525195), (0, 0.35398278, -0.93525195), (0, 0.35398278, -0.93525195), (0, 0.4506988, -0.8926761), (0, 0.4506988, -0.8926761), (0, 0.4506988, -0.8926761), (0, 0.4506988, -0.8926761), (0, 0.5423469, -0.84015465), (0, 0.5423469, -0.84015465), (0, 0.5423469, -0.84015465), (0, 0.5423469, -0.84015465), (0, 0.6071887, -0.7945577), (0, 0.6071887, -0.7945577), (0.9999628, -0.0010735337, 0.008561696), (0.9999629, -0.0009855093, 0.008555546), (0.9999619, -0.0016195351, 0.008574651), (0.99996156, -0.001839341, 0.008574235), (0.99996156, -0.001839341, 0.008574235), (0.9999619, -0.0016195351, 0.008574651), (0.99996, -0.0025428082, 0.008573433), (0.9999606, -0.0025205438, 0.008504), (0.9999606, -0.0025205438, 0.008504), (0.99996, -0.0025428082, 0.008573433), (0.999957, -0.0035456265, 0.00857395), (0.9999554, -0.0039603054, 0.008574863), (0.9999554, -0.0039603054, 0.008574863), (0.999957, -0.0035456265, 0.00857395), (0.9999531, -0.004509935, 0.008578401), (0.9999517, -0.00479805, 0.008582512), (0, -0.2755441, 0.9612884), (0, -0.2755442, 0.96128845), (0, -0.3508595, 0.9364281), (0, -0.35085815, 0.9364286), (0, -0.35085815, 0.9364286), (0, -0.3508595, 0.9364281), (0, -0.44777262, 0.89414746), (0, -0.44777262, 0.89414746), (0, -0.44777262, 0.89414746), (0, -0.44777262, 0.89414746), (0, -0.53970814, 0.8418522), (0, -0.53970814, 0.8418522), (0, -0.53970814, 0.8418522), (0, -0.53970814, 0.8418522), (0, -0.6048016, 0.7963762), (0, -0.6048016, 0.7963762), (-0.99996316, -0.000980037, 0.008518569), (-0.9999631, -0.0010521938, 0.008524539), (-0.99996173, -0.0018165407, 0.008559725), (-0.9999622, -0.0015837685, 0.008551269), (-0.9999622, -0.0015837685, 0.008551269), (-0.99996173, -0.0018165407, 0.008559725), (-0.99996066, -0.0025199985, 0.008503911), (-0.99996, -0.0025417584, 0.008573433), (-0.99996, -0.0025417584, 0.008573433), (-0.99996066, -0.0025199985, 0.008503911), (-0.9999554, -0.0039603054, 0.008574863), (-0.999957, -0.0035456265, 0.00857395), (-0.999957, -0.0035456265, 0.00857395), (-0.9999554, -0.0039603054, 0.008574863), (-0.9999517, -0.0047989856, 0.008582516), (-0.999953, -0.0045103095, 0.008578402), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, -4.242454e-10), (0, 0.9891993, 0.14657685), (-0.0000022212043, 0.9891992, 0.14657685), (0, 1, -4.242454e-10), (-0.9989134, 0.000031419495, 0.04660449), (-0.999163, -3.7813354e-7, 0.040906258), (-0.9981142, -9.2311836e-8, 0.061384313), (-0.9989134, -2.3988832e-8, 0.046604425), (0, 0.00003643334, 1), (1.21963675e-8, 0.00003643334, 1), (-0.0002158615, 0.000009924173, 0.99999994), (0, 0.000009864569, 1), (0.999163, -4.003265e-7, 0.040906258), (0.9989134, 2.4847395e-8, 0.046604432), (0.9989134, -0.00003141864, 0.046604484), (0.9981142, -3.7963036e-7, 0.061384313), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1.00292406e-10, 0.97588867, 0.21826874), (0, 0.97588867, 0.21826874), (-2.4008058e-9, 0.83206356, 0.5546803), (0, 0.83206356, 0.5546803), (-0.9981142, -9.2311836e-8, 0.061384313), (-0.999163, -3.7813354e-7, 0.040906258), (-1, -2.7882572e-7, 0), (-1, 7.405106e-7, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0.999163, -4.003265e-7, 0.040906258), (0.9981142, -3.7963036e-7, 0.061384313), (1, 7.405106e-7, 0), (1, -3.7393397e-7, 0), (1.21963675e-8, 0.00003643334, 1), (0, 0.00003643334, 1), (0, 0, 1), (0, 0, 1), (-1, -4.1443542e-7, 0), (-0.999163, -3.7813354e-7, 0.040906258), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0.999163, -4.003265e-7, 0.040906258), (1, -4.83508e-7, 0), (1, 0, 0), (1, 0, 0), (-1, -2.7882572e-7, 0), (-0.999163, -3.7813354e-7, 0.040906258), (-1, -4.1443542e-7, 0), (-1, -9.4179757e-7, 0), (0, 0.83206356, 0.5546803), (-2.4008058e-9, 0.83206356, 0.5546803), (0, 0.000009864569, 1), (-0.0002158615, 0.000009924173, 0.99999994), (0.999163, -4.003265e-7, 0.040906258), (1, -3.7393397e-7, 0), (1, -0.0000010987638, 0), (1, -4.83508e-7, 0), (-0.0000022212043, 0.9891992, 0.14657685), (0, 0.9891993, 0.14657685), (0, 0.97588867, 0.21826874), (1.00292406e-10, 0.97588867, 0.21826874), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.000551, -0.078795, 0.088426), (0.000551, -0.078795, 0.088426), (-0.000551, -0.077355, 0.088426), (0.000551, -0.077355, 0.088426), (-0.000551, -0.078795, 0.088426), (0.000551, -0.078795, 0.088426), (-0.000551, -0.077355, 0.088426), (0.000551, -0.077355, 0.088426), (-0.000551, -0.078795, 0.088426), (0.000551, -0.078795, 0.088426), (-0.000551, -0.077355, 0.088426), (0.000551, -0.077355, 0.088426), (-0.000551, -0.078795, 0.088426), (0.000551, -0.078795, 0.088426), (-0.000551, -0.077355, 0.088426), (0.000551, -0.077355, 0.088426), (-0.000551, -0.078795, 0.088426), (0.000551, -0.078795, 0.088426), (-0.000551, -0.077355, 0.088426), (0.000551, -0.077355, 0.088426), (-0.237295, -0.018418, -0.324395), (-0.206447, -0.018418, -0.0152), (0.206447, -0.018418, -0.0152), (0.237295, -0.018418, -0.324395), (-0.237295, -0.053795, -0.324395), (-0.206447, -0.053795, -0.0152), (0.206447, -0.053795, -0.0152), (0.237295, -0.053795, -0.324395), (-0.237408, -0.01827, -0.337662), (0.237408, -0.01827, -0.337662), (-0.237408, -0.053943, -0.337662), (0.237408, -0.053943, -0.337662), (-0.237295, 0.001481, -0.324174), (0.237295, 0.001481, -0.324174), (-0.237295, -0.073694, -0.324174), (0.237295, -0.073694, -0.324174), (-0.237408, 0.001629, -0.337441), (0.237408, 0.001629, -0.337441), (-0.237408, -0.073841, -0.337441), (0.237408, -0.073841, -0.337441), (-0.237295, 0.171725, -0.355539), (0.237295, 0.171725, -0.355539), (-0.237408, 0.171873, -0.368806), (0.237408, 0.171873, -0.368806), (-0.237407, -0.142232, -0.35938), (0.237407, -0.142232, -0.35938), (-0.237522, -0.142382, -0.372941), (0.237522, -0.142382, -0.372941), (-0.237504, -0.129423, -0.369547), (-0.237434, -0.087224, -0.34824), (0.237434, -0.087224, -0.34824), (0.237504, -0.129423, -0.369547), (0.23732, -0.087029, -0.33487), (0.237388, -0.129294, -0.356039), (-0.23732, -0.087029, -0.33487), (-0.237389, -0.129294, -0.356039), (-0.237487, -0.118085, -0.365928), (0.237487, -0.118085, -0.365928), (-0.23747, -0.107193, -0.361132), (0.23747, -0.107193, -0.361132), (-0.237452, -0.096867, -0.355214), (0.237452, -0.096867, -0.355214), (0.237372, -0.117945, -0.352458), (0.237355, -0.107038, -0.347699), (0.237338, -0.096693, -0.341814), (-0.237372, -0.117945, -0.352458), (-0.237355, -0.107038, -0.347699), (-0.237338, -0.096693, -0.341814), (-0.206447, -0.037751, 0.027724), (0.206447, -0.037751, 0.027724), (-0.206447, -0.055309, 0.032773), (0.206447, -0.055309, 0.032773), (-0.206447, -0.086981, -0.0152), (0.206447, -0.086981, -0.0152), (-0.206447, -0.086981, 0.032773), (0.206447, -0.086981, 0.032773), (-0.206447, -0.026006, 0.018717), (0.206447, -0.026006, 0.018717), (0.206447, -0.020541, 0.001906), (-0.206447, -0.020541, 0.001906)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-43.87829, -17.574139), (-43.876904, -17.574139), (-43.876904, -17.572329), (-43.87829, -17.572329), (-43.651344, 0.312075), (-44.597015, 0.312071), (-44.59702, 0.241023), (-43.651344, 0.241019), (-44.588093, 0.374745), (-43.660275, 0.374751), (-43.660496, 0.401237), (-44.587868, 0.401235), (-44.688366, 0.853071), (-44.757423, 0.853069), (-44.757713, 0.827175), (-44.688072, 0.827169), (-43.66034, 0.424295), (-44.587734, 0.424297), (-44.587517, 0.398386), (-43.66056, 0.398383), (-44.489746, 0.786441), (-44.558853, 0.786444), (-44.559135, 0.760531), (-44.489456, 0.760527), (-44.590847, 0.476732), (-43.65695, 0.476731), (-43.65695, 0.515891), (-44.59084, 0.515887), (-44.688366, 0.853071), (-44.688072, 0.827169), (-44.649235, 0.827604), (-44.649517, 0.853498), (-43.651344, 0.241019), (-44.59702, 0.241023), (-44.597015, 0.201391), (-43.651344, 0.201395), (-44.559135, 0.760531), (-44.558853, 0.786444), (-44.597717, 0.78687), (-44.598007, 0.760963), (-44.597015, 0.312071), (-43.651344, 0.312075), (-43.651344, 0.351699), (-44.59702, 0.351702), (-44.757713, 0.827175), (-44.757423, 0.853069), (-44.796272, 0.853502), (-44.79656, 0.8276), (-43.636257, 0.573053), (-44.611816, 0.573058), (-44.611816, 0.532152), (-43.63626, 0.532155), (-44.489746, 0.786441), (-44.489456, 0.760527), (-44.45059, 0.760959), (-44.45088, 0.786873), (-43.651344, 0.201395), (-44.597015, 0.201391), (-44.597015, -0.137682), (-43.651344, -0.137678), (-44.598007, 0.760963), (-44.597717, 0.78687), (-44.93025, 0.725616), (-44.930534, 0.699698), (-44.59084, 0.515887), (-43.65695, 0.515891), (-43.656948, 0.850894), (-44.590847, 0.850893), (-44.649517, 0.853498), (-44.649235, 0.827604), (-44.316887, 0.766372), (-44.31718, 0.792274), (-44.45088, 0.786873), (-44.45059, 0.760959), (-44.424454, 0.739866), (-44.424835, 0.765982), (-44.34228, 0.724638), (-44.34203, 0.698244), (-44.31671, 0.691619), (-44.317005, 0.718111), (-43.63626, 0.532155), (-44.611816, 0.532152), (-44.61187, 0.50474), (-43.636204, 0.504741), (-43.63607, 0.417864), (-44.61201, 0.417864), (-44.61205, 0.391273), (-43.636024, 0.391267), (-44.79656, 0.8276), (-44.796272, 0.853502), (-44.822308, 0.832624), (-44.822685, 0.806524), (-44.90506, 0.764926), (-44.90481, 0.791295), (-44.93007, 0.784772), (-44.930363, 0.758303), (-44.59702, 0.351702), (-43.651344, 0.351699), (-43.6513, 0.378356), (-44.597065, 0.378352), (-44.59721, 0.462401), (-43.651154, 0.462398), (-43.651115, 0.488212), (-44.597248, 0.488215), (-43.651154, 0.462398), (-44.59721, 0.462401), (-44.59717, 0.439823), (-43.651188, 0.439823), (-43.651188, 0.439823), (-44.59717, 0.439823), (-44.59714, 0.418126), (-43.651222, 0.418129), (-43.651222, 0.418129), (-44.59714, 0.418126), (-44.597103, 0.397564), (-43.65126, 0.397561), (-43.65126, 0.397561), (-44.597103, 0.397564), (-44.597065, 0.378352), (-43.6513, 0.378356), (-44.90481, 0.791295), (-44.90506, 0.764926), (-44.88293, 0.771993), (-44.882656, 0.798284), (-44.882656, 0.798284), (-44.88293, 0.771993), (-44.861664, 0.781355), (-44.86136, 0.807575), (-44.86136, 0.807575), (-44.861664, 0.781355), (-44.84151, 0.792905), (-44.84117, 0.819064), (-44.84117, 0.819064), (-44.84151, 0.792905), (-44.822685, 0.806524), (-44.822308, 0.832624), (-44.61201, 0.417864), (-43.63607, 0.417864), (-43.6361, 0.441194), (-44.611977, 0.441194), (-44.611977, 0.441194), (-43.6361, 0.441194), (-43.636135, 0.463617), (-44.611942, 0.463613), (-44.611942, 0.463613), (-43.636135, 0.463617), (-43.636166, 0.484877), (-44.6119, 0.484877), (-44.6119, 0.484877), (-43.636166, 0.484877), (-43.636204, 0.504741), (-44.61187, 0.50474), (-44.34203, 0.698244), (-44.34228, 0.724638), (-44.36445, 0.73163), (-44.364174, 0.70532), (-44.364174, 0.70532), (-44.36445, 0.73163), (-44.385754, 0.740927), (-44.38545, 0.714691), (-44.38545, 0.714691), (-44.385754, 0.740927), (-44.405956, 0.752416), (-44.405617, 0.726249), (-44.405617, 0.726249), (-44.405956, 0.752416), (-44.424835, 0.765982), (-44.424454, 0.739866), (-30.840147, -17.604818), (-30.83883, -17.604818), (-30.83883, -17.603102), (-30.840147, -17.603102), (-31.013115, 0.749174), (-31.617832, 0.688842), (-31.617832, -0.118682), (-31.013115, -0.179014), (-30.70248, 0.361865), (-30.70248, 0.966969), (-30.771713, 0.966969), (-30.771713, 0.361865), (-30.724056, 0.663768), (-30.724056, -0.167211), (-30.688719, -0.167211), (-30.688719, 0.663768), (-30.79432, 1.040559), (-30.79432, 0.435485), (-30.725088, 0.435485), (-30.725088, 1.040559), (-31.25536, 0.748547), (-31.25536, -0.178388), (-30.651463, -0.118137), (-30.651463, 0.688297), (-31.651285, -0.118682), (-31.65129, 0.688842), (-31.684166, 0.688842), (-31.684166, -0.118682), (-30.771713, 0.966969), (-30.70248, 0.966969), (-30.756863, 1.033345), (-30.767557, 1.000445), (-30.70238, 0.651498), (-30.70238, -0.154941), (-30.608683, -0.154941), (-30.608683, 0.651498), (-30.79432, 1.040559), (-30.725088, 1.040559), (-30.729244, 1.074034), (-30.739937, 1.106932), (-30.724056, -0.167211), (-30.724056, 0.663768), (-30.7878, 0.663768), (-30.7878, -0.167211), (-30.699516, 1.060852), (-30.70248, 0.966969), (-30.637531, 0.966969), (-30.637531, 1.060852), (-30.67058, 1.147839), (-30.67058, 0.341358), (-30.60576, 0.341358), (-30.60576, 1.147839), (-30.79432, 1.040559), (-30.797281, 1.134438), (-30.859262, 1.134438), (-30.859262, 1.040559), (-30.756863, 1.033345), (-30.70248, 0.966969), (-30.699516, 1.060852), (-30.733875, 1.050972), (-30.665081, -0.167211), (-30.665081, 0.663768), (-30.688719, 0.663768), (-30.688719, -0.167211), (-30.79432, 1.040559), (-30.739937, 1.106932), (-30.762924, 1.124558), (-30.797281, 1.134438), (-31.617832, -0.118682), (-31.617832, 0.688842), (-31.65129, 0.688842), (-31.651285, -0.118682), (-19.286005, -17.756763), (-19.285044, -17.756763), (-19.285044, -17.75551), (-19.286005, -17.75551), (-7.885072, -17.756763), (-7.88411, -17.756763), (-7.88411, -17.75551), (-7.885072, -17.75551), (-7.892169, -17.756763), (-7.891207, -17.756763), (-7.891207, -17.75551), (-7.892169, -17.75551)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_TelevisionStand_13_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41]
                rel material:binding = </root/_materials/M_TelevisionStand_13_0>
            }

            def GeomSubset "M_TelevisionStand_13_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59]
                rel material:binding = </root/_materials/M_TelevisionStand_13_1>
            }

            def GeomSubset "M_TelevisionStand_13_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [60]
                rel material:binding = </root/_materials/M_TelevisionStand_13_2>
            }

            def GeomSubset "M_TelevisionStand_13_3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [61]
                rel material:binding = </root/_materials/M_TelevisionStand_13_3>
            }

            def GeomSubset "M_TelevisionStand_13_4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [62]
                rel material:binding = </root/_materials/M_TelevisionStand_13_4>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_TelevisionStand_13_0"
        {
            token outputs:surface.connect = </root/_materials/M_TelevisionStand_13_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.5709343, 0.61240906, 0.64705884)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_TelevisionStand_13_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_TelevisionStand_13_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_TelevisionStand_13_1"
        {
            token outputs:surface.connect = </root/_materials/M_TelevisionStand_13_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_TelevisionStand_13_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_TelevisionStand_13_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/MetalBumpy_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_TelevisionStand_13_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/MetalBumpy_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_TelevisionStand_13_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_TelevisionStand_13_2"
        {
            token outputs:surface.connect = </root/_materials/M_TelevisionStand_13_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0, 0, 0)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }

        def Material "M_TelevisionStand_13_3"
        {
            token outputs:surface.connect = </root/_materials/M_TelevisionStand_13_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.5661765, 0.5661765, 0.5661765)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }

        def Material "M_TelevisionStand_13_4"
        {
            token outputs:surface.connect = </root/_materials/M_TelevisionStand_13_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.8, 0.8, 0.8)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 1
                float inputs:specular = 0
                token outputs:surface
            }
        }
    }
}

