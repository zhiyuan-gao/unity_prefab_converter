#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshTelevision_20_0_GeomSubset_4"
    {
        def Mesh "MeshTelevision_20_0_GeomSubset_4"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4]
            int[] faceVertexIndices = [16, 17, 19, 18]
            rel material:binding = </root/_materials/M_Television_20_4>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.000799, -0.032675, 0.038808), (0.000799, -0.032675, 0.038808), (-0.000799, -0.031077, 0.038808), (0.000799, -0.031077, 0.038808), (-0.000799, -0.032675, 0.038808), (0.000799, -0.032675, 0.038808), (-0.000799, -0.031077, 0.038808), (0.000799, -0.031077, 0.038808), (-0.000799, -0.032675, 0.038808), (0.000799, -0.032675, 0.038808), (-0.000799, -0.031077, 0.038808), (0.000799, -0.031077, 0.038808), (-0.000799, -0.032675, 0.038808), (0.000799, -0.032675, 0.038808), (-0.000799, -0.031077, 0.038808), (0.000799, -0.031077, 0.038808), (-0.000799, -0.032675, 0.038808), (0.000799, -0.032675, 0.038808), (-0.000799, -0.031077, 0.038808), (0.000799, -0.031077, 0.038808), (-0.471018, -0.110985, -0.227047), (0.471018, -0.110985, -0.227047), (-0.471018, -0.110985, 0.368608), (0.471018, -0.110985, 0.368608), (-0.471018, -0.0647, 0.368608), (0.471018, -0.0647, 0.368608), (-0.471018, -0.0647, -0.227047), (0.471018, -0.0647, -0.227047), (-0.343675, -0.031876, 0.288087), (0.343674, -0.031876, 0.288087), (0.343674, -0.031876, -0.146527), (-0.343675, -0.031876, -0.146527), (0.622259, -0.0647, -0.227047), (0.622259, -0.110985, -0.227047), (0.622259, -0.0647, 0.368608), (0.622259, -0.110985, 0.368608), (-0.622259, -0.0647, -0.227047), (-0.622259, -0.110985, -0.227047), (-0.622259, -0.110985, 0.368608), (-0.622259, -0.0647, 0.368608), (0.496018, -0.110985, -0.202047), (0.496018, -0.110985, 0.343607), (0.596496, -0.110985, -0.202047), (0.596496, -0.110985, 0.343607), (-0.496018, -0.110985, 0.343607), (-0.596496, -0.110985, 0.343607), (-0.596496, -0.110985, -0.202047), (-0.496018, -0.110985, -0.202047), (0.496018, -0.123171, -0.179334), (0.496018, -0.123171, 0.320894), (0.596496, -0.123171, -0.179334), (0.596496, -0.123171, 0.320894), (-0.496018, -0.123171, 0.320894), (-0.596496, -0.123171, 0.320894), (-0.596496, -0.123171, -0.179334), (-0.496018, -0.123171, -0.179334), (-0.596496, -0.121141, 0.336399), (-0.496018, -0.121141, 0.336399), (-0.496018, -0.121141, -0.194839), (-0.596496, -0.121141, -0.194839), (-0.596496, -0.118266, 0.34216), (-0.496018, -0.118266, 0.34216), (-0.496018, -0.118266, -0.200599), (-0.596496, -0.118266, -0.200599), (0.496018, -0.121141, 0.336399), (0.596496, -0.121141, 0.336399), (0.596496, -0.121141, -0.194839), (0.496018, -0.121141, -0.194839), (0.496018, -0.118266, 0.34216), (0.596496, -0.118266, 0.34216), (0.596496, -0.118266, -0.200599), (0.496018, -0.118266, -0.200599), (-0.43812, -0.099411, -0.190937), (0.438121, -0.099411, -0.190937), (0.438121, -0.099411, 0.332497), (-0.43812, -0.099411, 0.332497), (0, -0.110985, 0.368608), (0, -0.0647, 0.368608), (0, -0.031876, 0.288087), (0, -0.031876, -0.146527), (0, -0.0647, -0.227047), (0, -0.110985, -0.227047), (0, -0.099411, -0.190937), (0, -0.099411, 0.332497), (-0.471018, -0.0647, -0.312324), (0, -0.0647, -0.312324), (0, -0.083159, -0.312324), (-0.471018, -0.083159, -0.312324), (0.471018, -0.0647, -0.312324), (0.471018, -0.083159, -0.312324), (0.622259, -0.0647, -0.312324), (0.622259, -0.083159, -0.312324), (-0.622259, -0.083159, -0.312324), (-0.622259, -0.0647, -0.312324), (-0.622259, -0.110985, -0.241049), (-0.471018, -0.110985, -0.241049), (0, -0.110985, -0.241049), (0.471018, -0.110985, -0.241049), (0.622259, -0.110985, -0.241049), (0.622259, -0.0647, -0.241049), (0.471018, -0.0647, -0.241049), (0, -0.0647, -0.241049), (-0.471018, -0.0647, -0.241049), (-0.622259, -0.0647, -0.241049), (-0.471018, -0.101612, -0.227047), (0, -0.101612, -0.227047), (-0.471018, -0.101612, -0.241049), (0, -0.101612, -0.241049), (0.471018, -0.101612, -0.227047), (0.622259, -0.101612, -0.227047), (0.471018, -0.101612, -0.241049), (0.622259, -0.101612, -0.241049), (-0.622259, -0.101612, -0.227047), (-0.622259, -0.101612, -0.241049), (0.622259, -0.101612, 0.368608), (-0.622259, -0.101612, 0.368608), (0.622259, -0.073785, -0.312324), (0.471018, -0.073785, -0.312324), (0, -0.073785, -0.312324), (-0.471018, -0.073785, -0.312324), (-0.622259, -0.073785, -0.312324), (-0.622259, -0.096678, -0.306303), (-0.471018, -0.096678, -0.306303), (0, -0.096678, -0.306303), (0.471018, -0.096678, -0.306303), (0.622259, -0.096678, -0.306303), (0.622259, -0.087304, -0.306303), (0.622259, -0.0647, -0.306303), (0.471018, -0.0647, -0.306303), (0, -0.0647, -0.306303), (-0.471018, -0.0647, -0.306303), (-0.622259, -0.0647, -0.306303), (-0.622259, -0.087304, -0.306303), (-0.622259, -0.105222, -0.293281), (-0.471018, -0.105222, -0.293281), (0, -0.105222, -0.293281), (0.471018, -0.105222, -0.293281), (0.622259, -0.105222, -0.293281), (0.622259, -0.095849, -0.293281), (0.622259, -0.0647, -0.293281), (0.471018, -0.0647, -0.293281), (0, -0.0647, -0.293281), (-0.471018, -0.0647, -0.293281), (-0.622259, -0.0647, -0.293281), (-0.622259, -0.095849, -0.293281), (-0.622259, -0.110985, -0.275371), (-0.471018, -0.110985, -0.275371), (0, -0.110985, -0.275371), (0.471018, -0.110985, -0.275371), (0.622259, -0.110985, -0.275371), (0.622259, -0.101612, -0.275371), (0.622259, -0.0647, -0.275371), (0.471018, -0.0647, -0.275371), (0, -0.0647, -0.275371), (-0.471018, -0.0647, -0.275371), (-0.622259, -0.0647, -0.275371), (-0.622259, -0.101612, -0.275371), (-0.471018, -0.0647, 0.424253), (0, -0.0647, 0.424253), (0, -0.083159, 0.424253), (-0.471018, -0.083159, 0.424253), (0.471018, -0.0647, 0.424253), (0.471018, -0.083159, 0.424253), (0.622259, -0.0647, 0.424253), (0.622259, -0.083159, 0.424253), (-0.622259, -0.083159, 0.424253), (-0.622259, -0.0647, 0.424253), (0.622259, -0.073785, 0.424253), (0.471018, -0.073785, 0.424253), (0, -0.073785, 0.424253), (-0.471018, -0.073785, 0.424253), (-0.622259, -0.073785, 0.424253), (-0.622259, -0.096678, 0.418237), (-0.471018, -0.096678, 0.418237), (0, -0.096678, 0.418237), (0.471018, -0.096678, 0.418237), (0.622259, -0.096678, 0.418237), (0.622259, -0.087304, 0.418237), (0.622259, -0.0647, 0.418237), (0.471018, -0.0647, 0.418237), (0, -0.0647, 0.418237), (-0.471018, -0.0647, 0.418237), (-0.622259, -0.0647, 0.418237), (-0.622259, -0.087304, 0.418237), (-0.622259, -0.105222, 0.405225), (-0.471018, -0.105222, 0.405225), (0, -0.105222, 0.405225), (0.471018, -0.105222, 0.405225), (0.622259, -0.105222, 0.405225), (0.622259, -0.095849, 0.405225), (0.622259, -0.0647, 0.405225), (0.471018, -0.0647, 0.405225), (0, -0.0647, 0.405225), (-0.471018, -0.0647, 0.405225), (-0.622259, -0.0647, 0.405225), (-0.622259, -0.095849, 0.405225), (-0.622259, -0.110985, 0.387329), (-0.471018, -0.110985, 0.387329), (0, -0.110985, 0.387329), (0.471018, -0.110985, 0.387329), (0.622259, -0.110985, 0.387329), (0.622259, -0.101612, 0.387329), (0.622259, -0.0647, 0.387329), (0.471018, -0.0647, 0.387329), (0, -0.0647, 0.387329), (-0.471018, -0.0647, 0.387329), (-0.622259, -0.0647, 0.387329), (-0.622259, -0.101612, 0.387329), (-0.452032, -0.110985, -0.208062), (-0.442949, -0.107, -0.198014), (0, -0.110985, -0.20757), (0, -0.107219, -0.198125), (0.451541, -0.110985, -0.20757), (0.442949, -0.107, -0.198014), (0.442949, -0.107, 0.339575), (0.451541, -0.110985, 0.34913), (-0.451541, -0.110985, 0.34913), (-0.442949, -0.107, 0.339575), (0, -0.110985, 0.34913), (0, -0.107219, 0.339685)]
            bool[] primvars:sharp_face = [0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-7.173947, -17.520275), (-7.173111, -17.520275), (-7.173111, -17.519438), (-7.173947, -17.519438)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_Television_20_4"
        {
            token outputs:surface.connect = </root/_materials/M_Television_20_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.8, 0.8, 0.8)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 1
                float inputs:specular = 0
                token outputs:surface
            }
        }
    }
}

