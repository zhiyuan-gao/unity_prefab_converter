#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshTelevision_10_0_GeomSubset_1"
    {
        def Mesh "MeshTelevision_10_0_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [4, 5, 7, 6, 58, 59, 60, 61, 60, 59, 62, 63, 20, 21, 27, 26, 22, 23, 29, 28, 65, 64, 58, 61, 21, 24, 30, 27, 67, 66, 63, 62, 25, 22, 28, 31, 26, 27, 59, 58, 28, 29, 61, 60, 27, 30, 62, 59, 31, 28, 60, 63, 20, 26, 58, 64, 29, 23, 65, 61, 25, 31, 63, 66, 30, 24, 67, 62, 64, 65, 71, 70, 66, 67, 73, 72, 106, 107, 122, 123, 108, 109, 125, 124, 110, 111, 126, 127, 112, 113, 129, 128, 114, 115, 131, 130, 116, 117, 132, 133, 118, 119, 135, 134, 120, 121, 136, 137, 123, 122, 124, 125, 127, 126, 128, 129, 130, 131, 133, 132, 134, 135, 137, 136, 122, 68, 69, 124, 128, 126, 130, 132, 134, 136, 123, 125, 68, 133, 131, 69, 137, 135, 70, 71, 127, 129, 72, 73, 107, 56, 68, 122, 57, 108, 124, 69, 111, 114, 130, 126, 117, 112, 128, 132, 121, 106, 123, 136, 109, 118, 134, 125, 56, 116, 133, 68, 115, 57, 69, 131, 119, 64, 70, 135, 65, 120, 137, 71, 113, 66, 72, 129, 67, 110, 127, 73]
            rel material:binding = </root/_materials/M_Television_10_1>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-1, 0, 0), (-1, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (1, 0, 0), (1, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, -2.7156034e-7), (0, 1, -3.5790526e-7), (0, 1, 0), (0, -1, -4.925569e-7), (0, -1, -2.8451973e-7), (0, -1, -1.3259904e-7), (0, -1, -5.28619e-7), (0, -1, 2.2099593e-7), (0, -1, 2.84519e-7), (0, -1, 1.3259849e-7), (0, -1, 1.707133e-7), (0, 1, 0), (0, 1, 2.8973858e-7), (0, 1, 3.818633e-7), (0, 1, 0), (0, -1, 0), (0, -1, -2.7156034e-7), (0, -1, -3.5790526e-7), (0, -1, 0), (0, 1, -2.7156034e-7), (0, 1, 0), (0, 1, 0), (0, 1, -3.5790526e-7), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 2.8973858e-7), (0, 1, 0), (0, 1, 0), (0, 1, 3.818633e-7), (-0.9999709, -0.00014397319, 0.007627666), (-0.008131355, 0, 0.99996686), (-0.008131444, -0.00018306062, 0.99996686), (-0.9999709, 0, 0.0076276064), (0.41672295, 0, -0.9090336), (0.9999708, 0, -0.0076265633), (0.99997085, -3.2838177e-8, -0.007626593), (0.41672295, -3.2458616e-9, -0.9090336), (0.9999709, 0.00014397319, 0.007627666), (0.008131355, 0, 0.99996686), (0.008131444, 0.00018306062, 0.99996686), (0.9999709, 0, 0.0076276064), (-0.99997085, 3.2838177e-8, -0.007626593), (-0.4167738, 3.2507477e-9, -0.90901023), (-0.4167738, 0, -0.90901023), (-0.9999708, 0, -0.0076265633), (-0.008131355, 0, 0.99996686), (0, 0, 1), (0, 0, 1), (-0.008131444, -0.00018306062, 0.99996686), (0.99997085, -3.2838177e-8, -0.007626593), (0.9999708, 0, -0.0076265633), (0.9999709, 0.00014397319, 0.007627666), (0.9999709, 0, 0.0076276064), (-0.99997085, 3.2838177e-8, -0.007626593), (-0.9999708, 0, -0.0076265633), (-0.9999709, -0.00014397319, 0.007627666), (-0.9999709, 0, 0.0076276064), (0, 0, 1), (0.008131444, 0.00018306062, 0.99996686), (0.008131355, 0, 0.99996686), (0, 0, 1), (-0.4167738, 0, -0.90901023), (-0.4167738, 3.2507477e-9, -0.90901023), (0, 0, -1), (0, 0, -1), (0.41672295, 0, -0.9090336), (0.41672295, -3.2458616e-9, -0.9090336), (0, 0, -1), (0, 0, -1), (0, 1, -2.7156034e-7), (0, 1, -6.510521e-7), (0, 1, -6.510521e-7), (0, 1, -3.5790526e-7), (0, -1, -6.510521e-7), (0, -1, -4.925569e-7), (0, -1, -5.28619e-7), (0, -1, -6.510521e-7), (0, -1, 2.84519e-7), (0, -1, 0), (0, -1, 0), (0, -1, 1.3259849e-7), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, -2.8451973e-7), (0, -1, 0), (0, -1, 0), (0, -1, -1.3259904e-7), (0, 1, -6.510521e-7), (0, 1, -2.7156034e-7), (0, 1, -3.5790526e-7), (0, 1, -6.510521e-7), (0, -1, -2.7156034e-7), (0, -1, -6.510521e-7), (0, -1, -6.510521e-7), (0, -1, -3.5790526e-7), (0, -1, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -1, 0), (0, 0.99999994, 6.946335e-7), (0, 1, 2.8973858e-7), (0, 1, 3.818633e-7), (0, 0.99999994, 6.946335e-7), (0, 1, 2.8973858e-7), (0, 0.99999994, 6.946335e-7), (0, 0.99999994, 6.946335e-7), (0, 1, 3.818633e-7), (0, -0.99999994, 0), (0, -1, 2.2099593e-7), (0, -1, 1.707133e-7), (0, -0.99999994, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.000904, -0.036869, 0.050035), (0.000904, -0.036869, 0.050035), (-0.000904, -0.035061, 0.050035), (0.000904, -0.035061, 0.050035), (-0.000904, -0.036869, 0.050035), (0.000904, -0.036869, 0.050035), (-0.000904, -0.035061, 0.050035), (0.000904, -0.035061, 0.050035), (-0.000904, -0.036869, 0.050035), (0.000904, -0.036869, 0.050035), (-0.000904, -0.035061, 0.050035), (0.000904, -0.035061, 0.050035), (-0.000904, -0.036869, 0.050035), (0.000904, -0.036869, 0.050035), (-0.000904, -0.035061, 0.050035), (0.000904, -0.035061, 0.050035), (-0.000904, -0.036869, 0.050035), (0.000904, -0.036869, 0.050035), (-0.000904, -0.035061, 0.050035), (0.000904, -0.035061, 0.050035), (-0.600443, -0.045679, -0.259679), (0, -0.045679, -0.259679), (0, -0.098193, -0.259679), (-0.600443, -0.098193, -0.259679), (0.600443, -0.045679, -0.259679), (0.600443, -0.098193, -0.259679), (-0.600443, -0.045679, -0.299389), (0, -0.045679, -0.299389), (0, -0.098193, -0.299389), (-0.600443, -0.098193, -0.299389), (0.600443, -0.045679, -0.299389), (0.600443, -0.098193, -0.299389), (-0.495931, -0.101349, -0.221358), (0, -0.101349, -0.221358), (0, -0.101349, 0.371314), (-0.495931, -0.101349, 0.371314), (0.495931, -0.101349, -0.221358), (0.495931, -0.101349, 0.371314), (-0.510139, -0.107907, -0.233469), (-0.506374, -0.107383, -0.229563), (-0.502634, -0.105641, -0.226384), (0, -0.107907, -0.233078), (0, -0.107231, -0.229288), (0, -0.105284, -0.225966), (0, -0.107907, 0.383034), (0, -0.107231, 0.379245), (0, -0.105284, 0.375923), (-0.510087, -0.107907, 0.383367), (-0.506371, -0.107391, 0.379513), (-0.50268, -0.10567, 0.376375), (0.510087, -0.107907, -0.233411), (0.506371, -0.107391, -0.229556), (0.50268, -0.10567, -0.226418), (0.510139, -0.107907, 0.383425), (0.506374, -0.107383, 0.37952), (0.502634, -0.105641, 0.37634), (0, -0.092798, 0.409636), (0, -0.052242, 0.409636), (-0.600443, -0.052242, -0.299389), (0, -0.052242, -0.299389), (0, -0.092798, -0.299389), (-0.600443, -0.092798, -0.299389), (0.600443, -0.052242, -0.299389), (0.600443, -0.092798, -0.299389), (-0.600443, -0.052242, -0.259679), (-0.600443, -0.092798, -0.259679), (0.600443, -0.092798, -0.259679), (0.600443, -0.052242, -0.259679), (0, -0.092798, 0.400246), (0, -0.052242, 0.400246), (-0.600443, -0.052242, -0.250289), (-0.600443, -0.092798, -0.250289), (0.600443, -0.092798, -0.250289), (0.600443, -0.052242, -0.250289), (-0.612545, -0.103051, -0.259679), (-0.612545, -0.107907, -0.254822), (-0.617402, -0.103051, -0.254822), (0, -0.103051, -0.259679), (0, -0.107907, -0.254822), (-0.617402, -0.103051, 0.404779), (-0.612545, -0.107907, 0.404779), (-0.612545, -0.103051, 0.409636), (0, -0.107907, 0.404779), (0, -0.103051, 0.409636), (-0.612545, -0.040821, 0.409636), (-0.612545, -0.035965, 0.404779), (-0.617402, -0.040821, 0.404779), (0, -0.035965, 0.404779), (0, -0.040821, 0.409636), (-0.617402, -0.040821, -0.254822), (-0.612545, -0.035965, -0.254822), (-0.612545, -0.040821, -0.259679), (0, -0.035965, -0.254822), (0, -0.040821, -0.259679), (0.617402, -0.103051, -0.254822), (0.612545, -0.107907, -0.254822), (0.612545, -0.103051, -0.259679), (0.612545, -0.103051, 0.409636), (0.612545, -0.107907, 0.404779), (0.617402, -0.103051, 0.404779), (0.617402, -0.040821, 0.404779), (0.612545, -0.035965, 0.404779), (0.612545, -0.040821, 0.409636), (0.612545, -0.040821, -0.259679), (0.612545, -0.035965, -0.254822), (0.617402, -0.040821, -0.254822), (-0.617402, -0.092798, 0.404731), (-0.612497, -0.092798, 0.409636), (-0.612497, -0.052242, 0.409636), (-0.617402, -0.052242, 0.404731), (0.612497, -0.052242, -0.259679), (0.617402, -0.052242, -0.254774), (0.617402, -0.092798, -0.254774), (0.612497, -0.092798, -0.259679), (0.617402, -0.052242, 0.404731), (0.612497, -0.052242, 0.409636), (0.612497, -0.092798, 0.409636), (0.617402, -0.092798, 0.404731), (-0.617402, -0.052242, -0.254774), (-0.612497, -0.052242, -0.259679), (-0.612497, -0.092798, -0.259679), (-0.617402, -0.092798, -0.254774), (-0.606237, -0.092798, 0.400246), (-0.611142, -0.092798, 0.395341), (-0.606237, -0.052242, 0.400246), (-0.611142, -0.052242, 0.395341), (0.611142, -0.052242, -0.245384), (0.606237, -0.052242, -0.250289), (0.611142, -0.092798, -0.245384), (0.606237, -0.092798, -0.250289), (0.611142, -0.052242, 0.395341), (0.606237, -0.052242, 0.400246), (0.611142, -0.092798, 0.395341), (0.606237, -0.092798, 0.400246), (-0.611142, -0.052242, -0.245384), (-0.606237, -0.052242, -0.250289), (-0.611142, -0.092798, -0.245384), (-0.606237, -0.092798, -0.250289)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-30.567411, -18.149475), (-30.566433, -18.149475), (-30.566433, -18.148499), (-30.567411, -18.148499), (-30.811314, 1.498785), (-30.811314, 0.326015), (-30.732105, 0.326015), (-30.732105, 1.498785), (-30.732105, 0.326015), (-30.811314, 0.326015), (-30.811314, -0.846756), (-30.732105, -0.846756), (-30.78001, 1.498698), (-30.78001, 0.326015), (-30.702454, 0.326015), (-30.702454, 1.498698), (-30.673218, 0.326015), (-30.673218, 1.49878), (-30.750772, 1.49878), (-30.750772, 0.326015), (-30.592146, -0.025212), (-30.592146, 0.053997), (-30.669704, 0.053997), (-30.669704, -0.025212), (-30.78001, 0.326015), (-30.78001, -0.846669), (-30.702454, -0.846669), (-30.702454, 0.326015), (-30.559013, -0.022931), (-30.559013, 0.05628), (-30.636572, 0.05628), (-30.636572, -0.022931), (-30.673218, -0.84675), (-30.673218, 0.326015), (-30.750772, 0.326015), (-30.750772, -0.84675), (-30.824135, 1.498785), (-30.824135, 0.326015), (-30.811314, 0.326015), (-30.811314, 1.498785), (-30.721565, 0.326015), (-30.721565, 1.498785), (-30.732105, 1.498785), (-30.732105, 0.326015), (-30.824135, 0.326015), (-30.824135, -0.846756), (-30.811314, -0.846756), (-30.811314, 0.326015), (-30.721565, -0.846756), (-30.721565, 0.326015), (-30.732105, 0.326015), (-30.732105, -0.846756), (-30.592146, 0.066816), (-30.669704, 0.066816), (-30.669704, 0.053997), (-30.592146, 0.053997), (-30.669704, -0.035749), (-30.592146, -0.035749), (-30.592146, -0.025212), (-30.669704, -0.025212), (-30.559013, 0.066817), (-30.636572, 0.066817), (-30.636572, 0.05628), (-30.559013, 0.05628), (-30.636572, -0.03575), (-30.559013, -0.03575), (-30.559013, -0.022931), (-30.636572, -0.022931), (-30.592146, 0.053997), (-30.592146, -0.025212), (-30.573807, -0.025212), (-30.573807, 0.053997), (-30.559013, 0.05628), (-30.559013, -0.022931), (-30.540674, -0.022931), (-30.540674, 0.05628), (-32.016293, 1.541099), (-32.025883, 1.531519), (-32.00754, 1.519292), (-31.997953, 1.528872), (-30.350138, 1.531294), (-30.359718, 1.540873), (-30.378056, 1.528648), (-30.368473, 1.51907), (-31.657213, -0.860925), (-31.647625, -0.870503), (-31.629288, -0.858279), (-31.63888, -0.8487), (-30.72815, -0.87073), (-30.71856, -0.86115), (-30.7369, -0.848923), (-30.74649, -0.858503), (-30.359718, -0.870503), (-30.350138, -0.860925), (-30.368473, -0.8487), (-30.378056, -0.858279), (-32.025883, -0.86115), (-32.016293, -0.87073), (-31.997953, -0.858503), (-32.00754, -0.848923), (-31.647625, 1.540873), (-31.657213, 1.531294), (-31.63888, 1.51907), (-31.629288, 1.528648), (-30.71856, 1.531519), (-30.72815, 1.541099), (-30.74649, 1.528872), (-30.7369, 1.519292), (-30.64281, 0.80485), (-30.64281, 0.81446), (-30.722261, 0.81446), (-30.722261, 0.80485), (-30.613571, -0.460043), (-30.613571, -0.450433), (-30.693024, -0.450433), (-30.693024, -0.460043), (-30.613571, 0.80487), (-30.613571, 0.814479), (-30.693024, 0.814479), (-30.693024, 0.80487), (-30.722261, -0.450414), (-30.722261, -0.460023), (-30.64281, -0.460023), (-30.64281, -0.450414), (-30.844925, 1.513244), (-30.844925, 0.329148), (-30.765717, 0.329148), (-30.765717, 1.513244), (-30.693024, -0.450433), (-30.613571, -0.450433), (-30.613571, 0.80487), (-30.693024, 0.80487), (-30.722261, -0.450414), (-30.64281, -0.450414), (-30.64281, 0.80485), (-30.722261, 0.80485), (-30.844925, 0.329148), (-30.844925, -0.854949), (-30.765717, -0.854949), (-30.765717, 0.329148), (-30.572857, 0.051916), (-30.572857, -0.027315), (-30.561543, -0.027315), (-30.561543, 0.051916), (-30.553078, -0.027283), (-30.553078, 0.051883), (-30.56439, 0.051883), (-30.56439, -0.027283), (-32.025883, 1.531519), (-32.025883, 0.335185), (-32.00754, 0.335185), (-32.00754, 1.519292), (-30.350138, 0.335185), (-30.350138, 1.531294), (-30.368473, 1.51907), (-30.368473, 0.335185), (-31.647625, -0.870503), (-30.359718, -0.870503), (-30.378056, -0.858279), (-31.629288, -0.858279), (-32.016293, -0.87073), (-30.72815, -0.87073), (-30.74649, -0.858503), (-31.997953, -0.858503), (-30.72815, 1.541099), (-32.016293, 1.541099), (-31.997953, 1.528872), (-30.74649, 1.528872), (-30.359718, 1.540873), (-31.647625, 1.540873), (-31.629288, 1.528648), (-30.378056, 1.528648), (-32.025883, 0.335185), (-32.025883, -0.86115), (-32.00754, -0.848923), (-32.00754, 0.335185), (-30.350138, -0.860925), (-30.350138, 0.335185), (-30.368473, 0.335185), (-30.368473, -0.8487), (-31.657213, 1.531294), (-31.657213, 1.507756), (-31.63888, 1.507756), (-31.63888, 1.51907), (-30.71856, 1.507976), (-30.71856, 1.531519), (-30.7369, 1.519292), (-30.7369, 1.507976), (-30.71856, -0.86115), (-30.71856, -0.837607), (-30.7369, -0.837607), (-30.7369, -0.848923), (-31.657213, -0.837386), (-31.657213, -0.860925), (-31.63888, -0.8487), (-31.63888, -0.837386)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_Television_10_1"
        {
            token outputs:surface.connect = </root/_materials/M_Television_10_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_Television_10_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_Television_10_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Television_10_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Television_10_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

