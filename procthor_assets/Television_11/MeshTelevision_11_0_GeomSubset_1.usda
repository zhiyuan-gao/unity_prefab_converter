#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshTelevision_11_0_GeomSubset_1"
    {
        def Mesh "MeshTelevision_11_0_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [4, 5, 7, 6, 136, 156, 157, 140, 137, 138, 142, 141, 161, 139, 143, 160, 139, 136, 140, 143, 140, 157, 158, 144, 141, 142, 146, 145, 160, 143, 147, 159, 143, 140, 144, 147, 175, 156, 136, 151, 138, 137, 150, 153, 139, 161, 162, 155, 136, 139, 155, 151, 156, 137, 141, 157, 158, 157, 141, 145, 142, 160, 159, 146, 138, 161, 160, 142, 162, 161, 138, 153, 137, 156, 175, 150]
            rel material:binding = </root/_materials/M_Television_11_1>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, -8.042612e-8), (0, -1, -8.042612e-8), (0, -1, 0), (0, -1, -6.7189326e-8), (0, -1, 6.7189646e-8), (0, -1, 8.484045e-8), (0, -1, -8.483859e-8), (0, -1, 8.042758e-8), (0, -1, 0), (0, -1, 0), (0, -1, 8.042758e-8), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.7208101, 0.6931327), (0, -0.72080976, 0.69313294), (0, -0.72080976, 0.69313294), (0, -0.7208101, 0.6931327), (-0.69704837, -0.7170242, 0), (-0.69704837, -0.7170242, 0), (-0.69704837, -0.7170242, 0), (-0.69704837, -0.7170242, 0), (0, -0.7208443, -0.6930971), (0, -0.72084457, -0.69309676), (0, -0.72084457, -0.69309676), (0, -0.7208443, -0.6930971), (0.6970116, -0.7170599, 0), (0.6970116, -0.7170599, 0), (0.6970116, -0.7170599, 0), (0.6970116, -0.7170599, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (0, -1, -8.042612e-8), (0, -1, -6.7189326e-8), (0, -1, -8.483859e-8), (0, -1, -8.042612e-8), (0, -0.72080976, 0.69313294), (0, -0.72080976, 0.69313294), (0, -0.7208095, 0.69313323), (0, -0.7208095, 0.69313323), (0, -0.720844, -0.69309735), (0, -0.7208443, -0.6930971), (0, -0.7208443, -0.6930971), (0, -0.720844, -0.69309735), (0, -1, 6.7189646e-8), (0, -1, 8.042758e-8), (0, -1, 8.042758e-8), (0, -1, 8.484045e-8), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.000799, -0.01816, 0.051008), (0.000799, -0.01816, 0.051008), (-0.000799, -0.016561, 0.051008), (0.000799, -0.016561, 0.051008), (-0.000799, -0.01816, 0.051008), (0.000799, -0.01816, 0.051008), (-0.000799, -0.016561, 0.051008), (0.000799, -0.016561, 0.051008), (-0.000799, -0.01816, 0.051008), (0.000799, -0.01816, 0.051008), (-0.000799, -0.016561, 0.051008), (0.000799, -0.016561, 0.051008), (-0.000799, -0.01816, 0.051008), (0.000799, -0.01816, 0.051008), (-0.000799, -0.016561, 0.051008), (0.000799, -0.016561, 0.051008), (-0.000799, -0.01816, 0.051008), (0.000799, -0.01816, 0.051008), (-0.000799, -0.016561, 0.051008), (0.000799, -0.016561, 0.051008), (-0.471018, -0.146875, -0.22806), (0.471018, -0.146875, -0.22806), (-0.471018, -0.146875, 0.379962), (0.471018, -0.146875, 0.379962), (-0.471018, -0.100591, 0.379962), (0.471018, -0.100591, 0.379962), (-0.471018, -0.100591, -0.22806), (0.471018, -0.100591, -0.22806), (-0.343674, -0.01736, 0.293258), (0.343674, -0.01736, 0.293258), (0.343674, -0.01736, -0.141356), (-0.343674, -0.01736, -0.141356), (0.60383, -0.100591, -0.22806), (0.60383, -0.146875, -0.22806), (0.60383, -0.100591, 0.379962), (0.60383, -0.146875, 0.379962), (-0.60383, -0.100591, -0.22806), (-0.60383, -0.146875, -0.22806), (-0.60383, -0.146875, 0.379962), (-0.60383, -0.100591, 0.379962), (0.492216, -0.171885, -0.22806), (0.492216, -0.171885, 0.379962), (0.582633, -0.171885, -0.22806), (0.582633, -0.171885, 0.379962), (-0.494018, -0.171807, 0.379962), (-0.580829, -0.171807, 0.379962), (-0.580829, -0.171807, -0.22806), (-0.494018, -0.171807, -0.22806), (0.537425, -0.171885, 0.379962), (0.537424, -0.100591, 0.379962), (0.537424, -0.100591, -0.22806), (0.537425, -0.171885, -0.22806), (-0.537423, -0.171807, 0.379962), (-0.537423, -0.171807, -0.22806), (-0.537424, -0.100591, -0.22806), (-0.537424, -0.100591, 0.379962), (0.471018, -0.15462, -0.22806), (0.477421, -0.163652, -0.22806), (0.471018, -0.15462, 0.379962), (0.477421, -0.163652, 0.379962), (0.60383, -0.15462, -0.22806), (0.597428, -0.163652, -0.22806), (0.597428, -0.163652, 0.379962), (0.60383, -0.15462, 0.379962), (-0.471018, -0.15449, 0.379962), (-0.477672, -0.163308, 0.379962), (-0.60383, -0.15449, 0.379962), (-0.597175, -0.163308, 0.379962), (-0.597175, -0.163307, -0.22806), (-0.60383, -0.154488, -0.22806), (-0.471018, -0.154488, -0.22806), (-0.477672, -0.163307, -0.22806), (-0.471018, -0.146875, 0.407046), (0.471018, -0.146875, 0.407046), (0.471018, -0.100591, 0.407046), (-0.471018, -0.100591, 0.407046), (0.343674, -0.01736, 0.314158), (-0.343674, -0.01736, 0.314158), (0.537424, -0.146875, 0.407046), (0.537424, -0.100591, 0.407046), (-0.537424, -0.100591, 0.407046), (-0.537424, -0.146875, 0.407046), (0.60383, -0.146875, 0.407046), (0.60383, -0.100591, 0.407046), (-0.60383, -0.100591, 0.407046), (-0.60383, -0.146875, 0.407046), (0.477421, -0.163652, 0.407046), (0.471018, -0.15462, 0.407046), (0.537424, -0.163652, 0.407046), (0.537425, -0.15462, 0.407046), (0.60383, -0.15462, 0.407046), (0.597428, -0.163652, 0.407046), (-0.471018, -0.15449, 0.407046), (-0.477672, -0.163308, 0.407046), (-0.537424, -0.15449, 0.407046), (-0.537424, -0.163308, 0.407046), (-0.60383, -0.15449, 0.407046), (-0.597175, -0.163308, 0.407046), (0.492216, -0.171885, 0.407046), (0.537425, -0.171885, 0.407046), (-0.537423, -0.171806, 0.407046), (-0.494018, -0.171806, 0.407046), (0.582633, -0.171885, 0.407046), (-0.580829, -0.171806, 0.407046), (-0.471018, -0.100591, -0.255143), (0.471018, -0.100591, -0.255143), (0.471018, -0.146875, -0.255143), (-0.471018, -0.146875, -0.255143), (-0.343674, -0.01736, -0.162255), (0.343674, -0.01736, -0.162255), (0.537424, -0.100591, -0.255143), (0.537424, -0.146875, -0.255143), (-0.537424, -0.146875, -0.255143), (-0.537424, -0.100591, -0.255143), (0.60383, -0.100591, -0.255143), (0.60383, -0.146875, -0.255143), (-0.60383, -0.146875, -0.255143), (-0.60383, -0.100591, -0.255143), (0.471018, -0.15462, -0.255143), (0.477421, -0.163652, -0.255143), (0.537425, -0.15462, -0.255143), (0.537424, -0.163652, -0.255143), (0.60383, -0.15462, -0.255143), (0.597428, -0.163652, -0.255143), (-0.60383, -0.154488, -0.255143), (-0.597175, -0.163307, -0.255143), (-0.537424, -0.154488, -0.255143), (-0.537424, -0.163307, -0.255143), (-0.477672, -0.163307, -0.255143), (-0.471018, -0.154488, -0.255143), (0.537425, -0.171885, -0.255143), (0.492216, -0.171885, -0.255143), (-0.494018, -0.171806, -0.255143), (-0.537423, -0.171806, -0.255143), (0.582633, -0.171885, -0.255143), (-0.580829, -0.171807, -0.255143), (-0.464018, -0.146875, -0.22106), (0.464018, -0.146875, -0.22106), (0.464018, -0.146875, 0.372962), (-0.464018, -0.146875, 0.372962), (-0.393891, -0.146875, -0.167069), (0.393892, -0.146875, -0.167069), (0.393892, -0.146875, 0.318972), (-0.393891, -0.146875, 0.318972), (-0.384126, -0.137383, -0.157198), (0.384128, -0.137383, -0.157198), (0.384128, -0.137383, 0.3091), (-0.384126, -0.137383, 0.3091), (-0.471018, -0.142535, -0.22806), (0.471018, -0.142535, -0.22806), (0.464018, -0.142535, -0.22106), (-0.464018, -0.142535, -0.22106), (0.471018, -0.142535, 0.379962), (0.464018, -0.142535, 0.372962), (-0.471018, -0.142535, 0.379962), (-0.464018, -0.142535, 0.372962), (0, -0.146875, -0.22106), (0, -0.146875, -0.167069), (0.000001, -0.137383, -0.157198), (0.000001, -0.137383, 0.3091), (0, -0.146875, 0.318972), (0, -0.146875, 0.372962), (0, -0.142535, 0.372962), (0, -0.142535, 0.379962), (0, -0.146875, 0.379962), (0, -0.146875, 0.407046), (0, -0.100591, 0.407046), (0, -0.01736, 0.314158), (0, -0.01736, 0.293258), (0, -0.01736, -0.141356), (0, -0.01736, -0.162255), (0, -0.100591, -0.255143), (0, -0.146875, -0.255143), (0, -0.146875, -0.22806), (0, -0.142535, -0.22806), (0, -0.142535, -0.22106)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-30.865372, -18.17474), (-30.863657, -18.17474), (-30.863657, -18.173025), (-30.865372, -18.173025), (-31.829405, 1.428593), (-31.829405, 0.5), (-31.72136, 0.5), (-31.72136, 1.288256), (-31.829405, -0.428593), (-30.640646, -0.428593), (-30.748692, -0.288256), (-31.72136, -0.288256), (-30.640646, 0.5), (-30.640646, 1.428593), (-30.748692, 1.288256), (-30.748692, 0.5), (-30.640646, 1.428593), (-31.829405, 1.428593), (-31.72136, 1.288256), (-30.748692, 1.288256), (-31.72136, 1.288256), (-31.72136, 0.5), (-31.701607, 0.499999), (-31.701607, 1.268714), (-31.72136, -0.288256), (-30.748692, -0.288256), (-30.768448, -0.268716), (-31.701607, -0.268716), (-30.748692, 0.5), (-30.748692, 1.288256), (-30.768448, 1.268714), (-30.768448, 0.499999), (-30.748692, 1.288256), (-31.72136, 1.288256), (-31.701607, 1.268714), (-30.768448, 1.268714), (-30.911684, 0.5), (-30.903208, 0.5), (-30.903208, 1.406342), (-30.911684, 1.406342), (-30.889482, 0.900908), (-30.889482, -0.259388), (-30.881006, -0.259388), (-30.881006, 0.900908), (-30.900583, 1.406359), (-30.900583, 0.5), (-30.892107, 0.5), (-30.892107, 1.406359), (-30.869905, -0.259277), (-30.869905, 0.900797), (-30.878382, 0.900797), (-30.878382, -0.259277), (-31.829405, 0.5), (-31.829405, -0.428593), (-31.72136, -0.288256), (-31.72136, 0.5), (-31.701607, 0.499999), (-31.72136, 0.5), (-31.72136, -0.288256), (-31.701607, -0.268716), (-30.748692, -0.288256), (-30.748692, 0.5), (-30.768448, 0.499999), (-30.768448, -0.268716), (-30.640646, -0.428593), (-30.640646, 0.5), (-30.748692, 0.5), (-30.748692, -0.288256), (-30.892107, 0.5), (-30.900583, 0.5), (-30.900583, -0.406359), (-30.892107, -0.406359), (-30.903208, -0.406342), (-30.903208, 0.5), (-30.911684, 0.5), (-30.911684, -0.406342)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_Television_11_1"
        {
            token outputs:surface.connect = </root/_materials/M_Television_11_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_Television_11_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_Television_11_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/MetalBumpy_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Television_11_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/MetalBumpy_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Television_11_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

