#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "DrawermeshCoffeeTableDrawer_203_4_4_GeomSubset_0"
    {
        def Mesh "DrawermeshCoffeeTableDrawer_203_4_4_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 2, 1, 0, 3, 2, 1, 2, 4, 1, 4, 5, 5, 4, 6, 5, 6, 7, 7, 3, 0, 7, 6, 3, 5, 8, 1, 5, 9, 8, 9, 10, 8, 9, 11, 10, 11, 0, 10, 11, 7, 0, 5, 11, 9, 5, 7, 11, 8, 0, 1, 8, 10, 0, 2, 12, 4, 2, 13, 12, 14, 15, 13, 14, 16, 15, 3, 14, 13, 3, 13, 2, 15, 17, 13, 15, 18, 17, 19, 17, 18, 19, 18, 20, 21, 17, 19, 21, 22, 17, 6, 14, 3, 6, 23, 14, 23, 16, 14, 23, 24, 16, 4, 23, 6, 4, 12, 23, 12, 24, 23, 12, 25, 24, 12, 26, 25, 12, 27, 26, 27, 28, 26, 27, 29, 28, 30, 29, 27, 30, 31, 29, 24, 15, 16, 24, 25, 15, 25, 18, 15, 25, 26, 18, 28, 18, 26, 28, 20, 18, 17, 26, 18, 17, 27, 26, 22, 27, 17, 22, 30, 27, 13, 27, 12, 13, 17, 27, 32, 22, 21, 32, 33, 22, 33, 30, 22, 33, 34, 30, 34, 31, 30, 34, 35, 31, 35, 21, 31, 35, 32, 21, 34, 37, 36, 34, 33, 37, 36, 39, 38, 36, 37, 39, 38, 32, 35, 38, 39, 32, 34, 38, 35, 34, 36, 38, 37, 32, 39, 37, 33, 32, 31, 19, 29, 31, 21, 19, 29, 19, 20, 29, 20, 28]
            rel material:binding = </root/_materials/M_CoffeeTableDrawer_203_4_0>
            normal3f[] normals = [(0, -1, -0.0000017122279), (0, -1, -7.9797906e-7), (0, -1, 5.8994937e-7), (0, -1, -0.0000017122279), (0, -1, -0.000005171357), (0, -1, -7.9797906e-7), (0, -1, 5.8994937e-7), (0, -1, -7.9797906e-7), (0, -1, -0.000004747202), (0, -1, 5.8994937e-7), (0, -1, -0.000004747202), (0, -1, -5.355418e-7), (0, -1, -5.355418e-7), (0, -1, -0.000004747202), (0, -1, -2.942339e-7), (0, -1, -5.355418e-7), (0, -1, -2.942339e-7), (0, -1, 1.3829379e-7), (0, -1, 1.3829379e-7), (0, -1, -0.000005171357), (0, -1, -0.0000017122279), (0, -1, 1.3829379e-7), (0, -1, -2.942339e-7), (0, -1, -0.000005171357), (-1, 0, 0.00035514196), (-0.99999994, 0, 0.00035511766), (-1, 0, 0.0003551171), (-1, 0, 0.00035514196), (-0.99999994, 0, 0.0003551425), (-0.99999994, 0, 0.00035511766), (0, 1, 1.03887636e-7), (0, 1, 1.9201366e-7), (0, 1, 0), (0, 1, 1.03887636e-7), (0, 1, 2.9590475e-7), (0, 1, 1.9201366e-7), (0.99999994, 0, -0.00035380604), (0.99999994, 0, -0.00035385496), (0.99999994, 0, -0.00035385613), (0.99999994, 0, -0.00035380604), (1, 0, -0.00035380494), (0.99999994, 0, -0.00035385496), (0.00035406993, 0, 0.99999994), (0.00035458096, 0, 0.99999994), (0.00035406277, 0, 0.99999994), (0.00035406993, 0, 0.99999994), (0.00035458815, 0, 0.99999994), (0.00035458096, 0, 0.99999994), (-0.00032721667, 0, -1), (-0.0003271757, 0, -1), (-0.00032721722, 0, -0.99999994), (-0.00032721667, 0, -1), (-0.0003271751, 0, -0.99999994), (-0.0003271757, 0, -1), (-0.99999994, 0, 0.000350942), (-1, 0, 0.00035094362), (-1, 0, 0.00035094153), (-0.99999994, 0, 0.000350942), (-0.9999999, 0, 0.0003509441), (-1, 0, 0.00035094362), (-0.00035831908, 0, -0.99999994), (-0.00035205277, 0, -0.99999994), (-0.0003542486, 0, -1), (-0.00035831908, 0, -0.99999994), (-0.00035797514, 0, -1), (-0.00035205277, 0, -0.99999994), (-0.00035847718, 0, -0.99999994), (-0.00035831908, 0, -0.99999994), (-0.0003542486, 0, -1), (-0.00035847718, 0, -0.99999994), (-0.0003542486, 0, -1), (-0.00035847744, 0, -0.99999994), (-0.00035205277, 0, -0.99999994), (-0.00034526223, 0, -0.99999994), (-0.0003542486, 0, -1), (-0.0003452445, 0, -0.9999999), (-0.0003452445, 0, -0.9999999), (-0.0003452445, 0, -0.9999999), (-0.00035964817, 0, -0.99999994), (-0.0003592142, 0, -0.99999994), (-0.00035906569, 0, -1), (-0.00035897727, 0, -0.9999999), (-0.00035897727, 0, -0.9999999), (-0.00035897727, 0, -0.9999999), (-0.00035882927, 0, -1), (-0.0003592142, 0, -0.99999994), (-0.00035964817, 0, -0.99999994), (-0.00035882927, 0, -1), (-0.00035843847, 0, -0.9999999), (-0.0003592142, 0, -0.99999994), (0.99999994, 0, -0.00035094185), (0.99999994, 0, -0.0003509472), (1, 0, -0.00035094153), (0.99999994, 0, -0.00035094185), (0.99999994, 0, -0.00035094298), (0.99999994, 0, -0.0003509472), (0.99999994, 0, -0.00035094298), (1, 0, -0.00035094807), (0.99999994, 0, -0.0003509472), (0.99999994, 0, -0.00035094298), (1, 0, -0.00035093926), (1, 0, -0.00035094807), (0.0003590272, 0, 1), (0.00035810543, 0, 0.99999994), (0.00035967142, 0, 1), (0.0003590272, 0, 1), (0.00035359396, 0, 1), (0.00035810543, 0, 0.99999994), (0.00035359396, 0, 1), (0.0003580473, 0, 0.99999994), (0.00035810543, 0, 0.99999994), (0.00035359396, 0, 1), (0.00035161705, 0, 1), (0.0003580473, 0, 0.99999994), (0.00035359396, 0, 1), (0.00034525897, 0, 0.99999994), (0.00035161705, 0, 1), (0.00034526357, 0, 0.9999999), (0.00034526357, 0, 0.9999999), (0.00034526357, 0, 0.9999999), (0.00035908923, 0, 0.99999994), (0.00035908923, 0, 0.99999994), (0.00035908923, 0, 0.99999994), (0.00035840302, 0, 0.99999994), (0.00035826382, 0, 0.99999994), (0.00035806326, 0, 0.99999994), (0.0003584644, 0, 0.99999994), (0.00035826382, 0, 0.99999994), (0.00035840302, 0, 0.99999994), (0.0003584644, 0, 0.99999994), (0.00035846446, 0, 1), (0.00035826382, 0, 0.99999994), (0, -1, -2.9704813e-7), (0, -1, 0.000004357342), (0, -1, 0), (0, -1, -2.9704813e-7), (0, -1, 0.0000041903827), (0, -1, 0.000004357342), (0, -1, 0.0000041903827), (0, -0.99999994, 0.000009263714), (0, -1, 0.000004357342), (0, -1, -0.0000040741797), (0, -1, -0.0000040741797), (0, -1, -0.0000040741797), (0, -1, -0.000002331512), (0, -1, -0.0000043095656), (0, -1, -0.0000066412517), (0, -1, -0.000002331512), (0, -1, 0), (0, -1, -0.0000043095656), (0.99999994, 0, -0.0003474684), (0.99999994, 0, -0.00034747098), (1, 0, -0.00034746676), (0.99999994, 0, -0.0003474684), (0.9999999, 0, -0.00034747264), (0.99999994, 0, -0.00034747098), (0.99999994, 0, -0.00034746778), (0.99999994, 0, -0.00034746778), (0.99999994, 0, -0.00034746775), (0.99999994, 0, -0.00034746778), (0.99999994, 0, -0.00034746775), (0.99999994, 0, -0.00034746778), (-0.0000013110032, 1, 0), (-0.0000013110032, 1, 0), (-0.0000013110032, 1, 0), (-0.0000013110042, 1, 3.0475692e-7), (-0.0000013110042, 1, 3.0475692e-7), (-0.0000013110042, 1, 3.0475692e-7), (0, -1, 0.0000019552288), (0, -1, -0.0000021807937), (0, -1, 0.0000053521762), (0, -1, 0.0000019552288), (0, -1, -0.0000019362349), (0, -1, -0.0000021807937), (0, -1, -0.0000019362349), (0, -1, -0.000005260492), (0, -1, -0.0000021807937), (0, -1, -0.0000019362349), (0, -1, -7.784883e-7), (0, -1, -0.000005260492), (0, -1, -7.784883e-7), (0, -1, 5.640664e-7), (0, -1, -0.000005260492), (0, -1, -7.784883e-7), (0, -1, 0.0000017765822), (0, -1, 5.640664e-7), (0, -1, 0.0000017765822), (0, -1, 0.0000053521762), (0, -1, 5.640664e-7), (0, -1, 0.0000017765822), (0, -1, 0.0000019552288), (0, -1, 0.0000053521762), (1, 0, -0.00031028647), (0.99999994, 0, -0.00031024736), (0.9999999, 0, -0.00031028732), (1, 0, -0.00031028647), (0.99999994, 0, -0.00031024648), (0.99999994, 0, -0.00031024736), (-0.000008219588, 1, 0.000012613107), (0.000008219033, 1, -0.000012930044), (0.000027596192, 1, -0.00004303924), (-0.000008219588, 1, 0.000012613107), (-0.000027597362, 1, 0.00004272326), (0.000008219033, 1, -0.000012930044), (-0.99999994, 0, 0.00031023382), (-1, 0, 0.00031027274), (-1, 0, 0.00031023295), (-0.99999994, 0, 0.00031023382), (-0.99999994, 0, 0.0003102736), (-1, 0, 0.00031027274), (0.00035400252, 0, 0.99999994), (0.00035408445, 0, 1), (0.00035408555, 0, 0.99999994), (0.00035400252, 0, 0.99999994), (0.00035400141, 0, 0.99999994), (0.00035408445, 0, 1), (-0.0003271879, 0, -1), (-0.0003265984, 0, -0.99999994), (-0.00032659015, 0, -0.99999994), (-0.0003271879, 0, -1), (-0.00032719618, 0, -0.99999994), (-0.0003265984, 0, -0.99999994), (-0.99999994, 0, 0.00046560742), (-0.99999994, 0, 0.00046561137), (-0.99999994, 0, 0.00046560678), (-0.99999994, 0, 0.00046560742), (-0.9999999, 0, 0.00046560756), (-0.99999994, 0, 0.00046561137), (-0.99999994, 0, 0.00046560678), (-0.99999994, 0, 0.00046561137), (-0.99999994, 0, 0.00046561236), (-0.99999994, 0, 0.00046560678), (-0.99999994, 0, 0.00046561236), (-0.9999999, 0, 0.0004656032)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.414784, 0.342658, 0.096265), (-0.378088, 0.342658, 0.096253), (-0.389467, 0.342658, 0.089258), (-0.40341, 0.342658, 0.089263), (-0.38947, 0.342658, 0.080681), (-0.378096, 0.342658, 0.073679), (-0.403413, 0.342658, 0.080686), (-0.414792, 0.342658, 0.073692), (-0.378088, 0.341869, 0.096253), (-0.378096, 0.341869, 0.073679), (-0.414784, 0.341869, 0.096265), (-0.414792, 0.341869, 0.073692), (-0.38947, 0.370328, 0.080681), (-0.389467, 0.370328, 0.089258), (-0.40341, 0.370328, 0.089263), (-0.389467, 0.374398, 0.089258), (-0.40341, 0.374398, 0.089263), (0.360703, 0.370329, 0.088999), (0.360703, 0.374398, 0.088999), (0.374647, 0.370328, 0.088994), (0.374647, 0.374398, 0.088994), (0.374647, 0.342658, 0.088994), (0.360703, 0.342658, 0.088999), (-0.403413, 0.370329, 0.080686), (-0.403413, 0.374398, 0.080686), (-0.38947, 0.374398, 0.080681), (0.3607, 0.374398, 0.080422), (0.3607, 0.370329, 0.080422), (0.374643, 0.374398, 0.080417), (0.374643, 0.370329, 0.080417), (0.3607, 0.342658, 0.080422), (0.374643, 0.342658, 0.080417), (0.386025, 0.342658, 0.095989), (0.349328, 0.342658, 0.096001), (0.349321, 0.342658, 0.073428), (0.386018, 0.342658, 0.073415), (0.349321, 0.34187, 0.073428), (0.349328, 0.341869, 0.096001), (0.386018, 0.341869, 0.073415), (0.386025, 0.34187, 0.095989), (0.544905, 0.33785, 0.148381), (0.544905, 0.329748, 0.148381), (0.544856, 0.329748, 0.005668), (0.544856, 0.33785, 0.005668), (0.514828, 0.050697, 0.139961), (0.514787, 0.050697, 0.02113), (-0.515206, 0.050697, 0.021486), (-0.515165, 0.050697, 0.140317), (0.514827, 0.308102, 0.139961), (0.514786, 0.308102, 0.02113), (-0.541076, 0.33785, 0.152917), (-0.541076, 0.329748, 0.152917), (0.540746, 0.329748, 0.152544), (0.540746, 0.33785, 0.152544), (-0.532693, 0.325587, 0.014472), (-0.532693, 0.033212, 0.014472), (-0.532649, 0.033212, 0.140323), (-0.532649, 0.325587, 0.140323), (0.540696, 0.342011, 0.00567), (-0.541126, 0.342011, 0.006044), (-0.541077, 0.342011, 0.148757), (0.540744, 0.342011, 0.148383), (-0.545287, 0.33785, 0.006045), (-0.545287, 0.329748, 0.006045), (-0.545238, 0.329748, 0.148758), (-0.545238, 0.33785, 0.148758), (0.540694, 0.33785, 0.001509), (0.540694, 0.329748, 0.001509), (-0.541128, 0.329748, 0.001883), (-0.541128, 0.33785, 0.001883), (0.540696, 0.325587, 0.00567), (-0.541126, 0.325587, 0.006044), (-0.541077, 0.325587, 0.148757), (0.540744, 0.325587, 0.148383), (0.532268, 0.325587, 0.014104), (0.532311, 0.325587, 0.139955), (0.532268, 0.033212, 0.014104), (0.532311, 0.033213, 0.139955), (-0.515165, 0.308102, 0.140317), (-0.515206, 0.308102, 0.021485)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_CoffeeTableDrawer_203_4_0"
        {
            token outputs:surface.connect = </root/_materials/M_CoffeeTableDrawer_203_4_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CoffeeTableDrawer_203_4_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_CoffeeTableDrawer_203_4_0/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CoffeeTableDrawer_203_4_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CoffeeTableDrawer_203_4_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

