#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshRobothorWallDecor_4_3_0_GeomSubset_0"
    {
        def Mesh "MeshRobothorWallDecor_4_3_0_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 3, 3]
            int[] faceVertexIndices = [0, 1, 3, 2, 28, 30, 29, 28, 31, 30]
            rel material:binding = </root/_materials/M_RobothorWallDecor_4_3_0>
            normal3f[] normals = [(0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (-0.000010935175, 0.99999994, 0.00033542552), (-0.000010935173, 0.99999994, 0.0003348325), (0.00001072862, 0.99999994, 0.00033482988), (-0.000010935175, 0.99999994, 0.00033542552), (0.00001072874, 0.99999994, 0.0003351078), (-0.000010935173, 0.99999994, 0.0003348325)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.002091, 0.004241, -0.604952), (-0.002697, 0.004241, -0.604952), (-0.002091, 0.004847, -0.604952), (-0.002697, 0.004847, -0.604952), (-0.002091, 0.004241, -0.604952), (-0.002697, 0.004241, -0.604952), (-0.002091, 0.004847, -0.604952), (-0.002697, 0.004847, -0.604952), (-0.002091, 0.004241, -0.604952), (-0.002697, 0.004241, -0.604952), (-0.002091, 0.004847, -0.604952), (-0.002697, 0.004847, -0.604952), (0.401234, -0.018177, -0.301602), (0.401234, 0.004753, -0.301594), (0.401234, 0.004544, 0.304006), (0.401234, -0.018386, 0.303998), (-0.405875, 0.004753, -0.301594), (-0.405875, 0.004544, 0.304006), (-0.405875, -0.018177, -0.301602), (-0.405875, -0.018386, 0.303998), (-0.390626, -0.018383, 0.287408), (-0.390626, -0.012548, 0.287409), (0.385985, -0.012548, 0.287409), (0.385985, -0.018383, 0.287408), (0.385985, -0.018181, -0.285012), (-0.390626, -0.018181, -0.285012), (-0.390626, -0.012346, -0.28501), (0.385985, -0.012346, -0.28501), (-0.385942, -0.012347, -0.281764), (0.381301, -0.012347, -0.281764), (0.381301, -0.012547, 0.284163), (-0.385942, -0.012547, 0.284163)]
            bool[] primvars:sharp_face = [0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-9.379675, -9.755536), (-9.379675, -9.75594), (-9.379271, -9.75594), (-9.379271, -9.755536), (-9, 0), (-10, 1), (-10, 0), (-9, 0), (-9, 1), (-10, 1)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_RobothorWallDecor_4_3_0"
        {
            token outputs:surface.connect = </root/_materials/M_RobothorWallDecor_4_3_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_RobothorWallDecor_4_3_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/convergence.jpg@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_RobothorWallDecor_4_3_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

