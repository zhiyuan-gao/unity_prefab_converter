#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshRobothorBedHemnesDayDrawer_1_3_GeomSubset_0"
    {
        def Mesh "MeshRobothorBedHemnesDayDrawer_1_3_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 2, 3, 3, 4, 5, 0, 1, 0, 5, 6, 2, 1, 6, 7, 3, 2, 7, 4, 5, 4, 169, 170, 6, 5, 170, 171, 7, 6, 171, 172, 4, 7, 172, 169, 170, 190, 182, 174, 171, 170, 174, 175, 172, 171, 175, 176, 169, 172, 176, 173, 186, 185, 187, 188, 175, 174, 178, 179, 176, 175, 179, 180, 173, 176, 180, 177, 178, 177, 180, 179, 173, 177, 183, 181, 177, 178, 184, 183, 178, 174, 182, 184, 182, 181, 185, 186, 181, 183, 187, 185, 183, 184, 188, 187, 184, 182, 186, 188, 181, 189, 169, 173, 170, 169, 189, 190, 190, 189, 181, 182]
            rel material:binding = </root/_materials/M_RobothorBedHemnesDayDrawer_1_0>
            normal3f[] normals = [(-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.92923737, -7.6836255e-7, -0.36948332), (-0.92923737, -7.6836255e-7, -0.36948332), (-0.92923737, -7.6836255e-7, -0.36948332), (-0.92923737, -7.6836255e-7, -0.36948332), (-0.92946273, -0.36891603, 0), (-0.92946273, -0.36891603, 0), (-0.92946273, -0.36891603, 0), (-0.92946273, -0.36891603, 0), (-0.9291862, -5.972011e-7, 0.36961186), (-0.9291862, -5.972011e-7, 0.36961186), (-0.9291862, -5.972011e-7, 0.36961186), (-0.9291862, -5.972011e-7, 0.36961186), (-0.928955, 0.37019256, 0.00002124884), (-0.928955, 0.37019256, 0.00002124884), (-0.928955, 0.37019256, 0.00002124884), (-0.928955, 0.37019256, 0.00002124884), (-1.08777215e-7, 0, -1), (-1.08777215e-7, 0, -1), (-1.08777215e-7, 0, -1), (-1.08777215e-7, 0, -1), (0.00007224014, -1, 0), (0.00007224014, -1, 0), (0.00007224014, -1, 0), (0.00007224014, -1, 0), (-8.7026285e-7, -0.0000016112946, 1), (-8.7026285e-7, -0.0000016112946, 1), (-8.7026285e-7, -0.0000016112946, 1), (-8.7026285e-7, -0.0000016112946, 1), (0, 1, 0.00005362119), (0, 1, 0.00005362119), (0, 1, 0.00005362119), (0, 1, 0.00005362119), (1, -0.0000059447525, -0.000017543147), (1, -0.0000031629984, -0.000037137095), (1, -0.0000030735923, -0.000047391113), (1, -0.0000075373437, -0.000023897155), (1, -0.0000015177085, 0), (1, -0.0000059447525, -0.000017543147), (1, -0.0000075373437, -0.000023897155), (1, -0.000001517707, 0), (1, 2.9689076e-8, 0), (1, -0.0000015177085, 0), (1, -0.000001517707, 0), (1, 2.968848e-8, 0), (1, -7.329306e-7, 0), (1, 2.9689076e-8, 0), (1, 2.968848e-8, 0), (1, -9.984263e-7, 0), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0.0000024210742, -1, 0), (0.0000024210742, -1, 0), (0.0000024210742, -1, 0), (0.0000024210742, -1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0.99999994, 0.00005749819), (0, 0.99999994, 0.00005749819), (0, 0.99999994, 0.00005749819), (0, 0.99999994, 0.00005749819), (1, -6.755267e-8, 0), (1, -6.755267e-8, 0), (1, -6.755267e-8, 0), (1, -6.755267e-8, 0), (0, 0, -1), (0, -8.601175e-7, -1), (0, -8.6018366e-7, -1), (0, 0, -1), (0, -8.601175e-7, -1), (8.019976e-11, -8.601658e-7, -1), (8.019959e-11, -8.601677e-7, -1), (0, -8.6018366e-7, -1), (8.019976e-11, -8.601658e-7, -1), (1.6039926e-10, 0, -1), (1.6039926e-10, 0, -1), (8.019959e-11, -8.601677e-7, -1), (1, -0.0000030735923, -0.000047391113), (1, 2.5509004e-7, -0.000031463373), (0.99999994, 0.0000018445901, 0), (0.99999994, 0.0000018445901, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 7.68582e-8, 0), (-1, 7.68582e-8, 0), (-1, 7.68582e-8, 0), (-1, 7.68582e-8, 0), (-0.0000024884598, 1, 0), (-0.0000024884598, 1, 0), (-0.0000024884598, 1, 0), (-0.0000024884598, 1, 0), (1, 2.5509004e-7, -0.000031463373), (1, -3.3619753e-7, -0.00002359734), (1, -7.329306e-7, 0), (1, -9.984263e-7, 0), (1, -0.0000059447525, -0.000017543147), (1, -7.329306e-7, 0), (1, -3.3619753e-7, -0.00002359734), (1, -0.0000031629984, -0.000037137095), (1, -0.0000031629984, -0.000037137095), (1, -3.3619753e-7, -0.00002359734), (1, 2.5509004e-7, -0.000031463373), (1, -0.0000030735923, -0.000047391113)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.416478, 0.988389, 0.026181), (0.416478, 0.988389, -0.358539), (0.416478, 0.365828, -0.35854), (0.416478, 0.365807, 0.026181), (0.415226, 0.362664, 0.029331), (0.415225, 0.991546, 0.029331), (0.415225, 0.991546, -0.361689), (0.415225, 0.362685, -0.36169), (0.443821, 0.680501, -0.164765), (0.443084, 0.673026, -0.167865), (0.443082, 0.672406, -0.164765), (0.43972, 0.665303, -0.171068), (0.439715, 0.664046, -0.164765), (0.434993, 0.661645, -0.172591), (0.434987, 0.660088, -0.164765), (0.429722, 0.659633, -0.173434), (0.429716, 0.657906, -0.164765), (0.427439, 0.660273, -0.173171), (0.427432, 0.658603, -0.164765), (0.426421, 0.661902, -0.172498), (0.426414, 0.660365, -0.164765), (0.425307, 0.666476, -0.170606), (0.425303, 0.665315, -0.164765), (0.423775, 0.668601, -0.169729), (0.42377, 0.667613, -0.164765), (0.420633, 0.67007, -0.169126), (0.42063, 0.6692, -0.164765), (0.415164, 0.670474, -0.168968), (0.415162, 0.669637, -0.164765), (0.443091, 0.674781, -0.170492), (0.439734, 0.668872, -0.176412), (0.435011, 0.666077, -0.179225), (0.429743, 0.664544, -0.180783), (0.427459, 0.665034, -0.180297), (0.426438, 0.666283, -0.179054), (0.42532, 0.669783, -0.175558), (0.423786, 0.671412, -0.173937), (0.420643, 0.67254, -0.172823), (0.415174, 0.672854, -0.172531), (0.443102, 0.677407, -0.172248), (0.439756, 0.674216, -0.179982), (0.435038, 0.672713, -0.183658), (0.429773, 0.671889, -0.185693), (0.427487, 0.672162, -0.185059), (0.426465, 0.672841, -0.183434), (0.42534, 0.674737, -0.178866), (0.423803, 0.675622, -0.176749), (0.420657, 0.676234, -0.175293), (0.415188, 0.676415, -0.174912), (0.443114, 0.680505, -0.172864), (0.439781, 0.68052, -0.181236), (0.43507, 0.680539, -0.185214), (0.429808, 0.680562, -0.187418), (0.427521, 0.680568, -0.186731), (0.426497, 0.680571, -0.184972), (0.425364, 0.680579, -0.180028), (0.423824, 0.680581, -0.177736), (0.420676, 0.680596, -0.17616), (0.415206, 0.680619, -0.175748), (0.443128, 0.683604, -0.172248), (0.439806, 0.686822, -0.179982), (0.435102, 0.688363, -0.183658), (0.429843, 0.689229, -0.185693), (0.427554, 0.688973, -0.185059), (0.426528, 0.688306, -0.183434), (0.425389, 0.686416, -0.178866), (0.423843, 0.68555, -0.176749), (0.420694, 0.684958, -0.175293), (0.415223, 0.684821, -0.174912), (0.443138, 0.686232, -0.170492), (0.439827, 0.692166, -0.176412), (0.435129, 0.694997, -0.179225), (0.429872, 0.696576, -0.180783), (0.427583, 0.696099, -0.180297), (0.426553, 0.694861, -0.179054), (0.425408, 0.691367, -0.175557), (0.42386, 0.689755, -0.173937), (0.420709, 0.688653, -0.172823), (0.415237, 0.688382, -0.172531), (0.443145, 0.687987, -0.167865), (0.439842, 0.695735, -0.171068), (0.435146, 0.699429, -0.172591), (0.429893, 0.701487, -0.173434), (0.427603, 0.70086, -0.173171), (0.426573, 0.699241, -0.172498), (0.42542, 0.694678, -0.170606), (0.423871, 0.692567, -0.169729), (0.420718, 0.691125, -0.169126), (0.415247, 0.690766, -0.168968), (0.443147, 0.688605, -0.164765), (0.439847, 0.696988, -0.164765), (0.435153, 0.700988, -0.164765), (0.429899, 0.703212, -0.164765), (0.42761, 0.702535, -0.164765), (0.426578, 0.700782, -0.164765), (0.425425, 0.69584, -0.164765), (0.423875, 0.693555, -0.164765), (0.420722, 0.691993, -0.164765), (0.415249, 0.6916, -0.164765), (0.443145, 0.687987, -0.161666), (0.439842, 0.695735, -0.158462), (0.435146, 0.699429, -0.15694), (0.429893, 0.701487, -0.156096), (0.427603, 0.70086, -0.156359), (0.426573, 0.699241, -0.157033), (0.42542, 0.694678, -0.158925), (0.423871, 0.692567, -0.159802), (0.420718, 0.691125, -0.160405), (0.415247, 0.690766, -0.160562), (0.443138, 0.686232, -0.159038), (0.439827, 0.692166, -0.153119), (0.435129, 0.694997, -0.150306), (0.429872, 0.696576, -0.148747), (0.427583, 0.696099, -0.149233), (0.426553, 0.694861, -0.150477), (0.425408, 0.691367, -0.153973), (0.42386, 0.689755, -0.155594), (0.420709, 0.688653, -0.156708), (0.415237, 0.688382, -0.156999), (0.443128, 0.683604, -0.157283), (0.439806, 0.686822, -0.149548), (0.435102, 0.688363, -0.145873), (0.429843, 0.689229, -0.143837), (0.427554, 0.688973, -0.144472), (0.426528, 0.688306, -0.146097), (0.425389, 0.686416, -0.150665), (0.423843, 0.68555, -0.152782), (0.420694, 0.684958, -0.154238), (0.415223, 0.684821, -0.154619), (0.443114, 0.680505, -0.156666), (0.439781, 0.68052, -0.148295), (0.43507, 0.680539, -0.144316), (0.429808, 0.680562, -0.142113), (0.427521, 0.680568, -0.1428), (0.426497, 0.680571, -0.144559), (0.425364, 0.680579, -0.149503), (0.423824, 0.680581, -0.151794), (0.420676, 0.680596, -0.15337), (0.415206, 0.680619, -0.153783), (0.443102, 0.677407, -0.157283), (0.439756, 0.674216, -0.149548), (0.435038, 0.672713, -0.145873), (0.429773, 0.671889, -0.143837), (0.427487, 0.672162, -0.144472), (0.426465, 0.672841, -0.146097), (0.42534, 0.674737, -0.150665), (0.423803, 0.675622, -0.152782), (0.420657, 0.676234, -0.154238), (0.415188, 0.676415, -0.154619), (0.443091, 0.674781, -0.159038), (0.439734, 0.668872, -0.153119), (0.435011, 0.666077, -0.150306), (0.429743, 0.664544, -0.148747), (0.427459, 0.665034, -0.149233), (0.426438, 0.666283, -0.150477), (0.42532, 0.669783, -0.153973), (0.423786, 0.671412, -0.155594), (0.420643, 0.67254, -0.156708), (0.415174, 0.672854, -0.157), (0.443084, 0.673026, -0.161666), (0.43972, 0.665303, -0.158462), (0.434993, 0.661645, -0.15694), (0.429722, 0.659633, -0.156096), (0.427439, 0.660273, -0.156359), (0.426421, 0.661902, -0.157033), (0.425307, 0.666476, -0.158925), (0.423775, 0.668601, -0.159802), (0.420633, 0.67007, -0.160405), (0.415164, 0.670474, -0.160562), (0.387997, 0.362664, 0.029331), (0.387997, 0.991544, 0.029331), (0.387997, 0.991544, -0.361689), (0.387997, 0.362685, -0.36169), (0.387997, 0.375392, 0.016604), (0.387997, 0.978816, 0.016603), (0.387997, 0.978816, -0.348961), (0.387997, 0.375413, -0.348961), (-0.424433, 0.375392, 0.016604), (-0.424433, 0.978814, 0.016603), (-0.424433, 0.978814, -0.348961), (-0.424433, 0.375413, -0.348961), (0.387997, 0.397393, 0.016604), (0.387996, 0.956817, 0.016603), (-0.402434, 0.397393, 0.016604), (-0.402434, 0.956815, 0.016603), (0.387997, 0.397393, -0.329966), (0.387996, 0.956817, -0.329966), (-0.402434, 0.397393, -0.329966), (-0.402434, 0.956815, -0.329966), (0.387997, 0.397393, 0.021971), (0.387997, 0.956815, 0.021971)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-10.304109, 0.618782), (-10.30411, -0.189479), (-8.996174, -0.189479), (-8.99613, 0.618782), (-8.99613, 0.618782), (-8.989526, 0.625399), (-10.310741, 0.625399), (-10.304109, 0.618782), (-10.30411, -0.189479), (-10.304109, 0.618782), (-10.310741, 0.625399), (-10.310742, -0.196096), (-8.996174, -0.189479), (-10.30411, -0.189479), (-10.310742, -0.196096), (-8.98957, -0.196096), (-8.99613, 0.618782), (-8.996174, -0.189479), (-8.98957, -0.196096), (-8.989526, 0.625399), (-10.310091, 0.0867), (-8.990178, 0.086699), (-8.990178, 0.143848), (-10.310091, 0.143848), (-10.365065, 0.489011), (-9.544378, 0.489011), (-9.544378, 0.54616), (-10.365065, 0.54616), (-10.595555, 0.119868), (-9.275684, 0.119868), (-9.275684, 0.177016), (-10.595555, 0.177017), (-10.365064, 0.471004), (-9.54438, 0.471005), (-9.54438, 0.528154), (-10.365064, 0.528153), (-9.275669, 0.458242), (-9.348557, 0.442795), (-9.348557, 0.431527), (-9.302383, 0.431527), (-9.275669, -0.362443), (-9.275669, 0.458242), (-9.302383, 0.431527), (-9.302383, -0.335728), (-10.595537, -0.362443), (-9.275669, -0.362443), (-9.302383, -0.335728), (-10.568825, -0.335728), (-10.595581, 0.458242), (-10.595537, -0.362443), (-10.568825, -0.335728), (-10.568867, 0.43153), (-10.515818, 1.020337), (-10.515817, -0.1538), (-8.85684, -0.1538), (-8.856841, 1.020337), (-8.801867, 0.188043), (-8.801867, 0.955301), (-10.507017, 0.955301), (-10.507018, 0.188044), (-10.176094, 1.006193), (-10.176095, -0.260249), (-8.470942, -0.260249), (-8.470942, 1.006193), (-10.176094, 0.98062), (-10.176094, 0.213363), (-8.470942, 0.213362), (-8.470942, 0.98062), (-9.369068, 0.62588), (-10.635553, 0.625883), (-10.635511, -0.141376), (-9.369069, -0.141376), (-10.176098, -0.537754), (-8.470942, -0.537754), (-8.517116, -0.491581), (-10.176095, -0.491581), (-8.470942, -0.537754), (-8.47094, 0.728731), (-8.517116, 0.682558), (-8.517116, -0.491581), (-8.47094, 0.728731), (-10.176095, 0.728731), (-10.176095, 0.682558), (-8.517116, 0.682558), (-9.348557, 0.431527), (-10.522693, 0.43153), (-10.522693, -0.29586), (-9.348557, -0.29586), (-8.462143, 0.900532), (-10.12112, 0.900532), (-10.12112, 0.173143), (-8.462143, 0.173143), (-9.405384, 0.772759), (-10.579521, 0.772757), (-10.579521, 0.045369), (-9.405384, 0.045369), (-8.85684, 1.00562), (-10.515818, 1.005621), (-10.515818, 0.278231), (-8.85684, 0.278231), (-10.522693, 0.43153), (-10.522693, 0.442795), (-10.595581, 0.458242), (-10.568867, 0.43153), (-9.275669, 0.458242), (-10.595581, 0.458242), (-10.522693, 0.442795), (-9.348557, 0.442795), (-9.348557, 0.442795), (-10.522693, 0.442795), (-10.522693, 0.43153), (-9.348557, 0.431527)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_RobothorBedHemnesDayDrawer_1_0"
        {
            token outputs:surface.connect = </root/_materials/M_RobothorBedHemnesDayDrawer_1_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_RobothorBedHemnesDayDrawer_1_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/WoodGrains2.jpg@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_RobothorBedHemnesDayDrawer_1_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

