#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "FridgeDrawer1D3"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "FridgeDrawer1D3" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.409913, -0.254329, -0.763819), (-0.00984, 0.183407, -0.423765)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 8, 8, 4, 4, 4, 4, 4, 4, 8, 4, 4, 8, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 4, 5, 7, 6, 33, 28, 46, 51, 28, 30, 48, 46, 30, 37, 55, 48, 37, 36, 54, 55, 36, 39, 57, 54, 39, 38, 56, 57, 38, 31, 49, 56, 31, 29, 47, 49, 29, 34, 52, 47, 34, 35, 53, 52, 35, 32, 50, 53, 32, 33, 51, 50, 107, 111, 95, 94, 108, 105, 98, 99, 103, 109, 96, 97, 110, 101, 93, 92, 111, 110, 92, 95, 109, 108, 99, 96, 106, 107, 94, 89, 104, 106, 89, 91, 105, 104, 91, 98, 102, 103, 97, 90, 100, 102, 90, 88, 101, 100, 88, 93, 77, 76, 57, 56, 77, 56, 49, 78, 79, 78, 49, 47, 80, 79, 47, 52, 81, 80, 52, 53, 82, 81, 53, 50, 83, 82, 50, 51, 84, 83, 51, 46, 85, 84, 46, 48, 86, 85, 48, 55, 87, 86, 55, 54, 76, 87, 54, 57, 28, 33, 93, 88, 33, 32, 92, 93, 32, 35, 95, 92, 35, 34, 94, 95, 34, 29, 89, 94, 29, 31, 91, 89, 31, 38, 98, 91, 38, 39, 99, 98, 39, 36, 96, 99, 36, 37, 97, 96, 37, 30, 90, 97, 30, 28, 88, 90, 65, 64, 100, 101, 64, 66, 102, 100, 66, 67, 103, 102, 67, 73, 109, 103, 73, 72, 108, 109, 72, 69, 105, 108, 69, 68, 104, 105, 68, 70, 106, 104, 70, 71, 107, 106, 71, 75, 111, 107, 75, 74, 110, 111, 74, 65, 101, 110, 8, 9, 11, 10, 12, 13, 15, 14, 16, 17, 19, 18, 135, 129, 87, 76, 130, 86, 87, 129, 130, 125, 85, 86, 125, 158, 156, 154, 124, 58, 84, 85, 59, 127, 161, 163, 165, 126, 78, 79, 133, 77, 78, 126, 133, 135, 76, 77, 122, 117, 69, 72, 73, 67, 112, 121, 121, 122, 72, 73, 65, 40, 41, 64, 119, 150, 149, 148, 118, 43, 70, 68, 117, 119, 68, 69, 114, 112, 67, 66, 41, 115, 151, 152, 153, 114, 66, 64, 70, 43, 42, 71, 134, 132, 62, 63, 75, 44, 45, 74, 74, 45, 40, 65, 61, 131, 128, 60, 60, 128, 134, 63, 71, 42, 44, 75, 127, 59, 62, 132, 61, 58, 124, 131, 115, 41, 40, 113, 80, 62, 59, 79, 81, 63, 62, 80, 82, 60, 63, 81, 83, 61, 60, 82, 84, 58, 61, 83, 43, 118, 116, 42, 45, 44, 123, 120, 120, 113, 40, 45, 44, 42, 116, 123, 123, 116, 136, 137, 137, 136, 138, 139, 139, 138, 140, 141, 141, 140, 117, 122, 113, 120, 142, 143, 143, 142, 144, 145, 145, 144, 146, 147, 147, 146, 121, 112, 120, 123, 137, 142, 142, 137, 139, 144, 144, 139, 141, 146, 146, 141, 122, 121, 116, 118, 148, 136, 136, 148, 149, 138, 138, 149, 150, 140, 140, 150, 119, 117, 115, 113, 143, 151, 151, 143, 145, 152, 152, 145, 147, 153, 153, 147, 112, 114, 131, 124, 154, 155, 155, 154, 156, 157, 157, 156, 158, 159, 159, 158, 125, 130, 127, 132, 160, 161, 161, 160, 162, 163, 163, 162, 164, 165, 165, 164, 133, 126, 134, 128, 166, 167, 167, 166, 168, 169, 169, 168, 170, 171, 171, 170, 129, 135, 128, 131, 155, 166, 166, 155, 157, 168, 168, 157, 159, 170, 170, 159, 130, 129, 132, 134, 167, 160, 160, 167, 169, 162, 162, 169, 171, 164, 164, 171, 135, 133, 20, 21, 23, 22, 24, 25, 27, 26]
            rel material:binding = </root/_materials/M_FridgeDrawer1D3_0>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-3.099315e-7, 0, -1), (-2.727023e-7, 0, -1), (0, 0, -1), (-3.099315e-7, 0, -1), (-2.7786058e-7, 0, -1), (-2.876476e-7, 0, -1), (-2.727023e-7, 0, -1), (-2.7786058e-7, 0, -1), (0, 0, -1), (0, 0, -1), (-2.876476e-7, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.0000051297643, -0.9086034, 0.41765994), (0, -0.9087281, 0.41738862), (0.0000051239144, -0.90872324, -0.41739902), (0, -0.90859866, -0.41767037), (0.036901005, 0.90998894, 0.4129873), (0.08991473, 0.906144, 0.41330183), (0.08991671, 0.90613854, -0.4133132), (0.036896076, 0.9100017, -0.41295934), (-0.08991274, 0.90614164, 0.41330737), (-0.03689073, 0.9099892, 0.4129877), (-0.036887255, 0.91000193, -0.41295975), (-0.08990445, 0.9061554, -0.41327903), (-0.0000051154097, -0.9087281, 0.4173886), (0, -0.9086032, 0.41766042), (0.00000513827, -0.9085984, -0.41767088), (0, -0.90872324, -0.417399), (0, -0.9087281, 0.41738862), (-0.0000051154097, -0.9087281, 0.4173886), (0, -0.90872324, -0.417399), (0.0000051239144, -0.90872324, -0.41739902), (-0.03689073, 0.9099892, 0.4129877), (0.036901005, 0.90998894, 0.4129873), (0.036896076, 0.9100017, -0.41295934), (-0.036887255, 0.91000193, -0.41295975), (-2.1234155e-7, -0.9378396, 0.3470692), (-0.0000051297643, -0.9086034, 0.41765994), (0, -0.90859866, -0.41767037), (0, -0.9378308, -0.34709242), (0.94969845, 3.6135316e-7, 0.31316587), (0.9524862, 0, 0.30458158), (0.95248586, -0.0000016875565, -0.30458283), (0.9497003, 0, -0.31316036), (0.08991473, 0.906144, 0.41330183), (0.13455783, 0.9243705, 0.35697815), (0.13459376, 0.9243745, -0.3569542), (0.08991671, 0.90613854, -0.4133132), (-0.13459438, 0.9243684, 0.35696992), (-0.08991274, 0.90614164, 0.41330737), (-0.08990445, 0.9061554, -0.41327903), (-0.13455857, 0.9243828, -0.35694602), (-0.9524923, -0.0000017285347, 0.30456245), (-0.9496633, 0, 0.31327254), (-0.94966507, 3.7252903e-7, -0.313267), (-0.95246595, 0, -0.30464482), (0, -0.9086032, 0.41766042), (0, -0.9378316, 0.34709072), (1.899898e-7, -0.9378375, -0.34707484), (0.00000513827, -0.9085984, -0.41767088), (-0.09812125, -0.9951745, 0), (-0.041605104, -0.9991341, -2.6049565e-7), (-0.041528422, -0.9991373, 0), (-0.09808299, -0.9951782, 8.9354224e-10), (-0.09812125, -0.9951745, 0), (-0.09808299, -0.9951782, 8.9354224e-10), (-0.14404874, -0.98957056, 0), (-0.14404862, -0.9895706, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0.99999994, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.09812198, -0.99517447, 0.0000029268904), (0.14405003, -0.9895704, 0), (0.14405017, -0.9895704, 0), (0.09813216, -0.99517345, 0), (0.041508224, -0.99913806, 0), (0.09812198, -0.99517447, 0.0000029268904), (0.09813216, -0.99517345, 0), (0.04152844, -0.9991373, -0.0000020521732), (-0.041605104, -0.9991341, -2.6049565e-7), (0.041508224, -0.99913806, 0), (0.04152844, -0.9991373, -0.0000020521732), (-0.041528422, -0.9991373, 0), (0, -0.79783505, -0.60287565), (0, -0.79783446, -0.6028766), (0.00000513827, -0.9085984, -0.41767088), (1.899898e-7, -0.9378375, -0.34707484), (0, -0.79783446, -0.6028766), (0, -0.79783225, -0.60287946), (0, -0.90872324, -0.417399), (0.00000513827, -0.9085984, -0.41767088), (0, -0.79783225, -0.60287946), (0, -0.7978322, -0.6028796), (0.0000051239144, -0.90872324, -0.41739902), (0, -0.90872324, -0.417399), (0, -0.7978322, -0.6028796), (0, -0.79783505, -0.6028757), (0, -0.90859866, -0.41767037), (0.0000051239144, -0.90872324, -0.41739902), (0, -0.79783505, -0.6028757), (0, -0.7978366, -0.6028738), (0, -0.9378308, -0.34709242), (0, -0.90859866, -0.41767037), (0.837116, 5.295043e-9, -0.54702544), (0.837116, 9.225914e-9, -0.54702544), (0.9497003, 0, -0.31316036), (0.95248586, -0.0000016875565, -0.30458283), (0.1150459, 0.7903234, -0.60179186), (0.07830295, 0.7941106, -0.6027081), (0.08991671, 0.90613854, -0.4133132), (0.13459376, 0.9243745, -0.3569542), (0.07830295, 0.7941106, -0.6027081), (0.03297672, 0.79699063, -0.6030909), (0.036896076, 0.9100017, -0.41295934), (0.08991671, 0.90613854, -0.4133132), (0.03297672, 0.79699063, -0.6030909), (-0.032977317, 0.7969907, -0.6030907), (-0.036887255, 0.91000193, -0.41295975), (0.036896076, 0.9100017, -0.41295934), (-0.032977317, 0.7969907, -0.6030907), (-0.07830292, 0.7941108, -0.6027078), (-0.08990445, 0.9061554, -0.41327903), (-0.036887255, 0.91000193, -0.41295975), (-0.07830292, 0.7941108, -0.6027078), (-0.114909, 0.79004216, -0.6021871), (-0.13455857, 0.9243828, -0.35694602), (-0.08990445, 0.9061554, -0.41327903), (-0.8370378, 0, -0.5471451), (-0.8370378, 0, -0.5471451), (-0.95246595, 0, -0.30464482), (-0.94966507, 3.7252903e-7, -0.313267), (-0.000018258643, -0.75559986, 0.65503347), (-0.00001065433, -0.66991585, 0.74243695), (0, -0.9378316, 0.34709072), (0, -0.9086032, 0.41766042), (-0.7333328, 0.000008161636, 0.67986983), (-0.7382071, 0.0000073313713, 0.6745742), (-0.9496633, 0, 0.31327254), (-0.9524923, -0.0000017285347, 0.30456245), (-0.09782161, 0.6734578, 0.73272467), (-0.069624126, 0.7560061, 0.6508513), (-0.08991274, 0.90614164, 0.41330737), (-0.13459438, 0.9243684, 0.35696992), (-0.069624126, 0.7560061, 0.6508513), (-0.029642131, 0.75796086, 0.6516262), (-0.03689073, 0.9099892, 0.4129877), (-0.08991274, 0.90614164, 0.41330737), (-0.029642131, 0.75796086, 0.6516262), (0.029642124, 0.75796086, 0.6516262), (0.036901005, 0.90998894, 0.4129873), (-0.03689073, 0.9099892, 0.4129877), (0.029642124, 0.75796086, 0.6516262), (0.06962436, 0.7560101, 0.6508465), (0.08991473, 0.906144, 0.41330183), (0.036901005, 0.90998894, 0.4129873), (0.06962436, 0.7560101, 0.6508465), (0.09798332, 0.673432, 0.7327269), (0.13455783, 0.9243705, 0.35697815), (0.08991473, 0.906144, 0.41330183), (0.73830295, 0.000013249945, 0.67446923), (0.7334316, -0.0000033676624, 0.6797632), (0.9524862, 0, 0.30458158), (0.94969845, 3.6135316e-7, 0.31316587), (0.00023270439, -0.6699389, 0.7424162), (0, -0.7556003, 0.655033), (-0.0000051297643, -0.9086034, 0.41765994), (-2.1234155e-7, -0.9378396, 0.3470692), (0, -0.7556003, 0.655033), (0, -0.75559866, 0.6550348), (0, -0.9087281, 0.41738862), (-0.0000051297643, -0.9086034, 0.41765994), (0, -0.75559866, 0.6550348), (0, -0.75559866, 0.6550348), (-0.0000051154097, -0.9087281, 0.4173886), (0, -0.9087281, 0.41738862), (0, -0.75559866, 0.6550348), (-0.000018258643, -0.75559986, 0.65503347), (0, -0.9086032, 0.41766042), (-0.0000051154097, -0.9087281, 0.4173886), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.041001152, -0.9811657, -0.18876651), (0.040996715, -0.9811658, -0.18876676), (0.041508224, -0.99913806, 0), (-0.041605104, -0.9991341, -2.6049565e-7), (0.09510805, -0.97758055, -0.18785895), (0.09812198, -0.99517447, 0.0000029268904), (0.041508224, -0.99913806, 0), (0.040996715, -0.9811658, -0.18876676), (0.09510805, -0.97758055, -0.18785895), (0.14149378, -0.9717954, -0.18866137), (0.14405003, -0.9895704, 0), (0.09812198, -0.99517447, 0.0000029268904), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (1, 0, 0), (1, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.09510397, -0.9775999, -0.18775931), (-0.09812125, -0.9951745, 0), (-0.14404862, -0.9895706, 0), (-0.14150159, -0.97179437, -0.18866114), (-0.09510397, -0.9775999, -0.18775931), (-0.041001152, -0.9811657, -0.18876651), (-0.041605104, -0.9991341, -2.6049565e-7), (-0.09812125, -0.9951745, 0), (0.04018943, 0.9837181, 0.17516722), (0.09630165, 0.97996193, 0.17435801), (0.06962436, 0.7560101, 0.6508465), (0.029642124, 0.75796086, 0.6516262), (-0.029642131, 0.75796086, 0.6516262), (-0.069624126, 0.7560061, 0.6508513), (-0.096303746, 0.9799612, 0.17436033), (-0.040194564, 0.9837178, 0.17516765), (-0.040194564, 0.9837178, 0.17516765), (0.04018943, 0.9837181, 0.17516722), (0.029642124, 0.75796086, 0.6516262), (-0.029642131, 0.75796086, 0.6516262), (-0.000018258643, -0.75559986, 0.65503347), (0, -1, 0), (0, -1, 0), (-0.00001065433, -0.66991585, 0.74243695), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.7334316, -0.0000033676624, 0.6797632), (0.73830295, 0.000013249945, 0.67446923), (0.09630165, 0.97996193, 0.17435801), (0.14181931, 0.9742155, 0.17547488), (0.09798332, 0.673432, 0.7327269), (0.06962436, 0.7560101, 0.6508465), (-0.14180614, 0.9742168, 0.17547826), (-0.096303746, 0.9799612, 0.17436033), (-0.069624126, 0.7560061, 0.6508513), (-0.09782161, 0.6734578, 0.73272467), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.7382071, 0.0000073313713, 0.6745742), (-0.7333328, 0.000008161636, 0.67986983), (0.00023270439, -0.6699389, 0.7424162), (0, -1, 0), (0, -1, 0), (0, -0.7556003, 0.655033), (-0.007397435, -0.19876347, -0.9800197), (-0.022001255, -0.19826905, -0.9799007), (-3.396762e-7, 0, -1), (-3.402446e-7, 0, -1), (0, -0.75559866, 0.6550348), (0, -1, 0), (0, -1, 0), (0, -0.75559866, 0.6550348), (0, -0.75559866, 0.6550348), (0, -1, 0), (0, -1, 0), (-0.000018258643, -0.75559986, 0.65503347), (3.2704622e-7, 0, -1), (0.021997977, -0.19826886, -0.9799008), (0.007395353, -0.19876345, -0.9800196), (3.402476e-7, 0, -1), (3.402476e-7, 0, -1), (0.007395353, -0.19876345, -0.9800196), (-0.007397435, -0.19876347, -0.9800197), (-3.402446e-7, 0, -1), (0, -0.7556003, 0.655033), (0, -1, 0), (0, -1, 0), (0, -0.75559866, 0.6550348), (-0.025994722, -0.17866293, -0.9835669), (0, 0, -1), (-3.396762e-7, 0, -1), (-0.022001255, -0.19826905, -0.9799007), (3.2704622e-7, 0, -1), (-2.5230845e-8, 0, -1), (0.025991607, -0.17866272, -0.983567), (0.021997977, -0.19826886, -0.9799008), (-0.023998741, 0.16518392, 0.9859707), (-3.6287517e-7, 0, 0.99999994), (-5.0676533e-7, 0, 1), (-0.020696327, 0.18667711, 0.9822033), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (3.628717e-7, 0, 1), (0.024092417, 0.16517048, 0.9859707), (0.020696811, 0.18667704, 0.98220336), (3.6445874e-7, 0, 1), (-3.2537494e-7, 0, 1), (1.830234e-7, 0, 1), (0.0069908937, 0.18707077, 0.98232156), (-0.0069962153, 0.18707064, 0.98232156), (-0.0069962153, 0.18707064, 0.98232156), (-0.020696327, 0.18667711, 0.9822033), (-5.0676533e-7, 0, 1), (-3.2537494e-7, 0, 1), (1.830234e-7, 0, 1), (3.6445874e-7, 0, 1), (0.020696811, 0.18667704, 0.98220336), (0.0069908937, 0.18707077, 0.98232156), (0.0069908937, 0.18707077, 0.98232156), (0.020696811, 0.18667704, 0.98220336), (0.03830445, 0.3814085, 0.9236126), (0.015702672, 0.38537344, 0.92262715), (0.015702672, 0.38537344, 0.92262715), (0.03830445, 0.3814085, 0.9236126), (0.06998275, 0.70391697, 0.70682615), (0.028785847, 0.7077113, 0.70591515), (0.028785847, 0.7077113, 0.70591515), (0.06998275, 0.70391697, 0.70682615), (0.09110959, 0.9194449, 0.38251823), (0.03739212, 0.92331934, 0.38220844), (0.03739212, 0.92331934, 0.38220844), (0.09110959, 0.9194449, 0.38251823), (0.09630165, 0.97996193, 0.17435801), (0.04018943, 0.9837181, 0.17516722), (-0.020696327, 0.18667711, 0.9822033), (-0.0069962153, 0.18707064, 0.98232156), (-0.015786776, 0.38540053, 0.9226142), (-0.03830414, 0.38140878, 0.9236125), (-0.03830414, 0.38140878, 0.9236125), (-0.015786776, 0.38540053, 0.9226142), (-0.0287861, 0.70771134, 0.70591503), (-0.069985196, 0.70391655, 0.70682627), (-0.069985196, 0.70391655, 0.70682627), (-0.0287861, 0.70771134, 0.70591503), (-0.037392445, 0.9233191, 0.38220888), (-0.091108456, 0.91944486, 0.3825183), (-0.091108456, 0.91944486, 0.3825183), (-0.037392445, 0.9233191, 0.38220888), (-0.040194564, 0.9837178, 0.17516765), (-0.096303746, 0.9799612, 0.17436033), (-0.0069962153, 0.18707064, 0.98232156), (0.0069908937, 0.18707077, 0.98232156), (0.015702672, 0.38537344, 0.92262715), (-0.015786776, 0.38540053, 0.9226142), (-0.015786776, 0.38540053, 0.9226142), (0.015702672, 0.38537344, 0.92262715), (0.028785847, 0.7077113, 0.70591515), (-0.0287861, 0.70771134, 0.70591503), (-0.0287861, 0.70771134, 0.70591503), (0.028785847, 0.7077113, 0.70591515), (0.03739212, 0.92331934, 0.38220844), (-0.037392445, 0.9233191, 0.38220888), (-0.037392445, 0.9233191, 0.38220888), (0.03739212, 0.92331934, 0.38220844), (0.04018943, 0.9837181, 0.17516722), (-0.040194564, 0.9837178, 0.17516765), (0.020696811, 0.18667704, 0.98220336), (0.024092417, 0.16517048, 0.9859707), (0.053107824, 0.36476228, 0.9295849), (0.03830445, 0.3814085, 0.9236126), (0.03830445, 0.3814085, 0.9236126), (0.053107824, 0.36476228, 0.9295849), (0.10082847, 0.69263524, 0.7142058), (0.06998275, 0.70391697, 0.70682615), (0.06998275, 0.70391697, 0.70682615), (0.10082847, 0.69263524, 0.7142058), (0.13281016, 0.9123283, 0.38732234), (0.09110959, 0.9194449, 0.38251823), (0.09110959, 0.9194449, 0.38251823), (0.13281016, 0.9123283, 0.38732234), (0.14181931, 0.9742155, 0.17547488), (0.09630165, 0.97996193, 0.17435801), (-0.023998741, 0.16518392, 0.9859707), (-0.020696327, 0.18667711, 0.9822033), (-0.03830414, 0.38140878, 0.9236125), (-0.0531487, 0.3650862, 0.9294554), (-0.0531487, 0.3650862, 0.9294554), (-0.03830414, 0.38140878, 0.9236125), (-0.069985196, 0.70391655, 0.70682627), (-0.10082976, 0.69263667, 0.7142044), (-0.10082976, 0.69263667, 0.7142044), (-0.069985196, 0.70391655, 0.70682627), (-0.091108456, 0.91944486, 0.3825183), (-0.13279575, 0.91214067, 0.38776845), (-0.13279575, 0.91214067, 0.38776845), (-0.091108456, 0.91944486, 0.3825183), (-0.096303746, 0.9799612, 0.17436033), (-0.14180614, 0.9742168, 0.17547826), (0.021997977, -0.19826886, -0.9799008), (0.025991607, -0.17866272, -0.983567), (0.053171515, -0.36514103, -0.9294326), (0.037495892, -0.38088292, -0.92386264), (0.037495892, -0.38088292, -0.92386264), (0.053171515, -0.36514103, -0.9294326), (0.10081292, -0.69231766, -0.714516), (0.068521485, -0.7035975, -0.70728725), (0.068521485, -0.7035975, -0.70728725), (0.10081292, -0.69231766, -0.714516), (0.13281739, -0.91233945, -0.38729355), (0.089092195, -0.91948545, -0.38289547), (0.089092195, -0.91948545, -0.38289547), (0.13281739, -0.91233945, -0.38729355), (0.14149378, -0.9717954, -0.18866137), (0.09510805, -0.97758055, -0.18785895), (-0.025994722, -0.17866293, -0.9835669), (-0.022001255, -0.19826905, -0.9799007), (-0.037495866, -0.38088223, -0.923863), (-0.053171623, -0.36514196, -0.9294321), (-0.053171623, -0.36514196, -0.9294321), (-0.037495866, -0.38088223, -0.923863), (-0.06852047, -0.7035983, -0.7072867), (-0.1008462, -0.69264984, -0.71418923), (-0.1008462, -0.69264984, -0.71418923), (-0.06852047, -0.7035983, -0.7072867), (-0.089091435, -0.9194859, -0.38289467), (-0.13281561, -0.91233957, -0.3872937), (-0.13281561, -0.91233957, -0.3872937), (-0.089091435, -0.9194859, -0.38289467), (-0.09510397, -0.9775999, -0.18775931), (-0.14150159, -0.97179437, -0.18866114), (-0.007397435, -0.19876347, -0.9800197), (0.007395353, -0.19876345, -0.9800196), (0.016425861, -0.38561493, -0.92251354), (-0.01637657, -0.3855998, -0.92252076), (-0.01637657, -0.3855998, -0.92252076), (0.016425861, -0.38561493, -0.92251354), (0.029922385, -0.7077919, -0.7057868), (-0.030016217, -0.7078393, -0.70573556), (-0.030016217, -0.7078393, -0.70573556), (0.029922385, -0.7077919, -0.7057868), (0.038903005, -0.9233369, -0.38201496), (-0.03890245, -0.92333657, -0.38201568), (-0.03890245, -0.92333657, -0.38201568), (0.038903005, -0.9233369, -0.38201496), (0.040996715, -0.9811658, -0.18876676), (-0.041001152, -0.9811657, -0.18876651), (0.007395353, -0.19876345, -0.9800196), (0.021997977, -0.19826886, -0.9799008), (0.037495892, -0.38088292, -0.92386264), (0.016425861, -0.38561493, -0.92251354), (0.016425861, -0.38561493, -0.92251354), (0.037495892, -0.38088292, -0.92386264), (0.068521485, -0.7035975, -0.70728725), (0.029922385, -0.7077919, -0.7057868), (0.029922385, -0.7077919, -0.7057868), (0.068521485, -0.7035975, -0.70728725), (0.089092195, -0.91948545, -0.38289547), (0.038903005, -0.9233369, -0.38201496), (0.038903005, -0.9233369, -0.38201496), (0.089092195, -0.91948545, -0.38289547), (0.09510805, -0.97758055, -0.18785895), (0.040996715, -0.9811658, -0.18876676), (-0.022001255, -0.19826905, -0.9799007), (-0.007397435, -0.19876347, -0.9800197), (-0.01637657, -0.3855998, -0.92252076), (-0.037495866, -0.38088223, -0.923863), (-0.037495866, -0.38088223, -0.923863), (-0.01637657, -0.3855998, -0.92252076), (-0.030016217, -0.7078393, -0.70573556), (-0.06852047, -0.7035983, -0.7072867), (-0.06852047, -0.7035983, -0.7072867), (-0.030016217, -0.7078393, -0.70573556), (-0.03890245, -0.92333657, -0.38201568), (-0.089091435, -0.9194859, -0.38289467), (-0.089091435, -0.9194859, -0.38289467), (-0.03890245, -0.92333657, -0.38201568), (-0.041001152, -0.9811657, -0.18876651), (-0.09510397, -0.9775999, -0.18775931), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.020602, 0.024838, -0.763819), (-0.020609, 0.024838, -0.763819), (-0.020602, 0.024846, -0.763819), (-0.020609, 0.024846, -0.763819), (-0.020602, 0.024838, -0.763819), (-0.020609, 0.024838, -0.763819), (-0.020602, 0.024846, -0.763819), (-0.020609, 0.024846, -0.763819), (-0.020602, 0.024838, -0.763819), (-0.020609, 0.024838, -0.763819), (-0.020602, 0.024846, -0.763819), (-0.020609, 0.024846, -0.763819), (-0.020602, 0.024838, -0.763819), (-0.020609, 0.024838, -0.763819), (-0.020602, 0.024846, -0.763819), (-0.020609, 0.024846, -0.763819), (-0.020602, 0.024838, -0.763819), (-0.020609, 0.024838, -0.763819), (-0.020602, 0.024846, -0.763819), (-0.020609, 0.024846, -0.763819), (-0.020602, 0.024838, -0.763819), (-0.020609, 0.024838, -0.763819), (-0.020602, 0.024846, -0.763819), (-0.020609, 0.024846, -0.763819), (-0.020602, 0.024838, -0.763819), (-0.020609, 0.024838, -0.763819), (-0.020602, 0.024846, -0.763819), (-0.020609, 0.024846, -0.763819), (-0.010795, 0.182303, -0.423765), (-0.408959, 0.182303, -0.423765), (-0.010795, -0.233905, -0.423765), (-0.408959, -0.233905, -0.423765), (-0.17197, 0.182303, -0.423765), (-0.115062, 0.182303, -0.423765), (-0.304691, 0.182303, -0.423765), (-0.247783, 0.182303, -0.423765), (-0.17197, -0.253225, -0.423765), (-0.115285, -0.249116, -0.423765), (-0.304468, -0.249116, -0.423765), (-0.247783, -0.253225, -0.423765), (-0.115062, 0.182303, -0.617046), (-0.010795, 0.182303, -0.617046), (-0.304691, 0.182303, -0.617046), (-0.408959, 0.182303, -0.617046), (-0.247783, 0.182303, -0.617046), (-0.17197, 0.182303, -0.617046), (-0.017765, 0.174244, -0.423765), (-0.401989, 0.174244, -0.423765), (-0.017765, -0.226797, -0.423765), (-0.401989, -0.226797, -0.423765), (-0.17197, 0.174244, -0.423765), (-0.115062, 0.174244, -0.423765), (-0.304691, 0.174244, -0.423765), (-0.247783, 0.174244, -0.423765), (-0.172188, -0.245166, -0.423765), (-0.115939, -0.241088, -0.423765), (-0.303814, -0.241088, -0.423765), (-0.247565, -0.245166, -0.423765), (-0.017765, 0.174244, -0.609469), (-0.401989, 0.174244, -0.609469), (-0.17197, 0.174244, -0.609469), (-0.115062, 0.174244, -0.609469), (-0.304691, 0.174244, -0.609469), (-0.247783, 0.174244, -0.609469), (-0.010795, 0.182303, -0.430903), (-0.115062, 0.182303, -0.430903), (-0.010795, -0.233905, -0.430903), (-0.115285, -0.249116, -0.430903), (-0.408959, -0.233905, -0.430903), (-0.304468, -0.249116, -0.430903), (-0.408959, 0.182303, -0.430903), (-0.304691, 0.182303, -0.430903), (-0.247783, -0.253225, -0.430903), (-0.17197, -0.253225, -0.430903), (-0.17197, 0.182303, -0.430903), (-0.247783, 0.182303, -0.430903), (-0.247565, -0.245166, -0.430903), (-0.303814, -0.241088, -0.430903), (-0.401989, -0.226797, -0.430903), (-0.401989, 0.174244, -0.430903), (-0.304691, 0.174244, -0.430903), (-0.247783, 0.174244, -0.430903), (-0.17197, 0.174244, -0.430903), (-0.115062, 0.174244, -0.430903), (-0.017765, 0.174244, -0.430903), (-0.017765, -0.226797, -0.430903), (-0.115939, -0.241088, -0.430903), (-0.172188, -0.245166, -0.430903), (-0.00984, 0.183407, -0.425226), (-0.409913, 0.183407, -0.425226), (-0.00984, -0.234879, -0.425226), (-0.409913, -0.234879, -0.425226), (-0.17197, 0.183407, -0.425226), (-0.115062, 0.183407, -0.425226), (-0.304691, 0.183407, -0.425226), (-0.247783, 0.183407, -0.425226), (-0.17194, -0.254329, -0.425226), (-0.115195, -0.250215, -0.425226), (-0.304558, -0.250215, -0.425226), (-0.247813, -0.254329, -0.425226), (-0.00984, 0.183407, -0.429443), (-0.115062, 0.183407, -0.429443), (-0.00984, -0.234879, -0.429443), (-0.115195, -0.250215, -0.429443), (-0.409913, -0.234879, -0.429443), (-0.304558, -0.250215, -0.429443), (-0.409913, 0.183407, -0.429443), (-0.304691, 0.183407, -0.429443), (-0.247813, -0.254329, -0.429443), (-0.17194, -0.254329, -0.429443), (-0.17197, 0.183407, -0.429443), (-0.247783, 0.183407, -0.429443), (-0.115285, -0.249116, -0.586846), (-0.115269, -0.218756, -0.617046), (-0.010795, -0.233905, -0.586846), (-0.010795, -0.203545, -0.617046), (-0.304484, -0.218756, -0.617046), (-0.304468, -0.249116, -0.586846), (-0.408959, -0.203545, -0.617046), (-0.408959, -0.233905, -0.586846), (-0.17197, -0.222865, -0.617046), (-0.17197, -0.253225, -0.586846), (-0.247783, -0.253225, -0.586846), (-0.247783, -0.222865, -0.617046), (-0.017765, -0.196437, -0.609469), (-0.017765, -0.226797, -0.579269), (-0.401989, -0.226797, -0.579269), (-0.401989, -0.196437, -0.609469), (-0.172172, -0.214806, -0.609469), (-0.172188, -0.245166, -0.579269), (-0.115939, -0.241088, -0.579269), (-0.115875, -0.210728, -0.609469), (-0.303879, -0.210728, -0.609469), (-0.303814, -0.241088, -0.579269), (-0.247581, -0.214806, -0.609469), (-0.247565, -0.245166, -0.579269), (-0.304478, -0.230374, -0.614748), (-0.247783, -0.234484, -0.614748), (-0.304473, -0.240223, -0.608201), (-0.247783, -0.244333, -0.608201), (-0.30447, -0.246805, -0.598403), (-0.247783, -0.250914, -0.598403), (-0.17197, -0.234484, -0.614748), (-0.115275, -0.230374, -0.614748), (-0.17197, -0.244333, -0.608201), (-0.11528, -0.240223, -0.608201), (-0.17197, -0.250914, -0.598403), (-0.115284, -0.246805, -0.598403), (-0.408959, -0.215164, -0.614748), (-0.408959, -0.225013, -0.608201), (-0.408959, -0.231594, -0.598403), (-0.010795, -0.215164, -0.614748), (-0.010795, -0.225013, -0.608201), (-0.010795, -0.231594, -0.598403), (-0.017765, -0.208055, -0.60717), (-0.115899, -0.222346, -0.60717), (-0.017765, -0.217905, -0.600623), (-0.11592, -0.232196, -0.600623), (-0.017765, -0.224486, -0.590826), (-0.115934, -0.238777, -0.590826), (-0.303854, -0.222346, -0.60717), (-0.401989, -0.208055, -0.60717), (-0.303833, -0.232196, -0.600623), (-0.401989, -0.217905, -0.600623), (-0.303819, -0.238777, -0.590826), (-0.401989, -0.224486, -0.590826), (-0.172178, -0.226424, -0.60717), (-0.247575, -0.226424, -0.60717), (-0.172184, -0.236274, -0.600623), (-0.24757, -0.236274, -0.600623), (-0.172187, -0.242855, -0.590826), (-0.247566, -0.242855, -0.590826)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-172.42319, -111.27127), (-172.42319, -111.27127), (-172.42319, -111.27127), (-172.42319, -111.27127), (-137.53853, -114.56573), (-137.53847, -114.56573), (-137.53847, -114.56561), (-137.53853, -114.56561), (-143.84573, 1.140541), (-144.17542, 1.140541), (-144.15337, 1.11506), (-143.84573, 1.11506), (-144.17542, 1.140541), (-144.17542, -0.17542), (-144.15337, -0.152946), (-144.15337, 1.11506), (-144.17542, -0.17542), (-143.84503, -0.223513), (-143.84297, -0.198131), (-144.15337, -0.152946), (-143.84503, -0.223513), (-143.6658, -0.236506), (-143.66512, -0.211024), (-143.84297, -0.198131), (-143.6658, -0.236506), (-143.4261, -0.236506), (-143.42679, -0.211024), (-143.66512, -0.211024), (-143.4261, -0.236506), (-143.24687, -0.223513), (-143.24895, -0.198131), (-143.42679, -0.211024), (-143.24687, -0.223513), (-142.9165, -0.17542), (-142.93854, -0.152946), (-143.24895, -0.198131), (-142.9165, -0.17542), (-142.9165, 1.140541), (-142.93854, 1.11506), (-142.93854, -0.152946), (-142.9165, 1.140541), (-143.24617, 1.140541), (-143.24617, 1.11506), (-142.93854, 1.11506), (-143.24617, 1.140541), (-143.4261, 1.140541), (-143.4261, 1.11506), (-143.24617, 1.11506), (-143.4261, 1.140541), (-143.6658, 1.140541), (-143.6658, 1.11506), (-143.4261, 1.11506), (-143.6658, 1.140541), (-143.84573, 1.140541), (-143.84573, 1.11506), (-143.6658, 1.11506), (-143.02563, 0.110647), (-143.02563, 0.292289), (-143.0391, 0.292289), (-143.0391, 0.110647), (-143.0159, 0.291822), (-143.0159, 0.110146), (-143.0024, 0.110146), (-143.0024, 0.291822), (-143.0159, 0.716416), (-143.0159, 0.53474), (-143.0024, 0.53474), (-143.0024, 0.716416), (-143.02563, 0.534274), (-143.02563, 0.715915), (-143.0391, 0.715915), (-143.0391, 0.534274), (-143.02563, 0.292289), (-143.02563, 0.534274), (-143.0391, 0.534274), (-143.0391, 0.292289), (-143.0159, 0.53474), (-143.0159, 0.291822), (-143.0024, 0.291822), (-143.0024, 0.53474), (-143.02563, -0.225207), (-143.02563, 0.110647), (-143.0391, 0.110647), (-143.0391, -0.225207), (-143.126, 1.104084), (-143.126, -0.240059), (-143.11246, -0.240059), (-143.11246, 1.104084), (-143.0159, 0.110146), (-143.0159, -0.227163), (-143.0024, -0.227163), (-143.0024, 0.110146), (-143.0159, 1.053726), (-143.0159, 0.716416), (-143.0024, 0.716416), (-143.0024, 1.053726), (-143.10333, 1.104072), (-143.10333, -0.240047), (-143.08978, -0.240047), (-143.08978, 1.104072), (-143.02563, 0.715915), (-143.02563, 1.05177), (-143.0391, 1.05177), (-143.0391, 0.715915), (-142.98036, 0.10556), (-142.98036, 0.28006), (-143.0025, 0.28006), (-143.0025, 0.10556), (-142.98036, 0.10556), (-143.0025, 0.10556), (-143.0025, -0.199003), (-142.98036, -0.199003), (-143.08492, 1.034439), (-143.08492, -0.205887), (-143.06284, -0.205887), (-143.06284, 1.034439), (-142.9798, 0.10374), (-142.9798, -0.19718), (-142.95772, -0.19718), (-142.95772, 0.10374), (-142.9798, 0.279743), (-142.9798, 0.10374), (-142.95772, 0.10374), (-142.95772, 0.279743), (-142.9798, 0.514217), (-142.9798, 0.279743), (-142.95772, 0.279743), (-142.95772, 0.514217), (-142.9798, 0.69022), (-142.9798, 0.514217), (-142.95772, 0.514217), (-142.95772, 0.69022), (-142.9798, 0.991139), (-142.9798, 0.69022), (-142.95772, 0.69022), (-142.95772, 0.991139), (-143.06224, 1.034441), (-143.06224, -0.205889), (-143.04018, -0.205889), (-143.04018, 1.034441), (-142.98036, 0.6884), (-142.98036, 0.992962), (-143.0025, 0.992962), (-143.0025, 0.6884), (-142.98036, 0.5139), (-142.98036, 0.6884), (-143.0025, 0.6884), (-143.0025, 0.5139), (-142.98036, 0.28006), (-142.98036, 0.5139), (-143.0025, 0.5139), (-143.0025, 0.28006), (-144.17542, 1.140541), (-143.84573, 1.140541), (-143.84573, 1.144032), (-144.17842, 1.144032), (-143.84573, 1.140541), (-143.6658, 1.140541), (-143.6658, 1.144032), (-143.84573, 1.144032), (-143.6658, 1.140541), (-143.4261, 1.140541), (-143.4261, 1.144032), (-143.6658, 1.144032), (-143.4261, 1.140541), (-143.24617, 1.140541), (-143.24617, 1.144032), (-143.4261, 1.144032), (-143.24617, 1.140541), (-142.9165, 1.140541), (-142.91348, 1.144032), (-143.24617, 1.144032), (-143.10776, -0.236511), (-143.10776, 1.100955), (-143.11246, 1.104084), (-143.11246, -0.240059), (-142.9165, -0.17542), (-143.24687, -0.223513), (-143.2466, -0.226989), (-142.91348, -0.178499), (-143.24687, -0.223513), (-143.4261, -0.236506), (-143.42601, -0.239997), (-143.2466, -0.226989), (-143.4261, -0.236506), (-143.6658, -0.236506), (-143.66591, -0.239997), (-143.42601, -0.239997), (-143.6658, -0.236506), (-143.84503, -0.223513), (-143.84532, -0.226989), (-143.66591, -0.239997), (-143.84503, -0.223513), (-144.17542, -0.17542), (-144.17842, -0.178499), (-143.84532, -0.226989), (-143.08508, -0.236918), (-143.08508, 1.100524), (-143.08978, 1.104072), (-143.08978, -0.240047), (-143.02098, 0.715915), (-143.02098, 1.048722), (-143.02563, 1.05177), (-143.02563, 0.715915), (-143.10802, 1.100524), (-143.10802, -0.236918), (-143.10333, -0.240047), (-143.10333, 1.104072), (-143.02057, 1.050669), (-143.02057, 0.716129), (-143.0159, 0.716416), (-143.0159, 1.053726), (-143.02057, 0.716129), (-143.02057, 0.534644), (-143.0159, 0.53474), (-143.0159, 0.716416), (-143.02057, 0.534644), (-143.02057, 0.291918), (-143.0159, 0.291822), (-143.0159, 0.53474), (-143.02057, 0.291918), (-143.02057, 0.110433), (-143.0159, 0.110146), (-143.0159, 0.291822), (-143.02057, 0.110433), (-143.02057, -0.224107), (-143.0159, -0.227163), (-143.0159, 0.110146), (-143.13069, 1.100955), (-143.13069, -0.236511), (-143.126, -0.240059), (-143.126, 1.104084), (-143.02098, -0.22216), (-143.02098, 0.110647), (-143.02563, 0.110647), (-143.02563, -0.225207), (-143.02098, 0.110647), (-143.02098, 0.292289), (-143.02563, 0.292289), (-143.02563, 0.110647), (-143.02098, 0.292289), (-143.02098, 0.534274), (-143.02563, 0.534274), (-143.02563, 0.292289), (-143.02098, 0.534274), (-143.02098, 0.715915), (-143.02563, 0.715915), (-143.02563, 0.534274), (-116.84274, -111.56212), (-116.84262, -111.56212), (-116.84262, -111.562), (-116.84274, -111.562), (-88.71522, -113.93459), (-85.94583, -113.93459), (-85.94583, -110.74826), (-88.71522, -110.74826), (-69.15797, -112.12344), (-69.15796, -112.12344), (-69.15796, -112.123436), (-69.15797, -112.123436), (-71.65741, -0.270731), (-71.65741, -0.036726), (-72.11801, -0.036726), (-72.11801, -0.270731), (-71.65741, 0.137898), (-72.11801, 0.137898), (-72.11801, -0.036726), (-71.65741, -0.036726), (-71.65741, 0.137898), (-71.65741, 0.442677), (-72.11801, 0.442677), (-72.11801, 0.137898), (-71.45216, 0.460094), (-71.48791, 0.452946), (-71.51821, 0.432592), (-71.53846, 0.40213), (-71.54557, 0.366197), (-71.54557, -0.780235), (-70.9933, -0.780235), (-70.9933, 0.460094), (-71.69829, 0.460094), (-71.69829, -0.686338), (-71.69118, -0.722271), (-71.67093, -0.752733), (-71.640625, -0.773087), (-71.60488, -0.780235), (-71.14603, -0.780235), (-71.14603, 0.460094), (-71.65741, -0.445355), (-72.11801, -0.445355), (-72.11801, -0.750134), (-71.65741, -0.750134), (-71.65741, -0.445355), (-71.65741, -0.270731), (-72.11801, -0.270731), (-72.11801, -0.445355), (-71.79445, -0.278937), (-71.79445, -0.454918), (-71.31032, -0.454918), (-71.31032, -0.278937), (-71.31032, -0.04357), (-71.31032, 0.132412), (-71.79445, 0.132412), (-71.79445, -0.04357), (-71.79445, -0.04357), (-71.79445, -0.278937), (-71.31032, -0.278937), (-71.31032, -0.04357), (-72.00945, 0.145244), (-71.433754, 0.145244), (-71.433754, 0.467721), (-72.00945, 0.467721), (-71.44614, 0.142906), (-71.48188, 0.135759), (-71.512184, 0.115404), (-71.53243, 0.084942), (-71.53954, 0.04901), (-71.53954, -1.144331), (-70.963844, -1.144331), (-70.963844, 0.142906), (-71.79445, -0.454918), (-71.79445, -0.779315), (-71.31032, -0.779315), (-71.31032, -0.454918), (-71.79445, 0.456808), (-71.79445, 0.132412), (-71.31032, 0.132412), (-71.31032, 0.456808), (-71.40145, 0.489053), (-71.40145, -0.704287), (-71.39434, -0.74022), (-71.37409, -0.770682), (-71.343796, -0.791036), (-71.30805, -0.798184), (-70.82575, -0.798184), (-70.82575, 0.489053), (-72.00945, -0.763711), (-71.433754, -0.763711), (-71.433754, -0.441235), (-72.00945, -0.441235), (-71.37539, -1.063666), (-71.199684, -1.05094), (-71.19715, 0.150511), (-71.374756, 0.150511), (-72.00945, -0.265232), (-71.433754, -0.265232), (-71.433754, -0.030759), (-72.00945, -0.030759), (-72.00945, -0.030759), (-71.433754, -0.030759), (-71.433754, 0.145244), (-72.00945, 0.145244), (-71.78896, 0.150511), (-71.78642, -1.05094), (-71.610725, -1.063666), (-71.61136, 0.150511), (-71.61136, 0.150511), (-71.610725, -1.063666), (-71.37539, -1.063666), (-71.374756, 0.150511), (-72.00945, -0.441235), (-71.433754, -0.441235), (-71.433754, -0.265232), (-72.00945, -0.265232), (-70.89349, -1.006339), (-70.89349, 0.150511), (-71.19715, 0.150511), (-71.199684, -1.05094), (-71.78896, 0.150511), (-72.09261, 0.150511), (-72.09261, -1.006339), (-71.78642, -1.05094), (-72.44257, 0.034285), (-72.44257, -1.169504), (-72.11728, -1.169504), (-72.11663, 0.081739), (-71.63565, -0.127129), (-72.18791, -0.127129), (-72.18791, -0.428048), (-71.63565, -0.428048), (-71.63565, 0.048874), (-72.18791, 0.048874), (-72.18791, -0.127129), (-71.63565, -0.127129), (-71.63565, 0.283347), (-72.18791, 0.283347), (-72.18791, 0.048874), (-71.63565, 0.048874), (-71.63565, 0.45935), (-72.18791, 0.45935), (-72.18791, 0.283347), (-71.63565, 0.283347), (-71.63565, 0.760268), (-72.18791, 0.760268), (-72.18791, 0.45935), (-71.63565, 0.45935), (-71.20036, -1.169504), (-71.20036, 0.034285), (-71.526306, 0.081739), (-71.525665, -1.169504), (-71.939735, -1.169504), (-71.70321, -1.169504), (-71.70321, 0.094561), (-71.939735, 0.094561), (-71.939735, 0.094561), (-72.11663, 0.081739), (-72.11728, -1.169504), (-71.939735, -1.169504), (-71.70321, -1.169504), (-71.525665, -1.169504), (-71.526306, 0.081739), (-71.70321, 0.094561), (-71.70321, 0.094561), (-71.526306, 0.081739), (-71.52633, 0.117987), (-71.70321, 0.130808), (-71.70321, 0.130808), (-71.52633, 0.117987), (-71.526344, 0.148716), (-71.70321, 0.161537), (-71.70321, 0.161537), (-71.526344, 0.148716), (-71.52635, 0.169248), (-71.70321, 0.182069), (-71.83033, -0.278937), (-71.83033, -0.454923), (-71.79445, -0.454918), (-71.79445, -0.278937), (-72.11663, 0.081739), (-71.939735, 0.094561), (-71.939735, 0.130808), (-72.116615, 0.117987), (-72.116615, 0.117987), (-71.939735, 0.130808), (-71.939735, 0.161537), (-72.1166, 0.148716), (-72.1166, 0.148716), (-71.939735, 0.161537), (-71.939735, 0.182069), (-72.116585, 0.169248), (-71.83033, 0.132416), (-71.83033, -0.04357), (-71.79445, -0.04357), (-71.79445, 0.132412), (-71.939735, 0.094561), (-71.70321, 0.094561), (-71.70321, 0.130808), (-71.939735, 0.130808), (-71.939735, 0.130808), (-71.70321, 0.130808), (-71.70321, 0.161537), (-71.939735, 0.161537), (-71.939735, 0.161537), (-71.70321, 0.161537), (-71.70321, 0.182069), (-71.939735, 0.182069), (-71.83033, -0.04357), (-71.83033, -0.278937), (-71.79445, -0.278937), (-71.79445, -0.04357), (-71.526306, 0.081739), (-71.20036, 0.034285), (-71.20036, 0.070532), (-71.52633, 0.117987), (-71.52633, 0.117987), (-71.20036, 0.070532), (-71.20036, 0.101261), (-71.526344, 0.148716), (-71.526344, 0.148716), (-71.20036, 0.101261), (-71.20036, 0.121794), (-71.52635, 0.169248), (-71.83033, -0.454923), (-71.83033, -0.779315), (-71.79445, -0.779315), (-71.79445, -0.454918), (-72.44257, 0.034285), (-72.11663, 0.081739), (-72.116615, 0.117987), (-72.44257, 0.070532), (-72.44257, 0.070532), (-72.116615, 0.117987), (-72.1166, 0.148716), (-72.44257, 0.101261), (-72.44257, 0.101261), (-72.1166, 0.148716), (-72.116585, 0.169248), (-72.44257, 0.121794), (-71.83033, 0.456808), (-71.83033, 0.132416), (-71.79445, 0.132412), (-71.79445, 0.456808), (-71.78642, -1.05094), (-72.09261, -1.006339), (-72.09261, -1.042598), (-71.78635, -1.087198), (-71.78635, -1.087198), (-72.09261, -1.042598), (-72.09261, -1.073337), (-71.786285, -1.117937), (-71.786285, -1.117937), (-72.09261, -1.073337), (-72.09261, -1.093876), (-71.78624, -1.138477), (-71.62154, 0.137913), (-71.62154, 0.442677), (-71.65741, 0.442677), (-71.65741, 0.137898), (-70.89349, -1.006339), (-71.199684, -1.05094), (-71.19977, -1.087198), (-70.89349, -1.042598), (-70.89349, -1.042598), (-71.19977, -1.087198), (-71.19983, -1.117937), (-70.89349, -1.073337), (-70.89349, -1.073337), (-71.19983, -1.117937), (-71.199875, -1.138477), (-70.89349, -1.093876), (-71.62154, -0.750134), (-71.62154, -0.445371), (-71.65741, -0.445355), (-71.65741, -0.750134), (-71.37539, -1.063666), (-71.610725, -1.063666), (-71.61071, -1.099925), (-71.375404, -1.099925), (-71.375404, -1.099925), (-71.61071, -1.099925), (-71.610695, -1.130664), (-71.37542, -1.130664), (-71.37542, -1.130664), (-71.610695, -1.130664), (-71.61068, -1.151203), (-71.375435, -1.151203), (-71.62154, -0.270735), (-71.62154, -0.036722), (-71.65741, -0.036726), (-71.65741, -0.270731), (-71.610725, -1.063666), (-71.78642, -1.05094), (-71.78635, -1.087198), (-71.61071, -1.099925), (-71.61071, -1.099925), (-71.78635, -1.087198), (-71.786285, -1.117937), (-71.610695, -1.130664), (-71.610695, -1.130664), (-71.786285, -1.117937), (-71.78624, -1.138477), (-71.61068, -1.151203), (-71.62154, -0.036722), (-71.62154, 0.137913), (-71.65741, 0.137898), (-71.65741, -0.036726), (-71.199684, -1.05094), (-71.37539, -1.063666), (-71.375404, -1.099925), (-71.19977, -1.087198), (-71.19977, -1.087198), (-71.375404, -1.099925), (-71.37542, -1.130664), (-71.19983, -1.117937), (-71.19983, -1.117937), (-71.37542, -1.130664), (-71.375435, -1.151203), (-71.199875, -1.138477), (-71.62154, -0.445371), (-71.62154, -0.270735), (-71.65741, -0.270731), (-71.65741, -0.445355), (5.646933, -121.22408), (7.358486, -121.22408), (7.358486, -119.51253), (5.646933, -119.51253), (-5.253075, -117.71076), (-3.54152, -117.71076), (-3.54152, -115.99921), (-5.253075, -115.99921)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_FridgeDrawer1D3_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0]
                rel material:binding = </root/_materials/M_FridgeDrawer1D3_0>
            }

            def GeomSubset "M_FridgeDrawer1D3_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
                rel material:binding = </root/_materials/M_FridgeDrawer1D3_1>
            }

            def GeomSubset "M_FridgeDrawer1D3_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [62]
                rel material:binding = </root/_materials/M_FridgeDrawer1D3_2>
            }

            def GeomSubset "M_FridgeDrawer1D3_3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [63]
                rel material:binding = </root/_materials/M_FridgeDrawer1D3_3>
            }

            def GeomSubset "M_FridgeDrawer1D3_4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138]
                rel material:binding = </root/_materials/M_FridgeDrawer1D3_4>
            }

            def GeomSubset "M_FridgeDrawer1D3_5" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [139]
                rel material:binding = </root/_materials/M_FridgeDrawer1D3_5>
            }

            def GeomSubset "M_FridgeDrawer1D3_6" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [140]
                rel material:binding = </root/_materials/M_FridgeDrawer1D3_6>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer1D3_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1D3_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1D3_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge.tga@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D3_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer1D3_1"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1D3_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1D3_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1D3_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D3_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D3_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer1D3_2"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1D3_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1D3_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1D3_2/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D3_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D3_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer1D3_3"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1D3_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.25, 0.25, 0.25)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1D3_3/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D3_3/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer1D3_4"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1D3_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.39705884, 0.39705884, 0.39705884)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }

        def Material "M_FridgeDrawer1D3_5"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1D3_5/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1D3_5/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1D3_5/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Decal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D3_5/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Decal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D3_5/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer1D3_6"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1D3_6/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1D3_6/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1D3_6/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Readout_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D3_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D3_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

