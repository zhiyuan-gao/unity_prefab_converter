#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "FridgeDrawer1_15_FridgeDrawer1C3_1_GeomSubset_0"
    {
        def Mesh "FridgeDrawer1_15_FridgeDrawer1C3_1_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 52, 53, 70, 63, 58, 37, 41, 57, 63, 34, 35, 62, 62, 35, 36, 64, 57, 41, 40, 69, 71, 38, 39, 70, 69, 40, 38, 71, 64, 36, 37, 58, 70, 39, 34, 63, 28, 34, 39, 29, 58, 77, 76, 64, 71, 79, 78, 69, 71, 70, 53, 80, 79, 57, 69, 78, 81, 62, 64, 76, 82, 62, 82, 83, 52, 63, 77, 58, 57, 81, 53, 52, 83, 80, 85, 84, 28, 29, 95, 94, 93, 92, 35, 34, 28, 84, 88, 89, 36, 35, 88, 40, 41, 86, 90, 38, 91, 85, 29, 39, 91, 38, 40, 90, 37, 36, 89, 87, 41, 37, 92, 93, 37, 87, 95, 92, 87, 86, 94, 95, 86, 41, 93, 94]
            rel material:binding = </root/_materials/M_FridgeDrawer1C3_0>
            normal3f[] normals = [(0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0.0000041939784, 0.92894524, -0.3702171), (8.866191e-7, 0.92893106, -0.37025303), (-0.0000033367842, 0.95652646, -0.29164568), (-0.0000033367842, 0.95652646, -0.29164568), (-0.035997964, 0.06899696, -0.99696714), (-0.025189707, 0.04958556, -0.9984522), (0.025188312, 0.049583394, -0.99845237), (0.03599793, 0.06900065, -0.99696684), (2.0343994e-7, 0, -1), (2.1298337e-7, 0, -1), (2.0421858e-7, 0, -1), (2.0097127e-7, 0, -1), (2.0097127e-7, 0, -1), (2.0421858e-7, 0, -1), (-0.0017946344, -0.00010089774, -0.9999984), (-0.00079935975, -5.081529e-7, -0.99999976), (0.03599793, 0.06900065, -0.99696684), (0.025188312, 0.049583394, -0.99845237), (0.0017942227, -0.00010076468, -0.99999833), (0.00079904683, -2.4886685e-7, -0.9999997), (-1.7584857e-7, 0, -1), (-1.7869175e-7, 0, -1), (-1.863418e-7, 0, -1), (-1.7801587e-7, 0, -1), (0.00079904683, -2.4886685e-7, -0.9999997), (0.0017942227, -0.00010076468, -0.99999833), (-1.7869175e-7, 0, -1), (-1.7584857e-7, 0, -1), (-0.00079935975, -5.081529e-7, -0.99999976), (-0.0017946344, -0.00010089774, -0.9999984), (-0.025189707, 0.04958556, -0.9984522), (-0.035997964, 0.06899696, -0.99696714), (-1.7801587e-7, 0, -1), (-1.863418e-7, 0, -1), (2.1298337e-7, 0, -1), (2.0343994e-7, 0, -1), (0.0000022265933, -0.9804145, 0.196945), (0.0000022630018, -0.99999994, 0), (0.0000022630018, -0.99999994, 0), (0.0000020829666, -0.98041445, 0.19694528), (0.99945766, 0.012888951, 0.030302718), (0.9994638, 0.013031324, 0.030038342), (0.9995746, -0.003102228, 0.028998796), (0.9995964, -0.0004718135, 0.028404454), (-0.9993376, -0.009212117, 0.03520849), (-0.9991552, -0.01132706, 0.039503288), (-0.9995774, -0.0031100805, 0.028900165), (-0.9995964, -0.00047738338, 0.028403318), (-0.9993376, -0.009212117, 0.03520849), (-0.99183816, -0.0845546, 0.09543322), (-0.99183816, -0.0845546, 0.09543322), (-0.9928257, -0.08550382, 0.08358332), (-0.9991552, -0.01132706, 0.039503288), (-0.9994577, 0.012884732, 0.030301811), (-0.9995964, -0.00047738338, 0.028403318), (-0.9995774, -0.0031100805, 0.028900165), (-0.999465, 0.012988933, 0.030015316), (0.9993387, -0.009105109, 0.0352012), (0.9995964, -0.0004718135, 0.028404454), (0.9995746, -0.003102228, 0.028998796), (0.99915975, -0.011292685, 0.039399587), (0.9993387, -0.009105109, 0.0352012), (0.99915975, -0.011292685, 0.039399587), (0.9928243, -0.085501894, 0.083602466), (0.9918356, -0.0845534, 0.09546133), (0.9918356, -0.0845534, 0.09546133), (0.0000034359605, -0.9807754, -0.19513997), (0.0000034382458, -0.9807755, -0.19513977), (0.0000034382458, -0.9807755, -0.19513977), (0.00000343596, -0.98077536, -0.19513994), (8.866191e-7, 0.92893106, -0.37025303), (0.0000041939784, 0.92894524, -0.3702171), (-0.0000019368053, 0.83394146, -0.551853), (-0.0000019368051, 0.83394146, -0.55185294), (0.0000023352293, -0.8259865, 0.5636899), (0.00000233523, -0.8259865, 0.5636899), (0.0000022265933, -0.9804145, 0.196945), (0.0000020829666, -0.98041445, 0.19694528), (-0.000002227947, 0.9844307, 0.17577298), (-0.000002227947, 0.9844307, 0.17577298), (-0.000002227947, 0.9844307, 0.17577298), (-0.000002227947, 0.9844307, 0.17577298), (-1, -0.000007653455, 0.0000017819654), (-1, -0.00001530691, 0.000003563931), (-1, -0.00001530691, 0.000003563931), (-1, -0.000015571934, 0.0000024613062), (-1, -0.000008618935, 8.909827e-7), (-1, -6.624278e-7, 0), (-1, 0, 0), (-1, -0.000007653455, 0.0000017819654), (-1, -0.000008618935, 8.909827e-7), (1, 0.0000020296552, 1.8105436e-7), (1, 0.0000018013691, 1.6069022e-7), (1, 0.000002867976, 3.7808965e-7), (1, 0.000001938853, 2.8457757e-7), (1, 0, 0), (1, -1.3663272e-7, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, -1.3663272e-7, 0), (1, 0, 0), (1, 0.0000020296552, 1.8105436e-7), (1, 0.000001938853, 2.8457757e-7), (-1, 0, 0), (-1, 0, 0), (-1, -6.624278e-7, 0), (-1, 1.0929856e-7, 0), (0.025188312, 0.049583394, -0.99845237), (-0.025189707, 0.04958556, -0.9984522), (3.0562253e-9, 0, -1), (3.0562253e-9, 0, -1), (-1, 0, 0), (-1, 1.0929856e-7, 0), (-1, 0, 0), (-1, 0, 0), (2.136116e-9, 0, 1), (2.136116e-9, 0, 1), (2.136116e-9, 0, 1), (2.136116e-9, 0, 1), (1, 0.000002867976, 3.7808965e-7), (1, 0.0000018013691, 1.6069022e-7), (1, 0, 0), (1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.000162, 0.042564, -0.884604), (-0.000172, 0.042564, -0.884604), (-0.000162, 0.042573, -0.884604), (-0.000172, 0.042573, -0.884604), (-0.000162, 0.042564, -0.884604), (-0.000172, 0.042564, -0.884604), (-0.000162, 0.042573, -0.884604), (-0.000172, 0.042573, -0.884604), (-0.000162, 0.042564, -0.884604), (-0.000172, 0.042564, -0.884604), (-0.000162, 0.042573, -0.884604), (-0.000172, 0.042573, -0.884604), (-0.000162, 0.042564, -0.884604), (-0.000172, 0.042564, -0.884604), (-0.000162, 0.042573, -0.884604), (-0.000172, 0.042573, -0.884604), (-0.000162, 0.042564, -0.884604), (-0.000172, 0.042564, -0.884604), (-0.000162, 0.042573, -0.884604), (-0.000172, 0.042573, -0.884604), (-0.000162, 0.042564, -0.884604), (-0.000172, 0.042564, -0.884604), (-0.000162, 0.042573, -0.884604), (-0.000172, 0.042573, -0.884604), (-0.000162, 0.042564, -0.884604), (-0.000172, 0.042564, -0.884604), (-0.000162, 0.042573, -0.884604), (-0.000172, 0.042573, -0.884604), (0.470219, 0.157253, 0.046485), (0.029045, 0.157252, 0.046485), (0.47022, 0.088799, -0.053823), (0.47022, 0.083927, -0.056348), (0.029045, 0.083926, -0.056348), (0.029045, 0.088797, -0.053823), (0.470219, 0.157253, 0.053365), (0.47022, 0.088799, 0.053365), (0.47022, 0.083927, 0.053365), (0.47022, -0.164552, 0.053365), (0.029045, 0.088797, 0.053365), (0.029045, 0.157252, 0.053365), (0.029045, 0.083926, 0.053365), (0.029046, -0.164553, 0.053365), (0.029046, -0.128286, -0.056348), (0.029046, -0.148407, -0.037075), (0.47022, -0.148406, -0.037074), (0.47022, -0.128285, -0.056348), (0.47022, -0.146874, -0.04445), (0.029046, -0.146875, -0.04445), (0.47022, -0.142512, -0.050702), (0.029046, -0.142514, -0.050702), (0.47022, -0.135985, -0.05488), (0.029046, -0.135986, -0.05488), (0.465426, 0.149021, 0.048834), (0.033839, 0.14902, 0.048834), (0.036486, 0.084232, -0.04907), (0.462779, 0.084233, -0.04907), (0.033681, -0.139887, -0.035565), (0.036374, -0.157801, 0.054471), (0.462892, -0.157799, 0.054471), (0.465585, -0.139885, -0.035565), (0.036486, 0.082271, -0.050086), (0.462779, 0.082273, -0.050086), (0.459856, 0.088799, 0.053365), (0.462891, 0.150403, 0.053365), (0.459856, 0.083927, 0.053365), (0.033753, -0.138902, -0.041286), (0.033753, -0.136411, -0.044856), (0.033753, -0.132683, -0.047242), (0.033698, -0.127438, -0.048095), (0.039409, 0.083926, 0.053365), (0.036373, 0.150401, 0.053365), (0.039409, 0.088797, 0.053365), (0.465568, -0.127437, -0.048095), (0.465513, -0.132682, -0.047242), (0.465513, -0.13641, -0.044856), (0.465513, -0.1389, -0.041286), (0.460449, 0.083592, 0.032374), (0.463553, -0.153403, 0.032374), (0.038816, 0.08359, 0.032374), (0.03881, 0.087862, 0.032374), (0.034284, 0.138128, 0.032374), (0.035713, -0.153404, 0.032374), (0.460455, 0.087863, 0.032374), (0.464981, 0.138129, 0.032374), (0.470219, 0.147623, 0.032374), (0.029045, 0.147622, 0.032374), (0.029046, -0.160805, 0.032374), (0.47022, -0.160804, 0.032374), (0.47022, 0.088799, 0.032374), (0.47022, 0.083927, 0.032374), (0.029045, 0.083926, 0.032374), (0.029045, 0.088797, 0.032374), (0.47022, -0.178214, 0.053365), (0.029046, -0.178215, 0.053365), (0.029046, -0.174467, 0.032374), (0.47022, -0.174466, 0.032374)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-170.93037, -111.154526), (-170.93037, -111.1546), (-170.9303, -111.1546), (-170.9303, -111.154526), (-170.28491, 0.708493), (-170.28491, -0.663492), (-170.27052, -0.655435), (-170.27052, 0.700436), (-171.14845, 0.659137), (-171.16832, 0.680741), (-171.16832, -0.619906), (-171.14845, -0.598302), (-170.23982, 0.659137), (-170.2196, 0.680741), (-170.42142, 0.680741), (-170.42142, 0.650188), (-170.42142, 0.650188), (-170.42142, 0.680741), (-170.43576, 0.680741), (-170.43576, 0.650188), (-171.14845, -0.598302), (-171.16832, -0.619906), (-170.43576, -0.619906), (-170.43576, -0.589353), (-170.42142, -0.589353), (-170.42142, -0.619906), (-170.2196, -0.619906), (-170.23982, -0.598302), (-170.43576, -0.589353), (-170.43576, -0.619906), (-170.42142, -0.619906), (-170.42142, -0.589353), (-170.43576, 0.650188), (-170.43576, 0.680741), (-171.16832, 0.680741), (-171.14845, 0.659137), (-170.23982, -0.598302), (-170.2196, -0.619906), (-170.2196, 0.680741), (-170.23982, 0.659137), (-170.42438, 0.724393), (-170.446, 0.724393), (-170.446, -0.663558), (-170.42438, -0.663558), (-170.119, 0.93227), (-170.1841, 0.919313), (-170.1841, 0.220886), (-170.12224, 0.219897), (-170.16403, 0.750773), (-170.22586, 0.748015), (-170.22586, 0.735425), (-170.16403, 0.736414), (-170.16403, 0.750773), (-170.16403, 0.932355), (-170.17738, 0.928283), (-170.22586, 0.896178), (-170.22586, 0.748015), (-170.16077, 0.023908), (-170.16403, 0.736414), (-170.22586, 0.735425), (-170.22586, 0.036867), (-170.12224, 0.205541), (-170.12224, 0.219897), (-170.1841, 0.220886), (-170.1841, 0.208298), (-170.12224, 0.205541), (-170.1841, 0.208298), (-170.1841, 0.060163), (-170.13562, 0.028064), (-170.12224, 0.023993), (-170.22984, 0.655309), (-170.29552, 0.653344), (-170.29552, -0.614533), (-170.22984, -0.616498), (-170.28491, -0.663492), (-170.28491, 0.708493), (-170.33725, 0.707078), (-170.33725, -0.662078), (-170.37999, -0.663558), (-170.37999, 0.724393), (-170.42438, 0.724393), (-170.42438, -0.663558), (-170.40385, 0.684904), (-170.40385, -0.624068), (-170.34157, -0.624068), (-170.34157, 0.684904), (-170.19073, 0.235373), (-170.19073, 0.436886), (-170.21098, 0.436886), (-170.25253, 0.408538), (-170.25253, 0.235373), (-170.25253, 0.221033), (-170.19073, 0.221033), (-170.19073, 0.235373), (-170.25253, 0.235373), (-170.15044, -0.33481), (-170.15044, 0.396692), (-170.21223, 0.38566), (-170.21223, -0.33481), (-170.15044, -0.349151), (-170.21223, -0.349151), (-170.21223, -0.522325), (-170.1707, -0.550675), (-170.15044, -0.550675), (-170.21223, -0.349151), (-170.15044, -0.349151), (-170.15044, -0.33481), (-170.21223, -0.33481), (-170.19073, -0.51043), (-170.19073, 0.221033), (-170.25253, 0.221033), (-170.25253, -0.499399), (-171.16832, -0.619906), (-171.16832, 0.680741), (-171.2086, 0.680741), (-171.2086, -0.619906), (-170.19073, -0.51043), (-170.25253, -0.499399), (-170.25253, -0.539616), (-170.19073, -0.550648), (-170.3586, 0.679656), (-170.3586, -0.61882), (-170.31836, -0.61882), (-170.31836, 0.679656), (-170.21223, 0.38566), (-170.15044, 0.396692), (-170.15044, 0.436912), (-170.21223, 0.42588)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer1C3_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1C3_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1C3_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1C3_0/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1C3_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Copper_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1C3_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

