#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "FridgeDrawer2_15_FridgeDrawer2C3_2_GeomSubset_0"
    {
        def Mesh "FridgeDrawer2_15_FridgeDrawer2C3_2_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 52, 53, 70, 63, 58, 37, 41, 57, 63, 34, 35, 62, 62, 35, 36, 64, 57, 41, 40, 69, 71, 38, 39, 70, 69, 40, 38, 71, 64, 36, 37, 58, 70, 39, 34, 63, 28, 34, 39, 29, 58, 77, 76, 64, 71, 79, 78, 69, 71, 70, 53, 80, 79, 57, 69, 78, 81, 62, 64, 76, 82, 62, 82, 83, 52, 63, 77, 58, 57, 81, 53, 52, 83, 80, 85, 84, 28, 29, 95, 94, 93, 92, 35, 34, 28, 84, 88, 89, 36, 35, 88, 40, 41, 86, 90, 38, 91, 85, 29, 39, 91, 38, 40, 90, 37, 36, 89, 87, 41, 37, 92, 93, 37, 87, 95, 92, 87, 86, 94, 95, 86, 41, 93, 94]
            rel material:binding = </root/_materials/M_FridgeDrawer2C3_0>
            normal3f[] normals = [(0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0.0000016849954, 0.9289396, -0.37023124), (5.9604645e-7, 0.928943, -0.37022272), (-0.0000022251556, 0.9565581, -0.29154173), (-0.0000022251556, 0.9565581, -0.29154173), (-0.035994984, 0.06900436, -0.9969668), (-0.02519092, 0.049585428, -0.9984522), (0.025189485, 0.04958544, -0.9984522), (0.035996288, 0.069006115, -0.9969665), (2.0345672e-7, 0, -1), (2.1297446e-7, 0, -1), (2.0423018e-7, 0, -1), (2.0098173e-7, 0, -1), (2.0098173e-7, 0, -1), (2.0423018e-7, 0, -1), (-0.001796253, -0.000100851044, -0.9999984), (-0.00080091134, -5.791662e-7, -0.99999964), (0.035996288, 0.069006115, -0.9969665), (0.025189485, 0.04958544, -0.9984522), (0.001794219, -0.000100772246, -0.99999833), (0.00079904497, -2.591405e-7, -0.99999976), (7.536414e-8, 0, -1), (7.658266e-8, 0, -1), (7.986826e-8, 0, -1), (7.629061e-8, 0, -1), (0.00079904497, -2.591405e-7, -0.99999976), (0.001794219, -0.000100772246, -0.99999833), (7.658266e-8, 0, -1), (7.536414e-8, 0, -1), (-0.00080091134, -5.791662e-7, -0.99999964), (-0.001796253, -0.000100851044, -0.9999984), (-0.02519092, 0.049585428, -0.9984522), (-0.035994984, 0.06900436, -0.9969668), (7.629061e-8, 0, -1), (7.986826e-8, 0, -1), (2.1297446e-7, 0, -1), (2.0345672e-7, 0, -1), (0.000008306088, -0.9804147, 0.19694446), (0.0000045260035, -1, 0), (0.0000045260035, -1, 0), (0.0000041678804, -0.98041457, 0.19694494), (0.99945766, 0.012888907, 0.0303022), (0.9994678, 0.013071306, 0.029889487), (0.99957466, -0.0031078863, 0.028999548), (0.99959636, -0.00047531415, 0.028403537), (-0.99933857, -0.009112738, 0.035207983), (-0.9991554, -0.0113171395, 0.03950129), (-0.99957746, -0.0031073377, 0.028898753), (-0.9995965, -0.00051743817, 0.02839747), (-0.99933857, -0.009112738, 0.035207983), (-0.9918366, -0.08454594, 0.095456995), (-0.9918366, -0.08454594, 0.095456995), (-0.9928248, -0.085502386, 0.08359674), (-0.9991554, -0.0113171395, 0.03950129), (-0.9994571, 0.012882599, 0.03032463), (-0.9995965, -0.00051743817, 0.02839747), (-0.99957746, -0.0031073377, 0.028898753), (-0.99946487, 0.0129835, 0.030023294), (0.999339, -0.009094883, 0.035195954), (0.99959636, -0.00047531415, 0.028403537), (0.99957466, -0.0031078863, 0.028999548), (0.99915546, -0.01131881, 0.03950138), (0.999339, -0.009094883, 0.035195954), (0.99915546, -0.01131881, 0.03950138), (0.992826, -0.085503824, 0.08358026), (0.99183905, -0.08454592, 0.09543276), (0.99183905, -0.08454592, 0.09543276), (0.0000034273091, -0.9807754, -0.19513996), (0.0000034382458, -0.98077536, -0.1951401), (0.0000034382458, -0.98077536, -0.1951401), (0.0000034273091, -0.98077536, -0.19513994), (5.9604645e-7, 0.928943, -0.37022272), (0.0000016849954, 0.9289396, -0.37023124), (-0.0000029055207, 0.8339342, -0.5518639), (-0.0000029055207, 0.83393425, -0.55186385), (0.0000032753362, -0.8259867, 0.5636897), (0.0000032753378, -0.8259867, 0.5636897), (0.000008306088, -0.9804147, 0.19694446), (0.0000041678804, -0.98041457, 0.19694494), (-0.000003341729, 0.98443466, 0.17575075), (-0.000003341729, 0.98443466, 0.17575075), (-0.000003341729, 0.98443466, 0.17575075), (-0.000003341729, 0.98443466, 0.17575075), (-1, 1.0629636e-8, 0), (-1, 2.1259273e-8, 0), (-1, 2.1259273e-8, 0), (-1, 1.4682023e-8, 0), (-1, -1.0142951e-7, 0), (-1, -0.0000021800129, -2.8455295e-7), (-1, -0.000002029651, -1.8100557e-7), (-1, 1.0629636e-8, 0), (-1, -1.0142951e-7, 0), (1, 0.000002069007, 1.8336515e-7), (1, 0.0000018363555, 1.6274649e-7), (1, 0.0000029177284, 3.8297472e-7), (1, 0.000002111003, 2.8826204e-7), (1, 8.50384e-8, 0), (1, 4.25192e-8, 0), (1, 1.1745769e-7, 0), (1, 1.700768e-7, 0), (1, 1.700768e-7, 0), (1, 4.25192e-8, 0), (1, 8.50384e-8, 0), (1, 0.000002069007, 1.8336515e-7), (1, 0.000002111003, 2.8826204e-7), (-1, -0.0000018014249, -1.6065223e-7), (-1, -0.000002029651, -1.8100557e-7), (-1, -0.0000021800129, -2.8455295e-7), (-1, -0.0000028652034, -3.7804668e-7), (0.025189485, 0.04958544, -0.9984522), (-0.02519092, 0.049585428, -0.9984522), (3.0562177e-9, 0, -1), (3.0562177e-9, 0, -1), (-1, -0.0000018014249, -1.6065223e-7), (-1, -0.0000028652034, -3.7804668e-7), (-1, 0, 0), (-1, 0, 0), (-5.5644817e-10, 0, 1), (-5.5644817e-10, 0, 1), (-5.5644817e-10, 0, 1), (-5.5644817e-10, 0, 1), (1, 0.0000029177284, 3.8297472e-7), (1, 0.0000018363555, 1.6274649e-7), (1, 0, 0), (1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.000162, 0.042564, -0.884604), (-0.000172, 0.042564, -0.884604), (-0.000162, 0.042573, -0.884604), (-0.000172, 0.042573, -0.884604), (-0.000162, 0.042564, -0.884604), (-0.000172, 0.042564, -0.884604), (-0.000162, 0.042573, -0.884604), (-0.000172, 0.042573, -0.884604), (-0.000162, 0.042564, -0.884604), (-0.000172, 0.042564, -0.884604), (-0.000162, 0.042573, -0.884604), (-0.000172, 0.042573, -0.884604), (-0.000162, 0.042564, -0.884604), (-0.000172, 0.042564, -0.884604), (-0.000162, 0.042573, -0.884604), (-0.000172, 0.042573, -0.884604), (-0.000162, 0.042564, -0.884604), (-0.000172, 0.042564, -0.884604), (-0.000162, 0.042573, -0.884604), (-0.000172, 0.042573, -0.884604), (-0.000162, 0.042564, -0.884604), (-0.000172, 0.042564, -0.884604), (-0.000162, 0.042573, -0.884604), (-0.000172, 0.042573, -0.884604), (-0.000162, 0.042564, -0.884604), (-0.000172, 0.042564, -0.884604), (-0.000162, 0.042573, -0.884604), (-0.000172, 0.042573, -0.884604), (-0.029354, 0.157252, 0.046485), (-0.470528, 0.15725, 0.046485), (-0.029354, 0.088797, -0.053823), (-0.029354, 0.083926, -0.056348), (-0.470528, 0.083925, -0.056348), (-0.470528, 0.088796, -0.053823), (-0.029354, 0.157252, 0.053365), (-0.029354, 0.088797, 0.053365), (-0.029354, 0.083926, 0.053365), (-0.029353, -0.164553, 0.053365), (-0.470528, 0.088796, 0.053365), (-0.470528, 0.15725, 0.053365), (-0.470528, 0.083925, 0.053365), (-0.470527, -0.164554, 0.053365), (-0.470527, -0.128288, -0.056348), (-0.470527, -0.148408, -0.037075), (-0.029353, -0.148407, -0.037074), (-0.029353, -0.128287, -0.056348), (-0.029353, -0.146875, -0.04445), (-0.470527, -0.146877, -0.04445), (-0.029353, -0.142514, -0.050702), (-0.470527, -0.142515, -0.050702), (-0.029353, -0.135986, -0.05488), (-0.470527, -0.135988, -0.05488), (-0.034147, 0.14902, 0.048834), (-0.465734, 0.149019, 0.048834), (-0.463087, 0.08423, -0.04907), (-0.036795, 0.084231, -0.04907), (-0.465892, -0.139888, -0.035565), (-0.463199, -0.157802, 0.054471), (-0.036681, -0.157801, 0.054471), (-0.033988, -0.139887, -0.035565), (-0.463087, 0.08227, -0.050086), (-0.036795, 0.082271, -0.050086), (-0.039717, 0.088797, 0.053365), (-0.036682, 0.150401, 0.053365), (-0.039717, 0.083926, 0.053365), (-0.46582, -0.138903, -0.041286), (-0.46582, -0.136412, -0.044856), (-0.46582, -0.132685, -0.047242), (-0.465875, -0.127439, -0.048095), (-0.460164, 0.083925, 0.053365), (-0.4632, 0.1504, 0.053365), (-0.460164, 0.088796, 0.053365), (-0.034006, -0.127438, -0.048095), (-0.03406, -0.132683, -0.047242), (-0.03406, -0.136411, -0.044856), (-0.03406, -0.138902, -0.041286), (-0.039124, 0.08359, 0.032374), (-0.03602, -0.153404, 0.032374), (-0.460758, 0.083589, 0.032374), (-0.460764, 0.08786, 0.032374), (-0.465289, 0.138126, 0.032374), (-0.46386, -0.153406, 0.032374), (-0.039118, 0.087862, 0.032374), (-0.034593, 0.138128, 0.032374), (-0.029354, 0.147622, 0.032374), (-0.470528, 0.14762, 0.032374), (-0.470527, -0.160807, 0.032374), (-0.029353, -0.160806, 0.032374), (-0.029354, 0.088797, 0.032374), (-0.029354, 0.083926, 0.032374), (-0.470528, 0.083925, 0.032374), (-0.470528, 0.088796, 0.032374), (-0.029353, -0.178215, 0.053365), (-0.470527, -0.178216, 0.053365), (-0.470527, -0.174469, 0.032374), (-0.029353, -0.174467, 0.032374)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-170.93037, -111.154526), (-170.93037, -111.1546), (-170.93031, -111.1546), (-170.93031, -111.154526), (-170.28491, 0.708438), (-170.28491, -0.663438), (-170.27052, -0.655382), (-170.27052, 0.700381), (-171.14835, 0.658999), (-171.16823, 0.680599), (-171.16823, -0.619764), (-171.14835, -0.598165), (-170.23993, 0.658999), (-170.21971, 0.680599), (-170.42151, 0.680599), (-170.42151, 0.650053), (-170.42151, 0.650053), (-170.42151, 0.680599), (-170.43585, 0.680599), (-170.43585, 0.650053), (-171.14835, -0.598165), (-171.16823, -0.619764), (-170.43585, -0.619764), (-170.43585, -0.589217), (-170.42151, -0.589217), (-170.42151, -0.619764), (-170.21971, -0.619764), (-170.23993, -0.598165), (-170.43585, -0.589217), (-170.43585, -0.619764), (-170.42151, -0.619764), (-170.42151, -0.589217), (-170.43585, 0.650053), (-170.43585, 0.680599), (-171.16823, 0.680599), (-171.14835, 0.658999), (-170.23993, -0.598165), (-170.21971, -0.619764), (-170.21971, 0.680599), (-170.23993, 0.658999), (-170.42438, 0.724345), (-170.446, 0.724345), (-170.446, -0.66351), (-170.42438, -0.66351), (-170.119, 0.932275), (-170.1841, 0.919318), (-170.1841, 0.220884), (-170.12224, 0.219894), (-170.16403, 0.750773), (-170.22586, 0.748015), (-170.22586, 0.735425), (-170.16403, 0.736414), (-170.16403, 0.750773), (-170.16403, 0.932355), (-170.17738, 0.928283), (-170.22586, 0.896178), (-170.22586, 0.748015), (-170.16077, 0.023908), (-170.16403, 0.736414), (-170.22586, 0.735425), (-170.22586, 0.036867), (-170.12224, 0.205538), (-170.12224, 0.219894), (-170.1841, 0.220884), (-170.1841, 0.208295), (-170.12224, 0.205538), (-170.1841, 0.208295), (-170.1841, 0.060159), (-170.13562, 0.028059), (-170.12224, 0.023988), (-170.22984, 0.655351), (-170.29552, 0.653386), (-170.29552, -0.614576), (-170.22984, -0.61654), (-170.28491, -0.663438), (-170.28491, 0.708438), (-170.33725, 0.707023), (-170.33725, -0.662023), (-170.37999, -0.66351), (-170.37999, 0.724345), (-170.42438, 0.724345), (-170.42438, -0.66351), (-170.40385, 0.684856), (-170.40385, -0.624021), (-170.34157, -0.624021), (-170.34157, 0.684856), (-170.19073, 0.235373), (-170.19073, 0.436886), (-170.21098, 0.436886), (-170.25253, 0.408538), (-170.25253, 0.235373), (-170.25253, 0.221033), (-170.19073, 0.221033), (-170.19073, 0.235373), (-170.25253, 0.235373), (-170.15044, -0.33481), (-170.15044, 0.396692), (-170.21223, 0.38566), (-170.21223, -0.33481), (-170.15044, -0.349151), (-170.21223, -0.349151), (-170.21223, -0.522325), (-170.1707, -0.550675), (-170.15044, -0.550675), (-170.21223, -0.349151), (-170.15044, -0.349151), (-170.15044, -0.33481), (-170.21223, -0.33481), (-170.19073, -0.51043), (-170.19073, 0.221033), (-170.25253, 0.221033), (-170.25253, -0.499399), (-171.16823, -0.619764), (-171.16823, 0.680599), (-171.2085, 0.680599), (-171.2085, -0.619764), (-170.19073, -0.51043), (-170.25253, -0.499399), (-170.25253, -0.539616), (-170.19073, -0.550648), (-170.3586, 0.67985), (-170.3586, -0.619015), (-170.31836, -0.619015), (-170.31836, 0.67985), (-170.21223, 0.38566), (-170.15044, 0.396692), (-170.15044, 0.436912), (-170.21223, 0.42588)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer2C3_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2C3_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer2C3_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2C3_0/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2C3_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Copper_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2C3_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

