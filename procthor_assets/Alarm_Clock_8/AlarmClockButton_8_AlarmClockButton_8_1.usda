#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "AlarmClockButton_8"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "AlarmClockButton_8" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.038142, -0.033667, -0.35255), (0.038142, 0.005162, 0.103013)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 4, 5, 7, 6, 20, 22, 27, 26, 21, 20, 33, 32, 67, 68, 24, 23, 23, 25, 31, 30, 25, 24, 35, 34, 26, 28, 37, 36, 65, 66, 30, 29, 29, 31, 39, 38, 68, 69, 35, 24, 67, 23, 30, 66, 65, 29, 38, 64, 25, 34, 39, 31, 26, 36, 33, 20, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 28, 41, 40, 37, 28, 27, 42, 41, 22, 43, 42, 27, 22, 21, 44, 43, 21, 32, 45, 44, 41, 47, 46, 40, 41, 42, 48, 47, 43, 49, 48, 42, 43, 44, 50, 49, 44, 45, 51, 50, 47, 53, 52, 46, 47, 48, 54, 53, 49, 55, 54, 48, 49, 50, 56, 55, 50, 51, 57, 56, 53, 59, 58, 52, 53, 54, 60, 59, 55, 61, 60, 54, 55, 56, 62, 61, 56, 57, 63, 62, 59, 65, 64, 58, 59, 60, 66, 65, 61, 67, 66, 60, 61, 62, 68, 67, 62, 63, 69, 68, 8, 9, 11, 10, 12, 13, 15, 14, 16, 17, 19, 18]
            rel material:binding = </root/_materials/M_AlarmClockButton_8_0>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.7569205, 0.5106758, -0.40777656), (-0.6204987, 0.46976817, -0.6279326), (-0.62048763, -0.4697849, -0.627931), (-0.75688875, -0.5106424, -0.40787727), (-0.5978785, 0.7029182, -0.3852886), (-0.7569205, 0.5106758, -0.40777656), (-0.8087469, 0.58815694, -0.000086819215), (-0.6152109, 0.7883625, 0), (0.3154948, 0.5670708, -0.76085067), (0.3096209, 0.78092754, -0.54248226), (0.5978771, 0.70291865, -0.38529003), (0.62050635, 0.46976194, -0.62792957), (0.62050635, 0.46976194, -0.62792957), (0.756893, 0.5106477, -0.40786266), (0.7569165, -0.51067597, -0.40778375), (0.62049377, -0.46978, -0.6279285), (0.756893, 0.5106477, -0.40786266), (0.5978771, 0.70291865, -0.38529003), (0.6152109, 0.7883625, 0.00005236397), (0.8087469, 0.58815694, 0), (-0.75688875, -0.5106424, -0.40787727), (-0.5979256, -0.7029399, -0.38517576), (-0.6152129, -0.7883611, -0.00009176997), (-0.80874676, -0.588157, 0), (0.30958843, -0.7809436, -0.5424777), (0.3154971, -0.56708044, -0.76084256), (0.62049377, -0.46978, -0.6279285), (0.5979153, -0.702943, -0.3851862), (0.5979153, -0.702943, -0.3851862), (0.7569165, -0.51067597, -0.40778375), (0.80874676, -0.58815694, -0.000108519875), (0.6152129, -0.7883611, 0), (0.3096209, 0.78092754, -0.54248226), (0.22531557, 0.97428584, -3.1485403e-10), (0.6152109, 0.7883625, 0.00005236397), (0.5978771, 0.70291865, -0.38529003), (0.3154948, 0.5670708, -0.76085067), (0.62050635, 0.46976194, -0.62792957), (0.62049377, -0.46978, -0.6279285), (0.3154971, -0.56708044, -0.76084256), (0.30958843, -0.7809436, -0.5424777), (0.5979153, -0.702943, -0.3851862), (0.6152129, -0.7883611, 0), (0.2253093, -0.9742873, 0), (0.756893, 0.5106477, -0.40786266), (0.8087469, 0.58815694, 0), (0.80874676, -0.58815694, -0.000108519875), (0.7569165, -0.51067597, -0.40778375), (-0.75688875, -0.5106424, -0.40787727), (-0.80874676, -0.588157, 0), (-0.8087469, 0.58815694, -0.000086819215), (-0.7569205, 0.5106758, -0.40777656), (-0.7569205, 0.5106758, -0.40777656), (-0.5978785, 0.7029182, -0.3852886), (-0.6204987, 0.46976817, -0.6279326), (0.62050635, 0.46976194, -0.62792957), (0.5978771, 0.70291865, -0.38529003), (0.756893, 0.5106477, -0.40786266), (-0.75688875, -0.5106424, -0.40787727), (-0.62048763, -0.4697849, -0.627931), (-0.5979256, -0.7029399, -0.38517576), (0.5979153, -0.702943, -0.3851862), (0.62049377, -0.46978, -0.6279285), (0.7569165, -0.51067597, -0.40778375), (-0.5979256, -0.7029399, -0.38517576), (-0.3095909, -0.7809431, -0.5424771), (-0.22540045, -0.9742662, -1.3972426e-7), (-0.6152129, -0.7883611, -0.00009176997), (-0.5979256, -0.7029399, -0.38517576), (-0.62048763, -0.4697849, -0.627931), (-0.31550306, -0.56707907, -0.76084113), (-0.3095909, -0.7809431, -0.5424771), (-0.6204987, 0.46976817, -0.6279326), (-0.31550214, 0.56706905, -0.7608489), (-0.31550306, -0.56707907, -0.76084113), (-0.62048763, -0.4697849, -0.627931), (-0.6204987, 0.46976817, -0.6279326), (-0.5978785, 0.7029182, -0.3852886), (-0.3095903, 0.78098106, -0.5424227), (-0.31550214, 0.56706905, -0.7608489), (-0.5978785, 0.7029182, -0.3852886), (-0.6152109, 0.7883625, 0), (-0.22531559, 0.97428584, 0), (-0.3095903, 0.78098106, -0.5424227), (-0.3095909, -0.7809431, -0.5424771), (-0.17340438, -0.7830165, -0.59734076), (-0.11873934, -0.99292547, -1.3132756e-10), (-0.22540045, -0.9742662, -1.3972426e-7), (-0.3095909, -0.7809431, -0.5424771), (-0.31550306, -0.56707907, -0.76084113), (-0.17682052, -0.5600871, -0.8093435), (-0.17340438, -0.7830165, -0.59734076), (-0.31550214, 0.56706905, -0.7608489), (-0.17678893, 0.56007123, -0.8093614), (-0.17682052, -0.5600871, -0.8093435), (-0.31550306, -0.56707907, -0.76084113), (-0.31550214, 0.56706905, -0.7608489), (-0.3095903, 0.78098106, -0.5424227), (-0.17331772, 0.78305936, -0.5973099), (-0.17678893, 0.56007123, -0.8093614), (-0.3095903, 0.78098106, -0.5424227), (-0.22531559, 0.97428584, 0), (-0.11874592, 0.99292463, 0), (-0.17331772, 0.78305936, -0.5973099), (-0.17340438, -0.7830165, -0.59734076), (-1.6609062e-7, -0.77976435, -0.6260732), (0, -1, 0), (-0.11873934, -0.99292547, -1.3132756e-10), (-0.17340438, -0.7830165, -0.59734076), (-0.17682052, -0.5600871, -0.8093435), (-0.000020989943, -0.5492627, -0.8356497), (-1.6609062e-7, -0.77976435, -0.6260732), (-0.17678893, 0.56007123, -0.8093614), (-2.3363136e-9, 0.5492879, -0.8356332), (-0.000020989943, -0.5492627, -0.8356497), (-0.17682052, -0.5600871, -0.8093435), (-0.17678893, 0.56007123, -0.8093614), (-0.17331772, 0.78305936, -0.5973099), (-0.000022221231, 0.77979076, -0.6260403), (-2.3363136e-9, 0.5492879, -0.8356332), (-0.17331772, 0.78305936, -0.5973099), (-0.11874592, 0.99292463, 0), (0, 1, 0), (-0.000022221231, 0.77979076, -0.6260403), (-1.6609062e-7, -0.77976435, -0.6260732), (0.17327532, -0.7830309, -0.5973593), (0.11873934, -0.99292547, 0), (0, -1, 0), (-1.6609062e-7, -0.77976435, -0.6260732), (-0.000020989943, -0.5492627, -0.8356497), (0.17677592, -0.56002367, -0.80939704), (0.17327532, -0.7830309, -0.5973593), (-2.3363136e-9, 0.5492879, -0.8356332), (0.17670232, 0.56004703, -0.80939704), (0.17677592, -0.56002367, -0.80939704), (-0.000020989943, -0.5492627, -0.8356497), (-2.3363136e-9, 0.5492879, -0.8356332), (-0.000022221231, 0.77979076, -0.6260403), (0.1732783, 0.7830143, -0.5973802), (0.17670232, 0.56004703, -0.80939704), (-0.000022221231, 0.77979076, -0.6260403), (0, 1, 0), (0.118652694, 0.99293584, 6.976274e-7), (0.1732783, 0.7830143, -0.5973802), (0.17327532, -0.7830309, -0.5973593), (0.30958843, -0.7809436, -0.5424777), (0.2253093, -0.9742873, 0), (0.11873934, -0.99292547, 0), (0.17327532, -0.7830309, -0.5973593), (0.17677592, -0.56002367, -0.80939704), (0.3154971, -0.56708044, -0.76084256), (0.30958843, -0.7809436, -0.5424777), (0.17670232, 0.56004703, -0.80939704), (0.3154948, 0.5670708, -0.76085067), (0.3154971, -0.56708044, -0.76084256), (0.17677592, -0.56002367, -0.80939704), (0.17670232, 0.56004703, -0.80939704), (0.1732783, 0.7830143, -0.5973802), (0.3096209, 0.78092754, -0.54248226), (0.3154948, 0.5670708, -0.76085067), (0.1732783, 0.7830143, -0.5973802), (0.118652694, 0.99293584, 6.976274e-7), (0.22531557, 0.97428584, -3.1485403e-10), (0.3096209, 0.78092754, -0.54248226), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                interpolation = "faceVarying"
            )
            point3f[] points
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-20.43686, -5.071917), (-20.43686, -6.067932), (-19.440842, -6.067932), (-19.440842, -5.071917), (-14.09689, -5.324924), (-14.09689, -5.334984), (-14.08683, -5.334984), (-14.08683, -5.324924), (-13.847312, 0.843582), (-13.842527, 0.843582), (-13.842527, 0.889367), (-13.847312, 0.889367), (-13.847312, 0.839811), (-13.847312, 0.843582), (-13.880451, 0.843582), (-13.880451, 0.839811), (-14.5063, 0.317536), (-14.511061, 0.317536), (-14.503973, 0.292978), (-14.500214, 0.292978), (-14.035164, 0.88938), (-14.039949, 0.88938), (-14.039949, 0.843574), (-14.035164, 0.843574), (-14.039949, 0.88938), (-14.039949, 0.893153), (-14.073105, 0.893153), (-14.073105, 0.88938), (-13.847312, 0.889367), (-13.847312, 0.89314), (-13.880451, 0.89314), (-13.880451, 0.889367), (-14.443735, 0.317536), (-14.448498, 0.317536), (-14.454584, 0.292978), (-14.450823, 0.292978), (-14.039949, 0.839799), (-14.039949, 0.843574), (-14.073105, 0.843574), (-14.073105, 0.839799), (-14.139806, 0.31906), (-14.179827, 0.31906), (-14.179827, 0.295262), (-14.14782, 0.295262), (-14.5063, 0.317536), (-14.500214, 0.292978), (-14.454584, 0.292978), (-14.448498, 0.317536), (-13.926913, 0.31906), (-13.918899, 0.295263), (-13.886892, 0.295263), (-13.886892, 0.31906), (-14.039949, 0.88938), (-14.073105, 0.88938), (-14.073105, 0.843574), (-14.039949, 0.843574), (-13.847312, 0.889367), (-13.880451, 0.889367), (-13.880451, 0.843582), (-13.847312, 0.843582), (-13.847312, 0.843582), (-13.847312, 0.839811), (-13.842527, 0.843582), (-14.035164, 0.88938), (-14.039949, 0.893153), (-14.039949, 0.88938), (-13.847312, 0.889367), (-13.842527, 0.889367), (-13.847312, 0.89314), (-14.039949, 0.839799), (-14.035164, 0.843574), (-14.039949, 0.843574), (-13.918899, 0.438049), (-13.926913, 0.414252), (-13.886892, 0.414252), (-13.886892, 0.438049), (-14.450823, 0.440329), (-14.454584, 0.440329), (-14.448498, 0.41577), (-14.443735, 0.41577), (-14.500214, 0.440329), (-14.5063, 0.41577), (-14.448498, 0.41577), (-14.454584, 0.440329), (-14.500214, 0.440329), (-14.503973, 0.440329), (-14.511061, 0.41577), (-14.5063, 0.41577), (-14.14782, 0.43805), (-14.179827, 0.43805), (-14.179827, 0.414252), (-14.139806, 0.414252), (-13.926913, 0.414252), (-13.93132, 0.390454), (-13.886892, 0.390454), (-13.886892, 0.414252), (-14.443735, 0.41577), (-14.448498, 0.41577), (-14.44496, 0.391212), (-14.43961, 0.391212), (-14.5063, 0.41577), (-14.50984, 0.391212), (-14.44496, 0.391212), (-14.448498, 0.41577), (-14.5063, 0.41577), (-14.511061, 0.41577), (-14.515185, 0.391212), (-14.50984, 0.391212), (-14.139806, 0.414252), (-14.179827, 0.414252), (-14.179827, 0.390454), (-14.135399, 0.390454), (-13.93132, 0.390454), (-13.933722, 0.366656), (-13.886892, 0.366656), (-13.886892, 0.390454), (-14.43961, 0.391212), (-14.44496, 0.391212), (-14.443506, 0.366653), (-14.437922, 0.366653), (-14.50984, 0.391212), (-14.51129, 0.366653), (-14.443506, 0.366653), (-14.44496, 0.391212), (-14.50984, 0.391212), (-14.515185, 0.391212), (-14.516875, 0.366653), (-14.51129, 0.366653), (-14.135399, 0.390454), (-14.179827, 0.390454), (-14.179827, 0.366656), (-14.132998, 0.366656), (-13.933722, 0.366656), (-13.93132, 0.342858), (-13.886892, 0.342858), (-13.886892, 0.366656), (-14.437922, 0.366653), (-14.443506, 0.366653), (-14.44496, 0.342095), (-14.43961, 0.342095), (-14.51129, 0.366653), (-14.50984, 0.342095), (-14.44496, 0.342095), (-14.443506, 0.366653), (-14.51129, 0.366653), (-14.516875, 0.366653), (-14.515185, 0.342095), (-14.50984, 0.342095), (-14.132998, 0.366656), (-14.179827, 0.366656), (-14.179827, 0.342858), (-14.135399, 0.342858), (-13.93132, 0.342858), (-13.926913, 0.31906), (-13.886892, 0.31906), (-13.886892, 0.342858), (-14.43961, 0.342095), (-14.44496, 0.342095), (-14.448498, 0.317536), (-14.443735, 0.317536), (-14.50984, 0.342095), (-14.5063, 0.317536), (-14.448498, 0.317536), (-14.44496, 0.342095), (-14.50984, 0.342095), (-14.515185, 0.342095), (-14.511061, 0.317536), (-14.5063, 0.317536), (-14.135399, 0.342858), (-14.179827, 0.342858), (-14.179827, 0.31906), (-14.139806, 0.31906), (-7.760818, -5.071917), (-7.760818, -6.067932), (-6.764802, -6.067932), (-6.764802, -5.071917), (0.001991, -3.564456), (0.001991, -4.560472), (0.997473, -4.560472), (0.997473, -3.564456), (0.45741, -9.032665), (0.45741, -9.042726), (0.46747, -9.042726), (0.46747, -9.032665)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_AlarmClockButton_8_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0]
                rel material:binding = </root/_materials/M_AlarmClockButton_8_0>
            }

            def GeomSubset "M_AlarmClockButton_8_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43]
                rel material:binding = </root/_materials/M_AlarmClockButton_8_1>
            }

            def GeomSubset "M_AlarmClockButton_8_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [44]
                rel material:binding = </root/_materials/M_AlarmClockButton_8_2>
            }

            def GeomSubset "M_AlarmClockButton_8_3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [45]
                rel material:binding = </root/_materials/M_AlarmClockButton_8_3>
            }

            def GeomSubset "M_AlarmClockButton_8_4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [46]
                rel material:binding = </root/_materials/M_AlarmClockButton_8_4>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_AlarmClockButton_8_0"
        {
            token outputs:surface.connect = </root/_materials/M_AlarmClockButton_8_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.35294116, 0.09655722, 0.01038063)
                float inputs:ior = 1.5
                float inputs:metallic = 0.528
                float3 inputs:normal.connect = </root/_materials/M_AlarmClockButton_8_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_AlarmClockButton_8_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_AlarmClockButton_8_1"
        {
            token outputs:surface.connect = </root/_materials/M_AlarmClockButton_8_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.43966264, 0.5144464, 0.5588235)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_AlarmClockButton_8_1/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Copper_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_AlarmClockButton_8_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_AlarmClockButton_8_2"
        {
            token outputs:surface.connect = </root/_materials/M_AlarmClockButton_8_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_AlarmClockButton_8_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_AlarmClockButton_8_2/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_AlarmClockButton_8_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_AlarmClockButton_8_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_AlarmClockButton_8_3"
        {
            token outputs:surface.connect = </root/_materials/M_AlarmClockButton_8_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_AlarmClockButton_8_3/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Alarm_Clock_Readout2_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_AlarmClockButton_8_3/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_AlarmClockButton_8_4"
        {
            token outputs:surface.connect = </root/_materials/M_AlarmClockButton_8_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.8, 0.8, 0.8)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 1
                float inputs:specular = 0
                token outputs:surface
            }
        }
    }
}

