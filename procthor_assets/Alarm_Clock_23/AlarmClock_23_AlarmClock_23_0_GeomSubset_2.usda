#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "AlarmClock_23_AlarmClock_23_0_GeomSubset_2"
    {
        def Mesh "AlarmClock_23_AlarmClock_23_0_GeomSubset_2"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4]
            int[] faceVertexIndices = [8, 9, 11, 10]
            rel material:binding = </root/_materials/M_AlarmClock_23_2>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.0005, -0.0005, -0.363993), (0.0005, -0.0005, -0.363993), (-0.0005, 0.0005, -0.363993), (0.0005, 0.0005, -0.363993), (-0.0005, -0.0005, -0.363993), (0.0005, -0.0005, -0.363993), (-0.0005, 0.0005, -0.363993), (0.0005, 0.0005, -0.363993), (-0.0005, -0.0005, -0.363993), (0.0005, -0.0005, -0.363993), (-0.0005, 0.0005, -0.363993), (0.0005, 0.0005, -0.363993), (-0.0005, -0.0005, -0.363993), (0.0005, -0.0005, -0.363993), (-0.0005, 0.0005, -0.363993), (0.0005, 0.0005, -0.363993), (-0.0005, -0.0005, -0.363993), (0.0005, -0.0005, -0.363993), (-0.0005, 0.0005, -0.363993), (0.0005, 0.0005, -0.363993), (-0.060815, -0.034207, -0.113993), (-0.039398, -0.060816, -0.113993), (-0.047509, -0.057252, -0.113993), (-0.057249, -0.047511, -0.113993), (0.060815, -0.034207, -0.113993), (0.057249, -0.047511, -0.113993), (0.047509, -0.057252, -0.113993), (0.039392, -0.060816, -0.113993), (-0.057249, 0.047507, -0.113993), (-0.047509, 0.057247, -0.113993), (-0.039398, 0.060812, -0.113993), (-0.060815, 0.034202, -0.113993), (0.047509, 0.057247, -0.113993), (0.057249, 0.047507, -0.113993), (0.060815, 0.034202, -0.113993), (0.039392, 0.060812, -0.113993), (-0.083496, -0.046871, -0.076782), (-0.081416, -0.035057, 0.043877), (-0.078601, -0.065229, -0.076781), (-0.076643, -0.053391, 0.042601), (-0.065228, -0.078603, -0.076779), (-0.063603, -0.066778, 0.041868), (-0.04579, -0.071671, 0.041625), (-0.04696, -0.083496, -0.076778), (0.04696, -0.083496, -0.076778), (0.04579, -0.071671, 0.041625), (0.065228, -0.078603, -0.076779), (0.063603, -0.066778, 0.041868), (0.078601, -0.065229, -0.076781), (0.076643, -0.053391, 0.042601), (0.081416, -0.035057, 0.043877), (0.083496, -0.046871, -0.076782), (-0.081416, 0.032762, 0.052729), (-0.083496, 0.046849, -0.076783), (-0.076643, 0.050004, 0.056785), (-0.078601, 0.065226, -0.076784), (-0.063603, 0.062593, 0.059949), (-0.065228, 0.0786, -0.076779), (-0.04696, 0.083493, -0.076777), (-0.04579, 0.067204, 0.061105), (0.065228, 0.0786, -0.076779), (0.063603, 0.062593, 0.059949), (0.04579, 0.067204, 0.061105), (0.04696, 0.083493, -0.076777), (0.078601, 0.065226, -0.076784), (0.076643, 0.050004, 0.056785), (0.083496, 0.046849, -0.076783), (0.081416, 0.032762, 0.052729), (0.04572, -0.043471, 0.083239), (-0.045719, -0.043466, 0.083241), (-0.045778, -0.025496, 0.089815), (0.045778, -0.025496, 0.089814), (0.04579, 0.019741, 0.106364), (-0.04579, 0.019741, 0.106364), (-0.04547, 0.046984, 0.116329), (0.04547, 0.046985, 0.11633), (0.045768, 0.035481, 0.112121), (-0.045768, 0.035481, 0.112121), (-0.04579, 0.053389, 0.111164), (0.04579, 0.053389, 0.111164), (-0.04579, -0.062626, 0.071917), (-0.045219, -0.057701, 0.078033), (0.04579, -0.062626, 0.071917), (0.045227, -0.057749, 0.078016), (-0.080872, 0.021502, 0.099831), (-0.076399, 0.018254, 0.10582), (-0.080359, -0.027237, 0.083029), (-0.075536, -0.025752, 0.089722), (0.080872, 0.021502, 0.099831), (0.075964, 0.019945, 0.106438), (0.080359, -0.02724, 0.083017), (0.075795, -0.025769, 0.089715), (-0.075101, -0.044891, 0.077393), (-0.071009, -0.042255, 0.083685), (-0.061485, -0.052903, 0.079788), (-0.063603, -0.057415, 0.07355), (0.061271, -0.052604, 0.079899), (0.063603, -0.057415, 0.07355), (0.075101, -0.04491, 0.077321), (0.070913, -0.042206, 0.083703), (-0.075773, 0.037304, 0.105456), (-0.071592, 0.033066, 0.111237), (-0.063603, 0.048859, 0.109558), (-0.061098, 0.042941, 0.11485), (0.063603, 0.048859, 0.109558), (0.061124, 0.042983, 0.114866), (0.075773, 0.037304, 0.105456), (0.071663, 0.033104, 0.111252), (-0.061343, -0.073922, -0.095335), (-0.07392, -0.061344, -0.095337), (-0.078523, -0.044102, -0.095337), (-0.078523, 0.044087, -0.095338), (-0.07392, 0.061343, -0.095338), (-0.061343, 0.073918, -0.095335), (-0.044163, 0.078519, -0.095334), (0.044163, 0.078519, -0.095334), (0.061343, 0.073918, -0.095335), (0.07392, 0.061343, -0.095338), (0.078523, 0.044087, -0.095338), (0.078523, -0.044102, -0.095337), (0.07392, -0.061344, -0.095337), (0.061343, -0.073922, -0.095335), (0.044163, -0.078524, -0.095334), (-0.044163, -0.078524, -0.095334), (-0.05489, -0.066146, -0.107401), (-0.066143, -0.054892, -0.107402), (-0.070262, -0.039487, -0.107402), (-0.070262, 0.039479, -0.107402), (-0.066143, 0.054888, -0.107403), (-0.05489, 0.066141, -0.107401), (-0.039398, 0.070259, -0.1074), (0.039405, 0.070259, -0.1074), (0.05489, 0.066141, -0.107401), (0.066143, 0.054888, -0.107403), (0.070262, 0.039479, -0.107402), (0.070262, -0.039487, -0.107402), (0.066143, -0.054892, -0.107402), (0.05489, -0.066146, -0.107401), (0.039405, -0.070264, -0.107401), (-0.039398, -0.070264, -0.107401), (-0.065228, -0.0757, -0.019386), (-0.063603, -0.073536, -0.016901), (-0.04579, -0.07834, -0.016707), (-0.04696, -0.080622, -0.019191), (0.078601, -0.062249, -0.019922), (0.076643, -0.060415, -0.017437), (0.081416, -0.042481, -0.01812), (0.083496, -0.043863, -0.020617), (-0.063603, 0.072837, -0.012773), (-0.065228, 0.075024, -0.015252), (-0.04696, 0.079889, -0.014756), (-0.04579, 0.07758, -0.012277), (0.065228, 0.075024, -0.015252), (0.063603, 0.072837, -0.012773), (0.04579, 0.07758, -0.012277), (0.04696, 0.079889, -0.014756), (-0.083496, -0.043863, -0.020617), (-0.081416, -0.042481, -0.01812), (-0.076643, -0.060415, -0.017437), (-0.078601, -0.062249, -0.019922), (0.04579, -0.07834, -0.016707), (0.04696, -0.080622, -0.019191), (0.063603, -0.073536, -0.016901), (0.065228, -0.0757, -0.019386), (-0.083496, 0.043496, -0.018337), (-0.081416, 0.042099, -0.015852), (-0.078601, 0.061725, -0.016592), (-0.076643, 0.05987, -0.014113), (0.078601, 0.061725, -0.016592), (0.076643, 0.05987, -0.014113), (0.083496, 0.043496, -0.018337), (0.081416, 0.042099, -0.015852), (-0.039398, -0.047511, -0.113993), (-0.039398, -0.034207, -0.113993), (-0.039398, 0.034202, -0.113993), (-0.039398, 0.047507, -0.113993), (0.039392, 0.047507, -0.113993), (0.039392, 0.034202, -0.113993), (0.039392, -0.034207, -0.113993), (0.039392, -0.047511, -0.113993), (-0.039398, -0.047511, -0.107401), (-0.039398, -0.034207, -0.107401), (-0.039398, 0.034202, -0.107401), (-0.039398, 0.047507, -0.107401), (0.039392, 0.047507, -0.107401), (0.039392, 0.034202, -0.107401), (0.039392, -0.034207, -0.107401), (0.039392, -0.047511, -0.107401), (0.042888, -0.067434, 0.04044), (-0.042887, -0.067434, 0.04044), (0.042888, -0.065214, 0.051732), (-0.042887, -0.065214, 0.051732), (-0.042887, -0.072412, 0.015094), (0.042888, -0.072412, 0.015094), (0.044375, -0.072978, 0.041557), (0.043507, -0.072287, 0.041384), (0.044375, -0.069747, 0.053789), (0.043507, -0.06927, 0.052799), (-0.044374, -0.069746, 0.053791), (-0.043504, -0.06927, 0.052799), (-0.044371, -0.072978, 0.041557), (-0.043504, -0.072287, 0.041384), (-0.044371, -0.076511, 0.014442), (-0.043504, -0.075712, 0.01514), (0.044362, -0.076509, 0.014454), (0.043507, -0.075713, 0.01514), (0.063339, -0.055619, 0.077171), (0.046166, -0.060873, 0.075388), (-0.046158, -0.060847, 0.075397), (-0.063444, -0.055771, 0.077115), (-0.074107, -0.044017, 0.08104), (-0.07907, -0.026693, 0.086961), (-0.079767, 0.020348, 0.103648), (-0.074743, 0.035875, 0.109249), (-0.063247, 0.046744, 0.113162), (-0.046286, 0.051092, 0.114726), (0.046289, 0.051093, 0.114727), (0.063264, 0.046766, 0.11317), (0.074782, 0.035894, 0.109256), (0.07955, 0.021205, 0.103962), (0.079204, -0.026704, 0.086952), (0.074061, -0.044003, 0.081013)]
            bool[] primvars:sharp_face = [0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-7.760818, -5.071917), (-7.760818, -6.067932), (-6.765338, -6.067932), (-6.765338, -5.071917)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_AlarmClock_23_2"
        {
            token outputs:surface.connect = </root/_materials/M_AlarmClock_23_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_AlarmClock_23_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_AlarmClock_23_2/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_AlarmClock_23_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_AlarmClock_23_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

