#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshWashingMachineKnob_2_3_GeomSubset_1"
    {
        def Mesh "MeshWashingMachineKnob_2_3_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4]
            int[] faceVertexIndices = [2, 10, 47, 3, 87, 88, 89, 90, 91, 87, 90, 92, 88, 87, 93, 94, 93, 87, 91, 95]
            rel material:binding = </root/_materials/M_WashingMachineKnob_2_1>
            normal3f[] normals = [(0, -1, 0), (0, -1, 0.0000018023087), (0, -1, -2.413882e-7), (0, -1, -1.16736054e-7), (-4.6472996e-7, 0.8941492, -0.447769), (0.71239704, 0.5963999, -0.36986163), (0.6834399, 0.58759195, -0.43318096), (3.324094e-7, 0.7976751, -0.60308737), (-0.7123828, 0.5964138, -0.36986652), (-4.6472996e-7, 0.8941492, -0.447769), (3.324094e-7, 0.7976751, -0.60308737), (-0.6834113, 0.5876073, -0.43320507), (0.71239704, 0.5963999, -0.36986163), (-4.6472996e-7, 0.8941492, -0.447769), (0.0000015317091, 0.99570215, -0.092612475), (0.67117435, 0.73648006, -0.084392816), (0.0000015317091, 0.99570215, -0.092612475), (-4.6472996e-7, 0.8941492, -0.447769), (-0.7123828, 0.5964138, -0.36986652), (-0.67119104, 0.7364629, -0.084409475)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.008191, -0.325746, 0.411259), (0.019284, -0.325746, 0.422351), (0.049589, -0.325746, 0.422351), (0.060681, -0.325746, 0.411259), (0.064741, -0.325746, 0.396107), (0.060681, -0.325746, 0.380954), (0.049589, -0.325746, 0.369862), (0.019284, -0.325746, 0.369862), (0.008191, -0.325746, 0.380954), (0.004131, -0.325746, 0.396107), (0.037466, -0.325746, 0.425599), (0.031406, -0.325746, 0.425599), (0.028553, -0.325746, 0.366926), (0.040319, -0.325746, 0.366926), (0.036451, -0.325746, 0.429004), (0.032421, -0.325746, 0.429004), (0.036508, -0.34437, 0.423296), (0.032365, -0.34437, 0.423296), (0.030459, -0.342617, 0.372363), (0.038414, -0.342617, 0.372363), (0.033058, -0.343049, 0.426297), (0.035814, -0.343049, 0.426297), (0.034436, -0.344332, 0.371743), (0.034436, -0.325746, 0.36569), (0.034436, -0.325746, 0.426225), (0.034436, -0.325746, 0.42972), (0.034436, -0.344268, 0.426876), (0.038927, -0.338131, 0.411273), (0.041244, -0.33818, 0.381387), (0.037324, -0.34591, 0.411276), (0.03909, -0.34527, 0.38138), (0.027628, -0.33818, 0.381387), (0.029945, -0.338131, 0.411273), (0.029782, -0.34527, 0.38138), (0.031548, -0.34591, 0.411276), (0.034436, -0.348366, 0.411288), (0.034436, -0.347786, 0.381392), (0.028371, -0.339587, 0.396096), (0.030472, -0.346029, 0.396068), (0.034436, -0.34853, 0.396068), (0.0384, -0.346029, 0.396068), (0.040501, -0.339587, 0.396096), (0.027628, -0.325746, 0.380665), (0.030113, -0.325746, 0.410804), (0.034436, -0.325746, 0.380516), (0.034436, -0.325746, 0.41067), (0.041244, -0.325746, 0.380665), (0.03876, -0.325746, 0.410804), (0.040507, -0.325746, 0.396107), (0.034436, -0.325746, 0.396105), (0.028366, -0.325746, 0.396107), (0.008191, -0.330051, 0.411259), (0.010729, -0.333528, 0.411261), (0.020494, -0.333711, 0.420263), (0.019284, -0.330276, 0.422351), (0.049589, -0.330276, 0.422351), (0.048378, -0.333711, 0.420263), (0.060681, -0.330051, 0.411259), (0.058011, -0.33356, 0.41126), (0.064741, -0.33023, 0.396107), (0.062252, -0.333605, 0.396106), (0.060681, -0.330099, 0.380954), (0.058074, -0.333626, 0.381012), (0.048366, -0.333775, 0.371871), (0.049589, -0.330305, 0.369862), (0.019284, -0.330305, 0.369862), (0.020506, -0.333775, 0.371871), (0.008191, -0.330099, 0.380954), (0.010798, -0.333626, 0.381012), (0.004131, -0.33023, 0.396107), (0.006621, -0.333605, 0.396106), (0.028588, -0.330605, 0.366915), (0.028869, -0.334508, 0.368473), (0.034436, -0.334955, 0.366778), (0.034436, -0.330868, 0.365658), (0.031406, -0.330808, 0.425599), (0.031513, -0.334993, 0.424613), (0.037466, -0.330808, 0.425599), (0.037359, -0.334993, 0.424613), (0.040285, -0.330602, 0.366915), (0.040003, -0.334508, 0.368473), (0.036451, -0.330755, 0.429004), (0.03631, -0.334987, 0.428406), (0.032562, -0.334987, 0.428406), (0.032421, -0.330755, 0.429004), (0.034436, -0.33065, 0.429687), (0.034436, -0.334887, 0.429127), (0.034436, -0.346722, 0.423797), (0.033336, -0.34537, 0.423441), (0.033735, -0.344538, 0.425479), (0.034436, -0.345001, 0.425678), (0.035537, -0.34537, 0.423441), (0.035137, -0.344538, 0.425479), (0.034436, -0.348239, 0.412684), (0.032617, -0.346736, 0.41268), (0.036255, -0.346736, 0.41268)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-19.19717, 0.811628), (-19.202246, 0.792687), (-19.179127, 0.794707), (-19.179838, 0.828961), (-19.200632, 0.816716), (-19.203161, 0.816049), (-19.204716, 0.819864), (-19.203852, 0.820235), (-19.203161, 0.816049), (-19.200632, 0.816716), (-19.203852, 0.820235), (-19.204716, 0.819864), (-19.203161, 0.816049), (-19.200632, 0.816716), (-19.197792, 0.795917), (-19.200603, 0.795911), (-19.197792, 0.795917), (-19.200632, 0.816716), (-19.203161, 0.816049), (-19.200603, 0.795911)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_WashingMachineKnob_2_1"
        {
            token outputs:surface.connect = </root/_materials/M_WashingMachineKnob_2_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_WashingMachineKnob_2_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_WashingMachineKnob_2_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

