#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "DrwermeshSideTableDrawer_302_1_2_2_GeomSubset_1"
    {
        def Mesh "DrwermeshSideTableDrawer_302_1_2_2_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [52, 54, 53, 52, 55, 54, 56, 55, 52, 56, 57, 55, 55, 58, 54, 55, 59, 58, 57, 59, 55, 57, 60, 59, 59, 61, 58, 59, 62, 61, 60, 62, 59, 60, 63, 62, 64, 66, 65, 64, 67, 66, 63, 52, 62, 63, 56, 52, 62, 52, 53, 62, 53, 61, 66, 61, 53, 66, 67, 61, 65, 53, 54, 65, 66, 53, 64, 54, 58, 64, 65, 54, 67, 58, 61, 67, 64, 58]
            rel material:binding = </root/_materials/M_SideTableDrawer_302_1_2_1>
            normal3f[] normals = [(-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0.60052156, -0.7996086), (0, 0.60052204, -0.79960823), (0, 0.60052156, -0.7996086), (0, 0.60052156, -0.7996086), (0, 0.60052204, -0.79960823), (0, 0.60052204, -0.79960823), (-0.7072046, 0.7070089, 1.8951843e-8), (-0.7071022, 0.70711124, -1.1684849e-8), (-0.70686567, 0.70734787, 0), (-0.7072046, 0.7070089, 1.8951843e-8), (-0.70686483, 0.7073486, 0), (-0.7071022, 0.70711124, -1.1684849e-8), (0, 0.600532, 0.7996008), (0, 0.6005325, 0.7996004), (-2.3515895e-8, 0.60026366, 0.7998022), (0, 0.600532, 0.7996008), (0, 0.6005325, 0.7996004), (0, 0.6005325, 0.7996004), (0.7068656, 0.70734787, 0), (0.7068649, 0.7073486, 0), (0.70686567, 0.70734787, 0), (0.7068656, 0.70734787, 0), (0.70686483, 0.7073486, 0), (0.7068649, 0.7073486, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.261009, -0.145226, -0.009464), (0.261009, -0.157886, -0.009464), (0.261009, -0.157886, -0.290973), (0.261009, -0.145226, -0.290973), (-0.260451, -0.145226, -0.290973), (-0.260451, -0.157886, -0.290973), (-0.260451, -0.157886, -0.009464), (-0.260451, -0.145226, -0.009464), (-0.2323, -0.160011, -0.268443), (0.232858, -0.160011, -0.268443), (0.232858, -0.160011, -0.031994), (-0.2323, -0.160011, -0.031994), (-0.254829, -0.145226, -0.003843), (-0.254829, -0.157886, -0.003843), (0.255387, -0.157886, -0.003843), (0.255387, -0.145226, -0.003843), (-0.228275, 0.066172, -0.019034), (-0.228275, 0.066172, -0.26472), (0.228833, 0.066172, -0.26472), (0.228833, 0.066172, -0.019034), (0.255387, -0.145226, -0.296595), (0.255387, -0.157885, -0.296595), (-0.254829, -0.157885, -0.296595), (-0.254829, -0.145226, -0.296595), (0.255387, -0.139604, -0.009464), (-0.254829, -0.139604, -0.009464), (0.255387, -0.139604, -0.290973), (-0.254829, -0.139604, -0.290973), (-0.254829, -0.163507, -0.009464), (0.255387, -0.163507, -0.009464), (0.255387, -0.163507, -0.290973), (-0.254829, -0.163507, -0.290973), (-0.24526, -0.139604, -0.019034), (0.245818, -0.139604, -0.019034), (-0.24526, -0.139604, -0.281403), (0.245818, -0.139604, -0.281403), (-0.24526, 0.083157, -0.281403), (-0.24526, 0.083157, -0.019034), (0.245818, 0.083157, -0.019034), (0.245818, 0.083157, -0.281403), (0.228833, -0.12262, -0.26472), (0.228833, -0.12262, -0.019034), (-0.228275, -0.12262, -0.019034), (-0.228275, -0.12262, -0.26472), (0.239867, -0.163508, -0.024985), (-0.239309, -0.163508, -0.024985), (0.239867, -0.163508, -0.275452), (-0.239309, -0.163508, -0.275452), (0.236362, -0.163508, -0.028489), (-0.235805, -0.163508, -0.028489), (0.236362, -0.163507, -0.271948), (-0.235805, -0.163507, -0.271948), (0.042305, -0.162356, -0.227433), (0.042305, -0.164163, -0.227433), (0.042305, -0.164163, -0.262255), (0.042305, -0.162356, -0.262255), (0.042305, -0.159091, -0.227433), (0.042305, -0.159091, -0.262255), (-0.041747, -0.164163, -0.262255), (-0.041747, -0.162356, -0.262255), (-0.041747, -0.159091, -0.262255), (-0.041747, -0.164163, -0.227433), (-0.041747, -0.162356, -0.227433), (-0.041747, -0.159091, -0.227433), (-0.040288, -0.165621, -0.26116), (0.040846, -0.165621, -0.26116), (0.040846, -0.165621, -0.228528), (-0.040288, -0.165621, -0.228528)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.818362), (0.092088, 0.675906), (-0.165236, 0.813735), (-0.165236, 0.675906), (0.092088, 0.675906), (0.092088, 0.813735), (-0.165236, 0.813735), (0.096714, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.165236, 0.813735), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.165236, 0.813735), (0.092088, 0.813735), (0.096714, 0.818362), (-0.165236, 0.675906), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.165236, 0.675906), (-0.165236, 0.813735), (-0.169862, 0.818362), (0.092088, 0.675906), (-0.169862, 0.67128), (0.096714, 0.67128), (0.092088, 0.675906), (-0.165236, 0.675906), (-0.169862, 0.67128), (0.092088, 0.813735), (0.096714, 0.67128), (0.096714, 0.818362), (0.092088, 0.813735), (0.092088, 0.675906), (0.096714, 0.67128)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_SideTableDrawer_302_1_2_1"
        {
            token outputs:surface.connect = </root/_materials/M_SideTableDrawer_302_1_2_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_SideTableDrawer_302_1_2_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_SideTableDrawer_302_1_2_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_302_1_2_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_302_1_2_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

