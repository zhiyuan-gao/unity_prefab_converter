#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "LaptopLid_28"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "LaptopLid_28" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.191011, 0.113085, -0.145232), (0.191011, 0.146662, 0.137377)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 61, 60, 62, 63, 65, 64, 66, 67, 69, 68, 70, 71, 72, 73, 74, 75, 70, 68, 61, 63, 73, 72, 66, 64, 76, 77, 78, 79, 71, 80, 81, 69, 70, 82, 80, 71, 60, 83, 77, 62, 63, 62, 77, 76, 82, 70, 63, 76, 85, 84, 67, 66, 72, 86, 85, 66, 87, 86, 72, 75, 88, 87, 75, 74, 84, 89, 65, 67, 90, 82, 76, 79, 80, 82, 90, 91, 81, 80, 91, 92, 93, 89, 84, 78, 83, 93, 78, 77, 79, 78, 84, 85, 86, 90, 79, 85, 91, 90, 86, 87, 92, 91, 87, 88, 94, 95, 96, 97, 95, 98, 99, 96, 80, 91, 98, 100, 102, 101, 103, 94, 98, 91, 87, 99, 104, 102, 94, 97, 105, 81, 80, 100, 96, 88, 104, 97, 103, 105, 95, 94, 105, 100, 98, 95, 24, 30, 54, 28, 25, 32, 54, 28, 96, 99, 87, 88, 101, 81, 105, 103, 28, 24, 81, 92, 25, 28, 92, 88, 54, 30, 101, 102, 32, 54, 102, 104, 25, 32, 104, 88, 30, 24, 81, 101, 60, 61, 107, 106, 83, 60, 106, 108, 89, 93, 110, 109, 64, 65, 112, 111, 65, 89, 109, 112, 93, 83, 108, 110, 68, 69, 114, 113, 69, 81, 115, 114, 74, 73, 117, 116, 88, 74, 116, 118, 61, 68, 113, 107, 73, 64, 111, 117, 81, 92, 119, 115, 92, 88, 118, 119, 106, 107, 121, 120, 108, 106, 120, 123, 109, 110, 126, 125, 111, 112, 129, 128, 112, 109, 125, 129, 110, 108, 123, 126, 113, 114, 131, 130, 114, 115, 132, 131, 116, 117, 135, 134, 118, 116, 134, 137, 107, 113, 130, 121, 117, 111, 128, 135, 115, 119, 138, 132, 119, 118, 137, 138, 4, 5, 7, 6, 24, 30, 48, 47, 27, 33, 53, 52, 44, 32, 25, 45, 49, 31, 26, 50, 39, 40, 41, 38, 40, 42, 43, 41, 46, 28, 24, 47, 26, 29, 51, 50, 46, 45, 25, 28, 29, 27, 52, 51, 37, 39, 38, 36, 35, 34, 43, 42, 37, 44, 45, 39, 40, 39, 45, 46, 40, 46, 47, 42, 48, 35, 42, 47, 34, 49, 50, 43, 51, 41, 43, 50, 52, 38, 41, 51, 53, 36, 38, 52, 48, 55, 56, 35, 34, 57, 58, 49, 31, 49, 58, 59, 32, 44, 55, 54, 36, 53, 58, 57, 44, 37, 56, 55, 48, 30, 54, 55, 53, 33, 59, 58, 35, 56, 57, 34, 56, 37, 36, 57, 27, 29, 59, 33, 29, 26, 31, 59, 8, 9, 11, 10, 12, 13, 15, 14, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 125, 124, 123, 122, 127, 126, 130, 131, 132, 133, 134, 135, 136, 137, 121, 130, 133, 122, 135, 128, 124, 136, 133, 132, 138, 139, 137, 136, 139, 138, 122, 133, 139, 127, 136, 124, 127, 139, 16, 17, 19, 18, 20, 21, 23, 22, 140, 141, 143, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 149, 148, 147, 146, 151, 150, 154, 155, 156, 157, 158, 159, 160, 161, 145, 154, 157, 146, 159, 152, 148, 160, 157, 156, 162, 163, 161, 160, 163, 162, 146, 157, 163, 151, 160, 148, 151, 163]
            rel material:binding = </root/_materials/M_LaptopLid_28_0>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.8578411, 0, -0.5139151), (-0.8578411, 0, -0.5139151), (-0.8578411, 0, -0.5139151), (-0.8578411, 0, -0.5139151), (0.8578411, 0, -0.5139151), (0.8578411, 0, -0.5139151), (0.8578411, 0, -0.5139151), (0.8578411, 0, -0.5139151), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, -2.1205265e-7, 0), (1, -2.1205265e-7, 0), (1, -4.241053e-7, 0), (1, -4.241053e-7, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, -2.1205265e-7, 0), (1, -2.1205265e-7, 0), (1, 0, 0), (1, 0, 0), (0, -1, -7.239667e-8), (0, -1, -1.4479335e-7), (0, -1, 0), (0, -1, 0), (0, -0.45994687, 0.8879464), (0, -0.45994687, 0.8879464), (0, -0.45994687, 0.8879464), (0, -0.45994687, 0.8879464), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0.0000053170047, 0.000024805655, -1), (0.0000053170047, 0.000024805655, -1), (0, 0, -1), (0, -1, -1.14755714e-7), (0, -1, -2.895867e-7), (0, -1, -1.4479335e-7), (0, -1, -7.239667e-8), (0, -1, 0), (0, -1, 0), (0, -1, -1.14755714e-7), (0, -1, -7.239667e-8), (0, -1, -5.4297505e-8), (0, -1, -1.0859501e-7), (0, -1, -2.1719002e-7), (0, -1, -8.6066784e-8), (0, -1, 0), (0, -1, 0), (0, -1, -5.4297505e-8), (0, -1, -8.6066784e-8), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.45994687, 0.8879464), (0, -0.45994687, 0.8879464), (0, -0.45994687, 0.8879464), (0, -0.45994687, 0.8879464), (-0.0000053170047, 0.000024805655, -1), (-0.0000053170047, 0.000024805655, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, -7.239667e-8), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.45994693, 0.8879465), (0, -0.45994693, 0.8879465), (0, -0.4599469, 0.8879464), (0, -0.4599469, 0.8879464), (0, 0.00004961131, -1), (-0.0000053170047, 0.000024805655, -1), (-0.0000053170047, 0.000024805655, -1), (0, 0.00004961131, -1), (0.0000053170047, 0.000024805655, -1), (0, 0.00004961131, -1), (0, 0.00004961131, -1), (0.0000053170047, 0.000024805655, -1), (0, -1, 0), (0, -1, 0), (0, -1, -1.0859501e-7), (0, -1, -5.4297505e-8), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, -5.4297505e-8), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.4599469, 0.8879464), (0, -0.4599469, 0.8879464), (0, -0.45994693, 0.8879465), (0, -0.45994693, 0.8879465), (0.000004693291, -0.24280363, 0.9700755), (0, -0.38261434, 0.9239081), (0, -0.38261437, 0.9239082), (0, -0.24085312, 0.97056156), (0, -0.9238631, 0.382723), (0.000004057199, -0.96061736, 0.2778747), (-0.000003125097, -0.9615894, 0.274492), (0, -0.9238631, 0.382723), (0, -0.99999994, 0), (0, -1, 0), (0.000004057199, -0.96061736, 0.2778747), (0, -0.9615653, 0.2745765), (0, 0, 1), (0, 0, 1), (0.0000017967635, -0.24085312, 0.97056156), (0.000004693291, -0.24280363, 0.9700755), (0.000004057199, -0.96061736, 0.2778747), (0, -1, 0), (0, -0.99999994, 0), (-0.000003125097, -0.9615894, 0.274492), (0, 0, 1), (0, 0, 1), (0.000004693291, -0.24280363, 0.9700755), (0, -0.24085312, 0.97056156), (-1, 7.765347e-8, 0), (-1, 5.7517624e-8, 0), (-1, 4.4418385e-7, 0), (-1, 4.4418385e-7, 0), (1, -3.2465638e-7, 0), (1, -1.7174759e-7, 0), (1, -3.5309887e-7, 0), (1, -7.0619774e-7, 0), (0.0000017967635, -0.24085312, 0.97056156), (0, -0.38261437, 0.9239082), (0, -0.38261434, 0.9239081), (0.000004693291, -0.24280363, 0.9700755), (0, -0.9238631, 0.382723), (0, -0.9615653, 0.2745765), (0.000004057199, -0.96061736, 0.2778747), (0, -0.9238631, 0.382723), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, -3.2465638e-7, 0), (1, 0, 0), (1, 0, 0), (1, -1.7174759e-7, 0), (-1, -1.7654943e-7, 0), (-1, 5.7517624e-8, 0), (-1, 7.765347e-8, 0), (-1, -3.5309887e-7, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, -3.5309887e-7, 0), (1, -1.7174759e-7, 0), (-1, 0, 0), (-1, 0, 0), (-1, 5.7517624e-8, 0), (-1, -1.7654943e-7, 0), (0, 1, -2.0028558e-7), (0, 1, -1.8329327e-7), (0, 1, -2.3127077e-7), (0, 1, -2.7163927e-7), (0, 1, 0), (0, 1, -2.0028558e-7), (0, 1, -2.7163927e-7), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, -1.603816e-7), (0, 1, -1.752499e-7), (0, 1, -2.3768438e-7), (0, 1, -2.0236193e-7), (0, 1, -1.752499e-7), (0, 1, 0), (0, 1, 0), (0, 1, -2.3768438e-7), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, -1.8329327e-7), (0, 1, 0), (0, 1, 0), (0, 1, -2.3127077e-7), (0, 1, 0), (0, 1, -1.603816e-7), (0, 1, -2.0236193e-7), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-0.000010375616, 0, 1), (0, 0, 1), (0, 0, 1), (-0.000010375616, 0, 1), (0.000010375616, 0, 1), (0, 0, 1), (0, 0, 1), (0.000010375616, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0.000010375616, 0, 1), (0.000010375616, 0, 1), (0, 0, 1), (0, 0, 1), (-0.000010375616, 0, 1), (-0.000010375616, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, -7.6004903e-7, 0), (-1, -7.493697e-7, 0), (1, 0, 0), (1, 0, 0), (1, -2.4339565e-7, 0), (1, -2.3963707e-7, 0), (1, -7.6036133e-7, 0), (1, 0, 0), (1, 0, 0), (1, -7.4967164e-7, 0), (-1, -7.129791e-8, 0), (-1, -0.0000014907096, 0), (-1, -0.0000014907096, 0), (-1, -9.3200796e-8, 0), (0.00050112326, -0.29237357, -0.956304), (-0.0000041935195, -0.29440296, -0.9556814), (-7.7689583e-7, 0.28388432, -0.95885855), (-9.411991e-8, 0.28260222, -0.9592372), (-0.0000041935195, -0.29440296, -0.9556814), (-0.00041827298, -0.29238462, -0.9563008), (-0.000004569559, 0.282605, -0.9592363), (-7.7689583e-7, 0.28388432, -0.95885855), (-3.3371543e-7, -0.6941146, -0.7198645), (-0.0000044423286, -0.836424, -0.5480829), (-0.00053300016, -0.8364015, -0.5481169), (-0.00069036154, -0.69389, -0.72008073), (0.000004390691, 0.9367199, -0.35007957), (-0.0000035333583, 0.93537223, -0.3536648), (8.052633e-8, 0.6815945, -0.73173004), (4.7882168e-8, 0.68154395, -0.7317772), (-3.3371543e-7, -0.6941146, -0.7198645), (0.0007001695, -0.69393855, -0.7200338), (0.0005241155, -0.8364463, -0.5480487), (-0.0000044423286, -0.836424, -0.5480829), (-0.0000035333583, 0.93537223, -0.3536648), (-4.9689697e-9, 0.93667763, -0.350193), (0, 0.68148196, -0.7318348), (8.052633e-8, 0.6815945, -0.73173004), (1, -3.7894614e-7, 0), (1, -3.7907773e-7, 0), (1, -1.2332545e-7, 0), (1, -1.2342619e-7, 0), (-1, -3.7884712e-7, 0), (-1, 1.2342947e-7, 0), (-1, 1.233364e-7, 0), (-1, -3.789891e-7, 0), (1, -3.7894614e-7, 0), (1, -7.6036133e-7, 0), (1, -7.4967164e-7, 0), (1, -3.7907773e-7, 0), (-0.0000041935195, -0.29440296, -0.9556814), (0.00050112326, -0.29237357, -0.956304), (0.0007001695, -0.69393855, -0.7200338), (-3.3371543e-7, -0.6941146, -0.7198645), (-0.0000041935195, -0.29440296, -0.9556814), (-3.3371543e-7, -0.6941146, -0.7198645), (-0.00069036154, -0.69389, -0.72008073), (-0.00041827298, -0.29238462, -0.9563008), (-1, -7.6004903e-7, 0), (-1, -3.7884712e-7, 0), (-1, -3.789891e-7, 0), (-1, -7.493697e-7, 0), (-1, 1.2342947e-7, 0), (-1, -7.129791e-8, 0), (-1, -9.3200796e-8, 0), (-1, 1.233364e-7, 0), (8.052633e-8, 0.6815945, -0.73173004), (-7.7689583e-7, 0.28388432, -0.95885855), (-0.000004569559, 0.282605, -0.9592363), (4.7882168e-8, 0.68154395, -0.7317772), (0, 0.68148196, -0.7318348), (-9.411991e-8, 0.28260222, -0.9592372), (-7.7689583e-7, 0.28388432, -0.95885855), (8.052633e-8, 0.6815945, -0.73173004), (1, -2.4339565e-7, 0), (1, -1.2342619e-7, 0), (1, -1.2332545e-7, 0), (1, -2.3963707e-7, 0), (-0.000020277437, -0.7000216, 0.7141216), (-6.117011e-7, -0.69986826, 0.71427196), (0.000002059569, -0.29391146, 0.95583266), (0.0000039590223, -0.2924652, 0.9562761), (7.293123e-7, 0.27778542, 0.9606431), (-0.0000049618134, 0.2789767, 0.96029776), (-3.613339e-7, 0.6908334, 0.723014), (-4.2131182e-7, 0.69099104, 0.7228634), (0.0000018291307, 0.94660497, 0.3223957), (-4.2131182e-7, 0.69099104, 0.7228634), (-3.613339e-7, 0.6908334, 0.723014), (-0.0000014664788, 0.9456791, 0.3251014), (0.0000020901139, -0.854969, 0.51867914), (0.0000010139133, -0.7001472, 0.71399856), (-6.117011e-7, -0.69986826, 0.71427196), (-0.0000044549815, -0.8549487, 0.5187126), (0.0000027306273, 0.27767843, 0.96067405), (0.0000027919339, 0.690932, 0.7229198), (-3.613339e-7, 0.6908334, 0.723014), (-0.0000049618134, 0.2789767, 0.96029776), (0.0000010139133, -0.7001472, 0.71399856), (0.0000034891812, -0.29247913, 0.95627195), (0.000002059569, -0.29391146, 0.95583266), (-6.117011e-7, -0.69986826, 0.71427196), (-0.000020277437, -0.7000216, 0.7141216), (-0.0000110000765, -0.8549284, 0.518746), (-0.0000044549815, -0.8549487, 0.5187126), (-6.117011e-7, -0.69986826, 0.71427196), (0.0000027919339, 0.690932, 0.7229198), (0, 0.94661444, 0.32236806), (-0.0000014664788, 0.9456791, 0.3251014), (-3.613339e-7, 0.6908334, 0.723014), (0.0000039590223, -0.2924652, 0.9562761), (0.000002059569, -0.29391146, 0.95583266), (-0.0000049618134, 0.2789767, 0.96029776), (7.293123e-7, 0.27778542, 0.9606431), (0.000002059569, -0.29391146, 0.95583266), (0.0000034891812, -0.29247913, 0.95627195), (0.0000027306273, 0.27767843, 0.96067405), (-0.0000049618134, 0.2789767, 0.96029776), (-4.9689697e-9, 0.93667763, -0.350193), (-0.0000035333583, 0.93537223, -0.3536648), (-0.0000014664788, 0.9456791, 0.3251014), (0, 0.94661444, 0.32236806), (-0.0000035333583, 0.93537223, -0.3536648), (0.000004390691, 0.9367199, -0.35007957), (0.0000018291307, 0.94660497, 0.3223957), (-0.0000014664788, 0.9456791, 0.3251014), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.000632, 0.140116, -0.134493), (-0.000632, 0.140116, -0.134493), (0.000632, 0.141381, -0.134493), (-0.000632, 0.141381, -0.134493), (0.000632, 0.140116, -0.134493), (-0.000632, 0.140116, -0.134493), (0.000632, 0.141381, -0.134493), (-0.000632, 0.141381, -0.134493), (0.000632, 0.140116, -0.134493), (-0.000632, 0.140116, -0.134493), (0.000632, 0.141381, -0.134493), (-0.000632, 0.141381, -0.134493), (0.000632, 0.140116, -0.134493), (-0.000632, 0.140116, -0.134493), (0.000632, 0.141381, -0.134493), (-0.000632, 0.141381, -0.134493), (0.000632, 0.140116, -0.134493), (-0.000632, 0.140116, -0.134493), (0.000632, 0.141381, -0.134493), (-0.000632, 0.141381, -0.134493), (0.000632, 0.140116, -0.134493), (-0.000632, 0.140116, -0.134493), (0.000632, 0.141381, -0.134493), (-0.000632, 0.141381, -0.134493), (0.047872, 0.134674, -0.129249), (-0.047872, 0.134674, -0.129249), (0.047872, 0.113085, -0.129249), (-0.047872, 0.113085, -0.129249), (-0, 0.134674, -0.129249), (-0, 0.113085, -0.129249), (0.047872, 0.134674, -0.13778), (0.047872, 0.113085, -0.137779), (-0.047872, 0.134674, -0.13778), (-0.047872, 0.113085, -0.137779), (0.047872, 0.120728, -0.145232), (0.047872, 0.127308, -0.14518), (-0.047872, 0.12073, -0.145232), (-0.047872, 0.127311, -0.14518), (-0.047872, 0.120701, -0.122214), (-0.047872, 0.127304, -0.122214), (0, 0.127392, -0.122214), (0, 0.120701, -0.122214), (0.047872, 0.127302, -0.122214), (0.047872, 0.1207, -0.122214), (-0.047872, 0.131808, -0.142504), (-0.047872, 0.131803, -0.124913), (0, 0.131863, -0.124913), (0.047872, 0.131802, -0.124913), (0.047872, 0.131807, -0.142504), (0.047872, 0.116082, -0.142529), (0.047872, 0.116062, -0.124913), (0, 0.116063, -0.124913), (-0.047872, 0.116063, -0.124913), (-0.047872, 0.116083, -0.14253), (-0, 0.134674, -0.13778), (0, 0.131807, -0.142506), (-0, 0.12731, -0.14518), (0, 0.120729, -0.145232), (-0, 0.116083, -0.14253), (-0, 0.113085, -0.137779), (0.16093, 0.136, 0.137377), (0.191011, 0.136, 0.087165), (0.16093, 0.146062, 0.137377), (0.191011, 0.146062, 0.087165), (-0.191011, 0.136, 0.087165), (-0.16093, 0.136, 0.137377), (-0.191011, 0.146062, 0.087165), (-0.16093, 0.146062, 0.137377), (0.191011, 0.136, -0.072082), (0.191011, 0.136, -0.129249), (0.191011, 0.146062, -0.072082), (0.191011, 0.146062, -0.124037), (-0.191011, 0.146062, -0.072082), (-0.191011, 0.136, -0.072082), (-0.191011, 0.136, -0.129249), (-0.191011, 0.146062, -0.124037), (0.047872, 0.146062, 0.087165), (0.047872, 0.146062, 0.137377), (0, 0.146062, 0.137377), (0, 0.146062, 0.087165), (0.047872, 0.146062, -0.124037), (0.047872, 0.136, -0.129249), (0.047872, 0.146062, -0.072082), (0.047872, 0.136, 0.137377), (-0.047872, 0.146062, 0.137377), (-0.047872, 0.146062, 0.087165), (-0.047872, 0.146062, -0.072082), (-0.047872, 0.146062, -0.124037), (-0.047872, 0.136, -0.129249), (-0.047872, 0.136, 0.137377), (0, 0.146062, -0.072082), (0, 0.146062, -0.124037), (-0, 0.136, -0.129249), (0, 0.136, 0.137376), (-0, 0.141797, -0.13778), (-0, 0.144813, -0.136531), (-0.047872, 0.144813, -0.136531), (-0.047872, 0.141797, -0.13778), (-0, 0.146062, -0.133516), (-0.047872, 0.146062, -0.133516), (0.047872, 0.146062, -0.133516), (0.047872, 0.136, -0.13778), (-0, 0.136, -0.13778), (0.047872, 0.141797, -0.13778), (-0.047872, 0.136, -0.13778), (0.047872, 0.144813, -0.136531), (0.155041, 0.136, 0.122377), (0.155041, 0.136, 0.087165), (0.047872, 0.136, 0.122377), (-0.047872, 0.136, 0.122377), (0, 0.136, 0.122376), (-0.155041, 0.136, 0.087165), (-0.155041, 0.136, 0.122377), (0.155041, 0.136, -0.072082), (0.155041, 0.136, -0.114249), (0.047872, 0.136, -0.114249), (-0.155041, 0.136, -0.114249), (-0.155041, 0.136, -0.072082), (-0.047872, 0.136, -0.114249), (-0, 0.136, -0.114249), (0.155041, 0.140043, 0.122377), (0.155041, 0.140043, 0.087165), (0.047872, 0.140043, 0.087165), (0.047872, 0.140043, 0.122377), (-0.047872, 0.140043, 0.087165), (-0.047872, 0.140043, 0.122377), (0, 0.140043, 0.122376), (-0, 0.140043, 0.087165), (-0.155041, 0.140043, 0.087165), (-0.155041, 0.140043, 0.122377), (0.155041, 0.140043, -0.072082), (0.155041, 0.140043, -0.114249), (0.047872, 0.140043, -0.114249), (0.047872, 0.140043, -0.072082), (-0.155041, 0.140043, -0.114249), (-0.155041, 0.140043, -0.072082), (-0.047872, 0.140043, -0.072082), (-0.047872, 0.140043, -0.114249), (-0, 0.140043, -0.114249), (-0, 0.140043, -0.072082), (-0.043544, 0.146662, -0.03296), (0.043544, 0.146662, -0.03296), (-0.043544, 0.146662, 0.058366), (0.043544, 0.146662, 0.058366), (0.155041, 0.139843, 0.122377), (0.155041, 0.139843, 0.087165), (0.047872, 0.139843, 0.087165), (0.047872, 0.139843, 0.122377), (-0.047872, 0.139843, 0.087165), (-0.047872, 0.139843, 0.122377), (0, 0.139843, 0.122376), (-0, 0.139843, 0.087165), (-0.155041, 0.139843, 0.087165), (-0.155041, 0.139843, 0.122377), (0.155041, 0.139843, -0.072082), (0.155041, 0.139843, -0.114249), (0.047872, 0.139843, -0.114249), (0.047872, 0.139843, -0.072082), (-0.155041, 0.139843, -0.114249), (-0.155041, 0.139843, -0.072082), (-0.047872, 0.139843, -0.072082), (-0.047872, 0.139843, -0.114249), (-0, 0.139843, -0.114249), (-0, 0.139843, -0.072082)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-118.32466, -19.673967), (-117.32466, -19.673967), (-117.32466, -18.673967), (-118.32466, -18.673967), (-117.50089, -0.024414), (-117.50089, -0.173838), (-117.470955, -0.173843), (-117.470955, -0.024412), (-117.477516, 0.619626), (-117.477516, 0.470192), (-117.447586, 0.470192), (-117.447586, 0.619636), (-117.50089, 0.619624), (-117.50089, 0.449486), (-117.470955, 0.449489), (-117.470955, 0.604114), (-117.447586, -0.003707), (-117.477516, -0.003717), (-117.477516, -0.173844), (-117.44757, -0.158337), (-117.470955, 0.449489), (-117.50089, 0.449486), (-117.50089, -0.024414), (-117.470955, -0.024412), (-117.477516, -0.003717), (-117.447586, -0.003707), (-117.447586, 0.470192), (-117.477516, 0.470192), (-118.0044, 0.458849), (-118.15152, 0.458849), (-118.15152, 0.3186), (-118.00442, 0.318607), (-117.47468, 0.789301), (-117.47468, 0.344161), (-117.44339, 0.344171), (-117.44339, 0.789305), (-117.53789, 0.87821), (-117.53788, 0.458848), (-117.38566, 0.458849), (-117.38566, 0.878203), (-117.551346, 0.74021), (-117.551346, 0.408962), (-117.521866, 0.408962), (-117.521866, 0.740219), (-118.0044, 0.878203), (-118.15153, 0.790076), (-118.15152, 0.458849), (-118.0044, 0.458849), (-117.53788, 0.458848), (-117.53789, 0.87821), (-118.0044, 0.878203), (-118.0044, 0.458849), (-118.00442, 0.178354), (-118.15152, 0.178345), (-118.15152, -0.152872), (-118.0044, -0.241011), (-117.53788, -0.241012), (-117.53789, 0.178353), (-118.00442, 0.178354), (-118.0044, -0.241011), (-117.38566, 0.178344), (-117.53789, 0.178353), (-117.53788, -0.241012), (-117.38566, -0.241011), (-117.46622, 0.789218), (-117.497505, 0.789221), (-117.497505, 0.344257), (-117.46623, 0.34425), (-117.521866, 0.128448), (-117.551346, 0.128448), (-117.551346, -0.202816), (-117.52186, -0.202807), (-117.53788, 0.318593), (-117.53788, 0.458848), (-118.0044, 0.458849), (-118.00442, 0.318607), (-117.38566, 0.458849), (-117.53788, 0.458848), (-117.53788, 0.318593), (-117.38567, 0.318607), (-117.49231, 0.747366), (-117.52338, 0.747366), (-117.52338, 0.599517), (-117.492294, 0.599507), (-117.551346, 0.268697), (-117.551346, 0.128448), (-117.521866, 0.128448), (-117.52186, 0.268706), (-117.551346, 0.408962), (-117.551346, 0.268697), (-117.52186, 0.268706), (-117.521866, 0.408962), (-118.00442, 0.318607), (-118.15152, 0.3186), (-118.15152, 0.178345), (-118.00442, 0.178354), (-117.53789, 0.178353), (-117.53788, 0.318593), (-118.00442, 0.318607), (-118.00442, 0.178354), (-117.38567, 0.318607), (-117.53788, 0.318593), (-117.53789, 0.178353), (-117.38566, 0.178344), (-117.492294, 0.599507), (-117.52338, 0.599517), (-117.52337, 0.451652), (-117.492294, 0.451652), (-117.53586, 0.619047), (-117.54482, 0.619051), (-117.54482, 0.477023), (-117.53586, 0.477029), (-117.53621, 0.718842), (-117.54513, 0.718841), (-117.54513, 0.577254), (-117.53621, 0.577251), (-117.57315, 0.860426), (-117.573166, 0.718849), (-117.54513, 0.718841), (-117.54513, 0.860434), (-117.518654, 0.619034), (-117.518654, 0.761062), (-117.535866, 0.761069), (-117.53586, 0.619047), (-117.54513, 0.718841), (-117.573166, 0.718849), (-117.573166, 0.577256), (-117.54513, 0.577254), (-117.518654, 0.477029), (-117.518654, 0.619034), (-117.53586, 0.619047), (-117.53586, 0.477029), (-117.62485, 0.667287), (-117.650665, 0.645975), (-117.62119, 0.630722), (-117.62119, 0.65846), (-117.64981, 0.63428), (-117.67576, 0.655719), (-117.67574, 0.63061), (-117.6587, 0.630613), (-117.535866, 0.761069), (-117.54482, 0.761066), (-117.54482, 0.619051), (-117.53586, 0.619047), (-117.5362, 0.860435), (-117.54513, 0.860434), (-117.54513, 0.718841), (-117.53621, 0.718842), (-117.565765, 0.749191), (-117.590744, 0.749191), (-117.590744, 0.609083), (-117.565765, 0.609082), (-117.61103, 0.608997), (-117.58605, 0.608988), (-117.58605, 0.749285), (-117.61103, 0.749284), (-117.64981, 0.63428), (-117.64613, 0.643156), (-117.64613, 0.671055), (-117.67576, 0.655719), (-117.65066, 0.670933), (-117.650665, 0.645975), (-117.62485, 0.667287), (-117.63369, 0.67095), (-117.4882, 0.599507), (-117.4882, 0.747362), (-117.49231, 0.747366), (-117.492294, 0.599507), (-117.48821, 0.451652), (-117.4882, 0.599507), (-117.492294, 0.599507), (-117.492294, 0.451652), (-117.51475, 0.61905), (-117.51475, 0.761068), (-117.518654, 0.761062), (-117.518654, 0.619034), (-117.51475, 0.477035), (-117.51475, 0.61905), (-117.518654, 0.619034), (-117.518654, 0.477029), (-117.67964, 0.655717), (-117.67966, 0.630612), (-117.67574, 0.63061), (-117.67576, 0.655719), (-117.65454, 0.67095), (-117.65454, 0.645981), (-117.650665, 0.645975), (-117.65066, 0.670933), (-117.82217, 0.790089), (-117.96926, 0.878228), (-117.96926, 0.772839), (-117.866104, 0.772841), (-117.82216, 0.45885), (-117.82217, 0.790089), (-117.866104, 0.772841), (-117.866104, 0.458852), (-117.82216, 0.178343), (-117.82216, 0.318594), (-117.86609, 0.318601), (-117.866104, 0.178345), (-117.96926, -0.241032), (-117.82217, -0.152892), (-117.86609, -0.135644), (-117.96927, -0.135629), (-117.82217, -0.152892), (-117.82216, 0.178343), (-117.866104, 0.178345), (-117.86609, -0.135644), (-117.82216, 0.318594), (-117.82216, 0.45885), (-117.866104, 0.458852), (-117.86609, 0.318601), (-118.43582, 0.878228), (-118.6033, 0.878228), (-118.55937, 0.772846), (-118.43582, 0.772838), (-118.6033, 0.878228), (-118.603294, 0.458849), (-118.55937, 0.458852), (-118.55937, 0.772846), (-118.6033, -0.241018), (-118.43582, -0.241032), (-118.43583, -0.135644), (-118.55937, -0.135644), (-118.603294, 0.178342), (-118.6033, -0.241018), (-118.55937, -0.135644), (-118.55937, 0.178345), (-117.96926, 0.878228), (-118.43582, 0.878228), (-118.43582, 0.772838), (-117.96926, 0.772839), (-118.43582, -0.241032), (-117.96926, -0.241032), (-117.96927, -0.135629), (-118.43583, -0.135644), (-118.603294, 0.458849), (-118.603294, 0.318593), (-118.55937, 0.318601), (-118.55937, 0.458852), (-118.603294, 0.318593), (-118.603294, 0.178342), (-118.55937, 0.178345), (-118.55937, 0.318601), (-117.450066, 0.544898), (-117.450066, 0.44165), (-117.438225, 0.441653), (-117.438225, 0.544902), (-117.498634, 0.399152), (-117.498634, 0.713063), (-117.51049, 0.713073), (-117.510475, 0.399152), (-117.49865, 0.118708), (-117.49865, 0.258934), (-117.51049, 0.258935), (-117.51049, 0.118708), (-117.44713, 0.350841), (-117.44713, 0.247573), (-117.43527, 0.247573), (-117.43527, 0.350828), (-117.498634, -0.195199), (-117.49865, 0.118708), (-117.51049, 0.118708), (-117.51049, -0.195202), (-117.49865, 0.258934), (-117.498634, 0.399152), (-117.510475, 0.399152), (-117.51049, 0.258935), (-117.450066, -0.025245), (-117.450066, -0.148876), (-117.438225, -0.148872), (-117.438225, -0.025231), (-117.524124, 0.713286), (-117.524124, 0.399221), (-117.51228, 0.399225), (-117.51228, 0.71329), (-117.44713, 0.941445), (-117.44713, 0.817786), (-117.43527, 0.817786), (-117.43527, 0.941445), (-117.524124, 0.118653), (-117.524124, -0.195421), (-117.512276, -0.195425), (-117.51228, 0.118643), (-117.450066, 0.44165), (-117.450066, -0.025245), (-117.438225, -0.025231), (-117.438225, 0.441653), (-117.44713, 0.817786), (-117.44713, 0.350841), (-117.43527, 0.350828), (-117.43527, 0.817786), (-117.524124, 0.399221), (-117.52413, 0.258934), (-117.51228, 0.25893), (-117.51228, 0.399225), (-117.52413, 0.258934), (-117.524124, 0.118653), (-117.51228, 0.118643), (-117.51228, 0.25893), (-85.464355, -19.673967), (-84.464355, -19.673967), (-84.464355, -18.673967), (-85.464355, -18.673967), (-84.74949, 0.108608), (-84.74949, 0.133603), (-84.7579, 0.147439), (-84.75792, 0.09591), (-84.6426, 0.378035), (-84.6426, 0.353067), (-84.63384, 0.339166), (-84.63391, 0.390725), (-84.587814, 0.339243), (-84.579445, 0.353074), (-84.579445, 0.378032), (-84.58784, 0.390724), (-84.80395, 0.147507), (-84.81272, 0.133602), (-84.81272, 0.108607), (-84.804016, 0.09591), (-85.124504, 0.344969), (-85.124214, 0.499999), (-85.14587, 0.499999), (-85.14587, 0.344968), (-85.124214, 0.499999), (-85.124504, 0.655021), (-85.14588, 0.655027), (-85.14587, 0.499999), (-85.10973, 0.500001), (-85.100624, 0.5), (-85.100624, 0.655021), (-85.10993, 0.655027), (-85.30674, 0.660531), (-85.30674, 0.500007), (-85.29221, 0.500008), (-85.29223, 0.660532), (-85.10973, 0.500001), (-85.10992, 0.344968), (-85.100624, 0.344969), (-85.100624, 0.5), (-85.30674, 0.500007), (-85.30674, 0.339476), (-85.29221, 0.339477), (-85.29221, 0.500008), (-84.60098, 0.331418), (-84.601, 0.398617), (-84.62033, 0.398616), (-84.62024, 0.331269), (-84.771065, 0.155275), (-84.790344, 0.155431), (-84.790436, 0.088004), (-84.7711, 0.088004), (-84.60098, 0.331418), (-84.587814, 0.339243), (-84.58784, 0.390724), (-84.601, 0.398617), (-85.124214, 0.499999), (-85.124504, 0.344969), (-85.10992, 0.344968), (-85.10973, 0.500001), (-85.124214, 0.499999), (-85.10973, 0.500001), (-85.10993, 0.655027), (-85.124504, 0.655021), (-84.7579, 0.147439), (-84.771065, 0.155275), (-84.7711, 0.088004), (-84.75792, 0.09591), (-84.790344, 0.155431), (-84.80395, 0.147507), (-84.804016, 0.09591), (-84.790436, 0.088004), (-85.29221, 0.500008), (-85.283165, 0.5), (-85.283165, 0.66053), (-85.29223, 0.660532), (-85.29221, 0.339477), (-85.283165, 0.339469), (-85.283165, 0.5), (-85.29221, 0.500008), (-84.63384, 0.339166), (-84.62024, 0.331269), (-84.62033, 0.398616), (-84.63391, 0.390725), (-84.98554, 0.656397), (-84.98554, 0.499999), (-84.97085, 0.499998), (-84.97085, 0.656396), (-85.36033, 0.660528), (-85.36033, 0.500008), (-85.351265, 0.500008), (-85.351265, 0.660528), (-85.33534, 0.660531), (-85.351265, 0.660528), (-85.351265, 0.500008), (-85.33534, 0.500001), (-84.99491, 0.3436), (-84.98554, 0.3436), (-84.98554, 0.499999), (-84.99491, 0.499998), (-85.36033, 0.339468), (-85.351265, 0.339468), (-85.351265, 0.500008), (-85.36033, 0.500008), (-84.98554, 0.3436), (-84.97086, 0.343601), (-84.97085, 0.499998), (-84.98554, 0.499999), (-84.98554, 0.656397), (-84.99491, 0.656396), (-84.99491, 0.499998), (-84.98554, 0.499999), (-85.351265, 0.339468), (-85.33534, 0.339476), (-85.33534, 0.500001), (-85.351265, 0.500008), (-84.97085, 0.656396), (-84.97085, 0.499998), (-84.949356, 0.499998), (-84.94935, 0.656389), (-84.97085, 0.499998), (-84.97086, 0.343601), (-84.949356, 0.343609), (-84.949356, 0.499998), (-85.30674, 0.339476), (-85.30674, 0.500007), (-85.33534, 0.500001), (-85.33534, 0.339476), (-85.30674, 0.500007), (-85.30674, 0.660531), (-85.33534, 0.660531), (-85.33534, 0.500001), (-55.218258, -19.673967), (-54.218258, -19.673967), (-54.218258, -18.673967), (-55.218258, -18.673967), (-25.729992, -19.673967), (-24.729992, -19.673967), (-24.729992, -18.673967), (-25.729992, -18.673967), (-25.92065, 0.784452), (-25.92065, 0.715678), (-25.711334, 0.715677), (-25.711334, 0.784453), (-25.524336, 0.715678), (-25.524336, 0.784453), (-25.617836, 0.784449), (-25.617834, 0.715677), (-25.315022, 0.715677), (-25.315022, 0.784452), (-25.524336, 0.784453), (-25.524336, 0.715678), (-25.711334, 0.784453), (-25.711334, 0.715677), (-25.617834, 0.715677), (-25.617836, 0.784449), (-25.920652, 0.404647), (-25.92065, 0.322292), (-25.711336, 0.322292), (-25.711334, 0.404648), (-25.315022, 0.322293), (-25.315022, 0.404648), (-25.524336, 0.404647), (-25.524336, 0.322292), (-25.92065, 0.715678), (-25.920652, 0.404647), (-25.711334, 0.404648), (-25.711334, 0.715677), (-25.315022, 0.404648), (-25.315022, 0.715677), (-25.524336, 0.715678), (-25.524336, 0.404647), (-25.711334, 0.404648), (-25.711336, 0.322292), (-25.617836, 0.322292), (-25.617834, 0.404648), (-25.524336, 0.322292), (-25.524336, 0.404647), (-25.617834, 0.404648), (-25.617836, 0.322292), (-25.711334, 0.715677), (-25.711334, 0.404648), (-25.617834, 0.404648), (-25.617834, 0.715677), (-25.524336, 0.404647), (-25.524336, 0.715678), (-25.617834, 0.715677), (-25.617834, 0.404648), (0, -19.673967), (1, -19.673967), (1, -18.673967), (0, -18.673967), (0, -19.673967), (1, -19.673967), (1, -18.673967), (0, -18.673967), (-1.61092, 0.051604), (-1.379049, 0.051604), (-1.379049, 0.29476), (-1.61092, 0.29476), (9.499292, 0.999999), (9.424887, 0.999999), (9.424887, 0.654384), (9.499292, 0.654384), (9.424887, 0.345614), (9.499292, 0.345612), (9.499292, 0.499999), (9.424888, 0.5), (9.424887, -0.000001), (9.499292, -0), (9.499292, 0.345612), (9.424887, 0.345614), (9.499292, 0.654384), (9.424887, 0.654384), (9.424888, 0.5), (9.499292, 0.499999), (9.088392, 0.999999), (8.999292, 0.999999), (8.999293, 0.654384), (9.088393, 0.654384), (8.999293, -0.000001), (9.088392, -0.000001), (9.088392, 0.345615), (8.999292, 0.345615), (9.424887, 0.999999), (9.088392, 0.999999), (9.088393, 0.654384), (9.424887, 0.654384), (9.088392, -0.000001), (9.424887, -0.000001), (9.424887, 0.345614), (9.088392, 0.345615), (9.088393, 0.654384), (8.999293, 0.654384), (8.999292, 0.499999), (9.088393, 0.5), (8.999292, 0.345615), (9.088392, 0.345615), (9.088393, 0.5), (8.999292, 0.499999), (9.424887, 0.654384), (9.088393, 0.654384), (9.088393, 0.5), (9.424888, 0.5), (9.088392, 0.345615), (9.424887, 0.345614), (9.424888, 0.5), (9.088393, 0.5)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_LaptopLid_28_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74]
                rel material:binding = </root/_materials/M_LaptopLid_28_0>
            }

            def GeomSubset "M_LaptopLid_28_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107]
                rel material:binding = </root/_materials/M_LaptopLid_28_1>
            }

            def GeomSubset "M_LaptopLid_28_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [108]
                rel material:binding = </root/_materials/M_LaptopLid_28_2>
            }

            def GeomSubset "M_LaptopLid_28_3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121]
                rel material:binding = </root/_materials/M_LaptopLid_28_3>
            }

            def GeomSubset "M_LaptopLid_28_4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [122, 123, 124]
                rel material:binding = </root/_materials/M_LaptopLid_28_4>
            }

            def GeomSubset "M_LaptopLid_28_5" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136]
                rel material:binding = </root/_materials/M_LaptopLid_28_5>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_LaptopLid_28_0"
        {
            token outputs:surface.connect = </root/_materials/M_LaptopLid_28_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_LaptopLid_28_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_LaptopLid_28_0/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_LaptopLid_28_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_LaptopLid_28_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_LaptopLid_28_1"
        {
            token outputs:surface.connect = </root/_materials/M_LaptopLid_28_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_LaptopLid_28_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_LaptopLid_28_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_LaptopLid_28_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_LaptopLid_28_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_LaptopLid_28_2"
        {
            token outputs:surface.connect = </root/_materials/M_LaptopLid_28_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_LaptopLid_28_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_LaptopLid_28_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_LaptopLid_28_3"
        {
            token outputs:surface.connect = </root/_materials/M_LaptopLid_28_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.00560449, 0.00560449, 0.00560449)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }

        def Material "M_LaptopLid_28_4"
        {
            token outputs:surface.connect = </root/_materials/M_LaptopLid_28_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_LaptopLid_28_4/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Laptop_Detail_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_LaptopLid_28_4/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_LaptopLid_28_5"
        {
            token outputs:surface.connect = </root/_materials/M_LaptopLid_28_5/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }
    }
}

