#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "CountertopL_10X8"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "CountertopL_10X8" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-1.522312, -1.220036, -0.517404), (1.525687, 1.218367, 0.418626)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [5, 13, 17, 4, 8, 15, 14, 9, 1, 5, 4, 0, 0, 4, 17, 16, 2, 6, 7, 3, 0, 8, 9, 1, 3, 10, 11, 2, 15, 8, 0, 16, 7, 13, 12, 3, 3, 12, 14, 10, 15, 11, 10, 14, 2, 11, 15, 16, 17, 6, 2, 16, 13, 7, 6, 17, 13, 19, 18, 12, 12, 18, 20, 14, 20, 28, 9, 14, 5, 22, 19, 13, 22, 24, 23, 21, 25, 24, 22, 5, 1, 26, 25, 5, 9, 27, 26, 1, 28, 29, 27, 9, 21, 23, 29, 28, 19, 22, 21, 18, 18, 21, 28, 20, 24, 25, 26, 23, 23, 26, 27, 29]
            rel material:binding = </root/_materials/M_CountertopL_10X8_0>
            normal3f[] normals = [(0.0000022284778, 1, -0.000015880036), (-1.12941834e-7, 1, -0.000010006866), (8.087532e-7, 1, -0.000016849008), (0.0000016175064, 1, -0.000033698016), (1, 0, 0), (1, 0, 0), (1, -1.5785031e-7, 0), (1, 5.069086e-7, -3.9499974e-7), (-1, 0, 0), (-1, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (0, 0, -1), (0, 0, -1), (9.2414666e-7, 0, -1), (2.3107914e-7, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -0.99999994), (0, 0, -1), (2.3107914e-7, 0, -1), (-0.0000017095233, 0, 1), (-0.0000017095233, 0, 1), (-8.8375987e-7, 0, 1), (-8.450154e-7, 0, 1), (-8.450154e-7, 0, 1), (-8.8375987e-7, 0, 1), (0, 0, 0.99999994), (0, 0, 0.99999994), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, -1.5785031e-7, 0), (9.241075e-7, 0, -1), (0, 0, -0.99999994), (0, 0, -1), (2.3107914e-7, 0, -1), (9.2414666e-7, 0, -1), (0.0000018482932, 0, -0.99999994), (9.241075e-7, 0, -1), (2.3107914e-7, 0, -1), (-1.12941834e-7, 1, -0.000010006866), (0, 1, 0), (0, 1, 0), (8.087532e-7, 1, -0.000016849008), (0.9999998, 0.0002819528, -0.00063073245), (0.9999998, 0.0002819528, -0.00063073245), (0.9999998, 0.0002819528, -0.00063073245), (0.9999998, 0.0002819528, -0.00063073245), (0.00042415207, 0.9999999, 4.110092e-7), (0.00042415207, 0.9999999, 4.110092e-7), (0.00042415207, 0.9999999, 4.110092e-7), (0.00042415207, 0.9999999, 4.110092e-7), (1, -4.7355093e-7, 0), (1, 0.0000016074833, -0.0000011053155), (1, 5.069086e-7, -3.9499974e-7), (1, -1.5785031e-7, 0), (0.0000022284778, 1, -0.000015880036), (0.000004753752, 1, 0.0000012431145), (-0.000001956332, 1, 0.0000036774177), (-1.12941834e-7, 1, -0.000010006866), (0.9999787, 0.0002781524, 0.006520188), (0.9999787, 0.0002781524, 0.006520188), (0.9999787, 0.0002781524, 0.006520188), (0.9999787, 0.0002781524, 0.006520188), (0.0000105206445, 1, -8.49015e-7), (0.0000105206445, 1, -8.49015e-7), (0.000004753752, 1, 0.0000012431145), (0.0000022284778, 1, -0.000015880036), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0.0000016074833, -0.0000011053155), (1, 0.0000033960116, -0.00000205527), (1, 0.0000033960116, -0.00000205527), (1, 5.069086e-7, -3.9499974e-7), (0.00020748611, 0.9999788, 0.0065138605), (0.00020748611, 0.9999788, 0.0065138605), (0.00020748611, 0.9999788, 0.0065138605), (0.00020748611, 0.9999788, 0.0065138605), (-0.009776547, -0.00004047119, 0.9999522), (-0.009776547, -0.00004047119, 0.9999522), (-0.0055059306, -0.0042959927, 0.9999757), (-0.0054372936, -0.0043641687, 0.9999757), (-0.0054372936, -0.0043641687, 0.9999757), (-0.0055059306, -0.0042959927, 0.9999757), (-0.000030468727, -0.009783811, 0.999952), (-0.000030468727, -0.009783811, 0.999952), (0.00035927733, -0.000030181534, 0.9999999), (0.00035927733, -0.000030181534, 0.9999999), (0.00016787929, 0.00016285053, 1), (0.00016788008, 0.00016284974, 1), (0.00016788008, 0.00016284974, 1), (0.00016787929, 0.00016285053, 1), (-0.000023517485, 0.00035588126, 1), (-0.000023517485, 0.00035588126, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(1.525687, 1.218367, 0.418626), (1.525687, 1.218367, 0.388626), (0.916087, 0.608767, 0.418626), (0.916087, 0.608767, 0.388626), (1.525687, -1.220033, 0.418626), (1.525687, -1.220035, 0.388626), (0.916087, -1.220033, 0.418626), (0.916087, -1.220033, 0.388626), (-1.52231, 1.218367, 0.418626), (-1.52231, 1.218367, 0.388626), (-1.52231, 0.608767, 0.388626), (-1.52231, 0.608767, 0.418626), (0.936091, 0.627724, 0.388626), (0.936091, -1.220033, 0.388626), (-1.52231, 0.628767, 0.388626), (-1.52231, 0.628767, 0.418626), (0.936091, 0.628767, 0.418626), (0.936091, -1.220033, 0.418626), (0.935049, 0.627725, -0.437404), (0.936091, -1.220033, -0.437404), (-1.52231, 0.628767, -0.437404), (0.955052, 0.64773, -0.437143), (0.956094, -1.22003, -0.437273), (0.956095, 0.648772, -0.517143), (0.956094, -1.22003, -0.517273), (1.525687, -1.220036, -0.517404), (1.525687, 1.218367, -0.517404), (-1.522312, 1.218367, -0.517404), (-1.52231, 0.648766, -0.437273), (-1.52231, 0.648766, -0.517273)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-10.320189, 1.182436), (-9.398927, 1.182436), (-9.398926, 1.22931), (-10.320189, 1.22931), (-9.367669, 1.216611), (-10.28894, 1.216611), (-10.28894, 1.169737), (-9.367669, 1.169737), (-11.411495, 1.170609), (-7.601475, 1.170609), (-7.601477, 1.217483), (-11.411495, 1.217484), (-11.954423, 2.397602), (-11.954423, -1.4124), (-11.03318, -1.4124), (-11.03318, 1.476349), (-8.548527, 1.242008), (-11.406092, 1.242008), (-11.406092, 1.195135), (-8.548527, 1.195135), (-11.954488, 0.745738), (-7.191861, 0.745738), (-7.191861, 0.792611), (-11.954488, 0.792611), (-11.41154, 1.184252), (-7.601429, 1.184252), (-7.601429, 1.231126), (-11.41154, 1.231126), (-7.191927, 1.476349), (-7.191926, 2.3976), (-11.954423, 2.397602), (-11.03318, 1.476349), (-11.398026, 2.426158), (-11.429283, 2.426158), (-11.429284, -0.460942), (-11.398026, -0.431321), (-11.398026, -0.431321), (-11.429284, -0.460942), (-7.588062, -0.462568), (-7.588062, -0.431321), (-10.28894, 1.216611), (-10.320189, 1.216611), (-10.320189, 1.169737), (-10.28894, 1.169737), (-11.001923, 1.445101), (-7.191926, 1.445101), (-7.191927, 1.476349), (-11.03318, 1.476349), (-11.03318, -1.4124), (-11.001924, -1.4124), (-11.001923, 1.445101), (-11.03318, 1.476349), (-9.398927, 1.182436), (-9.367668, 1.182436), (-9.367668, 1.22931), (-9.398926, 1.22931), (-20.451, 0.862242), (-20.451, 0.216906), (-19.007442, 0.216906), (-19.007442, 0.862242), (-20.641592, 1.209417), (-20.640774, 0.564083), (-18.72096, 0.564083), (-18.72096, 1.209417), (-19.35238, 0.174711), (-19.352482, 0.190338), (-19.997715, 0.635338), (-19.997715, 0.174711), (-19.997715, 0.061613), (-19.352482, 0.506611), (-19.352379, 0.522236), (-19.997715, 0.522236), (-20.357801, 0.659109), (-20.357801, 0.596607), (-18.897787, 0.596708), (-18.8986, 0.65921), (-19.289879, 0.061613), (-19.289982, 0.506611), (-19.352482, 0.506611), (-19.997715, 0.061613), (-20.631962, 1.077417), (-20.631962, 0.369579), (-18.726961, 0.369579), (-18.726963, 1.077417), (-18.090515, -0.30607), (-18.090511, 0.401768), (-20.47176, 0.401768), (-20.47176, -0.30607), (-19.352482, 0.190338), (-19.289982, 0.190338), (-19.28988, 0.635338), (-19.997715, 0.635338), (-20.196796, 0.626143), (-20.19761, 0.563641), (-18.261322, 0.563541), (-18.261322, 0.626043), (-20.181984, 1.508545), (-20.197609, 1.508539), (-20.196796, 0.049328), (-20.181168, 0.064957), (-20.181168, 0.064957), (-20.196796, 0.049328), (-18.261324, 0.048519), (-18.261324, 0.064144), (-20.026762, 1.311047), (-20.471758, 1.311054), (-20.471758, -0.593948), (-20.026764, -0.148952), (-20.026764, -0.148952), (-20.471758, -0.593948), (-18.090511, -0.593946), (-18.090513, -0.148945)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_CountertopL_10X8_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                rel material:binding = </root/_materials/M_CountertopL_10X8_0>
            }

            def GeomSubset "M_CountertopL_10X8_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27]
                rel material:binding = </root/_materials/M_CountertopL_10X8_1>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_CountertopL_10X8_0"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopL_10X8_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopL_10X8_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/marbleBase2.jpg@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopL_10X8_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_CountertopL_10X8_1"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopL_10X8_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopL_10X8_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_CountertopL_10X8_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/DarkWood2.tif@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopL_10X8_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopL_10X8_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

