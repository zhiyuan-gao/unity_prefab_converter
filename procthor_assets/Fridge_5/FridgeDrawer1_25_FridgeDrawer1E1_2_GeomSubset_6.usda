#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "FridgeDrawer1_25_FridgeDrawer1E1_2_GeomSubset_6"
    {
        def Mesh "FridgeDrawer1_25_FridgeDrawer1E1_2_GeomSubset_6"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4]
            int[] faceVertexIndices = [24, 25, 27, 26]
            rel material:binding = </root/_materials/M_FridgeDrawer1E1_6>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.007871, 0.098056, -0.846303), (0.007863, 0.098056, -0.846303), (0.007871, 0.098064, -0.846303), (0.007863, 0.098064, -0.846303), (0.007871, 0.098056, -0.846303), (0.007863, 0.098056, -0.846303), (0.007871, 0.098064, -0.846303), (0.007863, 0.098064, -0.846303), (0.007871, 0.098056, -0.846303), (0.007863, 0.098056, -0.846303), (0.007871, 0.098064, -0.846303), (0.007863, 0.098064, -0.846303), (0.007871, 0.098056, -0.846303), (0.007863, 0.098056, -0.846303), (0.007871, 0.098064, -0.846303), (0.007863, 0.098064, -0.846303), (0.007871, 0.098056, -0.846303), (0.007863, 0.098056, -0.846303), (0.007871, 0.098064, -0.846303), (0.007863, 0.098064, -0.846303), (0.007871, 0.098056, -0.846303), (0.007863, 0.098056, -0.846303), (0.007871, 0.098064, -0.846303), (0.007863, 0.098064, -0.846303), (0.007871, 0.098056, -0.846303), (0.007863, 0.098056, -0.846303), (0.007871, 0.098064, -0.846303), (0.007863, 0.098064, -0.846303), (-0.323635, -0.081321, -0.436379), (0.328557, -0.081319, -0.436379), (-0.323635, -0.081321, -0.209264), (0.328557, -0.081319, -0.209264), (-0.323635, -0.067037, -0.209264), (0.328557, -0.067035, -0.209264), (-0.323635, -0.067037, -0.436379), (0.328557, -0.067035, -0.436379), (0.33645, -0.087161, -0.244738), (0.336042, -0.08993, -0.244811), (0.333873, -0.088172, -0.246751), (0.266387, -0.107859, -0.246751), (0.266967, -0.109873, -0.244664), (0.333873, -0.088172, -0.219255), (0.335926, -0.089964, -0.221268), (0.33645, -0.087161, -0.221268), (0.266387, -0.107859, -0.219255), (0.266967, -0.109873, -0.221342), (0.329436, -0.083781, -0.221396), (0.33069, -0.085543, -0.219255), (0.332567, -0.084379, -0.221396), (0.264935, -0.101505, -0.219255), (0.264458, -0.099467, -0.221342), (0.33069, -0.085543, -0.246751), (0.329457, -0.083775, -0.244637), (0.332549, -0.084366, -0.244637), (0.264458, -0.099467, -0.244664), (0.264935, -0.101505, -0.246751), (0.007868, -0.142717, -0.221342), (0.007868, -0.140626, -0.219255), (0.126621, -0.13607, -0.219255), (0.126896, -0.138143, -0.221342), (0.007868, -0.125235, -0.219255), (0.007868, -0.123146, -0.221342), (0.126896, -0.120004, -0.221342), (0.127086, -0.122084, -0.219255), (0.007868, -0.123146, -0.244664), (0.007868, -0.125235, -0.246751), (0.127086, -0.122084, -0.246751), (0.126896, -0.120004, -0.244664), (0.007868, -0.140626, -0.246751), (0.007868, -0.142717, -0.244664), (0.126896, -0.138143, -0.244664), (0.126621, -0.13607, -0.246751), (0.195847, -0.124075, -0.219255), (0.196304, -0.126117, -0.221342), (0.196304, -0.111724, -0.221342), (0.196647, -0.113786, -0.219255), (0.196647, -0.113786, -0.246751), (0.196304, -0.111724, -0.244664), (0.196304, -0.126117, -0.244664), (0.195847, -0.124075, -0.246751), (-0.328951, -0.088174, -0.246751), (-0.331003, -0.089966, -0.244738), (-0.331529, -0.087163, -0.244738), (-0.261465, -0.107861, -0.246751), (-0.262045, -0.109875, -0.244664), (-0.331529, -0.087163, -0.221268), (-0.33112, -0.089932, -0.221194), (-0.328951, -0.088174, -0.219255), (-0.261465, -0.107861, -0.219255), (-0.262045, -0.109875, -0.221342), (-0.327645, -0.084381, -0.221396), (-0.325769, -0.085545, -0.219255), (-0.324514, -0.083783, -0.221396), (-0.260013, -0.101507, -0.219255), (-0.259536, -0.099469, -0.221342), (-0.327627, -0.084368, -0.244637), (-0.324514, -0.083783, -0.24461), (-0.325769, -0.085545, -0.246751), (-0.259536, -0.099469, -0.244664), (-0.260013, -0.101507, -0.246751), (-0.121974, -0.138144, -0.221342), (-0.121699, -0.13607, -0.219255), (-0.122164, -0.122085, -0.219255), (-0.121974, -0.120004, -0.221342), (-0.121974, -0.120004, -0.244664), (-0.122164, -0.122085, -0.246751), (-0.121699, -0.13607, -0.246751), (-0.121974, -0.138144, -0.244664), (-0.191382, -0.126118, -0.221342), (-0.190925, -0.124076, -0.219255), (-0.191725, -0.113787, -0.219255), (-0.191382, -0.111725, -0.221342), (-0.191382, -0.111725, -0.244664), (-0.191725, -0.113787, -0.246751), (-0.190925, -0.124076, -0.246751), (-0.191382, -0.126118, -0.244664), (-0.339021, -0.088537, -0.446475), (-0.343435, -0.084584, -0.451396), (-0.339351, -0.084665, -0.455349), (-0.335093, -0.088537, -0.451165), (0.340015, -0.088535, -0.451165), (0.344186, -0.084582, -0.455349), (0.348356, -0.084663, -0.451477), (0.343942, -0.088535, -0.446475), (-0.333682, 0.102969, -0.202507), (-0.339266, 0.107154, -0.206459), (-0.343436, 0.103282, -0.206379), (-0.339022, 0.099539, -0.202507), (0.343943, 0.099541, -0.202507), (0.348356, 0.103203, -0.20646), (0.344272, 0.107156, -0.206378), (0.338604, 0.102971, -0.202507), (-0.343436, 0.10312, -0.451315), (-0.33918, 0.107154, -0.451315), (-0.33918, 0.10312, -0.455349), (0.3441, 0.103122, -0.455349), (0.3441, 0.107156, -0.451315), (0.348355, 0.103122, -0.451315), (-0.33918, -0.084502, -0.202507), (-0.343435, -0.084503, -0.206541), (-0.33918, -0.088537, -0.206541), (0.344102, -0.088535, -0.206541), (0.348357, -0.084501, -0.206541), (0.344102, -0.0845, -0.202507), (-0.323174, -0.088537, -0.438903), (-0.319129, -0.084547, -0.434776), (-0.323337, -0.084575, -0.430814), (-0.327658, -0.088537, -0.434936), (0.33258, -0.088535, -0.434936), (0.32826, -0.084537, -0.430777), (0.324098, -0.08459, -0.434776), (0.328095, -0.088535, -0.438903), (0.32826, -0.0845, -0.206541), (0.332515, -0.088535, -0.206541), (0.332515, -0.0845, -0.202507), (-0.327593, -0.084502, -0.202507), (-0.327593, -0.088537, -0.206541), (-0.323337, -0.084502, -0.206541), (-0.323338, 0.086425, -0.206494), (-0.319152, 0.090413, -0.206475), (-0.323623, 0.094451, -0.202507), (-0.32767, 0.090156, -0.202507), (0.332591, 0.090157, -0.202507), (0.328547, 0.094499, -0.202507), (0.324038, 0.090414, -0.206509), (0.328259, 0.086427, -0.206494), (0.328259, 0.08638, -0.430741), (0.324003, 0.090415, -0.430741), (0.324003, 0.08638, -0.434776), (-0.319083, 0.086378, -0.434776), (-0.319083, 0.090413, -0.430741), (-0.323338, 0.086378, -0.430741)]
            bool[] primvars:sharp_face = [0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-5.253075, -117.71076), (-3.54152, -117.71076), (-3.54152, -115.99921), (-5.253075, -115.99921)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer1E1_6"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1E1_6/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1E1_6/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1E1_6/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Readout_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1E1_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1E1_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

