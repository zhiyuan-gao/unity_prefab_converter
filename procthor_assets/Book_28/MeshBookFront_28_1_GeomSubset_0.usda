#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshBookFront_28_1_GeomSubset_0"
    {
        def Mesh "MeshBookFront_28_1_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [1, 2, 3, 0, 4, 7, 6, 5, 7, 11, 10, 6, 8, 10, 11, 9, 6, 10, 3, 2, 7, 25, 24, 11, 6, 2, 1, 5, 0, 3, 10, 8, 11, 24, 27, 9, 25, 7, 4, 26, 17, 21, 20, 16, 21, 17, 18, 22, 16, 20, 23, 19, 21, 14, 13, 20, 14, 21, 22, 15, 20, 13, 12, 23, 25, 17, 16, 24, 17, 25, 26, 18, 24, 16, 19, 27, 135, 133, 132, 134, 13, 134, 132, 12, 15, 133, 135, 14, 132, 133, 15, 12, 13, 14, 135, 134]
            rel material:binding = </root/_materials/M_BookFront_28_0>
            normal3f[] normals = [(0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0, -1, -0.000001476931), (0, -1, -0.00000212188), (0, -1, -0.0000025331856), (0, -1, -0.0000012175001), (-0.8654056, 0, -0.5010718), (-0.8654056, -9.438765e-10, -0.5010718), (-0.587759, 0, -0.8090361), (-0.587759, 2.259043e-8, -0.8090361), (0, 1, 1.5438178e-7), (0, 1, 6.383396e-8), (0, 1, 0), (0, 1, 0), (-0.587759, 2.259043e-8, -0.8090361), (-0.587759, 0, -0.8090361), (0, 0, -1), (0, 0, -1), (-0.8654056, 0, -0.5010718), (-0.9803286, 0, -0.19737202), (-0.9803286, 0, -0.19737202), (-0.8654056, -9.438765e-10, -0.5010718), (0, -1, -0.0000025331856), (0, -1, 0), (0, -1, 0), (0, -1, -0.0000012175001), (0, 1, 2.3817233e-7), (0, 1, 2.3817233e-7), (0, 1, 6.383396e-8), (0, 1, 1.5438178e-7), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, -0.00000212188), (0, -1, -0.000001476931), (0, -1, 0), (-0.9911662, 5.2803713e-11, -0.13262583), (-0.9981489, 0, -0.060817998), (-0.9981489, 0, -0.060817998), (-0.9911662, 0, -0.13262583), (0, -1, 0.000001168632), (0, -1, 3.996092e-7), (0, -1, 5.4680316e-7), (0, -1, 0.000001208203), (0, 1, 3.996092e-7), (0, 1, 0.000001168632), (0, 1, 0.000001208203), (0, 1, 5.4680316e-7), (-0.9981489, 0, -0.060817998), (-0.92183113, 0.0000068694353, 0.3875917), (-0.9217992, 0, 0.38766772), (-0.9981489, 0, -0.060817998), (-8.621719e-7, -0.9996575, -0.026169915), (0, -1, 0.000001168632), (0, -1, 0.000001208203), (-3.023571e-7, -0.9997047, -0.024300914), (0, 1, 0.000001168632), (0.0000015571713, 0.97408795, 0.2261695), (-0.0000043120235, 0.97628516, 0.21648867), (0, 1, 0.000001208203), (-0.9803286, 0, -0.19737202), (-0.9911662, 5.2803713e-11, -0.13262583), (-0.9911662, 0, -0.13262583), (-0.9803286, 0, -0.19737202), (0, -1, 3.996092e-7), (0, -1, 0), (0, -1, 0), (0, -1, 5.4680316e-7), (0, 1, 0), (0, 1, 3.996092e-7), (0, 1, 5.4680316e-7), (0, 1, 0), (-0.4584464, 0.0000024161889, 0.88872206), (0.45739138, 6.677583e-7, 0.8892655), (0.45718658, 0.0000013540653, 0.8893708), (-0.4582418, 4.3958426e-7, 0.88882756), (0.0000015571713, 0.97408795, 0.2261695), (5.458138e-8, 0.94328284, 0.33199033), (6.4552296e-8, 0.94328284, 0.33199033), (-0.0000043120235, 0.97628516, 0.21648867), (-8.34465e-7, -0.7921193, 0.61036605), (0, -0.94280654, 0.33334023), (-3.3411197e-8, -0.94251853, 0.33415365), (-0.000010283214, -0.79328835, 0.60884607), (0.45718658, 0.0000013540653, 0.8893708), (0.45739138, 6.677583e-7, 0.8892655), (0.8172513, 7.5099315e-8, 0.57628137), (0.8173342, -3.684545e-8, 0.5761638), (-0.9217992, 0, 0.38766772), (-0.92183113, 0.0000068694353, 0.3875917), (-0.4584464, 0.0000024161889, 0.88872206), (-0.4582418, 4.3958426e-7, 0.88882756)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.101603, -0.128037, 0.010219), (-0.101603, 0.128037, 0.010219), (-0.101603, 0.128037, 0.011093), (-0.101603, -0.128037, 0.011093), (0.109922, 0.128037, 0.00817), (0.107536, 0.128037, 0.010219), (0.108697, 0.128037, 0.011093), (0.110867, 0.128037, 0.009136), (0.107536, -0.128037, 0.010219), (0.109922, -0.128037, 0.00817), (0.108697, -0.128037, 0.011093), (0.110867, -0.128037, 0.009136), (0.111235, -0.128037, -0.00337), (0.112507, -0.128037, -0.00337), (0.112507, 0.128037, -0.00337), (0.111235, 0.128037, -0.00337), (0.112126, -0.128037, 0.002883), (0.112126, 0.128037, 0.002883), (0.110862, 0.128037, 0.0024), (0.110862, -0.128037, 0.0024), (0.112317, -0.128037, -0.000244), (0.112317, 0.128037, -0.000244), (0.111068, 0.128037, -0.000485), (0.111068, -0.128037, -0.000485), (0.111472, -0.128037, 0.006009), (0.111472, 0.128037, 0.006009), (0.110418, 0.128037, 0.005285), (0.110418, -0.128037, 0.005285), (0.109549, 0.128037, -0.00337), (-0.101603, 0.128037, -0.00337), (-0.101603, -0.128037, -0.00337), (0.109549, -0.128037, -0.00337), (0.109146, 0.128037, 0.003424), (-0.101603, 0.128037, 0.003424), (-0.101603, -0.128037, 0.003424), (0.109146, -0.128037, 0.003424), (0.109549, -0.126638, -0.006788), (0.111235, -0.128037, -0.00337), (0.109549, 0.126638, -0.006788), (0.111235, 0.128037, -0.00337), (-0.100269, -0.126638, -0.004236), (-0.100269, 0.126638, -0.004236), (-0.101603, -0.128037, 0.010219), (-0.101603, 0.128037, 0.010219), (0.107536, 0.128037, 0.010219), (0.109922, 0.128037, 0.00817), (0.109922, -0.128037, 0.00817), (0.107536, -0.128037, 0.010219), (0.110862, 0.128037, 0.0024), (0.110862, -0.128037, 0.0024), (0.035872, 0.128037, 0.010219), (0.036947, 0.128037, 0.003424), (0.037214, 0.128037, -0.00337), (0.037589, 0.126638, -0.017334), (0.037589, -0.126638, -0.017334), (0.037214, -0.128037, -0.00337), (0.036947, -0.128037, 0.003424), (0.035872, -0.128037, 0.010219), (-0.02929, 0.128037, 0.010219), (-0.028755, 0.128037, 0.003424), (-0.028621, 0.128037, -0.00337), (-0.027872, 0.126638, -0.01319), (-0.027872, -0.126638, -0.01319), (-0.028621, -0.128037, -0.00337), (-0.028755, -0.128037, 0.003424), (-0.02929, -0.128037, 0.010219), (0.017184, 0.128037, 0.010219), (0.018079, 0.128037, 0.003424), (0.018304, 0.128037, -0.00337), (0.018802, 0.126638, -0.016732), (0.018802, -0.126638, -0.016732), (0.018304, -0.128037, -0.00337), (0.018079, -0.128037, 0.003424), (0.017184, -0.128037, 0.010219), (-0.006053, 0.128037, 0.010219), (-0.005337, 0.128037, 0.003424), (-0.005158, 0.128037, -0.00337), (-0.004536, 0.126638, -0.015312), (-0.004536, -0.126638, -0.015312), (-0.005158, -0.128037, -0.00337), (-0.005337, -0.128037, 0.003424), (-0.006053, -0.128037, 0.010219), (0.092385, 0.128037, 0.010219), (0.093889, 0.128037, 0.003424), (0.094265, 0.128037, -0.00337), (0.094338, 0.126638, -0.013621), (0.094338, -0.126638, -0.013621), (0.094265, -0.128037, -0.00337), (0.093889, -0.128037, 0.003424), (0.092385, -0.128037, 0.010219), (0.07965, 0.128037, 0.010219), (0.081047, 0.128037, 0.003424), (0.081396, 0.128037, -0.00337), (0.081545, 0.126638, -0.016374), (0.081545, -0.126638, -0.016374), (0.081396, -0.128037, -0.00337), (0.081047, -0.128037, 0.003424), (0.07965, -0.128037, 0.010219), (0.065709, 0.128037, 0.010219), (0.066997, 0.128037, 0.003424), (0.067319, 0.128037, -0.00337), (0.067542, 0.126638, -0.017483), (0.067542, -0.126638, -0.017483), (0.067319, -0.128037, -0.00337), (0.066997, -0.128037, 0.003424), (0.065709, -0.128037, 0.010219), (0.051765, 0.128037, 0.010219), (0.052946, 0.128037, 0.003424), (0.053242, 0.128037, -0.00337), (0.053541, 0.126638, -0.01755), (0.053541, -0.126638, -0.01755), (0.053242, -0.128037, -0.00337), (0.052946, -0.128037, 0.003424), (0.051765, -0.128037, 0.010219), (-0.052505, 0.128037, 0.010219), (-0.052239, 0.128037, 0.003424), (-0.052171, 0.128037, -0.00337), (-0.051238, 0.126638, -0.010876), (-0.051238, -0.126638, -0.010876), (-0.052171, -0.128037, -0.00337), (-0.052239, -0.128037, 0.003424), (-0.052505, -0.128037, 0.010219), (-0.075755, 0.128037, 0.010219), (-0.075622, 0.128037, 0.003424), (-0.075588, 0.128037, -0.00337), (-0.07456, 0.126638, -0.008165), (-0.07456, -0.126638, -0.008165), (-0.075588, -0.128037, -0.00337), (-0.075622, -0.128037, 0.003424), (-0.075755, -0.128037, 0.010219), (0.111034, -0.126817, -0.005294), (0.111034, 0.126817, -0.005294), (0.111617, -0.127845, -0.003913), (0.111617, 0.127845, -0.003913), (0.112126, -0.127845, -0.003913), (0.112126, 0.127845, -0.003913), (0.101952, 0.128037, 0.010219), (0.103509, 0.128037, 0.003424), (0.103899, 0.128037, -0.00337), (0.103935, 0.126638, -0.010302), (0.103935, -0.126638, -0.010302), (0.103899, -0.128037, -0.00337), (0.103509, -0.128037, 0.003424), (0.101952, -0.128037, 0.010219), (0.111919, -0.126902, -0.004039), (0.111919, -0.128037, -0.00337), (0.111919, 0.126901, -0.004039), (0.111919, 0.128037, -0.00337), (-0.094127, 0.128037, 0.010219), (-0.094092, 0.128037, 0.003424), (-0.094084, 0.128037, -0.00337), (-0.092986, 0.126638, -0.005695), (-0.092986, -0.126638, -0.005695), (-0.094084, -0.128037, -0.00337), (-0.094092, -0.128037, 0.003424), (-0.094127, -0.128037, 0.010219)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(0.666653, 0.331252), (0.664443, 0.331263), (0.664398, 0.167725), (0.666608, 0.167736), (0.529225, 0.332827), (0.529287, 0.331263), (0.530315, 0.331263), (0.530813, 0.332827), (0.529287, 0.331263), (0.529287, 0.167725), (0.530315, 0.167725), (0.530315, 0.331263), (0.530813, 0.16642), (0.530315, 0.167725), (0.529287, 0.167725), (0.529225, 0.16642), (0.530315, 0.331263), (0.530315, 0.167725), (0.664398, 0.167725), (0.664443, 0.331263), (0.529287, 0.331263), (0.52699, 0.331263), (0.52699, 0.167725), (0.529287, 0.167725), (0.530315, 0.331263), (0.664443, 0.331263), (0.664411, 0.332845), (0.530813, 0.332827), (0.664398, 0.166405), (0.664398, 0.167725), (0.530315, 0.167725), (0.530813, 0.16642), (0.529287, 0.167725), (0.52699, 0.167725), (0.526878, 0.16642), (0.529225, 0.16642), (0.52699, 0.331263), (0.529287, 0.331263), (0.529225, 0.332827), (0.526942, 0.332827), (0.524693, 0.331263), (0.522396, 0.331263), (0.522396, 0.167725), (0.524693, 0.167725), (0.522396, 0.331263), (0.524693, 0.331263), (0.52466, 0.332827), (0.522378, 0.332827), (0.524693, 0.167725), (0.522396, 0.167725), (0.522185, 0.16642), (0.524531, 0.16642), (0.522396, 0.331263), (0.52019, 0.331263), (0.520186, 0.167666), (0.522396, 0.167725), (0.52019, 0.331263), (0.522396, 0.331263), (0.522378, 0.332827), (0.520199, 0.332827), (0.522396, 0.167725), (0.520186, 0.167666), (0.520186, 0.16642), (0.522185, 0.16642), (0.52699, 0.331263), (0.524693, 0.331263), (0.524693, 0.167725), (0.52699, 0.167725), (0.524693, 0.331263), (0.52699, 0.331263), (0.526942, 0.332827), (0.52466, 0.332827), (0.52699, 0.167725), (0.524693, 0.167725), (0.524531, 0.16642), (0.526878, 0.16642), (0.519649, 0.331732), (0.518935, 0.331732), (0.518935, 0.167377), (0.51965, 0.167377), (0.520186, 0.167666), (0.51965, 0.167377), (0.51965, 0.166778), (0.520186, 0.16642), (0.520199, 0.332827), (0.519649, 0.332384), (0.519649, 0.331732), (0.52019, 0.331263), (0.518935, 0.167377), (0.518935, 0.331732), (0.518119, 0.331732), (0.518106, 0.167377), (0.520186, 0.167666), (0.52019, 0.331263), (0.519649, 0.331732), (0.51965, 0.167377)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_BookFront_28_0"
        {
            token outputs:surface.connect = </root/_materials/M_BookFront_28_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_BookFront_28_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Book_Cover_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_BookFront_28_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

