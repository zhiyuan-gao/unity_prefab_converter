#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshBookFront_28_1_GeomSubset_0"
    {
        def Mesh "MeshBookFront_28_1_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [1, 2, 3, 0, 4, 7, 6, 5, 7, 11, 10, 6, 8, 10, 11, 9, 6, 10, 3, 2, 7, 25, 24, 11, 6, 2, 1, 5, 0, 3, 10, 8, 11, 24, 27, 9, 25, 7, 4, 26, 17, 21, 20, 16, 21, 17, 18, 22, 16, 20, 23, 19, 21, 14, 13, 20, 14, 21, 22, 15, 20, 13, 12, 23, 25, 17, 16, 24, 17, 25, 26, 18, 24, 16, 19, 27, 135, 133, 132, 134, 13, 134, 132, 12, 15, 133, 135, 14, 132, 133, 15, 12, 13, 14, 135, 134]
            rel material:binding = </root/_materials/M_BookFront_28_0>
            normal3f[] normals = [(0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0, 1, 0.000001476931), (0, 1, 0.00000212188), (0, 1, 0.0000025331856), (0, 1, 0.0000012175001), (-0.87769824, 0, 0.4792136), (-0.87769824, 0.000005473741, 0.4792136), (-0.009224802, 0, 0.9999575), (-0.009224832, 3.0607787e-8, 0.99995744), (0, -1, -1.5438178e-7), (0, -1, -6.383396e-8), (0, -1, 0), (0, -1, 0), (-0.009224832, 3.0607787e-8, 0.99995744), (-0.009224802, 0, 0.9999575), (0, 0, 1), (0, 0, 1), (-0.87769824, 0, 0.4792136), (-0.9803286, 0, 0.19737202), (-0.9803286, 0, 0.19737202), (-0.87769824, 0.000005473741, 0.4792136), (0, 1, 0.0000025331856), (0, 1, 0), (0, 1, 0), (0, 1, 0.0000012175001), (0, -1, -2.3817233e-7), (0, -1, -2.3817233e-7), (0, -1, -6.383396e-8), (0, -1, -1.5438178e-7), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0.00000212188), (0, 1, 0.000001476931), (0, 1, 0), (-0.99103975, 3.0239897e-11, 0.13356729), (-0.9981489, 0, 0.060817998), (-0.9981489, 0, 0.060817998), (-0.99103975, 0, 0.13356729), (0, 1, -0.000001168632), (0, 1, -3.996092e-7), (0, 1, -5.4680316e-7), (0, 1, -0.000001208203), (0, -1, -3.996092e-7), (0, -1, -0.000001168632), (0, -1, -0.000001208203), (0, -1, -5.4680316e-7), (-0.9981489, 0, 0.060817998), (-0.9994441, 0.000009071082, -0.033337597), (-0.9994441, 0, -0.033337608), (-0.9981489, 0, 0.060817998), (8.621719e-7, 0.9996574, -0.026172804), (0, 1, -0.000001168632), (0, 1, -0.000001208203), (3.0235734e-7, 0.9997046, -0.0243038), (0, -1, -0.000001168632), (-0.0000017732382, -0.9996501, -0.026448198), (0.000004913658, -0.9996991, -0.024530599), (0, -1, -0.000001208203), (-0.9803286, 0, 0.19737202), (-0.99103975, 3.0239897e-11, 0.13356729), (-0.99103975, 0, 0.13356729), (-0.9803286, 0, 0.19737202), (0, 1, -3.996092e-7), (0, 1, 0), (0, 1, 0), (0, 1, -5.4680316e-7), (0, -1, 0), (0, -1, -3.996092e-7), (0, -1, -5.4680316e-7), (0, -1, 0), (-0.55716884, -0.000025320995, -0.8303993), (0.5571865, 9.983778e-7, -0.8303874), (0.5571865, 0.0000020125528, -0.8303874), (-0.55716884, 6.519258e-7, -0.8303993), (-0.0000017732382, -0.9996501, -0.026448198), (-2.9109739e-8, -0.9425484, -0.33406964), (-3.4400728e-8, -0.94254845, -0.33406964), (0.000004913658, -0.9996991, -0.024530599), (8.34465e-7, 0.9996985, -0.02454874), (-4.7006267e-8, 0.9424385, -0.33437952), (-3.099558e-8, 0.94251853, -0.33415365), (0.000010240962, 0.99965096, -0.026417702), (0.5571865, 0.0000020125528, -0.8303874), (0.5571865, 9.983778e-7, -0.8303874), (0.81827223, 4.5712635e-8, -0.57483095), (0.81816196, -1.8408173e-8, -0.5749878), (-0.9994441, 0, -0.033337608), (-0.9994441, 0.000009071082, -0.033337597), (-0.55716884, -0.000025320995, -0.8303993), (-0.55716884, 6.519258e-7, -0.8303993)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.101603, -0.128037, 0.010219), (0.101603, 0.128037, 0.010219), (0.101603, 0.128037, 0.011093), (0.101603, -0.128037, 0.011093), (-0.109922, 0.128037, 0.00817), (-0.107536, 0.128037, 0.010219), (-0.108697, 0.128037, 0.011093), (-0.110867, 0.128037, 0.009136), (-0.107536, -0.128037, 0.010219), (-0.109922, -0.128037, 0.00817), (-0.108697, -0.128037, 0.011093), (-0.110867, -0.128037, 0.009136), (-0.111235, -0.128037, -0.00337), (-0.112507, -0.128037, -0.00337), (-0.112507, 0.128037, -0.00337), (-0.111235, 0.128037, -0.00337), (-0.112126, -0.128037, 0.002883), (-0.112126, 0.128037, 0.002883), (-0.110862, 0.128037, 0.0024), (-0.110862, -0.128037, 0.0024), (-0.112317, -0.128037, -0.000244), (-0.112317, 0.128037, -0.000244), (-0.111068, 0.128037, -0.000485), (-0.111068, -0.128037, -0.000485), (-0.111472, -0.128037, 0.006009), (-0.111472, 0.128037, 0.006009), (-0.110418, 0.128037, 0.005285), (-0.110418, -0.128037, 0.005285), (-0.109549, 0.128037, -0.00337), (0.101603, 0.128037, -0.00337), (0.101603, -0.128037, -0.00337), (-0.109549, -0.128037, -0.00337), (-0.109146, 0.128037, 0.003424), (0.101603, 0.128037, 0.003424), (0.101603, -0.128037, 0.003424), (-0.109146, -0.128037, 0.003424), (-0.109549, -0.126638, -0.006788), (-0.111235, -0.128037, -0.00337), (-0.109549, 0.126638, -0.006788), (-0.111235, 0.128037, -0.00337), (0.100269, -0.126638, -0.004236), (0.100269, 0.126638, -0.004236), (0.101603, -0.128037, 0.010219), (0.101603, 0.128037, 0.010219), (-0.107536, 0.128037, 0.010219), (-0.109922, 0.128037, 0.00817), (-0.109922, -0.128037, 0.00817), (-0.107536, -0.128037, 0.010219), (-0.110862, 0.128037, 0.0024), (-0.110862, -0.128037, 0.0024), (-0.035872, 0.128037, 0.010219), (-0.036947, 0.128037, 0.003424), (-0.037214, 0.128037, -0.00337), (-0.037589, 0.126638, -0.017334), (-0.037589, -0.126638, -0.017334), (-0.037214, -0.128037, -0.00337), (-0.036947, -0.128037, 0.003424), (-0.035872, -0.128037, 0.010219), (0.02929, 0.128037, 0.010219), (0.028755, 0.128037, 0.003424), (0.028621, 0.128037, -0.00337), (0.027872, 0.126638, -0.01319), (0.027872, -0.126638, -0.01319), (0.028621, -0.128037, -0.00337), (0.028755, -0.128037, 0.003424), (0.02929, -0.128037, 0.010219), (-0.017184, 0.128037, 0.010219), (-0.018079, 0.128037, 0.003424), (-0.018304, 0.128037, -0.00337), (-0.018802, 0.126638, -0.016732), (-0.018802, -0.126638, -0.016732), (-0.018304, -0.128037, -0.00337), (-0.018079, -0.128037, 0.003424), (-0.017184, -0.128037, 0.010219), (0.006053, 0.128037, 0.010219), (0.005337, 0.128037, 0.003424), (0.005158, 0.128037, -0.00337), (0.004536, 0.126638, -0.015312), (0.004536, -0.126638, -0.015312), (0.005158, -0.128037, -0.00337), (0.005337, -0.128037, 0.003424), (0.006053, -0.128037, 0.010219), (-0.092385, 0.128037, 0.010219), (-0.093889, 0.128037, 0.003424), (-0.094265, 0.128037, -0.00337), (-0.094338, 0.126638, -0.013621), (-0.094338, -0.126638, -0.013621), (-0.094265, -0.128037, -0.00337), (-0.093889, -0.128037, 0.003424), (-0.092385, -0.128037, 0.010219), (-0.07965, 0.128037, 0.010219), (-0.081047, 0.128037, 0.003424), (-0.081396, 0.128037, -0.00337), (-0.081545, 0.126638, -0.016374), (-0.081545, -0.126638, -0.016374), (-0.081396, -0.128037, -0.00337), (-0.081047, -0.128037, 0.003424), (-0.07965, -0.128037, 0.010219), (-0.065709, 0.128037, 0.010219), (-0.066997, 0.128037, 0.003424), (-0.067319, 0.128037, -0.00337), (-0.067542, 0.126638, -0.017483), (-0.067542, -0.126638, -0.017483), (-0.067319, -0.128037, -0.00337), (-0.066997, -0.128037, 0.003424), (-0.065709, -0.128037, 0.010219), (-0.051765, 0.128037, 0.010219), (-0.052946, 0.128037, 0.003424), (-0.053242, 0.128037, -0.00337), (-0.053541, 0.126638, -0.01755), (-0.053541, -0.126638, -0.01755), (-0.053242, -0.128037, -0.00337), (-0.052946, -0.128037, 0.003424), (-0.051765, -0.128037, 0.010219), (0.052505, 0.128037, 0.010219), (0.052239, 0.128037, 0.003424), (0.052171, 0.128037, -0.00337), (0.051238, 0.126638, -0.010876), (0.051238, -0.126638, -0.010876), (0.052171, -0.128037, -0.00337), (0.052239, -0.128037, 0.003424), (0.052505, -0.128037, 0.010219), (0.075755, 0.128037, 0.010219), (0.075622, 0.128037, 0.003424), (0.075588, 0.128037, -0.00337), (0.07456, 0.126638, -0.008165), (0.07456, -0.126638, -0.008165), (0.075588, -0.128037, -0.00337), (0.075622, -0.128037, 0.003424), (0.075755, -0.128037, 0.010219), (-0.111034, -0.126817, -0.005294), (-0.111034, 0.126817, -0.005294), (-0.111617, -0.127845, -0.003913), (-0.111617, 0.127845, -0.003913), (-0.112126, -0.127845, -0.003913), (-0.112126, 0.127845, -0.003913), (-0.101952, 0.128037, 0.010219), (-0.103509, 0.128037, 0.003424), (-0.103899, 0.128037, -0.00337), (-0.103935, 0.126638, -0.010302), (-0.103935, -0.126638, -0.010302), (-0.103899, -0.128037, -0.00337), (-0.103509, -0.128037, 0.003424), (-0.101952, -0.128037, 0.010219), (-0.111919, -0.126902, -0.004039), (-0.111919, -0.128037, -0.00337), (-0.111919, 0.126901, -0.004039), (-0.111919, 0.128037, -0.00337), (0.094127, 0.128037, 0.010219), (0.094092, 0.128037, 0.003424), (0.094084, 0.128037, -0.00337), (0.092986, 0.126638, -0.005695), (0.092986, -0.126638, -0.005695), (0.094084, -0.128037, -0.00337), (0.094092, -0.128037, 0.003424), (0.094127, -0.128037, 0.010219)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(0.666653, 0.331252), (0.664443, 0.331263), (0.664398, 0.167725), (0.666608, 0.167736), (0.529225, 0.332827), (0.529287, 0.331263), (0.530315, 0.331263), (0.530813, 0.332827), (0.529287, 0.331263), (0.529287, 0.167725), (0.530315, 0.167725), (0.530315, 0.331263), (0.530813, 0.16642), (0.530315, 0.167725), (0.529287, 0.167725), (0.529225, 0.16642), (0.530315, 0.331263), (0.530315, 0.167725), (0.664398, 0.167725), (0.664443, 0.331263), (0.529287, 0.331263), (0.52699, 0.331263), (0.52699, 0.167725), (0.529287, 0.167725), (0.530315, 0.331263), (0.664443, 0.331263), (0.664411, 0.332845), (0.530813, 0.332827), (0.664398, 0.166405), (0.664398, 0.167725), (0.530315, 0.167725), (0.530813, 0.16642), (0.529287, 0.167725), (0.52699, 0.167725), (0.526878, 0.16642), (0.529225, 0.16642), (0.52699, 0.331263), (0.529287, 0.331263), (0.529225, 0.332827), (0.526942, 0.332827), (0.524693, 0.331263), (0.522396, 0.331263), (0.522396, 0.167725), (0.524693, 0.167725), (0.522396, 0.331263), (0.524693, 0.331263), (0.52466, 0.332827), (0.522378, 0.332827), (0.524693, 0.167725), (0.522396, 0.167725), (0.522185, 0.16642), (0.524531, 0.16642), (0.522396, 0.331263), (0.52019, 0.331263), (0.520186, 0.167666), (0.522396, 0.167725), (0.52019, 0.331263), (0.522396, 0.331263), (0.522378, 0.332827), (0.520199, 0.332827), (0.522396, 0.167725), (0.520186, 0.167666), (0.520186, 0.16642), (0.522185, 0.16642), (0.52699, 0.331263), (0.524693, 0.331263), (0.524693, 0.167725), (0.52699, 0.167725), (0.524693, 0.331263), (0.52699, 0.331263), (0.526942, 0.332827), (0.52466, 0.332827), (0.52699, 0.167725), (0.524693, 0.167725), (0.524531, 0.16642), (0.526878, 0.16642), (0.519649, 0.331732), (0.518935, 0.331732), (0.518935, 0.167377), (0.51965, 0.167377), (0.520186, 0.167666), (0.51965, 0.167377), (0.51965, 0.166778), (0.520186, 0.16642), (0.520199, 0.332827), (0.519649, 0.332384), (0.519649, 0.331732), (0.52019, 0.331263), (0.518935, 0.167377), (0.518935, 0.331732), (0.518119, 0.331732), (0.518106, 0.167377), (0.520186, 0.167666), (0.52019, 0.331263), (0.519649, 0.331732), (0.51965, 0.167377)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_BookFront_28_0"
        {
            token outputs:surface.connect = </root/_materials/M_BookFront_28_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_BookFront_28_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Book_Cover_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_BookFront_28_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

