#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "AlarmClockButton_19"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "AlarmClockButton_19" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.067163, -0.026742, -0.306432), (0.067163, 0.024137, 0.057115)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 4, 5, 7, 6, 20, 22, 27, 26, 21, 20, 33, 32, 22, 21, 24, 23, 23, 25, 31, 30, 25, 24, 35, 34, 26, 28, 37, 36, 28, 27, 30, 29, 29, 31, 39, 38, 21, 32, 35, 24, 22, 23, 30, 27, 28, 29, 38, 37, 25, 34, 39, 31, 26, 36, 33, 20, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 8, 9, 11, 10, 12, 13, 15, 14, 16, 17, 19, 18]
            rel material:binding = </root/_materials/M_AlarmClockButton_19_0>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.66592383, 0.42405546, -0.6137773), (-0.3330919, 0.2965753, -0.895038), (-0.33305243, -0.29658818, -0.8950484), (-0.6659525, -0.42411909, -0.61370206), (-0.4785063, 0.64204586, -0.5990068), (-0.66592383, 0.42405546, -0.6137773), (-0.82751495, 0.56144375, 0.00018884572), (-0.62801874, 0.77819824, 0), (-0.3330919, 0.2965753, -0.895038), (-0.4785063, 0.64204586, -0.5990068), (0.47847608, 0.64200914, -0.5990701), (0.33307433, 0.29659647, -0.8950375), (0.33307433, 0.29659647, -0.8950375), (0.6659545, 0.42408413, -0.6137242), (0.66592115, -0.42408374, -0.6137605), (0.33307433, -0.29656187, -0.8950489), (0.6659545, 0.42408413, -0.6137242), (0.47847608, 0.64200914, -0.5990701), (0.62801874, 0.7781983, 0.000101888465), (0.8275149, 0.5614438, 0), (-0.6659525, -0.42411909, -0.61370206), (-0.47850624, -0.642057, -0.59899473), (-0.62803435, -0.7781857, -2.323513e-8), (-0.8275042, -0.5614596, 0), (-0.47850624, -0.642057, -0.59899473), (-0.33305243, -0.29658818, -0.8950484), (0.33307433, -0.29656187, -0.8950489), (0.47844404, -0.64201313, -0.5990915), (0.47844404, -0.64201313, -0.5990915), (0.66592115, -0.42408374, -0.6137605), (0.8275042, -0.56145954, -0.0001049703), (0.62803435, -0.77818567, 0), (-0.4785063, 0.64204586, -0.5990068), (-0.62801874, 0.77819824, 0), (0.62801874, 0.7781983, 0.000101888465), (0.47847608, 0.64200914, -0.5990701), (-0.3330919, 0.2965753, -0.895038), (0.33307433, 0.29659647, -0.8950375), (0.33307433, -0.29656187, -0.8950489), (-0.33305243, -0.29658818, -0.8950484), (-0.47850624, -0.642057, -0.59899473), (0.47844404, -0.64201313, -0.5990915), (0.62803435, -0.77818567, 0), (-0.62803435, -0.7781857, -2.323513e-8), (0.6659545, 0.42408413, -0.6137242), (0.8275149, 0.5614438, 0), (0.8275042, -0.56145954, -0.0001049703), (0.66592115, -0.42408374, -0.6137605), (-0.6659525, -0.42411909, -0.61370206), (-0.8275042, -0.5614596, 0), (-0.82751495, 0.56144375, 0.00018884572), (-0.66592383, 0.42405546, -0.6137773), (-0.66592383, 0.42405546, -0.6137773), (-0.4785063, 0.64204586, -0.5990068), (-0.3330919, 0.2965753, -0.895038), (0.33307433, 0.29659647, -0.8950375), (0.47847608, 0.64200914, -0.5990701), (0.6659545, 0.42408413, -0.6137242), (-0.6659525, -0.42411909, -0.61370206), (-0.33305243, -0.29658818, -0.8950484), (-0.47850624, -0.642057, -0.59899473), (0.47844404, -0.64201313, -0.5990915), (0.33307433, -0.29656187, -0.8950489), (0.66592115, -0.42408374, -0.6137605), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.0005, -0.0005, -0.306432), (-0.0005, -0.0005, -0.306432), (0.0005, 0.0005, -0.306432), (-0.0005, 0.0005, -0.306432), (0.0005, -0.0005, -0.306432), (-0.0005, -0.0005, -0.306432), (0.0005, 0.0005, -0.306432), (-0.0005, 0.0005, -0.306432), (0.0005, -0.0005, -0.306432), (-0.0005, -0.0005, -0.306432), (0.0005, 0.0005, -0.306432), (-0.0005, 0.0005, -0.306432), (0.0005, -0.0005, -0.306432), (-0.0005, -0.0005, -0.306432), (0.0005, 0.0005, -0.306432), (-0.0005, 0.0005, -0.306432), (0.0005, -0.0005, -0.306432), (-0.0005, -0.0005, -0.306432), (0.0005, 0.0005, -0.306432), (-0.0005, 0.0005, -0.306432), (0.067163, -0.023144, 0.055653), (0.063805, -0.026742, 0.055653), (0.063805, -0.023144, 0.057115), (-0.063805, -0.023144, 0.057115), (-0.063805, -0.026742, 0.055653), (-0.067163, -0.023144, 0.055653), (0.067163, 0.020538, 0.055653), (0.063805, 0.020538, 0.057115), (0.063805, 0.024137, 0.055653), (-0.063805, 0.024137, 0.055653), (-0.063805, 0.020538, 0.057115), (-0.067163, 0.020538, 0.055653), (0.063805, -0.026742, 0.042493), (0.067163, -0.023144, 0.042493), (-0.067163, -0.023144, 0.042493), (-0.063805, -0.026742, 0.042493), (0.067163, 0.020538, 0.042493), (0.063805, 0.024137, 0.042493), (-0.063805, 0.024137, 0.042493), (-0.067163, 0.020538, 0.042493)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-20.43686, -5.071916), (-20.43686, -6.067932), (-19.44111, -6.067932), (-19.44111, -5.071916), (-13.80229, -6.060518), (-13.80229, -6.067932), (-13.794875, -6.067932), (-13.794875, -6.060518), (-14.527348, 0.632159), (-14.527348, 0.625552), (-14.441393, 0.625552), (-14.441393, 0.632159), (-14.017001, 0.139671), (-14.017001, 0.146878), (-14.043363, 0.146878), (-14.043363, 0.139671), (-14.527348, 0.625552), (-14.534429, 0.625552), (-14.534429, 0.37445), (-14.527348, 0.37445), (-14.527348, 0.37445), (-14.527348, 0.367842), (-14.441393, 0.367842), (-14.441393, 0.37445), (-13.911878, 0.234373), (-13.911878, 0.241581), (-13.938239, 0.241581), (-13.938239, 0.234373), (-14.017001, 0.234372), (-14.017001, 0.24158), (-14.043363, 0.24158), (-14.043363, 0.234372), (-14.434312, 0.625552), (-14.441393, 0.625552), (-14.441393, 0.37445), (-14.434312, 0.37445), (-13.911878, 0.13967), (-13.911878, 0.146878), (-13.938239, 0.146878), (-13.938239, 0.13967), (-14.227571, 0.599743), (-14.253281, 0.599743), (-14.253281, 0.350457), (-14.227571, 0.350457), (-14.527348, 0.625552), (-14.527348, 0.37445), (-14.441393, 0.37445), (-14.441393, 0.625552), (-14.148155, 0.599705), (-14.148155, 0.350494), (-14.122454, 0.350494), (-14.122454, 0.599705), (-13.911878, 0.234373), (-13.938239, 0.234373), (-13.938239, 0.146878), (-13.911878, 0.146878), (-14.017001, 0.234372), (-14.043363, 0.234372), (-14.043363, 0.146878), (-14.017001, 0.146878), (-14.527348, 0.632159), (-14.534429, 0.625552), (-14.527348, 0.625552), (-14.527348, 0.37445), (-14.534429, 0.37445), (-14.527348, 0.367842), (-14.441393, 0.632159), (-14.441393, 0.625552), (-14.434312, 0.625552), (-14.434312, 0.37445), (-14.441393, 0.37445), (-14.441393, 0.367842), (-7.760818, -5.071917), (-7.760818, -6.067932), (-6.765338, -6.067932), (-6.765338, -5.071917), (0.001991, -3.564456), (0.001991, -4.560472), (0.997741, -4.560472), (0.997741, -3.564456), (0.865081, -9.768274), (0.865081, -9.775688), (0.872495, -9.775688), (0.872495, -9.768274)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_AlarmClockButton_19_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0]
                rel material:binding = </root/_materials/M_AlarmClockButton_19_0>
            }

            def GeomSubset "M_AlarmClockButton_19_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]
                rel material:binding = </root/_materials/M_AlarmClockButton_19_1>
            }

            def GeomSubset "M_AlarmClockButton_19_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [19]
                rel material:binding = </root/_materials/M_AlarmClockButton_19_2>
            }

            def GeomSubset "M_AlarmClockButton_19_3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [20]
                rel material:binding = </root/_materials/M_AlarmClockButton_19_3>
            }

            def GeomSubset "M_AlarmClockButton_19_4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [21]
                rel material:binding = </root/_materials/M_AlarmClockButton_19_4>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_AlarmClockButton_19_0"
        {
            token outputs:surface.connect = </root/_materials/M_AlarmClockButton_19_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.35294116, 0.09655722, 0.01038063)
                float inputs:ior = 1.5
                float inputs:metallic = 0.528
                float3 inputs:normal.connect = </root/_materials/M_AlarmClockButton_19_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_AlarmClockButton_19_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_AlarmClockButton_19_1"
        {
            token outputs:surface.connect = </root/_materials/M_AlarmClockButton_19_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.43966264, 0.5144464, 0.5588235)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_AlarmClockButton_19_1/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Copper_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_AlarmClockButton_19_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_AlarmClockButton_19_2"
        {
            token outputs:surface.connect = </root/_materials/M_AlarmClockButton_19_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_AlarmClockButton_19_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_AlarmClockButton_19_2/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_AlarmClockButton_19_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_AlarmClockButton_19_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_AlarmClockButton_19_3"
        {
            token outputs:surface.connect = </root/_materials/M_AlarmClockButton_19_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0, 0, 0)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }

        def Material "M_AlarmClockButton_19_4"
        {
            token outputs:surface.connect = </root/_materials/M_AlarmClockButton_19_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.8, 0.8, 0.8)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 1
                float inputs:specular = 0
                token outputs:surface
            }
        }
    }
}

