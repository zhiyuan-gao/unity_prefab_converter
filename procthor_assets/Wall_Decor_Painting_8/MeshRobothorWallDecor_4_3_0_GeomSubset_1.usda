#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshRobothorWallDecor_4_3_0_GeomSubset_1"
    {
        def Mesh "MeshRobothorWallDecor_4_3_0_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [4, 5, 7, 6, 12, 14, 13, 12, 15, 14, 13, 17, 16, 13, 14, 17, 16, 19, 18, 16, 17, 19, 20, 22, 21, 20, 23, 22, 13, 18, 12, 13, 16, 18, 17, 15, 19, 17, 14, 15, 24, 15, 12, 24, 23, 15, 20, 18, 19, 20, 25, 18, 25, 12, 18, 25, 24, 12, 23, 19, 15, 23, 20, 19, 25, 21, 26, 25, 20, 21, 24, 26, 27, 24, 25, 26, 23, 27, 22, 23, 24, 27, 29, 22, 27, 29, 30, 22, 31, 26, 21, 31, 28, 26, 28, 27, 26, 28, 29, 27, 30, 21, 22, 30, 31, 21]
            rel material:binding = </root/_materials/M_RobothorWallDecor_4_3_1>
            normal3f[] normals = [(0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (-1, 0.0000027955218, 0), (-1, 5.6949517e-7, 0), (-0.99999994, 0.000002851852, 0), (-1, 0.0000027955218, 0), (-1, 5.131653e-7, 0), (-1, 5.6949517e-7, 0), (0, 0.99999994, 0.00034643797), (0, 0.99999994, 0.0003464384), (0, 0.99999994, 0.00034643945), (0, 0.99999994, 0.00034643797), (0, 0.99999994, 0.00034643692), (0, 0.99999994, 0.0003464384), (1, -0.0000027220317, 0), (1, 0.0000024086978, 0), (1, -0.0000028518577, 0), (1, -0.0000027220317, 0), (1, 0.0000025385357, 0), (1, 0.0000024086978, 0), (0, 0.00019722995, -1), (0, 0.00019722989, -1), (0, 0.00019722995, -1), (0, 0.00019722995, -1), (0, 0.00019722988, -0.99999994), (0, 0.00019722989, -1), (0, 0.00030263772, -0.99999994), (0, 0.00030263772, -1), (0, 0.0003026377, -0.9999999), (0, 0.00030263772, -0.99999994), (0, 0.0003026377, -0.99999994), (0, 0.00030263772, -1), (0, -0.00035209616, 1), (0, -0.00035209622, 1), (0, -0.00035209616, 0.99999994), (0, -0.00035209616, 1), (0, -0.0003520962, 0.99999994), (0, -0.00035209622, 1), (0.000073674564, -1, -0.00027772164), (-0.00006910127, -1, -0.0002763907), (0.00007005941, -0.99999994, -0.00027281747), (0.000073674564, -1, -0.00027772164), (-0.000079715304, -1, -0.00028166868), (-0.00006910127, -1, -0.0002763907), (0.00007367489, -1, -0.00027780933), (-0.00006910102, -1, -0.00027648758), (0.000070059716, -0.99999994, -0.00027290665), (0.00007367489, -1, -0.00027780933), (-0.00007971504, -1, -0.0002817572), (-0.00006910102, -1, -0.00027648758), (-0.00007971504, -1, -0.0002817572), (0.00007005941, -0.99999994, -0.00027281747), (-0.00006910102, -1, -0.00027648758), (-0.00007971504, -1, -0.0002817572), (0.000073674564, -1, -0.00027772164), (0.00007005941, -0.99999994, -0.00027281747), (-0.000079715304, -1, -0.00028166868), (0.000070059716, -0.99999994, -0.00027290665), (-0.00006910127, -1, -0.0002763907), (-0.000079715304, -1, -0.00028166868), (0.00007367489, -1, -0.00027780933), (0.000070059716, -0.99999994, -0.00027290665), (-1, 2.9287815e-8, 0), (-1, 0.00000448407, 0), (-0.99999994, 0, 0), (-1, 2.9287815e-8, 0), (-1, 0.000004513354, 0), (-1, 0.00000448407, 0), (0, -0.0003944597, 0.99999994), (0, -0.0003944599, 0.99999994), (0, -0.00039445973, 1), (0, -0.0003944597, 0.99999994), (0, -0.00039445987, 0.9999999), (0, -0.0003944599, 0.99999994), (1, -0.0000117767395, 0), (1, 3.4941155e-7, 0), (1, -0.0000118564685, 0), (1, -0.0000117767395, 0), (1, 4.291303e-7, 0), (1, 3.4941155e-7, 0), (-6.608148e-7, -1, -0.00035337132), (0.0000011739187, -0.99999994, -0.00035356494), (-0.000001180591, -0.99999994, -0.00035333858), (-6.608148e-7, -1, -0.00035337132), (6.7353284e-7, -0.99999994, -0.0003536168), (0.0000011739187, -0.99999994, -0.00035356494), (-6.6103735e-7, -0.99999994, -0.00035359018), (0.0000011740275, -0.99999994, -0.0003534651), (-0.000001180775, -0.99999994, -0.0003535483), (-6.6103735e-7, -0.99999994, -0.00035359018), (6.737177e-7, -0.99999994, -0.00035351445), (0.0000011740275, -0.99999994, -0.0003534651), (6.737177e-7, -0.99999994, -0.00035351445), (-0.000001180591, -0.99999994, -0.00035333858), (0.0000011740275, -0.99999994, -0.0003534651), (6.737177e-7, -0.99999994, -0.00035351445), (-6.608148e-7, -1, -0.00035337132), (-0.000001180591, -0.99999994, -0.00035333858), (6.7353284e-7, -0.99999994, -0.0003536168), (-0.000001180775, -0.99999994, -0.0003535483), (0.0000011739187, -0.99999994, -0.00035356494), (6.7353284e-7, -0.99999994, -0.0003536168), (-6.6103735e-7, -0.99999994, -0.00035359018), (-0.000001180775, -0.99999994, -0.0003535483)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.000557, 0.008692, -0.527677), (0.001082, 0.008692, -0.527677), (0.000557, 0.009217, -0.527677), (0.001082, 0.009217, -0.527677), (0.000557, 0.008692, -0.527677), (0.001082, 0.008692, -0.527677), (0.000557, 0.009217, -0.527677), (0.001082, 0.009217, -0.527677), (0.000557, 0.008692, -0.527677), (0.001082, 0.008692, -0.527677), (0.000557, 0.009217, -0.527677), (0.001082, 0.009217, -0.527677), (-0.349319, -0.010756, -0.264528), (-0.349319, 0.009136, -0.264522), (-0.349319, 0.008954, 0.260823), (-0.349319, -0.010937, 0.260816), (0.35083, 0.009136, -0.264522), (0.35083, 0.008954, 0.260823), (0.35083, -0.010756, -0.264528), (0.35083, -0.010937, 0.260816), (0.337602, -0.010934, 0.246425), (0.337602, -0.005872, 0.246426), (-0.336091, -0.005872, 0.246426), (-0.336091, -0.010934, 0.246425), (-0.336091, -0.010759, -0.250137), (0.337602, -0.010759, -0.250137), (0.337602, -0.005697, -0.250135), (-0.336091, -0.005697, -0.250135), (0.333539, -0.005698, -0.247319), (-0.332027, -0.005698, -0.247319), (-0.332027, -0.005871, 0.24361), (0.333539, -0.005871, 0.24361)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-19.367811, -9.606503), (-19.367811, -9.606655), (-19.36766, -9.606655), (-19.36766, -9.606503), (-18.92621, 0.496147), (-20.878542, 0.422902), (-18.926235, 0.422224), (-18.92621, 0.496147), (-20.878517, 0.496825), (-20.878542, 0.422902), (-18.274233, -0.384711), (-20.876123, 1.567579), (-20.876123, -0.384711), (-18.274233, -0.384711), (-18.274233, 1.567579), (-20.876123, 1.567579), (-18.926281, 0.476635), (-20.878471, 0.402035), (-18.926256, 0.402714), (-18.926281, 0.476635), (-20.878496, 0.475954), (-20.878471, 0.402035), (-18.208565, 0.636526), (-20.712126, 0.617714), (-18.208565, 0.617716), (-18.208565, 0.636526), (-20.712126, 0.636525), (-20.712126, 0.617714), (-20.770592, 0.168532), (-18.168613, 0.242449), (-20.770592, 0.242447), (-20.770592, 0.168532), (-18.168613, 0.168534), (-18.168613, 0.242449), (-18.168652, 0.263895), (-20.770554, 0.189968), (-18.168652, 0.18997), (-18.168652, 0.263895), (-20.770554, 0.263893), (-20.770554, 0.189968), (-20.721394, -0.497451), (-20.770554, 1.401366), (-20.770554, -0.550933), (-20.721394, -0.497451), (-20.721394, 1.347883), (-20.770554, 1.401366), (-18.217812, 1.347883), (-18.168652, -0.550932), (-18.168652, 1.401366), (-18.217812, 1.347883), (-18.217812, -0.49745), (-18.168652, -0.550932), (-18.217812, -0.49745), (-20.770554, -0.550933), (-18.168652, -0.550932), (-18.217812, -0.49745), (-20.721394, -0.497451), (-20.770554, -0.550933), (-20.721394, 1.347883), (-18.168652, 1.401366), (-20.770554, 1.401366), (-20.721394, 1.347883), (-18.217812, 1.347883), (-18.168652, 1.401366), (-18.969456, 0.433438), (-20.815151, 0.41527), (-18.969461, 0.414624), (-18.969456, 0.433438), (-20.815145, 0.434084), (-20.815151, 0.41527), (-20.711739, 0.607981), (-18.208954, 0.626787), (-20.711739, 0.626786), (-20.711739, 0.607981), (-18.208954, 0.607983), (-18.208954, 0.626787), (-20.81515, 0.40481), (-18.96946, 0.424286), (-20.815153, 0.423624), (-20.81515, 0.40481), (-18.969454, 0.405472), (-18.96946, 0.424286), (-21.19094, -0.265751), (-21.20604, 1.569066), (-21.20604, -0.276224), (-21.19094, -0.265751), (-21.19094, 1.558592), (-21.20604, 1.569066), (-18.717615, 1.558592), (-18.702517, -0.276222), (-18.702517, 1.569065), (-18.717615, 1.558592), (-18.717615, -0.265749), (-18.702517, -0.276222), (-18.717615, -0.265749), (-21.20604, -0.276224), (-18.702517, -0.276222), (-18.717615, -0.265749), (-21.19094, -0.265751), (-21.20604, -0.276224), (-21.19094, 1.558592), (-18.702517, 1.569065), (-21.20604, 1.569066), (-21.19094, 1.558592), (-18.717615, 1.558592), (-18.702517, 1.569065)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_RobothorWallDecor_4_3_1"
        {
            token outputs:surface.connect = </root/_materials/M_RobothorWallDecor_4_3_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_RobothorWallDecor_4_3_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_RobothorWallDecor_4_3_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/DarkWood2.tif@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_RobothorWallDecor_4_3_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_RobothorWallDecor_4_3_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

