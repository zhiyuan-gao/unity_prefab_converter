#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "ToasterLever2_23_ToasterLever2_23_2_GeomSubset_2"
    {
        def Mesh "ToasterLever2_23_ToasterLever2_23_2_GeomSubset_2"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4]
            int[] faceVertexIndices = [8, 9, 11, 10]
            rel material:binding = </root/_materials/M_ToasterLever2_23_2>
            normal3f[] normals = [(0.91986287, -4.0208484e-8, -0.39224014), (-4.0208484e-8, -0.91986287, -0.39224014), (-0.91986287, 4.0208484e-8, -0.39224014), (4.0208484e-8, 0.91986287, -0.39224014)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.057985, -0.170509, 0.046959), (0.057985, -0.167012, 0.046959), (0.061482, -0.170509, 0.046959), (0.061482, -0.167012, 0.046959), (0.057985, -0.170509, 0.046959), (0.057985, -0.167012, 0.046959), (0.061482, -0.170509, 0.046959), (0.061482, -0.167012, 0.046959), (0.057985, -0.170509, 0.046959), (0.057985, -0.167012, 0.046959), (0.061482, -0.170509, 0.046959), (0.061482, -0.167012, 0.046959), (0.057985, -0.170509, 0.046959), (0.057985, -0.167012, 0.046959), (0.061482, -0.170509, 0.046959), (0.061482, -0.167012, 0.046959), (0.057985, -0.170509, 0.046959), (0.057985, -0.167012, 0.046959), (0.061482, -0.170509, 0.046959), (0.061482, -0.167012, 0.046959), (0.057985, -0.170509, 0.046959), (0.057985, -0.167012, 0.046959), (0.061482, -0.170509, 0.046959), (0.061482, -0.167012, 0.046959), (0.05766, -0.171118, 0.050696), (0.05766, -0.171118, 0.044129), (0.061807, -0.171118, 0.050696), (0.061807, -0.171118, 0.044129), (0.059733, -0.171118, 0.044129), (0.059733, -0.171118, 0.050696), (0.048972, -0.174717, 0.050696), (0.048462, -0.174928, 0.050471), (0.04825, -0.175016, 0.049929), (0.050458, -0.17832, 0.049929), (0.05062, -0.178158, 0.050471), (0.051011, -0.177768, 0.050696), (0.054061, -0.179806, 0.050696), (0.05385, -0.180317, 0.050471), (0.053762, -0.180528, 0.049929), (0.05766, -0.181303, 0.049929), (0.057682, -0.181079, 0.050471), (0.057736, -0.180537, 0.050696), (0.048241, -0.171043, 0.050696), (0.047699, -0.171096, 0.050471), (0.047475, -0.171118, 0.049929), (0.04825, -0.175016, 0.044895), (0.048462, -0.174928, 0.044354), (0.048972, -0.174717, 0.044129), (0.050458, -0.17832, 0.044895), (0.05062, -0.178158, 0.044354), (0.051011, -0.177768, 0.044129), (0.053762, -0.180528, 0.044895), (0.05385, -0.180317, 0.044354), (0.054061, -0.179806, 0.044129), (0.057736, -0.180537, 0.044129), (0.057682, -0.181079, 0.044354), (0.05766, -0.181303, 0.044895), (0.047475, -0.171118, 0.044895), (0.047699, -0.171096, 0.044354), (0.048241, -0.171043, 0.044129), (0.059733, -0.181303, 0.049929), (0.059733, -0.181079, 0.050471), (0.059733, -0.180537, 0.050696), (0.061732, -0.180537, 0.050696), (0.061785, -0.181079, 0.050471), (0.061807, -0.181303, 0.049929), (0.065704, -0.180528, 0.049929), (0.065617, -0.180317, 0.050471), (0.065405, -0.179806, 0.050696), (0.059733, -0.181303, 0.044895), (0.059733, -0.181079, 0.044354), (0.059733, -0.180537, 0.044129), (0.065704, -0.180528, 0.044895), (0.065617, -0.180317, 0.044354), (0.065405, -0.179806, 0.044129), (0.061807, -0.181303, 0.044895), (0.061785, -0.181079, 0.044354), (0.061732, -0.180537, 0.044129), (0.069009, -0.17832, 0.049929), (0.068847, -0.178158, 0.050471), (0.068456, -0.177768, 0.050696), (0.069009, -0.17832, 0.044895), (0.068847, -0.178158, 0.044354), (0.068456, -0.177768, 0.044129), (0.071217, -0.175016, 0.049929), (0.071005, -0.174928, 0.050471), (0.070495, -0.174717, 0.050696), (0.071217, -0.175016, 0.044895), (0.071005, -0.174928, 0.044354), (0.070495, -0.174717, 0.044129), (0.071992, -0.171118, 0.049929), (0.071767, -0.171096, 0.050471), (0.071225, -0.171043, 0.050696), (0.071225, -0.171043, 0.044129), (0.071767, -0.171096, 0.044354), (0.071992, -0.171118, 0.044895), (0.048241, -0.159651, 0.050471), (0.048241, -0.160193, 0.050696), (0.047699, -0.160193, 0.050471), (0.047475, -0.160193, 0.049929), (0.047699, -0.159651, 0.049929), (0.048241, -0.159427, 0.049929), (0.048241, -0.159651, 0.044354), (0.048241, -0.159427, 0.044895), (0.047699, -0.159651, 0.044895), (0.047475, -0.160193, 0.044895), (0.047699, -0.160193, 0.044354), (0.048241, -0.160193, 0.044129), (0.05766, -0.160193, 0.050696), (0.05766, -0.159651, 0.050471), (0.05766, -0.159427, 0.049929), (0.05766, -0.160193, 0.044129), (0.05766, -0.159651, 0.044354), (0.05766, -0.159427, 0.044895), (0.071225, -0.159651, 0.050471), (0.071225, -0.159427, 0.049929), (0.071767, -0.159651, 0.049929), (0.071992, -0.160193, 0.049929), (0.071767, -0.160193, 0.050471), (0.071225, -0.160193, 0.050696), (0.071225, -0.159651, 0.044354), (0.071225, -0.160193, 0.044129), (0.071767, -0.160193, 0.044354), (0.071992, -0.160193, 0.044895), (0.071767, -0.159651, 0.044895), (0.071225, -0.159427, 0.044895), (0.059733, -0.159427, 0.049929), (0.059733, -0.159651, 0.050471), (0.059733, -0.160193, 0.050696), (0.061807, -0.159427, 0.049929), (0.061807, -0.159651, 0.050471), (0.061807, -0.160193, 0.050696), (0.059733, -0.160193, 0.044129), (0.059733, -0.159651, 0.044354), (0.059733, -0.159427, 0.044895), (0.061807, -0.160193, 0.044129), (0.061807, -0.159651, 0.044354), (0.061807, -0.159427, 0.044895), (0.047799, -0.159751, 0.050372), (0.047799, -0.159751, 0.044453), (0.071668, -0.159751, 0.050372), (0.071668, -0.159751, 0.044453), (0.069009, -0.17832, 0.046075), (0.065704, -0.180528, 0.046075), (0.061807, -0.181303, 0.046075), (0.059733, -0.181303, 0.046075), (0.05766, -0.181303, 0.046075), (0.053762, -0.180528, 0.046075), (0.050458, -0.17832, 0.046075), (0.04825, -0.175016, 0.046075), (0.047475, -0.171118, 0.046075), (0.047475, -0.160193, 0.046075), (0.047699, -0.159651, 0.046075), (0.048241, -0.159427, 0.046075), (0.05766, -0.159427, 0.046075), (0.059733, -0.159427, 0.046075), (0.061807, -0.159427, 0.046075), (0.071225, -0.159427, 0.046075), (0.071767, -0.159651, 0.046075), (0.071992, -0.160193, 0.046075), (0.071992, -0.171118, 0.046075), (0.071217, -0.175016, 0.046075), (0.069009, -0.17832, 0.048749), (0.065704, -0.180528, 0.048749), (0.061807, -0.181303, 0.048749), (0.059733, -0.181303, 0.048749), (0.05766, -0.181303, 0.048749), (0.053762, -0.180528, 0.048749), (0.050458, -0.17832, 0.048749), (0.04825, -0.175016, 0.048749), (0.047475, -0.171118, 0.048749), (0.047475, -0.160193, 0.048749), (0.047699, -0.159651, 0.048749), (0.048241, -0.159427, 0.048749), (0.05766, -0.159427, 0.048749), (0.059733, -0.159427, 0.048749), (0.061807, -0.159427, 0.048749), (0.071225, -0.159427, 0.048749), (0.071767, -0.159651, 0.048749), (0.071992, -0.160193, 0.048749), (0.071992, -0.171118, 0.048749), (0.071217, -0.175016, 0.048749), (0.056738, -0.160463, 0.044897), (0.056738, -0.149444, 0.044897), (0.056738, -0.160463, 0.048603), (0.056738, -0.149444, 0.048603), (0.062729, -0.160463, 0.048603), (0.062729, -0.149444, 0.048603), (0.062729, -0.160463, 0.044897), (0.062729, -0.149444, 0.044897)]
            bool[] primvars:sharp_face = [0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-46.37631, -18.006828), (-46.34701, -18.006828), (-46.34701, -17.977531), (-46.37631, -17.977531)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_ToasterLever2_23_2"
        {
            token outputs:surface.connect = </root/_materials/M_ToasterLever2_23_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_ToasterLever2_23_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_ToasterLever2_23_2/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_ToasterLever2_23_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_ToasterLever2_23_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

