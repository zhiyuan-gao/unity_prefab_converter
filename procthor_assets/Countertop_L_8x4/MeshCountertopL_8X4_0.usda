#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "CountertopL_8X4"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "CountertopL_8X4" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-1.219046, -0.610431, -0.517404), (1.219356, 0.608772, 0.418626)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [5, 13, 17, 4, 8, 15, 14, 9, 1, 5, 4, 0, 0, 4, 17, 16, 2, 6, 7, 3, 0, 8, 9, 1, 3, 10, 11, 2, 15, 8, 0, 16, 7, 13, 12, 3, 3, 12, 14, 10, 15, 11, 10, 14, 2, 11, 15, 16, 17, 6, 2, 16, 13, 7, 6, 17, 13, 19, 18, 12, 12, 18, 20, 14, 20, 28, 9, 14, 5, 22, 19, 13, 22, 24, 23, 21, 25, 24, 22, 5, 1, 26, 25, 5, 9, 27, 26, 1, 28, 29, 27, 9, 21, 23, 29, 28, 19, 22, 21, 18, 18, 21, 28, 20, 24, 25, 26, 23, 23, 26, 27, 29]
            rel material:binding = </root/_materials/M_CountertopL_8X4_0>
            normal3f[] normals = [(0.0000010977503, 1, -0.0000083251825), (-7.893698e-7, 1, -0.00000493736), (4.2965e-7, 1, -0.000009266956), (8.593e-7, 1, -0.000018533912), (1, 0, 0), (1, 0, 0), (1, -0.0000012628002, 7.910798e-7), (1, -1.05536145e-7, 5.4464147e-7), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0.000001089529, 0, -1), (2.7244133e-7, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, -5.3958814e-7), (0, -1, -5.39588e-7), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (2.7244133e-7, 0, -1), (-8.490521e-7, 0, 1), (-8.490521e-7, 0, 1), (-4.2486482e-7, 0, 1), (-4.245118e-7, 0, 1), (-4.245118e-7, 0, 1), (-4.2486482e-7, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, -0.0000012628002, 7.910798e-7), (0.0000010894709, 0, -1), (0, 0, -0.99999994), (0, 0, -1), (2.7244133e-7, 0, -1), (0.000001089529, 0, -1), (0.000002179058, 0, -1), (0.0000010894709, 0, -1), (2.7244133e-7, 0, -1), (-7.893698e-7, 1, -0.00000493736), (0, 1, 0), (0, 1, 0), (4.2965e-7, 1, -0.000009266956), (0.9999986, 0.0016609128, 0), (0.9999986, 0.0016609128, 0), (0.9999986, 0.0016609128, 0), (0.9999986, 0.0016609128, 0), (0.0005641958, 0.9999999, 6.052992e-7), (0.0005641958, 0.9999999, 6.052992e-7), (0.0005641958, 0.9999999, 6.052992e-7), (0.0005641958, 0.9999999, 6.052992e-7), (1, -0.0000037884026, 0.0000023732407), (1, 0.0000012168773, 5.7675607e-7), (1, -1.05536145e-7, 5.4464147e-7), (1, -0.0000012628002, 7.910798e-7), (0.0000010977503, 1, -0.0000083251825), (0.000003157805, 1, 0.0000011494998), (-0.000003227409, 1, 0.0000037218324), (-7.893698e-7, 1, -0.00000493736), (0.9999785, 0.0007967432, 0.006517602), (0.9999785, 0.0007967432, 0.006517602), (0.9999785, 0.0007967432, 0.006517602), (0.9999785, 0.0007967432, 0.006517602), (0.000008645506, 0.99999994, -0.0000010612631), (0.000008645506, 0.99999994, -0.0000010612631), (0.000003157805, 1, 0.0000011494998), (0.0000010977503, 1, -0.0000083251825), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, -5.3958814e-7), (0, -1, -0.000001079176), (0, -1, -0.000001079176), (0, -1, -5.39588e-7), (1, 0.0000012168773, 5.7675607e-7), (0.99999994, 0.00000551852, -9.671809e-7), (0.99999994, 0.00000551852, -9.671809e-7), (1, -1.05536145e-7, 5.4464147e-7), (0.0002751907, 0.9999787, 0.006514133), (0.0002751907, 0.9999787, 0.006514133), (0.0002751907, 0.9999787, 0.006514133), (0.0002751907, 0.9999787, 0.006514133), (-0.009740719, -0.000117671545, 0.9999526), (-0.009740719, -0.000117671545, 0.9999526), (-0.007299449, -0.002600242, 0.99997), (-0.0072094686, -0.0025905033, 0.9999706), (-0.0072094686, -0.0025905033, 0.9999706), (-0.007299449, -0.002600242, 0.99997), (-0.000040713352, -0.009753113, 0.9999525), (-0.000040713352, -0.009753113, 0.9999525), (0.00037886327, -0.000069562506, 1), (0.00037886327, -0.000069562506, 1), (0.00017423471, 0.0001444385, 1), (0.00017423536, 0.0001444378, 1), (0.00017423536, 0.0001444378, 1), (0.00017423471, 0.0001444385, 1), (-0.000030392986, 0.00035843853, 0.99999994), (-0.000030392986, 0.00035843853, 0.99999994)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(1.219356, 0.608771, 0.418626), (1.219356, 0.608771, 0.388626), (0.609756, -0.000828, 0.418626), (0.609756, -0.000828, 0.388626), (1.219356, -0.610429, 0.418626), (1.219356, -0.61043, 0.388626), (0.609756, -0.610429, 0.418626), (0.609756, -0.610429, 0.388626), (-1.219045, 0.608771, 0.418626), (-1.219045, 0.608771, 0.388626), (-1.219045, -0.000828, 0.388626), (-1.219045, -0.000828, 0.418626), (0.628716, 0.018129, 0.388626), (0.62976, -0.610429, 0.388626), (-1.219045, 0.019171, 0.388626), (-1.219045, 0.019171, 0.418626), (0.62976, 0.019171, 0.418626), (0.62976, -0.610429, 0.418626), (0.628716, 0.018129, -0.437404), (0.62976, -0.610429, -0.437404), (-1.219045, 0.019172, -0.437404), (0.648721, 0.038135, -0.437143), (0.64976, -0.610426, -0.437273), (0.649763, 0.039177, -0.517143), (0.64976, -0.610426, -0.517273), (1.219356, -0.610431, -0.517404), (1.219356, 0.608772, -0.517404), (-1.219046, 0.608772, -0.517404), (-1.219043, 0.039171, -0.437274), (-1.219043, 0.039171, -0.517274)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-9.840594, 1.030573), (-8.919346, 1.030573), (-8.919346, 1.077447), (-9.840594, 1.077447), (-8.88808, 1.095475), (-9.809357, 1.095475), (-9.809357, 1.048601), (-8.88808, 1.048601), (-10.441349, 1.012544), (-8.536341, 1.012544), (-8.536343, 1.059418), (-10.441349, 1.059418), (-11.642849, 1.42709), (-11.64285, -0.477909), (-10.721607, -0.477909), (-10.721607, 0.505838), (-8.888078, 1.113503), (-9.840607, 1.113503), (-9.840607, 1.066629), (-8.888078, 1.066629), (-11.642904, 0.713266), (-7.832789, 0.713265), (-7.832788, 0.760138), (-11.642905, 0.760139), (-11.042069, 0.994515), (-8.184623, 0.994514), (-8.184623, 1.04139), (-11.042069, 1.04139), (-7.832847, 0.505838), (-7.832847, 1.42709), (-11.642849, 1.42709), (-10.721607, 0.505838), (-11.030561, 1.369069), (-11.061817, 1.369069), (-11.060188, 0.386939), (-11.030561, 0.416561), (-11.030561, 0.416561), (-11.060188, 0.386939), (-8.173047, 0.385312), (-8.173047, 0.416561), (-9.809357, 1.095475), (-9.840606, 1.095475), (-9.840606, 1.048601), (-9.809357, 1.048601), (-10.69035, 0.47459), (-7.832847, 0.47459), (-7.832847, 0.505838), (-10.721607, 0.505838), (-10.721607, -0.477909), (-10.69035, -0.477909), (-10.69035, 0.47459), (-10.721607, 0.505838), (-8.919346, 1.030573), (-8.888091, 1.030573), (-8.888091, 1.077447), (-8.919346, 1.077447), (-20.051401, -0.179707), (-19.406065, -0.179707), (-19.406065, 0.311356), (-20.051401, 0.311356), (-20.435684, 1.121914), (-20.435684, 0.476578), (-18.992119, 0.476578), (-18.992119, 1.121914), (-19.447418, 0.149796), (-19.44752, 0.165422), (-20.092754, 0.610424), (-20.092754, 0.149796), (-20.092754, -0.004883), (-19.447521, 0.440111), (-19.447418, 0.455738), (-20.092754, 0.455738), (-20.172583, 0.006866), (-20.172583, -0.055635), (-19.665077, -0.055534), (-19.665892, 0.006968), (-19.384918, -0.004883), (-19.38502, 0.440111), (-19.447521, 0.440111), (-20.092754, -0.004883), (-20.254633, 0.928671), (-20.254633, 0.220833), (-19.302132, 0.220833), (-19.302132, 0.928671), (-18.36026, -0.273962), (-18.360254, 0.433876), (-20.265255, 0.433876), (-20.265255, -0.273962), (-19.44752, 0.165422), (-19.38502, 0.165422), (-19.384918, 0.610424), (-20.092754, 0.610424), (-19.970028, 0.555948), (-19.970842, 0.493448), (-18.510815, 0.493345), (-18.510815, 0.555845), (-19.955225, 0.877844), (-19.970852, 0.877842), (-19.97004, 0.37114), (-19.95441, 0.38677), (-19.95441, 0.38677), (-19.97004, 0.37114), (-18.510805, 0.370331), (-18.510805, 0.385954), (-19.820261, 0.83087), (-20.265257, 0.830875), (-20.265257, -0.12163), (-19.820263, 0.323366), (-19.820263, 0.323366), (-20.265257, -0.12163), (-18.360252, -0.12163), (-18.360256, 0.323372)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_CountertopL_8X4_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                rel material:binding = </root/_materials/M_CountertopL_8X4_0>
            }

            def GeomSubset "M_CountertopL_8X4_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27]
                rel material:binding = </root/_materials/M_CountertopL_8X4_1>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_CountertopL_8X4_0"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopL_8X4_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopL_8X4_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/marbleBase2.jpg@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopL_8X4_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_CountertopL_8X4_1"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopL_8X4_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopL_8X4_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_CountertopL_8X4_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/DarkWood2.tif@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopL_8X4_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopL_8X4_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

