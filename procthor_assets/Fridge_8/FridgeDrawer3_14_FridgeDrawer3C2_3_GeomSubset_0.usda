#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "FridgeDrawer3_14_FridgeDrawer3C2_3_GeomSubset_0"
    {
        def Mesh "FridgeDrawer3_14_FridgeDrawer3C2_3_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 52, 53, 70, 63, 58, 37, 41, 57, 63, 34, 35, 62, 62, 35, 36, 64, 57, 41, 40, 69, 71, 38, 39, 70, 69, 40, 38, 71, 64, 36, 37, 58, 70, 39, 34, 63, 28, 34, 39, 29, 58, 77, 76, 64, 71, 79, 78, 69, 71, 70, 53, 80, 79, 57, 69, 78, 81, 62, 64, 76, 82, 62, 82, 83, 52, 63, 77, 58, 57, 81, 53, 52, 83, 80, 85, 84, 28, 29, 95, 94, 93, 92, 35, 34, 28, 84, 88, 89, 36, 35, 88, 40, 41, 86, 90, 38, 91, 85, 29, 39, 91, 38, 40, 90, 37, 36, 89, 87, 41, 37, 92, 93, 37, 87, 95, 92, 87, 86, 94, 95, 86, 41, 93, 94]
            rel material:binding = </root/_materials/M_FridgeDrawer3C2_0>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1.8952414e-7, -0.8869573, 0.4618516), (0.000001359731, -0.8869551, 0.46185547), (-0.0000034670495, -0.9668852, 0.25521147), (-0.0000034670495, -0.9668852, 0.25521147), (-0.03199355, -0.10751765, 0.9936883), (-0.010002523, -0.03130379, 0.99945986), (0.010003353, -0.03130342, 0.99945986), (0.031991903, -0.10751737, 0.9936883), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.07436772, 0.0029965, 0.9972263), (-0.07440223, 0.0029996256, 0.99722373), (0.031991903, -0.10751737, 0.9936883), (0.010003353, -0.03130342, 0.99945986), (0.07436927, 0.002996122, 0.99722624), (0.074403875, 0.0029995737, 0.99722356), (-5.0579157e-8, 0, 1), (-5.1364708e-8, 0, 1), (-5.2304102e-8, 0, 1), (-5.156577e-8, 0, 1), (0.074403875, 0.0029995737, 0.99722356), (0.07436927, 0.002996122, 0.99722624), (-5.1364708e-8, 0, 1), (-5.0579157e-8, 0, 1), (-0.07440223, 0.0029996256, 0.99722373), (-0.07436772, 0.0029965, 0.9972263), (-0.010002523, -0.03130379, 0.99945986), (-0.03199355, -0.10751765, 0.9936883), (-5.156577e-8, 0, 1), (-5.2304102e-8, 0, 1), (0, 0, 1), (0, 0, 1), (-0.0000020938598, 0.9294372, -0.36898005), (0.0000023143382, 1, 0), (0.0000023143382, 1, 0), (0.0000022881075, 0.92943716, -0.36898023), (0.9996047, -0.012400867, -0.02523259), (0.99961996, -0.012918143, -0.024352832), (0.9996276, -0.01279828, -0.024101336), (0.99960953, -0.01208141, -0.025197862), (-0.9942634, 0.075678915, -0.07558444), (-0.9960811, 0.07689709, -0.04369571), (-0.9996252, -0.012796657, -0.024200814), (-0.99960953, -0.012077417, -0.025197035), (-0.9942634, 0.075678915, -0.07558444), (-0.9934885, 0.08147926, -0.07963502), (-0.9934885, 0.08147926, -0.07963502), (-0.9949547, 0.08369404, -0.05532214), (-0.9960811, 0.07689709, -0.04369571), (-0.9996048, -0.012396778, -0.02523128), (-0.99960953, -0.012077417, -0.025197035), (-0.9996252, -0.012796657, -0.024200814), (-0.9996214, -0.013106632, -0.024192255), (0.9942642, 0.075670496, -0.07558188), (0.99960953, -0.01208141, -0.025197862), (0.9996276, -0.01279828, -0.024101336), (0.99608165, 0.076889515, -0.043695834), (0.9942642, 0.075670496, -0.07558188), (0.99608165, 0.076889515, -0.043695834), (0.99496055, 0.083695196, -0.0552138), (0.9934906, 0.08147309, -0.07961517), (0.9934906, 0.08147309, -0.07961517), (0.000004100653, 0.98549163, 0.16972405), (0.0000047101535, 0.98549175, 0.16972303), (0.0000047101535, 0.98549175, 0.16972303), (0.0000041006533, 0.98549163, 0.16972405), (0.000001359731, -0.8869551, 0.46185547), (-1.8952414e-7, -0.8869573, 0.4618516), (-0.0000025892928, -0.8677301, 0.49703568), (-0.0000025892864, -0.8677301, 0.49703565), (0.000002496863, 0.86099315, -0.5086167), (0.0000024968624, 0.86099315, -0.5086167), (-0.0000020938598, 0.9294372, -0.36898005), (0.0000022881075, 0.92943716, -0.36898023), (-0.0000022870497, -0.9882708, -0.15271105), (-0.0000022870497, -0.9882708, -0.15271105), (-0.0000022870497, -0.9882708, -0.15271105), (-0.0000022870497, -0.9882708, -0.15271105), (-1, -1.4248303e-7, 0), (-0.99999994, -2.8496603e-7, 0), (-0.99999994, -2.8496603e-7, 0), (-1, -1.9088284e-7, 0), (-1, 5.0098436e-7, 0), (-1, 0.0000025573158, 2.3825467e-7), (-1, 0.000001959409, 1.5156436e-7), (-1, -1.4248303e-7, 0), (-1, 5.0098436e-7, 0), (1, -0.0000019970898, -1.5414797e-7), (1, -0.000001802205, -1.3910552e-7), (1, -0.000002801973, -3.220925e-7), (1, -0.0000020370212, -2.4231582e-7), (1, 8.905052e-9, 0), (1, 4.452526e-9, 0), (1, 1.1930021e-8, 0), (0.99999994, 1.7810102e-8, 0), (0.99999994, 1.7810102e-8, 0), (1, 4.452526e-9, 0), (1, 8.905052e-9, 0), (1, -0.0000019970898, -1.5414797e-7), (1, -0.0000020370212, -2.4231582e-7), (-1, 0.0000017682012, 1.3677403e-7), (-1, 0.000001959409, 1.5156436e-7), (-1, 0.0000025573158, 2.3825467e-7), (-1, 0.0000027323206, 3.166943e-7), (0.010003353, -0.03130342, 0.99945986), (-0.010002523, -0.03130379, 0.99945986), (-7.090392e-9, 0, 1), (-7.090392e-9, 0, 1), (-1, 0.0000017682012, 1.3677403e-7), (-1, 0.0000027323206, 3.166943e-7), (-1, 0, 0), (-1, 0, 0), (-4.600808e-9, 0, -1), (-4.600808e-9, 0, -1), (-4.600808e-9, 0, -1), (-4.600808e-9, 0, -1), (1, -0.000002801973, -3.220925e-7), (1, -0.000001802205, -1.3910552e-7), (1, 0, 0), (1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.000957, 0.030103, -1.040654), (-0.000948, 0.030103, -1.040654), (-0.000957, 0.030112, -1.040654), (-0.000948, 0.030112, -1.040654), (-0.000957, 0.030103, -1.040654), (-0.000948, 0.030103, -1.040654), (-0.000957, 0.030112, -1.040654), (-0.000948, 0.030112, -1.040654), (-0.000957, 0.030103, -1.040654), (-0.000948, 0.030103, -1.040654), (-0.000957, 0.030112, -1.040654), (-0.000948, 0.030112, -1.040654), (-0.000957, 0.030103, -1.040654), (-0.000948, 0.030103, -1.040654), (-0.000957, 0.030112, -1.040654), (-0.000948, 0.030112, -1.040654), (-0.000957, 0.030103, -1.040654), (-0.000948, 0.030103, -1.040654), (-0.000957, 0.030112, -1.040654), (-0.000948, 0.030112, -1.040654), (-0.000957, 0.030103, -1.040654), (-0.000948, 0.030103, -1.040654), (-0.000957, 0.030112, -1.040654), (-0.000948, 0.030112, -1.040654), (-0.000957, 0.030103, -1.040654), (-0.000948, 0.030103, -1.040654), (-0.000957, 0.030112, -1.040654), (-0.000948, 0.030112, -1.040654), (-0.460904, 0.146682, 0.110231), (-0.029516, 0.146681, 0.110231), (-0.460904, 0.0771, -0.007564), (-0.460904, 0.072148, -0.010529), (-0.029516, 0.072147, -0.010529), (-0.029516, 0.077098, -0.007564), (-0.460904, 0.146682, 0.118311), (-0.460904, 0.0771, 0.118311), (-0.460904, 0.072148, 0.118311), (-0.460905, -0.180426, 0.118311), (-0.029516, 0.077098, 0.118311), (-0.029516, 0.146681, 0.118311), (-0.029516, 0.072147, 0.118311), (-0.029517, -0.180427, 0.118311), (-0.029517, -0.143563, -0.010529), (-0.029517, -0.164015, 0.012105), (-0.460905, -0.164014, 0.012105), (-0.460905, -0.143562, -0.010529), (-0.460905, -0.162457, 0.003444), (-0.029517, -0.162458, 0.003444), (-0.460905, -0.158023, -0.003899), (-0.029517, -0.158025, -0.003899), (-0.460905, -0.151388, -0.008806), (-0.029517, -0.15139, -0.008806), (-0.456217, 0.138315, 0.11299), (-0.034203, 0.138313, 0.11299), (-0.036792, 0.072457, -0.001982), (-0.453628, 0.072458, -0.001982), (-0.034049, -0.155354, 0.013878), (-0.036682, -0.173564, 0.11961), (-0.453739, -0.173562, 0.11961), (-0.456372, -0.155353, 0.013878), (-0.036792, 0.070465, -0.003175), (-0.453628, 0.070466, -0.003175), (-0.45077, 0.0771, 0.118311), (-0.453738, 0.139719, 0.118311), (-0.45077, 0.072148, 0.118311), (-0.034119, -0.154353, 0.007159), (-0.034119, -0.151821, 0.002966), (-0.034119, -0.148032, 0.000165), (-0.034066, -0.1427, -0.000838), (-0.03965, 0.072147, 0.118311), (-0.036682, 0.139718, 0.118311), (-0.03965, 0.077098, 0.118311), (-0.456355, -0.142699, -0.000838), (-0.456302, -0.148031, 0.000165), (-0.456302, -0.15182, 0.002966), (-0.456302, -0.154352, 0.007159), (-0.45135, 0.071807, 0.093661), (-0.454385, -0.169093, 0.093661), (-0.03907, 0.071805, 0.093661), (-0.039064, 0.076147, 0.093661), (-0.034638, 0.127242, 0.093661), (-0.036036, -0.169095, 0.093661), (-0.451356, 0.076148, 0.093661), (-0.455781, 0.127243, 0.093661), (-0.460904, 0.136893, 0.093661), (-0.029516, 0.136892, 0.093661), (-0.029517, -0.176618, 0.093661), (-0.460905, -0.176617, 0.093661), (-0.460904, 0.0771, 0.093661), (-0.460904, 0.072148, 0.093661), (-0.029516, 0.072147, 0.093661), (-0.029516, 0.077098, 0.093661), (-0.460905, -0.194313, 0.118311), (-0.029517, -0.194314, 0.118311), (-0.029517, -0.190505, 0.093661), (-0.460905, -0.190504, 0.093661)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-169.52118, -113.841446), (-169.52118, -113.84153), (-169.5211, -113.84153), (-169.5211, -113.841446), (-170.1911, 0.694115), (-170.1911, -0.603575), (-170.17474, -0.595954), (-170.17474, 0.686494), (-171.11832, 0.658704), (-171.13824, 0.679493), (-171.13824, -0.572082), (-171.11832, -0.551292), (-170.20941, 0.658704), (-170.1892, 0.679493), (-170.3911, 0.679493), (-170.3911, 0.650093), (-170.3911, 0.650093), (-170.3911, 0.679493), (-170.40546, 0.679493), (-170.40546, 0.650093), (-171.11832, -0.551292), (-171.13824, -0.572082), (-170.40546, -0.572082), (-170.40546, -0.542681), (-170.3911, -0.542681), (-170.3911, -0.572082), (-170.1892, -0.572082), (-170.20941, -0.551292), (-170.40546, -0.542681), (-170.40546, -0.572082), (-170.3911, -0.572082), (-170.3911, -0.542681), (-170.40546, 0.650093), (-170.40546, 0.679493), (-171.13824, 0.679493), (-171.11832, 0.658704), (-170.20941, -0.551292), (-170.1892, -0.572082), (-170.1892, 0.679493), (-170.20941, 0.658704), (-170.3597, 0.711396), (-170.38432, 0.711396), (-170.38432, -0.603985), (-170.3597, -0.603985), (-169.96524, 0.40139), (-170.04045, 0.388438), (-170.04045, -0.309731), (-169.96902, -0.31072), (-169.91367, 0.219958), (-169.98509, 0.217201), (-169.98509, 0.204616), (-169.91367, 0.205605), (-169.91367, 0.219958), (-169.91367, 0.401471), (-169.92908, 0.397401), (-169.98509, 0.365308), (-169.98509, 0.217201), (-169.9099, -0.506632), (-169.91367, 0.205605), (-169.98509, 0.204616), (-169.98509, -0.493677), (-169.96902, -0.32507), (-169.96902, -0.31072), (-170.04045, -0.309731), (-170.04045, -0.322314), (-169.96902, -0.32507), (-170.04045, -0.322314), (-170.04045, -0.470394), (-169.98442, -0.502482), (-169.96902, -0.506551), (-170.12253, 0.652368), (-170.19821, 0.650482), (-170.19821, -0.566537), (-170.12253, -0.568423), (-170.1911, -0.603575), (-170.1911, 0.694115), (-170.25052, 0.692776), (-170.25052, -0.602237), (-170.30917, -0.603985), (-170.30917, 0.711396), (-170.3597, 0.711396), (-170.3597, -0.603985), (-170.33157, 0.68201), (-170.33157, -0.574598), (-170.25974, -0.574598), (-170.25974, 0.68201), (-170.07051, 0.264664), (-170.07051, 0.466211), (-170.0939, 0.466211), (-170.14189, 0.437859), (-170.14189, 0.264664), (-170.14189, 0.250321), (-170.07051, 0.250321), (-170.07051, 0.264664), (-170.14189, 0.264664), (-170.01941, -0.305578), (-170.01941, 0.425948), (-170.09082, 0.414916), (-170.09082, -0.305578), (-170.01941, -0.319919), (-170.09082, -0.319919), (-170.09082, -0.493099), (-170.04282, -0.52145), (-170.01941, -0.52145), (-170.09082, -0.319919), (-170.01941, -0.319919), (-170.01941, -0.305578), (-170.09082, -0.305578), (-170.07051, -0.481267), (-170.07051, 0.250321), (-170.14189, 0.250321), (-170.14189, -0.470234), (-171.13824, -0.572082), (-171.13824, 0.679493), (-171.17853, 0.679493), (-171.17853, -0.572082), (-170.07051, -0.481267), (-170.14189, -0.470234), (-170.14189, -0.510458), (-170.07051, -0.521492), (-170.27437, 0.678401), (-170.27437, -0.570989), (-170.23413, -0.570989), (-170.23413, 0.678401), (-170.09082, 0.414916), (-170.01941, 0.425948), (-170.01941, 0.466169), (-170.09082, 0.455136)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer3C2_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer3C2_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.36764705, 0.36764705, 0.36764705)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer3C2_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Copper_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer3C2_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

