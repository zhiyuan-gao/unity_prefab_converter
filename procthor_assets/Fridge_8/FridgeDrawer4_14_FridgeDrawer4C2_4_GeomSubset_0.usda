#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "FridgeDrawer4_14_FridgeDrawer4C2_4_GeomSubset_0"
    {
        def Mesh "FridgeDrawer4_14_FridgeDrawer4C2_4_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 52, 53, 70, 63, 58, 37, 41, 57, 63, 34, 35, 62, 62, 35, 36, 64, 57, 41, 40, 69, 71, 38, 39, 70, 69, 40, 38, 71, 64, 36, 37, 58, 70, 39, 34, 63, 28, 34, 39, 29, 58, 77, 76, 64, 71, 79, 78, 69, 71, 70, 53, 80, 79, 57, 69, 78, 81, 62, 64, 76, 82, 62, 82, 83, 52, 63, 77, 58, 57, 81, 53, 52, 83, 80, 85, 84, 28, 29, 95, 94, 93, 92, 35, 34, 28, 84, 88, 89, 36, 35, 88, 40, 41, 86, 90, 38, 91, 85, 29, 39, 91, 38, 40, 90, 37, 36, 89, 87, 41, 37, 92, 93, 37, 87, 95, 92, 87, 86, 94, 95, 86, 41, 93, 94]
            rel material:binding = </root/_materials/M_FridgeDrawer4C2_0>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0.0000040692976, 0.9461853, -0.3236254), (1.7508864e-7, 0.946186, -0.3236232), (-0.000002301083, 0.9669068, -0.25513), (-0.000002301083, 0.9669068, -0.25513), (-0.04360262, 0.07870099, -0.9959442), (-0.029585797, 0.058680106, -0.9978383), (0.029587382, 0.058682084, -0.9978382), (0.043604717, 0.07869876, -0.9959444), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.0022991747, -0.000100689016, -0.9999973), (-0.0008035898, -1.4342368e-7, -0.9999997), (0.043604717, 0.07869876, -0.9959444), (0.029587382, 0.058682084, -0.9978382), (0.0023004115, -0.000100605306, -0.9999974), (0.0008049607, 2.5404734e-7, -0.99999964), (3.540799e-7, 0, -1), (3.595812e-7, 0, -1), (3.6612514e-7, 0, -1), (3.6100064e-7, 0, -1), (0.0008049607, 2.5404734e-7, -0.99999964), (0.0023004115, -0.000100605306, -0.9999974), (3.595812e-7, 0, -1), (3.540799e-7, 0, -1), (-0.0008035898, -1.4342368e-7, -0.9999997), (-0.0022991747, -0.000100689016, -0.9999973), (-0.029585797, 0.058680106, -0.9978383), (-0.04360262, 0.07870099, -0.9959442), (3.6100064e-7, 0, -1), (3.6612514e-7, 0, -1), (0, 0, -1), (0, 0, -1), (0.0000056645895, -0.98415154, 0.1773296), (0.0000023143386, -1, 0), (0.0000023143386, -1, 0), (0.0000021714748, -0.9841515, 0.17732981), (0.9996047, 0.01240088, 0.025231615), (0.99960744, 0.012520932, 0.025063712), (0.99970514, -0.0029725758, 0.024100278), (0.999719, -0.0003907537, 0.023701932), (-0.9995365, -0.008597672, 0.02919952), (-0.9993991, -0.010896416, 0.03290367), (-0.999705, -0.002979794, 0.024101133), (-0.99971896, -0.00039054127, 0.023701852), (-0.9995365, -0.008597672, 0.02919952), (-0.9934922, -0.081475705, 0.07959245), (-0.9934922, -0.081475705, 0.07959245), (-0.9942141, -0.082502365, 0.06878792), (-0.9993991, -0.010896416, 0.03290367), (-0.9996048, 0.012396786, 0.02523168), (-0.99971896, -0.00039054127, 0.023701852), (-0.999705, -0.002979794, 0.024101133), (-0.99960583, 0.012472861, 0.025148697), (0.9995367, -0.008599892, 0.02919808), (0.999719, -0.0003907537, 0.023701932), (0.99970514, -0.0029725758, 0.024100278), (0.99939936, -0.01089045, 0.032897204), (0.9995367, -0.008599892, 0.02919808), (0.99939936, -0.01089045, 0.032897204), (0.99421346, -0.082501486, 0.06879832), (0.9934919, -0.081464194, 0.07960724), (0.9934919, -0.081464194, 0.07960724), (0.0000029506307, -0.9854916, -0.16972406), (0.0000023550765, -0.9854917, -0.1697235), (0.0000023550765, -0.9854917, -0.1697235), (0.0000029506307, -0.98549163, -0.16972408), (1.7508864e-7, 0.946186, -0.3236232), (0.0000040692976, 0.9461853, -0.3236254), (-0.0000030893893, 0.86773115, -0.49703375), (-0.0000030893896, 0.8677312, -0.4970338), (0.0000019941924, -0.8610037, 0.5085987), (0.0000019941926, -0.86100376, 0.50859874), (0.0000056645895, -0.98415154, 0.1773296), (0.0000021714748, -0.9841515, 0.17732981), (-0.0000034326479, 0.988268, 0.15272999), (-0.0000034326479, 0.988268, 0.15272999), (-0.0000034326479, 0.988268, 0.15272999), (-0.0000034326479, 0.988268, 0.15272999), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 1.4308532e-8, 0), (-1, -0.0000019826396, 9.4744064e-7), (-1, -0.0000019970898, -1.5414797e-7), (-1, 0, 0), (-1, 1.4308532e-8, 0), (1, 0.0000019594158, 1.515649e-7), (1, 0.0000017682074, 1.3677453e-7), (1, 0.0000027952826, 3.166954e-7), (1, 0.0000020357154, 2.382555e-7), (1, -1.4248226e-7, 0), (1, -7.124114e-8, 0), (1, -1.9088094e-7, 0), (1, -2.8496453e-7, 0), (1, -2.8496453e-7, 0), (1, -7.124114e-8, 0), (1, -1.4248226e-7, 0), (1, 0.0000019594158, 1.515649e-7), (1, 0.0000020357154, 2.382555e-7), (-1, -0.000001802205, -1.3910552e-7), (-1, -0.0000019970898, -1.5414797e-7), (-1, -0.0000019826396, 9.4744064e-7), (-1, -0.0000027521357, 0.0000011575723), (0.029587382, 0.058682084, -0.9978382), (-0.029585797, 0.058680106, -0.9978383), (-1.4180255e-8, 0, -1), (-1.4180255e-8, 0, -1), (-1, -0.000001802205, -1.3910552e-7), (-1, -0.0000027521357, 0.0000011575723), (-1, 0, 0), (-1, 0, 0), (-4.6007966e-9, 0, 1), (-4.6007966e-9, 0, 1), (-4.6007966e-9, 0, 1), (-4.6007966e-9, 0, 1), (1, 0.0000027952826, 3.166954e-7), (1, 0.0000017682074, 1.3677453e-7), (1, 0, 0), (1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.000957, 0.030103, -1.040654), (0.000948, 0.030103, -1.040654), (0.000957, 0.030112, -1.040654), (0.000948, 0.030112, -1.040654), (0.000957, 0.030103, -1.040654), (0.000948, 0.030103, -1.040654), (0.000957, 0.030112, -1.040654), (0.000948, 0.030112, -1.040654), (0.000957, 0.030103, -1.040654), (0.000948, 0.030103, -1.040654), (0.000957, 0.030112, -1.040654), (0.000948, 0.030112, -1.040654), (0.000957, 0.030103, -1.040654), (0.000948, 0.030103, -1.040654), (0.000957, 0.030112, -1.040654), (0.000948, 0.030112, -1.040654), (0.000957, 0.030103, -1.040654), (0.000948, 0.030103, -1.040654), (0.000957, 0.030112, -1.040654), (0.000948, 0.030112, -1.040654), (0.000957, 0.030103, -1.040654), (0.000948, 0.030103, -1.040654), (0.000957, 0.030112, -1.040654), (0.000948, 0.030112, -1.040654), (0.000957, 0.030103, -1.040654), (0.000948, 0.030103, -1.040654), (0.000957, 0.030112, -1.040654), (0.000948, 0.030112, -1.040654), (-0.027587, 0.14668, 0.110231), (-0.458975, 0.146679, 0.110231), (-0.027587, 0.077098, -0.007564), (-0.027587, 0.072147, -0.010529), (-0.458975, 0.072145, -0.010529), (-0.458975, 0.077097, -0.007564), (-0.027587, 0.14668, 0.118311), (-0.027587, 0.077098, 0.118311), (-0.027587, 0.072147, 0.118311), (-0.027586, -0.180427, 0.118311), (-0.458975, 0.077097, 0.118311), (-0.458975, 0.146679, 0.118311), (-0.458975, 0.072145, 0.118311), (-0.458974, -0.180428, 0.118311), (-0.458974, -0.143564, -0.010529), (-0.458974, -0.164016, 0.012105), (-0.027586, -0.164015, 0.012105), (-0.027587, -0.143563, -0.010529), (-0.027586, -0.162458, 0.003444), (-0.458974, -0.16246, 0.003444), (-0.027586, -0.158025, -0.003899), (-0.458974, -0.158026, -0.003899), (-0.027587, -0.15139, -0.008806), (-0.458974, -0.151391, -0.008806), (-0.032275, 0.138313, 0.11299), (-0.454288, 0.138312, 0.11299), (-0.451699, 0.072456, -0.001982), (-0.034863, 0.072457, -0.001982), (-0.454442, -0.155356, 0.013878), (-0.451809, -0.173565, 0.11961), (-0.034752, -0.173564, 0.11961), (-0.032119, -0.155354, 0.013878), (-0.451699, 0.070463, -0.003175), (-0.034863, 0.070464, -0.003175), (-0.037721, 0.077098, 0.118311), (-0.034753, 0.139717, 0.118311), (-0.037721, 0.072147, 0.118311), (-0.454371, -0.154354, 0.007159), (-0.454371, -0.151823, 0.002966), (-0.454371, -0.148034, 0.000164), (-0.454425, -0.142702, -0.000838), (-0.448841, 0.072145, 0.118311), (-0.45181, 0.139716, 0.118311), (-0.448841, 0.077097, 0.118311), (-0.032136, -0.142701, -0.000838), (-0.032189, -0.148032, 0.000164), (-0.032189, -0.151821, 0.002966), (-0.032189, -0.154353, 0.007159), (-0.037141, 0.071805, 0.093661), (-0.034106, -0.169095, 0.093661), (-0.449421, 0.071804, 0.093661), (-0.449427, 0.076146, 0.093661), (-0.453852, 0.12724, 0.093661), (-0.452455, -0.169096, 0.093661), (-0.037135, 0.076147, 0.093661), (-0.03271, 0.127242, 0.093661), (-0.027587, 0.136892, 0.093661), (-0.458975, 0.136891, 0.093661), (-0.458974, -0.176619, 0.093661), (-0.027586, -0.176618, 0.093661), (-0.027587, 0.077098, 0.093661), (-0.027587, 0.072147, 0.093661), (-0.458975, 0.072145, 0.093661), (-0.458975, 0.077097, 0.093661), (-0.027586, -0.194314, 0.118311), (-0.458974, -0.194316, 0.118311), (-0.458974, -0.190506, 0.093661), (-0.027586, -0.190505, 0.093661)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-169.52118, -113.841446), (-169.52118, -113.84153), (-169.5211, -113.84153), (-169.5211, -113.841446), (-170.1911, 0.694089), (-170.1911, -0.60355), (-170.17474, -0.59593), (-170.17474, 0.686468), (-171.11833, 0.658713), (-171.13826, 0.679502), (-171.13826, -0.572091), (-171.11833, -0.551302), (-170.2094, 0.658713), (-170.18918, 0.679502), (-170.3911, 0.679502), (-170.3911, 0.650101), (-170.3911, 0.650101), (-170.3911, 0.679502), (-170.40546, 0.679502), (-170.40546, 0.650101), (-171.11833, -0.551302), (-171.13826, -0.572091), (-170.40546, -0.572091), (-170.40546, -0.54269), (-170.3911, -0.54269), (-170.3911, -0.572091), (-170.18918, -0.572091), (-170.2094, -0.551302), (-170.40546, -0.54269), (-170.40546, -0.572091), (-170.3911, -0.572091), (-170.3911, -0.54269), (-170.40546, 0.650101), (-170.40546, 0.679502), (-171.13826, 0.679502), (-171.11833, 0.658713), (-170.2094, -0.551302), (-170.18918, -0.572091), (-170.18918, 0.679502), (-170.2094, 0.658713), (-170.3597, 0.711396), (-170.38432, 0.711396), (-170.38432, -0.603984), (-170.3597, -0.603984), (-169.96524, 0.401348), (-170.04045, 0.388397), (-170.04045, -0.309706), (-169.96902, -0.310695), (-169.91367, 0.219945), (-169.98509, 0.217188), (-169.98509, 0.204604), (-169.91367, 0.205593), (-169.91367, 0.219945), (-169.91367, 0.40145), (-169.92908, 0.39738), (-169.98509, 0.365288), (-169.98509, 0.217188), (-169.9099, -0.50661), (-169.91367, 0.205593), (-169.98509, 0.204604), (-169.98509, -0.493657), (-169.96902, -0.325044), (-169.96902, -0.310695), (-170.04045, -0.309706), (-170.04045, -0.322288), (-169.96902, -0.325044), (-170.04045, -0.322288), (-170.04045, -0.470355), (-169.98442, -0.502439), (-169.96902, -0.506508), (-170.12253, 0.652314), (-170.19821, 0.650428), (-170.19821, -0.566485), (-170.12253, -0.56837), (-170.1911, -0.60355), (-170.1911, 0.694089), (-170.25052, 0.692751), (-170.25052, -0.602212), (-170.30917, -0.603984), (-170.30917, 0.711396), (-170.3597, 0.711396), (-170.3597, -0.603984), (-170.33157, 0.68201), (-170.33157, -0.574598), (-170.25974, -0.574598), (-170.25974, 0.68201), (-170.07051, 0.264661), (-170.07051, 0.466207), (-170.0939, 0.466207), (-170.14189, 0.437854), (-170.14189, 0.264661), (-170.14189, 0.250319), (-170.07051, 0.250319), (-170.07051, 0.264661), (-170.14189, 0.264661), (-170.01941, -0.305582), (-170.01941, 0.425954), (-170.0908, 0.414922), (-170.0908, -0.305582), (-170.01941, -0.319923), (-170.0908, -0.319923), (-170.0908, -0.493105), (-170.04282, -0.521456), (-170.01941, -0.521456), (-170.0908, -0.319923), (-170.01941, -0.319923), (-170.01941, -0.305582), (-170.0908, -0.305582), (-170.07051, -0.481263), (-170.07051, 0.250319), (-170.14189, 0.250319), (-170.14189, -0.47023), (-171.13826, -0.572091), (-171.13826, 0.679502), (-171.17854, 0.679502), (-171.17854, -0.572091), (-170.07051, -0.481263), (-170.14189, -0.47023), (-170.14189, -0.510453), (-170.07051, -0.521487), (-170.27437, 0.678222), (-170.27437, -0.57081), (-170.23413, -0.57081), (-170.23413, 0.678222), (-170.0908, 0.414922), (-170.01941, 0.425954), (-170.01941, 0.466176), (-170.0908, 0.455143)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer4C2_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer4C2_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.36764705, 0.36764705, 0.36764705)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer4C2_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Copper_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer4C2_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

