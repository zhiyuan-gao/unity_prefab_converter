#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "FridgeDrawer2_14_FridgeDrawer2C2_2_GeomSubset_5"
    {
        def Mesh "FridgeDrawer2_14_FridgeDrawer2C2_2_GeomSubset_5"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4]
            int[] faceVertexIndices = [20, 21, 23, 22]
            rel material:binding = </root/_materials/M_FridgeDrawer2C2_5>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.000957, 0.030103, -1.040654), (0.000948, 0.030103, -1.040654), (0.000957, 0.030112, -1.040654), (0.000948, 0.030112, -1.040654), (0.000957, 0.030103, -1.040654), (0.000948, 0.030103, -1.040654), (0.000957, 0.030112, -1.040654), (0.000948, 0.030112, -1.040654), (0.000957, 0.030103, -1.040654), (0.000948, 0.030103, -1.040654), (0.000957, 0.030112, -1.040654), (0.000948, 0.030112, -1.040654), (0.000957, 0.030103, -1.040654), (0.000948, 0.030103, -1.040654), (0.000957, 0.030112, -1.040654), (0.000948, 0.030112, -1.040654), (0.000957, 0.030103, -1.040654), (0.000948, 0.030103, -1.040654), (0.000957, 0.030112, -1.040654), (0.000948, 0.030112, -1.040654), (0.000957, 0.030103, -1.040654), (0.000948, 0.030103, -1.040654), (0.000957, 0.030112, -1.040654), (0.000948, 0.030112, -1.040654), (0.000957, 0.030103, -1.040654), (0.000948, 0.030103, -1.040654), (0.000957, 0.030112, -1.040654), (0.000948, 0.030112, -1.040654), (-0.027587, 0.14668, 0.283476), (-0.458975, 0.146679, 0.283476), (-0.027587, 0.077098, 0.165681), (-0.027587, 0.072147, 0.162717), (-0.458975, 0.072145, 0.162717), (-0.458975, 0.077097, 0.165681), (-0.027587, 0.14668, 0.291556), (-0.027587, 0.077098, 0.291556), (-0.027587, 0.072147, 0.291556), (-0.027586, -0.180427, 0.291556), (-0.458975, 0.077097, 0.291556), (-0.458975, 0.146679, 0.291556), (-0.458975, 0.072145, 0.291556), (-0.458974, -0.180428, 0.291556), (-0.458974, -0.143564, 0.162717), (-0.458974, -0.164016, 0.185349), (-0.027586, -0.164015, 0.18535), (-0.027587, -0.143563, 0.162717), (-0.027586, -0.162458, 0.176689), (-0.458974, -0.16246, 0.176689), (-0.027586, -0.158025, 0.169346), (-0.458974, -0.158026, 0.169346), (-0.027587, -0.15139, 0.164439), (-0.458974, -0.151391, 0.164439), (-0.032275, 0.138313, 0.286234), (-0.454288, 0.138312, 0.286234), (-0.451699, 0.072456, 0.171263), (-0.034863, 0.072457, 0.171263), (-0.454442, -0.155356, 0.187123), (-0.451809, -0.173565, 0.292855), (-0.034752, -0.173564, 0.292855), (-0.032119, -0.155354, 0.187123), (-0.451699, 0.070463, 0.17007), (-0.034863, 0.070464, 0.17007), (-0.037721, 0.077098, 0.291556), (-0.034753, 0.139717, 0.291556), (-0.037721, 0.072147, 0.291556), (-0.454371, -0.154355, 0.180404), (-0.454371, -0.151823, 0.176211), (-0.454371, -0.148034, 0.173409), (-0.454425, -0.142702, 0.172407), (-0.448841, 0.072145, 0.291556), (-0.45181, 0.139716, 0.291556), (-0.448841, 0.077097, 0.291556), (-0.032136, -0.142701, 0.172407), (-0.032189, -0.148032, 0.173409), (-0.032189, -0.151821, 0.176211), (-0.032189, -0.154353, 0.180404), (-0.037141, 0.071805, 0.266906), (-0.034106, -0.169095, 0.266906), (-0.449421, 0.071804, 0.266906), (-0.449427, 0.076146, 0.266906), (-0.453852, 0.12724, 0.266906), (-0.452455, -0.169096, 0.266906), (-0.037135, 0.076147, 0.266906), (-0.03271, 0.127241, 0.266906), (-0.027587, 0.136892, 0.266906), (-0.458975, 0.136891, 0.266906), (-0.458974, -0.176619, 0.266906), (-0.027586, -0.176618, 0.266906), (-0.027587, 0.077098, 0.266906), (-0.027587, 0.072147, 0.266906), (-0.458975, 0.072145, 0.266906), (-0.458975, 0.077097, 0.266906), (-0.027586, -0.194314, 0.291556), (-0.458974, -0.194316, 0.291556), (-0.458974, -0.190506, 0.266906), (-0.027586, -0.190505, 0.266906)]
            bool[] primvars:sharp_face = [0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(5.646933, -121.22408), (7.358486, -121.22408), (7.358486, -119.51253), (5.646933, -119.51253)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer2C2_5"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2C2_5/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer2C2_5/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2C2_5/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Decal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2C2_5/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Decal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2C2_5/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

