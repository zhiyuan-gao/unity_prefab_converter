#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "FridgeDrawer1_14_FridgeDrawer1C2_1_GeomSubset_0"
    {
        def Mesh "FridgeDrawer1_14_FridgeDrawer1C2_1_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 52, 53, 70, 63, 58, 37, 41, 57, 63, 34, 35, 62, 62, 35, 36, 64, 57, 41, 40, 69, 71, 38, 39, 70, 69, 40, 38, 71, 64, 36, 37, 58, 70, 39, 34, 63, 28, 34, 39, 29, 58, 77, 76, 64, 71, 79, 78, 69, 71, 70, 53, 80, 79, 57, 69, 78, 81, 62, 64, 76, 82, 62, 82, 83, 52, 63, 77, 58, 57, 81, 53, 52, 83, 80, 85, 84, 28, 29, 95, 94, 93, 92, 35, 34, 28, 84, 88, 89, 36, 35, 88, 40, 41, 86, 90, 38, 91, 85, 29, 39, 91, 38, 40, 90, 37, 36, 89, 87, 41, 37, 92, 93, 37, 87, 95, 92, 87, 86, 94, 95, 86, 41, 93, 94]
            rel material:binding = </root/_materials/M_FridgeDrawer1C2_0>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.00000424881, -0.8869626, 0.46184114), (-0.0000023841858, -0.8869607, 0.46184507), (-0.0000034726959, -0.9668972, 0.2551664), (-0.0000034726959, -0.9668972, 0.2551664), (-0.031993486, -0.10751765, 0.9936883), (-0.010002482, -0.03130379, 0.99945986), (0.010003343, -0.03130342, 0.99945986), (0.031991873, -0.10751737, 0.9936883), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.07436762, 0.0029965, 0.9972263), (-0.07440214, 0.0029996256, 0.99722373), (0.031991873, -0.10751737, 0.9936883), (0.010003343, -0.03130342, 0.99945986), (0.07436927, 0.002996122, 0.99722624), (0.074403875, 0.0029995737, 0.99722356), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0.074403875, 0.0029995737, 0.99722356), (0.07436927, 0.002996122, 0.99722624), (0, 0, 1), (0, 0, 1), (-0.07440214, 0.0029996256, 0.99722373), (-0.07436762, 0.0029965, 0.9972263), (-0.010002482, -0.03130379, 0.99945986), (-0.031993486, -0.10751765, 0.9936883), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.00004034193, 0.9294374, -0.36897996), (0.0000023143402, 1, 0), (0.0000023143402, 1, 0), (0.000002293684, 0.9294373, -0.36898017), (0.99960464, -0.012400863, -0.025232581), (0.99961996, -0.012918164, -0.024352824), (0.9996276, -0.012800307, -0.024101336), (0.99960935, -0.0120854275, -0.025198458), (-0.99426347, 0.0756783, -0.07558444), (-0.9960811, 0.076897055, -0.04369564), (-0.9996252, -0.012796448, -0.024200803), (-0.99960953, -0.012077417, -0.025197016), (-0.99426347, 0.0756783, -0.07558444), (-0.99348867, 0.08147828, -0.07963474), (-0.99348867, 0.08147828, -0.07963474), (-0.9949622, 0.083698615, -0.05517848), (-0.9960811, 0.076897055, -0.04369564), (-0.99960476, -0.012396776, -0.025231255), (-0.99960953, -0.012077417, -0.025197016), (-0.9996252, -0.012796448, -0.024200803), (-0.9996224, -0.013165336, -0.02411644), (0.99426466, 0.07566832, -0.07557848), (0.99960935, -0.0120854275, -0.025198458), (0.9996276, -0.012800307, -0.024101336), (0.9960818, 0.076887235, -0.04369575), (0.99426466, 0.07566832, -0.07557848), (0.9960818, 0.076887235, -0.04369575), (0.9949553, 0.083695106, -0.055309772), (0.99349064, 0.08147221, -0.07961479), (0.99349064, 0.08147221, -0.07961479), (0.000004104123, 0.98549163, 0.16972403), (0.000004710152, 0.98549175, 0.16972299), (0.000004710152, 0.98549175, 0.16972299), (0.000004104124, 0.98549163, 0.16972405), (-0.0000023841858, -0.8869607, 0.46184507), (-0.00000424881, -0.8869626, 0.46184114), (-0.0000025950271, -0.8677244, 0.4970455), (-0.000002595021, -0.8677245, 0.4970455), (0.0000024906378, 0.86099315, -0.5086166), (0.000002490637, 0.86099315, -0.5086166), (-0.00004034193, 0.9294374, -0.36897996), (0.000002293684, 0.9294373, -0.36898017), (-0.0000022870397, -0.9882709, -0.152711), (-0.0000022870397, -0.9882709, -0.152711), (-0.0000022870397, -0.9882709, -0.152711), (-0.0000022870397, -0.9882709, -0.152711), (-1, -1.4248278e-7, 0), (-1, -2.8496555e-7, 0), (-1, -2.8496555e-7, 0), (-1, -1.908825e-7, 0), (-1, -9.868072e-7, 0), (-1, 0.0000011067696, 2.3825609e-7), (-1, 0.0000019594083, 1.5156432e-7), (-1, -1.4248278e-7, 0), (-1, -9.868072e-7, 0), (1, -0.0000019970896, -1.5414794e-7), (1, -0.0000018022046, -1.391055e-7), (1, -0.0000028074116, -3.2209442e-7), (1, -0.0000019269248, -2.4231724e-7), (1, 8.905056e-9, 0), (1, 1.18921335e-7, 0), (1, 1.1930027e-8, 0), (0.99999994, 1.781011e-8, 0), (0.99999994, 1.781011e-8, 0), (1, 1.18921335e-7, 0), (1, 8.905056e-9, 0), (1, -0.0000019970896, -1.5414794e-7), (1, -0.0000019269248, -2.4231724e-7), (-1, 0.0000017682006, 1.36774e-7), (-1, 0.0000019594083, 1.5156432e-7), (-1, 0.0000011067696, 2.3825609e-7), (-1, 0.0000027786414, 3.166961e-7), (0.010003343, -0.03130342, 0.99945986), (-0.010002482, -0.03130379, 0.99945986), (7.467566e-9, 0, 1), (7.467566e-9, 0, 1), (-1, 0.0000017682006, 1.36774e-7), (-1, 0.0000027786414, 3.166961e-7), (-1, 0, 0), (-1, 0, 0), (-1.915758e-8, 0, -1), (-1.915758e-8, 0, -1), (-1.915758e-8, 0, -1), (-1.915758e-8, 0, -1), (1, -0.0000028074116, -3.2209442e-7), (1, -0.0000018022046, -1.391055e-7), (1, 0, 0), (1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.000957, 0.030103, -1.040654), (-0.000948, 0.030103, -1.040654), (-0.000957, 0.030112, -1.040654), (-0.000948, 0.030112, -1.040654), (-0.000957, 0.030103, -1.040654), (-0.000948, 0.030103, -1.040654), (-0.000957, 0.030112, -1.040654), (-0.000948, 0.030112, -1.040654), (-0.000957, 0.030103, -1.040654), (-0.000948, 0.030103, -1.040654), (-0.000957, 0.030112, -1.040654), (-0.000948, 0.030112, -1.040654), (-0.000957, 0.030103, -1.040654), (-0.000948, 0.030103, -1.040654), (-0.000957, 0.030112, -1.040654), (-0.000948, 0.030112, -1.040654), (-0.000957, 0.030103, -1.040654), (-0.000948, 0.030103, -1.040654), (-0.000957, 0.030112, -1.040654), (-0.000948, 0.030112, -1.040654), (-0.000957, 0.030103, -1.040654), (-0.000948, 0.030103, -1.040654), (-0.000957, 0.030112, -1.040654), (-0.000948, 0.030112, -1.040654), (-0.000957, 0.030103, -1.040654), (-0.000948, 0.030103, -1.040654), (-0.000957, 0.030112, -1.040654), (-0.000948, 0.030112, -1.040654), (-0.460904, 0.146682, 0.283476), (-0.029516, 0.146681, 0.283476), (-0.460904, 0.0771, 0.165681), (-0.460904, 0.072148, 0.162717), (-0.029516, 0.072147, 0.162717), (-0.029516, 0.077098, 0.165681), (-0.460904, 0.146682, 0.291556), (-0.460904, 0.0771, 0.291556), (-0.460904, 0.072148, 0.291556), (-0.460905, -0.180426, 0.291556), (-0.029516, 0.077098, 0.291556), (-0.029516, 0.146681, 0.291556), (-0.029516, 0.072147, 0.291556), (-0.029517, -0.180427, 0.291556), (-0.029517, -0.143563, 0.162717), (-0.029517, -0.164015, 0.185349), (-0.460905, -0.164014, 0.18535), (-0.460905, -0.143562, 0.162717), (-0.460905, -0.162457, 0.176689), (-0.029517, -0.162458, 0.176689), (-0.460905, -0.158023, 0.169346), (-0.029517, -0.158025, 0.169346), (-0.460905, -0.151388, 0.164439), (-0.029517, -0.15139, 0.164439), (-0.456217, 0.138315, 0.286234), (-0.034203, 0.138313, 0.286234), (-0.036792, 0.072457, 0.171263), (-0.453628, 0.072458, 0.171263), (-0.034049, -0.155354, 0.187123), (-0.036682, -0.173564, 0.292855), (-0.453739, -0.173562, 0.292855), (-0.456372, -0.155353, 0.187123), (-0.036792, 0.070465, 0.17007), (-0.453628, 0.070466, 0.17007), (-0.45077, 0.0771, 0.291556), (-0.453738, 0.139719, 0.291556), (-0.45077, 0.072148, 0.291556), (-0.034119, -0.154353, 0.180404), (-0.034119, -0.151821, 0.176211), (-0.034119, -0.148032, 0.173409), (-0.034066, -0.1427, 0.172407), (-0.03965, 0.072147, 0.291556), (-0.036682, 0.139718, 0.291556), (-0.03965, 0.077098, 0.291556), (-0.456355, -0.142699, 0.172407), (-0.456302, -0.148031, 0.173409), (-0.456302, -0.15182, 0.176211), (-0.456302, -0.154352, 0.180404), (-0.45135, 0.071807, 0.266906), (-0.454385, -0.169093, 0.266906), (-0.03907, 0.071805, 0.266906), (-0.039064, 0.076147, 0.266906), (-0.034638, 0.127242, 0.266906), (-0.036036, -0.169095, 0.266906), (-0.451356, 0.076148, 0.266906), (-0.455781, 0.127243, 0.266906), (-0.460904, 0.136893, 0.266906), (-0.029516, 0.136892, 0.266906), (-0.029517, -0.176618, 0.266906), (-0.460905, -0.176617, 0.266906), (-0.460904, 0.0771, 0.266906), (-0.460904, 0.072148, 0.266906), (-0.029516, 0.072147, 0.266906), (-0.029516, 0.077098, 0.266906), (-0.460905, -0.194313, 0.291556), (-0.029517, -0.194314, 0.291556), (-0.029517, -0.190505, 0.266906), (-0.460905, -0.190504, 0.266906)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-169.52118, -113.841446), (-169.52118, -113.84153), (-169.5211, -113.84153), (-169.5211, -113.841446), (-170.1911, 0.694098), (-170.1911, -0.603559), (-170.17474, -0.595938), (-170.17474, 0.686477), (-171.11841, 0.658819), (-171.13832, 0.679612), (-171.13832, -0.5722), (-171.11841, -0.551407), (-170.20929, 0.658819), (-170.18912, 0.679612), (-170.39102, 0.679612), (-170.39102, 0.650206), (-170.39102, 0.650206), (-170.39102, 0.679612), (-170.4054, 0.679612), (-170.4054, 0.650206), (-171.11841, -0.551407), (-171.13832, -0.5722), (-170.4054, -0.5722), (-170.4054, -0.542794), (-170.39102, -0.542794), (-170.39102, -0.5722), (-170.18912, -0.5722), (-170.20929, -0.551407), (-170.4054, -0.542794), (-170.4054, -0.5722), (-170.39102, -0.5722), (-170.39102, -0.542794), (-170.4054, 0.650206), (-170.4054, 0.679612), (-171.13832, 0.679612), (-171.11841, 0.658819), (-170.20929, -0.551407), (-170.18912, -0.5722), (-170.18912, 0.679612), (-170.20929, 0.658819), (-170.3597, 0.71141), (-170.38432, 0.71141), (-170.38432, -0.603999), (-170.3597, -0.603999), (-169.96524, 0.401328), (-170.04047, 0.388377), (-170.04047, -0.309695), (-169.969, -0.310684), (-169.91367, 0.219961), (-169.98509, 0.217204), (-169.98509, 0.204619), (-169.91367, 0.205608), (-169.91367, 0.219961), (-169.91367, 0.401477), (-169.92908, 0.397406), (-169.98509, 0.365313), (-169.98509, 0.217204), (-169.9099, -0.506637), (-169.91367, 0.205608), (-169.98509, 0.204619), (-169.98509, -0.493683), (-169.969, -0.325032), (-169.969, -0.310684), (-170.04047, -0.309695), (-170.04047, -0.322276), (-169.969, -0.325032), (-170.04047, -0.322276), (-170.04047, -0.470337), (-169.98442, -0.502419), (-169.969, -0.506488), (-170.12253, 0.6523), (-170.19821, 0.650415), (-170.19821, -0.56647), (-170.12253, -0.568356), (-170.1911, -0.603559), (-170.1911, 0.694098), (-170.25052, 0.69276), (-170.25052, -0.602221), (-170.30917, -0.603999), (-170.30917, 0.71141), (-170.3597, 0.71141), (-170.3597, -0.603999), (-170.33157, 0.682057), (-170.33157, -0.574646), (-170.25977, -0.574646), (-170.25977, 0.682057), (-170.07051, 0.264687), (-170.07051, 0.466251), (-170.0939, 0.466251), (-170.14188, 0.437897), (-170.14188, 0.264687), (-170.14188, 0.250344), (-170.07051, 0.250344), (-170.07051, 0.264687), (-170.14188, 0.264687), (-170.01941, -0.305574), (-170.01941, 0.42594), (-170.09082, 0.414908), (-170.09082, -0.305574), (-170.01941, -0.319915), (-170.09082, -0.319915), (-170.09082, -0.493092), (-170.04282, -0.521442), (-170.01941, -0.521442), (-170.09082, -0.319915), (-170.01941, -0.319915), (-170.01941, -0.305574), (-170.09082, -0.305574), (-170.07051, -0.481304), (-170.07051, 0.250344), (-170.14188, 0.250344), (-170.14188, -0.47027), (-171.13832, -0.5722), (-171.13832, 0.679612), (-171.17863, 0.679612), (-171.17863, -0.5722), (-170.07051, -0.481304), (-170.14188, -0.47027), (-170.14188, -0.510497), (-170.07051, -0.521532), (-170.27437, 0.678331), (-170.27437, -0.570919), (-170.23413, -0.570919), (-170.23413, 0.678331), (-170.09082, 0.414908), (-170.01941, 0.42594), (-170.01941, 0.466161), (-170.09082, 0.455128)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer1C2_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1C2_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.36764705, 0.36764705, 0.36764705)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1C2_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Copper_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1C2_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

