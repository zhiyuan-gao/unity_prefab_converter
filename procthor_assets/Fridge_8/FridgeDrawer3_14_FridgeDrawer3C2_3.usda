#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.0"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "FridgeDrawer3C2"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "FridgeDrawer3C2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.460905, -0.194314, -1.040654), (-0.000948, 0.146682, 0.11961)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 8, 4, 3, 8, 4, 3, 4, 4, 4, 4, 3, 4, 8, 3, 4, 8, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 52, 53, 70, 63, 58, 37, 41, 57, 63, 34, 35, 62, 62, 35, 36, 64, 57, 41, 40, 69, 71, 38, 39, 70, 69, 40, 38, 71, 64, 36, 37, 58, 70, 39, 34, 63, 28, 34, 39, 29, 58, 77, 76, 64, 71, 79, 78, 69, 71, 70, 53, 80, 79, 57, 69, 78, 81, 62, 64, 76, 82, 62, 82, 83, 52, 63, 77, 58, 57, 81, 53, 52, 83, 80, 85, 84, 28, 29, 95, 94, 93, 92, 35, 34, 28, 84, 88, 89, 36, 35, 88, 40, 41, 86, 90, 38, 91, 85, 29, 39, 91, 38, 40, 90, 37, 36, 89, 87, 41, 37, 92, 93, 37, 87, 95, 92, 87, 86, 94, 95, 86, 41, 93, 94, 4, 5, 7, 6, 8, 9, 11, 10, 12, 13, 15, 14, 16, 17, 19, 18, 67, 68, 72, 73, 66, 67, 73, 74, 65, 66, 74, 75, 56, 65, 75, 59, 61, 72, 68, 60, 54, 55, 61, 60, 33, 32, 31, 30, 31, 32, 42, 45, 43, 44, 46, 47, 47, 46, 48, 49, 49, 48, 50, 51, 51, 50, 45, 42, 76, 77, 59, 75, 74, 73, 72, 61, 78, 79, 54, 60, 79, 80, 54, 78, 60, 68, 67, 66, 65, 56, 81, 76, 61, 55, 82, 82, 55, 83, 56, 59, 77, 81, 80, 83, 55, 54, 85, 33, 30, 84, 87, 44, 43, 86, 88, 84, 30, 89, 88, 30, 31, 90, 86, 43, 47, 49, 51, 42, 32, 85, 91, 33, 90, 32, 33, 91, 89, 31, 45, 50, 48, 46, 44, 87, 20, 21, 23, 22, 24, 25, 27, 26]
            rel material:binding = </root/_materials/M_FridgeDrawer3C2_0>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1.8952414e-7, -0.8869573, 0.4618516), (0.000001359731, -0.8869551, 0.46185547), (-0.0000034670495, -0.9668852, 0.25521147), (-0.0000034670495, -0.9668852, 0.25521147), (-0.03199355, -0.10751765, 0.9936883), (-0.010002523, -0.03130379, 0.99945986), (0.010003353, -0.03130342, 0.99945986), (0.031991903, -0.10751737, 0.9936883), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.07436772, 0.0029965, 0.9972263), (-0.07440223, 0.0029996256, 0.99722373), (0.031991903, -0.10751737, 0.9936883), (0.010003353, -0.03130342, 0.99945986), (0.07436927, 0.002996122, 0.99722624), (0.074403875, 0.0029995737, 0.99722356), (-5.0579157e-8, 0, 1), (-5.1364708e-8, 0, 1), (-5.2304102e-8, 0, 1), (-5.156577e-8, 0, 1), (0.074403875, 0.0029995737, 0.99722356), (0.07436927, 0.002996122, 0.99722624), (-5.1364708e-8, 0, 1), (-5.0579157e-8, 0, 1), (-0.07440223, 0.0029996256, 0.99722373), (-0.07436772, 0.0029965, 0.9972263), (-0.010002523, -0.03130379, 0.99945986), (-0.03199355, -0.10751765, 0.9936883), (-5.156577e-8, 0, 1), (-5.2304102e-8, 0, 1), (0, 0, 1), (0, 0, 1), (-0.0000020938598, 0.9294372, -0.36898005), (0.0000023143382, 1, 0), (0.0000023143382, 1, 0), (0.0000022881075, 0.92943716, -0.36898023), (0.9996047, -0.012400867, -0.02523259), (0.99961996, -0.012918143, -0.024352832), (0.9996276, -0.01279828, -0.024101336), (0.99960953, -0.01208141, -0.025197862), (-0.9942634, 0.075678915, -0.07558444), (-0.9960811, 0.07689709, -0.04369571), (-0.9996252, -0.012796657, -0.024200814), (-0.99960953, -0.012077417, -0.025197035), (-0.9942634, 0.075678915, -0.07558444), (-0.9934885, 0.08147926, -0.07963502), (-0.9934885, 0.08147926, -0.07963502), (-0.9949547, 0.08369404, -0.05532214), (-0.9960811, 0.07689709, -0.04369571), (-0.9996048, -0.012396778, -0.02523128), (-0.99960953, -0.012077417, -0.025197035), (-0.9996252, -0.012796657, -0.024200814), (-0.9996214, -0.013106632, -0.024192255), (0.9942642, 0.075670496, -0.07558188), (0.99960953, -0.01208141, -0.025197862), (0.9996276, -0.01279828, -0.024101336), (0.99608165, 0.076889515, -0.043695834), (0.9942642, 0.075670496, -0.07558188), (0.99608165, 0.076889515, -0.043695834), (0.99496055, 0.083695196, -0.0552138), (0.9934906, 0.08147309, -0.07961517), (0.9934906, 0.08147309, -0.07961517), (0.000004100653, 0.98549163, 0.16972405), (0.0000047101535, 0.98549175, 0.16972303), (0.0000047101535, 0.98549175, 0.16972303), (0.0000041006533, 0.98549163, 0.16972405), (0.000001359731, -0.8869551, 0.46185547), (-1.8952414e-7, -0.8869573, 0.4618516), (-0.0000025892928, -0.8677301, 0.49703568), (-0.0000025892864, -0.8677301, 0.49703565), (0.000002496863, 0.86099315, -0.5086167), (0.0000024968624, 0.86099315, -0.5086167), (-0.0000020938598, 0.9294372, -0.36898005), (0.0000022881075, 0.92943716, -0.36898023), (-0.0000022870497, -0.9882708, -0.15271105), (-0.0000022870497, -0.9882708, -0.15271105), (-0.0000022870497, -0.9882708, -0.15271105), (-0.0000022870497, -0.9882708, -0.15271105), (-1, -1.4248303e-7, 0), (-0.99999994, -2.8496603e-7, 0), (-0.99999994, -2.8496603e-7, 0), (-1, -1.9088284e-7, 0), (-1, 5.0098436e-7, 0), (-1, 0.0000025573158, 2.3825467e-7), (-1, 0.000001959409, 1.5156436e-7), (-1, -1.4248303e-7, 0), (-1, 5.0098436e-7, 0), (1, -0.0000019970898, -1.5414797e-7), (1, -0.000001802205, -1.3910552e-7), (1, -0.000002801973, -3.220925e-7), (1, -0.0000020370212, -2.4231582e-7), (1, 8.905052e-9, 0), (1, 4.452526e-9, 0), (1, 1.1930021e-8, 0), (0.99999994, 1.7810102e-8, 0), (0.99999994, 1.7810102e-8, 0), (1, 4.452526e-9, 0), (1, 8.905052e-9, 0), (1, -0.0000019970898, -1.5414797e-7), (1, -0.0000020370212, -2.4231582e-7), (-1, 0.0000017682012, 1.3677403e-7), (-1, 0.000001959409, 1.5156436e-7), (-1, 0.0000025573158, 2.3825467e-7), (-1, 0.0000027323206, 3.166943e-7), (0.010003353, -0.03130342, 0.99945986), (-0.010002523, -0.03130379, 0.99945986), (-7.090392e-9, 0, 1), (-7.090392e-9, 0, 1), (-1, 0.0000017682012, 1.3677403e-7), (-1, 0.0000027323206, 3.166943e-7), (-1, 0, 0), (-1, 0, 0), (-4.600808e-9, 0, -1), (-4.600808e-9, 0, -1), (-4.600808e-9, 0, -1), (-4.600808e-9, 0, -1), (1, -0.000002801973, -3.220925e-7), (1, -0.000001802205, -1.3910552e-7), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-6.6138455e-7, 0.38431495, 0.92320204), (-0.000003796653, 0.015401288, 0.9998815), (0.000814745, 0.015405044, 0.9998811), (9.402378e-7, 0.38431415, 0.9232024), (0.000001747124, 0.7418923, 0.67051905), (-6.6138455e-7, 0.38431495, 0.92320204), (9.402378e-7, 0.38431415, 0.9232024), (6.316213e-8, 0.741892, 0.67051935), (0.0000022095849, 0.9515789, 0.3074044), (0.000001747124, 0.7418923, 0.67051905), (6.316213e-8, 0.741892, 0.67051935), (-9.0140384e-7, 0.9515789, 0.30740458), (7.061317e-8, 0.9857864, 0.16800366), (0.0000022095849, 0.9515789, 0.3074044), (-9.0140384e-7, 0.9515789, 0.30740458), (2.586312e-7, 0.98578626, 0.16800362), (3.5041012e-7, 0.0052393544, 0.99998623), (0.000814745, 0.015405044, 0.9998811), (-0.000003796653, 0.015401288, 0.9998815), (-5.5409305e-7, 0.005239725, 0.99998623), (-0.0000033113174, -0.86268455, 0.50574243), (-0.0000015492595, -0.8626844, 0.50574255), (3.5041012e-7, 0.0052393544, 0.99998623), (-5.5409305e-7, 0.005239725, 0.99998623), (0.0000022866043, 0.8492708, -0.5279574), (-2.536512e-7, 0.013530597, -0.9999084), (0.000010541518, 0.013534948, -0.99990845), (0.0000025486133, 0.8492737, -0.5279529), (0.000010541518, 0.013534948, -0.99990845), (-2.536512e-7, 0.013530597, -0.9999084), (-3.5825926e-7, -0.0077116564, -0.9999703), (8.55546e-8, -0.007711105, -0.9999704), (-0.0000022821512, -0.9879006, -0.15508825), (-0.000002282461, -0.98790056, -0.15508823), (-1.0809117e-7, -0.9365638, -0.3504972), (-0.0000026704288, -0.9365639, -0.35049713), (-0.0000026704288, -0.9365639, -0.35049713), (-1.0809117e-7, -0.9365638, -0.3504972), (3.9896122e-7, -0.7419941, -0.6704065), (-0.000002919803, -0.7419946, -0.6704059), (-0.000002919803, -0.7419946, -0.6704059), (3.9896122e-7, -0.7419941, -0.6704065), (3.6186475e-7, -0.4166604, -0.9090622), (-0.0000017888507, -0.41666144, -0.9090618), (-0.0000017888507, -0.41666144, -0.9090618), (3.6186475e-7, -0.4166604, -0.9090622), (8.55546e-8, -0.007711105, -0.9999704), (-3.5825926e-7, -0.0077116564, -0.9999703), (0.9996276, -0.01279828, -0.024101336), (0.99961996, -0.012918143, -0.024352832), (0.99962664, -0.013203803, -0.023921706), (0.99962664, -0.013203803, -0.023921706), (0.99962664, -0.013203803, -0.023921706), (0.99962664, -0.013203803, -0.023921706), (0.99962664, -0.013203803, -0.023921706), (0.99963015, -0.01297215, -0.023900792), (-0.9996252, -0.012796657, -0.024200814), (-0.9960811, 0.07689709, -0.04369571), (-0.99800354, 0.05760237, -0.025900824), (-0.9996302, -0.012971427, -0.023900596), (-0.9960811, 0.07689709, -0.04369571), (-0.9949547, 0.08369404, -0.05532214), (-0.99800354, 0.05760237, -0.025900824), (-0.9996252, -0.012796657, -0.024200814), (-0.9996302, -0.012971427, -0.023900596), (-0.99962664, -0.013199526, -0.023921328), (-0.99962664, -0.013199526, -0.023921328), (-0.99962664, -0.013199526, -0.023921328), (-0.99962664, -0.013199526, -0.023921328), (-0.99962664, -0.013199526, -0.023921328), (-0.9996214, -0.013106632, -0.024192255), (0.9996276, -0.01279828, -0.024101336), (0.99963015, -0.01297215, -0.023900792), (0.99800354, 0.057602875, -0.025900662), (0.99608165, 0.076889515, -0.043695834), (0.99608165, 0.076889515, -0.043695834), (0.99800354, 0.057602875, -0.025900662), (0.99496055, 0.083695196, -0.0552138), (7.061317e-8, 0.9857864, 0.16800366), (2.586312e-7, 0.98578626, 0.16800362), (0.000004100653, 0.98549163, 0.16972405), (0.0000041006533, 0.98549163, 0.16972405), (-0.0000025892864, -0.8677301, 0.49703565), (-0.0000025892928, -0.8677301, 0.49703568), (-0.0000015492595, -0.8626844, 0.50574255), (-0.0000033113174, -0.86268455, 0.50574243), (0.000002496863, 0.86099315, -0.5086167), (0.0000022866043, 0.8492708, -0.5279574), (0.0000025486133, 0.8492737, -0.5279529), (0.0000024968624, 0.86099315, -0.5086167), (-0.000002285803, -0.9882696, -0.15271942), (-0.000002282461, -0.98790056, -0.15508823), (-0.0000022821512, -0.9879006, -0.15508825), (-0.000002285803, -0.9882696, -0.15271942), (-1, 5.0098436e-7, 0), (-1, -1.9088284e-7, 0), (-1, 0.0000018269837, 0), (-1, 0.0000025573158, 2.3825467e-7), (-1, 5.0098436e-7, 0), (-1, 0.0000018269837, 0), (-1, 0.0000033348438, 3.9231858e-7), (1, -0.0000020370212, -2.4231582e-7), (1, -0.000002801973, -3.220925e-7), (0.99999994, -0.0000041539042, -6.609673e-7), (0.99999994, -0.0000041539042, -6.609673e-7), (0.99999994, -0.0000041539042, -6.609673e-7), (0.99999994, -0.0000041539042, -6.609673e-7), (0.99999994, -0.0000041539042, -6.609673e-7), (1, -0.00000250767, -3.9901926e-7), (1, 1.1930021e-8, 0), (1, 4.452526e-9, 0), (1, 0, 0), (1, -0.0000020370212, -2.4231582e-7), (1, -0.00000250767, -3.9901926e-7), (1, 0, 0), (1, 4.452526e-9, 0), (-1, 0.0000025573158, 2.3825467e-7), (-1, 0.0000033348438, 3.9231858e-7), (-1, 0.000004021542, 6.4988996e-7), (-1, 0.000004021542, 6.4988996e-7), (-1, 0.000004021542, 6.4988996e-7), (-1, 0.000004021542, 6.4988996e-7), (-1, 0.000004021542, 6.4988996e-7), (-1, 0.0000027323206, 3.166943e-7), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.000957, 0.030103, -1.040654), (-0.000948, 0.030103, -1.040654), (-0.000957, 0.030112, -1.040654), (-0.000948, 0.030112, -1.040654), (-0.000957, 0.030103, -1.040654), (-0.000948, 0.030103, -1.040654), (-0.000957, 0.030112, -1.040654), (-0.000948, 0.030112, -1.040654), (-0.000957, 0.030103, -1.040654), (-0.000948, 0.030103, -1.040654), (-0.000957, 0.030112, -1.040654), (-0.000948, 0.030112, -1.040654), (-0.000957, 0.030103, -1.040654), (-0.000948, 0.030103, -1.040654), (-0.000957, 0.030112, -1.040654), (-0.000948, 0.030112, -1.040654), (-0.000957, 0.030103, -1.040654), (-0.000948, 0.030103, -1.040654), (-0.000957, 0.030112, -1.040654), (-0.000948, 0.030112, -1.040654), (-0.000957, 0.030103, -1.040654), (-0.000948, 0.030103, -1.040654), (-0.000957, 0.030112, -1.040654), (-0.000948, 0.030112, -1.040654), (-0.000957, 0.030103, -1.040654), (-0.000948, 0.030103, -1.040654), (-0.000957, 0.030112, -1.040654), (-0.000948, 0.030112, -1.040654), (-0.460904, 0.146682, 0.110231), (-0.029516, 0.146681, 0.110231), (-0.460904, 0.0771, -0.007564), (-0.460904, 0.072148, -0.010529), (-0.029516, 0.072147, -0.010529), (-0.029516, 0.077098, -0.007564), (-0.460904, 0.146682, 0.118311), (-0.460904, 0.0771, 0.118311), (-0.460904, 0.072148, 0.118311), (-0.460905, -0.180426, 0.118311), (-0.029516, 0.077098, 0.118311), (-0.029516, 0.146681, 0.118311), (-0.029516, 0.072147, 0.118311), (-0.029517, -0.180427, 0.118311), (-0.029517, -0.143563, -0.010529), (-0.029517, -0.164015, 0.012105), (-0.460905, -0.164014, 0.012105), (-0.460905, -0.143562, -0.010529), (-0.460905, -0.162457, 0.003444), (-0.029517, -0.162458, 0.003444), (-0.460905, -0.158023, -0.003899), (-0.029517, -0.158025, -0.003899), (-0.460905, -0.151388, -0.008806), (-0.029517, -0.15139, -0.008806), (-0.456217, 0.138315, 0.11299), (-0.034203, 0.138313, 0.11299), (-0.036792, 0.072457, -0.001982), (-0.453628, 0.072458, -0.001982), (-0.034049, -0.155354, 0.013878), (-0.036682, -0.173564, 0.11961), (-0.453739, -0.173562, 0.11961), (-0.456372, -0.155353, 0.013878), (-0.036792, 0.070465, -0.003175), (-0.453628, 0.070466, -0.003175), (-0.45077, 0.0771, 0.118311), (-0.453738, 0.139719, 0.118311), (-0.45077, 0.072148, 0.118311), (-0.034119, -0.154353, 0.007159), (-0.034119, -0.151821, 0.002966), (-0.034119, -0.148032, 0.000165), (-0.034066, -0.1427, -0.000838), (-0.03965, 0.072147, 0.118311), (-0.036682, 0.139718, 0.118311), (-0.03965, 0.077098, 0.118311), (-0.456355, -0.142699, -0.000838), (-0.456302, -0.148031, 0.000165), (-0.456302, -0.15182, 0.002966), (-0.456302, -0.154352, 0.007159), (-0.45135, 0.071807, 0.093661), (-0.454385, -0.169093, 0.093661), (-0.03907, 0.071805, 0.093661), (-0.039064, 0.076147, 0.093661), (-0.034638, 0.127242, 0.093661), (-0.036036, -0.169095, 0.093661), (-0.451356, 0.076148, 0.093661), (-0.455781, 0.127243, 0.093661), (-0.460904, 0.136893, 0.093661), (-0.029516, 0.136892, 0.093661), (-0.029517, -0.176618, 0.093661), (-0.460905, -0.176617, 0.093661), (-0.460904, 0.0771, 0.093661), (-0.460904, 0.072148, 0.093661), (-0.029516, 0.072147, 0.093661), (-0.029516, 0.077098, 0.093661), (-0.460905, -0.194313, 0.118311), (-0.029517, -0.194314, 0.118311), (-0.029517, -0.190505, 0.093661), (-0.460905, -0.190504, 0.093661)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-169.52118, -113.841446), (-169.52118, -113.84153), (-169.5211, -113.84153), (-169.5211, -113.841446), (-170.1911, 0.694115), (-170.1911, -0.603575), (-170.17474, -0.595954), (-170.17474, 0.686494), (-171.11832, 0.658704), (-171.13824, 0.679493), (-171.13824, -0.572082), (-171.11832, -0.551292), (-170.20941, 0.658704), (-170.1892, 0.679493), (-170.3911, 0.679493), (-170.3911, 0.650093), (-170.3911, 0.650093), (-170.3911, 0.679493), (-170.40546, 0.679493), (-170.40546, 0.650093), (-171.11832, -0.551292), (-171.13824, -0.572082), (-170.40546, -0.572082), (-170.40546, -0.542681), (-170.3911, -0.542681), (-170.3911, -0.572082), (-170.1892, -0.572082), (-170.20941, -0.551292), (-170.40546, -0.542681), (-170.40546, -0.572082), (-170.3911, -0.572082), (-170.3911, -0.542681), (-170.40546, 0.650093), (-170.40546, 0.679493), (-171.13824, 0.679493), (-171.11832, 0.658704), (-170.20941, -0.551292), (-170.1892, -0.572082), (-170.1892, 0.679493), (-170.20941, 0.658704), (-170.3597, 0.711396), (-170.38432, 0.711396), (-170.38432, -0.603985), (-170.3597, -0.603985), (-169.96524, 0.40139), (-170.04045, 0.388438), (-170.04045, -0.309731), (-169.96902, -0.31072), (-169.91367, 0.219958), (-169.98509, 0.217201), (-169.98509, 0.204616), (-169.91367, 0.205605), (-169.91367, 0.219958), (-169.91367, 0.401471), (-169.92908, 0.397401), (-169.98509, 0.365308), (-169.98509, 0.217201), (-169.9099, -0.506632), (-169.91367, 0.205605), (-169.98509, 0.204616), (-169.98509, -0.493677), (-169.96902, -0.32507), (-169.96902, -0.31072), (-170.04045, -0.309731), (-170.04045, -0.322314), (-169.96902, -0.32507), (-170.04045, -0.322314), (-170.04045, -0.470394), (-169.98442, -0.502482), (-169.96902, -0.506551), (-170.12253, 0.652368), (-170.19821, 0.650482), (-170.19821, -0.566537), (-170.12253, -0.568423), (-170.1911, -0.603575), (-170.1911, 0.694115), (-170.25052, 0.692776), (-170.25052, -0.602237), (-170.30917, -0.603985), (-170.30917, 0.711396), (-170.3597, 0.711396), (-170.3597, -0.603985), (-170.33157, 0.68201), (-170.33157, -0.574598), (-170.25974, -0.574598), (-170.25974, 0.68201), (-170.07051, 0.264664), (-170.07051, 0.466211), (-170.0939, 0.466211), (-170.14189, 0.437859), (-170.14189, 0.264664), (-170.14189, 0.250321), (-170.07051, 0.250321), (-170.07051, 0.264664), (-170.14189, 0.264664), (-170.01941, -0.305578), (-170.01941, 0.425948), (-170.09082, 0.414916), (-170.09082, -0.305578), (-170.01941, -0.319919), (-170.09082, -0.319919), (-170.09082, -0.493099), (-170.04282, -0.52145), (-170.01941, -0.52145), (-170.09082, -0.319919), (-170.01941, -0.319919), (-170.01941, -0.305578), (-170.09082, -0.305578), (-170.07051, -0.481267), (-170.07051, 0.250321), (-170.14189, 0.250321), (-170.14189, -0.470234), (-171.13824, -0.572082), (-171.13824, 0.679493), (-171.17853, 0.679493), (-171.17853, -0.572082), (-170.07051, -0.481267), (-170.14189, -0.470234), (-170.14189, -0.510458), (-170.07051, -0.521492), (-170.27437, 0.678401), (-170.27437, -0.570989), (-170.23413, -0.570989), (-170.23413, 0.678401), (-170.09082, 0.414916), (-170.01941, 0.425948), (-170.01941, 0.466169), (-170.09082, 0.455136), (-143.95483, -107.93224), (-143.95483, -113.63171), (-138.40872, -113.63171), (-138.40872, -107.93224), (-118.538795, -109.61047), (-118.538795, -113.51364), (-114.740005, -113.51364), (-114.740005, -109.61047), (-88.714554, -110.74826), (-88.714554, -113.93459), (-85.61387, -113.93459), (-85.61387, -110.74826), (-68.99982, -112.29217), (-68.99982, -112.292175), (-68.99981, -112.292175), (-68.99981, -112.29217), (-71.56355, -0.999076), (-71.54901, -0.99922), (-71.54901, 0.152274), (-71.56355, 0.152129), (-71.57388, -0.999076), (-71.56355, -0.999076), (-71.56355, 0.152129), (-71.57388, 0.152129), (-71.58079, -0.999076), (-71.57388, -0.999076), (-71.57388, 0.152129), (-71.58079, 0.152129), (-71.36335, -0.998661), (-71.34505, -0.998469), (-71.34505, 0.151563), (-71.36335, 0.151755), (-70.96776, 0.144839), (-71.54901, 0.152274), (-71.54901, -0.99922), (-70.96776, -0.991786), (-70.962326, -0.991786), (-70.962326, 0.144839), (-70.96776, 0.144839), (-70.96776, -0.991786), (-72.07719, -1.061298), (-72.06242, -1.061298), (-72.06242, 0.225056), (-72.07719, 0.225056), (-72.06242, 0.225056), (-72.06242, -1.061298), (-71.4192, -1.061298), (-71.4192, 0.225056), (-71.67225, -1.005047), (-71.67225, 0.168806), (-71.695816, 0.168806), (-71.695816, -1.005047), (-71.362854, -1.061298), (-71.362854, 0.225056), (-71.376076, 0.225056), (-71.376076, -1.061298), (-71.376076, -1.061298), (-71.376076, 0.225056), (-71.39586, 0.225056), (-71.39586, -1.061298), (-71.39586, -1.061298), (-71.39586, 0.225056), (-71.4192, 0.225056), (-71.4192, -1.061298), (-71.35958, -0.237214), (-71.35958, 0.414557), (-71.57544, 0.377381), (-71.59362, 0.374672), (-71.604965, 0.367822), (-71.61254, 0.357571), (-71.61526, 0.343145), (-71.62158, -0.233586), (-71.47922, 0.26457), (-71.47922, 0.276317), (-71.73798, 0.266333), (-71.74121, 0.260942), (-71.47922, 0.276317), (-71.47922, 0.414556), (-71.73798, 0.266333), (-71.47922, 0.26457), (-71.74121, 0.260942), (-71.734886, -0.315789), (-71.73218, -0.330214), (-71.724594, -0.340466), (-71.71325, -0.347316), (-71.695076, -0.350025), (-71.47922, -0.3872), (-71.35958, -0.237214), (-71.62158, -0.233586), (-71.61835, -0.238977), (-71.35958, -0.248961), (-71.35958, -0.248961), (-71.61835, -0.238977), (-71.35958, -0.3872), (-71.36335, -0.998661), (-71.36335, 0.151755), (-71.58068, 0.146342), (-71.58068, -0.993248), (-70.97623, -0.534979), (-70.97623, 0.687762), (-71.25392, 0.681509), (-71.25392, -0.528727), (-72.255486, -1.061298), (-72.07719, -1.061298), (-72.07719, 0.225056), (-72.255486, 0.225056), (-71.450325, 0.168806), (-71.67225, 0.168806), (-71.67225, -1.005047), (-71.450325, -1.005047), (-71.09744, 0.275313), (-71.09744, 0.43703), (-71.37121, 0.275313), (-71.09744, 0.261922), (-71.09744, 0.275313), (-71.37121, 0.275313), (-71.37923, 0.261922), (-71.22572, -0.23573), (-71.22572, 0.43707), (-71.4463, 0.402984), (-71.46973, 0.398774), (-71.489586, 0.386784), (-71.50285, 0.368838), (-71.507515, 0.347671), (-71.507515, -0.23573), (-71.22572, -0.410838), (-71.22572, -0.249121), (-71.4995, -0.249121), (-71.22572, -0.23573), (-71.507515, -0.23573), (-71.4995, -0.249121), (-71.22572, -0.249121), (-71.09744, 0.261922), (-71.37923, 0.261922), (-71.37923, -0.321479), (-71.374565, -0.342647), (-71.3613, -0.360592), (-71.34144, -0.372583), (-71.31801, -0.376793), (-71.09744, -0.410879), (5.646933, -121.22408), (7.358486, -121.22408), (7.358486, -119.51253), (5.646933, -119.51253), (-5.253075, -117.71076), (-3.54152, -117.71076), (-3.54152, -115.99921), (-5.253075, -115.99921)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_FridgeDrawer3C2_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]
                rel material:binding = </root/_materials/M_FridgeDrawer3C2_0>
            }

            def GeomSubset "M_FridgeDrawer3C2_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [31]
                rel material:binding = </root/_materials/M_FridgeDrawer3C2_1>
            }

            def GeomSubset "M_FridgeDrawer3C2_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [32]
                rel material:binding = </root/_materials/M_FridgeDrawer3C2_2>
            }

            def GeomSubset "M_FridgeDrawer3C2_3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [33]
                rel material:binding = </root/_materials/M_FridgeDrawer3C2_3>
            }

            def GeomSubset "M_FridgeDrawer3C2_4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62]
                rel material:binding = </root/_materials/M_FridgeDrawer3C2_4>
            }

            def GeomSubset "M_FridgeDrawer3C2_5" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [63]
                rel material:binding = </root/_materials/M_FridgeDrawer3C2_5>
            }

            def GeomSubset "M_FridgeDrawer3C2_6" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [64]
                rel material:binding = </root/_materials/M_FridgeDrawer3C2_6>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer3C2_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer3C2_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.36764705, 0.36764705, 0.36764705)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer3C2_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Copper_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer3C2_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer3C2_1"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer3C2_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer3C2_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer3C2_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer3C2_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer3C2_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer3C2_2"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer3C2_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer3C2_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer3C2_2/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer3C2_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer3C2_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer3C2_3"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer3C2_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.25, 0.25, 0.25)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer3C2_3/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer3C2_3/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer3C2_4"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer3C2_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.39705884, 0.39705884, 0.39705884)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }

        def Material "M_FridgeDrawer3C2_5"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer3C2_5/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer3C2_5/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer3C2_5/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Decal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer3C2_5/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Decal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer3C2_5/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer3C2_6"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer3C2_6/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer3C2_6/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer3C2_6/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Readout_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer3C2_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer3C2_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

