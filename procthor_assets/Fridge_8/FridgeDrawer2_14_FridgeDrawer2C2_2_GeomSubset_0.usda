#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "FridgeDrawer2_14_FridgeDrawer2C2_2_GeomSubset_0"
    {
        def Mesh "FridgeDrawer2_14_FridgeDrawer2C2_2_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 52, 53, 70, 63, 58, 37, 41, 57, 63, 34, 35, 62, 62, 35, 36, 64, 57, 41, 40, 69, 71, 38, 39, 70, 69, 40, 38, 71, 64, 36, 37, 58, 70, 39, 34, 63, 28, 34, 39, 29, 58, 77, 76, 64, 71, 79, 78, 69, 71, 70, 53, 80, 79, 57, 69, 78, 81, 62, 64, 76, 82, 62, 82, 83, 52, 63, 77, 58, 57, 81, 53, 52, 83, 80, 85, 84, 28, 29, 95, 94, 93, 92, 35, 34, 28, 84, 88, 89, 36, 35, 88, 40, 41, 86, 90, 38, 91, 85, 29, 39, 91, 38, 40, 90, 37, 36, 89, 87, 41, 37, 92, 93, 37, 87, 95, 92, 87, 86, 94, 95, 86, 41, 93, 94]
            rel material:binding = </root/_materials/M_FridgeDrawer2C2_0>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (4.5262277e-7, 0.94618565, -0.32362422), (0.0000049788505, 0.94618624, -0.32362258), (-0.0000023006332, 0.96691865, -0.2550849), (-0.0000023006332, 0.96691865, -0.2550849), (-0.043602604, 0.07870099, -0.9959442), (-0.029708594, 0.0587109, -0.99783283), (0.029587833, 0.05868208, -0.99783814), (0.043605555, 0.07869876, -0.99594426), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.0022991486, -0.000100689016, -0.9999973), (-0.00080356374, -1.4342368e-7, -0.9999997), (0.043605555, 0.07869876, -0.99594426), (0.029587833, 0.05868208, -0.99783814), (0.0023012795, -0.00010060519, -0.99999744), (0.00080581754, 2.5413465e-7, -0.9999995), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0.00080581754, 2.5413465e-7, -0.9999995), (0.0023012795, -0.00010060519, -0.99999744), (0, 0, -1), (0, 0, -1), (-0.00080356374, -1.4342368e-7, -0.9999997), (-0.0022991486, -0.000100689016, -0.9999973), (-0.029708594, 0.0587109, -0.99783283), (-0.043602604, 0.07870099, -0.9959442), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0.000002292698, -0.9841515, 0.17732947), (0.0000023143407, -1, 0), (0.0000023143407, -1, 0), (0.0000021767673, -0.98415154, 0.17732972), (0.99960476, 0.012400883, 0.025231602), (0.99960744, 0.01252097, 0.025063723), (0.99970514, -0.0029725777, 0.02410027), (0.999719, -0.0003907509, 0.023701921), (-0.99953663, -0.008596841, 0.029199362), (-0.9993993, -0.010895276, 0.03289735), (-0.9997051, -0.0029779957, 0.024101136), (-0.99971896, -0.00039061997, 0.023701848), (-0.99953663, -0.008596841, 0.029199362), (-0.9934923, -0.08147409, 0.079592146), (-0.9934923, -0.08147409, 0.079592146), (-0.9942142, -0.082501926, 0.0687879), (-0.9993993, -0.010895276, 0.03289735), (-0.99960476, 0.012396627, 0.025231663), (-0.99971896, -0.00039061997, 0.023701848), (-0.9997051, -0.0029779957, 0.024101136), (-0.99960804, 0.012495804, 0.02505076), (0.9995365, -0.008599646, 0.029199045), (0.999719, -0.0003907509, 0.023701921), (0.99970514, -0.0029725777, 0.02410027), (0.9993993, -0.010890786, 0.032897696), (0.9995365, -0.008599646, 0.029199045), (0.9993993, -0.010890786, 0.032897696), (0.99421334, -0.08250097, 0.06879981), (0.9934918, -0.08146374, 0.079609156), (0.9934918, -0.08146374, 0.079609156), (0.0000029527996, -0.9854916, -0.16972405), (0.0000023603682, -0.9854917, -0.16972345), (0.0000023603682, -0.9854917, -0.16972345), (0.0000029527996, -0.98549163, -0.16972405), (0.0000049788505, 0.94618624, -0.32362258), (4.5262277e-7, 0.94618565, -0.32362422), (-0.000002055315, 0.8677217, -0.49705037), (-0.000002055315, 0.86772174, -0.49705037), (0.0000019948532, -0.8610037, 0.5085986), (0.0000019948534, -0.8610037, 0.5085986), (0.000002292698, -0.9841515, 0.17732947), (0.0000021767673, -0.98415154, 0.17732972), (-0.0000034380378, 0.98826796, 0.15272994), (-0.0000034380378, 0.98826796, 0.15272994), (-0.0000034380378, 0.98826796, 0.15272994), (-0.0000034380378, 0.98826796, 0.15272994), (-1, 8.905144e-9, 0), (-1, 1.7810287e-8, 0), (-1, 1.7810287e-8, 0), (-1, 1.193006e-8, 0), (-1, -9.92848e-8, 0), (-1, -0.0000021006942, 9.4744973e-7), (-1, -0.0000019970896, -1.5414794e-7), (-1, 8.905144e-9, 0), (-1, -9.92848e-8, 0), (1, 0.0000019594154, 1.5156486e-7), (1, 0.000001768207, 1.3677449e-7), (1, 0.0000027533251, 3.1669725e-7), (1, 0.000002001978, 2.3825685e-7), (1, 1.4248228e-7, 0), (1, 7.124114e-8, 0), (1, 1.9088093e-7, 0), (1, 2.8496456e-7, 0), (1, 2.8496456e-7, 0), (1, 7.124114e-8, 0), (1, 1.4248228e-7, 0), (1, 0.0000019594154, 1.5156486e-7), (1, 0.000002001978, 2.3825685e-7), (-1, -0.0000018022046, -1.391055e-7), (-1, -0.0000019970896, -1.5414794e-7), (-1, -0.0000021006942, 9.4744973e-7), (-1, -0.0000027521464, 0.0000011575836), (0.029587833, 0.05868208, -0.99783814), (-0.029708594, 0.0587109, -0.99783283), (1.4934574e-8, 0, -1), (1.4934574e-8, 0, -1), (-1, -0.0000018022046, -1.391055e-7), (-1, -0.0000027521464, 0.0000011575836), (-1, 0, 0), (-1, 0, 0), (-1.9157532e-8, 0, 1), (-1.9157532e-8, 0, 1), (-1.9157532e-8, 0, 1), (-1.9157532e-8, 0, 1), (1, 0.0000027533251, 3.1669725e-7), (1, 0.000001768207, 1.3677449e-7), (1, 0, 0), (1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.000957, 0.030103, -1.040654), (0.000948, 0.030103, -1.040654), (0.000957, 0.030112, -1.040654), (0.000948, 0.030112, -1.040654), (0.000957, 0.030103, -1.040654), (0.000948, 0.030103, -1.040654), (0.000957, 0.030112, -1.040654), (0.000948, 0.030112, -1.040654), (0.000957, 0.030103, -1.040654), (0.000948, 0.030103, -1.040654), (0.000957, 0.030112, -1.040654), (0.000948, 0.030112, -1.040654), (0.000957, 0.030103, -1.040654), (0.000948, 0.030103, -1.040654), (0.000957, 0.030112, -1.040654), (0.000948, 0.030112, -1.040654), (0.000957, 0.030103, -1.040654), (0.000948, 0.030103, -1.040654), (0.000957, 0.030112, -1.040654), (0.000948, 0.030112, -1.040654), (0.000957, 0.030103, -1.040654), (0.000948, 0.030103, -1.040654), (0.000957, 0.030112, -1.040654), (0.000948, 0.030112, -1.040654), (0.000957, 0.030103, -1.040654), (0.000948, 0.030103, -1.040654), (0.000957, 0.030112, -1.040654), (0.000948, 0.030112, -1.040654), (-0.027587, 0.14668, 0.283476), (-0.458975, 0.146679, 0.283476), (-0.027587, 0.077098, 0.165681), (-0.027587, 0.072147, 0.162717), (-0.458975, 0.072145, 0.162717), (-0.458975, 0.077097, 0.165681), (-0.027587, 0.14668, 0.291556), (-0.027587, 0.077098, 0.291556), (-0.027587, 0.072147, 0.291556), (-0.027586, -0.180427, 0.291556), (-0.458975, 0.077097, 0.291556), (-0.458975, 0.146679, 0.291556), (-0.458975, 0.072145, 0.291556), (-0.458974, -0.180428, 0.291556), (-0.458974, -0.143564, 0.162717), (-0.458974, -0.164016, 0.185349), (-0.027586, -0.164015, 0.18535), (-0.027587, -0.143563, 0.162717), (-0.027586, -0.162458, 0.176689), (-0.458974, -0.16246, 0.176689), (-0.027586, -0.158025, 0.169346), (-0.458974, -0.158026, 0.169346), (-0.027587, -0.15139, 0.164439), (-0.458974, -0.151391, 0.164439), (-0.032275, 0.138313, 0.286234), (-0.454288, 0.138312, 0.286234), (-0.451699, 0.072456, 0.171263), (-0.034863, 0.072457, 0.171263), (-0.454442, -0.155356, 0.187123), (-0.451809, -0.173565, 0.292855), (-0.034752, -0.173564, 0.292855), (-0.032119, -0.155354, 0.187123), (-0.451699, 0.070463, 0.17007), (-0.034863, 0.070464, 0.17007), (-0.037721, 0.077098, 0.291556), (-0.034753, 0.139717, 0.291556), (-0.037721, 0.072147, 0.291556), (-0.454371, -0.154355, 0.180404), (-0.454371, -0.151823, 0.176211), (-0.454371, -0.148034, 0.173409), (-0.454425, -0.142702, 0.172407), (-0.448841, 0.072145, 0.291556), (-0.45181, 0.139716, 0.291556), (-0.448841, 0.077097, 0.291556), (-0.032136, -0.142701, 0.172407), (-0.032189, -0.148032, 0.173409), (-0.032189, -0.151821, 0.176211), (-0.032189, -0.154353, 0.180404), (-0.037141, 0.071805, 0.266906), (-0.034106, -0.169095, 0.266906), (-0.449421, 0.071804, 0.266906), (-0.449427, 0.076146, 0.266906), (-0.453852, 0.12724, 0.266906), (-0.452455, -0.169096, 0.266906), (-0.037135, 0.076147, 0.266906), (-0.03271, 0.127241, 0.266906), (-0.027587, 0.136892, 0.266906), (-0.458975, 0.136891, 0.266906), (-0.458974, -0.176619, 0.266906), (-0.027586, -0.176618, 0.266906), (-0.027587, 0.077098, 0.266906), (-0.027587, 0.072147, 0.266906), (-0.458975, 0.072145, 0.266906), (-0.458975, 0.077097, 0.266906), (-0.027586, -0.194314, 0.291556), (-0.458974, -0.194316, 0.291556), (-0.458974, -0.190506, 0.266906), (-0.027586, -0.190505, 0.266906)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-169.52118, -113.841446), (-169.52118, -113.84153), (-169.5211, -113.84153), (-169.5211, -113.841446), (-170.1911, 0.694077), (-170.1911, -0.603539), (-170.17474, -0.595919), (-170.17474, 0.686457), (-171.11841, 0.65881), (-171.13832, 0.679603), (-171.13832, -0.572192), (-171.11841, -0.5514), (-170.20932, 0.65881), (-170.18913, 0.679603), (-170.39102, 0.679603), (-170.39102, 0.650198), (-170.39102, 0.650198), (-170.39102, 0.679603), (-170.4054, 0.679603), (-170.4054, 0.650198), (-171.11841, -0.5514), (-171.13832, -0.572192), (-170.4054, -0.572192), (-170.4054, -0.542786), (-170.39102, -0.542786), (-170.39102, -0.572192), (-170.18913, -0.572192), (-170.20932, -0.5514), (-170.4054, -0.542786), (-170.4054, -0.572192), (-170.39102, -0.572192), (-170.39102, -0.542786), (-170.4054, 0.650198), (-170.4054, 0.679603), (-171.13832, 0.679603), (-171.11841, 0.65881), (-170.20932, -0.5514), (-170.18913, -0.572192), (-170.18913, 0.679603), (-170.20932, 0.65881), (-170.3597, 0.711423), (-170.38432, 0.711423), (-170.38432, -0.604011), (-170.3597, -0.604011), (-169.96524, 0.401357), (-170.04045, 0.388406), (-170.04045, -0.309712), (-169.969, -0.310701), (-169.91367, 0.219933), (-169.9851, 0.217176), (-169.9851, 0.204592), (-169.91367, 0.205581), (-169.91367, 0.219933), (-169.91367, 0.40143), (-169.92908, 0.39736), (-169.9851, 0.36527), (-169.9851, 0.217176), (-169.90988, -0.50659), (-169.91367, 0.205581), (-169.9851, 0.204592), (-169.9851, -0.493637), (-169.969, -0.32505), (-169.969, -0.310701), (-170.04045, -0.309712), (-170.04045, -0.322294), (-169.969, -0.32505), (-170.04045, -0.322294), (-170.04045, -0.470364), (-169.98442, -0.502449), (-169.969, -0.506518), (-170.12253, 0.652286), (-170.19821, 0.650401), (-170.19821, -0.566457), (-170.12253, -0.568342), (-170.1911, -0.603539), (-170.1911, 0.694077), (-170.25052, 0.692739), (-170.25052, -0.602201), (-170.30917, -0.604011), (-170.30917, 0.711423), (-170.3597, 0.711423), (-170.3597, -0.604011), (-170.33157, 0.682141), (-170.33157, -0.57473), (-170.25977, -0.57473), (-170.25977, 0.682141), (-170.07051, 0.264642), (-170.07051, 0.466176), (-170.0939, 0.466176), (-170.14189, 0.437825), (-170.14189, 0.264642), (-170.14189, 0.250301), (-170.07051, 0.250301), (-170.07051, 0.264642), (-170.14189, 0.264642), (-170.01941, -0.305579), (-170.01941, 0.425949), (-170.0908, 0.414917), (-170.0908, -0.305579), (-170.01941, -0.31992), (-170.0908, -0.31992), (-170.0908, -0.493101), (-170.04283, -0.521451), (-170.01941, -0.521451), (-170.0908, -0.31992), (-170.01941, -0.31992), (-170.01941, -0.305579), (-170.0908, -0.305579), (-170.07051, -0.481234), (-170.07051, 0.250301), (-170.14189, 0.250301), (-170.14189, -0.470202), (-171.13832, -0.572192), (-171.13832, 0.679603), (-171.17862, 0.679603), (-171.17862, -0.572192), (-170.07051, -0.481234), (-170.14189, -0.470202), (-170.14189, -0.510423), (-170.07051, -0.521456), (-170.27437, 0.678265), (-170.27437, -0.570853), (-170.23413, -0.570853), (-170.23413, 0.678265), (-170.0908, 0.414917), (-170.01941, 0.425949), (-170.01941, 0.466171), (-170.0908, 0.455137)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer2C2_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2C2_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.36764705, 0.36764705, 0.36764705)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2C2_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Copper_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2C2_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

