#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "SideTableDrawer_302_1_2"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "SideTableDrawer_302_1_2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.260451, -0.165621, -0.296595), (0.261009, 0.083157, -0.003843)]
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 2, 1, 0, 3, 2, 4, 6, 5, 4, 7, 6, 8, 10, 9, 8, 11, 10, 12, 14, 13, 12, 15, 14, 16, 18, 17, 16, 19, 18, 20, 22, 21, 20, 23, 22, 15, 24, 0, 12, 7, 25, 3, 26, 20, 23, 27, 4, 13, 28, 6, 14, 1, 29, 2, 21, 30, 22, 5, 31, 25, 15, 12, 25, 24, 15, 24, 3, 0, 24, 26, 3, 23, 26, 27, 23, 20, 26, 7, 27, 25, 7, 4, 27, 13, 29, 28, 13, 14, 29, 1, 30, 29, 1, 2, 30, 31, 21, 22, 31, 30, 21, 28, 5, 6, 28, 31, 5, 0, 14, 15, 0, 1, 14, 6, 12, 13, 6, 7, 12, 20, 2, 3, 20, 21, 2, 4, 22, 23, 4, 5, 22, 32, 24, 25, 32, 33, 24, 34, 32, 25, 34, 25, 27, 33, 26, 24, 33, 35, 26, 35, 27, 26, 35, 34, 27, 36, 38, 37, 36, 39, 38, 35, 38, 39, 35, 33, 38, 34, 39, 36, 34, 35, 39, 32, 36, 37, 32, 34, 36, 19, 40, 18, 19, 41, 40, 42, 33, 32, 42, 41, 33, 16, 42, 32, 16, 32, 37, 19, 37, 38, 19, 16, 37, 41, 19, 38, 41, 38, 33, 40, 17, 18, 40, 43, 17, 41, 43, 40, 41, 42, 43, 42, 17, 43, 42, 16, 17, 44, 28, 29, 44, 45, 28, 46, 44, 29, 46, 29, 30, 47, 46, 30, 47, 30, 31, 45, 31, 28, 45, 47, 31, 48, 45, 44, 48, 49, 45, 49, 47, 45, 50, 44, 46, 50, 48, 44, 51, 46, 47, 51, 50, 46, 49, 51, 47, 11, 51, 49, 11, 8, 51, 8, 50, 51, 8, 9, 50, 9, 48, 50, 9, 10, 48, 10, 49, 48, 10, 11, 49, 52, 54, 53, 52, 55, 54, 56, 55, 52, 56, 57, 55, 55, 58, 54, 55, 59, 58, 57, 59, 55, 57, 60, 59, 59, 61, 58, 59, 62, 61, 60, 62, 59, 60, 63, 62, 64, 66, 65, 64, 67, 66, 63, 52, 62, 63, 56, 52, 62, 52, 53, 62, 53, 61, 66, 61, 53, 66, 67, 61, 65, 53, 54, 65, 66, 53, 64, 54, 58, 64, 65, 54, 67, 58, 61, 67, 64, 58]
            rel material:binding = </root/_materials/M_SideTableDrawer_302_1_2_0>
            normal3f[] normals = [(-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0.99999994, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 0.99999994), (0, 0, 1), (-0.5773138, -0.5773207, -0.5774164), (-0.5773138, -0.5773207, -0.5774164), (-0.5773138, -0.5773207, -0.5774164), (0.5773192, -0.5775529, -0.5771784), (0.5773192, -0.577553, -0.57717836), (0.5773192, -0.5775529, -0.57717836), (-0.57735384, -0.57734954, 0.57734746), (-0.57735384, -0.57734954, 0.57734746), (-0.57735384, -0.57734954, 0.57734746), (0.5773524, -0.5773524, 0.577346), (0.5773524, -0.5773524, 0.577346), (0.5773524, -0.5773524, 0.577346), (0.57728016, 0.5773853, -0.5773853), (0.57728016, 0.5773853, -0.5773853), (0.57728016, 0.5773853, -0.5773853), (-0.57727873, 0.57738817, -0.5773839), (-0.57727873, 0.57738817, -0.5773839), (-0.57727873, 0.57738817, -0.5773839), (-0.57728434, 0.57738215, 0.5773843), (-0.57728434, 0.57738215, 0.5773843), (-0.57728434, 0.57738215, 0.5773843), (0.5772829, 0.577385, 0.57738286), (0.5772829, 0.577385, 0.57738286), (0.5772829, 0.577385, 0.57738286), (0, -0.70704466, -0.707169), (0, -0.70704454, -0.707169), (0, -0.70704454, -0.70716894), (0, -0.70704466, -0.707169), (0, -0.7070446, -0.70716906), (0, -0.70704454, -0.707169), (-0.7071081, -0.70710546, 0), (-0.70710486, -0.7071086, 0), (-0.7071082, -0.70710546, 0), (-0.7071081, -0.70710546, 0), (-0.7071048, -0.70710874, 0), (-0.70710486, -0.7071086, 0), (0, -0.7071074, 0.7071061), (0, -0.7071075, 0.70710605), (0, -0.7071074, 0.7071062), (0, -0.7071074, 0.7071061), (0, -0.7071075, 0.7071061), (0, -0.7071075, 0.70710605), (0.70710486, -0.7071086, 0), (0.7071081, -0.70710546, 0), (0.7071048, -0.70710874, 0), (0.70710486, -0.7071086, 0), (0.7071082, -0.70710546, 0), (0.7071081, -0.70710546, 0), (0, 0.707107, -0.7071065), (0, 0.7071052, -0.7071084), (0, 0.707107, -0.7071065), (0, 0.707107, -0.7071065), (0, 0.70710516, -0.7071084), (0, 0.7071052, -0.7071084), (-0.7070421, 0.70717144, 0), (-0.7070453, 0.7071683, 0), (-0.7070421, 0.7071716, 0), (-0.7070421, 0.70717144, 0), (-0.7070454, 0.7071682, 0), (-0.7070453, 0.7071683, 0), (0, 0.70710737, 0.70710623), (0, 0.70710564, 0.70710784), (0, 0.7071074, 0.7071062), (0, 0.70710737, 0.70710623), (0, 0.7071056, 0.7071079), (0, 0.70710564, 0.70710784), (0.7070453, 0.7071683, 0), (0.7070421, 0.70717144, 0), (0.7070454, 0.7071682, 0), (0.7070453, 0.7071683, 0), (0.7070421, 0.7071716, 0), (0.7070421, 0.70717144, 0), (-0.70704406, 0, -0.7071694), (-0.70704406, 0, -0.7071694), (-0.70704406, 0, -0.7071695), (-0.70704406, 0, -0.7071694), (-0.7070441, 0, -0.7071695), (-0.70704406, 0, -0.7071694), (0.70704406, 0, -0.7071694), (0.70704406, 0, -0.7071694), (0.70704406, 0, -0.7071695), (0.70704406, 0, -0.7071694), (0.7070441, 0, -0.7071695), (0.70704406, 0, -0.7071694), (-0.70710826, 0, 0.70710534), (-0.70710754, 0, 0.707106), (-0.7071091, 0, 0.7071045), (-0.70710826, 0, 0.70710534), (-0.7071068, 0, 0.7071068), (-0.70710754, 0, 0.707106), (0.70710677, 0, 0.70710677), (0.7071091, 0, 0.70710444), (0.7071039, 0, 0.7071097), (0.70710677, 0, 0.70710677), (0.707112, 0, 0.7071016), (0.7071091, 0, 0.70710444), (0, -1, -0.0000015056513), (0, -1, 9.0552595e-7), (0, -1, -0.0000015260028), (0, -1, -0.0000015056513), (0, -1, 9.660581e-7), (0, -1, 9.0552595e-7), (0, -1, -5.2018487e-7), (0, -1, -0.0000015056513), (0, -1, -0.0000015260028), (0, -1, -5.2018487e-7), (0, -1, -0.0000015260028), (0, -1, -5.0757563e-7), (0, -1, 9.660581e-7), (0, -1, 0), (0, -1, 9.0552595e-7), (0, -1, 9.660581e-7), (0, -1, -4.2177795e-9), (0, -1, 0), (0, -1, -4.2177795e-9), (0, -1, -5.0757563e-7), (0, -1, 0), (0, -1, -4.2177795e-9), (0, -1, -5.2018487e-7), (0, -1, -5.0757563e-7), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 0.99999994), (0, 0, 1), (0, 0, 0.99999994), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (7.260827e-8, 0, -1), (0, 0, -1), (6.49994e-8, 0, -1), (7.260827e-8, 0, -1), (-1.9029338e-9, 0, -1), (0, 0, -1), (2.5372453e-9, 0, -1), (7.260827e-8, 0, -1), (6.49994e-8, 0, -1), (2.5372453e-9, 0, -1), (6.49994e-8, 0, -1), (0, 0, -1), (-5.44569e-8, 0, -1), (0, 0, -1), (-4.8747513e-8, 0, -1), (-5.44569e-8, 0, -1), (2.5372453e-9, 0, -1), (0, 0, -1), (-1.9029338e-9, 0, -1), (-5.44569e-8, 0, -1), (-4.8747513e-8, 0, -1), (-1.9029338e-9, 0, -1), (-4.8747513e-8, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -0.99999994, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.000023983375, 1, -0.000023907802), (0.00003216293, 1, -0.000032589152), (-0.00003216268, 1, -0.00003104934), (-0.000023983375, 1, -0.000023907802), (0.00002412293, 1, -0.000023923549), (0.00003216293, 1, -0.000032589152), (0.000011490905, 1, -0.000010400334), (-0.000023983375, 1, -0.000023907802), (-0.00003216268, 1, -0.00003104934), (0.000011490905, 1, -0.000010400334), (-0.00003216268, 1, -0.00003104934), (-0.000032163036, 1, 0.00003196542), (-0.00001135484, 1, -0.000012118117), (0.000011490905, 1, -0.000010400334), (-0.000032163036, 1, 0.00003196542), (-0.00001135484, 1, -0.000012118117), (-0.000032163036, 1, 0.00003196542), (0.000032162705, 1, 0.000031990232), (0.00002412293, 1, -0.000023923549), (0.000032162705, 1, 0.000031990232), (0.00003216293, 1, -0.000032589152), (0.00002412293, 1, -0.000023923549), (-0.00001135484, 1, -0.000012118117), (0.000032162705, 1, 0.000031990232), (-0.0000020497112, 1, -0.0000023703067), (0.00002412293, 1, -0.000023923549), (-0.000023983375, 1, -0.000023907802), (-0.0000020497112, 1, -0.0000023703067), (-8.698327e-7, 1, 0.0000023343348), (0.00002412293, 1, -0.000023923549), (-8.698327e-7, 1, 0.0000023343348), (-0.00001135484, 1, -0.000012118117), (0.00002412293, 1, -0.000023923549), (0.00014154188, 1, -0.0001374181), (-0.000023983375, 1, -0.000023907802), (0.000011490905, 1, -0.000010400334), (0.00014154188, 1, -0.0001374181), (-0.0000020497112, 1, -0.0000023703067), (-0.000023983375, 1, -0.000023907802), (-0.00014451383, 1, -0.00014436082), (0.000011490905, 1, -0.000010400334), (-0.00001135484, 1, -0.000012118117), (-0.00014451383, 1, -0.00014436082), (0.00014154188, 1, -0.0001374181), (0.000011490905, 1, -0.000010400334), (-8.698327e-7, 1, 0.0000023343348), (-0.00014451383, 1, -0.00014436082), (-0.00001135484, 1, -0.000012118117), (-0.70629704, 0.70791554, 0.000002870012), (-0.7061965, 0.7080159, 6.259817e-8), (-0.706298, 0.7079146, 0.0000028973375), (-0.70629704, 0.70791554, 0.000002870012), (-0.70619434, 0.7080182, 0), (-0.7061965, 0.7080159, 6.259817e-8), (0, 0.7080152, -0.7061972), (0, 0.7080169, -0.70619553), (3.34403e-8, 0.70767653, -0.70653653), (0, 0.7080152, -0.7061972), (0, 0.7080169, -0.70619553), (0, 0.7080169, -0.70619553), (0.7062997, 0.7079129, 0.0000028708132), (0.70639896, 0.7078139, 6.259834e-8), (0.7062987, 0.7079139, 0.0000028981444), (0.7062997, 0.7079129, 0.0000028708132), (0.70640117, 0.7078117, 0), (0.70639896, 0.7078139, 6.259834e-8), (0, 0.7079143, 0.70629835), (0, 0.7079121, 0.70630056), (0, 0.70791435, 0.70629835), (0, 0.7079143, 0.70629835), (0, 0.7079121, 0.7063006), (0, 0.7079121, 0.70630056), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0.60052156, -0.7996086), (0, 0.60052204, -0.79960823), (0, 0.60052156, -0.7996086), (0, 0.60052156, -0.7996086), (0, 0.60052204, -0.79960823), (0, 0.60052204, -0.79960823), (-0.7072046, 0.7070089, 1.8951843e-8), (-0.7071022, 0.70711124, -1.1684849e-8), (-0.70686567, 0.70734787, 0), (-0.7072046, 0.7070089, 1.8951843e-8), (-0.70686483, 0.7073486, 0), (-0.7071022, 0.70711124, -1.1684849e-8), (0, 0.600532, 0.7996008), (0, 0.6005325, 0.7996004), (-2.3515895e-8, 0.60026366, 0.7998022), (0, 0.600532, 0.7996008), (0, 0.6005325, 0.7996004), (0, 0.6005325, 0.7996004), (0.7068656, 0.70734787, 0), (0.7068649, 0.7073486, 0), (0.70686567, 0.70734787, 0), (0.7068656, 0.70734787, 0), (0.70686483, 0.7073486, 0), (0.7068649, 0.7073486, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.261009, -0.145226, -0.009464), (0.261009, -0.157886, -0.009464), (0.261009, -0.157886, -0.290973), (0.261009, -0.145226, -0.290973), (-0.260451, -0.145226, -0.290973), (-0.260451, -0.157886, -0.290973), (-0.260451, -0.157886, -0.009464), (-0.260451, -0.145226, -0.009464), (-0.2323, -0.160011, -0.268443), (0.232858, -0.160011, -0.268443), (0.232858, -0.160011, -0.031994), (-0.2323, -0.160011, -0.031994), (-0.254829, -0.145226, -0.003843), (-0.254829, -0.157886, -0.003843), (0.255387, -0.157886, -0.003843), (0.255387, -0.145226, -0.003843), (-0.228275, 0.066172, -0.019034), (-0.228275, 0.066172, -0.26472), (0.228833, 0.066172, -0.26472), (0.228833, 0.066172, -0.019034), (0.255387, -0.145226, -0.296595), (0.255387, -0.157885, -0.296595), (-0.254829, -0.157885, -0.296595), (-0.254829, -0.145226, -0.296595), (0.255387, -0.139604, -0.009464), (-0.254829, -0.139604, -0.009464), (0.255387, -0.139604, -0.290973), (-0.254829, -0.139604, -0.290973), (-0.254829, -0.163507, -0.009464), (0.255387, -0.163507, -0.009464), (0.255387, -0.163507, -0.290973), (-0.254829, -0.163507, -0.290973), (-0.24526, -0.139604, -0.019034), (0.245818, -0.139604, -0.019034), (-0.24526, -0.139604, -0.281403), (0.245818, -0.139604, -0.281403), (-0.24526, 0.083157, -0.281403), (-0.24526, 0.083157, -0.019034), (0.245818, 0.083157, -0.019034), (0.245818, 0.083157, -0.281403), (0.228833, -0.12262, -0.26472), (0.228833, -0.12262, -0.019034), (-0.228275, -0.12262, -0.019034), (-0.228275, -0.12262, -0.26472), (0.239867, -0.163508, -0.024985), (-0.239309, -0.163508, -0.024985), (0.239867, -0.163508, -0.275452), (-0.239309, -0.163508, -0.275452), (0.236362, -0.163508, -0.028489), (-0.235805, -0.163508, -0.028489), (0.236362, -0.163507, -0.271948), (-0.235805, -0.163507, -0.271948), (0.042305, -0.162356, -0.227433), (0.042305, -0.164163, -0.227433), (0.042305, -0.164163, -0.262255), (0.042305, -0.162356, -0.262255), (0.042305, -0.159091, -0.227433), (0.042305, -0.159091, -0.262255), (-0.041747, -0.164163, -0.262255), (-0.041747, -0.162356, -0.262255), (-0.041747, -0.159091, -0.262255), (-0.041747, -0.164163, -0.227433), (-0.041747, -0.162356, -0.227433), (-0.041747, -0.159091, -0.227433), (-0.040288, -0.165621, -0.26116), (0.040846, -0.165621, -0.26116), (0.040846, -0.165621, -0.228528), (-0.040288, -0.165621, -0.228528)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(0.264035, 0.818362), (0.257421, 0.67128), (0.257421, 0.818362), (0.264035, 0.818362), (0.264035, 0.67128), (0.257421, 0.67128), (0.264035, 0.67128), (0.257421, 0.818362), (0.257421, 0.67128), (0.264035, 0.67128), (0.264035, 0.818362), (0.257421, 0.818362), (0.084943, 0.683051), (-0.158092, 0.806591), (-0.158092, 0.683051), (0.084943, 0.683051), (0.084943, 0.806591), (-0.158092, 0.806591), (0.096714, 0.264035), (-0.169862, 0.257421), (0.096714, 0.257421), (0.096714, 0.264035), (-0.169862, 0.264035), (-0.169862, 0.257421), (0.08284, 0.813362), (-0.155988, 0.684997), (0.08284, 0.684997), (0.08284, 0.813362), (-0.155988, 0.813362), (-0.155988, 0.684997), (0.830137, 0.264035), (1.096714, 0.257421), (0.830137, 0.257421), (0.830137, 0.264035), (1.096714, 0.264035), (1.096714, 0.257421), (0.830137, 0.264035), (0.830137, 0.266973), (0.8272, 0.264035), (0.264035, 0.821299), (0.264035, 0.818362), (0.266973, 0.818362), (0.8272, 0.264035), (0.830137, 0.266973), (0.830137, 0.264035), (0.096714, 0.264035), (0.096714, 0.266973), (0.099651, 0.264035), (0.257421, 0.821299), (0.254484, 0.818362), (0.257421, 0.818362), (0.830137, 0.257421), (0.8272, 0.257421), (0.830137, 0.254484), (0.8272, 0.257421), (0.830137, 0.257421), (0.830137, 0.254484), (0.096714, 0.257421), (0.099651, 0.257421), (0.096714, 0.254484), (0.096714, 0.266973), (-0.169862, 0.264035), (0.096714, 0.264035), (0.096714, 0.266973), (-0.169862, 0.266973), (-0.169862, 0.264035), (0.830137, 0.818362), (0.8272, 0.67128), (0.8272, 0.818362), (0.830137, 0.818362), (0.830137, 0.67128), (0.8272, 0.67128), (0.096714, 0.264035), (-0.169862, 0.266973), (0.096714, 0.266973), (0.096714, 0.264035), (-0.169862, 0.264035), (-0.169862, 0.266973), (0.264035, 0.818362), (0.266973, 0.67128), (0.266973, 0.818362), (0.264035, 0.818362), (0.264035, 0.67128), (0.266973, 0.67128), (0.096714, 0.257421), (-0.169862, 0.254484), (0.096714, 0.254484), (0.096714, 0.257421), (-0.169862, 0.257421), (-0.169862, 0.254484), (0.8272, 0.818362), (0.830137, 0.67128), (0.830137, 0.818362), (0.8272, 0.818362), (0.8272, 0.67128), (0.830137, 0.67128), (0.096714, 0.254484), (-0.169862, 0.257421), (0.096714, 0.257421), (0.096714, 0.254484), (-0.169862, 0.254484), (-0.169862, 0.257421), (0.254484, 0.818362), (0.257421, 0.67128), (0.257421, 0.818362), (0.254484, 0.818362), (0.254484, 0.67128), (0.257421, 0.67128), (0.8272, 0.264035), (0.830137, 0.257421), (0.830137, 0.264035), (0.8272, 0.264035), (0.8272, 0.257421), (0.830137, 0.257421), (0.257421, 0.818362), (0.264035, 0.821299), (0.257421, 0.821299), (0.257421, 0.818362), (0.264035, 0.818362), (0.264035, 0.821299), (0.830137, 0.264035), (0.8272, 0.257421), (0.8272, 0.264035), (0.830137, 0.264035), (0.830137, 0.257421), (0.8272, 0.257421), (0.099651, 0.264035), (0.096714, 0.257421), (0.096714, 0.264035), (0.099651, 0.264035), (0.099651, 0.257421), (0.096714, 0.257421), (0.091714, 0.813362), (-0.169862, 0.818362), (0.096714, 0.818362), (0.091714, 0.813362), (-0.164862, 0.813362), (-0.169862, 0.818362), (0.091714, 0.67628), (0.091714, 0.813362), (0.096714, 0.818362), (0.091714, 0.67628), (0.096714, 0.818362), (0.096714, 0.67128), (0.835137, 0.813362), (0.830137, 0.67128), (0.830137, 0.818362), (0.835137, 0.813362), (0.835137, 0.67628), (0.830137, 0.67128), (0.835137, 0.67628), (1.096714, 0.67128), (0.830137, 0.67128), (0.835137, 0.67628), (1.091714, 0.67628), (1.096714, 0.67128), (0.091714, 0.67628), (-0.164862, 0.813362), (0.091714, 0.813362), (0.091714, 0.67628), (-0.164862, 0.67628), (-0.164862, 0.813362), (0.266973, 0.67628), (0.38336, 0.813362), (0.38336, 0.67628), (0.266973, 0.67628), (0.266973, 0.813362), (0.38336, 0.813362), (0.091714, 0.266973), (-0.164862, 0.38336), (0.091714, 0.38336), (0.091714, 0.266973), (-0.164862, 0.266973), (-0.164862, 0.38336), (0.266973, 0.813362), (0.38336, 0.67628), (0.38336, 0.813362), (0.266973, 0.813362), (0.266973, 0.67628), (0.38336, 0.67628), (0.374486, 0.813362), (0.275847, 0.684997), (0.374486, 0.684997), (0.374486, 0.813362), (0.275847, 0.813362), (0.275847, 0.684997), (0.08284, 0.275847), (-0.164862, 0.266973), (0.091714, 0.266973), (0.08284, 0.275847), (-0.155988, 0.275847), (-0.164862, 0.266973), (0.08284, 0.374486), (0.08284, 0.275847), (0.091714, 0.266973), (0.08284, 0.374486), (0.091714, 0.266973), (0.091714, 0.38336), (0.844011, 0.374486), (1.091714, 0.38336), (0.835137, 0.38336), (0.844011, 0.374486), (1.08284, 0.374486), (1.091714, 0.38336), (0.844011, 0.275847), (0.844011, 0.374486), (0.835137, 0.38336), (0.844011, 0.275847), (0.835137, 0.38336), (0.835137, 0.266973), (0.844011, 0.275847), (1.08284, 0.374486), (0.844011, 0.374486), (0.844011, 0.275847), (1.08284, 0.275847), (1.08284, 0.374486), (0.844011, 0.813362), (1.08284, 0.684997), (0.844011, 0.684997), (0.844011, 0.813362), (1.08284, 0.813362), (1.08284, 0.684997), (0.275847, 0.813362), (0.374486, 0.684997), (0.275847, 0.684997), (0.275847, 0.813362), (0.374486, 0.813362), (0.374486, 0.684997), (-0.161753, 0.810252), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.161753, 0.810252), (0.088605, 0.810252), (0.096714, 0.818362), (-0.161753, 0.679389), (-0.161753, 0.810252), (-0.169862, 0.818362), (-0.161753, 0.679389), (-0.169862, 0.818362), (-0.169862, 0.67128), (0.088605, 0.679389), (-0.161753, 0.679389), (-0.169862, 0.67128), (0.088605, 0.679389), (-0.169862, 0.67128), (0.096714, 0.67128), (0.088605, 0.810252), (0.096714, 0.67128), (0.096714, 0.818362), (0.088605, 0.810252), (0.088605, 0.679389), (0.096714, 0.67128), (-0.159922, 0.808422), (0.088605, 0.810252), (-0.161753, 0.810252), (-0.159922, 0.808422), (0.086774, 0.808422), (0.088605, 0.810252), (0.086774, 0.808422), (0.088605, 0.679389), (0.088605, 0.810252), (-0.159922, 0.68122), (-0.161753, 0.810252), (-0.161753, 0.679389), (-0.159922, 0.68122), (-0.159922, 0.808422), (-0.161753, 0.810252), (0.086774, 0.68122), (-0.161753, 0.679389), (0.088605, 0.679389), (0.086774, 0.68122), (-0.159922, 0.68122), (-0.161753, 0.679389), (0.086774, 0.808422), (0.086774, 0.68122), (0.088605, 0.679389), (0.084943, 0.806591), (0.086774, 0.68122), (0.086774, 0.808422), (0.084943, 0.806591), (0.084943, 0.683051), (0.086774, 0.68122), (0.084943, 0.683051), (-0.159922, 0.68122), (0.086774, 0.68122), (0.084943, 0.683051), (-0.158092, 0.683051), (-0.159922, 0.68122), (-0.158092, 0.683051), (-0.159922, 0.808422), (-0.159922, 0.68122), (-0.158092, 0.683051), (-0.158092, 0.806591), (-0.159922, 0.808422), (-0.158092, 0.806591), (0.086774, 0.808422), (-0.159922, 0.808422), (-0.158092, 0.806591), (0.084943, 0.806591), (0.086774, 0.808422), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.818362), (0.092088, 0.675906), (-0.165236, 0.813735), (-0.165236, 0.675906), (0.092088, 0.675906), (0.092088, 0.813735), (-0.165236, 0.813735), (0.096714, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.165236, 0.813735), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.165236, 0.813735), (0.092088, 0.813735), (0.096714, 0.818362), (-0.165236, 0.675906), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.165236, 0.675906), (-0.165236, 0.813735), (-0.169862, 0.818362), (0.092088, 0.675906), (-0.169862, 0.67128), (0.096714, 0.67128), (0.092088, 0.675906), (-0.165236, 0.675906), (-0.169862, 0.67128), (0.092088, 0.813735), (0.096714, 0.67128), (0.096714, 0.818362), (0.092088, 0.813735), (0.092088, 0.675906), (0.096714, 0.67128)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_SideTableDrawer_302_1_2_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]
                rel material:binding = </root/_materials/M_SideTableDrawer_302_1_2_0>
            }

            def GeomSubset "M_SideTableDrawer_302_1_2_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125]
                rel material:binding = </root/_materials/M_SideTableDrawer_302_1_2_1>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_SideTableDrawer_302_1_2_0"
        {
            token outputs:surface.connect = </root/_materials/M_SideTableDrawer_302_1_2_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_SideTableDrawer_302_1_2_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_SideTableDrawer_302_1_2_0/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/LightWoodCounters.jpg@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_302_1_2_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_302_1_2_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_SideTableDrawer_302_1_2_1"
        {
            token outputs:surface.connect = </root/_materials/M_SideTableDrawer_302_1_2_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_SideTableDrawer_302_1_2_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_SideTableDrawer_302_1_2_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_302_1_2_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_302_1_2_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

