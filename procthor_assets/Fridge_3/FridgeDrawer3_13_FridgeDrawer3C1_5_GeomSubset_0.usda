#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "FridgeDrawer3_13_FridgeDrawer3C1_5_GeomSubset_0"
    {
        def Mesh "FridgeDrawer3_13_FridgeDrawer3C1_5_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 52, 53, 70, 63, 58, 37, 41, 57, 63, 34, 35, 62, 62, 35, 36, 64, 57, 41, 40, 69, 71, 38, 39, 70, 69, 40, 38, 71, 64, 36, 37, 58, 70, 39, 34, 63, 28, 34, 39, 29, 58, 77, 76, 64, 71, 79, 78, 69, 71, 70, 53, 80, 79, 57, 69, 78, 81, 62, 64, 76, 82, 62, 82, 83, 52, 63, 77, 58, 57, 81, 53, 52, 83, 80, 85, 84, 28, 29, 95, 94, 93, 92, 35, 34, 28, 84, 88, 89, 36, 35, 88, 40, 41, 86, 90, 38, 91, 85, 29, 39, 91, 38, 40, 90, 37, 36, 89, 87, 41, 37, 92, 93, 37, 87, 95, 92, 87, 86, 94, 95, 86, 41, 93, 94]
            rel material:binding = </root/_materials/M_FridgeDrawer3C1_0>
            normal3f[] normals = [(0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (-0.000002756482, 0.9352709, -0.3539325), (0.00000442937, 0.9352702, -0.3539345), (0, 0.9598981, -0.2803489), (0, 0.9598981, -0.2803489), (-0.04068859, 0.07082164, -0.99665886), (-0.027096612, 0.054194003, -0.9981627), (0.02709753, 0.05419405, -0.9981626), (0.040688723, 0.0708211, -0.9966588), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.002095025, -0.00009994849, -0.99999785), (-0.00079575554, -2.2700988e-7, -0.9999997), (0.040688723, 0.0708211, -0.9966588), (0.02709753, 0.05419405, -0.9981626), (0.0020968579, -0.000099889236, -0.9999979), (0.00079759955, -2.6857015e-7, -0.9999997), (-9.2164576e-8, 0, -1), (-9.3554405e-8, 0, -1), (-9.355437e-8, 0, -1), (-9.445934e-8, 0, -1), (0.00079759955, -2.6857015e-7, -0.9999997), (0.0020968579, -0.000099889236, -0.9999979), (-9.3554405e-8, 0, -1), (-9.2164576e-8, 0, -1), (-0.00079575554, -2.2700988e-7, -0.9999997), (-0.002095025, -0.00009994849, -0.99999785), (-0.027096612, 0.054194003, -0.9981627), (-0.04068859, 0.07082164, -0.99665886), (-9.445934e-8, 0, -1), (-9.355437e-8, 0, -1), (0, 0, -1), (0, 0, -1), (8.481711e-9, -0.9815629, 0.19113907), (0, -1, 0), (0, -1, 0), (0, -0.9815629, 0.19113907), (0.9995595, 0.012049391, 0.027122531), (0.9995718, 0.012392202, 0.026508797), (0.9996577, -0.0029119742, 0.025999626), (0.99967724, -0.00039000693, 0.025401263), (-0.9994669, -0.008521492, 0.031514715), (-0.9993198, -0.010625982, 0.035309542), (-0.9996604, -0.0029093525, 0.025899276), (-0.9996748, -0.00040442357, 0.025498955), (-0.9994669, -0.008521492, 0.031514715), (-0.9931819, -0.079145096, 0.08559074), (-0.9931819, -0.079145096, 0.08559074), (-0.9939837, -0.08009821, 0.074703455), (-0.9993198, -0.010625982, 0.035309542), (-0.999559, 0.0120475255, 0.027142873), (-0.9996748, -0.00040442357, 0.025498955), (-0.9996604, -0.0029093525, 0.025899276), (-0.9995716, 0.012391288, 0.02651777), (0.99946696, -0.008520599, 0.03151284), (0.99967724, -0.00039000693, 0.025401263), (0.9996577, -0.0029119742, 0.025999626), (0.9993199, -0.0106316805, 0.03530987), (0.99946696, -0.008520599, 0.03151284), (0.9993199, -0.0106316805, 0.03530987), (0.99398434, -0.08009883, 0.074694626), (0.9931825, -0.07915581, 0.08557355), (0.9931825, -0.07915581, 0.08557355), (0, -0.982317, -0.1872254), (0, -0.98231685, -0.1872263), (0, -0.98231685, -0.1872263), (0, -0.982317, -0.18722539), (0.00000442937, 0.9352702, -0.3539345), (-0.000002756482, 0.9352709, -0.3539325), (0, 0.8445973, -0.53540206), (0, 0.8445973, -0.53540206), (0, -0.8370179, 0.54717565), (0, -0.8370179, 0.54717565), (8.481711e-9, -0.9815629, 0.19113907), (0, -0.9815629, 0.19113907), (0, 0.98568624, 0.16859014), (0, 0.98568624, 0.16859014), (0, 0.98568624, 0.16859014), (0, 0.98568624, 0.16859014), (-1, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-1, 0, 0), (-1, -0.0000021855462, 0), (-1, -0.0000021490814, 0), (-1, 0, 0), (-1, 0, 0), (-1, -0.0000021855462, 0), (1, 0, 0), (1, 0, 0), (1, -2.636399e-10, 0), (1, -2.1366049e-10, 0), (1, -4.3602166e-9, 0), (1, -2.1801083e-9, 0), (1, -5.9673626e-9, 0), (1, -8.720433e-9, 0), (1, -8.720433e-9, 0), (1, -2.1801083e-9, 0), (1, -4.3602166e-9, 0), (1, 0, 0), (1, -2.1366049e-10, 0), (-1, 0, 0), (-1, 0, 0), (-1, -0.0000021490814, 0), (-1, 4.4994543e-8, 0), (0.02709753, 0.05419405, -0.9981626), (-0.027096612, 0.054194003, -0.9981627), (0, 0, -0.99999994), (0, 0, -0.99999994), (-1, 0, 0), (-1, 4.4994543e-8, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, -2.636399e-10, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.000164, 0.030013, -0.999793), (-0.000173, 0.030013, -0.999793), (-0.000164, 0.030023, -0.999793), (-0.000173, 0.030023, -0.999793), (-0.000164, 0.030013, -0.999793), (-0.000173, 0.030013, -0.999793), (-0.000164, 0.030023, -0.999793), (-0.000173, 0.030023, -0.999793), (-0.000164, 0.030013, -0.999793), (-0.000173, 0.030013, -0.999793), (-0.000164, 0.030023, -0.999793), (-0.000173, 0.030023, -0.999793), (-0.000164, 0.030013, -0.999793), (-0.000173, 0.030013, -0.999793), (-0.000164, 0.030023, -0.999793), (-0.000173, 0.030023, -0.999793), (-0.000164, 0.030013, -0.999793), (-0.000173, 0.030013, -0.999793), (-0.000164, 0.030023, -0.999793), (-0.000173, 0.030023, -0.999793), (-0.000164, 0.030013, -0.999793), (-0.000173, 0.030013, -0.999793), (-0.000164, 0.030023, -0.999793), (-0.000173, 0.030023, -0.999793), (-0.000164, 0.030013, -0.999793), (-0.000173, 0.030013, -0.999793), (-0.000164, 0.030023, -0.999793), (-0.000173, 0.030023, -0.999793), (0.474972, 0.153942, 0.057857), (0.029339, 0.153942, 0.057857), (0.474972, 0.079972, -0.055296), (0.474972, 0.074708, -0.058145), (0.029339, 0.074708, -0.058145), (0.029339, 0.079972, -0.055296), (0.474972, 0.153942, 0.065618), (0.474972, 0.079972, 0.065618), (0.474972, 0.074708, 0.065618), (0.474972, -0.193793, 0.065618), (0.029339, 0.079972, 0.065618), (0.029339, 0.153942, 0.065618), (0.029339, 0.074708, 0.065618), (0.029339, -0.193793, 0.065618), (0.029339, -0.154604, -0.058145), (0.029339, -0.176346, -0.036402), (0.474972, -0.176346, -0.036402), (0.474972, -0.154604, -0.058145), (0.474972, -0.174691, -0.044722), (0.029339, -0.174691, -0.044722), (0.474972, -0.169978, -0.051776), (0.029339, -0.169978, -0.051776), (0.474972, -0.162924, -0.05649), (0.029339, -0.162924, -0.05649), (0.47013, 0.145047, 0.060506), (0.034181, 0.145047, 0.060506), (0.036855, 0.075038, -0.049934), (0.467456, 0.075038, -0.049934), (0.034021, -0.167139, -0.0347), (0.036741, -0.186497, 0.066866), (0.46757, -0.186497, 0.066866), (0.47029, -0.167139, -0.0347), (0.036855, 0.07292, -0.05108), (0.467456, 0.07292, -0.05108), (0.464503, 0.079972, 0.065618), (0.46757, 0.14654, 0.065618), (0.464503, 0.074708, 0.065618), (0.034093, -0.166075, -0.041154), (0.034093, -0.163383, -0.045181), (0.034093, -0.159355, -0.047873), (0.034038, -0.153687, -0.048836), (0.039807, 0.074708, 0.065618), (0.036741, 0.14654, 0.065618), (0.039807, 0.079972, 0.065618), (0.470272, -0.153687, -0.048836), (0.470217, -0.159355, -0.047873), (0.470217, -0.163383, -0.045181), (0.470217, -0.166075, -0.041154), (0.465102, 0.074345, 0.041939), (0.468237, -0.181746, 0.041939), (0.039208, 0.074345, 0.041939), (0.039202, 0.078961, 0.041939), (0.03463, 0.133277, 0.041939), (0.036073, -0.181746, 0.041939), (0.465108, 0.078961, 0.041939), (0.46968, 0.133277, 0.041939), (0.474972, 0.143536, 0.041939), (0.029339, 0.143536, 0.041939), (0.029339, -0.189744, 0.041939), (0.474972, -0.189744, 0.041939), (0.474972, 0.079972, 0.041939), (0.474972, 0.074708, 0.041939), (0.029339, 0.074708, 0.041939), (0.029339, 0.079972, 0.041939), (0.474972, -0.208556, 0.065618), (0.029339, -0.208556, 0.065618), (0.029339, -0.204506, 0.041939), (0.474972, -0.204506, 0.041939)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-169.52118, -113.841515), (-169.5211, -113.841515), (-169.5211, -113.84144), (-169.52118, -113.84144), (-170.17819, 0.68334), (-170.17819, -0.592131), (-170.16322, -0.584641), (-170.16322, 0.67585), (-171.10907, 0.641855), (-171.12895, 0.662054), (-171.12895, -0.553958), (-171.10907, -0.533759), (-170.20027, 0.641855), (-170.18008, 0.662054), (-170.38193, 0.662054), (-170.38193, 0.633489), (-170.38193, 0.633489), (-170.38193, 0.662054), (-170.39627, 0.662054), (-170.39627, 0.633489), (-171.10907, -0.533759), (-171.12895, -0.553958), (-170.39627, -0.553958), (-170.39627, -0.525393), (-170.38193, -0.525393), (-170.38193, -0.553958), (-170.18008, -0.553958), (-170.20027, -0.533759), (-170.39627, -0.525393), (-170.39627, -0.553958), (-170.38193, -0.553958), (-170.38193, -0.525393), (-170.39627, 0.633489), (-170.39627, 0.662054), (-171.12895, 0.662054), (-171.10907, 0.641855), (-170.20027, -0.533759), (-170.18008, -0.553958), (-170.18008, 0.662054), (-170.20027, 0.641855), (-170.34265, 0.699619), (-170.36513, 0.699619), (-170.36513, -0.591523), (-170.34265, -0.591523), (-169.96336, 0.409894), (-170.03134, 0.39694), (-170.03134, -0.301304), (-169.96677, -0.302293), (-169.9153, 0.228367), (-169.97987, 0.225611), (-169.97987, 0.213027), (-169.9153, 0.214016), (-169.9153, 0.228367), (-169.9153, 0.40985), (-169.92924, 0.405781), (-169.97987, 0.373693), (-169.97987, 0.225611), (-169.9119, -0.498102), (-169.9153, 0.214016), (-169.97987, 0.213027), (-169.97987, -0.48515), (-169.96677, -0.316645), (-169.96677, -0.302293), (-170.03134, -0.301304), (-170.03134, -0.313889), (-169.96677, -0.316645), (-170.03134, -0.313889), (-170.03134, -0.461985), (-169.98068, -0.494076), (-169.96677, -0.498146), (-170.1132, 0.636256), (-170.18173, 0.634421), (-170.18173, -0.549812), (-170.1132, -0.551648), (-170.17819, -0.592131), (-170.17819, 0.68334), (-170.2325, 0.682025), (-170.2325, -0.590816), (-170.29654, -0.591523), (-170.29654, 0.699619), (-170.34265, 0.699619), (-170.34265, -0.591523), (-170.314, 0.665529), (-170.314, -0.557432), (-170.24904, -0.557432), (-170.24904, 0.665529), (-170.06482, 0.273808), (-170.06482, 0.475315), (-170.08597, 0.475315), (-170.12933, 0.446969), (-170.12933, 0.273808), (-170.12933, 0.259468), (-170.06482, 0.259468), (-170.06482, 0.273808), (-170.12933, 0.273808), (-170.0155, -0.296394), (-170.0155, 0.435178), (-170.08002, 0.424145), (-170.08002, -0.296394), (-170.0155, -0.310736), (-170.08002, -0.310736), (-170.08002, -0.483927), (-170.03667, -0.512279), (-170.0155, -0.512279), (-170.08002, -0.310736), (-170.0155, -0.310736), (-170.0155, -0.296394), (-170.08002, -0.296394), (-170.06482, -0.471975), (-170.06482, 0.259468), (-170.12933, 0.259468), (-170.12933, -0.460944), (-171.12895, -0.553958), (-171.12895, 0.662054), (-171.16925, 0.662054), (-171.16925, -0.553958), (-170.06482, -0.471975), (-170.12933, -0.460944), (-170.12933, -0.50116), (-170.06482, -0.512192), (-170.26007, 0.661188), (-170.26007, -0.553092), (-170.21985, -0.553092), (-170.21985, 0.661188), (-170.08002, 0.424145), (-170.0155, 0.435178), (-170.0155, 0.475402), (-170.08002, 0.464368)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer3C1_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer3C1_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.1834451, 0.21323532, 0.21323532)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer3C1_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge.tga@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer3C1_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

