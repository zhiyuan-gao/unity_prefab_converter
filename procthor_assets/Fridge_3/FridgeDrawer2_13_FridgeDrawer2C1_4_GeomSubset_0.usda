#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "FridgeDrawer2_13_FridgeDrawer2C1_4_GeomSubset_0"
    {
        def Mesh "FridgeDrawer2_13_FridgeDrawer2C1_4_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 52, 53, 70, 63, 58, 37, 41, 57, 63, 34, 35, 62, 62, 35, 36, 64, 57, 41, 40, 69, 71, 38, 39, 70, 69, 40, 38, 71, 64, 36, 37, 58, 70, 39, 34, 63, 28, 34, 39, 29, 58, 77, 76, 64, 71, 79, 78, 69, 71, 70, 53, 80, 79, 57, 69, 78, 81, 62, 64, 76, 82, 62, 82, 83, 52, 63, 77, 58, 57, 81, 53, 52, 83, 80, 85, 84, 28, 29, 95, 94, 93, 92, 35, 34, 28, 84, 88, 89, 36, 35, 88, 40, 41, 86, 90, 38, 91, 85, 29, 39, 91, 38, 40, 90, 37, 36, 89, 87, 41, 37, 92, 93, 37, 87, 95, 92, 87, 86, 94, 95, 86, 41, 93, 94]
            rel material:binding = </root/_materials/M_FridgeDrawer2C1_0>
            normal3f[] normals = [(0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0.0000025919871, -0.8660896, 0.49988884), (-0.0000037252903, -0.86608946, 0.499889), (0, -0.95989895, 0.2803463), (0, -0.95989895, 0.2803463), (-0.030002026, -0.096790165, 0.99485254), (-0.009097143, -0.028798588, 0.99954385), (0.00909732, -0.028798588, 0.99954385), (0.030000301, -0.09678934, 0.99485254), (-0.0000015113492, 0, 1), (-0.00000149687, 0, 1), (-0.0000014968704, 0, 1), (-0.0000014746332, 0, 1), (-0.0000014746332, 0, 1), (-0.0000014968704, 0, 1), (-0.06910506, 0.0026984313, 0.9976057), (-0.06909835, 0.0026982254, 0.9976062), (0.030000301, -0.09678934, 0.99485254), (0.00909732, -0.028798588, 0.99954385), (0.06920183, 0.0026989486, 0.99759895), (0.0690987, 0.002698197, 0.9976062), (7.373161e-7, 0, 1), (7.484347e-7, 0, 1), (7.4843473e-7, 0, 1), (7.55674e-7, 0, 1), (0.0690987, 0.002698197, 0.9976062), (0.06920183, 0.0026989486, 0.99759895), (7.484347e-7, 0, 1), (7.373161e-7, 0, 1), (-0.06909835, 0.0026982254, 0.9976062), (-0.06910506, 0.0026984313, 0.9976057), (-0.009097143, -0.028798588, 0.99954385), (-0.030002026, -0.096790165, 0.99485254), (7.55674e-7, 0, 1), (7.4843473e-7, 0, 1), (-0.00000149687, 0, 1), (-0.0000015113492, 0, 1), (-1.08566e-8, 0.9155185, -0.40227595), (0, 1, 0), (0, 1, 0), (0, 0.9155185, -0.40227595), (0.9995596, -0.01204554, -0.027122173), (0.9995719, -0.012389203, -0.026506143), (0.9995853, -0.012381125, -0.025998788), (0.999563, -0.011808625, -0.02710023), (-0.99397177, 0.07357614, -0.081280455), (-0.9961037, 0.0746889, -0.046894684), (-0.9995854, -0.0123768, -0.025998885), (-0.99956304, -0.0118021425, -0.027099308), (-0.99397177, 0.07357614, -0.081280455), (-0.99318427, 0.07913892, -0.08556895), (-0.99318427, 0.07913892, -0.08556895), (-0.99486476, 0.081297666, -0.060288604), (-0.9961037, 0.0746889, -0.046894684), (-0.9995595, -0.012045832, -0.027122168), (-0.99956304, -0.0118021425, -0.027099308), (-0.9995854, -0.0123768, -0.025998885), (-0.9995824, -0.01273994, -0.02593391), (0.9939672, 0.07360787, -0.081308864), (0.999563, -0.011808625, -0.02710023), (0.9995853, -0.012381125, -0.025998788), (0.9961039, 0.07468461, -0.046895623), (0.9939672, 0.07360787, -0.081308864), (0.9961039, 0.07468461, -0.046895623), (0.9948648, 0.081297696, -0.06028827), (0.99318427, 0.07913898, -0.08556847), (0.99318427, 0.07913898, -0.08556847), (0, 0.98231703, 0.18722509), (0, 0.9823169, 0.18722552), (0, 0.9823169, 0.18722552), (0, 0.98231703, 0.18722509), (-0.0000037252903, -0.86608946, 0.499889), (0.0000025919871, -0.8660896, 0.49988884), (0, -0.8445973, 0.5354022), (0, -0.8445972, 0.53540224), (0, 0.8370178, -0.5471757), (0, 0.8370178, -0.5471757), (-1.08566e-8, 0.9155185, -0.40227595), (0, 0.9155185, -0.40227595), (0, -0.9856862, -0.16859023), (0, -0.9856862, -0.16859023), (0, -0.9856862, -0.16859023), (0, -0.9856862, -0.16859023), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, -3.1522458e-8, 0), (-1, -3.3801523e-8, 0), (-1, 0, 0), (-1, 0, 0), (-1, -3.1522458e-8, 0), (1, 0, 0), (1, 0, 0), (1, 7.733518e-9, 0), (1, 6.267433e-9, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 6.267433e-9, 0), (-1, 0, 0), (-1, 0, 0), (-1, -3.3801523e-8, 0), (-1, -2.812186e-9, 0), (0.00909732, -0.028798588, 0.99954385), (-0.009097143, -0.028798588, 0.99954385), (0, 0, 0.99999994), (0, 0, 0.99999994), (-1, 0, 0), (-1, -2.812186e-9, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 7.733518e-9, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.000164, 0.030013, -0.999793), (0.000173, 0.030013, -0.999793), (0.000164, 0.030023, -0.999793), (0.000173, 0.030023, -0.999793), (0.000164, 0.030013, -0.999793), (0.000173, 0.030013, -0.999793), (0.000164, 0.030023, -0.999793), (0.000173, 0.030023, -0.999793), (0.000164, 0.030013, -0.999793), (0.000173, 0.030013, -0.999793), (0.000164, 0.030023, -0.999793), (0.000173, 0.030023, -0.999793), (0.000164, 0.030013, -0.999793), (0.000173, 0.030013, -0.999793), (0.000164, 0.030023, -0.999793), (0.000173, 0.030023, -0.999793), (0.000164, 0.030013, -0.999793), (0.000173, 0.030013, -0.999793), (0.000164, 0.030023, -0.999793), (0.000173, 0.030023, -0.999793), (0.000164, 0.030013, -0.999793), (0.000173, 0.030013, -0.999793), (0.000164, 0.030023, -0.999793), (0.000173, 0.030023, -0.999793), (0.000164, 0.030013, -0.999793), (0.000173, 0.030013, -0.999793), (0.000164, 0.030023, -0.999793), (0.000173, 0.030023, -0.999793), (0.02965, 0.153942, 0.224275), (0.475283, 0.153942, 0.224275), (0.02965, 0.079972, 0.111122), (0.02965, 0.074708, 0.108274), (0.475283, 0.074708, 0.108274), (0.475283, 0.079972, 0.111122), (0.02965, 0.153942, 0.232036), (0.02965, 0.079972, 0.232036), (0.02965, 0.074708, 0.232036), (0.02965, -0.193793, 0.232036), (0.475283, 0.079972, 0.232036), (0.475283, 0.153942, 0.232036), (0.475283, 0.074708, 0.232036), (0.475283, -0.193793, 0.232036), (0.475283, -0.154604, 0.108274), (0.475283, -0.176346, 0.130015), (0.02965, -0.176346, 0.130016), (0.02965, -0.154604, 0.108274), (0.02965, -0.174691, 0.121696), (0.475283, -0.174691, 0.121696), (0.02965, -0.169978, 0.114642), (0.475283, -0.169978, 0.114642), (0.02965, -0.162924, 0.109929), (0.475283, -0.162924, 0.109929), (0.034492, 0.145047, 0.226924), (0.470441, 0.145047, 0.226924), (0.467767, 0.075038, 0.116484), (0.037166, 0.075038, 0.116484), (0.470601, -0.167139, 0.131718), (0.467881, -0.186497, 0.233284), (0.037052, -0.186497, 0.233284), (0.034332, -0.167139, 0.131718), (0.467767, 0.07292, 0.115338), (0.037166, 0.07292, 0.115338), (0.040118, 0.079972, 0.232036), (0.037052, 0.14654, 0.232036), (0.040118, 0.074708, 0.232036), (0.470528, -0.166075, 0.125265), (0.470528, -0.163383, 0.121237), (0.470528, -0.159355, 0.118545), (0.470583, -0.153687, 0.117583), (0.464815, 0.074708, 0.232036), (0.467881, 0.14654, 0.232036), (0.464815, 0.079972, 0.232036), (0.03435, -0.153687, 0.117583), (0.034405, -0.159355, 0.118545), (0.034405, -0.163383, 0.121237), (0.034405, -0.166075, 0.125265), (0.039519, 0.074345, 0.208357), (0.036385, -0.181746, 0.208357), (0.465414, 0.074345, 0.208357), (0.46542, 0.078961, 0.208357), (0.469991, 0.133277, 0.208357), (0.468548, -0.181746, 0.208357), (0.039513, 0.078961, 0.208357), (0.034942, 0.133277, 0.208357), (0.02965, 0.143536, 0.208357), (0.475283, 0.143536, 0.208357), (0.475283, -0.189744, 0.208357), (0.02965, -0.189744, 0.208357), (0.02965, 0.079972, 0.208357), (0.02965, 0.074708, 0.208357), (0.475283, 0.074708, 0.208357), (0.475283, 0.079972, 0.208357), (0.02965, -0.208556, 0.232036), (0.475283, -0.208556, 0.232036), (0.475283, -0.204506, 0.208357), (0.02965, -0.204506, 0.208357)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-169.52118, -113.841515), (-169.5211, -113.841515), (-169.5211, -113.84144), (-169.52118, -113.84144), (-170.17819, 0.68338), (-170.17819, -0.592171), (-170.16322, -0.584682), (-170.16322, 0.675889), (-171.10904, 0.641832), (-171.12894, 0.66203), (-171.12894, -0.553934), (-171.10904, -0.533737), (-170.20029, 0.641832), (-170.1801, 0.66203), (-170.38194, 0.66203), (-170.38194, 0.633466), (-170.38194, 0.633466), (-170.38194, 0.66203), (-170.39629, 0.66203), (-170.39629, 0.633466), (-171.10904, -0.533737), (-171.12894, -0.553934), (-170.39629, -0.553934), (-170.39629, -0.52537), (-170.38194, -0.52537), (-170.38194, -0.553934), (-170.1801, -0.553934), (-170.20029, -0.533737), (-170.39629, -0.52537), (-170.39629, -0.553934), (-170.38194, -0.553934), (-170.38194, -0.52537), (-170.39629, 0.633466), (-170.39629, 0.66203), (-171.12894, 0.66203), (-171.10904, 0.641832), (-170.20029, -0.533737), (-170.1801, -0.553934), (-170.1801, 0.66203), (-170.20029, 0.641832), (-170.34265, 0.699623), (-170.36513, 0.699623), (-170.36513, -0.591527), (-170.34265, -0.591527), (-169.96336, 0.409866), (-170.03134, 0.396914), (-170.03134, -0.301289), (-169.96677, -0.302278), (-169.9153, 0.22839), (-169.97987, 0.225633), (-169.97987, 0.213049), (-169.9153, 0.214038), (-169.9153, 0.22839), (-169.9153, 0.409888), (-169.92924, 0.405818), (-169.97987, 0.373728), (-169.97987, 0.225633), (-169.9119, -0.49814), (-169.9153, 0.214038), (-169.97987, 0.213049), (-169.97987, -0.485187), (-169.96677, -0.316629), (-169.96677, -0.302278), (-170.03134, -0.301289), (-170.03134, -0.313872), (-169.96677, -0.316629), (-170.03134, -0.313872), (-170.03134, -0.46196), (-169.98068, -0.494049), (-169.96677, -0.498119), (-170.1132, 0.636288), (-170.18173, 0.634452), (-170.18173, -0.549845), (-170.1132, -0.55168), (-170.17819, -0.592171), (-170.17819, 0.68338), (-170.2325, 0.682064), (-170.2325, -0.590856), (-170.29652, -0.591527), (-170.29652, 0.699623), (-170.34265, 0.699623), (-170.34265, -0.591527), (-170.314, 0.665545), (-170.314, -0.557449), (-170.24904, -0.557449), (-170.24904, 0.665545), (-170.06482, 0.273833), (-170.06482, 0.475357), (-170.08597, 0.475357), (-170.12933, 0.447008), (-170.12933, 0.273833), (-170.12933, 0.259492), (-170.06482, 0.259492), (-170.06482, 0.273833), (-170.12933, 0.273833), (-170.0155, -0.296392), (-170.0155, 0.435175), (-170.08002, 0.424142), (-170.08002, -0.296392), (-170.0155, -0.310734), (-170.08002, -0.310734), (-170.08002, -0.483924), (-170.03667, -0.512275), (-170.0155, -0.512275), (-170.08002, -0.310734), (-170.0155, -0.310734), (-170.0155, -0.296392), (-170.08002, -0.296392), (-170.06482, -0.472014), (-170.06482, 0.259492), (-170.12933, 0.259492), (-170.12933, -0.460982), (-171.12894, -0.553934), (-171.12894, 0.66203), (-171.16924, 0.66203), (-171.16924, -0.553934), (-170.06482, -0.472014), (-170.12933, -0.460982), (-170.12933, -0.501201), (-170.06482, -0.512234), (-170.26007, 0.661242), (-170.26007, -0.553146), (-170.21985, -0.553146), (-170.21985, 0.661242), (-170.08002, 0.424142), (-170.0155, 0.435175), (-170.0155, 0.475399), (-170.08002, 0.464365)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer2C1_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2C1_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.1834451, 0.21323532, 0.21323532)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2C1_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge.tga@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2C1_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

