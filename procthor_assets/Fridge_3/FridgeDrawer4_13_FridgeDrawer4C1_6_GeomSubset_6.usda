#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "FridgeDrawer4_13_FridgeDrawer4C1_6_GeomSubset_6"
    {
        def Mesh "FridgeDrawer4_13_FridgeDrawer4C1_6_GeomSubset_6"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4]
            int[] faceVertexIndices = [24, 25, 27, 26]
            rel material:binding = </root/_materials/M_FridgeDrawer4C1_6>
            normal3f[] normals = [(0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.000164, 0.030013, -0.999793), (0.000173, 0.030013, -0.999793), (0.000164, 0.030023, -0.999793), (0.000173, 0.030023, -0.999793), (0.000164, 0.030013, -0.999793), (0.000173, 0.030013, -0.999793), (0.000164, 0.030023, -0.999793), (0.000173, 0.030023, -0.999793), (0.000164, 0.030013, -0.999793), (0.000173, 0.030013, -0.999793), (0.000164, 0.030023, -0.999793), (0.000173, 0.030023, -0.999793), (0.000164, 0.030013, -0.999793), (0.000173, 0.030013, -0.999793), (0.000164, 0.030023, -0.999793), (0.000173, 0.030023, -0.999793), (0.000164, 0.030013, -0.999793), (0.000173, 0.030013, -0.999793), (0.000164, 0.030023, -0.999793), (0.000173, 0.030023, -0.999793), (0.000164, 0.030013, -0.999793), (0.000173, 0.030013, -0.999793), (0.000164, 0.030023, -0.999793), (0.000173, 0.030023, -0.999793), (0.000164, 0.030013, -0.999793), (0.000173, 0.030013, -0.999793), (0.000164, 0.030023, -0.999793), (0.000173, 0.030023, -0.999793), (0.02965, 0.153942, 0.057857), (0.475283, 0.153942, 0.057857), (0.02965, 0.079972, -0.055296), (0.02965, 0.074708, -0.058145), (0.475283, 0.074708, -0.058145), (0.475283, 0.079972, -0.055296), (0.02965, 0.153942, 0.065618), (0.02965, 0.079972, 0.065618), (0.02965, 0.074708, 0.065618), (0.02965, -0.193793, 0.065618), (0.475283, 0.079972, 0.065618), (0.475283, 0.153942, 0.065618), (0.475283, 0.074708, 0.065618), (0.475283, -0.193793, 0.065618), (0.475283, -0.154604, -0.058145), (0.475283, -0.176346, -0.036402), (0.02965, -0.176346, -0.036402), (0.02965, -0.154604, -0.058145), (0.02965, -0.174691, -0.044722), (0.475283, -0.174691, -0.044722), (0.02965, -0.169978, -0.051776), (0.475283, -0.169978, -0.051776), (0.02965, -0.162924, -0.05649), (0.475283, -0.162924, -0.05649), (0.034492, 0.145047, 0.060506), (0.470441, 0.145047, 0.060506), (0.467767, 0.075038, -0.049935), (0.037166, 0.075038, -0.049935), (0.470601, -0.167139, -0.0347), (0.467881, -0.186497, 0.066866), (0.037052, -0.186497, 0.066866), (0.034332, -0.167139, -0.0347), (0.467767, 0.07292, -0.05108), (0.037166, 0.07292, -0.05108), (0.040118, 0.079972, 0.065618), (0.037052, 0.14654, 0.065618), (0.040118, 0.074708, 0.065618), (0.470528, -0.166075, -0.041153), (0.470528, -0.163383, -0.045181), (0.470528, -0.159355, -0.047873), (0.470583, -0.153687, -0.048836), (0.464815, 0.074708, 0.065618), (0.467881, 0.14654, 0.065618), (0.464815, 0.079972, 0.065618), (0.03435, -0.153687, -0.048836), (0.034405, -0.159355, -0.047873), (0.034405, -0.163383, -0.045181), (0.034405, -0.166075, -0.041153), (0.039519, 0.074345, 0.041939), (0.036385, -0.181746, 0.041939), (0.465414, 0.074345, 0.041939), (0.46542, 0.078961, 0.041939), (0.469991, 0.133277, 0.041939), (0.468548, -0.181746, 0.041939), (0.039513, 0.078961, 0.041939), (0.034942, 0.133277, 0.041939), (0.02965, 0.143536, 0.041939), (0.475283, 0.143536, 0.041939), (0.475283, -0.189744, 0.041939), (0.02965, -0.189744, 0.041939), (0.02965, 0.079972, 0.041939), (0.02965, 0.074708, 0.041939), (0.475283, 0.074708, 0.041939), (0.475283, 0.079972, 0.041939), (0.02965, -0.208556, 0.065618), (0.475283, -0.208556, 0.065618), (0.475283, -0.204506, 0.041939), (0.02965, -0.204506, 0.041939)]
            bool[] primvars:sharp_face = [0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-5.253075, -117.71076), (-3.54152, -117.71076), (-3.54152, -115.99921), (-5.253075, -115.99921)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer4C1_6"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer4C1_6/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer4C1_6/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer4C1_6/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Readout_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer4C1_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer4C1_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

