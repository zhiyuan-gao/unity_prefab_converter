#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "CountertopC_8X6"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "CountertopC_8X6" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-1.217872, -0.923647, -0.517404), (1.220527, 0.925153, 0.418626)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 3, 3, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [44, 45, 9, 10, 0, 15, 16, 4, 2, 3, 6, 5, 0, 1, 8, 7, 3, 2, 10, 9, 14, 15, 0, 7, 6, 3, 11, 12, 3, 9, 13, 11, 2, 15, 14, 10, 16, 15, 2, 5, 46, 30, 29, 47, 26, 1, 0, 4, 4, 27, 28, 26, 6, 29, 30, 5, 32, 27, 4, 16, 6, 12, 31, 29, 5, 30, 32, 16, 7, 8, 45, 44, 8, 13, 9, 45, 14, 7, 44, 10, 27, 32, 30, 46, 31, 28, 47, 29, 28, 27, 46, 47, 12, 11, 17, 18, 11, 13, 19, 17, 19, 13, 8, 21, 20, 22, 23, 36, 37, 38, 39, 18, 17, 20, 21, 23, 22, 25, 24, 12, 18, 33, 31, 33, 28, 31, 33, 34, 28, 26, 24, 25, 1, 40, 41, 42, 43, 19, 8, 35, 19, 35, 37, 36, 34, 33, 40, 43, 21, 23, 41, 40, 23, 24, 42, 41, 24, 26, 43, 42, 26, 28, 34, 43, 8, 1, 37, 35, 1, 25, 38, 37, 25, 22, 39, 38, 22, 20, 36, 39, 17, 19, 36, 20, 33, 18, 21, 40]
            rel material:binding = </root/_materials/M_CountertopC_8X6_0>
            normal3f[] normals = [(0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-3.2950954e-8, 0, -1), (1.1149632e-7, 0, -1), (3.7068958e-8, 0, -1), (4.9426493e-8, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 5.1835514e-8, 0), (-1, 0, 0), (-1, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (3.9217826e-7, 0, -1), (1.1149632e-7, 0, -1), (-3.2950954e-8, 0, -1), (-3.295074e-8, 0, -1), (1.5033824e-7, 0, 1), (0, 0, 1), (0, 0, 1), (1.5030005e-7, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (5.448977e-7, 0, -1), (1.1149632e-7, 0, -1), (3.9217826e-7, 0, -1), (5.448744e-7, 0, -1), (3.7068958e-8, 0, -1), (1.1149632e-7, 0, -1), (5.448977e-7, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, -1.524574e-8, 0), (-0.99999994, 8.0165523e-7, 0), (-0.99999994, 8.0165523e-7, 0), (-0.99999994, 8.0165523e-7, 0), (-0.99999994, 8.0165523e-7, 0), (2.4713492e-8, 0, -1), (4.9426284e-8, 0, -1), (4.9426493e-8, 0, -1), (3.7068958e-8, 0, -1), (1.5033824e-7, 0, 1), (1.5030005e-7, 0, 1), (1.5033346e-7, 0, 1), (1.5031453e-7, 0, 1), (0, 0, -1), (0, 0, -1), (2.4713492e-8, 0, -1), (3.7068958e-8, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (3.9217826e-7, 0, -1), (-3.295074e-8, 0, -1), (0, 0, -1), (5.448744e-7, 0, -1), (4.9426284e-8, 0, -1), (2.4713492e-8, 0, -1), (0, 0, -1), (0, 0, -1), (1.5033346e-7, 0, 1), (0, 0, 1), (0, 0, 1), (1.5031453e-7, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0.0000016742841, 1, 0), (0.0000016742841, 1, 0), (0.0000016742841, 1, 0), (0.0000016742841, 1, 0), (0.0049828133, -0.006910879, 0.99996364), (-0.0049831797, -0.0069107283, 0.99996364), (-0.0049860743, -0.006906748, 0.99996364), (0.0049861534, -0.0069062836, 0.99996364), (-0.00018218836, 0.00020716725, 0.9999999), (0.000182187, 0.00020716786, 1), (0.00018222108, 0.00020712106, 1), (-0.00018222127, 0.0002071221, 0.99999994), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 0.99999994, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-0.0000016742899, 1, 0), (-0.0000016742899, 1, 0), (-0.0000016742899, 1, 0), (-0.0000016742899, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-0.0030457843, -0.0014916377, 0.9999943), (-0.00011216694, -0.002129201, 0.9999978), (-0.00011216694, -0.002129201, 0.9999978), (-0.0048003495, -0.0011741522, 0.9999878), (0.000112167516, -0.0021292036, 0.99999774), (0.0030455948, -0.0014916366, 0.9999943), (0.00497572, -0.0010747418, 0.999987), (0.000112167516, -0.0021292036, 0.99999774), (-0.9999996, 0.00084353675, 0), (-0.9999996, 0.00084353675, 0), (-0.9999996, 0.00084353675, 0), (-0.9999996, 0.00084353675, 0), (-0.00018218836, 0.00020716725, 0.9999999), (-0.00018222127, 0.0002071221, 0.99999994), (-0.00036444212, -0.000043156546, 0.99999994), (-0.00036444212, -0.000043156546, 0.99999994), (1, -4.2001027e-8, 0), (1, -1.524574e-8, 0), (1, -1.7836822e-8, 0), (1, -4.2001027e-8, 0), (1, -1.524574e-8, 0), (1, 0, 0), (1, 0, 0), (1, -1.7836822e-8, 0), (-1, 0, 0), (-1, 5.1835514e-8, 0), (-1, 6.064519e-8, 0), (-1, 0, 0), (-1, 5.1835514e-8, 0), (-1, 1.4280349e-7, 0), (-1, 1.4280349e-7, 0), (-1, 6.064519e-8, 0), (0.00018222108, 0.00020712106, 1), (0.000182187, 0.00020716786, 1), (0.00036444006, -0.00004315631, 0.99999994), (0.00036444006, -0.00004315631, 0.99999994), (0.9999996, 0.000845205, 0), (0.9999996, 0.000845205, 0), (0.9999996, 0.000845205, 0), (0.9999996, 0.000845205, 0), (-0.0049831797, -0.0069107283, 0.99996364), (-0.0030457843, -0.0014916377, 0.9999943), (-0.0048003495, -0.0011741522, 0.9999878), (-0.0049860743, -0.006906748, 0.99996364), (0.0030455948, -0.0014916366, 0.9999943), (0.0049828133, -0.006910879, 0.99996364), (0.0049861534, -0.0069062836, 0.99996364), (0.00497572, -0.0010747418, 0.999987)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(1.220527, 0.925153, 0.418626), (1.220527, 0.925153, 0.388626), (0.610925, 0.315553, 0.418626), (0.610925, 0.315553, 0.388626), (-1.217872, 0.925153, 0.418626), (-0.608274, 0.315553, 0.418626), (-0.608274, 0.315553, 0.388626), (1.220527, -0.903647, 0.418626), (1.220527, -0.903647, 0.388626), (0.610925, -0.923647, 0.388626), (0.610925, -0.923647, 0.418626), (0.630925, 0.335557, 0.388626), (-0.628272, 0.335557, 0.388626), (0.630925, -0.903647, 0.388626), (0.630925, -0.903647, 0.418626), (0.630925, 0.335557, 0.418626), (-0.628272, 0.335557, 0.418626), (0.630925, 0.335557, -0.437404), (-0.628272, 0.335557, -0.437404), (0.630925, -0.903647, -0.437404), (0.649888, 0.354519, -0.437143), (-0.647237, 0.354519, -0.437143), (0.649888, 0.354519, -0.517143), (-0.647237, 0.354519, -0.517143), (-1.217872, 0.925153, -0.517404), (1.220527, 0.925153, -0.517404), (-1.217872, 0.925153, 0.388626), (-1.217872, -0.903647, 0.418626), (-1.217872, -0.903647, 0.388626), (-0.608275, -0.923647, 0.388626), (-0.608275, -0.923647, 0.418626), (-0.628272, -0.903647, 0.388626), (-0.628272, -0.903647, 0.418626), (-0.628272, -0.903647, -0.437404), (-1.217872, -0.903647, -0.437274), (1.220527, -0.903647, -0.437274), (0.650926, -0.873646, -0.437274), (1.220527, -0.873647, -0.437274), (1.220527, -0.873647, -0.517404), (0.650926, -0.873646, -0.517274), (-0.648273, -0.873646, -0.437274), (-0.648273, -0.873646, -0.517274), (-1.217872, -0.873647, -0.517404), (-1.217872, -0.873647, -0.437274), (1.220527, -0.923647, 0.418626), (1.220527, -0.923647, 0.388626), (-1.217872, -0.923647, 0.418626), (-1.217872, -0.923647, 0.388626)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-9.799845, 1.22508), (-9.799845, 1.178206), (-8.847315, 1.178206), (-8.847315, 1.22508), (-11.481721, 1.926125), (-10.560466, 1.004884), (-8.592972, 1.004884), (-7.671725, 1.926124), (-10.360437, 1.209024), (-10.360437, 1.162148), (-8.455483, 1.162148), (-8.455483, 1.209024), (-10.939492, 1.144794), (-10.939492, 1.09792), (-8.08198, 1.09792), (-8.08198, 1.144794), (-8.442579, 1.130035), (-8.442579, 1.176908), (-10.378879, 1.176908), (-10.378879, 1.130035), (-10.560466, -0.931372), (-10.560466, 1.004884), (-11.481721, 1.926125), (-11.481722, -0.931372), (-8.624224, -0.032307), (-10.529214, -0.032307), (-10.560462, -0.063563), (-8.592976, -0.063563), (-10.529214, -0.032307), (-10.529214, 1.903936), (-10.560462, 1.872684), (-10.560462, -0.063563), (-10.529218, 0.973626), (-10.560466, 1.004884), (-10.560466, -0.931372), (-10.529218, -0.962624), (-8.592972, 1.004884), (-10.560466, 1.004884), (-10.529218, 0.973626), (-8.62422, 0.973626), (-8.847342, 1.241138), (-9.799814, 1.241138), (-9.799814, 1.194263), (-8.847342, 1.194263), (-7.67167, 1.128737), (-11.481773, 1.128737), (-11.481776, 1.081864), (-7.671671, 1.081863), (-8.050692, 1.160851), (-10.908277, 1.160851), (-10.908277, 1.113977), (-8.050692, 1.113977), (-10.378859, 1.146092), (-8.442599, 1.146092), (-8.442599, 1.192967), (-10.378859, 1.192967), (-8.592972, -0.931372), (-7.671725, -0.931372), (-7.671725, 1.926124), (-8.592972, 1.004884), (-8.624224, -0.032307), (-8.592976, -0.063563), (-8.592976, 1.872684), (-8.624224, 1.903936), (-8.62422, 0.973626), (-8.62422, -0.962624), (-8.592972, -0.931372), (-8.592972, 1.004884), (-8.08198, 1.144794), (-8.08198, 1.09792), (-8.050729, 1.09792), (-8.050729, 1.144794), (-11.481714, 1.872685), (-10.560462, 1.872684), (-10.529214, 1.903936), (-11.481714, 1.903937), (-10.560466, -0.931372), (-11.481722, -0.931372), (-11.481722, -0.962623), (-10.529218, -0.962624), (-7.671725, -0.931372), (-8.592972, -0.931372), (-8.62422, -0.962624), (-7.671725, -0.962624), (-8.592976, 1.872684), (-7.671733, 1.872684), (-7.671733, 1.903936), (-8.624224, 1.903936), (-10.908277, 1.113977), (-10.908277, 1.160851), (-10.939529, 1.160851), (-10.939529, 1.113977), (-19.134888, 0.724655), (-20.118635, 0.724655), (-20.118635, 0.079319), (-19.134888, 0.079319), (-19.140682, 0.552271), (-20.108809, 0.552271), (-20.108809, -0.093067), (-19.140682, -0.093067), (-19.513987, 0.301153), (-20.15932, 0.301153), (-20.15932, -0.159477), (-19.123888, 0.530481), (-20.137276, 0.530481), (-20.137276, 0.467979), (-19.123888, 0.467979), (-19.588324, 0.301895), (-20.033329, 0.301895), (-20.033329, 0.239296), (-19.588324, 0.239395), (-18.758564, -0.384319), (-19.742313, -0.384319), (-19.75713, -0.399136), (-18.743746, -0.399136), (-18.743748, 0.506764), (-19.757128, 0.506763), (-20.20294, 0.060959), (-18.29794, 0.060959), (-20.10881, 0.379885), (-20.10881, -0.26545), (-19.140682, -0.26545), (-19.140682, 0.379885), (-19.513987, -0.033937), (-20.15932, 0.426687), (-20.15932, -0.033937), (-19.513987, -0.033937), (-19.514088, 0.426687), (-20.15932, 0.426687), (-18.297943, 0.207188), (-18.297943, 0.915022), (-20.20294, 0.915022), (-20.20294, 0.207188), (-20.033329, 0.32472), (-20.033329, 0.26222), (-19.588322, 0.262121), (-19.588322, 0.32472), (-19.513987, 0.301153), (-20.15932, -0.159477), (-19.514088, -0.159477), (-19.742313, 0.583811), (-20.202942, 0.583811), (-20.202942, 0.560373), (-19.757938, 0.560373), (-18.297937, 0.583811), (-18.758564, 0.583811), (-18.742939, 0.560373), (-18.297937, 0.560373), (-20.35691, 0.004988), (-20.35691, -0.057514), (-19.397402, -0.057617), (-19.397402, 0.004885), (-19.424261, 0.468784), (-18.978453, 0.914591), (-20.383768, 0.914591), (-20.383768, 0.469593), (-18.474667, 0.397392), (-18.474667, 1.105228), (-19.879978, 0.459995), (-19.879978, 0.397392), (-18.474667, 1.105228), (-19.903416, 1.105228), (-19.903416, 0.459995), (-19.879978, 0.459995), (-18.846956, 1.200325), (-20.275707, 1.200325), (-18.870394, 0.555092), (-18.846956, 0.555092), (-20.275707, 1.200325), (-20.275707, 0.492491), (-18.870394, 0.492491), (-18.870394, 0.555092), (-18.978455, 0.347847), (-19.424261, 0.793657), (-20.383764, 0.792847), (-20.383766, 0.347847), (-19.397402, -0.0345), (-19.397402, 0.028002), (-20.35691, 0.027901), (-20.35691, -0.034601), (-19.742313, -0.384319), (-19.742313, 0.583811), (-19.757938, 0.560373), (-19.75713, -0.399136), (-18.758564, 0.583811), (-18.758564, -0.384319), (-18.743746, -0.399136), (-18.742939, 0.560373)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_CountertopC_8X6_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
                rel material:binding = </root/_materials/M_CountertopC_8X6_0>
            }

            def GeomSubset "M_CountertopC_8X6_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47]
                rel material:binding = </root/_materials/M_CountertopC_8X6_1>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_CountertopC_8X6_0"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopC_8X6_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopC_8X6_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/marbleBase2.jpg@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopC_8X6_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_CountertopC_8X6_1"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopC_8X6_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopC_8X6_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_CountertopC_8X6_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/DarkWood2.tif@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopC_8X6_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopC_8X6_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

