#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshCountertopIsland_4X3_0_GeomSubset_0"
    {
        def Mesh "MeshCountertopIsland_4X3_0_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 1, 7, 5, 3, 6, 0, 2, 4, 7, 1, 9, 8, 1, 0, 10, 9, 0, 6, 11, 10, 6, 7, 8, 11]
            rel material:binding = </root/_materials/M_CountertopIsland_4X3_0>
            normal3f[] normals = [(0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (8.330263e-7, 0, 1), (8.330263e-7, 0, 1), (8.330263e-7, 0, 1), (8.330263e-7, 0, 1), (8.330263e-7, 0, 1), (-8.330263e-7, 0, 1), (-8.330263e-7, 0, 1), (8.330263e-7, 0, 1), (-8.330263e-7, 0, 1), (-8.330263e-7, 0, 1), (-8.330263e-7, 0, 1), (-8.330263e-7, 0, 1), (-8.330263e-7, 0, 1), (8.330263e-7, 0, 1), (8.330263e-7, 0, 1), (-8.330263e-7, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.6096, -0.456922, 0.389483), (-0.6096, -0.456922, 0.389483), (0.6096, -0.456922, 0.419483), (-0.6096, -0.456922, 0.419483), (0.6096, 0.457478, 0.419483), (-0.6096, 0.457478, 0.419483), (0.6096, 0.457478, 0.389483), (-0.6096, 0.457478, 0.389483), (-0.5896, 0.437478, 0.389483), (-0.5896, -0.436922, 0.389483), (0.5896, -0.436922, 0.389483), (0.5896, 0.437478, 0.389483), (-0.5896, 0.437478, -0.436547), (0.5896, 0.437478, -0.436547), (0.5896, -0.436922, -0.436547), (-0.5896, -0.436922, -0.436547), (-0.5696, 0.417478, -0.436547), (0.5696, 0.417478, -0.436547), (-0.5696, 0.417478, -0.516547), (0.5696, 0.417478, -0.516547), (0.5696, -0.416922, -0.436547), (0.5696, -0.416922, -0.516547), (-0.5696, -0.416922, -0.436547), (-0.5696, -0.416922, -0.516547)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-10.475873, 0.209214), (-8.570864, 0.209214), (-8.570864, 0.256088), (-10.475873, 0.256088), (-10.475867, -0.256192), (-8.570868, -0.256192), (-8.570868, 1.172559), (-10.475867, 1.172559), (-10.475897, 0.660321), (-8.570842, 0.660321), (-8.570842, 0.707194), (-10.475897, 0.707194), (-10.166882, 1.109737), (-8.738091, 1.109737), (-8.738091, 1.15661), (-10.166882, 1.15661), (-10.737584, 1.090152), (-9.308834, 1.090152), (-9.308834, 1.137025), (-10.737584, 1.137025), (-8.570874, 0.194739), (-8.570874, 1.623483), (-8.602124, 1.592233), (-8.602124, 0.225989), (-8.570874, 1.623483), (-10.475863, 1.623483), (-10.444613, 1.592233), (-8.602124, 1.592233), (-10.475863, 1.623483), (-10.475863, 0.194739), (-10.444613, 0.225989), (-10.444613, 1.592233), (-10.475863, 0.194739), (-8.570874, 0.194739), (-8.602124, 0.225989), (-10.444613, 0.225989)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_CountertopIsland_4X3_0"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopIsland_4X3_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopIsland_4X3_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/marbleBase2.jpg@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopIsland_4X3_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

