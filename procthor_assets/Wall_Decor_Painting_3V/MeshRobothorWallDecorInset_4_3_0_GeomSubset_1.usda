#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshRobothorWallDecorInset_4_3_0_GeomSubset_1"
    {
        def Mesh "MeshRobothorWallDecorInset_4_3_0_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [4, 5, 7, 6, 12, 14, 13, 12, 15, 14, 13, 17, 16, 13, 14, 17, 16, 19, 18, 16, 17, 19, 20, 22, 21, 20, 23, 22, 13, 18, 12, 13, 16, 18, 17, 15, 19, 17, 14, 15, 24, 15, 12, 24, 23, 15, 20, 18, 19, 20, 25, 18, 25, 12, 18, 25, 24, 12, 23, 19, 15, 23, 20, 19, 25, 21, 26, 25, 20, 21, 24, 26, 27, 24, 25, 26, 23, 27, 22, 23, 24, 27]
            rel material:binding = </root/_materials/M_RobothorWallDecorInset_4_3_1>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0.0000012695824, -1, 0), (0.0000012695824, -1, 0), (0.0000012695824, -1, 0), (0.0000012695824, -1, 0), (0.0000012695824, -1, 0), (0.0000012695824, -1, 0), (1, 0, 0), (1, 0, 0), (0.99999994, 0, 0), (1, 0, 0), (0.99999994, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 1.2563781e-8), (0, 1, 7.3051034e-8), (0, 1, 1.6055196e-8), (0, 1, 1.2563781e-8), (0, 1, 5.576276e-8), (0, 1, 7.3051034e-8), (0, 1, -5.74326e-8), (0, 1, 0), (0, 1, -7.243649e-8), (0, 1, -5.74326e-8), (0, 1, 7.153056e-11), (0, 1, 0), (0, 1, 7.153056e-11), (0, 1, 1.6055196e-8), (0, 1, 0), (0, 1, 7.153056e-11), (0, 1, 1.2563781e-8), (0, 1, 1.6055196e-8), (0, 1, 5.576276e-8), (0, 1, -7.243649e-8), (0, 1, 7.3051034e-8), (0, 1, 5.576276e-8), (0, 1, -5.74326e-8), (0, 1, -7.243649e-8), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, -0.00018587676, 0), (1, -0.00018587676, 0), (1, -0.00018587676, 0), (1, -0.00018587676, 0), (1, -0.00018587676, 0), (1, -0.00018587676, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.001412, 0.014492, -0.59671), (-0.002003, 0.014492, -0.59671), (-0.001412, 0.015083, -0.59671), (-0.002003, 0.015083, -0.59671), (-0.001412, 0.014492, -0.59671), (-0.002003, 0.014492, -0.59671), (-0.001412, 0.015083, -0.59671), (-0.002003, 0.015083, -0.59671), (-0.001412, 0.014492, -0.59671), (-0.002003, 0.014492, -0.59671), (-0.001412, 0.015083, -0.59671), (-0.002003, 0.015083, -0.59671), (0.392138, -0.006996, -0.297562), (0.392138, 0.014788, -0.297562), (0.392138, 0.014788, 0.300463), (0.392138, -0.006996, 0.300463), (-0.395712, 0.014787, -0.297562), (-0.395712, 0.014787, 0.300463), (-0.395712, -0.006996, -0.297562), (-0.395712, -0.006996, 0.300463), (-0.388694, -0.006996, 0.290705), (-0.388694, -0.001453, 0.290705), (0.38512, -0.001453, 0.290705), (0.385119, -0.006996, 0.290705), (0.385119, -0.006996, -0.287804), (-0.388694, -0.006996, -0.287804), (-0.388694, -0.001453, -0.287804), (0.38512, -0.001453, -0.287804), (-0.320748, -0.001454, -0.216621), (0.317173, -0.001453, -0.216621), (0.317173, -0.001453, 0.219522), (-0.320748, -0.001454, 0.219522)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-19.25046, -9.574757), (-19.25046, -9.574932), (-19.250284, -9.574932), (-19.250284, -9.574757), (-19.022366, 0.7818), (-20.973675, 0.709822), (-19.022366, 0.709824), (-19.022366, 0.7818), (-20.973675, 0.781798), (-20.973675, 0.709822), (-18.23492, -0.887973), (-20.83813, 1.063627), (-20.838133, -0.887973), (-18.23492, -0.887973), (-18.23492, 1.063628), (-20.83813, 1.063627), (-19.032352, 0.760388), (-20.983898, 0.688412), (-19.032352, 0.688414), (-19.032352, 0.760388), (-20.983898, 0.760386), (-20.983898, 0.688412), (-18.224873, 0.741244), (-20.781532, 0.722927), (-18.224873, 0.722929), (-18.224873, 0.741244), (-20.781532, 0.741242), (-20.781532, 0.722927), (-20.809858, -0.204143), (-18.206652, -0.132166), (-20.809858, -0.132167), (-20.809858, -0.204143), (-18.206652, -0.204141), (-18.206652, -0.132166), (-18.206661, -0.110155), (-20.809849, -0.182132), (-18.206661, -0.182131), (-18.206661, -0.110155), (-20.809849, -0.110157), (-20.809849, -0.182132), (-20.786621, -0.863483), (-20.80981, 1.056193), (-20.80981, -0.895332), (-20.786621, -0.863483), (-20.786621, 1.024351), (-20.80981, 1.056193), (-18.229889, 1.024353), (-18.2067, -0.895332), (-18.2067, 1.056195), (-18.229889, 1.024353), (-18.229889, -0.863483), (-18.2067, -0.895332), (-18.229889, -0.863483), (-20.80981, -0.895332), (-18.2067, -0.895332), (-18.229889, -0.863483), (-20.786621, -0.863483), (-20.80981, -0.895332), (-20.786621, 1.024351), (-18.2067, 1.056195), (-20.80981, 1.056193), (-20.786621, 1.024351), (-18.229889, 1.024353), (-18.2067, 1.056195), (-19.057299, 0.718001), (-20.945076, 0.699685), (-19.057299, 0.699686), (-19.057299, 0.718001), (-20.945076, 0.717999), (-20.945076, 0.699685), (-20.782173, 0.733839), (-18.224232, 0.752156), (-20.782173, 0.752154), (-20.782173, 0.733839), (-18.224232, 0.733841), (-18.224232, 0.752156), (-20.945635, 0.689963), (-19.056742, 0.70829), (-20.945635, 0.708289), (-20.945635, 0.689963), (-19.056742, 0.689965), (-19.056742, 0.70829)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_RobothorWallDecorInset_4_3_1"
        {
            token outputs:surface.connect = </root/_materials/M_RobothorWallDecorInset_4_3_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_RobothorWallDecorInset_4_3_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_RobothorWallDecorInset_4_3_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/DarkWood2.tif@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_RobothorWallDecorInset_4_3_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_RobothorWallDecorInset_4_3_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

