#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshTelevision_25_0_GeomSubset_4"
    {
        def Mesh "MeshTelevision_25_0_GeomSubset_4"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4]
            int[] faceVertexIndices = [16, 17, 19, 18]
            rel material:binding = </root/_materials/M_Television_25_4>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.0008, 0.022124, -0.009258), (-0.0008, 0.022124, -0.009258), (0.0008, 0.023723, -0.009258), (-0.0008, 0.023723, -0.009258), (0.0008, 0.022124, -0.009258), (-0.0008, 0.022124, -0.009258), (0.0008, 0.023723, -0.009258), (-0.0008, 0.023723, -0.009258), (0.0008, 0.022124, -0.009258), (-0.0008, 0.022124, -0.009258), (0.0008, 0.023723, -0.009258), (-0.0008, 0.023723, -0.009258), (0.0008, 0.022124, -0.009258), (-0.0008, 0.022124, -0.009258), (0.0008, 0.023723, -0.009258), (-0.0008, 0.023723, -0.009258), (0.0008, 0.022124, -0.009258), (-0.0008, 0.022124, -0.009258), (0.0008, 0.023723, -0.009258), (-0.0008, 0.023723, -0.009258), (0.537467, 0.022923, 0.364438), (0.537467, -0.023359, 0.364438), (-0.537467, -0.023359, 0.364438), (-0.537467, 0.022923, 0.364438), (-0.537467, 0.022923, -0.366449), (0.537467, 0.022923, -0.366449), (-0.537467, -0.023359, -0.366449), (0.537467, -0.023359, -0.366449), (-0.537467, 0.022923, -0.290065), (-0.537467, 0.022923, -0.297815), (0.537467, 0.022923, -0.290065), (0.537467, 0.022923, -0.297815), (-0.537467, -0.023359, -0.290065), (-0.537467, -0.023359, -0.297815), (0.537467, -0.023359, -0.290065), (0.537467, -0.023359, -0.297815), (-0.531954, 0.017411, -0.290065), (-0.531954, 0.017411, -0.297815), (0.531954, 0.017411, -0.297815), (0.531954, 0.017411, -0.290065), (-0.531954, -0.017847, -0.290065), (-0.531954, -0.017847, -0.297815), (0.531954, -0.017847, -0.297815), (0.531954, -0.017847, -0.290065), (0, -0.023359, -0.290065), (0, -0.017847, -0.290065), (0, -0.017847, -0.297815), (0, -0.023359, -0.297815), (0, -0.023359, -0.366449), (0, 0.022923, -0.366449), (0, 0.022923, -0.297815), (0, 0.017411, -0.297815), (0, 0.017411, -0.290065), (0, 0.022923, -0.290065), (0, 0.022923, 0.364438), (0, -0.023359, 0.364438), (0, -0.023359, 0.351438), (0, -0.023359, -0.277065), (-0.524467, -0.023359, -0.277065), (-0.524467, -0.023359, 0.351438), (0.524467, -0.023359, -0.277065), (0.524467, -0.023359, 0.351438), (0, -0.016149, 0.343641), (0, -0.016149, -0.269267), (-0.511454, -0.016149, -0.269267), (-0.511454, -0.016149, 0.343641), (0.511455, -0.016149, -0.269267), (0.511455, -0.016149, 0.343641)]
            bool[] primvars:sharp_face = [0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-7.166486, -17.567528), (-7.165588, -17.567528), (-7.165588, -17.566631), (-7.166486, -17.566631)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_Television_25_4"
        {
            token outputs:surface.connect = </root/_materials/M_Television_25_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.8, 0.8, 0.8)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 1
                float inputs:specular = 0
                token outputs:surface
            }
        }
    }
}

