#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshTelevision_25_0_GeomSubset_1"
    {
        def Mesh "MeshTelevision_25_0_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [4, 5, 7, 6, 55, 22, 23, 54, 21, 20, 30, 34, 28, 23, 22, 32, 54, 23, 28, 53, 53, 28, 36, 52, 28, 32, 40, 36, 32, 44, 45, 40, 44, 34, 43, 45, 30, 53, 52, 39, 20, 54, 53, 30, 21, 55, 54, 20, 44, 32, 58, 57, 32, 22, 59, 58, 22, 55, 56, 59, 21, 34, 60, 61, 34, 44, 57, 60, 55, 21, 61, 56, 57, 58, 64, 63, 58, 59, 65, 64, 59, 56, 62, 65, 61, 60, 66, 67, 60, 57, 63, 66, 56, 61, 67, 62]
            rel material:binding = </root/_materials/M_Television_25_1>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0, -1, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -1, 0), (0, 0, 1), (0.0000020720065, 0, 1), (0.0000020716839, 0, 1), (0, 0, 1), (0.0000020720065, 0, 1), (0.0000020720065, 0, 1), (0.0000020716839, 0, 1), (0.0000020716839, 0, 1), (0.0000020720065, 0, 1), (0, 0, 1), (0, 0, 1), (0.0000020716839, 0, 1), (0, 0, 1), (-0.0000020720065, 0, 1), (-0.0000020716839, 0, 1), (0, 0, 1), (-0.0000020720065, 0, 1), (0, 0, 1), (0, 0, 1), (-0.0000020716839, 0, 1), (0, -0.99999994, 0), (0, -1, 0), (0, -1, 0), (0, -0.99999994, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0.73424786, -0.6788815), (0, 0.73424786, -0.6788815), (0, 0.73424786, -0.6788815), (0, 0.73424786, -0.6788815), (-0.48464286, 0.87471217, 0), (-0.48464286, 0.87471217, 0), (-0.48464286, 0.87471217, 0), (-0.48464286, 0.87471217, 0), (0, 0.7342026, 0.6789305), (0, 0.7342025, 0.67893046), (0, 0.7342025, 0.67893046), (0, 0.7342026, 0.6789305), (0.48467433, 0.87469476, 0), (0.48467433, 0.87469476, 0), (0.48467433, 0.87469476, 0), (0.48467433, 0.87469476, 0), (0, 0.73424786, -0.6788815), (0, 0.73424786, -0.6788815), (0, 0.73424786, -0.6788815), (0, 0.73424786, -0.6788815), (0, 0.7342025, 0.67893046), (0, 0.7342026, 0.67893046), (0, 0.7342026, 0.67893046), (0, 0.7342025, 0.67893046)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.0008, 0.022124, -0.009258), (-0.0008, 0.022124, -0.009258), (0.0008, 0.023723, -0.009258), (-0.0008, 0.023723, -0.009258), (0.0008, 0.022124, -0.009258), (-0.0008, 0.022124, -0.009258), (0.0008, 0.023723, -0.009258), (-0.0008, 0.023723, -0.009258), (0.0008, 0.022124, -0.009258), (-0.0008, 0.022124, -0.009258), (0.0008, 0.023723, -0.009258), (-0.0008, 0.023723, -0.009258), (0.0008, 0.022124, -0.009258), (-0.0008, 0.022124, -0.009258), (0.0008, 0.023723, -0.009258), (-0.0008, 0.023723, -0.009258), (0.0008, 0.022124, -0.009258), (-0.0008, 0.022124, -0.009258), (0.0008, 0.023723, -0.009258), (-0.0008, 0.023723, -0.009258), (0.537467, 0.022923, 0.364438), (0.537467, -0.023359, 0.364438), (-0.537467, -0.023359, 0.364438), (-0.537467, 0.022923, 0.364438), (-0.537467, 0.022923, -0.366449), (0.537467, 0.022923, -0.366449), (-0.537467, -0.023359, -0.366449), (0.537467, -0.023359, -0.366449), (-0.537467, 0.022923, -0.290065), (-0.537467, 0.022923, -0.297815), (0.537467, 0.022923, -0.290065), (0.537467, 0.022923, -0.297815), (-0.537467, -0.023359, -0.290065), (-0.537467, -0.023359, -0.297815), (0.537467, -0.023359, -0.290065), (0.537467, -0.023359, -0.297815), (-0.531954, 0.017411, -0.290065), (-0.531954, 0.017411, -0.297815), (0.531954, 0.017411, -0.297815), (0.531954, 0.017411, -0.290065), (-0.531954, -0.017847, -0.290065), (-0.531954, -0.017847, -0.297815), (0.531954, -0.017847, -0.297815), (0.531954, -0.017847, -0.290065), (0, -0.023359, -0.290065), (0, -0.017847, -0.290065), (0, -0.017847, -0.297815), (0, -0.023359, -0.297815), (0, -0.023359, -0.366449), (0, 0.022923, -0.366449), (0, 0.022923, -0.297815), (0, 0.017411, -0.297815), (0, 0.017411, -0.290065), (0, 0.022923, -0.290065), (0, 0.022923, 0.364438), (0, -0.023359, 0.364438), (0, -0.023359, 0.351438), (0, -0.023359, -0.277065), (-0.524467, -0.023359, -0.277065), (-0.524467, -0.023359, 0.351438), (0.524467, -0.023359, -0.277065), (0.524467, -0.023359, 0.351438), (0, -0.016149, 0.343641), (0, -0.016149, -0.269267), (-0.511454, -0.016149, -0.269267), (-0.511454, -0.016149, 0.343641), (0.511455, -0.016149, -0.269267), (0.511455, -0.016149, 0.343641)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-30.558186, -18.175362), (-30.557165, -18.175362), (-30.557165, -18.174343), (-30.558186, -18.174343), (-31.583632, 0.34392), (-31.583632, -0.705797), (-31.493235, -0.705797), (-31.493235, 0.34392), (-30.571926, 0.849083), (-30.662323, 0.849083), (-30.662323, -0.429202), (-30.571926, -0.429202), (-30.535082, -0.429204), (-30.535082, 0.849084), (-30.625479, 0.849084), (-30.625479, -0.429204), (-31.94672, 0.34392), (-31.94672, -0.705825), (-30.668404, -0.705824), (-30.668404, 0.34392), (-31.122877, 0.34392), (-31.122877, -0.705858), (-31.112114, -0.695091), (-31.112114, 0.34392), (-31.122877, -0.705858), (-31.032478, -0.705859), (-31.043247, -0.695091), (-31.112114, -0.695091), (-31.032478, -0.705859), (-31.032478, 0.34392), (-31.043247, 0.34392), (-31.043247, -0.695091), (-31.032478, 0.34392), (-31.032478, 1.393697), (-31.043247, 1.382929), (-31.043247, 0.34392), (-31.122877, 1.393697), (-31.122877, 0.34392), (-31.112114, 0.34392), (-31.112114, 1.382929), (-31.94672, 1.393664), (-31.94672, 0.34392), (-30.668404, 0.34392), (-30.668404, 1.393664), (-31.583632, 1.393635), (-31.583632, 0.34392), (-31.493235, 0.34392), (-31.493235, 1.393635), (-31.519373, 0.34392), (-31.519373, -0.760359), (-31.492672, -0.73365), (-31.492672, 0.34392), (-31.519373, -0.760359), (-30.17464, -0.760359), (-30.201351, -0.73365), (-31.492672, -0.73365), (-30.17464, -0.760359), (-30.17464, 0.34392), (-30.201351, 0.34392), (-30.201351, -0.73365), (-30.17464, 1.448198), (-31.519373, 1.448198), (-31.492672, 1.421489), (-30.201351, 1.421489), (-31.519373, 1.448198), (-31.519373, 0.34392), (-31.492672, 0.34392), (-31.492672, 1.421489), (-30.17464, 0.34392), (-30.17464, 1.448198), (-30.201351, 1.421489), (-30.201351, 0.34392), (-31.492672, 0.34392), (-31.492672, -0.73365), (-31.476648, -0.706913), (-31.476648, 0.34392), (-31.492672, -0.73365), (-30.201351, -0.73365), (-30.21737, -0.706913), (-31.476648, -0.706913), (-30.201351, -0.73365), (-30.201351, 0.34392), (-30.21737, 0.34392), (-30.21737, -0.706913), (-30.201351, 1.421489), (-31.492672, 1.421489), (-31.476648, 1.394753), (-30.21737, 1.394753), (-31.492672, 1.421489), (-31.492672, 0.34392), (-31.476648, 0.34392), (-31.476648, 1.394753), (-30.201351, 0.34392), (-30.201351, 1.421489), (-30.21737, 1.394753), (-30.21737, 0.34392)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_Television_25_1"
        {
            token outputs:surface.connect = </root/_materials/M_Television_25_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_Television_25_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_Television_25_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/MetalBumpy_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Television_25_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/MetalBumpy_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Television_25_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

