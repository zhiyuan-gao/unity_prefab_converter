#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshBook_8_0_GeomSubset_0"
    {
        def Mesh "MeshBook_8_0_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [1, 0, 3, 2, 4, 5, 6, 7, 7, 6, 10, 11, 8, 9, 11, 10, 6, 2, 3, 10, 7, 11, 24, 25, 6, 5, 1, 2, 0, 8, 10, 3, 11, 9, 27, 24, 25, 26, 4, 7, 17, 16, 20, 21, 21, 22, 18, 17, 16, 19, 23, 20, 21, 20, 13, 14, 14, 15, 22, 21, 20, 23, 12, 13, 25, 24, 16, 17, 17, 18, 26, 25, 24, 27, 19, 16, 135, 134, 132, 133, 13, 12, 132, 134, 15, 14, 135, 133, 132, 12, 15, 133, 13, 134, 135, 14]
            rel material:binding = </root/_materials/M_Book_8_0>
            normal3f[] normals = [(1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, -0.0000017404402), (0, -1, 0), (0, -1, 0), (0, -1, -0.0000017025936), (-0.8191195, 0, 0.5736229), (-0.49014956, 0, 0.8716384), (-0.49014953, 0.00008424041, 0.8716384), (-0.8191195, -1.175728e-9, 0.5736229), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-0.49014956, 0, 0.8716384), (0, 0, 1), (0, 0, 1), (-0.49014953, 0.00008424041, 0.8716384), (-0.8191195, 0, 0.5736229), (-0.8191195, -1.175728e-9, 0.5736229), (-0.96381384, 0, 0.26657617), (-0.96381384, 0, 0.26657617), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0.0000036163901), (0, 1, 0.000002749204), (0, -1, 8.1350976e-7), (0, -1, 0.000002157958), (0, -1, -0.0000017404402), (0, -1, -0.0000017025936), (-0.9838575, 0, 0.17895348), (-0.9838575, -6.684385e-8, 0.17895348), (-0.9965424, 0, 0.08308589), (-0.9965424, 0, 0.08308589), (0, -1, 0), (0, -1, 0), (0, -1, 0.0000029046776), (0, -1, 0.0000033247366), (0, 1, 0.0000033247318), (0, 1, 0.0000029046728), (0, 1, 0), (0, 1, 0), (-0.9965424, 0, 0.08308589), (-0.9965424, 0, 0.08308589), (-0.9008247, -0.0000047273934, -0.4341827), (-0.9008935, 0, -0.43403983), (-0.000009134412, -0.95684916, -0.29058525), (0.000001359731, -0.962249, -0.2721707), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (-2.8779903e-7, 0.9993381, 0.03637719), (-8.09785e-7, 0.9992274, 0.03929934), (-0.96381384, 0, 0.26657617), (-0.96381384, 0, 0.26657617), (-0.9838575, -6.684385e-8, 0.17895348), (-0.9838575, 0, 0.17895348), (0, -1, 0.0000033247366), (0, -1, 0.0000029046776), (0, -1, 0.000002157958), (0, -1, 8.1350976e-7), (0, 1, 0.000002749204), (0, 1, 0.0000036163901), (0, 1, 0.0000029046728), (0, 1, 0.0000033247318), (-0.42568365, -4.7730282e-8, -0.9048721), (-0.4256113, 2.8416054e-7, -0.9049061), (0.42528555, 5.029142e-8, -0.90505934), (0.42543033, -2.9201016e-7, -0.90499127), (0.00009798806, 0.5930277, -0.8051822), (0.0001026988, 0.59070927, -0.8068845), (0, 0.88343036, -0.46856263), (0, 0.88343036, -0.46856263), (0.000001359731, -0.962249, -0.2721707), (-0.000009134412, -0.95684916, -0.29058525), (0, -0.88343036, -0.46856263), (1.9266736e-8, -0.88316065, -0.46907076), (0.42528555, 5.029142e-8, -0.90505934), (0.71964437, -9.9755326e-8, -0.694343), (0.71964437, 1.7869752e-8, -0.6943429), (0.42543033, -2.9201016e-7, -0.90499127), (-0.9008247, -0.0000047273934, -0.4341827), (-0.4256113, 2.8416054e-7, -0.9049061), (-0.42568365, -4.7730282e-8, -0.9048721), (-0.9008935, 0, -0.43403983)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.093193, -0.127621, -0.014419), (-0.093193, 0.127621, -0.014419), (-0.093193, 0.127621, -0.015001), (-0.093193, -0.127621, -0.015001), (0.100027, 0.127621, -0.013056), (0.097847, 0.127621, -0.014419), (0.098907, 0.127621, -0.015001), (0.10089, 0.127621, -0.013698), (0.097847, -0.127621, -0.014419), (0.100027, -0.127621, -0.013056), (0.098907, -0.127621, -0.015001), (0.10089, -0.127621, -0.013698), (0.101226, -0.127621, -0.005375), (0.102388, -0.127621, -0.005375), (0.102388, 0.127621, -0.005375), (0.101226, 0.127621, -0.005375), (0.102041, -0.127621, -0.009537), (0.102041, 0.127621, -0.009537), (0.100885, 0.127621, -0.009215), (0.100885, -0.127621, -0.009215), (0.102214, -0.127621, -0.007456), (0.102214, 0.127621, -0.007456), (0.101072, 0.127621, -0.007295), (0.101072, -0.127621, -0.007295), (0.101442, -0.127621, -0.011617), (0.101442, 0.127621, -0.011617), (0.100478, 0.127621, -0.011135), (0.100478, -0.127621, -0.011135), (0.099686, 0.127621, -0.005375), (-0.093193, 0.127621, -0.005375), (-0.093193, -0.127621, -0.005375), (0.099686, -0.127621, -0.005375), (0.099318, 0.127621, -0.009897), (-0.093193, 0.127621, -0.009897), (-0.093193, -0.127621, -0.009897), (0.099318, -0.127621, -0.009897), (0.099686, -0.126226, -0.0031), (0.101226, -0.127621, -0.005375), (0.099686, 0.126227, -0.0031), (0.101226, 0.127621, -0.005375), (-0.091972, -0.126226, -0.004798), (-0.091972, 0.126227, -0.004798), (-0.093193, -0.127621, -0.014419), (-0.093193, 0.127621, -0.014419), (0.097847, 0.127621, -0.014419), (0.100027, 0.127621, -0.013056), (0.100027, -0.127621, -0.013056), (0.097847, -0.127621, -0.014419), (0.100885, 0.127621, -0.009215), (0.100885, -0.127621, -0.009215), (0.032385, 0.127621, -0.014419), (0.033367, 0.127621, -0.009897), (0.033612, 0.127621, -0.005375), (0.033953, 0.126227, 0.003919), (0.033953, -0.126226, 0.003919), (0.033612, -0.127621, -0.005375), (0.033367, -0.127621, -0.009897), (0.032385, -0.127621, -0.014419), (-0.027138, 0.127621, -0.014419), (-0.026647, 0.127621, -0.009897), (-0.026525, 0.127621, -0.005375), (-0.025842, 0.126227, 0.001161), (-0.025842, -0.126226, 0.001161), (-0.026525, -0.127621, -0.005375), (-0.026647, -0.127621, -0.009897), (-0.027138, -0.127621, -0.014419), (0.015315, 0.127621, -0.014419), (0.016133, 0.127621, -0.009897), (0.016337, 0.127621, -0.005375), (0.016792, 0.126227, 0.003519), (0.016792, -0.126226, 0.003519), (0.016337, -0.127621, -0.005375), (0.016133, -0.127621, -0.009897), (0.015315, -0.127621, -0.014419), (-0.005911, 0.127621, -0.014419), (-0.005257, 0.127621, -0.009897), (-0.005094, 0.127621, -0.005375), (-0.004525, 0.126227, 0.002574), (-0.004525, -0.126226, 0.002574), (-0.005094, -0.127621, -0.005375), (-0.005257, -0.127621, -0.009897), (-0.005911, -0.127621, -0.014419), (0.084008, 0.127621, -0.014419), (0.085381, 0.127621, -0.009897), (0.085724, 0.127621, -0.005375), (0.085793, 0.126227, 0.001448), (0.085793, -0.126226, 0.001448), (0.085724, -0.127621, -0.005375), (0.085381, -0.127621, -0.009897), (0.084008, -0.127621, -0.014419), (0.072375, 0.127621, -0.014419), (0.07365, 0.127621, -0.009897), (0.073969, 0.127621, -0.005375), (0.074105, 0.126227, 0.003281), (0.074105, -0.126226, 0.00328), (0.073969, -0.127621, -0.005375), (0.07365, -0.127621, -0.009897), (0.072375, -0.127621, -0.014419), (0.059639, 0.127621, -0.014419), (0.060816, 0.127621, -0.009897), (0.06111, 0.127621, -0.005375), (0.061315, 0.126227, 0.004019), (0.061315, -0.126226, 0.004019), (0.06111, -0.127621, -0.005375), (0.060816, -0.127621, -0.009897), (0.059639, -0.127621, -0.014419), (0.046903, 0.127621, -0.014419), (0.047982, 0.127621, -0.009897), (0.048252, 0.127621, -0.005375), (0.048525, 0.126227, 0.004063), (0.048525, -0.126226, 0.004063), (0.048252, -0.127621, -0.005375), (0.047982, -0.127621, -0.009897), (0.046903, -0.127621, -0.014419), (-0.048343, 0.127621, -0.014419), (-0.048098, 0.127621, -0.009897), (-0.048037, 0.127621, -0.005375), (-0.047184, 0.126227, -0.000379), (-0.047184, -0.126226, -0.000379), (-0.048037, -0.127621, -0.005375), (-0.048098, -0.127621, -0.009897), (-0.048343, -0.127621, -0.014419), (-0.06958, 0.127621, -0.014419), (-0.069458, 0.127621, -0.009897), (-0.069427, 0.127621, -0.005375), (-0.068489, 0.126227, -0.002183), (-0.068489, -0.126226, -0.002183), (-0.069427, -0.127621, -0.005375), (-0.069458, -0.127621, -0.009897), (-0.06958, -0.127621, -0.014419), (0.101041, -0.126404, -0.004094), (0.101041, 0.126405, -0.004094), (0.101574, -0.127429, -0.005013), (0.101574, 0.127429, -0.005013), (0.10204, -0.127429, -0.005013), (0.10204, 0.127429, -0.005013), (0.092746, 0.127621, -0.014419), (0.094168, 0.127621, -0.009897), (0.094524, 0.127621, -0.005375), (0.094558, 0.126227, -0.000761), (0.094558, -0.126226, -0.000761), (0.094524, -0.127621, -0.005375), (0.094168, -0.127621, -0.009897), (0.092746, -0.127621, -0.014419), (0.101851, -0.126489, -0.004929), (0.101851, -0.127621, -0.005375), (0.101851, 0.126489, -0.004929), (0.101851, 0.127621, -0.005375), (-0.086361, 0.127621, -0.014419), (-0.08633, 0.127621, -0.009897), (-0.086322, 0.127621, -0.005375), (-0.085321, 0.126227, -0.003827), (-0.085321, -0.126226, -0.003827), (-0.086322, -0.127621, -0.005375), (-0.08633, -0.127621, -0.009897), (-0.086361, -0.127621, -0.014419)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(0.177936, 0.830261), (0.177957, 0.668479), (0.178989, 0.668468), (0.178968, 0.830273), (0.182348, 0.831837), (0.181737, 0.831837), (0.181739, 0.830273), (0.182313, 0.830273), (0.182313, 0.830273), (0.181739, 0.830273), (0.181739, 0.668468), (0.182313, 0.668468), (0.181737, 0.667163), (0.182348, 0.667163), (0.182313, 0.668468), (0.181739, 0.668468), (0.181739, 0.830273), (0.178968, 0.830273), (0.178989, 0.668468), (0.181739, 0.668468), (0.182313, 0.830273), (0.182313, 0.668468), (0.183595, 0.668468), (0.183595, 0.830273), (0.181739, 0.830273), (0.181737, 0.831837), (0.178983, 0.831855), (0.178968, 0.830273), (0.179007, 0.667148), (0.181737, 0.667163), (0.181739, 0.668468), (0.178989, 0.668468), (0.182313, 0.668468), (0.182348, 0.667163), (0.183658, 0.667163), (0.183595, 0.668468), (0.183595, 0.830273), (0.183622, 0.831837), (0.182348, 0.831837), (0.182313, 0.830273), (0.184878, 0.830273), (0.184878, 0.668468), (0.18616, 0.668468), (0.18616, 0.830273), (0.18616, 0.830273), (0.186171, 0.831837), (0.184897, 0.831837), (0.184878, 0.830273), (0.184878, 0.668468), (0.184968, 0.667163), (0.186279, 0.667163), (0.18616, 0.668468), (0.18616, 0.830273), (0.18616, 0.668468), (0.187395, 0.668409), (0.187392, 0.830273), (0.187392, 0.830273), (0.187387, 0.831837), (0.186171, 0.831837), (0.18616, 0.830273), (0.18616, 0.668468), (0.186279, 0.667163), (0.187395, 0.667163), (0.187395, 0.668409), (0.183595, 0.830273), (0.183595, 0.668468), (0.184878, 0.668468), (0.184878, 0.830273), (0.184878, 0.830273), (0.184897, 0.831837), (0.183622, 0.831837), (0.183595, 0.830273), (0.183595, 0.668468), (0.183658, 0.667163), (0.184968, 0.667163), (0.184878, 0.668468), (0.187694, 0.830742), (0.187694, 0.66812), (0.188093, 0.66812), (0.188093, 0.830742), (0.187395, 0.668409), (0.187395, 0.667163), (0.187694, 0.667521), (0.187694, 0.66812), (0.187387, 0.831837), (0.187392, 0.830273), (0.187694, 0.830742), (0.187694, 0.831394), (0.188093, 0.66812), (0.188556, 0.66812), (0.188549, 0.830742), (0.188093, 0.830742), (0.187395, 0.668409), (0.187694, 0.66812), (0.187694, 0.830742), (0.187392, 0.830273)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_Book_8_0"
        {
            token outputs:surface.connect = </root/_materials/M_Book_8_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_Book_8_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Book_Cover_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Book_8_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

