#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "AlarmClock_16_AlarmClock_16_0_GeomSubset_3"
    {
        def Mesh "AlarmClock_16_AlarmClock_16_0_GeomSubset_3"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 3, 4, 3, 4, 4, 4, 3, 4, 3, 4, 4, 4]
            int[] faceVertexIndices = [12, 13, 15, 14, 114, 111, 112, 113, 106, 103, 104, 105, 110, 107, 108, 109, 101, 100, 102, 115, 110, 148, 107, 148, 170, 171, 107, 114, 149, 111, 168, 169, 149, 114, 149, 169, 170, 148, 111, 149, 148, 110, 115, 102, 150, 151, 150, 102, 103, 106, 151, 103, 115, 150, 169, 168, 170, 169, 150, 151, 171, 170, 151, 106]
            rel material:binding = </root/_materials/M_AlarmClock_16_3>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, -1.8660748e-7), (0, 1, 3.1646562e-7), (0, 1, -0.0000018929517), (0, 1, -0.0000018929517), (0, 1, 6.5623783e-7), (0, 1, 9.950401e-8), (0, 1, 4.749793e-7), (0, 1, 4.749793e-7), (0, 1, -2.259124e-7), (0, 1, -2.2591212e-7), (0, 1, -0.000002817277), (0, 1, -0.000002817277), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, -7.7757974e-8), (0, 1, -2.259124e-7), (0, 1, 3.7805734e-7), (0, 1, -2.2591212e-7), (0, 1, 3.7805734e-7), (0, 1, 2.6546192e-7), (0, 1, 5.2728893e-7), (0, 1, -2.2591212e-7), (0, 1, -1.8660748e-7), (0, 1, 4.4457823e-7), (0, 1, 3.1646562e-7), (0, 1, -5.54231e-7), (0, 1, -2.7629721e-7), (0, 1, 4.4457823e-7), (0, 1, -1.8660748e-7), (0, 1, 4.4457823e-7), (0, 1, -2.7629721e-7), (0, 1, 2.6546192e-7), (0, 1, 3.7805734e-7), (0, 1, 3.1646562e-7), (0, 1, 4.4457823e-7), (0, 1, 3.7805734e-7), (0, 1, -2.259124e-7), (0, 1, -7.7757974e-8), (0, 1, 0), (0, 1, -3.6615802e-8), (0, 1, 2.6476525e-7), (0, 1, -3.6615802e-8), (0, 1, 0), (0, 1, 9.950401e-8), (0, 1, 6.5623783e-7), (0, 1, 2.6476525e-7), (0, 1, 9.950401e-8), (0, 1, -7.7757974e-8), (0, 1, -3.6615802e-8), (0, 1, -2.7629721e-7), (0, 1, -5.54231e-7), (0, 1, 2.6546192e-7), (0, 1, -2.7629721e-7), (0, 1, -3.6615802e-8), (0, 1, 2.6476525e-7), (0, 1, 5.2728893e-7), (0, 1, 2.6546192e-7), (0, 1, 2.6476525e-7), (0, 1, 6.5623783e-7)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.0005, -0.00398, -0.326768), (-0.0005, -0.00398, -0.326768), (0.0005, -0.00298, -0.326768), (-0.0005, -0.00298, -0.326768), (0.0005, -0.00398, -0.326768), (-0.0005, -0.00398, -0.326768), (0.0005, -0.00298, -0.326768), (-0.0005, -0.00298, -0.326768), (0.0005, -0.00398, -0.326768), (-0.0005, -0.00398, -0.326768), (0.0005, -0.00298, -0.326768), (-0.0005, -0.00298, -0.326768), (0.0005, -0.00398, -0.326768), (-0.0005, -0.00398, -0.326768), (0.0005, -0.00298, -0.326768), (-0.0005, -0.00298, -0.326768), (0.0005, -0.00398, -0.326768), (-0.0005, -0.00398, -0.326768), (0.0005, -0.00298, -0.326768), (-0.0005, -0.00298, -0.326768), (0.067306, 0.053172, 0.039251), (0.077756, 0.042722, 0.039251), (0.081581, 0.028447, 0.039251), (0.077756, 0.028447, 0.053526), (0.067306, 0.028447, 0.063976), (0.05303, 0.028447, 0.067801), (0.05303, 0.042722, 0.063976), (0.05303, 0.053172, 0.053526), (0.05303, 0.056998, 0.039251), (-0.077756, 0.042722, 0.039251), (-0.067306, 0.053172, 0.039251), (-0.05303, 0.056998, 0.039251), (-0.05303, 0.053172, 0.053526), (-0.05303, 0.042722, 0.063976), (-0.05303, 0.028447, 0.067801), (-0.067306, 0.028447, 0.063976), (-0.077756, 0.028447, 0.053526), (-0.081581, 0.028447, 0.039251), (0.067306, 0.028447, -0.072943), (0.077756, 0.028447, -0.062493), (0.081581, 0.028447, -0.048218), (0.077756, 0.042722, -0.048218), (0.067306, 0.053172, -0.048218), (0.05303, 0.056998, -0.048218), (0.05303, 0.053172, -0.062493), (0.05303, 0.042722, -0.072943), (0.05303, 0.028447, -0.076768), (-0.077756, 0.028447, -0.062493), (-0.067306, 0.028447, -0.072943), (-0.05303, 0.028447, -0.076768), (-0.05303, 0.042722, -0.072943), (-0.05303, 0.053172, -0.062493), (-0.05303, 0.056998, -0.048218), (-0.067306, 0.053172, -0.048218), (-0.077756, 0.042722, -0.048218), (-0.081581, 0.028447, -0.048218), (0.067306, -0.056207, 0.063976), (0.077756, -0.056207, 0.053526), (0.081581, -0.056207, 0.039251), (0.05303, -0.056207, 0.067801), (-0.077756, -0.056207, 0.053526), (-0.067306, -0.056207, 0.063976), (-0.05303, -0.056207, 0.067801), (-0.081581, -0.056207, 0.039251), (0.077756, -0.056207, -0.062493), (0.067306, -0.056207, -0.072943), (0.05303, -0.056207, -0.076768), (0.081581, -0.056207, -0.048218), (-0.067306, -0.056207, -0.072943), (-0.077756, -0.056207, -0.062493), (-0.081581, -0.056207, -0.048218), (-0.05303, -0.056207, -0.076768), (0.065367, 0.051025, 0.051587), (0.075609, 0.040783, 0.051587), (0.065367, 0.040783, 0.061829), (-0.075609, 0.040783, 0.051587), (-0.065367, 0.051025, 0.051587), (-0.065367, 0.040783, 0.061829), (0.065367, 0.040783, -0.070796), (0.075609, 0.040783, -0.060554), (0.065367, 0.051025, -0.060554), (-0.075609, 0.040783, -0.060554), (-0.065367, 0.040783, -0.070796), (-0.065367, 0.051025, -0.060554), (-0.05613, -0.055161, -0.048584), (-0.053397, -0.055161, -0.051317), (-0.056454, -0.055161, -0.04491), (-0.056454, -0.055161, 0.035943), (-0.055804, -0.055161, 0.039943), (-0.053723, -0.055161, 0.042024), (-0.049722, -0.055161, 0.042674), (0.049722, -0.055161, 0.042674), (0.053537, -0.055161, 0.04221), (0.05599, -0.055161, 0.039757), (0.056454, -0.055161, 0.035943), (0.056454, -0.055161, -0.04491), (0.055841, -0.055161, -0.048873), (0.053686, -0.055161, -0.051028), (0.049722, -0.055161, -0.051641), (-0.049722, -0.055161, -0.051641), (-0.052512, -0.051869, -0.046895), (-0.051708, -0.051869, -0.047699), (-0.052701, -0.051869, -0.044744), (-0.052701, -0.051869, 0.03564), (-0.052294, -0.051869, 0.038146), (-0.051926, -0.051869, 0.038514), (-0.04942, -0.051869, 0.038921), (0.049495, -0.051869, 0.038921), (0.051799, -0.051869, 0.038641), (0.052421, -0.051869, 0.038019), (0.052701, -0.051869, 0.035715), (0.052701, -0.051869, -0.044621), (0.05232, -0.051869, -0.047087), (0.0519, -0.051869, -0.047507), (0.049434, -0.051869, -0.047888), (-0.049557, -0.051869, -0.047888), (-0.074991, -0.056207, -0.060896), (-0.074377, -0.055161, -0.060542), (-0.065709, -0.056207, -0.070178), (-0.065355, -0.055161, -0.069564), (-0.078497, -0.056207, -0.047812), (-0.077812, -0.055161, -0.047721), (-0.078497, -0.056207, 0.038845), (-0.077812, -0.055161, 0.038754), (-0.074991, -0.056207, 0.05193), (-0.074377, -0.055161, 0.051575), (-0.065709, -0.056207, 0.061211), (-0.065355, -0.055161, 0.060597), (-0.052624, -0.056207, 0.064717), (-0.052534, -0.055161, 0.064032), (0.052625, -0.056207, 0.064717), (0.052534, -0.055161, 0.064032), (0.065709, -0.056207, 0.061211), (0.065355, -0.055161, 0.060597), (0.074991, -0.056207, 0.05193), (0.074377, -0.055161, 0.051575), (0.078497, -0.056207, 0.038845), (0.077812, -0.055161, 0.038754), (0.078497, -0.056207, -0.047812), (0.077812, -0.055161, -0.047721), (0.074991, -0.056207, -0.060896), (0.074377, -0.055161, -0.060542), (0.065709, -0.056207, -0.070178), (0.065355, -0.055161, -0.069564), (0.052625, -0.056207, -0.073684), (0.052534, -0.055161, -0.072999), (-0.052624, -0.056207, -0.073684), (-0.052534, -0.055161, -0.072999), (0.049493, -0.051869, 0.035713), (0.049436, -0.051869, -0.044625), (-0.049552, -0.051869, -0.044741), (-0.049425, -0.051869, 0.035642), (0, -0.055161, 0.042674), (0, -0.055161, 0.064032), (0, -0.056207, 0.064717), (0, -0.056207, 0.067801), (0, 0.028447, 0.067801), (0, 0.042722, 0.063976), (0, 0.053172, 0.053526), (0, 0.056998, 0.039251), (0, 0.056998, -0.048218), (0, 0.053172, -0.062493), (0, 0.042722, -0.072943), (0, 0.028447, -0.076768), (0, -0.056207, -0.076768), (0, -0.056207, -0.073684), (0, -0.055161, -0.072999), (0, -0.055161, -0.051641), (-0.000062, -0.051869, -0.047888), (-0.000058, -0.051869, -0.044683), (0.000034, -0.051869, 0.035677), (0.000038, -0.051869, 0.038921)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(0.828056, -4.551022), (0.828056, -4.560472), (0.837506, -4.560472), (0.837506, -4.551022), (0.115487, 0.167086), (0.090426, 0.192147), (0.093352, 0.173233), (0.096574, 0.170012), (0.873688, 0.832914), (0.898861, 0.807742), (0.895736, 0.826966), (0.892911, 0.82979), (0.090426, 0.808322), (0.115018, 0.832914), (0.097351, 0.830765), (0.092575, 0.82599), (0.89124, 0.16854), (0.897406, 0.174705), (0.898861, 0.1912), (0.874746, 0.167086), (0.090426, 0.808322), (0.115035, 0.808304), (0.115018, 0.832914), (0.115035, 0.808304), (0.494382, 0.808033), (0.494353, 0.832914), (0.115018, 0.832914), (0.115487, 0.167086), (0.11547, 0.192117), (0.090426, 0.192147), (0.495117, 0.167086), (0.495089, 0.191673), (0.11547, 0.192117), (0.115487, 0.167086), (0.11547, 0.192117), (0.495089, 0.191673), (0.494382, 0.808033), (0.115035, 0.808304), (0.090426, 0.192147), (0.11547, 0.192117), (0.115035, 0.808304), (0.090426, 0.808322), (0.874746, 0.167086), (0.898861, 0.1912), (0.874707, 0.191228), (0.873729, 0.80776), (0.874707, 0.191228), (0.898861, 0.1912), (0.898861, 0.807742), (0.873688, 0.832914), (0.873729, 0.80776), (0.898861, 0.807742), (0.874746, 0.167086), (0.874707, 0.191228), (0.495089, 0.191673), (0.495117, 0.167086), (0.494382, 0.808033), (0.495089, 0.191673), (0.874707, 0.191228), (0.873729, 0.80776), (0.494353, 0.832914), (0.494382, 0.808033), (0.873729, 0.80776), (0.873688, 0.832914)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_AlarmClock_16_3"
        {
            token outputs:surface.connect = </root/_materials/M_AlarmClock_16_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0, 0, 0)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }
    }
}

