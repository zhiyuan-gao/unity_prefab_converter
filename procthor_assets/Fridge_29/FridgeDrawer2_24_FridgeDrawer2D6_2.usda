#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "FridgeDrawer2D6"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "FridgeDrawer2D6" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.58829, -0.307154, -1.088934), (0.135988, 0.240016, -0.656735)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 8, 8, 4, 4, 4, 4, 4, 4, 8, 4, 4, 8, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 4, 5, 7, 6, 33, 28, 46, 51, 28, 30, 48, 46, 30, 37, 55, 48, 37, 36, 54, 55, 36, 39, 57, 54, 39, 38, 56, 57, 38, 31, 49, 56, 31, 29, 47, 49, 29, 34, 52, 47, 34, 35, 53, 52, 35, 32, 50, 53, 32, 33, 51, 50, 107, 111, 95, 94, 108, 105, 98, 99, 103, 109, 96, 97, 110, 101, 93, 92, 111, 110, 92, 95, 109, 108, 99, 96, 106, 107, 94, 89, 104, 106, 89, 91, 105, 104, 91, 98, 102, 103, 97, 90, 100, 102, 90, 88, 101, 100, 88, 93, 77, 76, 57, 56, 77, 56, 49, 78, 79, 78, 49, 47, 80, 79, 47, 52, 81, 80, 52, 53, 82, 81, 53, 50, 83, 82, 50, 51, 84, 83, 51, 46, 85, 84, 46, 48, 86, 85, 48, 55, 87, 86, 55, 54, 76, 87, 54, 57, 28, 33, 93, 88, 33, 32, 92, 93, 32, 35, 95, 92, 35, 34, 94, 95, 34, 29, 89, 94, 29, 31, 91, 89, 31, 38, 98, 91, 38, 39, 99, 98, 39, 36, 96, 99, 36, 37, 97, 96, 37, 30, 90, 97, 30, 28, 88, 90, 65, 64, 100, 101, 64, 66, 102, 100, 66, 67, 103, 102, 67, 73, 109, 103, 73, 72, 108, 109, 72, 69, 105, 108, 69, 68, 104, 105, 68, 70, 106, 104, 70, 71, 107, 106, 71, 75, 111, 107, 75, 74, 110, 111, 74, 65, 101, 110, 8, 9, 11, 10, 12, 13, 15, 14, 16, 17, 19, 18, 135, 129, 87, 76, 130, 86, 87, 129, 130, 125, 85, 86, 125, 158, 156, 154, 124, 58, 84, 85, 59, 127, 161, 163, 165, 126, 78, 79, 133, 77, 78, 126, 133, 135, 76, 77, 122, 117, 69, 72, 73, 67, 112, 121, 121, 122, 72, 73, 65, 40, 41, 64, 119, 150, 149, 148, 118, 43, 70, 68, 117, 119, 68, 69, 114, 112, 67, 66, 41, 115, 151, 152, 153, 114, 66, 64, 70, 43, 42, 71, 134, 132, 62, 63, 75, 44, 45, 74, 74, 45, 40, 65, 61, 131, 128, 60, 60, 128, 134, 63, 71, 42, 44, 75, 127, 59, 62, 132, 61, 58, 124, 131, 115, 41, 40, 113, 80, 62, 59, 79, 81, 63, 62, 80, 82, 60, 63, 81, 83, 61, 60, 82, 84, 58, 61, 83, 43, 118, 116, 42, 45, 44, 123, 120, 120, 113, 40, 45, 44, 42, 116, 123, 123, 116, 136, 137, 137, 136, 138, 139, 139, 138, 140, 141, 141, 140, 117, 122, 113, 120, 142, 143, 143, 142, 144, 145, 145, 144, 146, 147, 147, 146, 121, 112, 120, 123, 137, 142, 142, 137, 139, 144, 144, 139, 141, 146, 146, 141, 122, 121, 116, 118, 148, 136, 136, 148, 149, 138, 138, 149, 150, 140, 140, 150, 119, 117, 115, 113, 143, 151, 151, 143, 145, 152, 152, 145, 147, 153, 153, 147, 112, 114, 131, 124, 154, 155, 155, 154, 156, 157, 157, 156, 158, 159, 159, 158, 125, 130, 127, 132, 160, 161, 161, 160, 162, 163, 163, 162, 164, 165, 165, 164, 133, 126, 134, 128, 166, 167, 167, 166, 168, 169, 169, 168, 170, 171, 171, 170, 129, 135, 128, 131, 155, 166, 166, 155, 157, 168, 168, 157, 159, 170, 170, 159, 130, 129, 132, 134, 167, 160, 160, 167, 169, 162, 162, 169, 171, 164, 164, 171, 135, 133, 20, 21, 23, 22, 24, 25, 27, 26]
            rel material:binding = </root/_materials/M_FridgeDrawer2D6_0>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-3.2918467e-7, 0, -1), (-3.4747413e-7, 0, -1), (0, 0, -1), (-3.2918467e-7, 0, -1), (-3.41578e-7, 0, -1), (-3.35469e-7, 0, -1), (-3.4747413e-7, 0, -1), (-3.41578e-7, 0, -1), (2.2770526e-7, 0, -1), (2.2366055e-7, 0, -1), (-3.35469e-7, 0, -1), (2.2770526e-7, 0, -1), (2.1947176e-7, 0, -1), (2.3163616e-7, 0, -1), (2.2366055e-7, 0, -1), (2.1947176e-7, 0, -1), (0, 0, -1), (0, 0, -1), (2.3163616e-7, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.000004929337, -0.9228418, 0.38517925), (0, -0.9229264, 0.38497636), (0.000004918977, -0.92292887, -0.38497052), (0, -0.9228443, -0.3851734), (0.026095906, 0.9236267, 0.3824039), (0.06350741, 0.92182237, 0.38237455), (0.06350048, 0.92182547, -0.38236827), (0.026098253, 0.9236291, -0.382398), (-0.06350026, 0.9218263, 0.38236654), (-0.026095532, 0.923628, 0.3824006), (-0.026093125, 0.92363054, -0.3823949), (-0.06350814, 0.92182785, -0.38236117), (-0.000004918966, -0.9229264, 0.38497636), (0, -0.9228429, 0.38517642), (0.000004929349, -0.92284536, -0.38517058), (0, -0.9229289, -0.3849705), (0, -0.9229264, 0.38497636), (-0.000004918966, -0.9229264, 0.38497636), (0, -0.9229289, -0.3849705), (0.000004918977, -0.92292887, -0.38497052), (-0.026095532, 0.923628, 0.3824006), (0.026095906, 0.9236267, 0.3824039), (0.026098253, 0.9236291, -0.382398), (-0.026093125, 0.92363054, -0.3823949), (0.0000025480986, -0.9537531, 0.30059114), (-0.000004929337, -0.9228418, 0.38517925), (0, -0.9228443, -0.3851734), (0, -0.9537541, -0.30058798), (0.9270306, -0.0000016726553, 0.37498578), (0.9302757, 0, 0.3668611), (0.93028116, 3.2410026e-7, -0.36684728), (0.92703635, 0, -0.37497145), (0.06350741, 0.92182237, 0.38237455), (0.09517601, 0.94690806, 0.30709407), (0.095204934, 0.9469062, -0.30709064), (0.06350048, 0.92182547, -0.38236827), (-0.09520502, 0.9469091, 0.30708158), (-0.06350026, 0.9218263, 0.38236654), (-0.06350814, 0.92182785, -0.38236117), (-0.0951775, 0.9469131, -0.30707818), (-0.93027306, 3.2782555e-7, 0.36686787), (-0.92702854, 0, 0.37499076), (-0.92703426, -0.0000016763806, -0.3749765), (-0.93027854, 0, -0.36685407), (0, -0.9228429, 0.38517642), (0, -0.95375633, 0.30058107), (-0.0000025741756, -0.9537574, -0.30057788), (0.000004929349, -0.92284536, -0.38517058), (-0.06808258, -0.9976797, 0), (-0.028722582, -0.9995874, -1.7846153e-7), (-0.028683987, -0.9995885, 0), (-0.06811264, -0.9976776, -0.0000023911582), (-0.06808258, -0.9976797, 0), (-0.06811264, -0.9976776, -0.0000023911582), (-0.100007586, -0.9949867, 0), (-0.10000762, -0.9949867, 0), (-1, 3.358165e-8, 0), (-1, 3.358165e-8, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 0.99999994, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.06808258, -0.9976797, -6.675046e-7), (0.100007616, -0.9949867, 0), (0.100007564, -0.9949867, 0), (0.068112634, -0.9976776, 0), (0.028722595, -0.9995874, 0), (0.06808258, -0.9976797, -6.675046e-7), (0.068112634, -0.9976776, 0), (0.028684, -0.9995885, 1.4101057e-7), (-0.028722582, -0.9995874, -1.7846153e-7), (0.028722595, -0.9995874, 0), (0.028684, -0.9995885, 1.4101057e-7), (-0.028683987, -0.9995885, 0), (0, -0.8337762, -0.55210257), (0, -0.83377504, -0.5521044), (0.000004929349, -0.92284536, -0.38517058), (-0.0000025741756, -0.9537574, -0.30057788), (0, -0.83377504, -0.5521044), (0, -0.83377445, -0.5521053), (0, -0.9229289, -0.3849705), (0.000004929349, -0.92284536, -0.38517058), (0, -0.83377445, -0.5521053), (0, -0.8337744, -0.55210537), (0.000004918977, -0.92292887, -0.38497052), (0, -0.9229289, -0.3849705), (0, -0.8337744, -0.55210537), (0, -0.83377165, -0.5521094), (0, -0.9228443, -0.3851734), (0.000004918977, -0.92292887, -0.38497052), (0, -0.83377165, -0.5521094), (0, -0.8337697, -0.5521125), (0, -0.9537541, -0.30058798), (0, -0.9228443, -0.3851734), (0.7696357, 0, -0.6384833), (0.7696357, 0, -0.6384833), (0.92703635, 0, -0.37497145), (0.93028116, 3.2410026e-7, -0.36684728), (0.083309844, 0.82884145, -0.55324614), (0.055993732, 0.8313752, -0.5528834), (0.06350048, 0.92182547, -0.38236827), (0.095204934, 0.9469062, -0.30709064), (0.055993732, 0.8313752, -0.5528834), (0.023578718, 0.8331863, -0.55248934), (0.026098253, 0.9236291, -0.382398), (0.06350048, 0.92182547, -0.38236827), (0.023578718, 0.8331863, -0.55248934), (-0.023678731, 0.83318424, -0.55248827), (-0.026093125, 0.92363054, -0.3823949), (0.026098253, 0.9236291, -0.382398), (-0.023678731, 0.83318424, -0.55248827), (-0.05599479, 0.8313877, -0.55286425), (-0.06350814, 0.92182785, -0.38236117), (-0.026093125, 0.92363054, -0.3823949), (-0.05599479, 0.8313877, -0.55286425), (-0.083311066, 0.8288516, -0.5532309), (-0.0951775, 0.9469131, -0.30707818), (-0.06350814, 0.92182785, -0.38236117), (-0.7698088, 0, -0.63827467), (-0.7698088, 0, -0.63827467), (-0.93027854, 0, -0.36685407), (-0.92703426, -0.0000016763806, -0.3749765), (-0.000016241318, -0.8033599, 0.5954937), (-0.00001758337, -0.72457355, 0.68919766), (0, -0.95375633, 0.30058107), (0, -0.9228429, 0.38517642), (-0.620133, 0.00002152511, 0.78449667), (-0.6266797, -0.00001707673, 0.779277), (-0.92702854, 0, 0.37499076), (-0.93027306, 3.2782555e-7, 0.36686787), (-0.072955504, 0.72432935, 0.68558335), (-0.052103356, 0.8033795, 0.5931834), (-0.06350026, 0.9218263, 0.38236654), (-0.09520502, 0.9469091, 0.30708158), (-0.052103356, 0.8033795, 0.5931834), (-0.024280436, 0.8051476, 0.59257734), (-0.026095532, 0.923628, 0.3824006), (-0.06350026, 0.9218263, 0.38236654), (-0.024280436, 0.8051476, 0.59257734), (0.024268568, 0.80514544, 0.5925807), (0.026095906, 0.9236267, 0.3824039), (-0.026095532, 0.923628, 0.3824006), (0.024268568, 0.80514544, 0.5925807), (0.052102484, 0.80337477, 0.5931901), (0.06350741, 0.92182237, 0.38237455), (0.026095906, 0.9236267, 0.3824039), (0.052102484, 0.80337477, 0.5931901), (0.0728253, 0.72432286, 0.68560404), (0.09517601, 0.94690806, 0.30709407), (0.06350741, 0.92182237, 0.38237455), (0.6266738, 0.000023543467, 0.77928174), (0.6201257, -0.0000072717667, 0.78450245), (0.9302757, 0, 0.3668611), (0.9270306, -0.0000016726553, 0.37498578), (0.000012584502, -0.7245585, 0.6892134), (0, -0.8033582, 0.5954962), (-0.000004929337, -0.9228418, 0.38517925), (0.0000025480986, -0.9537531, 0.30059114), (0, -0.8033582, 0.5954962), (0, -0.80335957, 0.59549415), (0, -0.9229264, 0.38497636), (-0.000004929337, -0.9228418, 0.38517925), (0, -0.80335957, 0.59549415), (0, -0.80335957, 0.59549415), (-0.000004918966, -0.9229264, 0.38497636), (0, -0.9229264, 0.38497636), (0, -0.80335957, 0.59549415), (-0.000016241318, -0.8033599, 0.5954937), (0, -0.9228429, 0.38517642), (-0.000004918966, -0.9229264, 0.38497636), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.028496057, -0.98622954, -0.16290879), (0.028495863, -0.98622954, -0.16290879), (0.028722595, -0.9995874, 0), (-0.028722582, -0.9995874, -1.7846153e-7), (0.06651133, -0.9844518, -0.16257596), (0.06808258, -0.9976797, -6.675046e-7), (0.028722595, -0.9995874, 0), (0.028495863, -0.98622954, -0.16290879), (0.06651133, -0.9844518, -0.16257596), (0.09870078, -0.98161626, -0.1633638), (0.100007616, -0.9949867, 0), (0.06808258, -0.9976797, -6.675046e-7), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 6.71633e-8, 0), (-1, 6.71633e-8, 0), (-1, 6.71633e-8, 0), (-1, 6.71633e-8, 0), (-1, 6.71633e-8, 0), (-1, 6.71633e-8, 0), (-1, 3.358165e-8, 0), (-1, 3.358165e-8, 0), (-0.06651123, -0.9844518, -0.16257595), (-0.06808258, -0.9976797, 0), (-0.10000762, -0.9949867, 0), (-0.09870065, -0.9816163, -0.1633638), (-0.06651123, -0.9844518, -0.16257595), (-0.028496057, -0.98622954, -0.16290879), (-0.028722582, -0.9995874, -1.7846153e-7), (-0.06808258, -0.9976797, 0), (0.02799238, 0.9877373, 0.15359499), (0.06700493, 0.98590773, 0.15328485), (0.052102484, 0.80337477, 0.5931901), (0.024268568, 0.80514544, 0.5925807), (-0.024280436, 0.8051476, 0.59257734), (-0.052103356, 0.8033795, 0.5931834), (-0.067004785, 0.9859077, 0.15328482), (-0.028005928, 0.987737, 0.15359432), (-0.028005928, 0.987737, 0.15359432), (0.02799238, 0.9877373, 0.15359499), (0.024268568, 0.80514544, 0.5925807), (-0.024280436, 0.8051476, 0.59257734), (-0.000016241318, -0.8033599, 0.5954937), (0, -1, 0), (0, -1, 0), (-0.00001758337, -0.72457355, 0.68919766), (1, -1.2338953e-7, 0), (1, -1.2338953e-7, 0), (1, -1.2338953e-7, 0), (1, -1.2338953e-7, 0), (1, -1.2338953e-7, 0), (1, -1.2338953e-7, 0), (0.6201257, -0.0000072717667, 0.78450245), (0.6266738, 0.000023543467, 0.77928174), (0.06700493, 0.98590773, 0.15328485), (0.09881817, 0.9831647, 0.1536946), (0.0728253, 0.72432286, 0.68560404), (0.052102484, 0.80337477, 0.5931901), (-0.098798975, 0.98316664, 0.15369461), (-0.067004785, 0.9859077, 0.15328482), (-0.052103356, 0.8033795, 0.5931834), (-0.072955504, 0.72432935, 0.68558335), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.6266797, -0.00001707673, 0.779277), (-0.620133, 0.00002152511, 0.78449667), (0.000012584502, -0.7245585, 0.6892134), (0, -1, 0), (0, -1, 0), (0, -0.8033582, 0.5954962), (-0.0056918813, -0.22485769, -0.974375), (-0.0171009, -0.224479, -0.9743288), (0, 0, -1), (0, 0, -1), (0, -0.80335957, 0.59549415), (0, -1, 0), (0, -1, 0), (0, -0.80335957, 0.59549415), (0, -0.80335957, 0.59549415), (0, -1, 0), (0, -1, 0), (-0.000016241318, -0.8033599, 0.5954937), (-8.936967e-8, 0, -1), (0.017097041, -0.22447959, -0.9743287), (0.005695945, -0.22485758, -0.974375), (0, 0, -1), (0, 0, -1), (0.005695945, -0.22485758, -0.974375), (-0.0056918813, -0.22485769, -0.974375), (0, 0, -1), (0, -0.8033582, 0.5954962), (0, -1, 0), (0, -1, 0), (0, -0.80335957, 0.59549415), (-0.021087982, -0.21004851, -0.9774635), (0, 0, -1), (0, 0, -1), (-0.0171009, -0.224479, -0.9743288), (-8.936967e-8, 0, -1), (-1.7839263e-7, 0, -1), (0.021096852, -0.210048, -0.9774634), (0.017097041, -0.22447959, -0.9743287), (-0.019294487, 0.19218904, 0.9811682), (0, 0, 1), (-2.8743074e-7, 0, 1), (-0.015994191, 0.20969564, 0.9776359), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0.99999994, 0), (0, 1, 0), (0, 1, 0), (0, 0, 1), (0.019293208, 0.19218916, 0.9811682), (0.016005196, 0.20969479, 0.9776359), (2.380286e-7, 0, 1), (-2.875675e-7, 0, 1), (2.3814187e-7, 0, 1), (0.0053943777, 0.2099947, 0.9776876), (-0.005290418, 0.20995215, 0.9776974), (-0.005290418, 0.20995215, 0.9776974), (-0.015994191, 0.20969564, 0.9776359), (-2.8743074e-7, 0, 1), (-2.875675e-7, 0, 1), (2.3814187e-7, 0, 1), (2.380286e-7, 0, 1), (0.016005196, 0.20969479, 0.9776359), (0.0053943777, 0.2099947, 0.9776876), (0.0053943777, 0.2099947, 0.9776876), (0.016005196, 0.20969479, 0.9776359), (0.028903568, 0.41889715, 0.9075736), (0.011891447, 0.42174307, 0.9066374), (0.011891447, 0.42174307, 0.9066374), (0.028903568, 0.41889715, 0.9075736), (0.051008265, 0.74359536, 0.66668135), (0.02100513, 0.74576306, 0.66588), (0.02100513, 0.74576306, 0.66588), (0.051008265, 0.74359536, 0.66668135), (0.064022124, 0.9356524, 0.34706742), (0.026389187, 0.9376072, 0.34669355), (0.026389187, 0.9376072, 0.34669355), (0.064022124, 0.9356524, 0.34706742), (0.06700493, 0.98590773, 0.15328485), (0.02799238, 0.9877373, 0.15359499), (-0.015994191, 0.20969564, 0.9776359), (-0.005290418, 0.20995215, 0.9776974), (-0.011907945, 0.42170545, 0.9066546), (-0.02890437, 0.41889697, 0.90757364), (-0.02890437, 0.41889697, 0.90757364), (-0.011907945, 0.42170545, 0.9066546), (-0.0209937, 0.7458277, 0.665808), (-0.051008582, 0.74359506, 0.6666816), (-0.051008582, 0.74359506, 0.6666816), (-0.0209937, 0.7458277, 0.665808), (-0.026424294, 0.9375965, 0.34671944), (-0.06398281, 0.935647, 0.3470888), (-0.06398281, 0.935647, 0.3470888), (-0.026424294, 0.9375965, 0.34671944), (-0.028005928, 0.987737, 0.15359432), (-0.067004785, 0.9859077, 0.15328482), (-0.005290418, 0.20995215, 0.9776974), (0.0053943777, 0.2099947, 0.9776876), (0.011891447, 0.42174307, 0.9066374), (-0.011907945, 0.42170545, 0.9066546), (-0.011907945, 0.42170545, 0.9066546), (0.011891447, 0.42174307, 0.9066374), (0.02100513, 0.74576306, 0.66588), (-0.0209937, 0.7458277, 0.665808), (-0.0209937, 0.7458277, 0.665808), (0.02100513, 0.74576306, 0.66588), (0.026389187, 0.9376072, 0.34669355), (-0.026424294, 0.9375965, 0.34671944), (-0.026424294, 0.9375965, 0.34671944), (0.026389187, 0.9376072, 0.34669355), (0.02799238, 0.9877373, 0.15359499), (-0.028005928, 0.987737, 0.15359432), (0.016005196, 0.20969479, 0.9776359), (0.019293208, 0.19218916, 0.9811682), (0.040902108, 0.40711722, 0.9124597), (0.028903568, 0.41889715, 0.9075736), (0.028903568, 0.41889715, 0.9075736), (0.040902108, 0.40711722, 0.9124597), (0.07410162, 0.7368162, 0.67201996), (0.051008265, 0.74359536, 0.66668135), (0.051008265, 0.74359536, 0.66668135), (0.07410162, 0.7368162, 0.67201996), (0.093725115, 0.93203753, 0.35003087), (0.064022124, 0.9356524, 0.34706742), (0.064022124, 0.9356524, 0.34706742), (0.093725115, 0.93203753, 0.35003087), (0.09881817, 0.9831647, 0.1536946), (0.06700493, 0.98590773, 0.15328485), (-0.019294487, 0.19218904, 0.9811682), (-0.015994191, 0.20969564, 0.9776359), (-0.02890437, 0.41889697, 0.90757364), (-0.04090216, 0.40711746, 0.9124595), (-0.04090216, 0.40711746, 0.9124595), (-0.02890437, 0.41889697, 0.90757364), (-0.051008582, 0.74359506, 0.6666816), (-0.0741017, 0.73681647, 0.6720198), (-0.0741017, 0.73681647, 0.6720198), (-0.051008582, 0.74359506, 0.6666816), (-0.06398281, 0.935647, 0.3470888), (-0.093704194, 0.93203944, 0.3500312), (-0.093704194, 0.93203944, 0.3500312), (-0.06398281, 0.935647, 0.3470888), (-0.067004785, 0.9859077, 0.15328482), (-0.098798975, 0.98316664, 0.15369461), (0.017097041, -0.22447959, -0.9743287), (0.021096852, -0.210048, -0.9774634), (0.040802132, -0.40571818, -0.913087), (0.02820511, -0.41732016, -0.9083218), (0.02820511, -0.41732016, -0.9083218), (0.040802132, -0.40571818, -0.913087), (0.07400302, -0.73573184, -0.6732178), (0.04990046, -0.7424937, -0.66799194), (0.04990046, -0.7424937, -0.66799194), (0.07400302, -0.73573184, -0.6732178), (0.093704425, -0.93174386, -0.3508174), (0.062923916, -0.93541986, -0.3478941), (0.062923916, -0.93541986, -0.3478941), (0.093704425, -0.93174386, -0.3508174), (0.09870078, -0.98161626, -0.1633638), (0.06651133, -0.9844518, -0.16257596), (-0.021087982, -0.21004851, -0.9774635), (-0.0171009, -0.224479, -0.9743288), (-0.028204637, -0.41731974, -0.908322), (-0.04080207, -0.40571767, -0.91308725), (-0.04080207, -0.40571767, -0.91308725), (-0.028204637, -0.41731974, -0.908322), (-0.049900476, -0.7424934, -0.6679922), (-0.074003056, -0.73573196, -0.6732177), (-0.074003056, -0.73573196, -0.6732177), (-0.049900476, -0.7424934, -0.6679922), (-0.06287971, -0.9354136, -0.34791896), (-0.09370108, -0.93170786, -0.35091388), (-0.09370108, -0.93170786, -0.35091388), (-0.06287971, -0.9354136, -0.34791896), (-0.06651123, -0.9844518, -0.16257595), (-0.09870065, -0.9816163, -0.1633638), (-0.0056918813, -0.22485769, -0.974375), (0.005695945, -0.22485758, -0.974375), (0.012408279, -0.42089248, -0.90702564), (-0.0123992795, -0.42078778, -0.9070744), (-0.0123992795, -0.42078778, -0.9070744), (0.012408279, -0.42089248, -0.90702564), (0.021692595, -0.7450148, -0.666695), (-0.02169228, -0.74501425, -0.66669565), (-0.02169228, -0.74501425, -0.66669565), (0.021692595, -0.7450148, -0.666695), (0.02729188, -0.9373528, -0.34731108), (-0.027291851, -0.9373527, -0.34731108), (-0.027291851, -0.9373527, -0.34731108), (0.02729188, -0.9373528, -0.34731108), (0.028495863, -0.98622954, -0.16290879), (-0.028496057, -0.98622954, -0.16290879), (0.005695945, -0.22485758, -0.974375), (0.017097041, -0.22447959, -0.9743287), (0.02820511, -0.41732016, -0.9083218), (0.012408279, -0.42089248, -0.90702564), (0.012408279, -0.42089248, -0.90702564), (0.02820511, -0.41732016, -0.9083218), (0.04990046, -0.7424937, -0.66799194), (0.021692595, -0.7450148, -0.666695), (0.021692595, -0.7450148, -0.666695), (0.04990046, -0.7424937, -0.66799194), (0.062923916, -0.93541986, -0.3478941), (0.02729188, -0.9373528, -0.34731108), (0.02729188, -0.9373528, -0.34731108), (0.062923916, -0.93541986, -0.3478941), (0.06651133, -0.9844518, -0.16257596), (0.028495863, -0.98622954, -0.16290879), (-0.0171009, -0.224479, -0.9743288), (-0.0056918813, -0.22485769, -0.974375), (-0.0123992795, -0.42078778, -0.9070744), (-0.028204637, -0.41731974, -0.908322), (-0.028204637, -0.41731974, -0.908322), (-0.0123992795, -0.42078778, -0.9070744), (-0.02169228, -0.74501425, -0.66669565), (-0.049900476, -0.7424934, -0.6679922), (-0.049900476, -0.7424934, -0.6679922), (-0.02169228, -0.74501425, -0.66669565), (-0.027291851, -0.9373527, -0.34731108), (-0.06287971, -0.9354136, -0.34791896), (-0.06287971, -0.9354136, -0.34791896), (-0.027291851, -0.9373527, -0.34731108), (-0.028496057, -0.98622954, -0.16290879), (-0.06651123, -0.9844518, -0.16257595), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.116504, 0.041805, -1.088934), (0.116491, 0.041805, -1.088934), (0.116504, 0.041815, -1.088934), (0.116491, 0.041815, -1.088934), (0.116504, 0.041805, -1.088934), (0.116491, 0.041805, -1.088934), (0.116504, 0.041815, -1.088934), (0.116491, 0.041815, -1.088934), (0.116504, 0.041805, -1.088934), (0.116491, 0.041805, -1.088934), (0.116504, 0.041815, -1.088934), (0.116491, 0.041815, -1.088934), (0.116504, 0.041805, -1.088934), (0.116491, 0.041805, -1.088934), (0.116504, 0.041815, -1.088934), (0.116491, 0.041815, -1.088934), (0.116504, 0.041805, -1.088934), (0.116491, 0.041805, -1.088934), (0.116504, 0.041815, -1.088934), (0.116491, 0.041815, -1.088934), (0.116504, 0.041805, -1.088934), (0.116491, 0.041805, -1.088934), (0.116504, 0.041815, -1.088934), (0.116491, 0.041815, -1.088934), (0.116504, 0.041805, -1.088934), (0.116491, 0.041805, -1.088934), (0.116504, 0.041815, -1.088934), (0.116491, 0.041815, -1.088934), (0.13426, 0.238636, -0.656735), (-0.586561, 0.238636, -0.656735), (0.13426, -0.281624, -0.656735), (-0.586561, -0.281624, -0.656735), (-0.157526, 0.238636, -0.656735), (-0.054502, 0.238636, -0.656735), (-0.397799, 0.238636, -0.656735), (-0.294775, 0.238636, -0.656735), (-0.157526, -0.305774, -0.656735), (-0.054905, -0.300637, -0.656735), (-0.397396, -0.300637, -0.656735), (-0.294775, -0.305774, -0.656735), (-0.054502, 0.238636, -0.89978), (0.13426, 0.238636, -0.89978), (-0.397799, 0.238636, -0.89978), (-0.586561, 0.238636, -0.89978), (-0.294775, 0.238636, -0.89978), (-0.157526, 0.238636, -0.89978), (0.121641, 0.228562, -0.656735), (-0.573943, 0.228562, -0.656735), (0.121641, -0.272739, -0.656735), (-0.573943, -0.272739, -0.656735), (-0.157526, 0.228562, -0.656735), (-0.054502, 0.228562, -0.656735), (-0.397799, 0.228562, -0.656735), (-0.294775, 0.228562, -0.656735), (-0.157921, -0.2957, -0.656735), (-0.05609, -0.290603, -0.656735), (-0.396212, -0.290603, -0.656735), (-0.294381, -0.2957, -0.656735), (0.121641, 0.228562, -0.888972), (-0.573943, 0.228562, -0.888972), (-0.157526, 0.228562, -0.888972), (-0.054502, 0.228562, -0.888972), (-0.397799, 0.228562, -0.888972), (-0.294775, 0.228562, -0.888972), (0.13426, 0.238636, -0.666918), (-0.054502, 0.238636, -0.666918), (0.13426, -0.281624, -0.666918), (-0.054905, -0.300637, -0.666918), (-0.586561, -0.281624, -0.666918), (-0.397396, -0.300637, -0.666918), (-0.586561, 0.238636, -0.666918), (-0.397799, 0.238636, -0.666918), (-0.294775, -0.305774, -0.666918), (-0.157526, -0.305774, -0.666918), (-0.157526, 0.238636, -0.666918), (-0.294775, 0.238636, -0.666918), (-0.294381, -0.2957, -0.666918), (-0.396212, -0.290603, -0.666918), (-0.573943, -0.272739, -0.666918), (-0.573943, 0.228562, -0.666918), (-0.397799, 0.228562, -0.666918), (-0.294775, 0.228562, -0.666918), (-0.157526, 0.228562, -0.666918), (-0.054502, 0.228562, -0.666918), (0.121641, 0.228562, -0.666918), (0.121641, -0.272739, -0.666918), (-0.05609, -0.290603, -0.666918), (-0.157921, -0.2957, -0.666918), (0.135988, 0.240016, -0.658819), (-0.58829, 0.240016, -0.658819), (0.135988, -0.282841, -0.658819), (-0.58829, -0.282841, -0.658819), (-0.157526, 0.240016, -0.658819), (-0.054502, 0.240016, -0.658819), (-0.397799, 0.240016, -0.658819), (-0.294775, 0.240016, -0.658819), (-0.157472, -0.307154, -0.658819), (-0.054743, -0.302012, -0.658819), (-0.397558, -0.302012, -0.658819), (-0.29483, -0.307154, -0.658819), (0.135988, 0.240016, -0.664834), (-0.054502, 0.240016, -0.664834), (0.135988, -0.282841, -0.664834), (-0.054743, -0.302012, -0.664834), (-0.58829, -0.282841, -0.664834), (-0.397558, -0.302012, -0.664834), (-0.58829, 0.240016, -0.664834), (-0.397799, 0.240016, -0.664834), (-0.29483, -0.307154, -0.664834), (-0.157472, -0.307154, -0.664834), (-0.157526, 0.240016, -0.664834), (-0.294775, 0.240016, -0.664834), (-0.054905, -0.300637, -0.856703), (-0.054877, -0.262687, -0.89978), (0.13426, -0.281624, -0.856703), (0.13426, -0.243674, -0.89978), (-0.397424, -0.262687, -0.89978), (-0.397396, -0.300637, -0.856703), (-0.586561, -0.243674, -0.89978), (-0.586561, -0.281624, -0.856703), (-0.157526, -0.267824, -0.89978), (-0.157526, -0.305774, -0.856703), (-0.294775, -0.305774, -0.856703), (-0.294775, -0.267824, -0.89978), (0.121641, -0.234789, -0.888972), (0.121641, -0.272739, -0.845894), (-0.573943, -0.272739, -0.845894), (-0.573943, -0.234789, -0.888972), (-0.157892, -0.25775, -0.888972), (-0.157921, -0.2957, -0.845894), (-0.05609, -0.290603, -0.845894), (-0.055973, -0.252653, -0.888972), (-0.396328, -0.252653, -0.888972), (-0.396212, -0.290603, -0.845894), (-0.294409, -0.25775, -0.888972), (-0.294381, -0.2957, -0.845894), (-0.397413, -0.27721, -0.896501), (-0.294775, -0.282347, -0.896501), (-0.397404, -0.289522, -0.887163), (-0.294775, -0.294659, -0.887163), (-0.397398, -0.297748, -0.873188), (-0.294775, -0.302885, -0.873188), (-0.157526, -0.282347, -0.896501), (-0.054888, -0.27721, -0.896501), (-0.157526, -0.294659, -0.887163), (-0.054897, -0.289522, -0.887163), (-0.157526, -0.302885, -0.873188), (-0.054903, -0.297748, -0.873188), (-0.586561, -0.258197, -0.896501), (-0.586561, -0.270509, -0.887163), (-0.586561, -0.278735, -0.873188), (0.13426, -0.258197, -0.896501), (0.13426, -0.270509, -0.887163), (0.13426, -0.278735, -0.873188), (0.121641, -0.249312, -0.885693), (-0.056018, -0.267176, -0.885693), (0.121641, -0.261624, -0.876355), (-0.056056, -0.279487, -0.876355), (0.121641, -0.26985, -0.862379), (-0.056081, -0.287714, -0.862379), (-0.396284, -0.267176, -0.885693), (-0.573943, -0.249312, -0.885693), (-0.396246, -0.279487, -0.876355), (-0.573943, -0.261624, -0.876355), (-0.396221, -0.287714, -0.862379), (-0.573943, -0.26985, -0.862379), (-0.157903, -0.272273, -0.885693), (-0.294398, -0.272273, -0.885693), (-0.157913, -0.284585, -0.876355), (-0.294389, -0.284585, -0.876355), (-0.157919, -0.292811, -0.862379), (-0.294383, -0.292811, -0.862379)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-172.62885, -111.27125), (-172.62885, -111.27129), (-172.62881, -111.27129), (-172.62881, -111.27125), (-138.11813, -114.56416), (-138.11813, -114.564285), (-138.1179, -114.564285), (-138.1179, -114.56416), (-142.88947, 0.936311), (-142.88947, 1.416122), (-142.91507, 1.384047), (-142.91507, 0.936311), (-142.88947, 1.416122), (-144.21191, 1.416122), (-144.18933, 1.384047), (-142.91507, 1.384047), (-144.21191, 1.416122), (-144.26024, 0.935286), (-144.23474, 0.932276), (-144.18933, 1.384047), (-144.26024, 0.935286), (-144.2733, 0.674436), (-144.2477, 0.673432), (-144.23474, 0.932276), (-144.2733, 0.674436), (-144.2733, 0.325564), (-144.2477, 0.326567), (-144.2477, 0.673432), (-144.2733, 0.325564), (-144.26024, 0.064714), (-144.23474, 0.067724), (-144.2477, 0.326567), (-144.26024, 0.064714), (-144.21191, -0.416122), (-144.18933, -0.384047), (-144.23474, 0.067724), (-144.21191, -0.416122), (-142.88947, -0.416122), (-142.91507, -0.384047), (-144.18933, -0.384047), (-142.88947, -0.416122), (-142.88947, 0.063689), (-142.91507, 0.063689), (-142.91507, -0.384047), (-142.88947, 0.063689), (-142.88947, 0.325564), (-142.91507, 0.325564), (-142.91507, 0.063689), (-142.88947, 0.325564), (-142.88947, 0.674436), (-142.91507, 0.674436), (-142.91507, 0.325564), (-142.88947, 0.674436), (-142.88947, 0.936311), (-142.91507, 0.936311), (-142.91507, 0.674436), (-143.18884, 0.064553), (-143.18884, 0.325909), (-143.20412, 0.325909), (-143.20412, 0.064553), (-143.18095, 0.325498), (-143.18095, 0.064484), (-143.16566, 0.064484), (-143.16566, 0.325498), (-143.18095, 0.935516), (-143.18095, 0.674502), (-143.16566, 0.674502), (-143.16566, 0.935516), (-143.18884, 0.674091), (-143.18884, 0.935447), (-143.20412, 0.935447), (-143.20412, 0.674091), (-143.18884, 0.325909), (-143.18884, 0.674091), (-143.20412, 0.674091), (-143.20412, 0.325909), (-143.18095, 0.674502), (-143.18095, 0.325498), (-143.16566, 0.325498), (-143.16566, 0.674502), (-143.18884, -0.418693), (-143.18884, 0.064553), (-143.20412, 0.064553), (-143.20412, -0.418693), (-143.1252, 1.046742), (-143.1252, -0.323733), (-143.10944, -0.323733), (-143.10944, 1.046742), (-143.18095, 0.064484), (-143.18095, -0.420132), (-143.16566, -0.420132), (-143.16566, 0.064484), (-143.18095, 1.420132), (-143.18095, 0.935516), (-143.16566, 0.935516), (-143.16566, 1.420132), (-143.10553, 1.046761), (-143.10553, -0.323752), (-143.08977, -0.323752), (-143.08977, 1.046761), (-143.18884, 0.935447), (-143.18884, 1.418693), (-143.20412, 1.418693), (-143.20412, 0.935447), (-143.14403, 0.058882), (-143.14403, 0.311206), (-143.16927, 0.311206), (-143.16927, 0.058882), (-143.14403, 0.058882), (-143.16927, 0.058882), (-143.16927, -0.38151), (-143.14403, -0.38151), (-143.09058, 0.966846), (-143.09058, -0.273481), (-143.06538, -0.273481), (-143.06538, 0.966846), (-143.14958, 0.055575), (-143.14958, -0.38024), (-143.12439, -0.38024), (-143.12439, 0.055575), (-143.14958, 0.310478), (-143.14958, 0.055575), (-143.12439, 0.055575), (-143.12439, 0.310478), (-143.14958, 0.650063), (-143.14958, 0.310478), (-143.12439, 0.310478), (-143.12439, 0.650063), (-143.14958, 0.904965), (-143.14958, 0.650063), (-143.12439, 0.650063), (-143.12439, 0.904965), (-143.14958, 1.34078), (-143.14958, 0.904965), (-143.12439, 0.904965), (-143.12439, 1.34078), (-143.07092, 0.96685), (-143.07092, -0.273485), (-143.04573, -0.273485), (-143.04573, 0.96685), (-143.14403, 0.901658), (-143.14403, 1.34205), (-143.16927, 1.34205), (-143.16927, 0.901658), (-143.14403, 0.649334), (-143.14403, 0.901658), (-143.16927, 0.901658), (-143.16927, 0.649334), (-143.14403, 0.311206), (-143.14403, 0.649334), (-143.16927, 0.649334), (-143.16927, 0.311206), (-142.88947, 1.416122), (-142.88947, 0.936311), (-142.88596, 0.936311), (-142.88596, 1.420516), (-142.88947, 0.936311), (-142.88947, 0.674436), (-142.88596, 0.674436), (-142.88596, 0.936311), (-142.88947, 0.674436), (-142.88947, 0.325564), (-142.88596, 0.325564), (-142.88596, 0.674436), (-142.88947, 0.325564), (-142.88947, 0.063689), (-142.88596, 0.063689), (-142.88596, 0.325564), (-142.88947, 0.063689), (-142.88947, -0.416122), (-142.88596, -0.420516), (-142.88596, 0.063689), (-143.10397, -0.320116), (-143.10397, 1.043552), (-143.10944, 1.046742), (-143.10944, -0.323733), (-144.21191, -0.416122), (-144.26024, 0.064714), (-144.26373, 0.064302), (-144.21501, -0.420516), (-144.26024, 0.064714), (-144.2733, 0.325564), (-144.27681, 0.325426), (-144.26373, 0.064302), (-144.2733, 0.325564), (-144.2733, 0.674436), (-144.27681, 0.674574), (-144.27681, 0.325426), (-144.2733, 0.674436), (-144.26024, 0.935286), (-144.26373, 0.935698), (-144.27681, 0.674574), (-144.26024, 0.935286), (-144.21191, 1.416122), (-144.21501, 1.420516), (-144.26373, 0.935698), (-143.0843, -0.320561), (-143.0843, 1.043144), (-143.08977, 1.046761), (-143.08977, -0.323752), (-143.18356, 0.935447), (-143.18356, 1.414308), (-143.18884, 1.418693), (-143.18884, 0.935447), (-143.111, 1.043144), (-143.111, -0.320561), (-143.10553, -0.323752), (-143.10553, 1.046761), (-143.18625, 1.41574), (-143.18625, 0.935104), (-143.18095, 0.935516), (-143.18095, 1.420132), (-143.18625, 0.935104), (-143.18625, 0.674364), (-143.18095, 0.674502), (-143.18095, 0.935516), (-143.18625, 0.674364), (-143.18625, 0.325637), (-143.18095, 0.325498), (-143.18095, 0.674502), (-143.18625, 0.325637), (-143.18625, 0.064896), (-143.18095, 0.064484), (-143.18095, 0.325498), (-143.18625, 0.064896), (-143.18625, -0.41574), (-143.18095, -0.420132), (-143.18095, 0.064484), (-143.13066, 1.043552), (-143.13066, -0.320116), (-143.1252, -0.323733), (-143.1252, 1.046742), (-143.18356, -0.414308), (-143.18356, 0.064553), (-143.18884, 0.064553), (-143.18884, -0.418693), (-143.18356, 0.064553), (-143.18356, 0.325909), (-143.18884, 0.325909), (-143.18884, 0.064553), (-143.18356, 0.325909), (-143.18356, 0.674091), (-143.18884, 0.674091), (-143.18884, 0.325909), (-143.18356, 0.674091), (-143.18356, 0.935447), (-143.18884, 0.935447), (-143.18884, 0.674091), (-118.54023, -109.61047), (-118.54023, -113.51364), (-115.45162, -113.51364), (-115.45162, -109.61047), (-88.71574, -110.74826), (-88.71574, -113.93459), (-86.201294, -113.93459), (-86.201294, -110.74826), (-69.177986, -112.094925), (-69.177986, -112.09493), (-69.17798, -112.09493), (-69.17798, -112.094925), (-71.14568, -0.641576), (-71.14568, -0.303233), (-71.58944, -0.303233), (-71.58944, -0.641576), (-71.14568, -0.050749), (-71.58944, -0.050749), (-71.58944, -0.303233), (-71.14568, -0.303233), (-71.14568, -0.050749), (-71.14568, 0.389922), (-71.58944, 0.389922), (-71.58944, -0.050749), (-71.99561, 0.509241), (-72.0364, 0.502093), (-72.07098, 0.481739), (-72.094086, 0.451277), (-72.102196, 0.415344), (-72.102196, -0.731088), (-71.55279, -0.731088), (-71.55279, 0.509241), (-72.196266, 0.800529), (-72.196266, -0.345902), (-72.188156, -0.381835), (-72.16505, -0.412297), (-72.13047, -0.432652), (-72.08968, -0.439799), (-71.64686, -0.439799), (-71.64686, 0.800529), (-71.14568, -0.89406), (-71.58944, -0.89406), (-71.58944, -1.334731), (-71.14568, -1.334731), (-71.14568, -0.89406), (-71.14568, -0.641576), (-71.58944, -0.641576), (-71.58944, -0.89406), (-72.14093, -0.635317), (-72.14093, -0.889757), (-71.67037, -0.889757), (-71.67037, -0.635317), (-71.67037, -0.295016), (-71.67037, -0.040576), (-72.14093, -0.040576), (-72.14093, -0.295016), (-72.14093, -0.295016), (-72.14093, -0.635317), (-71.67037, -0.635317), (-71.67037, -0.295016), (-72.081535, -0.040471), (-71.50538, -0.040471), (-71.50538, 0.426566), (-72.081535, 0.426566), (-71.7334, 0.538131), (-71.77419, 0.530984), (-71.80877, 0.51063), (-71.83187, 0.480168), (-71.83999, 0.444235), (-71.83999, -0.749104), (-71.26383, -0.749104), (-71.26383, 0.538131), (-72.14093, -0.889757), (-72.14093, -1.358779), (-71.67037, -1.358779), (-71.67037, -0.889757), (-72.14093, 0.428445), (-72.14093, -0.040576), (-71.67037, -0.040576), (-71.67037, 0.428445), (-71.979324, 0.538131), (-71.979324, -0.655208), (-71.971214, -0.69114), (-71.948105, -0.721602), (-71.91353, -0.741957), (-71.87274, -0.749104), (-71.403175, -0.749104), (-71.403175, 0.538131), (-72.081535, -1.3569), (-71.50538, -1.3569), (-71.50538, -0.889863), (-72.081535, -0.889863), (-71.76118, -0.240456), (-71.74842, -0.495448), (-70.54447, -0.499129), (-70.54447, -0.241373), (-72.081535, -0.634959), (-71.50538, -0.634959), (-71.50538, -0.295374), (-72.081535, -0.295374), (-72.081535, -0.295374), (-71.50538, -0.295374), (-71.50538, -0.040471), (-72.081535, -0.040471), (-70.54447, 0.359765), (-71.74842, 0.356084), (-71.76118, 0.101094), (-70.54447, 0.10201), (-70.54447, 0.10201), (-71.76118, 0.101094), (-71.76118, -0.240456), (-70.54447, -0.241373), (-72.081535, -0.889863), (-71.50538, -0.889863), (-71.50538, -0.634959), (-72.081535, -0.634959), (-71.703735, -0.93982), (-70.54447, -0.93982), (-70.54447, -0.499129), (-71.74842, -0.495448), (-70.54447, 0.359765), (-70.54447, 0.800457), (-71.703735, 0.800457), (-71.74842, 0.356084), (-71.03638, 0.436176), (-72.24258, 0.436176), (-72.24258, -0.035894), (-70.98882, -0.036832), (-71.14096, -0.479902), (-71.69038, -0.479902), (-71.69038, -0.915718), (-71.14096, -0.915718), (-71.14096, -0.224999), (-71.69038, -0.224999), (-71.69038, -0.479902), (-71.14096, -0.479902), (-71.14096, 0.114586), (-71.69038, 0.114586), (-71.69038, -0.224999), (-71.14096, -0.224999), (-71.14096, 0.369489), (-71.69038, 0.369489), (-71.69038, 0.114586), (-71.14096, 0.114586), (-71.14096, 0.805305), (-71.69038, 0.805305), (-71.69038, 0.369489), (-71.14096, 0.369489), (-72.24258, -1.36651), (-71.03638, -1.36651), (-70.98882, -0.893502), (-72.24258, -0.89444), (-72.24258, -0.293544), (-72.24258, -0.636789), (-70.97598, -0.636789), (-70.97598, -0.293544), (-70.97598, -0.293544), (-70.98882, -0.036832), (-72.24258, -0.035894), (-72.24258, -0.293544), (-72.24258, -0.636789), (-72.24258, -0.89444), (-70.98882, -0.893502), (-70.97598, -0.636789), (-70.97598, -0.636789), (-70.98882, -0.893502), (-70.95251, -0.893475), (-70.93966, -0.636789), (-70.93966, -0.636789), (-70.95251, -0.893475), (-70.921715, -0.893452), (-70.90887, -0.636789), (-70.90887, -0.636789), (-70.921715, -0.893452), (-70.90114, -0.893437), (-70.8883, -0.636789), (-72.1818, -0.635317), (-72.1818, -0.889764), (-72.14093, -0.889757), (-72.14093, -0.635317), (-70.98882, -0.036832), (-70.97598, -0.293544), (-70.93966, -0.293544), (-70.95251, -0.036859), (-70.95251, -0.036859), (-70.93966, -0.293544), (-70.90887, -0.293544), (-70.921715, -0.036882), (-70.921715, -0.036882), (-70.90887, -0.293544), (-70.8883, -0.293544), (-70.90114, -0.036897), (-72.1818, -0.040571), (-72.1818, -0.295016), (-72.14093, -0.295016), (-72.14093, -0.040576), (-70.97598, -0.293544), (-70.97598, -0.636789), (-70.93966, -0.636789), (-70.93966, -0.293544), (-70.93966, -0.293544), (-70.93966, -0.636789), (-70.90887, -0.636789), (-70.90887, -0.293544), (-70.90887, -0.293544), (-70.90887, -0.636789), (-70.8883, -0.636789), (-70.8883, -0.293544), (-72.1818, -0.295016), (-72.1818, -0.635317), (-72.14093, -0.635317), (-72.14093, -0.295016), (-70.98882, -0.893502), (-71.03638, -1.36651), (-71.00005, -1.36651), (-70.95251, -0.893475), (-70.95251, -0.893475), (-71.00005, -1.36651), (-70.96927, -1.36651), (-70.921715, -0.893452), (-70.921715, -0.893452), (-70.96927, -1.36651), (-70.94869, -1.36651), (-70.90114, -0.893437), (-72.1818, -0.889764), (-72.1818, -1.358779), (-72.14093, -1.358779), (-72.14093, -0.889757), (-71.03638, 0.436176), (-70.98882, -0.036832), (-70.95251, -0.036859), (-71.00005, 0.436176), (-71.00005, 0.436176), (-70.95251, -0.036859), (-70.921715, -0.036882), (-70.96927, 0.436176), (-70.96927, 0.436176), (-70.921715, -0.036882), (-70.90114, -0.036897), (-70.94869, 0.436176), (-72.1818, 0.428445), (-72.1818, -0.040571), (-72.14093, -0.040576), (-72.14093, 0.428445), (-71.74842, 0.356084), (-71.703735, 0.800457), (-71.74007, 0.800457), (-71.78476, 0.355973), (-71.78476, 0.355973), (-71.74007, 0.800457), (-71.77087, 0.800457), (-71.81556, 0.355878), (-71.81556, 0.355878), (-71.77087, 0.800457), (-71.79145, 0.800457), (-71.83614, 0.355816), (-71.104805, -0.050727), (-71.104805, 0.389922), (-71.14568, 0.389922), (-71.14568, -0.050749), (-71.703735, -0.93982), (-71.74842, -0.495448), (-71.78476, -0.495336), (-71.74007, -0.93982), (-71.74007, -0.93982), (-71.78476, -0.495336), (-71.81556, -0.495242), (-71.77087, -0.93982), (-71.77087, -0.93982), (-71.81556, -0.495242), (-71.83614, -0.495179), (-71.79145, -0.93982), (-71.104805, -1.334731), (-71.104805, -0.894082), (-71.14568, -0.89406), (-71.14568, -1.334731), (-71.76118, -0.240456), (-71.76118, 0.101094), (-71.797516, 0.101066), (-71.797516, -0.240429), (-71.797516, -0.240429), (-71.797516, 0.101066), (-71.828316, 0.101043), (-71.828316, -0.240406), (-71.828316, -0.240406), (-71.828316, 0.101043), (-71.8489, 0.101027), (-71.8489, -0.240391), (-71.104805, -0.641581), (-71.104805, -0.303228), (-71.14568, -0.303233), (-71.14568, -0.641576), (-71.76118, 0.101094), (-71.74842, 0.356084), (-71.78476, 0.355973), (-71.797516, 0.101066), (-71.797516, 0.101066), (-71.78476, 0.355973), (-71.81556, 0.355878), (-71.828316, 0.101043), (-71.828316, 0.101043), (-71.81556, 0.355878), (-71.83614, 0.355816), (-71.8489, 0.101027), (-71.104805, -0.303228), (-71.104805, -0.050727), (-71.14568, -0.050749), (-71.14568, -0.303233), (-71.74842, -0.495448), (-71.76118, -0.240456), (-71.797516, -0.240429), (-71.78476, -0.495336), (-71.78476, -0.495336), (-71.797516, -0.240429), (-71.828316, -0.240406), (-71.81556, -0.495242), (-71.81556, -0.495242), (-71.828316, -0.240406), (-71.8489, -0.240391), (-71.83614, -0.495179), (-71.104805, -0.894082), (-71.104805, -0.641581), (-71.14568, -0.641576), (-71.14568, -0.89406), (5.646933, -121.22408), (7.358486, -121.22408), (7.358486, -119.51253), (5.646933, -119.51253), (-5.253075, -117.71076), (-3.54152, -117.71076), (-3.54152, -115.99921), (-5.253075, -115.99921)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_FridgeDrawer2D6_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0]
                rel material:binding = </root/_materials/M_FridgeDrawer2D6_0>
            }

            def GeomSubset "M_FridgeDrawer2D6_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
                rel material:binding = </root/_materials/M_FridgeDrawer2D6_1>
            }

            def GeomSubset "M_FridgeDrawer2D6_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [62]
                rel material:binding = </root/_materials/M_FridgeDrawer2D6_2>
            }

            def GeomSubset "M_FridgeDrawer2D6_3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [63]
                rel material:binding = </root/_materials/M_FridgeDrawer2D6_3>
            }

            def GeomSubset "M_FridgeDrawer2D6_4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138]
                rel material:binding = </root/_materials/M_FridgeDrawer2D6_4>
            }

            def GeomSubset "M_FridgeDrawer2D6_5" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [139]
                rel material:binding = </root/_materials/M_FridgeDrawer2D6_5>
            }

            def GeomSubset "M_FridgeDrawer2D6_6" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [140]
                rel material:binding = </root/_materials/M_FridgeDrawer2D6_6>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer2D6_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2D6_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.36764705, 0.36764705, 0.36764705)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2D6_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Copper_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2D6_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer2D6_1"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2D6_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer2D6_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2D6_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2D6_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2D6_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer2D6_2"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2D6_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer2D6_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2D6_2/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2D6_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2D6_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer2D6_3"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2D6_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.25, 0.25, 0.25)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2D6_3/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2D6_3/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer2D6_4"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2D6_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.39705884, 0.39705884, 0.39705884)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }

        def Material "M_FridgeDrawer2D6_5"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2D6_5/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer2D6_5/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2D6_5/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Decal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2D6_5/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Decal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2D6_5/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer2D6_6"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2D6_6/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer2D6_6/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2D6_6/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Readout_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2D6_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2D6_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

