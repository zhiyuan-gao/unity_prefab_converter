#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "FridgeDrawer2_24_FridgeDrawer2D6_2_GeomSubset_6"
    {
        def Mesh "FridgeDrawer2_24_FridgeDrawer2D6_2_GeomSubset_6"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4]
            int[] faceVertexIndices = [24, 25, 27, 26]
            rel material:binding = </root/_materials/M_FridgeDrawer2D6_6>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.116504, 0.041805, -1.088934), (-0.116491, 0.041805, -1.088934), (-0.116504, 0.041815, -1.088934), (-0.116491, 0.041815, -1.088934), (-0.116504, 0.041805, -1.088934), (-0.116491, 0.041805, -1.088934), (-0.116504, 0.041815, -1.088934), (-0.116491, 0.041815, -1.088934), (-0.116504, 0.041805, -1.088934), (-0.116491, 0.041805, -1.088934), (-0.116504, 0.041815, -1.088934), (-0.116491, 0.041815, -1.088934), (-0.116504, 0.041805, -1.088934), (-0.116491, 0.041805, -1.088934), (-0.116504, 0.041815, -1.088934), (-0.116491, 0.041815, -1.088934), (-0.116504, 0.041805, -1.088934), (-0.116491, 0.041805, -1.088934), (-0.116504, 0.041815, -1.088934), (-0.116491, 0.041815, -1.088934), (-0.116504, 0.041805, -1.088934), (-0.116491, 0.041805, -1.088934), (-0.116504, 0.041815, -1.088934), (-0.116491, 0.041815, -1.088934), (-0.116504, 0.041804, -1.088934), (-0.116491, 0.041804, -1.088934), (-0.116504, 0.041814, -1.088934), (-0.116491, 0.041814, -1.088934), (-0.13426, 0.238636, -0.656735), (0.586561, 0.238636, -0.656735), (-0.13426, -0.281624, -0.656735), (0.586561, -0.281624, -0.656735), (0.157526, 0.238636, -0.656735), (0.054502, 0.238636, -0.656735), (0.397799, 0.238636, -0.656735), (0.294775, 0.238636, -0.656735), (0.157526, -0.305774, -0.656735), (0.054905, -0.300637, -0.656735), (0.397396, -0.300637, -0.656735), (0.294775, -0.305774, -0.656735), (0.054502, 0.238636, -0.89978), (-0.13426, 0.238636, -0.89978), (0.397799, 0.238636, -0.89978), (0.586561, 0.238636, -0.89978), (0.294775, 0.238636, -0.89978), (0.157526, 0.238636, -0.89978), (-0.121641, 0.228562, -0.656735), (0.573943, 0.228562, -0.656735), (-0.121641, -0.272739, -0.656735), (0.573943, -0.272739, -0.656735), (0.157526, 0.228562, -0.656735), (0.054502, 0.228562, -0.656735), (0.397799, 0.228562, -0.656735), (0.294775, 0.228562, -0.656735), (0.157921, -0.2957, -0.656735), (0.05609, -0.290603, -0.656735), (0.396212, -0.290603, -0.656735), (0.294381, -0.2957, -0.656735), (-0.121641, 0.228562, -0.888972), (0.573943, 0.228562, -0.888972), (0.157526, 0.228562, -0.888972), (0.054502, 0.228562, -0.888972), (0.397799, 0.228562, -0.888972), (0.294775, 0.228562, -0.888972), (-0.13426, 0.238636, -0.666918), (0.054502, 0.238636, -0.666918), (-0.13426, -0.281624, -0.666918), (0.054905, -0.300637, -0.666918), (0.586561, -0.281624, -0.666918), (0.397396, -0.300637, -0.666918), (0.586561, 0.238636, -0.666918), (0.397799, 0.238636, -0.666918), (0.294775, -0.305774, -0.666918), (0.157526, -0.305774, -0.666918), (0.157526, 0.238636, -0.666918), (0.294775, 0.238636, -0.666918), (0.294381, -0.2957, -0.666918), (0.396212, -0.290603, -0.666918), (0.573943, -0.272739, -0.666918), (0.573943, 0.228562, -0.666918), (0.397799, 0.228562, -0.666918), (0.294775, 0.228562, -0.666918), (0.157526, 0.228562, -0.666918), (0.054502, 0.228562, -0.666918), (-0.121641, 0.228562, -0.666918), (-0.121641, -0.272739, -0.666918), (0.05609, -0.290603, -0.666918), (0.157921, -0.2957, -0.666918), (-0.135988, 0.240016, -0.658819), (0.58829, 0.240016, -0.658819), (-0.135988, -0.282841, -0.658819), (0.58829, -0.282841, -0.658819), (0.157526, 0.240016, -0.658819), (0.054502, 0.240016, -0.658819), (0.397799, 0.240016, -0.658819), (0.294775, 0.240016, -0.658819), (0.157472, -0.307154, -0.658819), (0.054743, -0.302012, -0.658819), (0.397558, -0.302012, -0.658819), (0.29483, -0.307154, -0.658819), (-0.135988, 0.240016, -0.664834), (0.054502, 0.240016, -0.664834), (-0.135988, -0.282841, -0.664834), (0.054743, -0.302012, -0.664834), (0.58829, -0.282841, -0.664834), (0.397558, -0.302012, -0.664834), (0.58829, 0.240016, -0.664834), (0.397799, 0.240016, -0.664834), (0.29483, -0.307154, -0.664834), (0.157472, -0.307154, -0.664834), (0.157526, 0.240016, -0.664834), (0.294775, 0.240016, -0.664834), (0.054905, -0.300637, -0.856703), (0.054877, -0.262687, -0.89978), (-0.13426, -0.281624, -0.856703), (-0.13426, -0.243674, -0.89978), (0.397424, -0.262687, -0.89978), (0.397396, -0.300637, -0.856703), (0.586561, -0.243674, -0.89978), (0.586561, -0.281624, -0.856703), (0.157526, -0.267824, -0.89978), (0.157526, -0.305774, -0.856703), (0.294775, -0.305774, -0.856703), (0.294775, -0.267824, -0.89978), (-0.121641, -0.234789, -0.888972), (-0.121641, -0.272739, -0.845894), (0.573943, -0.272739, -0.845894), (0.573943, -0.234789, -0.888972), (0.157892, -0.25775, -0.888972), (0.157921, -0.2957, -0.845894), (0.05609, -0.290603, -0.845894), (0.055973, -0.252653, -0.888972), (0.396328, -0.252653, -0.888972), (0.396212, -0.290603, -0.845894), (0.294409, -0.25775, -0.888972), (0.294381, -0.2957, -0.845894), (0.397413, -0.27721, -0.896501), (0.294775, -0.282347, -0.896501), (0.397404, -0.289522, -0.887163), (0.294775, -0.294659, -0.887163), (0.397398, -0.297749, -0.873188), (0.294775, -0.302885, -0.873188), (0.157526, -0.282347, -0.896501), (0.054888, -0.27721, -0.896501), (0.157526, -0.294659, -0.887163), (0.054897, -0.289522, -0.887163), (0.157526, -0.302885, -0.873188), (0.054903, -0.297749, -0.873188), (0.586561, -0.258197, -0.896501), (0.586561, -0.270509, -0.887163), (0.586561, -0.278736, -0.873188), (-0.13426, -0.258197, -0.896501), (-0.13426, -0.270509, -0.887163), (-0.13426, -0.278736, -0.873188), (-0.121641, -0.249312, -0.885693), (0.056018, -0.267176, -0.885693), (-0.121641, -0.261624, -0.876355), (0.056056, -0.279487, -0.876355), (-0.121641, -0.26985, -0.862379), (0.056081, -0.287714, -0.862379), (0.396284, -0.267176, -0.885693), (0.573943, -0.249312, -0.885693), (0.396246, -0.279487, -0.876355), (0.573943, -0.261624, -0.876355), (0.396221, -0.287714, -0.862379), (0.573943, -0.26985, -0.862379), (0.157903, -0.272273, -0.885693), (0.294398, -0.272273, -0.885693), (0.157913, -0.284585, -0.876355), (0.294389, -0.284585, -0.876355), (0.157919, -0.292811, -0.862379), (0.294383, -0.292811, -0.862379)]
            bool[] primvars:sharp_face = [0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-5.253075, -117.71076), (-3.54152, -117.71076), (-3.54152, -115.99921), (-5.253075, -115.99921)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer2D6_6"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2D6_6/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer2D6_6/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2D6_6/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Readout_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2D6_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2D6_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

