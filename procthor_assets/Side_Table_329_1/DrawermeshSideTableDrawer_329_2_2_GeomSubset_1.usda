#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "DrawermeshSideTableDrawer_329_2_2_GeomSubset_1"
    {
        def Mesh "DrawermeshSideTableDrawer_329_2_2_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [52, 54, 53, 52, 55, 54, 56, 55, 52, 56, 57, 55, 55, 58, 54, 55, 59, 58, 57, 59, 55, 57, 60, 59, 59, 61, 58, 59, 62, 61, 60, 62, 59, 60, 63, 62, 64, 66, 65, 64, 67, 66, 63, 52, 62, 63, 56, 52, 62, 52, 53, 62, 53, 61, 66, 61, 53, 66, 67, 61, 65, 53, 54, 65, 66, 53, 64, 54, 58, 64, 65, 54, 67, 58, 61, 67, 64, 58]
            rel material:binding = </root/_materials/M_SideTableDrawer_329_2_1>
            normal3f[] normals = [(-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 0.99999994), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 0.99999994), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.99999994, 0, 0), (1, 0, 0), (-0.000010172522, 1, -0.000042252297), (-0.000022561797, 1, -0.00001905045), (-0.00003273432, 1, 0), (-0.000010172522, 1, -0.000042252297), (0, 1, -0.000061302744), (-0.000022561797, 1, -0.00001905045), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -0.99999994), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -0.99999994), (2.4548432e-9, 0.6010611, -0.7992031), (1.522016e-9, 0.60118014, -0.79911345), (1.2325472e-8, 0.60117596, -0.7991166), (2.4548432e-9, 0.6010611, -0.7992031), (0, 0.6007972, -0.7994015), (1.522016e-9, 0.60118014, -0.79911345), (-0.7968314, 0.6042017, -5.8950915e-9), (-0.7967455, 0.6043149, 3.2211847e-9), (-0.7970342, 0.6039343, 0), (-0.7968314, 0.6042017, -5.8950915e-9), (-0.7967455, 0.6043149, 2.401066e-9), (-0.7967455, 0.6043149, 3.2211847e-9), (4.335202e-7, 0.60096604, 0.7992746), (0.000041269508, 0.6000212, 0.79998404), (-2.4097972e-8, 0.59988534, 0.800086), (4.335202e-7, 0.60096604, 0.7992746), (-0.000006431772, 0.60106957, 0.79919666), (0.000041269508, 0.6000212, 0.79998404), (0.7975554, 0.6032456, -0.0001634496), (0.7964714, 0.6046762, -0.00010172305), (0.7963637, 0.6048181, -3.3178367e-8), (0.7975554, 0.6032456, -0.0001634496), (0.7977068, 0.6030455, -0.000097739394), (0.7964714, 0.6046762, -0.00010172305)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.197488, -0.167063, -0.085076), (0.197488, -0.179724, -0.085076), (0.197488, -0.179724, -0.366584), (0.197488, -0.167063, -0.366584), (-0.197487, -0.167064, -0.366584), (-0.197487, -0.179724, -0.366584), (-0.197487, -0.179724, -0.085076), (-0.197487, -0.167065, -0.085076), (-0.176164, -0.18185, -0.344055), (0.176165, -0.181846, -0.344055), (0.176165, -0.181846, -0.107605), (-0.176164, -0.18185, -0.107605), (-0.193229, -0.167065, -0.079454), (-0.193229, -0.179724, -0.079454), (0.19323, -0.179724, -0.079454), (0.19323, -0.167063, -0.079454), (-0.173116, 0.044335, -0.094646), (-0.173116, 0.044335, -0.340332), (0.173115, 0.044336, -0.340332), (0.173115, 0.044336, -0.094646), (0.19323, -0.167063, -0.372206), (0.19323, -0.179724, -0.372206), (-0.193229, -0.179724, -0.372206), (-0.193229, -0.167064, -0.372206), (0.19323, -0.161442, -0.085076), (-0.193229, -0.161442, -0.085076), (0.19323, -0.161442, -0.366584), (-0.193229, -0.161442, -0.366584), (-0.193229, -0.185346, -0.085076), (0.19323, -0.185343, -0.085076), (0.19323, -0.185343, -0.366584), (-0.193229, -0.185346, -0.366584), (-0.18598, -0.161442, -0.094646), (0.185981, -0.161442, -0.094646), (-0.18598, -0.161442, -0.357014), (0.185981, -0.161442, -0.357014), (-0.185981, 0.06132, -0.357014), (-0.185981, 0.06132, -0.094646), (0.18598, 0.061321, -0.094646), (0.18598, 0.061321, -0.357014), (0.173116, -0.144457, -0.340332), (0.173116, -0.144457, -0.094646), (-0.173115, -0.144457, -0.094646), (-0.173115, -0.144457, -0.340332), (0.181474, -0.185343, -0.100597), (-0.181473, -0.185346, -0.100597), (0.181474, -0.185343, -0.351064), (-0.181473, -0.185346, -0.351064), (0.17882, -0.185343, -0.104101), (-0.178818, -0.185346, -0.104101), (0.17882, -0.185343, -0.347559), (-0.178818, -0.185346, -0.347559), (0.031832, -0.184194, -0.303044), (0.031832, -0.186001, -0.303044), (0.031832, -0.186001, -0.337866), (0.031832, -0.184194, -0.337866), (0.031832, -0.180929, -0.303044), (0.031832, -0.180929, -0.337866), (-0.031831, -0.186001, -0.337866), (-0.031831, -0.184194, -0.337866), (-0.031831, -0.180929, -0.337866), (-0.031831, -0.186001, -0.303044), (-0.031831, -0.184194, -0.303044), (-0.031831, -0.180929, -0.303044), (-0.030726, -0.18746, -0.336771), (0.030728, -0.187458, -0.336771), (0.030728, -0.187458, -0.304139), (-0.030726, -0.187458, -0.304139)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.818362), (0.092088, 0.675906), (-0.165236, 0.813735), (-0.165236, 0.675906), (0.092088, 0.675906), (0.092088, 0.813735), (-0.165236, 0.813735), (0.096714, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.165236, 0.813735), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.165236, 0.813735), (0.092088, 0.813735), (0.096714, 0.818362), (-0.165236, 0.675906), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.165236, 0.675906), (-0.165236, 0.813735), (-0.169862, 0.818362), (0.092088, 0.675906), (-0.169862, 0.67128), (0.096714, 0.67128), (0.092088, 0.675906), (-0.165236, 0.675906), (-0.169862, 0.67128), (0.092088, 0.813735), (0.096714, 0.67128), (0.096714, 0.818362), (0.092088, 0.813735), (0.092088, 0.675906), (0.096714, 0.67128)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_SideTableDrawer_329_2_1"
        {
            token outputs:surface.connect = </root/_materials/M_SideTableDrawer_329_2_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_SideTableDrawer_329_2_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_SideTableDrawer_329_2_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/WoodGrains1.jpg@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_329_2_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_329_2_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

