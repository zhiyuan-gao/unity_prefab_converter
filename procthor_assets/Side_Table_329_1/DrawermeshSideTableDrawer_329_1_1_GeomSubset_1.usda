#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "DrawermeshSideTableDrawer_329_1_1_GeomSubset_1"
    {
        def Mesh "DrawermeshSideTableDrawer_329_1_1_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [52, 54, 53, 52, 55, 54, 56, 55, 52, 56, 57, 55, 55, 58, 54, 55, 59, 58, 57, 59, 55, 57, 60, 59, 59, 61, 58, 59, 62, 61, 60, 62, 59, 60, 63, 62, 64, 66, 65, 64, 67, 66, 63, 52, 62, 63, 56, 52, 62, 52, 53, 62, 53, 61, 66, 61, 53, 66, 67, 61, 65, 53, 54, 65, 66, 53, 64, 54, 58, 64, 65, 54, 67, 58, 61, 67, 64, 58]
            rel material:binding = </root/_materials/M_SideTableDrawer_329_1_1>
            normal3f[] normals = [(-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -0.99999994), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.99999994, 0, 0), (1, 0, 0), (-0.000010172528, -1, 0.000042252334), (-0.000022561822, -1, 0.000019050462), (-0.000032734348, -0.99999994, 0), (-0.000010172528, -1, 0.000042252334), (0, -1, 0.000061302795), (-0.000022561822, -1, 0.000019050462), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 0.99999994), (0, -0.6007925, 0.79940504), (0, -0.60079825, 0.7994006), (0, -0.60079247, 0.79940516), (0, -0.6007925, 0.79940504), (-1.3882527e-8, -0.6004152, 0.79968846), (0, -0.60079825, 0.7994006), (-0.79677093, -0.6042816, 0), (-0.79706126, -0.6038984, -1.7466029e-8), (-0.79706043, -0.6038996, -3.4080585e-8), (-0.79677093, -0.6042816, 0), (-0.7967718, -0.60428035, 0), (-0.79706126, -0.6038984, -1.7466029e-8), (2.3799987e-7, -0.6015008, -0.79887223), (-0.000019181149, -0.60114694, -0.7991385), (3.1664968e-8, -0.60179955, -0.79864717), (2.3799987e-7, -0.6015008, -0.79887223), (8.534407e-7, -0.6004347, -0.7996738), (-0.000019181149, -0.60114694, -0.7991385), (0.7971869, -0.60373265, -3.5846784e-7), (0.79716367, -0.6037634, 0.000035551333), (0.7973498, -0.6035173, -4.7351932e-8), (0.7971869, -0.60373265, -3.5846784e-7), (0.7967809, -0.60426825, -0.000008781906), (0.79716367, -0.6037634, 0.000035551333)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.197488, -0.167063, 0.206624), (-0.197488, -0.179724, 0.206624), (-0.197488, -0.179724, -0.074884), (-0.197488, -0.167063, -0.074884), (0.197487, -0.167064, -0.074884), (0.197487, -0.179724, -0.074884), (0.197487, -0.179724, 0.206624), (0.197487, -0.167064, 0.206624), (0.176164, -0.18185, -0.052355), (-0.176166, -0.181846, -0.052355), (-0.176166, -0.181846, 0.184095), (0.176164, -0.18185, 0.184095), (0.193229, -0.167064, 0.212246), (0.193229, -0.179724, 0.212246), (-0.19323, -0.179724, 0.212246), (-0.19323, -0.167063, 0.212246), (0.173116, 0.044335, 0.197054), (0.173116, 0.044335, -0.048632), (-0.173115, 0.044337, -0.048632), (-0.173115, 0.044337, 0.197054), (-0.19323, -0.167063, -0.080506), (-0.19323, -0.179724, -0.080506), (0.193229, -0.179724, -0.080506), (0.193229, -0.167064, -0.080506), (-0.19323, -0.161442, 0.206624), (0.193229, -0.161442, 0.206624), (-0.19323, -0.161442, -0.074884), (0.193229, -0.161442, -0.074884), (0.193229, -0.185346, 0.206624), (-0.19323, -0.185343, 0.206624), (-0.19323, -0.185343, -0.074884), (0.193229, -0.185346, -0.074884), (0.18598, -0.161442, 0.197054), (-0.185981, -0.161442, 0.197054), (0.18598, -0.161442, -0.065315), (-0.185981, -0.161442, -0.065315), (0.185981, 0.06132, -0.065315), (0.185981, 0.06132, 0.197054), (-0.18598, 0.06132, 0.197054), (-0.18598, 0.061321, -0.065315), (-0.173116, -0.144457, -0.048632), (-0.173116, -0.144457, 0.197054), (0.173115, -0.144457, 0.197054), (0.173115, -0.144457, -0.048632), (-0.181474, -0.185343, 0.191103), (0.181473, -0.185346, 0.191103), (-0.181474, -0.185343, -0.059364), (0.181473, -0.185346, -0.059364), (-0.17882, -0.185343, 0.187599), (0.178818, -0.185346, 0.187599), (-0.17882, -0.185343, -0.055859), (0.178818, -0.185346, -0.055859), (-0.031833, -0.184194, -0.011344), (-0.031833, -0.186001, -0.011344), (-0.031833, -0.186001, -0.046167), (-0.031833, -0.184194, -0.046167), (-0.031833, -0.180929, -0.011344), (-0.031833, -0.180929, -0.046167), (0.031831, -0.186001, -0.046167), (0.031831, -0.184194, -0.046167), (0.031831, -0.180929, -0.046167), (0.031831, -0.186001, -0.011344), (0.031831, -0.184194, -0.011344), (0.031831, -0.180929, -0.011344), (0.030726, -0.18746, -0.045071), (-0.030728, -0.187458, -0.045071), (-0.030728, -0.187458, -0.012439), (0.030726, -0.187458, -0.012439)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.818362), (0.092088, 0.675906), (-0.165236, 0.813735), (-0.165236, 0.675906), (0.092088, 0.675906), (0.092088, 0.813735), (-0.165236, 0.813735), (0.096714, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.165236, 0.813735), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.165236, 0.813735), (0.092088, 0.813735), (0.096714, 0.818362), (-0.165236, 0.675906), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.165236, 0.675906), (-0.165236, 0.813735), (-0.169862, 0.818362), (0.092088, 0.675906), (-0.169862, 0.67128), (0.096714, 0.67128), (0.092088, 0.675906), (-0.165236, 0.675906), (-0.169862, 0.67128), (0.092088, 0.813735), (0.096714, 0.67128), (0.096714, 0.818362), (0.092088, 0.813735), (0.092088, 0.675906), (0.096714, 0.67128)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_SideTableDrawer_329_1_1"
        {
            token outputs:surface.connect = </root/_materials/M_SideTableDrawer_329_1_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_SideTableDrawer_329_1_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_SideTableDrawer_329_1_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/WoodGrains1.jpg@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_329_1_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_329_1_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

