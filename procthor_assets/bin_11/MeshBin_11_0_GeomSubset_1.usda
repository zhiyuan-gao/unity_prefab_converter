#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshBin_11_0_GeomSubset_1"
    {
        def Mesh "MeshBin_11_0_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4]
            int[] faceVertexIndices = [4, 5, 7, 6]
            rel material:binding = </root/_materials/M_Bin_11_1>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.009303, -0.0005, -0.38488), (0.010303, -0.0005, -0.38488), (0.009303, 0.0005, -0.38488), (0.010303, 0.0005, -0.38488), (0.009303, -0.0005, -0.38488), (0.010303, -0.0005, -0.38488), (0.009303, 0.0005, -0.38488), (0.010303, 0.0005, -0.38488), (0.009303, -0.0005, -0.38488), (0.010303, -0.0005, -0.38488), (0.009303, 0.0005, -0.38488), (0.010303, 0.0005, -0.38488), (-0.154821, -0.109214, -0.248752), (-0.165437, -0.083608, -0.248771), (-0.153685, -0.083062, -0.274429), (-0.128048, -0.083135, -0.28488), (-0.128171, -0.108531, -0.274373), (-0.129192, -0.11982, -0.248734), (0.174428, -0.109214, -0.248752), (0.148799, -0.11982, -0.248734), (0.147582, -0.108434, -0.274376), (0.147328, -0.082808, -0.28488), (0.173195, -0.082879, -0.27443), (0.185044, -0.083608, -0.248771), (-0.154821, 0.109214, -0.248752), (-0.129192, 0.11982, -0.248734), (-0.127976, 0.108434, -0.274376), (-0.127721, 0.082808, -0.28488), (-0.153589, 0.082879, -0.27443), (-0.165437, 0.083608, -0.248771), (0.174428, 0.109214, -0.248752), (0.185044, 0.083608, -0.248771), (0.173292, 0.083062, -0.274429), (0.147655, 0.083135, -0.28488), (0.147777, 0.108531, -0.274373), (0.148799, 0.11982, -0.248734), (-0.220173, -0.121017, 0.141135), (-0.209562, -0.146633, 0.141135), (-0.183947, -0.157243, 0.141135), (-0.173225, -0.149985, 0.047679), (-0.198916, -0.13938, 0.047679), (-0.209558, -0.113776, 0.047679), (0.203553, -0.157243, 0.141135), (0.229169, -0.146633, 0.141135), (0.239779, -0.121017, 0.141135), (0.229164, -0.113776, 0.047679), (0.218522, -0.13938, 0.047679), (0.192831, -0.149985, 0.047679), (-0.209558, 0.113776, 0.047679), (-0.198916, 0.13938, 0.047679), (-0.173225, 0.149985, 0.047679), (-0.183947, 0.157243, 0.141135), (-0.209562, 0.146633, 0.141135), (-0.220173, 0.121017, 0.141135), (0.192831, 0.149985, 0.047679), (0.218522, 0.13938, 0.047679), (0.229164, 0.113776, 0.047679), (0.239779, 0.121017, 0.141135), (0.229169, 0.146633, 0.141135), (0.203553, 0.157243, 0.141135), (-0.187187, -0.098544, -0.049531), (-0.176526, -0.124103, -0.049531), (-0.150789, -0.134689, -0.049531), (-0.135756, -0.124308, -0.142524), (-0.161387, -0.113702, -0.142524), (-0.172004, -0.088097, -0.142524), (0.19161, -0.088097, -0.142524), (0.180993, -0.113702, -0.142524), (0.155363, -0.124308, -0.142524), (0.170395, -0.134689, -0.049531), (0.196132, -0.124103, -0.049531), (0.206793, -0.098544, -0.049531), (-0.172004, 0.088097, -0.142524), (-0.161387, 0.113702, -0.142524), (-0.135756, 0.124308, -0.142524), (-0.150789, 0.134689, -0.049531), (-0.176526, 0.124103, -0.049531), (-0.187187, 0.098544, -0.049531), (0.155363, 0.124308, -0.142524), (0.180993, 0.113702, -0.142524), (0.19161, 0.088097, -0.142524), (0.206793, 0.098544, -0.049531), (0.196132, 0.124103, -0.049531), (0.170395, 0.134689, -0.049531), (-0.149135, -0.103907, -0.269735), (0.16866, -0.10383, -0.269738), (-0.149054, 0.10383, -0.269738), (0.168741, 0.103907, -0.269735), (-0.124844, -0.079891, -0.267289), (-0.141327, -0.079992, -0.261464), (-0.141256, 0.079823, -0.261438), (-0.124536, 0.079579, -0.267283), (-0.148058, -0.080394, -0.244546), (-0.148063, 0.08039, -0.244528), (-0.125987, -0.102381, -0.244754), (-0.125119, -0.096063, -0.261509), (0.144549, -0.095991, -0.261484), (0.145591, -0.102386, -0.244736), (0.144142, -0.079579, -0.267283), (0.167669, -0.08039, -0.244527), (0.160862, -0.079823, -0.261438), (0.160933, 0.079992, -0.261464), (0.167664, 0.080394, -0.244545), (0.144451, 0.079891, -0.267289), (-0.124942, 0.095991, -0.261484), (0.144725, 0.096063, -0.261509), (-0.125984, 0.102386, -0.244736), (0.145593, 0.102381, -0.244754), (-0.180305, -0.139462, 0.142031), (-0.196708, -0.133845, 0.142339), (-0.18631, -0.126789, 0.051253), (-0.169645, -0.132371, 0.050357), (-0.202396, -0.117419, 0.142273), (-0.192058, -0.110238, 0.051066), (0.222003, -0.117419, 0.142273), (0.216313, -0.133845, 0.142339), (0.205916, -0.126789, 0.051253), (0.211664, -0.110238, 0.051066), (0.199911, -0.139462, 0.142031), (0.189251, -0.132371, 0.050357), (-0.169645, 0.132371, 0.050357), (-0.18631, 0.126789, 0.051253), (-0.196708, 0.133845, 0.142339), (-0.180305, 0.139462, 0.142031), (-0.192058, 0.110238, 0.051066), (-0.202396, 0.117419, 0.142273), (0.211664, 0.110238, 0.051066), (0.205916, 0.126789, 0.051253), (0.216313, 0.133845, 0.142339), (0.222003, 0.117419, 0.142273), (0.189251, 0.132371, 0.050357), (0.199911, 0.139462, 0.142031), (-0.147384, -0.117098, -0.046498), (-0.16408, -0.111535, -0.045362), (-0.148705, -0.100917, -0.140089), (-0.132332, -0.106547, -0.140776), (-0.169773, -0.095109, -0.045634), (-0.15431, -0.084629, -0.14026), (0.151938, -0.106547, -0.140776), (0.168311, -0.100917, -0.140089), (0.183686, -0.111535, -0.045362), (0.166991, -0.117098, -0.046498), (0.173916, -0.084629, -0.14026), (0.189379, -0.095109, -0.045634), (-0.132332, 0.106547, -0.140776), (-0.148705, 0.100917, -0.140089), (-0.16408, 0.111535, -0.045362), (-0.147384, 0.117098, -0.046498), (-0.15431, 0.084629, -0.14026), (-0.169773, 0.095109, -0.045634), (0.173916, 0.084629, -0.14026), (0.168311, 0.100917, -0.140089), (0.183686, 0.111535, -0.045362), (0.189379, 0.095109, -0.045634), (0.151938, 0.106547, -0.140776), (0.166991, 0.117098, -0.046498), (-0.202692, -0.11754, 0.283146), (-0.202692, 0.11754, 0.283146), (-0.18047, 0.139762, 0.283146), (0.200076, 0.139762, 0.283146), (0.222298, 0.11754, 0.283146), (0.222298, -0.11754, 0.283146), (0.200076, -0.139762, 0.283146), (-0.18047, -0.139762, 0.283146), (-0.197691, -0.134761, 0.283146), (0.217297, -0.134761, 0.283146), (-0.197691, 0.134761, 0.283146), (0.217297, 0.134761, 0.283146), (-0.142324, -0.096687, -0.244612), (0.161938, -0.096694, -0.24457), (-0.142331, 0.096694, -0.24457), (0.16193, 0.096687, -0.244612), (-0.138883, -0.093579, -0.25885), (0.158445, -0.093537, -0.258785), (-0.138839, 0.093537, -0.258785), (0.158489, 0.09358, -0.25885), (-0.203627, -0.140697, 0.289422), (-0.211432, -0.119279, 0.289422), (-0.211432, 0.119279, 0.289422), (-0.203627, 0.140697, 0.289422), (-0.182209, 0.148503, 0.289422), (0.201815, 0.148503, 0.289422), (0.223233, 0.140697, 0.289422), (0.231038, 0.119279, 0.289422), (0.231038, -0.119279, 0.289422), (0.223233, -0.140697, 0.289422), (0.201815, -0.148503, 0.289422), (-0.182209, -0.148503, 0.289422), (0.203553, -0.157243, 0.266937), (0.229169, -0.146633, 0.266937), (0.239779, -0.121017, 0.266937), (0.239779, 0.121017, 0.266937), (0.229169, 0.146633, 0.266937), (0.203553, 0.157243, 0.266937), (-0.183947, 0.157243, 0.266937), (-0.209562, 0.146633, 0.266937), (-0.220173, 0.121017, 0.266937), (-0.220173, -0.121017, 0.266937), (-0.209562, -0.146633, 0.266937), (-0.183947, -0.157243, 0.266937), (-0.230537, 0.121869, 0.266937), (-0.230537, -0.121869, 0.266937), (-0.229409, -0.121616, 0.280579), (-0.229409, 0.121616, 0.280579), (-0.183376, 0.167649, 0.280579), (-0.18363, 0.168777, 0.266937), (0.202983, 0.167649, 0.280579), (0.203236, 0.168777, 0.266937), (0.250144, -0.121869, 0.266937), (0.250144, 0.121869, 0.266937), (0.249016, 0.121616, 0.280579), (0.249016, -0.121616, 0.280579), (-0.18363, -0.168777, 0.266937), (0.203236, -0.168777, 0.266937), (0.202983, -0.167649, 0.280579), (-0.183376, -0.167649, 0.280579), (-0.215586, -0.153825, 0.266937), (-0.215407, -0.153646, 0.280428), (0.235192, -0.153825, 0.266937), (0.235013, -0.153646, 0.280428), (-0.215586, 0.153825, 0.266937), (-0.215407, 0.153646, 0.280428), (0.235192, 0.153825, 0.266937), (0.235013, 0.153646, 0.280428), (-0.219959, -0.120921, 0.289486), (-0.219959, 0.120921, 0.289486), (-0.183851, 0.157029, 0.289486), (0.203457, 0.157029, 0.289486), (0.239565, 0.120921, 0.289486), (0.239565, -0.120921, 0.289486), (0.203457, -0.157029, 0.289486), (-0.183851, -0.157029, 0.289486), (-0.209463, -0.146533, 0.289359), (0.229069, -0.146533, 0.289359), (-0.209463, 0.146533, 0.289359), (0.229069, 0.146533, 0.289359), (0.104368, 0.137638, -0.048029), (-0.086752, 0.137638, -0.048029), (0.104368, 0.158952, 0.141899), (-0.086752, 0.158952, 0.141899), (0.104368, 0.154011, 0.046935), (-0.086752, 0.154011, 0.046935), (-0.064209, -0.140544, -0.027604), (0.085805, -0.140544, -0.027604), (-0.064209, -0.157275, 0.121474), (0.085805, -0.157275, 0.121474), (-0.064209, -0.153396, 0.046935), (0.085805, -0.153396, 0.046935)]
            bool[] primvars:sharp_face = [0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(0, 0), (1, 0), (1, 1), (0, 1)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_Bin_11_1"
        {
            token outputs:surface.connect = </root/_materials/M_Bin_11_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.40985563, 0.44117647, 0.35034603)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_Bin_11_1/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Bin_11_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

