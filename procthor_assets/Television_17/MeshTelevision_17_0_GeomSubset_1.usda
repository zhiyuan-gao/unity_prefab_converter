#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshTelevision_17_0_GeomSubset_1"
    {
        def Mesh "MeshTelevision_17_0_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [4, 5, 7, 6, 99, 98, 80, 81, 45, 91, 93, 44, 77, 79, 78, 76, 79, 81, 80, 78, 83, 89, 88, 82, 84, 93, 92, 85, 85, 86, 87, 84, 89, 90, 91, 88, 37, 81, 79, 35, 85, 92, 90, 89, 43, 88, 91, 45, 44, 93, 84, 42, 35, 79, 77, 64, 82, 88, 43, 65, 86, 85, 89, 83, 42, 84, 87, 66, 91, 90, 92, 93, 95, 97, 96, 94, 97, 98, 99, 96, 39, 96, 99, 41, 94, 96, 39, 63, 80, 98, 97, 78, 78, 97, 95, 76, 41, 99, 81, 37, 153, 141, 140, 152, 125, 124, 149, 147, 77, 76, 138, 139, 139, 138, 140, 141, 83, 82, 144, 145, 142, 143, 148, 149, 143, 142, 87, 86, 145, 144, 147, 146, 117, 115, 139, 141, 143, 145, 146, 148, 123, 125, 147, 144, 124, 122, 142, 149, 115, 64, 77, 139, 82, 65, 123, 144, 86, 83, 145, 143, 122, 66, 87, 142, 147, 149, 148, 146, 95, 94, 150, 151, 151, 150, 153, 152, 119, 121, 153, 150, 94, 63, 119, 150, 140, 138, 151, 152, 138, 76, 95, 151, 121, 117, 141, 153]
            rel material:binding = </root/_materials/M_Television_17_1>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0.0000016775443, 0), (-1, 0.000005032447, 0), (-1, 0.000005032447, 0), (-1, 0.0000016773732, 0), (-1, 0, 0), (-1, -3.150927e-7, 0), (-1, -3.1512394e-7, 0), (-1, 0, 0), (0, 0.7071925, -0.7070211), (0, 0.70719236, -0.7070213), (0, 0.70719236, -0.7070213), (0, 0.7071925, -0.7070211), (0, 0.70719236, -0.7070213), (0, 0.70719224, -0.7070214), (0, 0.70719224, -0.7070214), (0, 0.70719236, -0.7070213), (0, 0.7071899, 0.7070237), (0, 0.7071899, 0.70702374), (0, 0.7071899, 0.70702374), (0, 0.7071899, 0.7070237), (0, 0.70710737, -0.7071063), (0, 0.7071071, -0.7071064), (0, 0.7071071, -0.7071064), (0, 0.70710737, -0.7071063), (0, 0.70710737, -0.7071063), (0, 0.7071074, -0.7071061), (0, 0.7071074, -0.7071061), (0, 0.70710737, -0.7071063), (0, 0.7071899, 0.70702374), (0, 0.7071898, 0.7070238), (0, 0.7071898, 0.7070238), (0, 0.7071899, 0.70702374), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, -3.150927e-7, 0), (-1, -9.4533686e-7, 0), (-1, -9.4533686e-7, 0), (-1, -3.1512394e-7, 0), (0, 0.7071074, 0.7071061), (0, 0.70710737, 0.7071063), (0, 0.70710737, 0.7071063), (0, 0.7071074, 0.7071061), (0, 0.70710737, 0.7071063), (0, 0.7071071, 0.7071064), (0, 0.7071071, 0.7071064), (0, 0.70710737, 0.7071063), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0.0000016775443, 0), (-1, 0.0000016773732, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0.7071925, -0.7070211), (0, 0.7071925, -0.7070211), (0, 0.70719236, -0.7070213), (0, 0.70719236, -0.7070213), (0, 0.70719236, -0.7070213), (0, 0.70719236, -0.7070213), (0, 0.70719224, -0.7070214), (0, 0.70719224, -0.7070214), (0, 0.7071899, 0.7070237), (0, 0.7071899, 0.7070237), (0, 0.70718986, 0.70702374), (0, 0.70718986, 0.70702374), (0, 0.70710725, -0.7071063), (0, 0.70710725, -0.7071063), (0, 0.7071071, -0.7071064), (0, 0.7071071, -0.7071064), (0, 0.70710725, -0.7071063), (0, 0.70710725, -0.7071063), (0, 0.7071074, -0.7071061), (0, 0.7071074, -0.7071061), (0, 0.70718986, 0.70702374), (0, 0.70718986, 0.70702374), (0, 0.7071898, 0.7070238), (0, 0.7071898, 0.7070238), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0.7071074, 0.7071061), (0, 0.7071074, 0.7071061), (0, 0.70710725, 0.7071063), (0, 0.70710725, 0.7071063), (0, 0.70710725, 0.7071063), (0, 0.70710725, 0.7071063), (0, 0.7071071, 0.7071064), (0, 0.7071071, 0.7071064), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.000927, 0.050476, 0.005578), (-0.000927, 0.050476, 0.005578), (0.000927, 0.05233, 0.005578), (-0.000927, 0.05233, 0.005578), (0.000927, 0.050476, 0.005578), (-0.000927, 0.050476, 0.005578), (0.000927, 0.05233, 0.005578), (-0.000927, 0.05233, 0.005578), (0.000927, 0.050476, 0.005578), (-0.000927, 0.050476, 0.005578), (0.000927, 0.05233, 0.005578), (-0.000927, 0.05233, 0.005578), (0.000927, 0.050476, 0.005578), (-0.000927, 0.050476, 0.005578), (0.000927, 0.05233, 0.005578), (-0.000927, 0.05233, 0.005578), (0.000927, 0.050476, 0.005578), (-0.000927, 0.050476, 0.005578), (0.000927, 0.05233, 0.005578), (-0.000927, 0.05233, 0.005578), (0.546686, -0.065129, -0.237011), (0.546686, -0.065129, 0.454332), (0.546686, -0.01141, 0.454332), (0.546686, -0.01141, -0.237011), (0.439191, 0.051403, 0.386363), (0.439191, 0.051403, -0.169042), (0.700833, -0.01141, -0.237011), (0.700833, -0.065129, -0.237011), (0.700833, -0.01141, 0.454332), (0.700833, -0.065129, 0.454332), (0.560202, -0.081529, -0.217703), (0.560202, -0.081529, 0.435024), (0.687317, -0.081529, -0.217703), (0.687317, -0.081529, 0.435024), (0.546686, -0.01141, -0.326268), (0.546686, -0.065129, -0.326268), (0.700833, -0.01141, -0.326268), (0.700833, -0.065129, -0.326268), (0.546686, -0.01141, -0.38539), (0.546686, -0.065129, -0.38539), (0.700833, -0.01141, -0.38539), (0.700833, -0.065129, -0.38539), (0.546686, -0.065129, -0.255631), (0.546686, -0.065129, -0.318305), (0.700833, -0.065129, -0.255631), (0.700833, -0.065129, -0.318305), (0.700833, -0.01141, -0.255631), (0.700833, -0.01141, -0.318305), (0.546686, -0.01141, -0.255631), (0.546686, -0.01141, -0.318305), (0.516509, -0.065129, -0.206834), (0.516509, -0.065129, 0.424156), (0.516509, -0.040877, -0.206834), (0.516509, -0.040877, 0.424156), (-0.000001, -0.065129, 0.454332), (-0.000001, -0.01141, 0.454332), (-0.000001, 0.051403, 0.386363), (-0.000001, 0.051403, -0.169042), (-0.000001, -0.01141, -0.237011), (-0.000001, -0.01141, -0.255631), (-0.000001, -0.01141, -0.318305), (-0.000001, -0.01141, -0.326268), (-0.000001, -0.01141, -0.38539), (-0.000001, -0.065129, -0.38539), (-0.000001, -0.065129, -0.326268), (-0.000001, -0.065129, -0.318305), (-0.000001, -0.065129, -0.255631), (-0.000001, -0.065129, -0.237011), (-0.000001, -0.065129, -0.206834), (-0.000001, -0.040877, -0.206834), (-0.000001, -0.040877, 0.424156), (-0.000001, -0.065129, 0.424156), (0.550697, -0.075664, 0.448035), (0.696822, -0.075664, 0.448035), (0.696822, -0.075664, -0.230714), (0.550697, -0.075664, -0.230714), (-0.000001, -0.086199, -0.330482), (-0.000001, -0.081986, -0.326268), (0.546686, -0.086199, -0.330482), (0.546686, -0.081986, -0.326268), (0.700833, -0.086199, -0.330482), (0.700833, -0.081986, -0.326268), (-0.000001, -0.081986, -0.318305), (-0.000001, -0.086199, -0.314091), (0.546686, -0.081986, -0.255631), (0.546686, -0.086199, -0.259844), (-0.000001, -0.086199, -0.259844), (-0.000001, -0.081986, -0.255631), (0.546686, -0.081986, -0.318305), (0.546686, -0.086199, -0.314091), (0.700833, -0.086199, -0.314091), (0.700833, -0.081986, -0.318305), (0.700833, -0.086199, -0.259844), (0.700833, -0.081986, -0.255631), (-0.000001, -0.081986, -0.38539), (-0.000001, -0.086199, -0.381177), (0.546686, -0.081986, -0.38539), (0.546686, -0.086199, -0.381177), (0.700833, -0.086199, -0.381177), (0.700833, -0.081986, -0.38539), (-0.546686, -0.065129, -0.237011), (-0.546686, -0.065129, 0.454332), (-0.546686, -0.01141, 0.454332), (-0.546686, -0.01141, -0.237011), (-0.439192, 0.051403, 0.386363), (-0.439192, 0.051403, -0.169042), (-0.700833, -0.01141, -0.237011), (-0.700833, -0.065129, -0.237011), (-0.700833, -0.01141, 0.454332), (-0.700833, -0.065129, 0.454332), (-0.560203, -0.081529, -0.217703), (-0.560203, -0.081529, 0.435024), (-0.687317, -0.081529, -0.217703), (-0.687317, -0.081529, 0.435024), (-0.546686, -0.01141, -0.326268), (-0.546686, -0.065129, -0.326268), (-0.700833, -0.01141, -0.326268), (-0.700833, -0.065129, -0.326268), (-0.546686, -0.01141, -0.38539), (-0.546686, -0.065129, -0.38539), (-0.700833, -0.01141, -0.38539), (-0.700833, -0.065129, -0.38539), (-0.546686, -0.065129, -0.255631), (-0.546686, -0.065129, -0.318305), (-0.700833, -0.065129, -0.255631), (-0.700833, -0.065129, -0.318305), (-0.700833, -0.01141, -0.255631), (-0.700833, -0.01141, -0.318305), (-0.546686, -0.01141, -0.255631), (-0.546686, -0.01141, -0.318305), (-0.51651, -0.065129, -0.206834), (-0.51651, -0.065129, 0.424156), (-0.51651, -0.040877, -0.206834), (-0.51651, -0.040877, 0.424156), (-0.550698, -0.075664, 0.448035), (-0.696822, -0.075664, 0.448035), (-0.696822, -0.075664, -0.230714), (-0.550698, -0.075664, -0.230714), (-0.546686, -0.086199, -0.330482), (-0.546686, -0.081986, -0.326268), (-0.700833, -0.086199, -0.330482), (-0.700833, -0.081986, -0.326268), (-0.546686, -0.081986, -0.255631), (-0.546686, -0.086199, -0.259844), (-0.546686, -0.081986, -0.318305), (-0.546686, -0.086199, -0.314091), (-0.700833, -0.086199, -0.314091), (-0.700833, -0.081986, -0.318305), (-0.700833, -0.086199, -0.259844), (-0.700833, -0.081986, -0.255631), (-0.546686, -0.081986, -0.38539), (-0.546686, -0.086199, -0.381177), (-0.700833, -0.086199, -0.381177), (-0.700833, -0.081986, -0.38539)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-31.290388, -18.173422), (-31.290388, -18.17474), (-31.289072, -18.17474), (-31.289072, -18.173422), (-31.31457, -0.034736), (-31.30634, -0.026506), (-31.30634, 0.072503), (-31.31457, 0.080732), (-31.391502, -0.036944), (-31.35858, -0.036944), (-31.35858, 0.085464), (-31.391502, 0.085464), (-31.560005, 0.499997), (-31.560005, 1.611109), (-31.56857, 1.611109), (-31.56857, 0.499997), (-31.560005, 1.611109), (-31.560005, 1.924406), (-31.56857, 1.924406), (-31.56857, 1.611109), (-31.503555, 0.499997), (-31.503555, 1.611117), (-31.51212, 1.611117), (-31.51212, 0.499997), (-31.515812, 1.611118), (-31.515812, 1.924418), (-31.524376, 1.924418), (-31.524376, 1.611118), (-31.524376, 1.611118), (-31.524376, 0.499997), (-31.515812, 0.499997), (-31.515812, 1.611118), (-31.503555, 1.611117), (-31.503555, 1.924417), (-31.51212, 1.924417), (-31.51212, 1.611117), (-31.525745, 1.924406), (-31.560005, 1.924406), (-31.560005, 1.611109), (-31.525745, 1.611109), (-31.41619, 1.567761), (-31.41619, 1.868836), (-31.522142, 1.868836), (-31.522142, 1.567761), (-31.54638, 1.611117), (-31.51212, 1.611117), (-31.51212, 1.924417), (-31.54638, 1.924417), (-31.481552, 1.924418), (-31.515812, 1.924418), (-31.515812, 1.611118), (-31.481552, 1.611118), (-31.525745, 1.611109), (-31.560005, 1.611109), (-31.560005, 0.499997), (-31.525745, 0.499997), (-31.51212, 0.499997), (-31.51212, 1.611117), (-31.54638, 1.611117), (-31.54638, 0.499997), (-31.41619, 0.499997), (-31.41619, 1.567761), (-31.522142, 1.567761), (-31.522142, 0.499997), (-31.481552, 1.611118), (-31.515812, 1.611118), (-31.515812, 0.499997), (-31.481552, 0.499997), (-31.35858, -0.036944), (-31.35035, -0.028715), (-31.35035, 0.077234), (-31.35858, 0.085464), (-31.4137, 0.499997), (-31.4137, 1.611112), (-31.422264, 1.611112), (-31.422264, 0.499997), (-31.4137, 1.611112), (-31.4137, 1.924411), (-31.422264, 1.924411), (-31.422264, 1.611112), (-31.456524, 1.611112), (-31.422264, 1.611112), (-31.422264, 1.924411), (-31.456524, 1.924411), (-31.422264, 0.499997), (-31.422264, 1.611112), (-31.456524, 1.611112), (-31.456524, 0.499997), (-31.353073, 1.86889), (-31.452084, 1.86889), (-31.452084, 1.567804), (-31.353073, 1.567804), (-31.353073, 1.567804), (-31.452084, 1.567804), (-31.452084, 0.499997), (-31.353073, 0.499997), (-31.347492, -0.034736), (-31.31457, -0.034736), (-31.31457, 0.080732), (-31.347492, 0.080732), (-31.31726, -0.034736), (-31.31726, 0.080732), (-31.325481, 0.072502), (-31.325481, -0.026506), (-31.328342, -0.036943), (-31.328342, 0.085463), (-31.36127, 0.085463), (-31.36127, -0.036943), (-31.560005, 0.499997), (-31.56857, 0.499997), (-31.56857, -0.611111), (-31.560005, -0.611111), (-31.560005, -0.611111), (-31.56857, -0.611111), (-31.56857, -0.924406), (-31.560005, -0.924406), (-31.503555, 0.499997), (-31.51212, 0.499997), (-31.51212, -0.61112), (-31.503555, -0.61112), (-31.515812, -0.61112), (-31.524376, -0.61112), (-31.524376, -0.924418), (-31.515812, -0.924418), (-31.524376, -0.61112), (-31.515812, -0.61112), (-31.515812, 0.499997), (-31.524376, 0.499997), (-31.503555, -0.61112), (-31.51212, -0.61112), (-31.51212, -0.924417), (-31.503555, -0.924417), (-31.525745, -0.924406), (-31.525745, -0.611111), (-31.560005, -0.611111), (-31.560005, -0.924406), (-31.41619, -0.567763), (-31.522142, -0.567763), (-31.522142, -0.868836), (-31.41619, -0.868836), (-31.54638, -0.61112), (-31.54638, -0.924417), (-31.51212, -0.924417), (-31.51212, -0.61112), (-31.481552, -0.924418), (-31.481552, -0.61112), (-31.515812, -0.61112), (-31.515812, -0.924418), (-31.525745, -0.611111), (-31.525745, 0.499997), (-31.560005, 0.499997), (-31.560005, -0.611111), (-31.51212, 0.499997), (-31.54638, 0.499997), (-31.54638, -0.61112), (-31.51212, -0.61112), (-31.41619, 0.499997), (-31.522142, 0.499997), (-31.522142, -0.567763), (-31.41619, -0.567763), (-31.481552, -0.61112), (-31.481552, 0.499997), (-31.515812, 0.499997), (-31.515812, -0.61112), (-31.36127, -0.036943), (-31.36127, 0.085463), (-31.369495, 0.077233), (-31.369495, -0.028713), (-31.4137, 0.499997), (-31.422264, 0.499997), (-31.422264, -0.611115), (-31.4137, -0.611115), (-31.4137, -0.611115), (-31.422264, -0.611115), (-31.422264, -0.924411), (-31.4137, -0.924411), (-31.456524, -0.611115), (-31.456524, -0.924411), (-31.422264, -0.924411), (-31.422264, -0.611115), (-31.422264, 0.499997), (-31.456524, 0.499997), (-31.456524, -0.611115), (-31.422264, -0.611115), (-31.353073, -0.86889), (-31.353073, -0.567805), (-31.452084, -0.567805), (-31.452084, -0.86889), (-31.353073, -0.567805), (-31.353073, 0.499997), (-31.452084, 0.499997), (-31.452084, -0.567805), (-31.284328, -0.034736), (-31.284328, 0.080732), (-31.31726, 0.080732), (-31.31726, -0.034736)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_Television_17_1"
        {
            token outputs:surface.connect = </root/_materials/M_Television_17_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_Television_17_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_Television_17_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/MetalBumpy_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Television_17_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/MetalBumpy_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Television_17_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

