#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "LidMeshLaptopLid_24_0_GeomSubset_0"
    {
        def Mesh "LidMeshLaptopLid_24_0_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 46, 29, 24, 45, 31, 47, 44, 25, 52, 64, 65, 55, 67, 37, 39, 66, 56, 54, 53, 57, 26, 33, 34, 28, 29, 36, 38, 24, 32, 27, 30, 35, 39, 37, 31, 25, 52, 55, 58, 59, 60, 52, 59, 61, 60, 74, 64, 52, 57, 53, 62, 63, 28, 46, 45, 26, 44, 47, 30, 27, 66, 39, 55, 65, 24, 38, 54, 56, 45, 24, 56, 57, 39, 25, 58, 55, 25, 44, 59, 58, 44, 27, 61, 59, 27, 32, 60, 61, 32, 73, 74, 60, 33, 26, 63, 62, 26, 45, 57, 63, 64, 53, 54, 65, 38, 66, 65, 54, 36, 67, 66, 38, 74, 73, 33, 62, 64, 74, 62, 53, 37, 67, 76, 75, 29, 46, 78, 77, 36, 29, 77, 79, 47, 31, 81, 80, 31, 37, 75, 81, 46, 28, 82, 78, 28, 34, 83, 82, 68, 35, 84, 85, 35, 30, 86, 84, 30, 47, 80, 86, 67, 36, 79, 76, 34, 68, 85, 83, 75, 76, 90, 89, 77, 78, 92, 91, 79, 77, 91, 94, 80, 81, 96, 95, 81, 75, 89, 96, 78, 82, 97, 92, 82, 83, 98, 97, 85, 84, 99, 100, 84, 86, 101, 99, 86, 80, 95, 101, 76, 79, 94, 90, 83, 85, 100, 98]
            rel material:binding = </root/_materials/M_LaptopLid_24_0>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.983724, -2.9266798e-9, -0.17968631), (-0.95698565, 0, -0.2901351), (-0.95698565, 0, -0.2901351), (-0.983724, 0, -0.17968631), (0.95698565, 0, -0.2901351), (0.983724, 0, -0.17968631), (0.983724, 2.9266798e-9, -0.17968631), (0.95698565, 0, -0.2901351), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-0.983724, -2.9266798e-9, -0.17968631), (-0.983724, 0, -0.17968631), (-1, 0, 0), (0.983724, 2.9266798e-9, -0.17968631), (0.983724, 0, -0.17968631), (1, 0, 0), (1, 0, 0), (0, -0.6748826, -0.73792505), (0, -0.6748838, -0.737924), (0, -0.67488325, -0.73792446), (0, -0.6748826, -0.73792505), (0, -0.67488444, -0.7379234), (0, -0.6748838, -0.737924), (0, -0.67488325, -0.73792446), (0, -0.67488444, -0.7379234), (-0.5739744, -0.80016994, -0.17401566), (-0.5739744, -0.80016994, -0.17401566), (-0.5739744, -0.80016994, -0.17401566), (-0.5739744, -0.80016994, -0.17401566), (0, -0.6748838, -0.737924), (0, -0.67488444, -0.7379234), (0, -0.67488444, -0.7379234), (0, -0.67488325, -0.73792446), (0.5739744, -0.80016994, -0.17401606), (0.5739744, -0.80016994, -0.17401606), (0.5739744, -0.80016994, -0.17401606), (0.5739744, -0.80016994, -0.17401606), (0.60461575, -0.7965173, 0), (0.60461575, -0.7965173, 0), (0.60461575, -0.7965173, 0), (0.60461575, -0.7965173, 0), (0, -0.67488366, 0.73792416), (0, -0.67488325, 0.73792446), (0, -0.674883, 0.73792475), (0, -0.67488366, 0.73792416), (0, -0.67488325, 0.73792446), (0, -0.67488265, 0.7379251), (0, -0.67488265, 0.7379251), (0, -0.674883, 0.73792475), (0, -0.67488325, 0.73792446), (0, -0.67488366, 0.73792416), (0, -0.67488366, 0.73792416), (0, -0.674883, 0.7379247), (-0.60461575, -0.7965173, 0), (-0.60461575, -0.7965173, 0), (-0.60461575, -0.7965173, 0), (-0.60461575, -0.7965173, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.6748838, -0.737924), (0, -0.6748826, -0.73792505), (0, -0.6748826, -0.73792505), (0, -0.67488325, -0.73792446), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -0.67488265, 0.7379251), (0, -0.67488265, 0.7379251), (0, -0.67488325, 0.73792446), (0, -0.674883, 0.7379247), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, -3.0024336e-7), (0, 1, 0), (0, 1, 0), (0, 1, -3.0024336e-7), (0, 1, -3.9848265e-7), (0, 1, 0), (0, 1, 0), (0, 1, -2.4260186e-7), (0, 1, -3.0024336e-7), (0, 1, -3.9848265e-7), (0, 1, -2.4260186e-7), (0, 1, -3.0024336e-7), (0, 1, 5.2543196e-8), (0, 1, -3.5905464e-7), (0, 1, -1.727484e-7), (0, 1, 5.860277e-8), (0, 1, -3.5905464e-7), (0, 1, -3.0024336e-7), (0, 1, -3.0024336e-7), (0, 1, -1.727484e-7), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 5.2543196e-8), (0, 1, 5.860277e-8), (0, 1, 0), (0, 1, 0), (0, 1, -3.0024336e-7), (0, 1, -3.0024336e-7), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.000632, 0.132412, -0.132062), (-0.000632, 0.132412, -0.132062), (0.000632, 0.133676, -0.132062), (-0.000632, 0.133676, -0.132062), (0.000632, 0.132412, -0.132062), (-0.000632, 0.132412, -0.132062), (0.000632, 0.133676, -0.132062), (-0.000632, 0.133676, -0.132062), (0.000632, 0.132412, -0.132062), (-0.000632, 0.132412, -0.132062), (0.000632, 0.133676, -0.132062), (-0.000632, 0.133676, -0.132062), (0.000632, 0.132412, -0.132062), (-0.000632, 0.132412, -0.132062), (0.000632, 0.133676, -0.132062), (-0.000632, 0.133676, -0.132062), (0.000632, 0.132412, -0.132062), (-0.000632, 0.132412, -0.132062), (0.000632, 0.133676, -0.132062), (-0.000632, 0.133676, -0.132062), (0.000632, 0.132412, -0.132062), (-0.000632, 0.132412, -0.132062), (0.000632, 0.133676, -0.132062), (-0.000632, 0.133676, -0.132062), (0.170914, 0.136461, 0.147488), (-0.170914, 0.136461, 0.147488), (0.199324, 0.136461, -0.111679), (-0.199324, 0.136461, -0.111679), (0.199324, 0.130076, -0.111679), (0.170914, 0.130076, 0.147488), (-0.199324, 0.130076, -0.111679), (-0.170914, 0.130076, 0.147488), (-0.099652, 0.136461, -0.111679), (0.099652, 0.136461, -0.111679), (0.099652, 0.130076, -0.111679), (-0.099652, 0.130076, -0.111679), (0.099652, 0.130076, 0.147488), (-0.099652, 0.130076, 0.147488), (0.099652, 0.136461, 0.147488), (-0.099652, 0.136461, 0.147488), (-0.099652, 0.135475, -0.136304), (0.099652, 0.135475, -0.136304), (-0.099652, 0.131062, -0.136304), (0.099652, 0.131062, -0.136304), (-0.199324, 0.136461, 0.05378), (0.199324, 0.136461, 0.05378), (0.199324, 0.130076, 0.05378), (-0.199324, 0.130076, 0.05378), (-0.099652, 0.136461, -0.135032), (0.099652, 0.136461, -0.135032), (0.099652, 0.130076, -0.135032), (-0.099652, 0.130076, -0.135032), (-0.097324, 0.139996, 0.052886), (0.097324, 0.139996, 0.052886), (0.097324, 0.139996, 0.144255), (-0.097324, 0.139996, 0.144255), (0.166966, 0.139996, 0.144255), (0.194667, 0.139996, 0.052886), (-0.166966, 0.139996, 0.144255), (-0.194667, 0.139996, 0.052886), (-0.097324, 0.139996, -0.108446), (-0.194667, 0.139996, -0.108446), (0.097324, 0.139996, -0.108446), (0.194667, 0.139996, -0.108446), (0, 0.139996, 0.052886), (0, 0.139996, 0.144255), (0, 0.136461, 0.147488), (0, 0.130076, 0.147488), (0, 0.130076, -0.111679), (0, 0.130076, -0.135032), (0, 0.131062, -0.136304), (0, 0.135475, -0.136304), (0, 0.136461, -0.135032), (0, 0.136461, -0.111679), (0, 0.139996, -0.108446), (-0.099652, 0.130076, 0.124434), (0, 0.130076, 0.124434), (0.162939, 0.130076, 0.124434), (0.162939, 0.130076, 0.05378), (0.099652, 0.130076, 0.124434), (-0.162939, 0.130076, 0.05378), (-0.162939, 0.130076, 0.124434), (0.162939, 0.130076, -0.085471), (0.099652, 0.130076, -0.085471), (-0.099652, 0.130076, -0.085471), (0, 0.130076, -0.085471), (-0.162939, 0.130076, -0.085471), (0, 0.132571, 0.05378), (-0.099652, 0.132571, 0.05378), (-0.099652, 0.132571, 0.124434), (0, 0.132571, 0.124434), (0.162939, 0.132571, 0.124434), (0.162939, 0.132571, 0.05378), (0.099652, 0.132571, 0.05378), (0.099652, 0.132571, 0.124434), (-0.162939, 0.132571, 0.05378), (-0.162939, 0.132571, 0.124434), (0.162939, 0.132571, -0.085471), (0.099652, 0.132571, -0.085471), (-0.099652, 0.132571, -0.085471), (0, 0.132571, -0.085471), (-0.162939, 0.132571, -0.085471), (-0.055564, 0.140808, -0.040362), (0.055564, 0.140808, -0.040362), (-0.055564, 0.140808, 0.076174), (0.055564, 0.140808, 0.076174), (0, 0.132371, 0.05378), (-0.099652, 0.132371, 0.05378), (-0.099652, 0.132371, 0.124434), (0, 0.132371, 0.124434), (0.162939, 0.132371, 0.124434), (0.162939, 0.132371, 0.05378), (0.099652, 0.132371, 0.05378), (0.099652, 0.132371, 0.124434), (-0.162939, 0.132371, 0.05378), (-0.162939, 0.132371, 0.124434), (0.162939, 0.132371, -0.085471), (0.099652, 0.132371, -0.085471), (-0.099652, 0.132371, -0.085471), (0, 0.132371, -0.085471), (-0.162939, 0.132371, -0.085471)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-118.32466, -19.673967), (-117.32466, -19.673967), (-117.32466, -18.673967), (-118.32466, -18.673967), (-117.53948, 0.095295), (-117.53948, -0.211946), (-117.518524, -0.21195), (-117.51854, 0.095299), (-117.51609, 0.6379), (-117.51609, 0.330584), (-117.49514, 0.330586), (-117.49515, 0.637902), (-118.32546, 0.039948), (-118.32546, 0.326732), (-118.59471, 0.326737), (-118.59471, 0.039963), (-117.57638, 0.280368), (-117.57638, -0.0116), (-117.55767, -0.011601), (-117.55767, 0.280371), (-118.59471, 0.818712), (-118.594696, 0.613498), (-118.32548, 0.613501), (-118.32546, 0.900355), (-117.46529, 0.228813), (-117.46529, -0.063234), (-117.44658, -0.06323), (-117.44658, 0.228809), (-117.57638, 0.781127), (-117.57638, 0.572344), (-117.55767, 0.572339), (-117.55767, 0.781126), (-117.45241, 0.395437), (-117.45241, 0.103429), (-117.433716, 0.103431), (-117.433716, 0.39544), (-117.55767, -0.011601), (-117.57638, -0.0116), (-117.57638, -0.220382), (-117.55767, -0.220387), (-118.32546, 0.039948), (-118.59471, 0.039963), (-118.594696, -0.165259), (-118.32548, -0.246882), (-117.85008, 0.039957), (-118.32546, 0.039948), (-118.32548, -0.246882), (-117.85008, -0.246883), (-117.85008, 0.039957), (-117.85008, 0.326736), (-118.32546, 0.326732), (-118.32546, 0.039948), (-118.32546, 0.900355), (-118.32548, 0.613501), (-117.85008, 0.61351), (-117.85008, 0.900358), (-117.53948, 0.637801), (-117.53948, 0.095295), (-117.51854, 0.095299), (-117.51854, 0.637804), (-117.49514, 0.330586), (-117.51609, 0.330584), (-117.51609, -0.212045), (-117.49515, -0.212043), (-118.60424, 0.326737), (-118.60424, 0.03309), (-118.59471, 0.039963), (-118.59471, 0.326737), (-118.60424, 0.830357), (-118.60424, 0.62037), (-118.594696, 0.613498), (-118.59471, 0.818712), (-117.51854, 0.095299), (-117.518524, -0.21195), (-117.50694, -0.20135), (-117.50694, 0.098221), (-118.60424, 0.03309), (-118.60424, -0.176887), (-118.594696, -0.165259), (-118.59471, 0.039963), (-117.49515, 0.637902), (-117.49514, 0.330586), (-117.48357, 0.327644), (-117.48356, 0.627288), (-117.49514, 0.330586), (-117.49515, -0.212043), (-117.48356, -0.201445), (-117.48357, 0.327644), (-117.84057, -0.260611), (-117.84058, 0.033095), (-117.85008, 0.039957), (-117.85008, -0.246883), (-117.84058, 0.033095), (-117.84057, 0.326734), (-117.85008, 0.326736), (-117.85008, 0.039957), (-117.84057, 0.620367), (-117.84057, 0.914079), (-117.85008, 0.900358), (-117.85008, 0.61351), (-117.51854, 0.637804), (-117.51854, 0.095299), (-117.50694, 0.098221), (-117.50694, 0.627203), (-118.32546, 0.326732), (-118.32548, 0.613501), (-118.594696, 0.613498), (-118.59471, 0.326737), (-118.60424, 0.62037), (-118.60424, 0.326737), (-118.59471, 0.326737), (-118.594696, 0.613498), (-117.57638, 0.572344), (-117.57638, 0.280368), (-117.55767, 0.280371), (-117.55767, 0.572339), (-117.85008, 0.326736), (-117.84057, 0.326734), (-117.84057, 0.620367), (-117.85008, 0.61351), (-118.32546, 0.326732), (-117.85008, 0.326736), (-117.85008, 0.61351), (-118.32548, 0.613501), (-117.41184, 0.034773), (-117.41184, 0.326737), (-117.47938, 0.326721), (-117.479385, 0.034765), (-117.41184, 0.827467), (-117.68638, 0.910713), (-117.68638, 0.804111), (-117.479385, 0.804115), (-117.411835, 0.618692), (-117.41184, 0.827467), (-117.479385, 0.804115), (-117.479385, 0.618694), (-117.68638, -0.257244), (-117.41184, -0.174008), (-117.479385, -0.150642), (-117.68638, -0.150638), (-117.41184, -0.174008), (-117.41184, 0.034773), (-117.479385, 0.034765), (-117.479385, -0.150642), (-117.68638, 0.910713), (-118.171135, 0.910698), (-118.09437, 0.804109), (-117.68638, 0.804111), (-118.171135, 0.910698), (-118.171135, 0.618694), (-118.09437, 0.6187), (-118.09437, 0.804109), (-118.171135, 0.32672), (-118.171135, 0.034765), (-118.094376, 0.034767), (-118.09437, 0.326736), (-118.171135, 0.034765), (-118.171135, -0.257244), (-118.09437, -0.15065), (-118.094376, 0.034767), (-118.171135, -0.257244), (-117.68638, -0.257244), (-117.68638, -0.150638), (-118.09437, -0.15065), (-117.41184, 0.326737), (-117.411835, 0.618692), (-117.479385, 0.618694), (-117.47938, 0.326721), (-118.171135, 0.618694), (-118.171135, 0.32672), (-118.09437, 0.326736), (-118.09437, 0.6187), (-117.537315, -0.024716), (-117.537315, 0.267356), (-117.544624, 0.267356), (-117.544624, -0.024716), (-117.486145, 0.480267), (-117.48615, 0.273246), (-117.47883, 0.273236), (-117.47883, 0.480256), (-117.537315, 0.559427), (-117.5373, 0.744916), (-117.544624, 0.744916), (-117.54461, 0.559432), (-117.47446, 0.072359), (-117.47446, -0.134376), (-117.46714, -0.134378), (-117.46714, 0.072367), (-117.537315, -0.210205), (-117.537315, -0.024716), (-117.544624, -0.024716), (-117.54461, -0.210199), (-117.48615, 0.273246), (-117.486145, -0.134804), (-117.47884, -0.134804), (-117.47883, 0.273236), (-117.556305, 0.744884), (-117.556305, 0.559406), (-117.54899, 0.559407), (-117.54899, 0.744884), (-117.556305, 0.267354), (-117.55631, -0.024698), (-117.549, -0.024697), (-117.549, 0.267355), (-117.55631, -0.024698), (-117.556305, -0.21017), (-117.54899, -0.210169), (-117.549, -0.024697), (-117.47446, 0.479841), (-117.47446, 0.072359), (-117.46714, 0.072367), (-117.467155, 0.479844), (-117.537315, 0.267356), (-117.537315, 0.559427), (-117.54461, 0.559432), (-117.544624, 0.267356), (-117.556305, 0.559406), (-117.556305, 0.267354), (-117.549, 0.267355), (-117.54899, 0.559407)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_LaptopLid_24_0"
        {
            token outputs:surface.connect = </root/_materials/M_LaptopLid_24_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_LaptopLid_24_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0.168
                float3 inputs:normal.connect = </root/_materials/M_LaptopLid_24_0/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_LaptopLid_24_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_LaptopLid_24_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

