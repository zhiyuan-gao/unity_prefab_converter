#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "DrwermeshSideTableDrawer_302_1_1_1_GeomSubset_1"
    {
        def Mesh "DrwermeshSideTableDrawer_302_1_1_1_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [52, 54, 53, 52, 55, 54, 56, 55, 52, 56, 57, 55, 55, 58, 54, 55, 59, 58, 57, 59, 55, 57, 60, 59, 59, 61, 58, 59, 62, 61, 60, 62, 59, 60, 63, 62, 64, 66, 65, 64, 67, 66, 63, 52, 62, 63, 56, 52, 62, 52, 53, 62, 53, 61, 66, 61, 53, 66, 67, 61, 65, 53, 54, 65, 66, 53, 64, 54, 58, 64, 65, 54, 67, 58, 61, 67, 64, 58]
            rel material:binding = </root/_materials/M_SideTableDrawer_302_1_1_1>
            normal3f[] normals = [(-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0.5955734, -0.803301), (0, 0.59558785, -0.8032901), (0, 0.5955733, -0.803301), (0, 0.5955734, -0.803301), (0, 0.59558815, -0.80328995), (0, 0.59558785, -0.8032901), (-0.47297236, 0.88107723, 0), (-0.47297686, 0.88107485, 0), (-0.47297212, 0.8810774, 0), (-0.47297236, 0.88107723, 0), (-0.4729773, 0.88107467, 0), (-0.47297686, 0.88107485, 0), (-1.2707608e-8, 0.59554404, 0.8033226), (0, 0.5959436, 0.8030263), (2.7910573e-8, 0.5956595, 0.803237), (-1.2707608e-8, 0.59554404, 0.8033226), (3.6816346e-9, 0.5955589, 0.80331165), (0, 0.5959436, 0.8030263), (0.47297415, 0.8810763, 0), (0.47297716, 0.8810746, 0), (0.47297403, 0.88107646, 0), (0.47297415, 0.8810763, 0), (0.47297743, 0.8810745, 0), (0.47297716, 0.8810746, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.48561, -0.248533, 0.229505), (0.48561, -0.261193, 0.229504), (0.48561, -0.261193, -0.048479), (0.48561, -0.248533, -0.048479), (-0.48561, -0.248533, -0.048479), (-0.48561, -0.261193, -0.048479), (-0.48561, -0.261193, 0.229504), (-0.48561, -0.248533, 0.229505), (-0.433178, -0.263318, -0.026232), (0.433179, -0.263318, -0.026232), (0.433179, -0.263318, 0.207257), (-0.433178, -0.263318, 0.207257), (-0.475139, -0.248533, 0.235056), (-0.475139, -0.261193, 0.235056), (0.47514, -0.261193, 0.235056), (0.47514, -0.248533, 0.235056), (-0.425681, -0.037135, 0.220055), (-0.425681, -0.037135, -0.022555), (0.425683, -0.037135, -0.022555), (0.425683, -0.037135, 0.220055), (0.47514, -0.248533, -0.054031), (0.47514, -0.261193, -0.054031), (-0.475139, -0.261193, -0.054031), (-0.475139, -0.248533, -0.054031), (0.47514, -0.242911, 0.229505), (-0.475139, -0.242911, 0.229505), (0.47514, -0.242911, -0.048479), (-0.475139, -0.242911, -0.048479), (-0.475139, -0.266814, 0.229504), (0.47514, -0.266814, 0.229504), (0.47514, -0.266814, -0.048479), (-0.475139, -0.266814, -0.048479), (-0.457316, -0.242911, 0.220054), (0.457316, -0.242911, 0.220054), (-0.457316, -0.242911, -0.039029), (0.457316, -0.242911, -0.039029), (-0.457316, -0.02015, -0.039029), (-0.457316, -0.02015, 0.220055), (0.457316, -0.02015, 0.220055), (0.457316, -0.02015, -0.039029), (0.425683, -0.225927, -0.022555), (0.425682, -0.225927, 0.220055), (-0.425681, -0.225927, 0.220055), (-0.425681, -0.225927, -0.022555), (0.446232, -0.266815, 0.214178), (-0.446232, -0.266815, 0.214178), (0.446232, -0.266814, -0.033153), (-0.446232, -0.266814, -0.033153), (0.439706, -0.266815, 0.210718), (-0.439705, -0.266815, 0.210718), (0.439706, -0.266814, -0.029693), (-0.439705, -0.266814, -0.029693), (0.078273, -0.265663, 0.014265), (0.078273, -0.26747, 0.014265), (0.078273, -0.26747, -0.020121), (0.078273, -0.265663, -0.020121), (0.078273, -0.262398, 0.014265), (0.078273, -0.262398, -0.020121), (-0.078272, -0.26747, -0.020121), (-0.078272, -0.265663, -0.020121), (-0.078272, -0.262398, -0.020121), (-0.078272, -0.26747, 0.014265), (-0.078272, -0.265663, 0.014265), (-0.078272, -0.262398, 0.014265), (-0.075556, -0.268928, -0.019039), (0.075557, -0.268928, -0.019039), (0.075557, -0.268928, 0.013184), (-0.075556, -0.268928, 0.013184)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.818362), (0.092088, 0.675906), (-0.165236, 0.813735), (-0.165236, 0.675906), (0.092088, 0.675906), (0.092088, 0.813735), (-0.165236, 0.813735), (0.096714, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.165236, 0.813735), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.165236, 0.813735), (0.092088, 0.813735), (0.096714, 0.818362), (-0.165236, 0.675906), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.165236, 0.675906), (-0.165236, 0.813735), (-0.169862, 0.818362), (0.092088, 0.675906), (-0.169862, 0.67128), (0.096714, 0.67128), (0.092088, 0.675906), (-0.165236, 0.675906), (-0.169862, 0.67128), (0.092088, 0.813735), (0.096714, 0.67128), (0.096714, 0.818362), (0.092088, 0.813735), (0.092088, 0.675906), (0.096714, 0.67128)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_SideTableDrawer_302_1_1_1"
        {
            token outputs:surface.connect = </root/_materials/M_SideTableDrawer_302_1_1_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_SideTableDrawer_302_1_1_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_SideTableDrawer_302_1_1_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_302_1_1_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_302_1_1_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

