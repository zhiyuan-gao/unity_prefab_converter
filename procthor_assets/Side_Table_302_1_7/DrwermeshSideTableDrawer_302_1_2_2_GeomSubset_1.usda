#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "DrwermeshSideTableDrawer_302_1_2_2_GeomSubset_1"
    {
        def Mesh "DrwermeshSideTableDrawer_302_1_2_2_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [52, 54, 53, 52, 55, 54, 56, 55, 52, 56, 57, 55, 55, 58, 54, 55, 59, 58, 57, 59, 55, 57, 60, 59, 59, 61, 58, 59, 62, 61, 60, 62, 59, 60, 63, 62, 64, 66, 65, 64, 67, 66, 63, 52, 62, 63, 56, 52, 62, 52, 53, 62, 53, 61, 66, 61, 53, 66, 67, 61, 65, 53, 54, 65, 66, 53, 64, 54, 58, 64, 65, 54, 67, 58, 61, 67, 64, 58]
            rel material:binding = </root/_materials/M_SideTableDrawer_302_1_2_1>
            normal3f[] normals = [(-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.99999994, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -0.99999994, 0), (0, -1, 0), (0, -0.99999994, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -0.5909205, 0.80672985), (-3.758174e-8, -0.59054905, 0.8070017), (0, -0.5909204, 0.8067299), (0, -0.5909205, 0.80672985), (-1.3911631e-8, -0.59066546, 0.8069165), (-3.758174e-8, -0.59054905, 0.8070017), (-0.47297403, -0.8810764, 0), (-0.47297537, -0.8810757, 0), (-0.47297394, -0.8810764, 0), (-0.47297403, -0.8810764, 0), (-0.47297546, -0.88107556, 0), (-0.47297537, -0.8810757, 0), (0, -0.5909329, -0.80672073), (1.5123016e-8, -0.59053814, -0.8070097), (-2.879824e-8, -0.59054613, -0.80700374), (0, -0.5909329, -0.80672073), (0, -0.5909248, -0.8067267), (1.5123016e-8, -0.59053814, -0.8070097), (0.4731103, -0.8810032, 0), (0.47310865, -0.8810041, 0), (0.47311035, -0.88100314, 0), (0.4731103, -0.8810032, 0), (0.47310853, -0.88100415, 0), (0.47310865, -0.8810041, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.48561, -0.248533, -0.06456), (-0.48561, -0.261193, -0.06456), (-0.48561, -0.261193, -0.338983), (-0.48561, -0.248533, -0.338983), (0.48561, -0.248533, -0.338983), (0.48561, -0.261193, -0.338983), (0.48561, -0.261193, -0.06456), (0.48561, -0.248533, -0.06456), (0.433179, -0.263318, -0.317021), (-0.433179, -0.263318, -0.317021), (-0.433179, -0.263318, -0.086522), (0.433179, -0.263318, -0.086522), (0.475139, -0.248533, -0.05908), (0.475139, -0.261193, -0.05908), (-0.47514, -0.261193, -0.05908), (-0.47514, -0.248533, -0.05908), (0.425681, -0.037135, -0.073889), (0.425681, -0.037135, -0.313391), (-0.425682, -0.037135, -0.313391), (-0.425682, -0.037135, -0.073889), (-0.47514, -0.248533, -0.344463), (-0.47514, -0.261192, -0.344463), (0.475139, -0.261192, -0.344463), (0.475139, -0.248533, -0.344463), (-0.47514, -0.242911, -0.06456), (0.475139, -0.242911, -0.06456), (-0.47514, -0.242911, -0.338983), (0.475139, -0.242911, -0.338983), (0.475139, -0.266814, -0.06456), (-0.47514, -0.266814, -0.06456), (-0.47514, -0.266814, -0.338983), (0.475139, -0.266814, -0.338983), (0.457316, -0.242911, -0.073889), (-0.457316, -0.242911, -0.073889), (0.457316, -0.242911, -0.329654), (-0.457316, -0.242911, -0.329654), (0.457316, -0.02015, -0.329654), (0.457316, -0.02015, -0.073889), (-0.457316, -0.02015, -0.073889), (-0.457316, -0.02015, -0.329654), (-0.425682, -0.225927, -0.313391), (-0.425682, -0.225927, -0.073889), (0.425681, -0.225927, -0.073889), (0.425681, -0.225927, -0.313391), (-0.446232, -0.266814, -0.07969), (0.446232, -0.266814, -0.07969), (-0.446232, -0.266814, -0.323853), (0.446232, -0.266814, -0.323853), (-0.439706, -0.266815, -0.083106), (0.439705, -0.266815, -0.083106), (-0.439706, -0.266814, -0.320437), (0.439705, -0.266814, -0.320437), (-0.078273, -0.265663, -0.277042), (-0.078273, -0.26747, -0.277042), (-0.078273, -0.26747, -0.310988), (-0.078273, -0.265663, -0.310988), (-0.078273, -0.262398, -0.277042), (-0.078273, -0.262398, -0.310988), (0.078272, -0.26747, -0.310988), (0.078272, -0.265663, -0.310988), (0.078272, -0.262398, -0.310988), (0.078272, -0.26747, -0.277042), (0.078272, -0.265663, -0.277042), (0.078272, -0.262398, -0.277042), (0.075557, -0.268928, -0.30992), (-0.075557, -0.268928, -0.30992), (-0.075557, -0.268928, -0.27811), (0.075557, -0.268928, -0.27811)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.818362), (0.092088, 0.675906), (-0.165236, 0.813735), (-0.165236, 0.675906), (0.092088, 0.675906), (0.092088, 0.813735), (-0.165236, 0.813735), (0.096714, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.165236, 0.813735), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.165236, 0.813735), (0.092088, 0.813735), (0.096714, 0.818362), (-0.165236, 0.675906), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.165236, 0.675906), (-0.165236, 0.813735), (-0.169862, 0.818362), (0.092088, 0.675906), (-0.169862, 0.67128), (0.096714, 0.67128), (0.092088, 0.675906), (-0.165236, 0.675906), (-0.169862, 0.67128), (0.092088, 0.813735), (0.096714, 0.67128), (0.096714, 0.818362), (0.092088, 0.813735), (0.092088, 0.675906), (0.096714, 0.67128)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_SideTableDrawer_302_1_2_1"
        {
            token outputs:surface.connect = </root/_materials/M_SideTableDrawer_302_1_2_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_SideTableDrawer_302_1_2_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_SideTableDrawer_302_1_2_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_302_1_2_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_302_1_2_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

