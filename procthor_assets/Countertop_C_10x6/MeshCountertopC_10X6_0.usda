#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.0"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "CountertopC_10X6"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "CountertopC_10X6" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-1.523137, -0.923695, -0.517404), (1.524867, 0.925105, 0.418626)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 3, 3, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [44, 45, 9, 10, 0, 15, 16, 4, 2, 3, 6, 5, 0, 1, 8, 7, 3, 2, 10, 9, 14, 15, 0, 7, 6, 3, 11, 12, 3, 9, 13, 11, 2, 15, 14, 10, 16, 15, 2, 5, 46, 30, 29, 47, 26, 1, 0, 4, 4, 27, 28, 26, 6, 29, 30, 5, 32, 27, 4, 16, 6, 12, 31, 29, 5, 30, 32, 16, 7, 8, 45, 44, 8, 13, 9, 45, 14, 7, 44, 10, 27, 32, 30, 46, 31, 28, 47, 29, 28, 27, 46, 47, 12, 11, 17, 18, 11, 13, 19, 17, 19, 13, 8, 21, 20, 22, 23, 36, 37, 38, 39, 18, 17, 20, 21, 23, 22, 25, 24, 12, 18, 33, 31, 33, 28, 31, 33, 35, 28, 26, 24, 25, 1, 19, 8, 34, 40, 41, 42, 43, 19, 34, 37, 36, 35, 33, 40, 43, 8, 1, 37, 34, 1, 25, 38, 37, 25, 22, 39, 38, 22, 20, 36, 39, 20, 17, 19, 36, 18, 21, 40, 33, 21, 23, 41, 40, 23, 24, 42, 41, 24, 26, 43, 42, 26, 28, 35, 43]
            rel material:binding = </root/_materials/M_CountertopC_10X6_0>
            normal3f[] normals = [(0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, 0, 1), (-3.4285833e-7, 0, 1), (3.006393e-7, 0, 1), (0, 0, 1), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0.000001603308, 0), (1, 0.000001603308, 0), (1, 0.000001603308, 0), (1, 0.000001603308, 0), (-0.0000010285428, 0, 1), (-3.4285833e-7, 0, 1), (0, 0, 1), (0, 0, 1), (-5.826036e-7, 0, -1), (6.0119186e-7, 0, -1), (6.0114223e-7, 0, -1), (-5.8245564e-7, 0, -1), (6.0119186e-7, 0, -1), (6.012356e-7, 0, -1), (6.011602e-7, 0, -1), (6.0114223e-7, 0, -1), (-0.0000013714689, 0, 1), (-3.4285833e-7, 0, 1), (-0.0000010285428, 0, 1), (-0.0000013715687, 0, 1), (3.006393e-7, 0, 1), (-3.4285833e-7, 0, 1), (-0.0000013714689, 0, 1), (0.0000012027946, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, -3.049146e-9, 0), (-1, -0.0000015532046, 0), (-1, -0.0000015532046, 0), (-1, -0.0000015532046, 0), (-1, -0.0000015532046, 0), (9.020826e-7, 0, 1), (0, 0, 1), (0, 0, 1), (3.006393e-7, 0, 1), (-5.826036e-7, 0, -1), (-5.8245564e-7, 0, -1), (-5.8259775e-7, 0, -1), (-5.8247457e-7, 0, -1), (0.0000012027946, 0, 1), (0.0000012025281, 0, 1), (9.020826e-7, 0, 1), (3.006393e-7, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (6.011602e-7, 0, -1), (6.012356e-7, 0, -1), (0, 0, -1), (-0.0000010285428, 0, 1), (0, 0, 1), (0, 0, 1), (-0.0000013715687, 0, 1), (0, 0, 1), (9.020826e-7, 0, 1), (0.0000012025281, 0, 1), (0, 0, 1), (-5.8259775e-7, 0, -1), (0, 0, -1), (0, 0, -1), (-5.8247457e-7, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0.0000017789206, -1, 0), (0.0000017789206, -1, 0), (0.0000017789206, -1, 0), (0.0000017789206, -1, 0), (0.0039957315, 0.008204973, -0.9999584), (-0.004117119, 0.008174527, -0.9999581), (-0.0039997725, 0.0081999935, -0.9999584), (0.0039998097, 0.008199761, -0.9999584), (-0.00018223736, -0.00020716732, -1), (0.00018223787, -0.00020716731, -1), (0.00018227189, -0.00020712057, -0.99999994), (-0.00018227163, -0.00020712022, -0.99999994), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-0.0000017789141, -1, 0), (-0.0000017789141, -1, 0), (-0.0000017789141, -1, 0), (-0.0000017789141, -1, 0), (-0.00470093, 0.0011790671, -0.9999882), (-0.000113024726, 0.002145804, -0.9999976), (-0.000113024726, 0.002145804, -0.9999976), (-0.006126284, 0.0009113963, -0.99998075), (0.00011302453, 0.0021458087, -0.9999976), (0.004560154, 0.0012082472, -0.999989), (0.005935045, 0.0009295814, -0.999982), (0.00011302453, 0.0021458087, -0.9999976), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.99999994, 0, 0), (-1, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-1, 0, 0), (0.00018227189, -0.00020712057, -0.99999994), (0.00018223787, -0.00020716731, -1), (0.00036454172, 0.00004315646, -0.99999994), (0.00036454172, 0.00004315646, -0.99999994), (0.9999997, -0.00084436685, 0), (0.9999997, -0.00084436685, 0), (0.9999997, -0.00084436685, 0), (0.9999997, -0.00084436685, 0), (-0.0039997725, 0.0081999935, -0.9999584), (-0.004117119, 0.008174527, -0.9999581), (-0.00470093, 0.0011790671, -0.9999882), (-0.006126284, 0.0009113963, -0.99998075), (0.0039957315, 0.008204973, -0.9999584), (0.0039998097, 0.008199761, -0.9999584), (0.005935045, 0.0009295814, -0.999982), (0.004560154, 0.0012082472, -0.999989), (-0.9999997, -0.0008434569, 0), (-0.9999997, -0.0008434569, 0), (-0.9999997, -0.0008434569, 0), (-0.9999997, -0.0008434569, 0), (-0.00018223736, -0.00020716732, -1), (-0.00018227163, -0.00020712022, -0.99999994), (-0.00036454079, 0.000043156568, -1), (-0.00036454079, 0.000043156568, -1), (0.99999994, -8.400195e-9, 0), (1, -3.049146e-9, 0), (1, -3.5673593e-9, 0), (0.99999994, -8.400195e-9, 0), (1, -3.049146e-9, 0), (1, 0, 0), (0.99999994, 0, 0), (1, -3.5673593e-9, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-1.523137, 0.925105, 0.418626), (-1.523137, 0.925105, 0.388626), (-0.913533, 0.315506, 0.418626), (-0.913533, 0.315506, 0.388626), (1.524867, 0.925105, 0.418626), (0.915265, 0.315506, 0.418626), (0.915265, 0.315506, 0.388626), (-1.523137, -0.903695, 0.418626), (-1.523137, -0.903695, 0.388626), (-0.913531, -0.923695, 0.388626), (-0.913531, -0.923695, 0.418626), (-0.933534, 0.335509, 0.388626), (0.935262, 0.335509, 0.388626), (-0.933534, -0.903695, 0.388626), (-0.933534, -0.903695, 0.418626), (-0.933534, 0.335509, 0.418626), (0.935262, 0.335509, 0.418626), (-0.933534, 0.335509, -0.437404), (0.935262, 0.335509, -0.437404), (-0.933534, -0.903695, -0.437404), (-0.952497, 0.35447, -0.437143), (0.954226, 0.35447, -0.437143), (-0.952497, 0.35447, -0.517143), (0.954226, 0.35447, -0.517143), (1.524867, 0.925105, -0.517404), (-1.523137, 0.925105, -0.517404), (1.524867, 0.925105, 0.388626), (1.524867, -0.903695, 0.418626), (1.524867, -0.903695, 0.388626), (0.915267, -0.923695, 0.388626), (0.915267, -0.923695, 0.418626), (0.935262, -0.903695, 0.388626), (0.935262, -0.903695, 0.418626), (0.935262, -0.903695, -0.437404), (-1.523137, -0.903695, -0.437273), (1.524867, -0.903695, -0.437273), (-0.953534, -0.873694, -0.437273), (-1.523137, -0.873695, -0.437273), (-1.523137, -0.873695, -0.517404), (-0.953534, -0.873694, -0.517274), (0.955262, -0.873694, -0.437273), (0.955262, -0.873694, -0.517274), (1.524867, -0.873695, -0.517404), (1.524867, -0.873695, -0.437273), (-1.523137, -0.923695, 0.418626), (-1.523137, -0.923695, 0.388626), (1.524867, -0.923695, 0.418626), (1.524867, -0.923695, 0.388626)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-10.629426, 1.111187), (-10.629426, 1.064314), (-9.676888, 1.064314), (-9.676888, 1.111187), (-12.034582, 1.920841), (-11.11333, 0.9996), (-8.193334, 0.9996), (-7.272078, 1.920841), (-10.916722, 1.15237), (-10.916722, 1.105497), (-8.059144, 1.105497), (-8.059144, 1.15237), (-10.935022, 1.123311), (-10.935022, 1.076437), (-8.077522, 1.076437), (-8.077522, 1.123311), (-8.945036, 1.091769), (-8.945036, 1.138642), (-10.881361, 1.138642), (-10.881361, 1.091769), (-11.11333, -0.936655), (-11.11333, 0.9996), (-12.034582, 1.920841), (-12.034582, -0.936655), (-8.224631, -0.048025), (-11.082027, -0.048025), (-11.113279, -0.079283), (-8.193384, -0.079283), (-11.082027, -0.048025), (-11.082024, 1.888157), (-11.113279, 1.856906), (-11.113279, -0.079283), (-11.082077, 0.968343), (-11.11333, 0.9996), (-11.11333, -0.936655), (-11.082073, -0.967907), (-8.193334, 0.9996), (-11.11333, 0.9996), (-11.082077, 0.968343), (-8.224582, 0.968343), (-9.676894, 1.097459), (-10.629418, 1.097459), (-10.629418, 1.050586), (-9.676894, 1.050586), (-7.272017, 1.109107), (-12.034645, 1.109107), (-12.034645, 1.062233), (-7.272017, 1.062233), (-8.046232, 1.137514), (-10.903807, 1.137514), (-10.903807, 1.09064), (-8.046232, 1.09064), (-10.881335, 1.07804), (-8.945064, 1.07804), (-8.945064, 1.124916), (-10.881335, 1.124916), (-8.193334, -0.936655), (-7.272078, -0.936655), (-7.272078, 1.920841), (-8.193334, 0.9996), (-8.224631, -0.048025), (-8.193384, -0.079283), (-8.193384, 1.856906), (-8.224627, 1.888157), (-8.224582, 0.968343), (-8.224577, -0.967907), (-8.193334, -0.936655), (-8.193334, 0.9996), (-8.077522, 1.123311), (-8.077522, 1.076437), (-8.046272, 1.076437), (-8.046272, 1.123311), (-12.034498, 1.856906), (-11.113279, 1.856906), (-11.082024, 1.888157), (-12.034498, 1.888157), (-11.11333, -0.936655), (-12.034582, -0.936655), (-12.034581, -0.967907), (-11.082073, -0.967907), (-7.272078, -0.936655), (-8.193334, -0.936655), (-8.224577, -0.967907), (-7.272079, -0.967907), (-8.193384, 1.856906), (-7.272161, 1.856906), (-7.272161, 1.888157), (-8.224627, 1.888157), (-10.903807, 1.09064), (-10.903807, 1.137514), (-10.935061, 1.137514), (-10.935061, 1.09064), (-18.45542, 1.05788), (-19.915417, 1.05788), (-19.915417, 0.412544), (-18.45542, 0.412544), (-19.233488, 0.59519), (-20.201614, 0.59519), (-20.201614, -0.050146), (-19.233488, -0.050148), (-19.598373, 0.252918), (-20.24371, 0.252918), (-20.24371, -0.207708), (-18.444263, 0.671326), (-19.933903, 0.671326), (-19.933903, 0.608828), (-18.444263, 0.608828), (-19.67376, 0.246889), (-20.118769, 0.246889), (-20.118769, 0.18429), (-19.67376, 0.184389), (-18.569355, -0.389454), (-20.029366, -0.389454), (-20.044178, -0.40427), (-18.55454, -0.40427), (-18.554544, 0.493574), (-20.044174, 0.493574), (-20.489988, 0.047764), (-18.108732, 0.047764), (-20.201616, 0.42951), (-20.201616, -0.215826), (-19.233488, -0.215828), (-19.233488, 0.42951), (-19.598373, -0.086506), (-20.243711, 0.374123), (-20.243711, -0.086506), (-19.598373, -0.086506), (-19.598475, 0.374123), (-20.243711, 0.374123), (-18.108734, 0.183496), (-18.108734, 0.891336), (-20.489985, 0.891336), (-20.489985, 0.183496), (-19.598373, 0.252918), (-20.24371, -0.207708), (-19.598475, -0.20771), (-20.118769, 0.269939), (-20.118769, 0.207439), (-19.673758, 0.20734), (-19.673758, 0.269939), (-20.029366, 0.578682), (-20.489996, 0.578682), (-20.489996, 0.555244), (-20.04499, 0.555241), (-18.108725, 0.578682), (-18.569355, 0.578682), (-18.55373, 0.555241), (-18.108725, 0.555245), (-18.832264, 1.21364), (-20.261013, 1.21364), (-18.8557, 0.568403), (-18.832264, 0.568403), (-20.261013, 1.21364), (-20.261013, 0.5058), (-18.8557, 0.5058), (-18.8557, 0.568403), (-19.068968, 0.306942), (-19.514774, 0.752754), (-20.474277, 0.751942), (-20.47428, 0.306942), (-19.23673, -0.017962), (-19.23673, 0.044538), (-20.19624, 0.044436), (-20.19624, -0.018064), (-20.044178, -0.40427), (-20.029366, -0.389454), (-20.029366, 0.578682), (-20.04499, 0.555241), (-18.569355, -0.389454), (-18.55454, -0.40427), (-18.55373, 0.555241), (-18.569355, 0.578682), (-20.19624, 0.023006), (-20.19624, -0.039494), (-19.23673, -0.039597), (-19.23673, 0.022903), (-19.514774, 0.190619), (-19.068966, 0.636429), (-20.474281, 0.636429), (-20.47428, 0.191429), (-19.060148, 0.324661), (-19.060148, 1.032499), (-20.465458, 0.387264), (-20.465458, 0.324661), (-19.060148, 1.032499), (-20.488895, 1.032499), (-20.488895, 0.387264), (-20.465458, 0.387264)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_CountertopC_10X6_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
                rel material:binding = </root/_materials/M_CountertopC_10X6_0>
            }

            def GeomSubset "M_CountertopC_10X6_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47]
                rel material:binding = </root/_materials/M_CountertopC_10X6_1>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_CountertopC_10X6_0"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopC_10X6_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopC_10X6_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/marbleBase2.jpg@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopC_10X6_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_CountertopC_10X6_1"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopC_10X6_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopC_10X6_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_CountertopC_10X6_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/DarkWood2.tif@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopC_10X6_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopC_10X6_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

