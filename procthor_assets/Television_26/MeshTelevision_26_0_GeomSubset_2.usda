#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshTelevision_26_0_GeomSubset_2"
    {
        def Mesh "MeshTelevision_26_0_GeomSubset_2"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [8, 9, 11, 10, 95, 96, 62, 63, 123, 124, 61, 60, 65, 64, 80, 79, 60, 61, 103, 104, 104, 103, 96, 95, 79, 80, 124, 123]
            rel material:binding = </root/_materials/M_Television_26_2>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.0008, -0.040412, 0.066386), (-0.0008, -0.040412, 0.066386), (0.0008, -0.038813, 0.066386), (-0.0008, -0.038813, 0.066386), (0.0008, -0.040412, 0.066386), (-0.0008, -0.040412, 0.066386), (0.0008, -0.038813, 0.066386), (-0.0008, -0.038813, 0.066386), (0.0008, -0.040412, 0.066386), (-0.0008, -0.040412, 0.066386), (0.0008, -0.038813, 0.066386), (-0.0008, -0.038813, 0.066386), (0.0008, -0.040412, 0.066386), (-0.0008, -0.040412, 0.066386), (0.0008, -0.038813, 0.066386), (-0.0008, -0.038813, 0.066386), (0.0008, -0.040412, 0.066386), (-0.0008, -0.040412, 0.066386), (0.0008, -0.038813, 0.066386), (-0.0008, -0.038813, 0.066386), (0.544775, -0.039612, 0.392747), (0.544775, -0.079614, 0.392747), (-0.544775, -0.079614, 0.392747), (-0.544775, -0.039612, 0.392747), (-0.544775, -0.039612, -0.238939), (0.544775, -0.039612, -0.238939), (-0.544775, -0.079614, -0.238939), (0.544775, -0.079614, -0.238939), (-0.544775, -0.039612, -0.165609), (-0.544775, -0.039612, -0.202061), (0.544775, -0.039612, -0.165609), (0.544775, -0.039612, -0.202061), (-0.544775, -0.079614, -0.165609), (-0.544775, -0.079614, -0.202061), (0.544775, -0.079614, -0.165609), (0.544775, -0.079614, -0.202061), (-0.539187, -0.044377, -0.165609), (-0.539187, -0.044377, -0.202061), (0.539187, -0.044377, -0.202061), (0.539187, -0.044377, -0.165609), (-0.539187, -0.074849, -0.165609), (-0.539187, -0.074849, -0.202061), (0.539187, -0.074849, -0.202061), (0.539187, -0.074849, -0.165609), (0, -0.079614, -0.165609), (0, -0.074849, -0.165609), (0, -0.074849, -0.202061), (0, -0.079614, -0.202061), (0, -0.039612, -0.202061), (0, -0.044377, -0.202061), (0, -0.044377, -0.165609), (0, -0.039612, -0.165609), (0, -0.039612, 0.392747), (0, -0.079614, 0.392747), (0, -0.079614, 0.360382), (0, -0.079614, -0.13129), (-0.506849, -0.079614, -0.13129), (-0.506849, -0.079614, 0.360382), (0.50685, -0.079614, -0.13129), (0.50685, -0.079614, 0.360382), (0, -0.070095, 0.34583), (0, -0.070095, -0.116739), (-0.477064, -0.070095, -0.116739), (-0.477064, -0.070095, 0.34583), (0.477064, -0.070095, -0.116739), (0.477064, -0.070095, 0.34583), (0.08941, -0.079614, -0.165609), (0.08941, -0.074849, -0.165609), (0.08941, -0.074849, -0.202061), (0.08941, -0.079614, -0.202061), (0.08941, -0.079614, -0.238939), (0.08941, -0.039612, -0.238939), (0.08941, -0.039612, -0.202061), (0.08941, -0.044377, -0.202061), (0.08941, -0.044377, -0.165609), (0.08941, -0.039612, -0.165609), (0.08941, -0.039612, 0.392747), (0.08941, -0.079614, 0.392747), (0.085247, -0.079614, 0.360382), (0.080916, -0.070095, 0.34583), (0.080916, -0.070095, -0.116739), (0.085247, -0.079614, -0.13129), (-0.08941, -0.079614, -0.165609), (-0.08941, -0.074849, -0.165609), (-0.08941, -0.074849, -0.202061), (-0.08941, -0.079614, -0.202061), (-0.08941, -0.079614, -0.238939), (-0.08941, -0.039612, -0.238939), (-0.08941, -0.039612, -0.202061), (-0.08941, -0.044377, -0.202061), (-0.08941, -0.044377, -0.165609), (-0.08941, -0.039612, -0.165609), (-0.08941, -0.039612, 0.392747), (-0.08941, -0.079614, 0.392747), (-0.085247, -0.079614, 0.360382), (-0.080915, -0.070095, 0.34583), (-0.080915, -0.070095, -0.116739), (-0.085247, -0.079614, -0.13129), (-0.044705, -0.079614, -0.202061), (-0.044705, -0.074849, -0.202061), (-0.044705, -0.074849, -0.165609), (-0.044705, -0.079614, -0.165609), (-0.042624, -0.079614, -0.13129), (-0.040459, -0.070095, -0.116739), (-0.040459, -0.070095, 0.34583), (-0.042624, -0.079614, 0.360382), (-0.044705, -0.079614, 0.392747), (-0.044705, -0.039612, 0.392747), (-0.044705, -0.039612, -0.165609), (-0.044705, -0.044377, -0.165609), (-0.044705, -0.044377, -0.202061), (-0.044705, -0.039612, -0.202061), (0.044705, -0.079614, -0.165609), (0.044705, -0.074849, -0.165609), (0.044705, -0.074849, -0.202061), (0.044705, -0.079614, -0.202061), (0.044705, -0.039612, -0.202061), (0.044705, -0.044377, -0.202061), (0.044705, -0.044377, -0.165609), (0.044705, -0.039612, -0.165609), (0.044705, -0.039612, 0.392747), (0.044705, -0.079614, 0.392747), (0.042623, -0.079614, 0.360382), (0.040458, -0.070095, 0.34583), (0.040458, -0.070095, -0.116739), (0.042623, -0.079614, -0.13129), (0.044705, -0.079614, -0.238939), (0, -0.079614, -0.238939), (-0.044705, -0.079614, -0.238939), (0.044705, -0.039612, -0.238939), (0, -0.039612, -0.238939), (-0.044705, -0.039612, -0.238939), (0.044705, -0.039612, -0.240947), (0, -0.039612, -0.240947), (-0.044705, -0.039612, -0.240947), (-0.08941, -0.039612, -0.240947), (-0.08941, -0.079614, -0.240947), (0.08941, -0.039612, -0.240947), (0.08941, -0.079614, -0.240947), (0.044705, -0.079614, -0.240947), (0, -0.079614, -0.240947), (-0.044705, -0.079614, -0.240947), (0.044705, -0.044798, -0.238939), (0, -0.044798, -0.238939), (0, -0.044798, -0.240947), (0.044705, -0.044798, -0.240947), (-0.044705, -0.044798, -0.238939), (-0.044705, -0.044798, -0.240947), (-0.083852, -0.044798, -0.238939), (-0.083852, -0.044798, -0.240947), (-0.083852, -0.074427, -0.238939), (-0.083852, -0.074427, -0.240947), (0.083852, -0.074427, -0.238939), (0.083852, -0.044798, -0.238939), (0.083852, -0.044798, -0.240947), (0.083852, -0.074427, -0.240947), (0.044705, -0.074427, -0.238939), (0.044705, -0.074427, -0.240947), (0, -0.074427, -0.238939), (0, -0.074427, -0.240947), (-0.044705, -0.074427, -0.238939), (-0.044705, -0.074427, -0.240947), (0, -0.039612, -0.278866), (0.044705, -0.039612, -0.278866), (0, -0.079614, -0.278866), (0.044705, -0.079614, -0.278866), (0.044705, -0.039612, -0.244364), (0, -0.039612, -0.244364), (-0.044705, -0.039612, -0.278866), (-0.044705, -0.079614, -0.278866), (-0.044705, -0.039612, -0.244364), (-0.08941, -0.039612, -0.244364), (-0.08941, -0.079614, -0.244364), (0.08941, -0.039612, -0.244364), (0.08941, -0.079614, -0.244364), (0.044705, -0.079614, -0.244364), (0, -0.079614, -0.244364), (-0.044705, -0.079614, -0.244364), (0.08941, -0.074849, -0.195749), (0.044705, -0.074849, -0.195749), (0, -0.074849, -0.195749), (-0.044705, -0.074849, -0.195749), (-0.08941, -0.074849, -0.195749), (-0.539187, -0.074849, -0.195749), (-0.539187, -0.044377, -0.195749), (-0.08941, -0.044377, -0.195749), (-0.044705, -0.044377, -0.195749), (0, -0.044377, -0.195749), (0.044705, -0.044377, -0.195749), (0.08941, -0.044377, -0.195749), (0.539187, -0.044377, -0.195749), (0.539187, -0.074849, -0.195749), (0.08941, -0.074849, -0.170992), (0.044705, -0.074849, -0.170992), (0, -0.074849, -0.170992), (-0.044705, -0.074849, -0.170992), (-0.08941, -0.074849, -0.170992), (-0.539187, -0.074849, -0.170992), (-0.539187, -0.044377, -0.170992), (-0.08941, -0.044377, -0.170992), (-0.044705, -0.044377, -0.170992), (0, -0.044377, -0.170992), (0.044705, -0.044377, -0.170992), (0.08941, -0.044377, -0.170992), (0.539187, -0.044377, -0.170992), (0.539187, -0.074849, -0.170992), (0.044705, -0.079613, -0.170992), (0.044705, -0.079613, -0.195749), (0.08941, -0.079613, -0.170992), (0.08941, -0.079613, -0.195749), (0, -0.079613, -0.170992), (0, -0.079613, -0.195749), (-0.044705, -0.079613, -0.195749), (-0.044705, -0.079613, -0.170992), (-0.08941, -0.079613, -0.170992), (-0.08941, -0.079613, -0.195749), (-0.544775, -0.079614, -0.170992), (-0.544775, -0.079614, -0.195749), (-0.544775, -0.039612, -0.170992), (-0.544775, -0.039612, -0.195749), (-0.08941, -0.039612, -0.170992), (-0.08941, -0.039612, -0.195749), (-0.044705, -0.039612, -0.170992), (-0.044705, -0.039612, -0.195749), (0, -0.039612, -0.170992), (0, -0.039612, -0.195749), (0.044705, -0.039612, -0.170992), (0.044705, -0.039612, -0.195749), (0.08941, -0.039612, -0.170992), (0.08941, -0.039612, -0.195749), (0.544775, -0.039612, -0.170992), (0.544775, -0.039612, -0.195749), (0.544775, -0.079614, -0.170992), (0.544775, -0.079614, -0.195749)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-18.81852, -17.528847), (-18.817577, -17.528847), (-18.817577, -17.527905), (-18.81852, -17.527905), (0.584806, 0.631072), (0.584806, 0.146269), (1, 0.146267), (1, 0.631077), (0.457597, 0.631072), (0.457598, 0.14627), (0.500001, 0.146266), (0.500001, 0.631075), (0.000001, 0.631076), (0.000001, 0.146267), (0.415195, 0.146265), (0.415195, 0.631079), (0.500001, 0.631075), (0.500001, 0.146266), (0.542404, 0.146265), (0.542404, 0.631081), (0.542404, 0.631081), (0.542404, 0.146265), (0.584806, 0.146269), (0.584806, 0.631072), (0.415195, 0.631079), (0.415195, 0.146265), (0.457598, 0.14627), (0.457597, 0.631072)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_Television_26_2"
        {
            token outputs:surface.connect = </root/_materials/M_Television_26_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0, 0, 0)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }
    }
}

