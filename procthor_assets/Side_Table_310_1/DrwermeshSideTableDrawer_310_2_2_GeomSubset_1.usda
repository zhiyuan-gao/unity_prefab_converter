#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "DrwermeshSideTableDrawer_310_2_2_GeomSubset_1"
    {
        def Mesh "DrwermeshSideTableDrawer_310_2_2_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [52, 54, 53, 52, 55, 54, 56, 55, 52, 56, 57, 55, 55, 58, 54, 55, 59, 58, 57, 59, 55, 57, 60, 59, 59, 61, 58, 59, 62, 61, 60, 62, 59, 60, 63, 62, 64, 66, 65, 64, 67, 66, 63, 52, 62, 63, 56, 52, 62, 52, 53, 62, 53, 61, 66, 61, 53, 66, 67, 61, 65, 53, 54, 65, 66, 53, 64, 54, 58, 64, 65, 54, 67, 58, 61, 67, 64, 58]
            rel material:binding = </root/_materials/M_SideTableDrawer_310_2_1>
            normal3f[] normals = [(-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 2.6410137e-7, 0), (1, 0, 0), (1, 3.3416555e-8, 0), (1, 2.6410137e-7, 0), (1, 0, 0), (1, 3.3416555e-8, 0), (1, 5.6155824e-7, 0), (1, 2.6410137e-7, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1.4668166e-11, -0.00003183767, -1), (0, 0.00015186465, -1), (0, 0.00015186469, -1), (-1.4668166e-11, -0.00003183767, -1), (0, 0.00030372682, -1), (0, 0.00015186465, -1), (0, 0.00015186469, -1), (0, 0.00015186465, -1), (0, 0, -1), (0, 0.00015186469, -1), (0, 0, -1), (0, 0, -1), (0, 0.60029, -0.7997824), (0, 0.60026854, -0.7997985), (0, 0.60029024, -0.7997823), (0, 0.60029, -0.7997824), (-2.9962393e-8, 0.59999955, -0.8000003), (0, 0.60026854, -0.7997985), (-0.7071051, 0.7071085, 0), (-0.70710355, 0.70711, 0), (-0.707444, 0.70676935, 2.4068868e-8), (-0.7071051, 0.7071085, 0), (-0.7071035, 0.7071101, 0), (-0.70710355, 0.70711, 0), (0, 0.60029, 0.79978234), (0, 0.60026926, 0.799798), (1.3096724e-10, 0.60067356, 0.7994943), (0, 0.60029, 0.79978234), (3.8926373e-8, 0.59988517, 0.800086), (0, 0.60026926, 0.799798), (0.70735013, 0.7068633, 0), (0.7073475, 0.7068659, 0), (0.70735025, 0.7068633, 0), (0.70735013, 0.7068633, 0), (0.70734745, 0.70686615, 0), (0.7073475, 0.7068659, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.25883, -0.167884, -0.057512), (0.25883, -0.180438, -0.057512), (0.25883, -0.180438, -0.33667), (0.25883, -0.167884, -0.33667), (-0.258277, -0.167885, -0.33667), (-0.258277, -0.180439, -0.33667), (-0.258277, -0.180439, -0.057512), (-0.258277, -0.167885, -0.057512), (-0.230361, -0.182547, -0.314329), (0.230914, -0.182545, -0.314329), (0.230914, -0.182545, -0.079853), (-0.230361, -0.182547, -0.079853), (-0.252702, -0.167885, -0.051937), (-0.252702, -0.180439, -0.051937), (0.253256, -0.180438, -0.051937), (0.253256, -0.167884, -0.051937), (-0.226369, 0.041749, -0.067002), (-0.226369, 0.041749, -0.310637), (0.226923, 0.041749, -0.310637), (0.226923, 0.041749, -0.067002), (0.253256, -0.167884, -0.342245), (0.253256, -0.180438, -0.342245), (-0.252702, -0.180439, -0.342245), (-0.252702, -0.167885, -0.342245), (0.253256, -0.162309, -0.057512), (-0.252702, -0.16231, -0.057512), (0.253256, -0.162309, -0.33667), (-0.252702, -0.16231, -0.33667), (-0.252702, -0.186014, -0.057512), (0.253256, -0.186013, -0.057512), (0.253256, -0.186013, -0.33667), (-0.252702, -0.186014, -0.33667), (-0.243212, -0.16231, -0.067002), (0.243766, -0.162309, -0.067002), (-0.243212, -0.16231, -0.32718), (0.243766, -0.162309, -0.32718), (-0.243212, 0.058591, -0.32718), (-0.243212, 0.058591, -0.067002), (0.243766, 0.058592, -0.067002), (0.243766, 0.058592, -0.32718), (0.226923, -0.145466, -0.310637), (0.226923, -0.145466, -0.067002), (-0.226369, -0.145467, -0.067002), (-0.226369, -0.145467, -0.310637), (0.237864, -0.186013, -0.072903), (-0.237311, -0.186014, -0.072903), (0.237864, -0.186013, -0.321279), (-0.237311, -0.186014, -0.321279), (0.23439, -0.186014, -0.076378), (-0.233836, -0.186014, -0.076378), (0.23439, -0.186014, -0.317804), (-0.233836, -0.186014, -0.317804), (0.041952, -0.184871, -0.273661), (0.041952, -0.186663, -0.273661), (0.041952, -0.186663, -0.308192), (0.041952, -0.184871, -0.308192), (0.041952, -0.181633, -0.27366), (0.041952, -0.181633, -0.308192), (-0.041398, -0.186663, -0.308192), (-0.041398, -0.184871, -0.308192), (-0.041398, -0.181633, -0.308192), (-0.041398, -0.186663, -0.273661), (-0.041398, -0.184871, -0.273661), (-0.041398, -0.181633, -0.27366), (-0.039952, -0.18811, -0.307106), (0.040505, -0.18811, -0.307106), (0.040505, -0.18811, -0.274747), (-0.039952, -0.18811, -0.274747)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.818362), (0.092088, 0.675906), (-0.165236, 0.813735), (-0.165236, 0.675906), (0.092088, 0.675906), (0.092088, 0.813735), (-0.165236, 0.813735), (0.096714, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.165236, 0.813735), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.165236, 0.813735), (0.092088, 0.813735), (0.096714, 0.818362), (-0.165236, 0.675906), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.165236, 0.675906), (-0.165236, 0.813735), (-0.169862, 0.818362), (0.092088, 0.675906), (-0.169862, 0.67128), (0.096714, 0.67128), (0.092088, 0.675906), (-0.165236, 0.675906), (-0.169862, 0.67128), (0.092088, 0.813735), (0.096714, 0.67128), (0.096714, 0.818362), (0.092088, 0.813735), (0.092088, 0.675906), (0.096714, 0.67128)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_SideTableDrawer_310_2_1"
        {
            token outputs:surface.connect = </root/_materials/M_SideTableDrawer_310_2_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_SideTableDrawer_310_2_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_SideTableDrawer_310_2_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_310_2_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_310_2_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

