#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "DrwermeshSideTableDrawer_310_1_1_GeomSubset_1"
    {
        def Mesh "DrwermeshSideTableDrawer_310_1_1_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [52, 54, 53, 52, 55, 54, 56, 55, 52, 56, 57, 55, 55, 58, 54, 55, 59, 58, 57, 59, 55, 57, 60, 59, 59, 61, 58, 59, 62, 61, 60, 62, 59, 60, 63, 62, 64, 66, 65, 64, 67, 66, 63, 52, 62, 63, 56, 52, 62, 52, 53, 62, 53, 61, 66, 61, 53, 66, 67, 61, 65, 53, 54, 65, 66, 53, 64, 54, 58, 64, 65, 54, 67, 58, 61, 67, 64, 58]
            rel material:binding = </root/_materials/M_SideTableDrawer_310_1_1>
            normal3f[] normals = [(-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0.60028076, -0.79978937), (0, 0.60025924, -0.79980546), (0, 0.600281, -0.7997892), (0, 0.60028076, -0.79978937), (-2.9423973e-8, 0.5999903, -0.8000072), (0, 0.60025924, -0.79980546), (-0.7071019, 0.70711166, 0), (-0.7071074, 0.70710605, 0), (-0.7071017, 0.70711184, 0), (-0.7071019, 0.70711166, 0), (-0.7071078, 0.70710576, 0), (-0.7071074, 0.70710605, 0), (0, 0.6002808, 0.79978937), (0, 0.6002601, 0.7998049), (-4.947651e-10, 0.60074097, 0.7994438), (0, 0.6002808, 0.79978937), (5.3551048e-8, 0.59972256, 0.8002079), (0, 0.6002601, 0.7998049), (0.7073474, 0.7068661, 0), (0.7073512, 0.7068623, 0), (0.7073472, 0.7068662, 0), (0.7073474, 0.7068661, 0), (0.7073514, 0.70686203, 0), (0.7073512, 0.7068623, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.25883, -0.167884, 0.232341), (0.25883, -0.180438, 0.232341), (0.25883, -0.180438, -0.046817), (0.25883, -0.167884, -0.046817), (-0.258277, -0.167885, -0.046817), (-0.258277, -0.180439, -0.046817), (-0.258277, -0.180439, 0.232341), (-0.258277, -0.167885, 0.232341), (-0.230361, -0.182547, -0.024476), (0.230914, -0.182545, -0.024476), (0.230914, -0.182545, 0.21), (-0.230361, -0.182547, 0.21), (-0.252702, -0.167885, 0.237916), (-0.252702, -0.180439, 0.237916), (0.253256, -0.180438, 0.237916), (0.253256, -0.167884, 0.237916), (-0.226369, 0.041749, 0.222852), (-0.226369, 0.041749, -0.020783), (0.226923, 0.041749, -0.020783), (0.226923, 0.041749, 0.222852), (0.253256, -0.167884, -0.052392), (0.253256, -0.180438, -0.052392), (-0.252702, -0.180439, -0.052392), (-0.252702, -0.167885, -0.052392), (0.253256, -0.162309, 0.232341), (-0.252702, -0.16231, 0.232341), (0.253256, -0.162309, -0.046817), (-0.252702, -0.16231, -0.046817), (-0.252702, -0.186014, 0.232341), (0.253256, -0.186013, 0.232341), (0.253256, -0.186013, -0.046817), (-0.252702, -0.186014, -0.046817), (-0.243212, -0.16231, 0.222851), (0.243766, -0.162309, 0.222851), (-0.243212, -0.16231, -0.037327), (0.243766, -0.162309, -0.037327), (-0.243212, 0.058591, -0.037327), (-0.243212, 0.058591, 0.222851), (0.243766, 0.058592, 0.222851), (0.243766, 0.058592, -0.037327), (0.226923, -0.145466, -0.020783), (0.226923, -0.145466, 0.222852), (-0.226369, -0.145467, 0.222852), (-0.226369, -0.145467, -0.020783), (0.237864, -0.186013, 0.21695), (-0.237311, -0.186014, 0.21695), (0.237864, -0.186013, -0.031426), (-0.237311, -0.186014, -0.031426), (0.23439, -0.186014, 0.213475), (-0.233836, -0.186014, 0.213475), (0.23439, -0.186014, -0.027951), (-0.233836, -0.186014, -0.027951), (0.041952, -0.184871, 0.016193), (0.041952, -0.186663, 0.016193), (0.041952, -0.186663, -0.018339), (0.041952, -0.184871, -0.018339), (0.041952, -0.181633, 0.016193), (0.041952, -0.181633, -0.018339), (-0.041398, -0.186663, -0.018339), (-0.041398, -0.184871, -0.018339), (-0.041398, -0.181633, -0.018339), (-0.041398, -0.186663, 0.016193), (-0.041398, -0.184871, 0.016193), (-0.041398, -0.181633, 0.016193), (-0.039952, -0.18811, -0.017253), (0.040505, -0.18811, -0.017253), (0.040505, -0.18811, 0.015107), (-0.039952, -0.18811, 0.015107)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.818362), (0.092088, 0.675906), (-0.165236, 0.813735), (-0.165236, 0.675906), (0.092088, 0.675906), (0.092088, 0.813735), (-0.165236, 0.813735), (0.096714, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.165236, 0.813735), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.165236, 0.813735), (0.092088, 0.813735), (0.096714, 0.818362), (-0.165236, 0.675906), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.165236, 0.675906), (-0.165236, 0.813735), (-0.169862, 0.818362), (0.092088, 0.675906), (-0.169862, 0.67128), (0.096714, 0.67128), (0.092088, 0.675906), (-0.165236, 0.675906), (-0.169862, 0.67128), (0.092088, 0.813735), (0.096714, 0.67128), (0.096714, 0.818362), (0.092088, 0.813735), (0.092088, 0.675906), (0.096714, 0.67128)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_SideTableDrawer_310_1_1"
        {
            token outputs:surface.connect = </root/_materials/M_SideTableDrawer_310_1_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_SideTableDrawer_310_1_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_SideTableDrawer_310_1_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_310_1_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_310_1_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

