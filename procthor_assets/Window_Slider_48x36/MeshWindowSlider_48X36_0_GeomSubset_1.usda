#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshWindowSlider_48X36_0_GeomSubset_1"
    {
        def Mesh "MeshWindowSlider_48X36_0_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [88, 89, 90, 91, 92, 93, 94, 95, 89, 88, 95, 94, 88, 91, 92, 95, 91, 90, 93, 92, 90, 89, 94, 93, 96, 97, 98, 99, 100, 101, 102, 103, 97, 96, 103, 102, 96, 99, 100, 103, 99, 98, 101, 100, 98, 97, 102, 101]
            rel material:binding = </root/_materials/M_WindowSlider_48X36_1>
            normal3f[] normals = [(0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.6096, -0.040626, 0.456921), (-0.6096, -0.040626, -0.457479), (0.6096, -0.040624, -0.457479), (0.578781, -0.040624, -0.426161), (-0.57878, -0.040625, -0.426161), (-0.57878, -0.040625, 0.425602), (-0.57878, 0.040624, 0.425602), (-0.57878, 0.040624, -0.426161), (0.57878, 0.040626, -0.426161), (0.6096, 0.040626, -0.457479), (-0.6096, 0.040624, -0.457479), (-0.6096, 0.040624, 0.456921), (0.57878, 0.040626, 0.425602), (0.578781, -0.040624, 0.425602), (0.6096, 0.040626, 0.456921), (0.6096, -0.040624, 0.456921), (0.57878, 0.031626, 0.425602), (0.578781, -0.031624, 0.425602), (-0.57878, -0.031626, 0.425602), (-0.57878, 0.031625, 0.425602), (-0.57878, 0.031625, -0.426161), (-0.57878, -0.031626, -0.426161), (0.578781, -0.031624, -0.426161), (0.57878, 0.031626, -0.426161), (0.57878, 0.035123, 0.425602), (0.578781, -0.035122, 0.425602), (-0.57878, -0.035123, 0.425602), (-0.57878, 0.035122, 0.425602), (-0.57878, 0.035122, -0.426161), (-0.57878, -0.035123, -0.426161), (0.578781, -0.035122, -0.426161), (0.57878, 0.035123, -0.426161), (0.543074, 0.035123, 0.389217), (0.543074, -0.035122, 0.389217), (-0.543074, -0.035123, 0.389217), (-0.543074, 0.035122, 0.389217), (-0.543074, 0.035122, -0.389776), (-0.543074, -0.035123, -0.389776), (0.543074, -0.035122, -0.389776), (0.543074, 0.035123, -0.389776), (0.543074, 0.021626, 0.389217), (0.543074, -0.021624, 0.389217), (-0.543074, -0.021626, 0.389217), (-0.543074, 0.021625, 0.389217), (-0.543074, 0.021625, -0.389776), (-0.543074, -0.021626, -0.389776), (0.543074, -0.021624, -0.389776), (0.543074, 0.021626, -0.389776), (0.57878, 0.021626, 0.425602), (0.57878, -0.021624, 0.425602), (-0.57878, -0.021626, 0.425602), (-0.57878, 0.021625, 0.425602), (-0.57878, 0.021625, -0.426161), (-0.57878, -0.021626, -0.426161), (0.57878, -0.021624, -0.426161), (0.57878, 0.021626, -0.426161), (0.577912, 0.021585, -0.426682), (0, 0.021584, -0.426682), (0.577912, 0.021585, 0.426124), (0, 0.021584, 0.426124), (0.577912, 0.000001, 0.426124), (0, 0, 0.426124), (0.577912, 0.000001, -0.426682), (0, 0, -0.426682), (0.517912, 0.021585, -0.366682), (0.06, 0.021584, -0.366682), (0.06, 0.021584, 0.366124), (0.517912, 0.021585, 0.366124), (0.517912, 0.000001, 0.366124), (0.06, 0, 0.366124), (0.06, 0, -0.366682), (0.517912, 0.000001, -0.366682), (0, 0, -0.426682), (-0.576795, -0.000001, -0.426682), (0, 0, 0.426124), (-0.576795, -0.000001, 0.426124), (0, -0.021291, 0.426124), (-0.576795, -0.021292, 0.426124), (0, -0.021291, -0.426682), (-0.576795, -0.021292, -0.426682), (-0.06, -0, -0.366682), (-0.516795, -0.000001, -0.366682), (-0.516795, -0.000001, 0.366124), (-0.06, -0, 0.366124), (-0.06, -0.021292, 0.366124), (-0.516795, -0.021292, 0.366124), (-0.516795, -0.021292, -0.366682), (-0.06, -0.021292, -0.366682), (0.517912, 0.016752, -0.366682), (0.06, 0.016752, -0.366682), (0.06, 0.016752, 0.366124), (0.517912, 0.016752, 0.366124), (0.517912, 0.005302, 0.366124), (0.06, 0.005302, 0.366124), (0.06, 0.005302, -0.366682), (0.517912, 0.005302, -0.366682), (-0.06, -0.015021, 0.366124), (-0.516795, -0.015021, 0.366124), (-0.516795, -0.015021, -0.366682), (-0.06, -0.015021, -0.366682), (-0.06, -0.005297, -0.366682), (-0.516795, -0.005297, -0.366682), (-0.516795, -0.005297, 0.366124), (-0.06, -0.005297, 0.366124), (0, 0.021428, -0.046771), (-0.007429, 0.021428, -0.046771), (0, 0.021428, 0.046887), (-0.007429, 0.021428, 0.046887), (0, 0.000965, 0.053061), (-0.007429, 0.000965, 0.053061), (0, 0.000965, -0.052945), (-0.007429, 0.000965, -0.052945), (-0.007429, 0.021428, 0.028523), (0, 0.021428, 0.028523), (0, 0.000965, 0.034171), (-0.007429, 0.000965, 0.034171), (-0.007429, 0.021428, -0.028407), (0, 0.021428, -0.028407), (0, 0.000965, -0.034055), (-0.007429, 0.000965, -0.034055), (-0.013191, 0.000965, -0.034055), (-0.013191, 0.021427, -0.028407), (-0.013191, 0.000965, 0.034171), (-0.013191, 0.021427, 0.028523), (-0.019876, 0.005384, 0.009138), (-0.019876, 0.001547, 0.0053), (-0.019876, 0.000142, 0.000058), (-0.019876, 0.001729, -0.005184), (-0.019876, 0.010626, -0.005184), (-0.019876, 0.019524, -0.005184), (-0.019876, 0.02111, 0.000058), (-0.019876, 0.019706, 0.0053), (-0.019876, 0.015868, 0.009138), (-0.019876, 0.010626, 0.010542), (-0.013191, 0.005384, 0.009138), (-0.013191, 0.001547, 0.0053), (-0.013191, 0.000142, 0.000058), (-0.013191, 0.001729, -0.005184), (-0.013191, 0.010626, -0.005184), (-0.013191, 0.019524, -0.005184), (-0.013191, 0.02111, 0.000058), (-0.013191, 0.019706, 0.0053), (-0.013191, 0.015868, 0.009138), (-0.013191, 0.010626, 0.010542), (-0.019876, 0.010626, 0.000058), (-0.013191, 0.010626, 0.000058), (-0.02096, 0.007221, -0.060118), (-0.016529, 0.007221, -0.060118), (-0.02096, 0.010626, -0.060118), (-0.016529, 0.010626, -0.060118), (-0.02096, 0.014032, -0.060118), (-0.016529, 0.014032, -0.060118), (-0.019424, 0.008327, -0.082231), (-0.016529, 0.008327, -0.082231), (-0.019424, 0.010626, -0.082231), (-0.016529, 0.010626, -0.082231), (-0.019424, 0.012926, -0.082231), (-0.016529, 0.012926, -0.082231), (-0.006115, 0.007221, -0.062552), (-0.006115, 0.010626, -0.062552), (-0.006115, 0.008327, -0.079693), (-0.006115, 0.010626, -0.079693), (-0.006115, 0.014032, -0.062552), (-0.006115, 0.012926, -0.079693), (-0.016529, 0.015225, -0.046652), (-0.020712, 0.015225, -0.046652), (-0.020712, 0.010626, -0.046652), (-0.020712, 0.006027, -0.046652), (-0.016529, 0.006027, -0.046652), (-0.016529, 0.010626, -0.046652)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-18.113194, 1.409877), (-17.755451, 1.409877), (-17.755451, 1.982382), (-18.113194, 1.982382), (-17.265863, 1.409876), (-16.908121, 1.409876), (-16.908121, 1.982381), (-17.265863, 1.982381), (-18.277437, 2.573788), (-18.277437, 2.931494), (-18.286383, 2.931494), (-18.286383, 2.573788), (-16.620836, 1.409902), (-16.620836, 1.982356), (-16.629782, 1.982356), (-16.629782, 1.409902), (-18.349186, 2.93152), (-18.349186, 2.573762), (-18.340239, 2.573762), (-18.340239, 2.93152), (-16.56145, 1.982372), (-16.56145, 1.409886), (-16.552504, 1.409886), (-16.552504, 1.982372), (-16.580198, 2.703836), (-16.223328, 2.703836), (-16.223328, 3.276341), (-16.580198, 3.276341), (-17.412367, 2.703837), (-17.055494, 2.703837), (-17.055494, 3.276342), (-17.412367, 3.276342), (-18.561836, 2.573236), (-18.561836, 2.930115), (-18.569435, 2.930115), (-18.569435, 2.573236), (-17.683723, 3.276327), (-17.683723, 2.703852), (-17.676125, 2.703852), (-17.676125, 3.276327), (-18.62926, 2.930116), (-18.62926, 2.573236), (-18.621658, 2.573236), (-18.621658, 2.930116), (-17.735949, 2.703883), (-17.735949, 3.276296), (-17.743544, 3.276296), (-17.743544, 2.703883)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_WindowSlider_48X36_1"
        {
            token outputs:surface.connect = </root/_materials/M_WindowSlider_48X36_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }
    }
}

