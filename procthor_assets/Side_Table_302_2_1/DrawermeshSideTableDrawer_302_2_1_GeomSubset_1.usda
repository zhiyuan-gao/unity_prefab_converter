#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "DrawermeshSideTableDrawer_302_2_1_GeomSubset_1"
    {
        def Mesh "DrawermeshSideTableDrawer_302_2_1_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [52, 54, 53, 52, 55, 54, 56, 55, 52, 56, 57, 55, 55, 58, 54, 55, 59, 58, 57, 59, 55, 57, 60, 59, 59, 61, 58, 59, 62, 61, 60, 62, 59, 60, 63, 62, 64, 66, 65, 64, 67, 66, 63, 52, 62, 63, 56, 52, 62, 52, 53, 62, 53, 61, 66, 61, 53, 66, 67, 61, 65, 53, 54, 65, 66, 53, 64, 54, 58, 64, 65, 54, 67, 58, 61, 67, 64, 58]
            rel material:binding = </root/_materials/M_SideTableDrawer_302_2_1>
            normal3f[] normals = [(-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.99999994, 0, 0), (-1, 0, 0), (-7.533742e-9, 0, -1), (0, 0, -1), (0, 0, -0.99999994), (-7.533742e-9, 0, -1), (-1.8622671e-10, 0, -1), (0, 0, -1), (-1.4695477e-8, 0, -1), (-1.8622671e-10, 0, -1), (-7.533742e-9, 0, -1), (-1.4695477e-8, 0, -1), (0, 0, -1), (-1.8622671e-10, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (3.268694e-8, 0, 1), (4.1402984e-10, 0, 1), (1.6757816e-8, 0, 1), (3.268694e-8, 0, 1), (0, 0, 1), (4.1402984e-10, 0, 1), (1.6757816e-8, 0, 1), (4.1402984e-10, 0, 1), (0, 0, 1), (1.6757816e-8, 0, 1), (0, 0, 1), (0, 0, 1), (1.1906189e-8, -0.600406, 0.7996953), (3.336817e-8, -0.6005154, 0.7996131), (-1.4013494e-8, -0.600406, 0.7996953), (1.1906189e-8, -0.600406, 0.7996953), (2.841989e-8, -0.60051525, 0.79961324), (3.336817e-8, -0.6005154, 0.7996131), (-0.7071117, -0.7071018, 0), (-0.7071093, -0.7071043, 0), (-0.70711184, -0.7071018, 0), (-0.7071117, -0.7071018, 0), (-0.7071091, -0.70710444, 0), (-0.7071093, -0.7071043, 0), (-1.700884e-8, -0.600521, -0.79960895), (-3.336817e-8, -0.6005154, -0.7996131), (2.4039764e-8, -0.6005977, -0.79955137), (-1.700884e-8, -0.600521, -0.79960895), (-3.4080585e-8, -0.6005919, -0.79955566), (-3.336817e-8, -0.6005154, -0.7996131), (0.7071076, -0.7071059, 0), (0.70711064, -0.70710295, 0), (0.70710754, -0.707106, 0), (0.7071076, -0.7071059, 0), (0.7071108, -0.7071028, 0), (0.70711064, -0.70710295, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.163957, -0.195578, 0.241255), (-0.163957, -0.20343, 0.241255), (-0.163957, -0.20343, 0.066637), (-0.163957, -0.195578, 0.066637), (0.159502, -0.195576, 0.066637), (0.159502, -0.203428, 0.066637), (0.159502, -0.203428, 0.241255), (0.159502, -0.195576, 0.241255), (0.14204, -0.204747, 0.080611), (-0.146495, -0.204749, 0.080611), (-0.146495, -0.204749, 0.22728), (0.14204, -0.204747, 0.22728), (0.156015, -0.195576, 0.244742), (0.156015, -0.203428, 0.244742), (-0.16047, -0.20343, 0.244742), (-0.16047, -0.195578, 0.244742), (0.139542, -0.064447, 0.235319), (0.139542, -0.064447, 0.082921), (-0.143999, -0.064448, 0.082921), (-0.143999, -0.064449, 0.235319), (-0.16047, -0.195578, 0.063149), (-0.16047, -0.20343, 0.063149), (0.156015, -0.203429, 0.063149), (0.156015, -0.195576, 0.063149), (-0.16047, -0.192091, 0.241255), (0.156015, -0.192089, 0.241255), (-0.16047, -0.192091, 0.066637), (0.156015, -0.192089, 0.066637), (0.156015, -0.206916, 0.241255), (-0.16047, -0.206918, 0.241255), (-0.16047, -0.206918, 0.066637), (0.156015, -0.206916, 0.066637), (0.150079, -0.192089, 0.235318), (-0.154534, -0.192091, 0.235318), (0.150079, -0.192089, 0.072573), (-0.154534, -0.192091, 0.072573), (0.150078, -0.053911, 0.072573), (0.150078, -0.053911, 0.235318), (-0.154535, -0.053913, 0.235318), (-0.154535, -0.053913, 0.072573), (-0.143999, -0.181555, 0.082921), (-0.143999, -0.181555, 0.235319), (0.139543, -0.181553, 0.235319), (0.139543, -0.181553, 0.082921), (-0.150843, -0.206918, 0.231627), (0.146387, -0.206916, 0.231627), (-0.150843, -0.206918, 0.076264), (0.146387, -0.206916, 0.076264), (-0.148669, -0.206918, 0.229454), (0.144214, -0.206916, 0.229454), (-0.148669, -0.206918, 0.078438), (0.144214, -0.206916, 0.078438), (-0.028296, -0.206203, 0.10605), (-0.028296, -0.207323, 0.10605), (-0.028296, -0.207323, 0.08445), (-0.028296, -0.206203, 0.08445), (-0.028296, -0.204177, 0.10605), (-0.028296, -0.204177, 0.08445), (0.023841, -0.207323, 0.08445), (0.023841, -0.206202, 0.08445), (0.023841, -0.204177, 0.08445), (0.023841, -0.207323, 0.10605), (0.023841, -0.206202, 0.10605), (0.023841, -0.204177, 0.10605), (0.022936, -0.208228, 0.085129), (-0.027391, -0.208228, 0.085129), (-0.027391, -0.208228, 0.105371), (0.022936, -0.208228, 0.105371)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.818362), (0.092088, 0.675906), (-0.165236, 0.813735), (-0.165236, 0.675906), (0.092088, 0.675906), (0.092088, 0.813735), (-0.165236, 0.813735), (0.096714, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.165236, 0.813735), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.165236, 0.813735), (0.092088, 0.813735), (0.096714, 0.818362), (-0.165236, 0.675906), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.165236, 0.675906), (-0.165236, 0.813735), (-0.169862, 0.818362), (0.092088, 0.675906), (-0.169862, 0.67128), (0.096714, 0.67128), (0.092088, 0.675906), (-0.165236, 0.675906), (-0.169862, 0.67128), (0.092088, 0.813735), (0.096714, 0.67128), (0.096714, 0.818362), (0.092088, 0.813735), (0.092088, 0.675906), (0.096714, 0.67128)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_SideTableDrawer_302_2_1"
        {
            token outputs:surface.connect = </root/_materials/M_SideTableDrawer_302_2_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_SideTableDrawer_302_2_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_SideTableDrawer_302_2_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_302_2_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_302_2_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

