#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshFridgeFreezerdoorB2_3_GeomSubset_6"
    {
        def Mesh "MeshFridgeFreezerdoorB2_3_GeomSubset_6"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4]
            int[] faceVertexIndices = [24, 25, 27, 26]
            rel material:binding = </root/_materials/M_FridgeFreezerdoorB2_6>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.005865, 0.050002, -1.010246), (-0.005853, 0.050002, -1.010246), (-0.005865, 0.050012, -1.010246), (-0.005853, 0.050012, -1.010246), (-0.005865, 0.050002, -1.010246), (-0.005853, 0.050002, -1.010246), (-0.005865, 0.050012, -1.010246), (-0.005853, 0.050012, -1.010246), (-0.005865, 0.050002, -1.010246), (-0.005853, 0.050002, -1.010246), (-0.005865, 0.050012, -1.010246), (-0.005853, 0.050012, -1.010246), (-0.005865, 0.050002, -1.010246), (-0.005853, 0.050002, -1.010246), (-0.005865, 0.050012, -1.010246), (-0.005853, 0.050012, -1.010246), (-0.005865, 0.050002, -1.010246), (-0.005853, 0.050002, -1.010246), (-0.005865, 0.050012, -1.010246), (-0.005853, 0.050012, -1.010246), (-0.005865, 0.050002, -1.010246), (-0.005853, 0.050002, -1.010246), (-0.005865, 0.050012, -1.010246), (-0.005853, 0.050012, -1.010246), (-0.005865, 0.050002, -1.010246), (-0.005853, 0.050002, -1.010246), (-0.005865, 0.050012, -1.010246), (-0.005853, 0.050012, -1.010246), (0.568365, -0.231326, 0.457799), (0.574989, -0.231326, 0.463319), (-0.584211, -0.231326, 0.463319), (-0.577587, -0.231326, 0.457799), (0.568365, -0.370706, 0.457799), (-0.577587, -0.370706, 0.457799), (0.517857, -0.231326, 0.512744), (0.511233, -0.231326, 0.507224), (-0.520455, -0.231326, 0.507224), (-0.527079, -0.231326, 0.512744), (0.56969, -0.223046, 0.467735), (0.563066, -0.223046, 0.462215), (-0.572288, -0.223046, 0.462215), (-0.578912, -0.223046, 0.467735), (0.510237, -0.223775, 0.506985), (0.516815, -0.22376, 0.512466), (-0.526037, -0.22376, 0.512466), (-0.519459, -0.223774, 0.506985), (-0.550843, -0.231326, 1.007486), (-0.581028, -0.231326, 0.982439), (-0.523917, -0.231326, 0.934829), (-0.493711, -0.231326, 0.959876), (-0.545543, -0.223046, 1.00307), (-0.57573, -0.223046, 0.978023), (-0.522896, -0.222383, 0.935222), (-0.492902, -0.222317, 0.960093), (0.541621, -0.231326, 1.007486), (0.571805, -0.231326, 0.982439), (0.484488, -0.231326, 0.959876), (0.514695, -0.231326, 0.934829), (0.566508, -0.223046, 0.978023), (0.536321, -0.223046, 1.00307), (0.48368, -0.222317, 0.960093), (0.513674, -0.222383, 0.935222), (-0.514059, -0.222337, 0.952816), (-0.515017, -0.231326, 0.952548), (0.504837, -0.222337, 0.952816), (0.505794, -0.231326, 0.952548), (0.562919, -0.231326, 1.000156), (0.55762, -0.223046, 0.995741), (-0.566843, -0.223046, 0.995741), (-0.572141, -0.231326, 1.000157), (0.574989, -0.363806, 0.463319), (0.569134, -0.370706, 0.45844), (-0.578356, -0.370706, 0.45844), (-0.584211, -0.363806, 0.463319), (-0.581028, -0.363806, 0.982439), (-0.572913, -0.370706, 0.981068), (-0.550843, -0.363806, 1.007486), (-0.549232, -0.370706, 1.000718), (0.54162, -0.363806, 1.007486), (0.540009, -0.370706, 1.000718), (0.571805, -0.363806, 0.982439), (0.56369, -0.370706, 0.981068), (-0.572141, -0.363806, 1.000156), (-0.566299, -0.370706, 0.995267), (0.562919, -0.363806, 1.000156), (0.557076, -0.370706, 0.995267), (0.583169, -0.230704, 0.547159), (0.586203, -0.224059, 0.547194), (0.584829, -0.217026, 0.547231), (0.579416, -0.21149, 0.54726), (0.571415, -0.208934, 0.547273), (0.562968, -0.210043, 0.547267), (0.556341, -0.21452, 0.547244), (0.553307, -0.221166, 0.547209), (0.554681, -0.228199, 0.547172), (0.560093, -0.233734, 0.547143), (0.568094, -0.23629, 0.54713), (0.576541, -0.235181, 0.547136), (0.583168, -0.231007, 0.605119), (0.586203, -0.224362, 0.605153), (0.58483, -0.217329, 0.60519), (0.579416, -0.211793, 0.605219), (0.571415, -0.209237, 0.605233), (0.562968, -0.210347, 0.605226), (0.55634, -0.214824, 0.605203), (0.553307, -0.221469, 0.605168), (0.55468, -0.228502, 0.605132), (0.560093, -0.234038, 0.605103), (0.568094, -0.236594, 0.60509), (0.57654, -0.235485, 0.605095), (0.583169, -0.230704, 0.861294), (0.586203, -0.224059, 0.861328), (0.584829, -0.217026, 0.861365), (0.579416, -0.21149, 0.861394), (0.571415, -0.208934, 0.861408), (0.562968, -0.210043, 0.861402), (0.556341, -0.21452, 0.861378), (0.553307, -0.221166, 0.861344), (0.554681, -0.228199, 0.861307), (0.560093, -0.233734, 0.861278), (0.568094, -0.23629, 0.861264), (0.576541, -0.235181, 0.86127), (0.583168, -0.231007, 0.919253), (0.586203, -0.224362, 0.919288), (0.58483, -0.217329, 0.919324), (0.579416, -0.211793, 0.919353), (0.571415, -0.209237, 0.919367), (0.562968, -0.210347, 0.919361), (0.55634, -0.214824, 0.919338), (0.553307, -0.221469, 0.919303), (0.55468, -0.228502, 0.919266), (0.560093, -0.234038, 0.919237), (0.568094, -0.236594, 0.919223), (0.57654, -0.235485, 0.919229), (0.450126, -0.172152, 0.560872), (0.450126, -0.172152, 0.725986), (-0.459018, -0.172152, 0.725986), (-0.459018, -0.172152, 0.560872), (0.445581, -0.160421, 0.560872), (0.445581, -0.160421, 0.725986), (-0.454472, -0.160421, 0.725986), (-0.454472, -0.160421, 0.560872), (-0.440835, -0.172152, 0.725986), (-0.440835, -0.172152, 0.560872), (-0.440835, -0.156282, 0.725986), (-0.440835, -0.156282, 0.560872), (0.432307, -0.172152, 0.560872), (0.432307, -0.172152, 0.725986), (0.432307, -0.156282, 0.725986), (0.432307, -0.156282, 0.560872), (0.450126, -0.328091, 0.560872), (0.450126, -0.328091, 0.725986), (-0.459018, -0.328091, 0.725986), (-0.459018, -0.328091, 0.560872), (-0.440835, -0.328091, 0.725986), (-0.440835, -0.328091, 0.560872), (0.432307, -0.328091, 0.560872), (0.432307, -0.328091, 0.725986), (0.497322, -0.205517, 0.518699), (0.503947, -0.205488, 0.52422), (-0.513169, -0.205488, 0.52422), (-0.506544, -0.205517, 0.518699), (0.450954, -0.205315, 0.557339), (0.457578, -0.205286, 0.562859), (-0.466801, -0.205286, 0.562859), (-0.460177, -0.205315, 0.557339), (0.457578, -0.323964, 0.563479), (0.450954, -0.323993, 0.557961), (-0.460177, -0.323993, 0.557961), (-0.466801, -0.323964, 0.563479), (-0.4798, -0.202724, 0.94816), (-0.510014, -0.202855, 0.923114), (-0.433432, -0.202927, 0.909521), (-0.463673, -0.203057, 0.884475), (-0.433432, -0.321604, 0.910142), (-0.463673, -0.321736, 0.885096), (0.470578, -0.202724, 0.94816), (0.500791, -0.202855, 0.923114), (0.42421, -0.202927, 0.909521), (0.45445, -0.203057, 0.884475), (0.45445, -0.321736, 0.885096), (0.42421, -0.321604, 0.910142), (0.445528, -0.202965, 0.902194), (0.445528, -0.321643, 0.902816), (-0.454751, -0.321643, 0.902816), (-0.454751, -0.202965, 0.902194), (0.491886, -0.202763, 0.940832), (-0.501109, -0.202763, 0.940832), (-0.460683, -0.382311, 0.496523), (-0.460683, -0.382311, 0.907935), (-0.518643, -0.382311, 0.907935), (-0.518643, -0.382311, 0.496523), (-0.460683, -0.414052, 0.496523), (-0.460683, -0.414052, 0.907935), (-0.518643, -0.414052, 0.907935), (-0.518643, -0.414052, 0.496523), (-0.465789, -0.382311, 0.491417), (-0.465789, -0.382311, 0.913042), (-0.513537, -0.382311, 0.913042), (-0.513537, -0.382311, 0.491417), (-0.465789, -0.369202, 0.491417), (-0.465789, -0.369202, 0.913042), (-0.513537, -0.369202, 0.913042), (-0.513537, -0.369202, 0.491417), (-0.470067, -0.422607, 0.496523), (-0.470067, -0.422607, 0.907935), (-0.509259, -0.422607, 0.907935), (-0.509259, -0.422607, 0.496523), (-0.460683, -0.382311, 0.471959), (-0.465375, -0.382311, 0.467267), (-0.465375, -0.382311, 0.937193), (-0.460683, -0.382311, 0.9325), (-0.518643, -0.382311, 0.9325), (-0.513951, -0.382311, 0.937193), (-0.513951, -0.382311, 0.467267), (-0.518643, -0.382311, 0.471959), (-0.465375, -0.414052, 0.467267), (-0.460683, -0.414052, 0.471959), (-0.460683, -0.414052, 0.9325), (-0.465375, -0.414052, 0.937193), (-0.513951, -0.414052, 0.937193), (-0.518643, -0.414052, 0.9325), (-0.518643, -0.414052, 0.471959), (-0.513951, -0.414052, 0.467267), (-0.465789, -0.382311, 0.477065), (-0.470481, -0.382311, 0.472373), (-0.470481, -0.382311, 0.932086), (-0.465789, -0.382311, 0.927396), (-0.513537, -0.382311, 0.927396), (-0.508845, -0.382311, 0.932086), (-0.508845, -0.382311, 0.472373), (-0.513537, -0.382311, 0.477065), (-0.465789, -0.369202, 0.477065), (-0.470481, -0.369202, 0.472373), (-0.465789, -0.369202, 0.927396), (-0.470481, -0.369202, 0.932086), (-0.513537, -0.369202, 0.927396), (-0.508845, -0.369202, 0.932086), (-0.513537, -0.369202, 0.477065), (-0.508845, -0.369202, 0.472373), (-0.470067, -0.422607, 0.481343), (-0.474759, -0.422607, 0.476651), (-0.470067, -0.422607, 0.923117), (-0.474759, -0.422607, 0.927809), (-0.509259, -0.422607, 0.923117), (-0.504567, -0.422607, 0.927809), (-0.509259, -0.422607, 0.481343), (-0.504567, -0.422607, 0.476651), (0.444961, -0.375052, 0.950707), (0.543025, -0.375052, 0.950707), (0.543025, -0.375052, 0.980551), (0.444961, -0.375052, 0.980551), (0.526681, -0.375052, 0.980551), (0.526681, -0.375052, 0.950707), (0.510337, -0.375052, 0.980551), (0.510337, -0.375052, 0.950707), (0.493993, -0.375052, 0.980551), (0.493993, -0.375052, 0.950707), (0.477649, -0.375052, 0.980551), (0.477649, -0.375052, 0.950707), (0.461305, -0.375052, 0.980551), (0.461305, -0.375052, 0.950707)]
            bool[] primvars:sharp_face = [0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-5.253075, -117.71076), (-5.253075, -117.71076), (-5.253071, -117.71076), (-5.253071, -117.71076)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeFreezerdoorB2_6"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeFreezerdoorB2_6/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeFreezerdoorB2_6/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeFreezerdoorB2_6/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Readout_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeFreezerdoorB2_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeFreezerdoorB2_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

