#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "LidMeshLaptopLid_30_1_GeomSubset_0"
    {
        def Mesh "LidMeshLaptopLid_30_1_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 88, 89, 50, 51, 53, 84, 85, 55, 89, 80, 56, 50, 81, 30, 56, 80, 84, 53, 28, 83, 85, 86, 61, 55, 83, 28, 67, 82, 86, 87, 66, 61, 60, 59, 68, 69, 49, 48, 58, 57, 60, 54, 52, 59, 67, 28, 61, 66, 30, 67, 66, 51, 81, 82, 67, 30, 69, 68, 58, 48, 66, 87, 88, 51, 59, 71, 70, 68, 52, 72, 71, 59, 73, 72, 52, 54, 54, 60, 74, 73, 60, 69, 75, 74, 76, 75, 69, 48, 48, 49, 77, 76, 57, 78, 77, 49, 58, 79, 78, 57, 68, 70, 79, 58, 79, 81, 80, 78, 72, 84, 83, 71, 85, 84, 72, 73, 73, 74, 86, 85, 74, 75, 87, 86, 88, 87, 75, 76, 76, 77, 89, 88, 78, 80, 89, 77, 79, 70, 91, 90, 82, 81, 93, 92, 81, 79, 90, 93, 71, 83, 95, 94, 83, 82, 92, 95, 70, 71, 94, 91]
            rel material:binding = </root/_materials/M_LaptopLid_30_0>
            normal3f[] normals = [(0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 1, 1.729059e-8), (0, 1, 0), (0, 1, 0), (0, 1, 8.9510743e-10), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 1.9017104e-8), (0, -1, 0), (0, -1, 0), (0, -1, 1.26847715e-8), (0, 1, 0), (0, 1, 1.6839826e-8), (0, 1, 0), (0, 1, 0), (0, -1, 1.26847715e-8), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 1.6839826e-8), (0, 1, 3.4155256e-8), (0, 1, 8.9831786e-10), (0, 1, 0), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 1), (0, 0, 1), (0.6284528, 0, 0.77784765), (0.6284528, 0, 0.77784765), (0.6284528, 0, 0.77784765), (0.6284528, 0, 0.77784765), (-0.6284466, 0, 0.7778527), (-0.6284466, 0, 0.7778527), (-0.6284466, 0, 0.7778527), (-0.6284466, 0, 0.7778527), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, 8.9831786e-10), (0, 1, 3.4155256e-8), (0, 1, 1.729059e-8), (0, 1, 8.9510743e-10), (0, -1, 0), (0, -1, 5.983342e-9), (0, -1, 6.3253104e-8), (0, -1, 6.3253104e-8), (0, -1, 0), (0, -1, 2.9046307e-8), (0, -1, 5.983342e-9), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (0, 0.99999994, 0), (0, 1, 0), (0, 1, 1.6866272e-8), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 3.3706097e-8), (0, 1, 1.6866272e-8), (0, 1, 1.6866272e-8), (0, 1, 3.3706097e-8), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 1.6866272e-8), (0.99999994, 0, 0), (1, 0, 0), (1, 0, 0), (0.99999994, 0, 0), (0, -1, 5.479132e-8), (0, -1, -2.7438986e-7), (0, -1, -1.1169303e-7), (0, -1, -4.7265277e-7), (0, -1, 6.3253104e-8), (0, -1, 6.3253104e-8), (0, -1, -2.7438986e-7), (0, -1, 5.479132e-8), (0, -1, -2.7438986e-7), (0, -1, 0), (0, -1, 0), (0, -1, -1.1169303e-7), (0, -1, 2.9046307e-8), (0, -1, 1.9017104e-8), (0, -1, 1.26847715e-8), (0, -1, 5.983342e-9), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 1.6866272e-8), (0, 1, 1.6839826e-8), (0, 1, 0), (0, 1, 1.6866272e-8), (0, 1, 3.3706097e-8), (0, 1, 3.4155256e-8), (0, 1, 1.6839826e-8), (0, 1, 1.729059e-8), (0, 1, 3.4155256e-8), (0, 1, 3.3706097e-8), (0, 1, 1.6866272e-8), (0, 1, 1.6866272e-8), (0, 1, 0), (0, 1, 0), (0, 1, 1.729059e-8), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.9999992, 0, -0.0012476264), (-0.9999992, 0, -0.0012476264), (-0.9999992, 0, -0.0012476264), (-0.9999992, 0, -0.0012476264), (0.9999992, 0, -0.0012476264), (0.9999992, 0, -0.0012476264), (0.9999992, 0, -0.0012476264), (0.9999992, 0, -0.0012476264), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.000632, 0.152604, -0.139944), (0.000632, 0.152604, -0.139944), (-0.000632, 0.153869, -0.139944), (0.000632, 0.153869, -0.139944), (-0.000632, 0.152604, -0.139944), (0.000632, 0.152604, -0.139944), (-0.000632, 0.153869, -0.139944), (0.000632, 0.153869, -0.139944), (-0.000632, 0.152604, -0.139944), (0.000632, 0.152604, -0.139944), (-0.000632, 0.153869, -0.139944), (0.000632, 0.153869, -0.139944), (-0.000632, 0.152604, -0.139944), (0.000632, 0.152604, -0.139944), (-0.000632, 0.153869, -0.139944), (0.000632, 0.153869, -0.139944), (-0.000632, 0.152604, -0.139944), (0.000632, 0.152604, -0.139944), (-0.000632, 0.153869, -0.139944), (0.000632, 0.153869, -0.139944), (-0.000632, 0.152604, -0.139944), (0.000632, 0.152604, -0.139944), (-0.000632, 0.153869, -0.139944), (0.000632, 0.153869, -0.139944), (-0.214975, 0.160227, -0.129104), (0.214975, 0.160227, -0.129104), (-0.214975, 0.146104, -0.129104), (0.214975, 0.146104, -0.129104), (-0.154611, 0.146104, -0.129104), (-0.154611, 0.160227, -0.129104), (0.154611, 0.146104, -0.129104), (0.154611, 0.160227, -0.129104), (0.154611, 0.156151, -0.146059), (0.214975, 0.156151, -0.146059), (0.214975, 0.150318, -0.146059), (0.154611, 0.150318, -0.146059), (-0.214975, 0.156151, -0.146059), (-0.154611, 0.156151, -0.146059), (-0.154611, 0.150318, -0.146059), (-0.214975, 0.150318, -0.146059), (0.154611, 0.160227, -0.142022), (0.214975, 0.160227, -0.142022), (0.214975, 0.146104, -0.142021), (0.154611, 0.146104, -0.142022), (-0.214975, 0.160227, -0.142022), (-0.154611, 0.160227, -0.142022), (-0.154611, 0.146104, -0.142022), (-0.214975, 0.146104, -0.142021), (0.153728, 0.157727, 0.164694), (0.212475, 0.157727, 0.11723), (0.212475, 0.157727, -0.129104), (0.154611, 0.157727, -0.129104), (-0.212475, 0.146104, 0.11723), (-0.212475, 0.146104, -0.129104), (-0.212475, 0.157727, 0.11723), (-0.212475, 0.157727, -0.129104), (0.212475, 0.146104, -0.129104), (0.212475, 0.146104, 0.11723), (0.153728, 0.146104, 0.164694), (-0.153727, 0.146104, 0.164694), (-0.153727, 0.157727, 0.164694), (-0.154611, 0.157727, -0.129104), (-0.154611, 0.157727, -0.134675), (-0.154611, 0.148604, -0.134675), (0.154611, 0.157727, -0.134675), (0.154611, 0.148604, -0.134675), (0, 0.157727, -0.129104), (0, 0.146104, -0.129104), (0, 0.146104, 0.164694), (0, 0.157727, 0.164694), (0, 0.146104, 0.121018), (-0.183385, 0.146104, 0.121018), (-0.212475, 0.146104, 0.089309), (-0.212475, 0.157727, 0.089309), (-0.154169, 0.157727, 0.089309), (0, 0.157727, 0.089309), (0.154169, 0.157727, 0.089309), (0.212475, 0.157727, 0.089309), (0.212475, 0.146104, 0.089309), (0.183385, 0.146104, 0.121018), (0.212475, 0.146104, -0.089786), (0.183648, 0.146104, -0.089786), (0, 0.146104, -0.089786), (-0.183648, 0.146104, -0.089786), (-0.212475, 0.146104, -0.089786), (-0.212475, 0.157727, -0.089786), (-0.15439, 0.157727, -0.089786), (0, 0.157727, -0.089786), (0.15439, 0.157727, -0.089786), (0.212475, 0.157727, -0.089786), (0.183385, 0.149589, 0.121018), (0, 0.149589, 0.121018), (0, 0.149589, -0.089786), (0.183648, 0.149589, -0.089786), (-0.183385, 0.149589, 0.121018), (-0.183648, 0.149589, -0.089786), (0.043544, 0.159535, -0.033135), (-0.043544, 0.159535, -0.033135), (0.043544, 0.159535, 0.05819), (-0.043544, 0.159535, 0.05819), (0.183385, 0.149389, 0.121018), (0, 0.149389, 0.121018), (0, 0.149389, -0.089786), (0.183648, 0.149389, -0.089786), (-0.183385, 0.149389, 0.121018), (-0.183648, 0.149389, -0.089786)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-118.32466, -19.673967), (-117.32466, -19.673967), (-117.32466, -18.673967), (-118.32466, -18.673967), (-117.89817, -0.131432), (-117.89817, -0.301596), (-117.78298, -0.301595), (-117.783, -0.132068), (-117.47219, 0.672809), (-117.47219, 0.552267), (-117.43655, 0.55228), (-117.43655, 0.672808), (-117.42875, 0.337559), (-117.46439, 0.33756), (-117.46439, 0.21699), (-117.42875, 0.216989), (-118.08007, -0.217125), (-118.19526, -0.132066), (-118.19526, -0.301582), (-118.08006, -0.301574), (-118.08006, 0.94335), (-118.19526, 0.943342), (-118.19526, 0.773827), (-118.08006, 0.858891), (-117.89817, 0.943368), (-117.89817, 0.773194), (-117.78298, 0.773838), (-117.78298, 0.943368), (-118.08006, 0.858891), (-118.19526, 0.773827), (-118.19526, 0.320885), (-118.08006, 0.320883), (-117.89817, 0.773194), (-117.89818, 0.320884), (-117.783, 0.320884), (-117.78298, 0.773838), (-117.46268, 0.68305), (-117.496735, 0.683048), (-117.496735, 0.232694), (-117.46268, 0.232696), (-117.42876, 0.972388), (-117.42875, 1.117927), (-117.46439, 1.117932), (-117.464386, 0.972371), (-117.43655, -0.227921), (-117.436554, -0.082392), (-117.47219, -0.082405), (-117.47219, -0.22791), (-117.488014, 0.234019), (-117.488014, 0.686961), (-117.52207, 0.686975), (-117.52206, 0.234022), (-117.488014, -0.218925), (-117.488014, 0.234019), (-117.52206, 0.234022), (-117.52207, -0.218912), (-118.08007, -0.217125), (-118.08006, 0.320883), (-118.19526, 0.320885), (-118.19526, -0.132066), (-117.46268, 0.232696), (-117.496735, 0.232694), (-117.496735, -0.21766), (-117.46268, -0.217659), (-117.783, 0.320884), (-117.89818, 0.320884), (-117.89817, -0.131432), (-117.783, -0.132068), (-117.33454, 0.771243), (-117.46249, 0.858112), (-117.4625, 0.32088), (-117.33454, 0.32088), (-117.47358, 0.943336), (-117.55539, 0.943353), (-117.46249, 0.858112), (-117.33454, 0.771243), (-117.43655, 0.003195), (-117.47218, 0.003196), (-117.47219, -0.082405), (-117.436554, -0.082392), (-118.50467, 0.943369), (-118.643715, 0.771252), (-118.422874, 0.772554), (-118.42287, 0.943368), (-118.643715, 0.771252), (-118.64372, 0.320885), (-118.42287, 0.320883), (-118.422874, 0.772554), (-118.422874, -0.130774), (-118.42287, 0.320883), (-118.64372, 0.320885), (-118.643715, -0.129487), (-118.643715, -0.129487), (-118.504654, -0.301604), (-118.422874, -0.301588), (-118.422874, -0.130774), (-117.464386, 0.972371), (-117.46439, 0.886762), (-117.42875, 0.886761), (-117.42876, 0.972388), (-117.33454, -0.12948), (-117.4625, -0.216362), (-117.55539, -0.301585), (-117.47359, -0.301578), (-117.33454, 0.32088), (-117.4625, 0.32088), (-117.4625, -0.216362), (-117.33454, -0.12948), (-117.4625, -0.216362), (-118.08007, -0.217125), (-118.08006, -0.301574), (-117.55539, -0.301585), (-117.55539, 0.943353), (-118.08006, 0.94335), (-118.08006, 0.858891), (-117.46249, 0.858112), (-117.43655, 0.55228), (-117.47219, 0.552267), (-117.47218, 0.003196), (-117.43655, 0.003195), (-118.42287, 0.943368), (-118.422874, 0.772554), (-117.89817, 0.773194), (-117.89817, 0.943368), (-118.422874, 0.772554), (-118.42287, 0.320883), (-117.89818, 0.320884), (-117.89817, 0.773194), (-117.89817, -0.131432), (-117.89818, 0.320884), (-118.42287, 0.320883), (-118.422874, -0.130774), (-118.422874, -0.130774), (-118.422874, -0.301588), (-117.89817, -0.301596), (-117.89817, -0.131432), (-117.46439, 0.886762), (-117.46439, 0.33756), (-117.42875, 0.337559), (-117.42875, 0.886761), (-117.51773, -0.260049), (-117.51773, 0.277224), (-117.52795, 0.277211), (-117.52793, -0.260062), (-117.53965, 0.27761), (-117.539635, -0.260602), (-117.529434, -0.260585), (-117.52943, 0.277609), (-117.469154, 0.934171), (-117.46914, 0.317171), (-117.45894, 0.317168), (-117.45895, 0.934172), (-117.480515, 0.934631), (-117.48051, 0.31671), (-117.47031, 0.316713), (-117.47031, 0.934625), (-117.539635, 0.815817), (-117.53965, 0.27761), (-117.52943, 0.277609), (-117.529434, 0.81582), (-117.51773, 0.277224), (-117.51773, 0.814487), (-117.52795, 0.814484), (-117.52795, 0.277211)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_LaptopLid_30_0"
        {
            token outputs:surface.connect = </root/_materials/M_LaptopLid_30_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_LaptopLid_30_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_LaptopLid_30_0/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_LaptopLid_30_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_LaptopLid_30_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

