#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "LidMeshLaptopLid_30_1_GeomSubset_1"
    {
        def Mesh "LidMeshLaptopLid_30_1_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 3]
            int[] faceVertexIndices = [4, 5, 7, 6, 32, 33, 34, 35, 36, 37, 38, 39, 43, 40, 32, 35, 40, 41, 33, 32, 41, 42, 34, 33, 42, 43, 35, 34, 47, 44, 36, 39, 44, 45, 37, 36, 45, 46, 38, 37, 46, 47, 39, 38, 31, 25, 41, 40, 25, 27, 42, 41, 42, 56, 30, 43, 24, 29, 45, 44, 46, 63, 28, 47, 53, 26, 26, 24, 44, 47, 25, 31, 51, 50, 24, 26, 53, 55, 27, 25, 50, 56, 29, 24, 55, 61, 28, 63, 62, 61, 29, 61, 62, 45, 45, 62, 63, 46, 51, 64, 65, 30, 65, 43, 30, 40, 43, 65, 64, 40, 64, 51, 31, 28, 53, 47, 46, 27, 56, 42]
            rel material:binding = </root/_materials/M_LaptopLid_30_1>
            normal3f[] normals = [(0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0.7037007, -0.71049654), (0, 0.7037007, -0.71049654), (0, 0.7037007, -0.71049654), (0, 0.7037007, -0.71049654), (1, -1.5958646e-7, 0), (1, -1.6072988e-7, 0), (1, 0, 0), (1, 0, 0), (0.0000057829916, -0.6918239, -0.7220663), (0.0000057829916, -0.6918239, -0.7220663), (0.0000057829916, -0.6918239, -0.7220663), (0.0000057829916, -0.6918239, -0.7220663), (-1, -1.6072988e-7, 0), (-1, -1.5958646e-7, 0), (-1, 0, 0), (-1, 0, 0), (0, 0.7037007, -0.71049654), (0, 0.7037007, -0.71049654), (0, 0.7037007, -0.71049654), (0, 0.7037007, -0.71049654), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-0.0000057829916, -0.6918239, -0.7220663), (-0.0000057829916, -0.6918239, -0.7220663), (-0.0000057829916, -0.6918239, -0.7220663), (-0.0000057829916, -0.6918239, -0.7220663), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, -2.3890667e-7, 0), (1, -2.3890667e-7, 0), (1, -1.6072988e-7, 0), (1, -1.5958646e-7, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -0.99999994, 0), (-1, -2.3890667e-7, 0), (-1, -2.3890667e-7, 0), (-1, -1.5958646e-7, 0), (-1, -1.6072988e-7, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 1), (0, 0, 0.99999994), (0, 0, 1), (0, 0, 1), (0, 0, 0.99999994), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.99999994, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.99999994, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.99999994, 0), (0, -1, 0), (0, -1, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.000632, 0.152604, -0.139944), (0.000632, 0.152604, -0.139944), (-0.000632, 0.153869, -0.139944), (0.000632, 0.153869, -0.139944), (-0.000632, 0.152604, -0.139944), (0.000632, 0.152604, -0.139944), (-0.000632, 0.153869, -0.139944), (0.000632, 0.153869, -0.139944), (-0.000632, 0.152604, -0.139944), (0.000632, 0.152604, -0.139944), (-0.000632, 0.153869, -0.139944), (0.000632, 0.153869, -0.139944), (-0.000632, 0.152604, -0.139944), (0.000632, 0.152604, -0.139944), (-0.000632, 0.153869, -0.139944), (0.000632, 0.153869, -0.139944), (-0.000632, 0.152604, -0.139944), (0.000632, 0.152604, -0.139944), (-0.000632, 0.153869, -0.139944), (0.000632, 0.153869, -0.139944), (-0.000632, 0.152604, -0.139944), (0.000632, 0.152604, -0.139944), (-0.000632, 0.153869, -0.139944), (0.000632, 0.153869, -0.139944), (-0.214975, 0.160227, -0.129104), (0.214975, 0.160227, -0.129104), (-0.214975, 0.146104, -0.129104), (0.214975, 0.146104, -0.129104), (-0.154611, 0.146104, -0.129104), (-0.154611, 0.160227, -0.129104), (0.154611, 0.146104, -0.129104), (0.154611, 0.160227, -0.129104), (0.154611, 0.156151, -0.146059), (0.214975, 0.156151, -0.146059), (0.214975, 0.150318, -0.146059), (0.154611, 0.150318, -0.146059), (-0.214975, 0.156151, -0.146059), (-0.154611, 0.156151, -0.146059), (-0.154611, 0.150318, -0.146059), (-0.214975, 0.150318, -0.146059), (0.154611, 0.160227, -0.142022), (0.214975, 0.160227, -0.142022), (0.214975, 0.146104, -0.142021), (0.154611, 0.146104, -0.142022), (-0.214975, 0.160227, -0.142022), (-0.154611, 0.160227, -0.142022), (-0.154611, 0.146104, -0.142022), (-0.214975, 0.146104, -0.142021), (0.153728, 0.157727, 0.164694), (0.212475, 0.157727, 0.11723), (0.212475, 0.157727, -0.129104), (0.154611, 0.157727, -0.129104), (-0.212475, 0.146104, 0.11723), (-0.212475, 0.146104, -0.129104), (-0.212475, 0.157727, 0.11723), (-0.212475, 0.157727, -0.129104), (0.212475, 0.146104, -0.129104), (0.212475, 0.146104, 0.11723), (0.153728, 0.146104, 0.164694), (-0.153727, 0.146104, 0.164694), (-0.153727, 0.157727, 0.164694), (-0.154611, 0.157727, -0.129104), (-0.154611, 0.157727, -0.134675), (-0.154611, 0.148604, -0.134675), (0.154611, 0.157727, -0.134675), (0.154611, 0.148604, -0.134675), (0, 0.157727, -0.129104), (0, 0.146104, -0.129104), (0, 0.146104, 0.164694), (0, 0.157727, 0.164694), (0, 0.146104, 0.121018), (-0.183385, 0.146104, 0.121018), (-0.212475, 0.146104, 0.089309), (-0.212475, 0.157727, 0.089309), (-0.154169, 0.157727, 0.089309), (0, 0.157727, 0.089309), (0.154169, 0.157727, 0.089309), (0.212475, 0.157727, 0.089309), (0.212475, 0.146104, 0.089309), (0.183385, 0.146104, 0.121018), (0.212475, 0.146104, -0.089786), (0.183648, 0.146104, -0.089786), (0, 0.146104, -0.089786), (-0.183648, 0.146104, -0.089786), (-0.212475, 0.146104, -0.089786), (-0.212475, 0.157727, -0.089786), (-0.15439, 0.157727, -0.089786), (0, 0.157727, -0.089786), (0.15439, 0.157727, -0.089786), (0.212475, 0.157727, -0.089786), (0.183385, 0.149589, 0.121018), (0, 0.149589, 0.121018), (0, 0.149589, -0.089786), (0.183648, 0.149589, -0.089786), (-0.183385, 0.149589, 0.121018), (-0.183648, 0.149589, -0.089786), (0.043544, 0.159535, -0.033135), (-0.043544, 0.159535, -0.033135), (0.043544, 0.159535, 0.05819), (-0.043544, 0.159535, 0.05819), (0.183385, 0.149389, 0.121018), (0, 0.149389, 0.121018), (0, 0.149389, -0.089786), (0.183648, 0.149389, -0.089786), (-0.183385, 0.149389, 0.121018), (-0.183648, 0.149389, -0.089786)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-85.464355, -19.673967), (-84.464355, -19.673967), (-84.464355, -18.673967), (-85.464355, -18.673967), (-84.67007, 0.338359), (-84.67007, 0.161801), (-84.65296, 0.1618), (-84.65296, 0.338358), (-85.42611, 0.338364), (-85.42611, 0.161802), (-85.409004, 0.161799), (-85.409004, 0.338365), (-84.726616, 0.584542), (-84.68522, 0.584542), (-84.69717, 0.596361), (-84.714264, 0.596368), (-85.304276, 0.342841), (-85.304276, 0.157318), (-85.29187, 0.157316), (-85.29187, 0.342843), (-84.807014, 0.558555), (-84.84827, 0.558563), (-84.83595, 0.546764), (-84.818924, 0.546763), (-85.18652, 0.157136), (-85.18652, 0.34303), (-85.198975, 0.343023), (-85.198975, 0.157135), (-84.97005, 0.584532), (-84.92866, 0.584534), (-84.940605, 0.596369), (-84.9577, 0.59636), (-85.014114, 0.342823), (-85.014114, 0.157345), (-85.00169, 0.157336), (-85.00171, 0.342823), (-85.0504, 0.558523), (-85.09177, 0.558523), (-85.0794, 0.546705), (-85.06235, 0.546706), (-84.89637, 0.157092), (-84.89636, 0.343076), (-84.90881, 0.343074), (-84.90881, 0.157083), (-85.34399, 0.342841), (-85.34399, 0.157318), (-85.304276, 0.157318), (-85.304276, 0.342841), (-84.807014, 0.596286), (-84.84827, 0.596284), (-84.84827, 0.558563), (-84.807014, 0.558555), (-85.18652, 0.157136), (-85.14671, 0.164836), (-85.14671, 0.343022), (-85.18652, 0.34303), (-85.05383, 0.342821), (-85.05383, 0.157338), (-85.014114, 0.157345), (-85.014114, 0.342823), (-85.09177, 0.558523), (-85.084435, 0.580032), (-85.09175, 0.596332), (-84.89636, 0.343076), (-84.85655, 0.335364), (-84.85655, 0.343073), (-84.97005, 0.546677), (-84.92866, 0.546678), (-84.92866, 0.584534), (-84.97005, 0.584532), (-84.56351, 0.661491), (-84.56351, 0.838352), (-84.57084, 0.838345), (-84.57084, 0.668821), (-84.72855, 0.338533), (-84.76992, 0.338531), (-84.76992, 0.331203), (-84.73587, 0.331202), (-84.60489, 0.661492), (-84.56351, 0.661491), (-84.57084, 0.668821), (-84.60489, 0.668819), (-84.72855, 0.161633), (-84.72855, 0.338533), (-84.73587, 0.331202), (-84.73588, 0.161634), (-85.09175, 0.596332), (-85.084435, 0.580032), (-85.05771, 0.580024), (-85.05771, 0.596332), (-85.0504, 0.596341), (-85.05771, 0.596332), (-85.05771, 0.580024), (-85.0504, 0.558523), (-85.0504, 0.558523), (-85.05771, 0.580024), (-85.084435, 0.580032), (-85.09177, 0.558523), (-84.69254, 0.54668), (-84.69254, 0.563015), (-84.71929, 0.563016), (-84.726616, 0.546688), (-84.71929, 0.563016), (-84.726616, 0.584542), (-84.726616, 0.546688), (-84.68522, 0.584542), (-84.726616, 0.584542), (-84.71929, 0.563016), (-84.69254, 0.563015), (-84.68522, 0.584542), (-84.69254, 0.563015), (-84.69254, 0.54668), (-84.68522, 0.546688), (-84.85655, 0.157092), (-84.85655, 0.335364), (-84.89636, 0.343076), (-84.89637, 0.157092), (-85.14671, 0.157133), (-85.14671, 0.164836), (-85.18652, 0.157136)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_LaptopLid_30_1"
        {
            token outputs:surface.connect = </root/_materials/M_LaptopLid_30_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_LaptopLid_30_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_LaptopLid_30_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_LaptopLid_30_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_LaptopLid_30_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

