#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshBook_25_0_GeomSubset_0"
    {
        def Mesh "MeshBook_25_0_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [1, 0, 3, 2, 4, 5, 6, 7, 7, 6, 10, 11, 8, 9, 11, 10, 6, 2, 3, 10, 7, 11, 24, 25, 6, 5, 1, 2, 0, 8, 10, 3, 11, 9, 27, 24, 25, 26, 4, 7, 17, 16, 20, 21, 21, 22, 18, 17, 16, 19, 23, 20, 21, 20, 13, 14, 14, 15, 22, 21, 20, 23, 12, 13, 25, 24, 16, 17, 17, 18, 26, 25, 24, 27, 19, 16, 135, 134, 132, 133, 13, 12, 132, 134, 15, 14, 135, 133, 132, 12, 15, 133, 13, 134, 135, 14]
            rel material:binding = </root/_materials/M_Book_25_0>
            normal3f[] normals = [(1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0.0000020591976), (0, 1, -0.0000074890017), (0, 1, -0.0000014204717), (0, 1, 0.0000036273395), (-0.9124993, 2.3347022e-9, -0.40907824), (-0.011211365, 0, -0.9999371), (-0.011211395, 0.00013595252, -0.99993706), (-0.9124993, 0, -0.40907824), (0, -1, -0.000009600172), (0, -1, 0), (0, -1, 0), (0, -1, -0.000005073735), (-0.011211365, 0, -0.9999371), (0, 0, -1), (0, 0, -1), (-0.011211395, 0.00013595252, -0.99993706), (-0.9124993, 2.3347022e-9, -0.40907824), (-0.9124993, 0, -0.40907824), (-0.9865784, 0, -0.16328816), (-0.9865784, 0, -0.16328816), (0, 1, -0.0000014204717), (0, 1, -0.0000074890017), (0, 1, -0.000015796995), (0, 1, -0.000015796995), (0, -1, -0.000015796995), (0, -1, -0.000009600172), (0, -1, -0.000005073735), (0, -1, -0.000015796995), (0, -1, 0), (0, -1, 0), (0, -1, -0.0000020109214), (0, -1, -9.818959e-7), (0, 1, 0), (0, 1, 0), (0, 1, 0.0000020591976), (0, 1, 0.0000036273395), (-0.9939466, 0, -0.10986407), (-0.9939466, 0, -0.10986407), (-0.99874717, 0, -0.050040092), (-0.99874717, 0, -0.050040092), (0, 1, -0.0000013128158), (0, 1, -0.0000016512308), (0, 1, 0), (0, 1, 0), (0, -1, -0.0000018007098), (0, -1, -0.0000011653265), (0, -1, 0), (0, -1, 0), (-0.99874717, 0, -0.050040092), (-0.99874717, 0, -0.050040092), (-0.9996259, -0.0000079758465, 0.02735228), (-0.9996267, 0, 0.027322412), (0.0000044591725, 0.99969673, 0.02462784), (-0.0000012894161, 0.9997422, 0.022705618), (0, 1, -0.0000016512308), (0, 1, -0.0000013128158), (0, -1, 0), (0, -1, 0), (9.052953e-7, -0.99974513, 0.022577051), (-8.4599014e-7, -0.99970233, 0.024398208), (-0.9865784, 0, -0.16328816), (-0.9865784, 0, -0.16328816), (-0.9939466, 0, -0.10986407), (-0.9939466, 0, -0.10986407), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, -9.818959e-7), (0, -1, -0.0000020109214), (0, -1, -0.0000011653265), (0, -1, -0.0000018007098), (-0.6325998, 0.000009883195, 0.774479), (-0.63269466, 0.000005788556, 0.77440137), (0.63265336, 7.338822e-7, 0.77443516), (0.63269395, 0.000005217701, 0.7744019), (0.000020109395, -0.9996862, 0.02504757), (0.00001848489, -0.99973017, 0.023226492), (-1.1564267e-8, -0.94914013, 0.31485364), (-1.4217221e-8, -0.94914013, 0.31485364), (-0.0000012894161, 0.9997422, 0.022705618), (0.0000044591725, 0.99969673, 0.02462784), (1.6531894e-8, 0.94916856, 0.3147681), (2.066372e-9, 0.9491384, 0.31485912), (0.63265336, 7.338822e-7, 0.77443516), (0.8660457, 2.163775e-8, 0.49996468), (0.8660457, 3.6816346e-9, 0.49996468), (0.63269395, 0.000005217701, 0.7744019), (-0.9996259, -0.0000079758465, 0.02735228), (-0.63269466, 0.000005788556, 0.77440137), (-0.6325998, 0.000009883195, 0.774479), (-0.9996267, 0, 0.027322412)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.104211, -0.149912, -0.020959), (0.104211, 0.149912, -0.020959), (0.104211, 0.149912, -0.022053), (0.104211, -0.149912, -0.022053), (-0.113205, 0.149912, -0.018396), (-0.110752, 0.149912, -0.020959), (-0.111946, 0.149912, -0.022053), (-0.114176, 0.149912, -0.019604), (-0.110752, -0.149912, -0.020959), (-0.113205, -0.149912, -0.018396), (-0.111946, -0.149912, -0.022053), (-0.114176, -0.149912, -0.019604), (-0.114554, -0.149912, -0.003956), (-0.115863, -0.149912, -0.003956), (-0.115863, 0.149912, -0.003956), (-0.114554, 0.149912, -0.003956), (-0.115471, -0.149912, -0.01178), (-0.115471, 0.149912, -0.01178), (-0.114171, 0.149912, -0.011176), (-0.114171, -0.149912, -0.011176), (-0.115666, -0.149912, -0.007868), (-0.115666, 0.149912, -0.007868), (-0.114382, 0.149912, -0.007566), (-0.114382, -0.149912, -0.007566), (-0.114798, -0.149912, -0.015692), (-0.114798, 0.149912, -0.015692), (-0.113714, 0.149912, -0.014786), (-0.113714, -0.149912, -0.014786), (-0.112822, 0.149912, -0.003956), (0.104211, 0.149912, -0.003956), (0.104211, -0.149912, -0.003956), (-0.112822, -0.149912, -0.003956), (-0.112408, 0.149912, -0.012458), (0.104211, 0.149912, -0.012458), (0.104211, -0.149912, -0.012458), (-0.112408, -0.149912, -0.012458), (-0.112822, -0.148274, 0.00032), (-0.114554, -0.149912, -0.003956), (-0.112822, 0.148274, 0.00032), (-0.114554, 0.149912, -0.003956), (0.102838, -0.148274, -0.002872), (0.102838, 0.148274, -0.002872), (0.104211, -0.149912, -0.020959), (0.104211, 0.149912, -0.020959), (-0.110752, 0.149912, -0.020959), (-0.113205, 0.149912, -0.018396), (-0.113205, -0.149912, -0.018396), (-0.110752, -0.149912, -0.020959), (-0.114171, 0.149912, -0.011176), (-0.114171, -0.149912, -0.011176), (-0.037094, 0.149912, -0.020959), (-0.038197, 0.149912, -0.012458), (-0.038473, 0.149912, -0.003956), (-0.038856, 0.148274, 0.013517), (-0.038856, -0.148274, 0.013517), (-0.038473, -0.149912, -0.003956), (-0.038197, -0.149912, -0.012458), (-0.037094, -0.149912, -0.020959), (0.029884, 0.149912, -0.020959), (0.029332, 0.149912, -0.012458), (0.029194, 0.149912, -0.003956), (0.028427, 0.148274, 0.008332), (0.028427, -0.148274, 0.008332), (0.029194, -0.149912, -0.003956), (0.029332, -0.149912, -0.012458), (0.029884, -0.149912, -0.020959), (-0.017885, 0.149912, -0.020959), (-0.018805, 0.149912, -0.012458), (-0.019035, 0.149912, -0.003956), (-0.019547, 0.148274, 0.012764), (-0.019547, -0.148274, 0.012764), (-0.019035, -0.149912, -0.003956), (-0.018805, -0.149912, -0.012458), (-0.017885, -0.149912, -0.020959), (0.006, 0.149912, -0.020959), (0.005264, 0.149912, -0.012458), (0.00508, 0.149912, -0.003956), (0.00444, 0.148274, 0.010986), (0.00444, -0.148274, 0.010986), (0.00508, -0.149912, -0.003956), (0.005264, -0.149912, -0.012458), (0.006, -0.149912, -0.020959), (-0.09518, 0.149912, -0.020959), (-0.096725, 0.149912, -0.012458), (-0.097112, 0.149912, -0.003956), (-0.097188, 0.148274, 0.00887), (-0.097188, -0.148274, 0.00887), (-0.097112, -0.149912, -0.003956), (-0.096725, -0.149912, -0.012458), (-0.09518, -0.149912, -0.020959), (-0.08209, 0.149912, -0.020959), (-0.083526, 0.149912, -0.012458), (-0.083884, 0.149912, -0.003956), (-0.084038, 0.148274, 0.012315), (-0.084038, -0.148274, 0.012315), (-0.083884, -0.149912, -0.003956), (-0.083526, -0.149912, -0.012458), (-0.08209, -0.149912, -0.020959), (-0.067759, 0.149912, -0.020959), (-0.069084, 0.149912, -0.012458), (-0.069416, 0.149912, -0.003956), (-0.069645, 0.148274, 0.013703), (-0.069645, -0.148274, 0.013703), (-0.069416, -0.149912, -0.003956), (-0.069084, -0.149912, -0.012458), (-0.067759, -0.149912, -0.020959), (-0.053428, 0.149912, -0.020959), (-0.054643, 0.149912, -0.012458), (-0.054946, 0.149912, -0.003956), (-0.055253, 0.148274, 0.013787), (-0.055253, -0.148274, 0.013787), (-0.054946, -0.149912, -0.003956), (-0.054643, -0.149912, -0.012458), (-0.053428, -0.149912, -0.020959), (0.053746, 0.149912, -0.020959), (0.053469, 0.149912, -0.012458), (0.053401, 0.149912, -0.003956), (0.05244, 0.148274, 0.005435), (0.05244, -0.148274, 0.005435), (0.053401, -0.149912, -0.003956), (0.053469, -0.149912, -0.012458), (0.053746, -0.149912, -0.020959), (0.077642, 0.149912, -0.020959), (0.077504, 0.149912, -0.012458), (0.07747, 0.149912, -0.003956), (0.076414, 0.148274, 0.002044), (0.076414, -0.148274, 0.002044), (0.07747, -0.149912, -0.003956), (0.077504, -0.149912, -0.012458), (0.077642, -0.149912, -0.020959), (-0.114347, -0.148483, -0.001548), (-0.114347, 0.148483, -0.001548), (-0.114947, -0.149686, -0.003276), (-0.114947, 0.149687, -0.003276), (-0.11547, -0.149686, -0.003276), (-0.11547, 0.149687, -0.003276), (-0.105012, 0.149912, -0.020959), (-0.106613, 0.149912, -0.012458), (-0.107013, 0.149912, -0.003956), (-0.107051, 0.148274, 0.004718), (-0.107051, -0.148274, 0.004718), (-0.107013, -0.149912, -0.003956), (-0.106613, -0.149912, -0.012458), (-0.105012, -0.149912, -0.020959), (-0.115258, -0.148582, -0.003119), (-0.115258, -0.149912, -0.003956), (-0.115258, 0.148583, -0.003119), (-0.115258, 0.149912, -0.003956), (0.096525, 0.149912, -0.020959), (0.096489, 0.149912, -0.012458), (0.09648, 0.149912, -0.003956), (0.095353, 0.148274, -0.001046), (0.095353, -0.148274, -0.001046), (0.09648, -0.149912, -0.003956), (0.096489, -0.149912, -0.012458), (0.096525, -0.149912, -0.020959)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(0.011917, 0.331252), (0.011959, 0.168618), (0.013998, 0.168606), (0.013957, 0.331263), (0.020639, 0.332827), (0.019432, 0.332827), (0.019436, 0.331263), (0.02057, 0.331263), (0.02057, 0.331263), (0.019436, 0.331263), (0.019436, 0.168606), (0.02057, 0.168606), (0.019432, 0.167302), (0.020639, 0.167302), (0.02057, 0.168606), (0.019436, 0.168606), (0.019436, 0.331263), (0.013957, 0.331263), (0.013998, 0.168606), (0.019436, 0.168606), (0.02057, 0.331263), (0.02057, 0.168606), (0.023106, 0.168606), (0.023106, 0.331263), (0.019436, 0.331263), (0.019432, 0.332827), (0.013986, 0.332845), (0.013957, 0.331263), (0.014035, 0.167287), (0.019432, 0.167302), (0.019436, 0.168606), (0.013998, 0.168606), (0.02057, 0.168606), (0.020639, 0.167302), (0.02323, 0.167302), (0.023106, 0.168606), (0.023106, 0.331263), (0.023159, 0.332827), (0.020639, 0.332827), (0.02057, 0.331263), (0.025642, 0.331263), (0.025642, 0.168606), (0.028177, 0.168606), (0.028177, 0.331263), (0.028177, 0.331263), (0.028198, 0.332827), (0.025678, 0.332827), (0.025642, 0.331263), (0.025642, 0.168606), (0.02582, 0.167302), (0.028411, 0.167302), (0.028177, 0.168606), (0.028177, 0.331263), (0.028177, 0.168606), (0.030617, 0.168548), (0.030612, 0.331263), (0.030612, 0.331263), (0.030602, 0.332827), (0.028198, 0.332827), (0.028177, 0.331263), (0.028177, 0.168606), (0.028411, 0.167302), (0.030617, 0.167302), (0.030617, 0.168548), (0.023106, 0.331263), (0.023106, 0.168606), (0.025642, 0.168606), (0.025642, 0.331263), (0.025642, 0.331263), (0.025678, 0.332827), (0.023159, 0.332827), (0.023106, 0.331263), (0.023106, 0.168606), (0.02323, 0.167302), (0.02582, 0.167302), (0.025642, 0.168606), (0.03121, 0.331732), (0.031209, 0.168259), (0.031999, 0.168259), (0.031999, 0.331732), (0.030617, 0.168548), (0.030617, 0.167302), (0.031209, 0.16766), (0.031209, 0.168259), (0.030602, 0.332827), (0.030612, 0.331263), (0.03121, 0.331732), (0.03121, 0.332384), (0.031999, 0.168259), (0.032914, 0.168259), (0.032899, 0.331732), (0.031999, 0.331732), (0.030617, 0.168548), (0.031209, 0.168259), (0.03121, 0.331732), (0.030612, 0.331263)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_Book_25_0"
        {
            token outputs:surface.connect = </root/_materials/M_Book_25_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_Book_25_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Book_Cover_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Book_25_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

