#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshLightSwitch_8_0_GeomSubset_1"
    {
        def Mesh "MeshLightSwitch_8_0_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4]
            int[] faceVertexIndices = [4, 5, 7, 6]
            rel material:binding = </root/_materials/M_LightSwitch_8_1>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.0005, -0.0005, -0), (-0.0005, -0.0005, -0), (0.0005, 0.0005, 0), (-0.0005, 0.0005, 0), (0.0005, -0.0005, -0), (-0.0005, -0.0005, -0), (0.0005, 0.0005, 0), (-0.0005, 0.0005, 0), (0.0005, -0.0005, -0), (-0.0005, -0.0005, -0), (0.0005, 0.0005, 0), (-0.0005, 0.0005, 0), (0.053194, -0.00791, -0.057904), (0.051082, -0.00791, -0.058779), (0.051082, -0.010023, -0.057904), (0.051082, -0.010898, -0.055793), (0.053194, -0.010023, -0.055793), (0.054069, -0.00791, -0.055793), (-0.053194, -0.00791, -0.057904), (-0.054069, -0.00791, -0.055793), (-0.053194, -0.010023, -0.055793), (-0.051082, -0.010898, -0.055793), (-0.051082, -0.010023, -0.057904), (-0.051082, -0.00791, -0.058779), (0.053194, -0.00791, 0.057904), (0.054069, -0.00791, 0.055793), (0.053194, -0.010023, 0.055793), (0.051082, -0.010898, 0.055793), (0.051082, -0.010023, 0.057904), (0.051082, -0.00791, 0.058779), (-0.053194, -0.00791, 0.057904), (-0.051082, -0.00791, 0.058779), (-0.051082, -0.010023, 0.057904), (-0.051082, -0.010898, 0.055793), (-0.053194, -0.010023, 0.055793), (-0.054069, -0.00791, 0.055793), (0.054069, -0, 0.055793), (0.053194, -0, 0.057904), (0.051082, -0, 0.058779), (-0.051082, -0, 0.058779), (-0.053194, -0, 0.057904), (-0.054069, -0, 0.055793), (0.051082, 0, -0.058779), (0.053194, 0, -0.057904), (0.054069, 0, -0.055793), (-0.054069, 0, -0.055793), (-0.053194, 0, -0.057904), (-0.051082, 0, -0.058779), (0.052806, -0.009634, -0.057516), (-0.052806, -0.009634, -0.057516), (0.052806, -0.009634, 0.057516), (-0.052806, -0.009634, 0.057516), (-0.001215, -0.010898, 0.055793), (-0.001215, -0.010023, 0.057904), (-0.001215, -0.00791, 0.058779), (-0.001215, -0, 0.058779), (-0.001215, -0.010898, -0.055793), (-0.001215, -0.010023, -0.057904), (-0.001215, -0.00791, -0.058779), (-0.001215, 0, -0.058779), (-0.051082, -0.010898, -0), (-0.053194, -0.010023, -0), (-0.054069, -0.00791, -0), (-0.054069, 0, 0), (-0.051082, -0.010898, 0.027896), (-0.053194, -0.010023, 0.027896), (-0.054069, -0.00791, 0.027896), (-0.054069, -0, 0.027896), (-0.051082, -0.010898, -0.027896), (-0.053194, -0.010023, -0.027896), (-0.054069, -0.00791, -0.027896), (-0.054069, 0, -0.027896), (0.051082, -0.010898, -0), (0.053194, -0.010023, -0), (0.054069, -0.00791, -0), (0.054069, 0, 0), (0.051082, -0.010898, 0.027896), (0.053194, -0.010023, 0.027896), (0.054069, -0.00791, 0.027896), (0.054069, -0, 0.027896), (0.051082, -0.010898, -0.027896), (0.053194, -0.010023, -0.027896), (0.054069, -0.00791, -0.027896), (0.054069, 0, -0.027896), (0.013597, -0.010897, 0.014995), (-0.000297, -0.010897, 0.018053), (-0.013811, -0.010897, 0.014995), (-0.016046, -0.010897, 0.008219), (-0.013811, -0.010897, -0.014995), (-0.000297, -0.010897, -0.018053), (0.013597, -0.010897, -0.014995), (0.015914, -0.010897, -0.008219), (-0.01657, -0.010897, 0), (-0.016046, -0.010897, -0.008219), (0.016457, -0.010897, 0), (0.015914, -0.010897, 0.008219), (-0.007739, -0.010897, 0.017436), (-0.026149, -0.010898, 0.055793), (-0.026149, -0.010023, 0.057904), (-0.026149, -0.00791, 0.058779), (-0.026149, -0, 0.058779), (0.007305, -0.010897, 0.017436), (0.024934, -0.010898, 0.055793), (0.024934, -0.010023, 0.057904), (0.024934, -0.00791, 0.058779), (0.024934, -0, 0.058779), (0.007305, -0.010897, -0.017436), (0.024934, -0.010898, -0.055793), (0.024934, -0.010023, -0.057904), (0.024934, -0.00791, -0.058779), (0.024934, 0, -0.058779), (-0.007739, -0.010897, -0.017436), (-0.026149, -0.010898, -0.055793), (-0.026149, -0.010023, -0.057904), (-0.026149, -0.00791, -0.058779), (-0.026149, 0, -0.058779), (0.012185, -0.010897, 0.013444), (0.014262, -0.010897, 0.007369), (-0.000273, -0.010897, 0.016186), (0.006544, -0.010897, 0.015632), (-0.012388, -0.010897, 0.013444), (-0.006945, -0.010897, 0.015632), (-0.014392, -0.010897, 0.007369), (-0.014862, -0.010897, 0), (-0.012388, -0.010897, -0.013444), (-0.014392, -0.010897, -0.007369), (-0.000273, -0.010897, -0.016186), (-0.006945, -0.010897, -0.015632), (0.012185, -0.010897, -0.013444), (0.006544, -0.010897, -0.015632), (0.014262, -0.010897, -0.007369), (0.014749, -0.010897, 0), (0.013597, -0.012213, 0.014995), (0.013123, -0.012809, 0.014539), (0.015914, -0.012213, 0.008219), (0.015324, -0.012809, 0.008101), (-0.000297, -0.012213, 0.018053), (-0.000297, -0.012809, 0.017455), (0.007305, -0.012213, 0.017436), (0.007171, -0.012809, 0.016849), (-0.013811, -0.012213, 0.014995), (-0.013331, -0.012809, 0.014545), (-0.007739, -0.012213, 0.017436), (-0.0076, -0.012809, 0.016849), (-0.016046, -0.012213, 0.008219), (-0.015456, -0.012809, 0.008105), (-0.01657, -0.012213, 0), (-0.015973, -0.012809, 0), (-0.013811, -0.012213, -0.014995), (-0.013331, -0.012809, -0.014545), (-0.016046, -0.012213, -0.008219), (-0.015456, -0.012809, -0.008105), (-0.000297, -0.012213, -0.018053), (-0.000297, -0.012809, -0.017455), (-0.007739, -0.012213, -0.017436), (-0.0076, -0.012809, -0.016849), (0.013597, -0.012213, -0.014995), (0.013123, -0.012809, -0.014539), (0.007305, -0.012213, -0.017436), (0.007171, -0.012809, -0.016848), (0.015914, -0.012213, -0.008219), (0.015324, -0.012809, -0.008101), (0.016457, -0.012213, 0), (0.015859, -0.012809, 0), (0.012659, -0.012809, 0.0139), (0.012185, -0.012213, 0.013444), (0.014852, -0.012809, 0.007487), (0.014262, -0.012213, 0.007369), (-0.000273, -0.012809, 0.016784), (-0.000273, -0.012213, 0.016186), (0.006679, -0.012809, 0.01622), (0.006544, -0.012213, 0.015632), (-0.012868, -0.012809, 0.013894), (-0.012388, -0.012213, 0.013444), (-0.007084, -0.012809, 0.01622), (-0.006945, -0.012213, 0.015632), (-0.014983, -0.012809, 0.007483), (-0.014392, -0.012213, 0.007369), (-0.01546, -0.012809, 0), (-0.014862, -0.012213, 0), (-0.012868, -0.012809, -0.013894), (-0.012388, -0.012213, -0.013444), (-0.014983, -0.012809, -0.007483), (-0.014392, -0.012213, -0.007369), (-0.000273, -0.012809, -0.016784), (-0.000273, -0.012213, -0.016186), (-0.007084, -0.012809, -0.016219), (-0.006945, -0.012213, -0.015632), (0.012659, -0.012809, -0.013899), (0.012185, -0.012213, -0.013444), (0.006679, -0.012809, -0.01622), (0.006544, -0.012213, -0.015632), (0.014852, -0.012809, -0.007487), (0.014262, -0.012213, -0.007369), (0.015347, -0.012809, 0), (0.014749, -0.012213, 0)]
            bool[] primvars:sharp_face = [0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(1.271059, 0.742956), (1.271059, 0.741083), (1.272932, 0.741083), (1.272932, 0.742956)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_LightSwitch_8_1"
        {
            token outputs:surface.connect = </root/_materials/M_LightSwitch_8_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.9558824, 0.9558824, 0.9558824)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_LightSwitch_8_1/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_LightSwitch_8_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

