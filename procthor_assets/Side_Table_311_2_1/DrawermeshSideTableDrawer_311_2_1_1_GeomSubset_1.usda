#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "DrawermeshSideTableDrawer_311_2_1_1_GeomSubset_1"
    {
        def Mesh "DrawermeshSideTableDrawer_311_2_1_1_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [52, 54, 53, 52, 55, 54, 56, 55, 52, 56, 57, 55, 55, 58, 54, 55, 59, 58, 57, 59, 55, 57, 60, 59, 59, 61, 58, 59, 62, 61, 60, 62, 59, 60, 63, 62, 64, 66, 65, 64, 67, 66, 63, 52, 62, 63, 56, 52, 62, 52, 53, 62, 53, 61, 66, 61, 53, 66, 67, 61, 65, 53, 54, 65, 66, 53, 64, 54, 58, 64, 65, 54, 67, 58, 61, 67, 64, 58]
            rel material:binding = </root/_materials/M_SideTableDrawer_311_2_1_1>
            normal3f[] normals = [(-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-0.000007251073, 1, 0.000024830455), (-0.0000071142827, 1, 0.000023988665), (-0.0000070754736, 1, 0.00002374984), (-0.000007251073, 1, 0.000024830455), (-0.0000072898815, 1, 0.000025069276), (-0.0000071142827, 1, 0.000023988665), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (5.2328417e-9, 0.46119985, -0.8872962), (-0.0000032833066, 0.4613744, -0.88720554), (0, 0.46149877, -0.88714087), (5.2328417e-9, 0.46119985, -0.8872962), (-0.0000033641197, 0.4613714, -0.8872072), (-0.0000032833066, 0.4613744, -0.88720554), (-0.72389424, 0.6899109, 7.753797e-7), (-0.7240116, 0.68978775, 0.000016171603), (-0.7238883, 0.68991715, 0), (-0.72389424, 0.6899109, 7.753797e-7), (-0.7240211, 0.68977785, 0.000017408287), (-0.7240116, 0.68978775, 0.000016171603), (-2.9937617e-8, 0.46150014, 0.8871401), (-0.0000031815425, 0.46164742, 0.8870635), (0, 0.46149877, 0.88714087), (-2.9937617e-8, 0.46150014, 0.8871401), (0.0000022046734, 0.4612258, 0.88728267), (-0.0000031815425, 0.46164742, 0.8870635), (0.72400534, 0.68979436, 7.0498044e-7), (0.7238844, 0.6899213, 0.000014698251), (0.7240114, 0.6897879, 0), (0.72400534, 0.68979436, 7.0498044e-7), (0.7238746, 0.6899315, 0.00001582292), (0.7238844, 0.6899213, 0.000014698251)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.444284, -0.307963, 0.286329), (0.444285, -0.330726, 0.286329), (0.444285, -0.330726, -0.064137), (0.444284, -0.307962, -0.064137), (-0.449071, -0.307962, -0.064137), (-0.449071, -0.330726, -0.064137), (-0.449071, -0.330726, 0.286329), (-0.449071, -0.307962, 0.286329), (-0.400843, -0.334547, -0.036089), (0.396057, -0.334547, -0.036089), (0.396057, -0.334547, 0.258281), (-0.400843, -0.334547, 0.258281), (-0.43944, -0.307962, 0.293328), (-0.43944, -0.330726, 0.293328), (0.434653, -0.330726, 0.293328), (0.434653, -0.307963, 0.293328), (-0.393947, 0.072175, 0.274415), (-0.393947, 0.072175, -0.031453), (0.38916, 0.072175, -0.031453), (0.38916, 0.072176, 0.274415), (0.434653, -0.307962, -0.071136), (0.434653, -0.330726, -0.071136), (-0.43944, -0.330726, -0.071136), (-0.43944, -0.307962, -0.071136), (0.434654, -0.297853, 0.286329), (-0.43944, -0.297854, 0.286329), (0.434653, -0.297853, -0.064137), (-0.43944, -0.297854, -0.064137), (-0.43944, -0.340836, 0.286329), (0.434654, -0.340835, 0.286329), (0.434653, -0.340836, -0.064137), (-0.43944, -0.340836, -0.064137), (-0.423045, -0.297853, 0.274415), (0.418259, -0.297854, 0.274415), (-0.423045, -0.297853, -0.052223), (0.418258, -0.297853, -0.052223), (-0.423045, 0.102717, -0.052223), (-0.423045, 0.102717, 0.274415), (0.418258, 0.102717, 0.274415), (0.418258, 0.102717, -0.052223), (0.38916, -0.267311, -0.031453), (0.389161, -0.26731, 0.274415), (-0.393947, -0.267311, 0.274415), (-0.393947, -0.267311, -0.031453), (0.408064, -0.340836, 0.267006), (-0.41285, -0.340836, 0.267006), (0.408064, -0.340836, -0.044815), (-0.41285, -0.340836, -0.044815), (0.402061, -0.340836, 0.262643), (-0.406847, -0.340836, 0.262643), (0.402061, -0.340836, -0.040452), (-0.406847, -0.340836, -0.040452), (0.069604, -0.338764, 0.014968), (0.069604, -0.342014, 0.014968), (0.069604, -0.342014, -0.028385), (0.069604, -0.338764, -0.028385), (0.069604, -0.332893, 0.014968), (0.069604, -0.332893, -0.028385), (-0.074391, -0.342014, -0.028385), (-0.074391, -0.338764, -0.028385), (-0.074391, -0.332894, -0.028385), (-0.074391, -0.342014, 0.014968), (-0.074391, -0.338764, 0.014968), (-0.074391, -0.332894, 0.014968), (-0.071892, -0.344636, -0.027021), (0.067106, -0.344635, -0.027021), (0.067106, -0.344636, 0.013604), (-0.071892, -0.344637, 0.013604)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.818362), (0.092088, 0.675906), (-0.165236, 0.813735), (-0.165236, 0.675906), (0.092088, 0.675906), (0.092088, 0.813735), (-0.165236, 0.813735), (0.096714, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.165236, 0.813735), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.165236, 0.813735), (0.092088, 0.813735), (0.096714, 0.818362), (-0.165236, 0.675906), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.165236, 0.675906), (-0.165236, 0.813735), (-0.169862, 0.818362), (0.092088, 0.675906), (-0.169862, 0.67128), (0.096714, 0.67128), (0.092088, 0.675906), (-0.165236, 0.675906), (-0.169862, 0.67128), (0.092088, 0.813735), (0.096714, 0.67128), (0.096714, 0.818362), (0.092088, 0.813735), (0.092088, 0.675906), (0.096714, 0.67128)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_SideTableDrawer_311_2_1_1"
        {
            token outputs:surface.connect = </root/_materials/M_SideTableDrawer_311_2_1_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.829, 0.829, 0.829)
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }
    }
}

