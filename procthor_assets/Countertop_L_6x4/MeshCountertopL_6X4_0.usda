#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "CountertopL_6X4"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "CountertopL_6X4" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.915633, -0.610431, -0.517404), (0.913169, 0.608772, 0.418626)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [5, 13, 17, 4, 8, 15, 14, 9, 1, 5, 4, 0, 0, 4, 17, 16, 2, 6, 7, 3, 0, 8, 9, 1, 3, 10, 11, 2, 15, 8, 0, 16, 7, 13, 12, 3, 3, 12, 14, 10, 15, 11, 10, 14, 2, 11, 15, 16, 17, 6, 2, 16, 13, 7, 6, 17, 13, 19, 18, 12, 12, 18, 20, 14, 20, 28, 9, 14, 5, 22, 19, 13, 22, 24, 23, 21, 25, 24, 22, 5, 1, 26, 25, 5, 9, 27, 26, 1, 28, 29, 27, 9, 21, 23, 29, 28, 19, 22, 21, 18, 18, 21, 28, 20, 24, 25, 26, 23, 23, 26, 27, 29]
            rel material:binding = </root/_materials/M_CountertopL_6X4_0>
            normal3f[] normals = [(0.0000014395595, 1, -0.0000071377926), (-7.8945726e-7, 1, -0.00000402427), (4.296506e-7, 1, -0.0000084245185), (8.593012e-7, 1, -0.000016849037), (1, 0, 0), (1, 0, 0), (1, -5.5247415e-7, 3.955399e-7), (1, 1.4249281e-7, 1.677614e-7), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-2.7340306e-8, 0, -1), (-5.4680964e-8, 0, -1), (0.0000010621902, 0, -1), (2.5193648e-7, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -0.99999994), (-2.7340306e-8, 0, -1), (2.5193648e-7, 0, -1), (-8.490311e-7, 0, 1), (-8.490311e-7, 0, 1), (-4.2479328e-7, 0, 1), (-4.2449648e-7, 0, 1), (-4.2449648e-7, 0, 1), (-4.2479328e-7, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, -5.5247415e-7, 3.955399e-7), (0.0000010894728, 0, -1), (0, 0, -1), (0, 0, -1), (2.5193648e-7, 0, -1), (0.0000010621902, 0, -1), (0.0000021790613, 0, -1), (0.0000010894728, 0, -1), (2.5193648e-7, 0, -1), (-7.8945726e-7, 1, -0.00000402427), (0, 1, 0), (0, 1, 0), (4.296506e-7, 1, -0.0000084245185), (0.9999986, 0.0016593069, 1.0089769e-9), (0.9999986, 0.0016593069, 1.0089769e-9), (0.9999986, 0.0016593069, 1.0089769e-9), (0.9999986, 0.0016593069, 1.0089769e-9), (0.0008419722, 0.99999964, 6.064577e-7), (0.0008419722, 0.99999964, 6.064577e-7), (0.0008419722, 0.99999964, 6.064577e-7), (0.0008419722, 0.99999964, 6.064577e-7), (1, -0.0000016574234, 0.0000011866204), (1, 0.0000010603225, -4.209794e-9), (1, 1.4249281e-7, 1.677614e-7), (1, -5.5247415e-7, 3.955399e-7), (0.0000014395595, 1, -0.0000071377926), (0.0000041144153, 1, 0.0000016939157), (-0.0000032276728, 1, 0.0000047762283), (-7.8945726e-7, 1, -0.00000402427), (0.9999784, 0.0007974624, 0.0065239444), (0.9999784, 0.0007974624, 0.0065239444), (0.9999784, 0.0007974624, 0.0065239444), (0.9999784, 0.0007974624, 0.0065239444), (0.000010424482, 1, -9.551399e-7), (0.000010424482, 1, -9.551399e-7), (0.0000041144153, 1, 0.0000016939157), (0.0000014395595, 1, -0.0000071377926), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0.0000010603225, -4.209794e-9), (1, 0.000003396012, -0.0000010276351), (1, 0.000003396012, -0.0000010276351), (1, 1.4249281e-7, 1.677614e-7), (0.00040886467, 0.9999786, 0.006521249), (0.00040886467, 0.9999786, 0.006521249), (0.00040886467, 0.9999786, 0.006521249), (0.00040886467, 0.9999786, 0.006521249), (-0.009739212, -0.00011767182, 0.99995255), (-0.009739212, -0.00011767182, 0.99995255), (-0.006409486, -0.003389738, 0.99997365), (-0.006488586, -0.0034109843, 0.99997306), (-0.006488586, -0.0034109843, 0.99997306), (-0.006409486, -0.003389738, 0.99997365), (-0.000060590803, -0.009743418, 0.99995255), (-0.000060590803, -0.009743418, 0.99995255), (0.0003788087, -0.00006956255, 0.9999999), (0.0003788087, -0.00006956255, 0.9999999), (0.0001682071, 0.00014744121, 0.99999994), (0.00016820835, 0.00014743993, 1), (0.00016820835, 0.00014743993, 1), (0.0001682071, 0.00014744121, 0.99999994), (-0.000042392643, 0.00036444303, 0.9999999), (-0.000042392643, 0.00036444303, 0.9999999)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.913169, 0.608772, 0.418626), (0.913169, 0.608772, 0.388626), (0.30357, -0.000828, 0.418626), (0.30357, -0.000828, 0.388626), (0.913169, -0.610429, 0.418626), (0.913169, -0.61043, 0.388626), (0.30357, -0.610429, 0.418626), (0.30357, -0.610429, 0.388626), (-0.915632, 0.608772, 0.418626), (-0.915632, 0.608772, 0.388626), (-0.915632, -0.000828, 0.388626), (-0.915632, -0.000828, 0.418626), (0.322531, 0.018129, 0.388626), (0.323574, -0.610429, 0.388626), (-0.915632, 0.019171, 0.388626), (-0.915632, 0.019171, 0.418626), (0.323574, 0.019171, 0.418626), (0.323574, -0.610429, 0.418626), (0.322531, 0.018129, -0.437404), (0.323574, -0.610428, -0.437404), (-0.915632, 0.019172, -0.437404), (0.342535, 0.038134, -0.437143), (0.343575, -0.610425, -0.437273), (0.343578, 0.039177, -0.517143), (0.343575, -0.610425, -0.517273), (0.913169, -0.610431, -0.517404), (0.913169, 0.608772, -0.517404), (-0.915633, 0.608772, -0.517404), (-0.915631, 0.039171, -0.437274), (-0.915631, 0.039171, -0.517274)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-10.477684, 1.190958), (-9.556435, 1.190958), (-9.556435, 1.237833), (-10.477684, 1.237833), (-9.52517, 1.216781), (-10.446442, 1.216781), (-10.446442, 1.169908), (-9.52517, 1.169908), (-10.495298, 1.16504), (-8.590288, 1.16504), (-8.59029, 1.211915), (-10.495298, 1.211915), (-11.123093, 1.481434), (-11.123093, -0.423565), (-10.201851, -0.423565), (-10.201851, 0.560182), (-9.535113, 1.19573), (-10.48764, 1.19573), (-10.48764, 1.148857), (-9.535113, 1.148857), (-11.123131, 0.823974), (-8.265549, 0.823974), (-8.265549, 0.870847), (-11.123131, 0.870847), (-10.495297, 1.186478), (-8.590288, 1.186478), (-8.590288, 1.233353), (-10.495297, 1.233353), (-8.26559, 0.560182), (-8.26559, 1.481434), (-11.123093, 1.481434), (-10.201851, 0.560182), (-10.484641, 1.509788), (-10.515898, 1.509788), (-10.514268, 0.527662), (-10.484641, 0.557284), (-10.484641, 0.557284), (-10.514268, 0.527662), (-8.579634, 0.526036), (-8.579634, 0.557284), (-10.446442, 1.216781), (-10.477691, 1.216781), (-10.477691, 1.169908), (-10.446442, 1.169908), (-10.170593, 0.528934), (-8.26559, 0.528934), (-8.26559, 0.560182), (-10.201851, 0.560182), (-10.201851, -0.423565), (-10.170593, -0.423565), (-10.170593, 0.528934), (-10.201851, 0.560182), (-9.556435, 1.190958), (-9.525177, 1.190958), (-9.525177, 1.237833), (-9.556435, 1.237833), (-20.208883, -0.192728), (-19.563545, -0.19273), (-19.563545, 0.298332), (-20.208883, 0.298332), (-20.01367, 1.120483), (-20.01367, 0.475151), (-19.046356, 0.475151), (-19.046356, 1.120485), (-19.350607, 0.107866), (-19.350708, 0.123493), (-19.995943, 0.568495), (-19.995943, 0.107866), (-19.995945, -0.061623), (-19.350712, 0.383373), (-19.350609, 0.398996), (-19.995945, 0.398996), (-20.11548, 0.18965), (-20.11548, 0.127148), (-19.607975, 0.127249), (-19.60879, 0.189751), (-19.288109, -0.061623), (-19.28821, 0.383373), (-19.350712, 0.383373), (-19.995945, -0.061623), (-20.161741, 0.905512), (-20.161741, 0.197674), (-19.20924, 0.197674), (-19.20924, 0.905512), (-18.544287, -0.262604), (-18.544287, 0.445231), (-19.973038, 0.44523), (-19.973038, -0.262604), (-19.350708, 0.123493), (-19.28821, 0.123493), (-19.288107, 0.568495), (-19.995943, 0.568495), (-19.670681, 0.610346), (-19.671494, 0.547846), (-18.687721, 0.547745), (-18.687721, 0.610245), (-19.655872, 0.941484), (-19.6715, 0.941481), (-19.670687, 0.43478), (-19.655058, 0.450411), (-19.655058, 0.450411), (-19.670687, 0.43478), (-18.68772, 0.43397), (-18.687717, 0.449595), (-19.528042, 0.868753), (-19.973038, 0.868759), (-19.973038, -0.083744), (-19.528044, 0.361254), (-19.528044, 0.361254), (-19.973038, -0.083744), (-18.544287, -0.083742), (-18.544289, 0.361258)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_CountertopL_6X4_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                rel material:binding = </root/_materials/M_CountertopL_6X4_0>
            }

            def GeomSubset "M_CountertopL_6X4_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27]
                rel material:binding = </root/_materials/M_CountertopL_6X4_1>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_CountertopL_6X4_0"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopL_6X4_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopL_6X4_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/marbleBase2.jpg@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopL_6X4_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_CountertopL_6X4_1"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopL_6X4_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopL_6X4_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_CountertopL_6X4_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/DarkWood2.tif@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopL_6X4_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopL_6X4_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

