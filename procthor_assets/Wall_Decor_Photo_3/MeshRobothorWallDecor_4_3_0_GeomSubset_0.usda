#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshRobothorWallDecor_4_3_0_GeomSubset_0"
    {
        def Mesh "MeshRobothorWallDecor_4_3_0_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 3, 3]
            int[] faceVertexIndices = [0, 1, 3, 2, 28, 30, 29, 28, 31, 30]
            rel material:binding = </root/_materials/M_RobothorWallDecor_4_3_0>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.000006210065, -0.99999994, -0.00034222295), (-0.0000062101317, -0.99999994, -0.00034218415), (0.000006090168, -0.99999994, -0.00034209722), (-0.000006210065, -0.99999994, -0.00034222295), (0.000006090176, -0.99999994, -0.00034215167), (-0.0000062101317, -0.99999994, -0.00034218415)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.001599, 0.014501, -0.570837), (0.002201, 0.014501, -0.570837), (0.001599, 0.015073, -0.570837), (0.002201, 0.015073, -0.570837), (0.001599, 0.014501, -0.570837), (0.002201, 0.014501, -0.570837), (0.001599, 0.015073, -0.570837), (0.002201, 0.015073, -0.570837), (0.001599, 0.014501, -0.570837), (0.002201, 0.014501, -0.570837), (0.001599, 0.015073, -0.570837), (0.002201, 0.015073, -0.570837), (-0.398616, -0.006685, -0.284161), (-0.398616, 0.014985, -0.284154), (-0.398616, 0.014787, 0.288161), (-0.398616, -0.006883, 0.288153), (0.402269, 0.014985, -0.284154), (0.402269, 0.014787, 0.288161), (0.402269, -0.006685, -0.284161), (0.402269, -0.006883, 0.288153), (0.387138, -0.006879, 0.272475), (0.387138, -0.001365, 0.272477), (-0.383484, -0.001365, 0.272477), (-0.383484, -0.006879, 0.272475), (-0.383484, -0.006688, -0.268483), (0.387138, -0.006688, -0.268483), (0.387138, -0.001174, -0.268481), (-0.383484, -0.001174, -0.268481), (0.38249, -0.001175, -0.265413), (-0.378836, -0.001175, -0.265413), (-0.378836, -0.001364, 0.269409), (0.38249, -0.001364, 0.269409)]
            bool[] primvars:sharp_face = [0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-9.379675, -9.755536), (-9.379675, -9.75594), (-9.379271, -9.75594), (-9.379271, -9.755536), (-9, 0), (-10, 1), (-10, 0), (-9, 0), (-9, 1), (-10, 1)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_RobothorWallDecor_4_3_0"
        {
            token outputs:surface.connect = </root/_materials/M_RobothorWallDecor_4_3_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_RobothorWallDecor_4_3_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Wall_Decor_Photo_3_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_RobothorWallDecor_4_3_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

