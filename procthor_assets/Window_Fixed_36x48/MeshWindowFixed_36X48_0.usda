#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.0"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "WindowFixed_36X48"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "WindowFixed_36X48" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.4572, -0.040625, -0.610447), (0.4572, 0.040626, 0.608753)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 4, 5, 6, 7, 10, 11, 24, 25, 26, 27, 14, 11, 0, 15, 28, 27, 26, 29, 10, 1, 0, 11, 14, 12, 6, 11, 15, 13, 3, 2, 30, 31, 28, 29, 2, 1, 10, 9, 30, 25, 24, 31, 2, 9, 14, 15, 9, 8, 12, 14, 15, 0, 5, 13, 10, 7, 8, 9, 4, 1, 2, 3, 13, 5, 18, 17, 6, 12, 16, 19, 7, 6, 19, 20, 5, 4, 21, 18, 8, 7, 20, 23, 4, 3, 22, 21, 3, 13, 17, 22, 12, 8, 23, 16, 17, 18, 26, 25, 19, 16, 24, 27, 20, 19, 27, 28, 18, 21, 29, 26, 23, 20, 28, 31, 21, 22, 30, 29, 22, 17, 25, 30, 16, 23, 31, 24, 32, 33, 35, 34, 34, 35, 37, 36, 36, 37, 39, 38, 38, 39, 33, 32, 33, 39, 37, 35, 38, 32, 34, 36]
            rel material:binding = </root/_materials/M_WindowFixed_36X48_0>
            normal3f[] normals = [(6.440925e-7, -1, 0), (6.440989e-7, -1, -1.3138474e-8), (5.529762e-7, -1, -1.1279733e-8), (5.5297835e-7, -1, 0), (-5.5504154e-7, 1, 0), (-5.550395e-7, 1, 9.023786e-9), (-6.4650214e-7, 1, 1.0510779e-8), (-6.4649566e-7, 1, 0), (-4.2273893e-8, 0, -1), (-4.2273893e-8, 0, -1), (-4.2273893e-8, 0, -1), (-4.2273893e-8, 0, -1), (4.2830536e-8, 0, 1), (4.2830536e-8, 0, 1), (4.2830536e-8, 0, 1), (4.2830536e-8, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-6.4649566e-7, 1, 0), (-5.5504154e-7, 1, 0), (-5.5504154e-7, 1, 0), (-6.4649566e-7, 1, 0), (6.440925e-7, -1, 0), (5.5297835e-7, -1, 0), (5.529762e-7, -1, -1.1279733e-8), (6.440989e-7, -1, -1.3138474e-8), (-4.2273893e-8, 0, 1), (-4.2273893e-8, 0, 1), (-4.2273893e-8, 0, 1), (-4.2273893e-8, 0, 1), (1.0541606e-8, 0, -1), (1.0541606e-8, 0, -1), (1.0541606e-8, 0, -1), (1.0541606e-8, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-6.4650214e-7, 1, 1.0510779e-8), (-5.550395e-7, 1, 9.023786e-9), (-5.5504154e-7, 1, 0), (-6.4649566e-7, 1, 0), (6.440925e-7, -1, 0), (6.440925e-7, -1, 0), (5.5297835e-7, -1, 0), (5.5297835e-7, -1, 0), (-6.4650214e-7, 1, 1.0510779e-8), (-5.550395e-7, 1, 9.023786e-9), (-5.550395e-7, 1, 9.023786e-9), (-6.4650214e-7, 1, 1.0510779e-8), (5.529762e-7, -1, -1.1279733e-8), (6.440989e-7, -1, -1.3138474e-8), (6.440989e-7, -1, -1.3138474e-8), (5.529762e-7, -1, -1.1279733e-8), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-8.7384855e-9, 0, -0.99999994), (-8.7384855e-9, 0, -0.99999994), (-8.7384855e-9, 0, -0.99999994), (-8.7384855e-9, 0, -0.99999994), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-2.5955382e-8, 0, 0.99999994), (-2.5955382e-8, 0, 0.99999994), (-2.5955382e-8, 0, 0.99999994), (-2.5955382e-8, 0, 0.99999994), (-4.734698e-8, 0, 1), (-4.734698e-8, 0, 1), (-4.734698e-8, 0, 1), (-4.734698e-8, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-6.2938017e-7, 1, 0), (-6.2938017e-7, 1, 0), (-6.293795e-7, 1, 0), (-6.293795e-7, 1, 0), (-6.2937926e-7, 1, 0), (-6.2938017e-7, 1, 0), (-6.293795e-7, 1, 0), (-6.293799e-7, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-6.2937926e-7, 1, 0), (-6.2937926e-7, 1, 0), (-6.293799e-7, 1, 0), (-6.293799e-7, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-6.2938017e-7, 1, 0), (-6.2937926e-7, 1, 0), (-6.293799e-7, 1, 0), (-6.293795e-7, 1, 0), (-0.0000012996483, 1, 0), (-0.0000012996483, 1, 0), (-0.0000012996483, 1, 0), (-0.0000012996483, 1, 0), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1.4978772e-8, 0, -0.99999994), (-1.4978772e-8, 0, -0.99999994), (-1.4978772e-8, 0, -0.99999994), (-1.4978772e-8, 0, -0.99999994), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.4572, -0.040625, 0.608753), (-0.4572, -0.040625, -0.610447), (0.4572, -0.040624, -0.610447), (0.409812, -0.040624, -0.553283), (-0.409812, -0.040625, -0.553283), (-0.409812, -0.040625, 0.55159), (-0.409812, 0.040625, 0.55159), (-0.409812, 0.040625, -0.553283), (0.409812, 0.040626, -0.553283), (0.4572, 0.040626, -0.610447), (-0.4572, 0.040625, -0.610447), (-0.4572, 0.040625, 0.608753), (0.409812, 0.040626, 0.55159), (0.409812, -0.040624, 0.55159), (0.4572, 0.040626, 0.608753), (0.4572, -0.040624, 0.608753), (0.409812, 0.028626, 0.55159), (0.409812, -0.028625, 0.55159), (-0.409812, -0.028625, 0.55159), (-0.409812, 0.028625, 0.55159), (-0.409812, 0.028625, -0.553283), (-0.409812, -0.028625, -0.553283), (0.409812, -0.028625, -0.553283), (0.409812, 0.028626, -0.553283), (0.384812, 0.028626, 0.52659), (0.384812, -0.028625, 0.52659), (-0.384812, -0.028625, 0.52659), (-0.384812, 0.028625, 0.52659), (-0.384812, 0.028625, -0.528283), (-0.384812, -0.028625, -0.528283), (0.384812, -0.028625, -0.528283), (0.384812, 0.028626, -0.528283), (0.384812, 0.005013, -0.528283), (-0.384812, 0.005012, -0.528283), (0.384812, 0.005013, 0.52659), (-0.384812, 0.005012, 0.52659), (0.384812, -0.005012, 0.52659), (-0.384812, -0.005012, 0.52659), (0.384812, -0.005012, -0.528283), (-0.384812, -0.005012, -0.528283)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-6.008575, -1.088284), (-8.548133, -1.088284), (-8.429062, -1.186992), (-6.127646, -1.186992), (-8.429061, 0.764823), (-6.127645, 0.764823), (-6.008575, 0.863531), (-8.548132, 0.863531), (-12.398754, -0.39437), (-12.398754, -0.513619), (-10.79565, -0.513619), (-10.79565, -0.39437), (-12.700319, -1.225155), (-10.795651, -1.225154), (-10.795651, -1.055912), (-12.700319, -1.055912), (-8.573256, -0.215183), (-10.770525, -0.215183), (-10.770525, -0.334433), (-8.573256, -0.334433), (-6.008575, 0.909452), (-6.008575, 1.078693), (-8.548132, 1.078693), (-8.548132, 0.909452), (-8.548132, -1.041136), (-8.429061, -0.942429), (-8.429061, 0.764823), (-8.548132, 0.863531), (-6.008574, -2.992952), (-6.127645, -2.894243), (-8.429062, -2.894244), (-8.548133, -2.992952), (-12.398753, -0.234888), (-12.398753, -0.354137), (-10.79565, -0.354137), (-10.79565, -0.234888), (-12.700319, -1.016601), (-10.79565, -1.016601), (-10.79565, -0.84736), (-12.700319, -0.84736), (-8.573256, -0.373051), (-10.770525, -0.373051), (-10.770525, -0.492302), (-8.573256, -0.492301), (-6.008575, 1.118006), (-6.008575, 1.287246), (-8.548132, 1.287245), (-8.548132, 1.118005), (-6.008575, -1.041136), (-6.127645, -0.942429), (-8.429061, -0.942429), (-8.548132, -1.041136), (-6.008574, -2.992952), (-6.008575, -1.088284), (-6.127646, -1.186992), (-6.127645, -2.894243), (-6.008575, 0.863531), (-6.127645, 0.764823), (-6.127645, -0.942429), (-6.008575, -1.041136), (-8.429062, -1.186992), (-8.548133, -1.088284), (-8.548133, -2.992952), (-8.429062, -2.894244), (-12.502903, -0.808048), (-10.795651, -0.808048), (-10.795651, -0.783051), (-12.502903, -0.783051), (-10.79565, -0.709445), (-12.502903, -0.709446), (-12.502903, -0.73444), (-10.79565, -0.73444), (-6.008575, 1.351554), (-8.309992, 1.351553), (-8.309992, 1.326558), (-6.008575, 1.326558), (-8.309992, 1.400165), (-6.008575, 1.400165), (-6.008575, 1.425161), (-8.309992, 1.425161), (-12.502901, -0.660834), (-10.795651, -0.660834), (-10.795651, -0.635838), (-12.502901, -0.635838), (-10.795651, -0.562231), (-12.502901, -0.562231), (-12.502901, -0.587227), (-10.795651, -0.587226), (-6.008575, 1.498769), (-8.309992, 1.498768), (-8.309992, 1.473773), (-6.008575, 1.473773), (-8.309992, 1.54738), (-6.008575, 1.54738), (-6.008575, 1.572376), (-8.309992, 1.572376), (-8.335116, 1.569307), (-8.335116, 3.276557), (-8.387191, 3.224483), (-8.387191, 1.621381), (-10.874674, 1.530688), (-10.874674, -0.176564), (-10.822599, -0.124489), (-10.822599, 1.478613), (-8.573256, 1.530688), (-10.874674, 1.530688), (-10.822599, 1.478613), (-8.625331, 1.478613), (-8.335116, 3.276557), (-10.636534, 3.276557), (-10.584459, 3.224483), (-8.387191, 3.224483), (-8.573256, -0.176564), (-8.573256, 1.530688), (-8.625331, 1.478613), (-8.625331, -0.124489), (-10.636534, 3.276557), (-10.636534, 1.569307), (-10.584459, 1.621381), (-10.584459, 3.224483), (-10.636534, 1.569307), (-8.335116, 1.569307), (-8.387191, 1.621381), (-10.584459, 1.621381), (-10.874674, -0.176564), (-8.573256, -0.176564), (-8.625331, -0.124489), (-10.822599, -0.124489), (-21.633123, 0.259635), (-21.031855, 0.259635), (-21.031855, 1.083754), (-21.633123, 1.083754), (-20.188147, 3.001793), (-20.188147, 2.400513), (-20.180315, 2.400513), (-20.180315, 3.001793), (-22.492048, 2.482029), (-21.89078, 2.482029), (-21.89078, 3.306149), (-22.492048, 3.306149), (-20.126806, 3.001746), (-20.126806, 2.40056), (-20.118975, 2.40056), (-20.118975, 3.001746), (-21.341324, 2.482008), (-21.333492, 2.482008), (-21.333492, 3.306169), (-21.341324, 3.306169), (-21.279985, 2.482012), (-21.272154, 2.482012), (-21.272154, 3.306165), (-21.279985, 3.306165)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_WindowFixed_36X48_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]
                rel material:binding = </root/_materials/M_WindowFixed_36X48_0>
            }

            def GeomSubset "M_WindowFixed_36X48_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [32, 33, 34, 35, 36, 37]
                rel material:binding = </root/_materials/M_WindowFixed_36X48_1>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_WindowFixed_36X48_0"
        {
            token outputs:surface.connect = </root/_materials/M_WindowFixed_36X48_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_WindowFixed_36X48_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/WoodGrains1.jpg@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_WindowFixed_36X48_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_WindowFixed_36X48_1"
        {
            token outputs:surface.connect = </root/_materials/M_WindowFixed_36X48_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }
    }
}

