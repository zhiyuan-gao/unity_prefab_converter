#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshDoorwayDoor_2_0_GeomSubset_1"
    {
        def Mesh "MeshDoorwayDoor_2_0_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 4, 3, 4, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [192, 193, 196, 193, 192, 194, 195, 195, 194, 204, 192, 196, 212, 208, 197, 198, 201, 198, 197, 199, 200, 200, 199, 213, 197, 201, 203, 202, 202, 203, 205, 204, 194, 210, 215, 202, 205, 207, 206, 206, 207, 214, 208, 209, 211, 210, 209, 208, 212, 210, 211, 215, 213, 199, 206, 214, 201, 193, 195, 203, 209, 213, 214, 211, 215, 207, 205, 204, 200, 212, 196, 198, 197, 202, 206, 199, 208, 210, 194, 192, 196, 193, 201, 198, 195, 204, 205, 203, 209, 212, 200, 213, 215, 211, 214, 207]
            rel material:binding = </root/_materials/M_DoorwayDoor_2_1>
            normal3f[] normals = [(0.36471063, 0.85660857, 0.36497647), (0.3647106, 0.85660857, 0.3649765), (0.36471057, 0.85660857, 0.36497647), (0, 0.85684234, 0.5155785), (0, 0.85684234, 0.5155785), (0, 0.85684234, 0.5155785), (0, 0.85684234, 0.5155785), (-0.3646295, 0.8568416, 0.36451054), (-0.3646295, 0.8568416, 0.36451054), (-0.3646295, 0.8568416, 0.36451054), (0.51565003, 0.85679924, 0), (0.51565003, 0.85679924, 0), (0.51565003, 0.85679924, 0), (0.51565003, 0.85679924, 0), (0.36475182, -0.85673773, 0.36463225), (0.36475182, -0.85673773, 0.36463225), (0.36475182, -0.85673773, 0.36463225), (0.51577276, -0.85672545, 0), (0.51577276, -0.85672545, 0), (0.51577276, -0.85672545, 0), (0.51577276, -0.85672545, 0), (0.3647096, -0.8567246, -0.36470497), (0.3647096, -0.8567246, -0.36470497), (0.3647096, -0.8567246, -0.36470497), (0, -0.85676855, 0.51570106), (0, -0.85676855, 0.51570106), (0, -0.85676855, 0.51570106), (0, -0.85676855, 0.51570106), (-0.36471733, -0.85676706, 0.36459777), (-0.36471733, -0.85676706, 0.36459777), (-0.36471733, -0.85676706, 0.36459777), (-0.5155798, 0.85684156, 0), (-0.5155798, 0.85684156, 0), (-0.5155798, 0.85684156, 0), (-0.5155798, 0.85684156, 0), (-0.51570255, -0.8567678, 0), (-0.51570255, -0.8567678, 0), (-0.51570255, -0.8567678, 0), (-0.51570255, -0.8567678, 0), (-0.364678, -0.8567516, -0.3646734), (-0.364678, -0.8567516, -0.3646734), (-0.364678, -0.8567516, -0.3646734), (0, 0.8567982, -0.51565194), (0, 0.8567982, -0.51565194), (0, 0.8567982, -0.51565194), (0, 0.8567982, -0.51565194), (0.3646246, 0.85679674, -0.36462057), (0.3646246, 0.85679674, -0.36462057), (0.3646246, 0.85679674, -0.36462057), (-0.3645901, 0.85682607, -0.36458635), (-0.3645901, 0.85682607, -0.36458635), (-0.3645901, 0.85682607, -0.36458635), (0, -0.8567244, -0.51577455), (0, -0.8567244, -0.51577455), (0, -0.8567244, -0.51577455), (0, -0.8567244, -0.51577455), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0.7072229, 0, 0.70699066), (0.7072229, 0, 0.70699066), (0.7072229, 0, 0.70699066), (0.7072229, 0, 0.70699066), (-0.7072229, 0, 0.70699066), (-0.7072229, 0, 0.70699066), (-0.7072229, 0, 0.70699066), (-0.7072229, 0, 0.70699066), (0.7071067, 0, -0.7071068), (0.7071067, 0, -0.7071068), (0.7071067, 0, -0.7071068), (0.7071067, 0, -0.7071068), (-0.7071067, 0, -0.7071068), (-0.7071067, 0, -0.7071068), (-0.7071067, 0, -0.7071068), (-0.7071067, 0, -0.7071068)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.462701, 0.010332, -1.037016), (-0.455026, 0.010332, -1.037016), (0.462701, 0.010332, 0.995995), (-0.455026, 0.010332, 0.995995), (0.462701, -0.04285, 0.995995), (-0.455026, -0.04285, 0.995995), (0.462701, -0.04285, -1.037016), (-0.455026, -0.04285, -1.037016), (-0.376981, 0.010332, 0.995995), (0.384657, 0.010332, 0.995995), (0.384657, -0.04285, 0.995995), (-0.376981, -0.04285, 0.995995), (0.384657, -0.04285, -1.037016), (-0.376981, -0.04285, -1.037016), (0.384657, 0.010332, -1.037016), (-0.376981, 0.010332, -1.037016), (0.054497, 0.010332, 0.995995), (-0.04682, 0.010332, 0.995995), (-0.04682, 0.010332, -1.037016), (0.054497, 0.010332, -1.037016), (-0.04682, -0.04285, -1.037016), (0.054497, -0.04285, -1.037016), (-0.04682, -0.04285, 0.995995), (0.054497, -0.04285, 0.995995), (0.384657, 0.010332, 0.687843), (0.054497, 0.010332, 0.687843), (-0.04682, 0.010332, 0.687843), (-0.376981, 0.010332, 0.687843), (-0.455026, 0.010332, 0.687843), (-0.455026, -0.04285, 0.687843), (-0.376981, -0.04285, 0.687843), (-0.04682, -0.04285, 0.687843), (0.054497, -0.04285, 0.687843), (0.384657, -0.04285, 0.687843), (0.462701, -0.04285, 0.687843), (0.462701, 0.010332, 0.687843), (0.384657, 0.010332, 0.898973), (0.054497, 0.010332, 0.898973), (-0.04682, 0.010332, 0.898973), (-0.376981, 0.010332, 0.898973), (-0.455026, 0.010332, 0.898973), (-0.455026, -0.04285, 0.898973), (-0.376981, -0.04285, 0.898973), (-0.04682, -0.04285, 0.898973), (0.054497, -0.04285, 0.898973), (0.384657, -0.04285, 0.898973), (0.462701, -0.04285, 0.898973), (0.462701, 0.010332, 0.898973), (0.384657, 0.010332, -0.126873), (0.054497, 0.010332, -0.126873), (-0.04682, 0.010332, -0.126873), (-0.376981, 0.010332, -0.126873), (-0.455026, 0.010332, -0.126873), (-0.455026, -0.04285, -0.126873), (-0.376981, -0.04285, -0.126873), (-0.04682, -0.04285, -0.126873), (0.054497, -0.04285, -0.126873), (0.384657, -0.04285, -0.126873), (0.462701, -0.04285, -0.126873), (0.462701, 0.010332, -0.126873), (0.384657, 0.010332, -0.218383), (0.054497, 0.010332, -0.218383), (-0.04682, 0.010332, -0.218383), (-0.376981, 0.010332, -0.218383), (-0.455026, 0.010332, -0.218383), (-0.455026, -0.04285, -0.218383), (-0.376981, -0.04285, -0.218383), (-0.04682, -0.04285, -0.218383), (0.054497, -0.04285, -0.218383), (0.384657, -0.04285, -0.218383), (0.462701, -0.04285, -0.218383), (0.462701, 0.010332, -0.218383), (-0.04682, 0.010332, -0.837819), (0.054497, 0.010332, -0.837819), (0.384657, 0.010332, -0.837819), (0.462701, 0.010332, -0.837819), (0.462701, -0.04285, -0.837819), (0.384657, -0.04285, -0.837819), (0.054497, -0.04285, -0.837819), (-0.04682, -0.04285, -0.837819), (-0.376981, -0.04285, -0.837819), (-0.455026, -0.04285, -0.837819), (-0.455026, 0.010332, -0.837819), (-0.376981, 0.010332, -0.837819), (0.384657, 0.010332, 0.594087), (0.054497, 0.010332, 0.594087), (-0.04682, 0.010332, 0.594087), (-0.376981, 0.010332, 0.594087), (-0.455026, 0.010332, 0.594087), (-0.455026, -0.04285, 0.594087), (-0.376981, -0.04285, 0.594087), (-0.04682, -0.04285, 0.594087), (0.054497, -0.04285, 0.594087), (0.384657, -0.04285, 0.594087), (0.462701, -0.04285, 0.594087), (0.462701, 0.010332, 0.594087), (0.37839, 0.002982, 0.893073), (0.060763, 0.002982, 0.893073), (0.37839, 0.002982, 0.693743), (0.060763, 0.002982, 0.693743), (-0.053087, 0.002982, 0.893073), (-0.370714, 0.002982, 0.893073), (-0.053087, 0.002982, 0.693743), (-0.370714, 0.002982, 0.693743), (-0.370714, -0.035501, 0.893073), (-0.053087, -0.035501, 0.893073), (-0.370714, -0.035501, 0.693743), (-0.053087, -0.035501, 0.693743), (0.060763, -0.035501, 0.893073), (0.37839, -0.0355, 0.893073), (0.060763, -0.035501, 0.693743), (0.37839, -0.0355, 0.693743), (0.37839, 0.002982, -0.224283), (0.060763, 0.002982, -0.224283), (0.37839, 0.002982, -0.831919), (0.060763, 0.002982, -0.831919), (0.060763, -0.035501, -0.224283), (0.37839, -0.0355, -0.224283), (0.060763, -0.035501, -0.831919), (0.37839, -0.0355, -0.831919), (-0.370714, -0.035501, -0.224283), (-0.053087, -0.035501, -0.224283), (-0.370714, -0.035501, -0.831919), (-0.053087, -0.035501, -0.831919), (-0.053087, 0.002982, -0.224283), (-0.370714, 0.002982, -0.224283), (-0.053087, 0.002982, -0.831919), (-0.370714, 0.002982, -0.831919), (0.37839, 0.002982, 0.588186), (0.060763, 0.002982, 0.588186), (0.37839, 0.002982, -0.120973), (0.060763, 0.002982, -0.120973), (-0.053087, 0.002982, 0.588186), (-0.370714, 0.002982, 0.588186), (-0.053087, 0.002982, -0.120973), (-0.370714, 0.002982, -0.120973), (-0.370714, -0.035501, 0.588186), (-0.053087, -0.035501, 0.588186), (-0.370714, -0.035501, -0.120973), (-0.053087, -0.035501, -0.120973), (0.060763, -0.035501, 0.588186), (0.37839, -0.0355, 0.588186), (0.060763, -0.035501, -0.120973), (0.37839, -0.0355, -0.120973), (0.35019, 0.010336, 0.866523), (0.088963, 0.010336, 0.866523), (0.35019, 0.010336, 0.720293), (0.088963, 0.010336, 0.720293), (-0.081287, 0.010336, 0.866523), (-0.342514, 0.010336, 0.866523), (-0.081287, 0.010336, 0.720293), (-0.342514, 0.010336, 0.720293), (-0.342514, -0.042855, 0.866523), (-0.081287, -0.042855, 0.866523), (-0.342514, -0.042855, 0.720293), (-0.081287, -0.042855, 0.720293), (0.088963, -0.042855, 0.866523), (0.35019, -0.042855, 0.866523), (0.088963, -0.042855, 0.720293), (0.35019, -0.042855, 0.720293), (0.35019, 0.010336, -0.250833), (0.088963, 0.010336, -0.250833), (0.35019, 0.010336, -0.805369), (0.088963, 0.010336, -0.805369), (0.088963, -0.042855, -0.250833), (0.35019, -0.042855, -0.250833), (0.088963, -0.042855, -0.805369), (0.35019, -0.042855, -0.805369), (-0.342514, -0.042855, -0.250833), (-0.081287, -0.042855, -0.250833), (-0.342514, -0.042855, -0.805369), (-0.081287, -0.042855, -0.805369), (-0.081287, 0.010336, -0.250833), (-0.342514, 0.010336, -0.250833), (-0.081287, 0.010336, -0.805369), (-0.342514, 0.010336, -0.805369), (0.35019, 0.010336, 0.561636), (0.088963, 0.010336, 0.561636), (0.35019, 0.010336, -0.094423), (0.088963, 0.010336, -0.094423), (-0.081287, 0.010336, 0.561636), (-0.342514, 0.010336, 0.561636), (-0.081287, 0.010336, -0.094423), (-0.342514, 0.010336, -0.094423), (-0.342514, -0.042855, 0.561636), (-0.081287, -0.042855, 0.561636), (-0.342514, -0.042855, -0.094423), (-0.081287, -0.042855, -0.094423), (0.088963, -0.042855, 0.561636), (0.35019, -0.042855, 0.561636), (0.088963, -0.042855, -0.094423), (0.35019, -0.042855, -0.094423), (0.444125, 0.01782, -0.091828), (0.446244, 0.014741, -0.086711), (0.394402, 0.01782, -0.091828), (0.392282, 0.014741, -0.086711), (0.449241, 0.014741, -0.089709), (0.444125, -0.050752, -0.091828), (0.449241, -0.047672, -0.089709), (0.444125, -0.050752, -0.251644), (0.449241, -0.047672, -0.253763), (0.446244, -0.047672, -0.086711), (0.394402, -0.050752, -0.091828), (0.392282, -0.047672, -0.086711), (0.389285, 0.014741, -0.089709), (0.389285, -0.047672, -0.089709), (0.394402, -0.050752, -0.251644), (0.389285, -0.047672, -0.253763), (0.444125, 0.01782, -0.251644), (0.446244, 0.014741, -0.25676), (0.394402, 0.01782, -0.251644), (0.392282, 0.014741, -0.25676), (0.449241, 0.014741, -0.253763), (0.446244, -0.047672, -0.25676), (0.392282, -0.047672, -0.25676), (0.389285, 0.014741, -0.253763)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-19.152563, 0.909516), (-19.15615, 0.918176), (-19.161224, 0.913103), (-19.151217, 0.877294), (-19.147774, 0.87229), (-19.066984, 0.87229), (-19.06354, 0.877294), (-19.166063, 0.918221), (-19.169685, 0.909471), (-19.160938, 0.913095), (-18.967602, 0.170402), (-18.972635, 0.173866), (-18.972635, -0.094249), (-18.967602, -0.090786), (-19.1694, 0.918175), (-19.178059, 0.91459), (-19.172985, 0.909517), (-19.074636, 0.173866), (-19.07967, 0.170402), (-19.07967, -0.090786), (-19.074636, -0.094249), (-19.186478, 0.913103), (-19.177816, 0.909517), (-19.181404, 0.918175), (-19.147774, 0.983706), (-19.151217, 0.978703), (-19.06354, 0.978703), (-19.066984, 0.983706), (-19.194895, 0.918177), (-19.191307, 0.909516), (-19.186234, 0.91459), (-19.068285, 0.253709), (-19.073318, 0.250245), (-19.073318, -0.010944), (-19.068285, -0.014407), (-18.96125, 0.250245), (-18.966286, 0.253709), (-18.966286, -0.014407), (-18.96125, -0.010944), (-19.203268, 0.909559), (-19.194696, 0.91311), (-19.199718, 0.918133), (-19.177975, 0.983705), (-19.18142, 0.978701), (-19.093746, 0.978701), (-19.09719, 0.983705), (-19.206656, 0.909513), (-19.20307, 0.918178), (-19.21173, 0.91459), (-19.220192, 0.918219), (-19.216568, 0.909473), (-19.211443, 0.914597), (-19.18142, 0.877296), (-19.177975, 0.872292), (-19.09719, 0.872292), (-19.093746, 0.877296), (-19.151217, 0.978703), (-19.151217, 0.877294), (-19.06354, 0.877294), (-19.06354, 0.978703), (-19.18142, 0.978701), (-19.18142, 0.877296), (-19.093746, 0.877296), (-19.093746, 0.978701), (-19.068285, -0.014407), (-18.966286, -0.014407), (-18.966286, 0.253709), (-19.068285, 0.253709), (-19.074636, -0.094249), (-18.972635, -0.094249), (-18.972635, 0.173866), (-19.074636, 0.173866), (-19.08865, 0.326016), (-19.010958, 0.326016), (-19.010958, 0.575729), (-19.08865, 0.575729), (-19.116962, 0.326016), (-19.039272, 0.326016), (-19.039272, 0.575728), (-19.116962, 0.575728), (-18.972635, 0.173866), (-18.972635, 0.178764), (-19.074636, 0.178764), (-19.074636, 0.173866), (-19.068285, 0.258607), (-19.068285, 0.253709), (-18.966286, 0.253709), (-18.966286, 0.258607), (-18.972635, -0.099148), (-18.972635, -0.094249), (-19.074636, -0.094249), (-19.074636, -0.099148), (-19.068285, -0.014407), (-19.068285, -0.019306), (-18.966286, -0.019306), (-18.966286, -0.014407)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_DoorwayDoor_2_1"
        {
            token outputs:surface.connect = </root/_materials/M_DoorwayDoor_2_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_DoorwayDoor_2_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_DoorwayDoor_2_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/TexturesCom_Medieval Metal_albedo_S.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_DoorwayDoor_2_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/TexturesCom_Medieval Metal_normalmap_S.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_DoorwayDoor_2_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

