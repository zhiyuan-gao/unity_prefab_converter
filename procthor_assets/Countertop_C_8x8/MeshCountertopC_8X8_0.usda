#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.0"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "CountertopC_8X8"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "CountertopC_8X8" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-1.220527, -1.226682, -0.517404), (1.217872, 1.231718, 0.418626)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 3, 3, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [44, 45, 9, 10, 0, 15, 16, 4, 2, 3, 6, 5, 0, 1, 8, 7, 3, 2, 10, 9, 14, 15, 0, 7, 6, 3, 11, 12, 3, 9, 13, 11, 2, 15, 14, 10, 16, 15, 2, 5, 46, 30, 29, 47, 26, 1, 0, 4, 4, 27, 28, 26, 6, 29, 30, 5, 32, 27, 4, 16, 6, 12, 31, 29, 5, 30, 32, 16, 7, 8, 45, 44, 8, 13, 9, 45, 14, 7, 44, 10, 27, 32, 30, 46, 31, 28, 47, 29, 28, 27, 46, 47, 12, 11, 17, 18, 11, 13, 19, 17, 19, 13, 8, 21, 20, 22, 23, 36, 37, 38, 39, 18, 17, 20, 21, 23, 22, 25, 24, 12, 18, 33, 31, 33, 28, 31, 33, 35, 28, 26, 24, 25, 1, 19, 8, 34, 40, 41, 42, 43, 19, 34, 37, 36, 35, 33, 40, 43, 8, 1, 37, 34, 1, 25, 38, 37, 25, 22, 39, 38, 22, 20, 36, 39, 20, 17, 19, 36, 18, 21, 40, 33, 21, 23, 41, 40, 23, 24, 42, 41, 24, 26, 43, 42, 26, 28, 35, 43]
            rel material:binding = </root/_materials/M_CountertopC_8X8_0>
            normal3f[] normals = [(0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (2.9278056e-7, 0, 1), (-1.8823204e-7, 0, 1), (1.7685283e-8, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, -3.3194854e-7, 5.5339535e-7), (-1, 0, -8.1792007e-7), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (8.783995e-7, 0, 1), (2.9278056e-7, 0, 1), (0, 0, 1), (0, 0, 1), (9.069084e-7, 0, -1), (-8.060247e-7, 0, -1), (-8.05888e-7, 0, -1), (9.0667913e-7, 0, -1), (-8.060247e-7, 0, -1), (-8.059904e-7, 0, -1), (-8.0599045e-7, 0, -1), (-8.05888e-7, 0, -1), (0.0000011712546, 0, 1), (2.9278056e-7, 0, 1), (8.783995e-7, 0, 1), (0.0000011712049, 0, 1), (-1.8823204e-7, 0, 1), (2.9278056e-7, 0, 1), (0.0000011712546, 0, 1), (-8.061408e-7, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 2.477228e-8, 0), (-1, -5.37327e-7, 0), (-1, -5.37327e-7, 0), (-1, -5.37327e-7, 0), (-1, -5.37327e-7, 0), (-5.9574097e-7, 0, 1), (1.7685185e-8, 0, 1), (1.7685283e-8, 0, 1), (-1.8823204e-7, 0, 1), (9.069084e-7, 0, -1), (9.0667913e-7, 0, -1), (9.0687985e-7, 0, -1), (9.067654e-7, 0, -1), (-8.061408e-7, 0, 1), (-8.0601376e-7, 0, 1), (-5.9574097e-7, 0, 1), (-1.8823204e-7, 0, 1), (-1, 0, 0), (-1, 0, -8.1792007e-7), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (-8.0599045e-7, 0, -1), (-8.059904e-7, 0, -1), (0, 0, -1), (8.783995e-7, 0, 1), (0, 0, 1), (0, 0, 1), (0.0000011712049, 0, 1), (1.7685185e-8, 0, 1), (-5.9574097e-7, 0, 1), (-8.0601376e-7, 0, 1), (0, 0, 1), (9.0687985e-7, 0, -1), (0, 0, -1), (0, 0, -1), (9.067654e-7, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0, -1, 4.0286063e-9), (0, -1, 0), (0, -1, 2.6266977e-9), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0.0000033485742, -1, 0), (0.0000033485742, -1, 0), (0.0000033485742, -1, 0), (0.0000033485742, -1, 0), (0.005997573, 0.005602605, -0.9999663), (-0.005876718, 0.005633329, -0.99996686), (-0.005878351, 0.0056309127, -0.99996686), (0.005999951, 0.00559986, -0.9999663), (-0.00017918936, -0.00021334672, -1), (0.00017916344, -0.00021334722, -0.9999999), (0.00017918627, -0.00021331609, -0.99999994), (-0.00017921107, -0.00021331712, -0.99999994), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (0, -1, 0), (0, -1, 0), (0, -0.99999994, 0), (0, -1, 0), (0, -0.99999994, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 4.0286063e-9), (0, -1, 2.6266977e-9), (0, -1, 6.655682e-9), (-0.00000334858, -1, 0), (-0.00000334858, -1, 0), (-0.00000334858, -1, 0), (-0.00000334858, -1, 0), (-0.0055053052, 0.0009989082, -0.9999843), (-0.00011303929, 0.002145844, -0.9999977), (-0.00011303929, 0.002145844, -0.9999977), (-0.0072013168, 0.0005995726, -0.99997395), (0.00011303929, 0.002145844, -0.9999977), (0.005505113, 0.0009989064, -0.9999843), (0.0070763985, 0.00070448604, -0.9999747), (0.00011303929, 0.002145844, -0.9999977), (-1, 0, -8.1792007e-7), (-1, -3.3194854e-7, 5.5339535e-7), (-1, -3.3917684e-7, -6.347515e-7), (-1, 0, -0.00000245376), (-1, -3.3194854e-7, 5.5339535e-7), (-1, -8.40714e-7, 0.000002054997), (-1, -8.40714e-7, 0.000002054997), (-1, -3.3917684e-7, -6.347515e-7), (0.00017918627, -0.00021331609, -0.99999994), (0.00017916344, -0.00021334722, -0.9999999), (0.0003583705, 0.000030766358, -0.99999994), (0.0003583705, 0.000030766358, -0.99999994), (0.9999998, -0.0005648412, 0), (0.9999998, -0.0005648412, 0), (0.9999998, -0.0005648412, 0), (0.9999998, -0.0005648412, 0), (-0.005878351, 0.0056309127, -0.99996686), (-0.005876718, 0.005633329, -0.99996686), (-0.0055053052, 0.0009989082, -0.9999843), (-0.0072013168, 0.0005995726, -0.99997395), (0.005997573, 0.005602605, -0.9999663), (0.005999951, 0.00559986, -0.9999663), (0.0070763985, 0.00070448604, -0.9999747), (0.005505113, 0.0009989064, -0.9999843), (-0.9999998, -0.0005637263, 0), (-0.9999998, -0.0005637263, 0), (-0.9999998, -0.0005637263, 0), (-0.9999998, -0.0005637263, 0), (-0.00017918936, -0.00021334672, -1), (-0.00017921107, -0.00021331712, -0.99999994), (-0.0003584217, 0.00003076652, -0.9999999), (-0.0003584217, 0.00003076652, -0.9999999), (1, 6.273985e-8, 0), (1, 2.477228e-8, 0), (1, 2.5311705e-8, 0), (1, 6.273985e-8, 0), (1, 2.477228e-8, 0), (1, 0, 0), (1, 0, 0), (1, 2.5311705e-8, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-1.220527, 1.231718, 0.418626), (-1.220527, 1.231718, 0.388626), (-0.610925, 0.622119, 0.418626), (-0.610925, 0.622119, 0.388626), (1.217872, 1.231718, 0.418626), (0.608274, 0.622119, 0.418626), (0.608274, 0.622119, 0.388626), (-1.220527, -1.206682, 0.418626), (-1.220527, -1.206682, 0.388626), (-0.610925, -1.226682, 0.388626), (-0.610925, -1.226682, 0.418626), (-0.630925, 0.642123, 0.388626), (0.628272, 0.642123, 0.388626), (-0.630925, -1.206682, 0.388626), (-0.630925, -1.206682, 0.418626), (-0.630925, 0.642123, 0.418626), (0.628272, 0.642123, 0.418626), (-0.630925, 0.642123, -0.437404), (0.628272, 0.642123, -0.437404), (-0.630925, -1.206682, -0.437404), (-0.649888, 0.661084, -0.437143), (0.647237, 0.661084, -0.437143), (-0.649888, 0.661084, -0.517143), (0.647237, 0.661084, -0.517143), (1.217872, 1.231718, -0.517404), (-1.220527, 1.231718, -0.517404), (1.217872, 1.231718, 0.388626), (1.217872, -1.206682, 0.418626), (1.217872, -1.206682, 0.388626), (0.608275, -1.226682, 0.388626), (0.608275, -1.226682, 0.418626), (0.628272, -1.206682, 0.388626), (0.628272, -1.206682, 0.418626), (0.628272, -1.206682, -0.437404), (-1.220525, -1.206682, -0.437273), (1.217872, -1.206682, -0.437273), (-0.650926, -1.176681, -0.437273), (-1.220525, -1.176683, -0.437273), (-1.220527, -1.176683, -0.517404), (-0.650926, -1.176681, -0.517274), (0.648273, -1.176681, -0.437273), (0.648273, -1.176681, -0.517274), (1.217872, -1.176683, -0.517404), (1.217872, -1.176683, -0.437273), (-1.220527, -1.226682, 0.418626), (-1.220527, -1.226682, 0.388626), (1.217872, -1.226682, 0.418626), (1.217872, -1.226682, 0.388626)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-9.032858, 1.086886), (-9.079729, 1.086886), (-9.079729, 0.134396), (-9.032858, 0.134396), (-11.634228, 2.193506), (-10.712973, 1.272264), (-8.745479, 1.272263), (-7.824232, 2.193503), (-9.020107, 1.630301), (-9.066982, 1.630301), (-9.066982, -0.274632), (-9.020107, -0.274632), (-9.427312, 2.19351), (-9.474187, 2.19351), (-9.474186, -1.6165), (-9.427312, -1.6165), (-9.041485, -0.697089), (-8.99461, -0.697089), (-8.99461, 2.191556), (-9.041485, 2.191556), (-10.712972, -1.616495), (-10.712973, 1.272264), (-11.634228, 2.193506), (-11.634228, -1.616495), (-10.649535, -0.681835), (-10.649535, 1.223178), (-10.680792, 1.254426), (-10.680792, -0.713084), (-10.649535, 1.223178), (-7.760763, 1.223178), (-7.792011, 1.254426), (-10.680792, 1.254426), (-10.681725, 1.241006), (-10.712973, 1.272264), (-10.712972, -1.616495), (-10.681725, -1.647743), (-8.745479, 1.272263), (-10.712973, 1.272264), (-10.681725, 1.241006), (-8.776728, 1.241006), (-9.045604, 0.134402), (-9.045604, 1.086878), (-9.09248, 1.086878), (-9.09248, 0.134402), (-8.981862, -1.634376), (-8.981862, 2.175729), (-9.028735, 2.175729), (-9.028735, -1.634376), (-9.41367, -1.647788), (-9.41367, 2.162301), (-9.460544, 2.162301), (-9.460544, -1.647788), (-9.054234, 2.191604), (-9.054234, -0.697137), (-9.00736, -0.697137), (-9.00736, 2.191604), (-8.745479, -1.616495), (-7.824233, -1.616496), (-7.824232, 2.193503), (-8.745479, 1.272263), (-10.649535, -0.681835), (-10.680792, -0.713084), (-7.792011, -0.713083), (-7.760763, -0.681835), (-8.776728, 1.241006), (-8.776728, -1.647743), (-8.745479, -1.616495), (-8.745479, 1.272263), (-9.427312, -1.6165), (-9.474186, -1.6165), (-9.474186, -1.647748), (-9.427312, -1.647748), (-7.792011, 2.175689), (-7.792011, 1.254426), (-7.760763, 1.223178), (-7.760762, 2.175689), (-10.712972, -1.616495), (-11.634228, -1.616495), (-11.634228, -1.647743), (-10.681725, -1.647743), (-7.824233, -1.616496), (-8.745479, -1.616495), (-8.776728, -1.647743), (-7.824233, -1.647744), (-7.792011, -0.713083), (-7.792011, -1.634337), (-7.760764, -1.634337), (-7.760763, -0.681835), (-9.460544, 2.162301), (-9.41367, 2.162301), (-9.41367, 2.19355), (-9.460544, 2.19355), (-19.08308, 0.431835), (-20.066828, 0.431835), (-20.066828, -0.213505), (-19.08308, -0.213505), (-18.90718, 0.811804), (-20.35156, 0.811804), (-20.35156, 0.16647), (-18.90718, 0.16647), (-19.448729, 0.250391), (-20.094063, 0.250391), (-20.094063, -0.210236), (-19.071762, 0.230171), (-20.085148, 0.230171), (-20.085148, 0.167671), (-19.071762, 0.167671), (-19.63202, 0.234529), (-20.077024, 0.234529), (-20.077026, 0.17193), (-19.63202, 0.172029), (-18.737825, -0.576744), (-19.721582, -0.576744), (-19.736397, -0.591564), (-18.72301, -0.591564), (-18.723011, 0.592237), (-19.736393, 0.592237), (-20.182205, 0.146431), (-18.277205, 0.146431), (-20.35156, 0.653196), (-20.35156, 0.007862), (-18.90718, 0.007862), (-18.90718, 0.653196), (-19.455729, -0.095051), (-20.101065, 0.365572), (-20.101065, -0.095051), (-19.455729, -0.095051), (-19.45583, 0.365572), (-20.101065, 0.365572), (-18.277205, 0.27245), (-18.277205, 0.980286), (-20.182203, 0.980286), (-20.182203, 0.272449), (-19.448729, 0.250391), (-20.094063, -0.210236), (-19.44883, -0.210232), (-20.077026, 0.255968), (-20.077026, 0.193468), (-19.63202, 0.193369), (-19.63202, 0.255968), (-19.721582, 0.867647), (-20.18221, 0.867647), (-20.18221, 0.844208), (-19.737207, 0.844208), (-18.277197, 0.867647), (-18.737825, 0.867647), (-18.7222, 0.844208), (-18.277197, 0.844208), (-18.277205, 1.153742), (-20.182205, 1.153742), (-18.300642, 0.508507), (-18.277205, 0.508507), (-20.182205, 1.153742), (-20.182205, 0.445906), (-18.300642, 0.445906), (-18.300642, 0.508507), (-18.740238, 0.512734), (-19.186045, 0.958544), (-20.621796, 0.957733), (-20.621798, 0.512733), (-18.910471, 0.209564), (-18.910471, 0.272064), (-20.346233, 0.271959), (-20.346233, 0.209459), (-19.736397, -0.591564), (-19.721582, -0.576744), (-19.721582, 0.867647), (-19.737207, 0.844208), (-18.737825, -0.576744), (-18.72301, -0.591564), (-18.7222, 0.844208), (-18.737825, 0.867647), (-20.346233, 0.251139), (-20.346233, 0.188639), (-18.91047, 0.188534), (-18.91047, 0.251034), (-19.186043, 0.40127), (-18.740234, 0.847076), (-20.6218, 0.847076), (-20.621798, 0.402079), (-18.731285, 0.524141), (-18.731285, 1.231977), (-20.61285, 0.586742), (-20.61285, 0.524141), (-18.731285, 1.231977), (-20.636288, 1.231977), (-20.636288, 0.586742), (-20.61285, 0.586742)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_CountertopC_8X8_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
                rel material:binding = </root/_materials/M_CountertopC_8X8_0>
            }

            def GeomSubset "M_CountertopC_8X8_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47]
                rel material:binding = </root/_materials/M_CountertopC_8X8_1>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_CountertopC_8X8_0"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopC_8X8_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopC_8X8_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/marbleBase2.jpg@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopC_8X8_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_CountertopC_8X8_1"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopC_8X8_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopC_8X8_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_CountertopC_8X8_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/DarkWood2.tif@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopC_8X8_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopC_8X8_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

