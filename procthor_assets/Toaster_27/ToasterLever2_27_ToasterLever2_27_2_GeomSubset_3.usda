#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "ToasterLever2_27_ToasterLever2_27_2_GeomSubset_3"
    {
        def Mesh "ToasterLever2_27_ToasterLever2_27_2_GeomSubset_3"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4]
            int[] faceVertexIndices = [12, 13, 15, 14]
            rel material:binding = </root/_materials/M_ToasterLever2_27_3>
            normal3f[] normals = [(0.92003196, -4.0215873e-8, -0.39184323), (-4.0215873e-8, -0.92003196, -0.39184323), (-0.92003196, 4.0215873e-8, -0.39184323), (4.0215873e-8, 0.92003196, -0.39184323)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.061388, -0.159666, 0.048092), (-0.061388, -0.156172, 0.048092), (-0.057892, -0.159666, 0.048092), (-0.057892, -0.156172, 0.048092), (-0.061388, -0.159666, 0.048092), (-0.061388, -0.156172, 0.048092), (-0.057892, -0.159666, 0.048092), (-0.057892, -0.156172, 0.048092), (-0.061388, -0.159666, 0.048092), (-0.061388, -0.156172, 0.048092), (-0.057892, -0.159666, 0.048092), (-0.057892, -0.156172, 0.048092), (-0.061388, -0.159666, 0.048092), (-0.061388, -0.156172, 0.048092), (-0.057892, -0.159666, 0.048092), (-0.057892, -0.156172, 0.048092), (-0.061388, -0.159666, 0.048092), (-0.061388, -0.156172, 0.048092), (-0.057892, -0.159666, 0.048092), (-0.057892, -0.156172, 0.048092), (-0.061388, -0.159666, 0.048092), (-0.061388, -0.156172, 0.048092), (-0.057892, -0.159666, 0.048092), (-0.057892, -0.156172, 0.048092), (-0.061713, -0.167207, 0.051775), (-0.061713, -0.167207, 0.045211), (-0.057568, -0.167207, 0.051775), (-0.057568, -0.167207, 0.045211), (-0.05964, -0.167207, 0.045211), (-0.05964, -0.167207, 0.051775), (-0.070397, -0.170805, 0.051775), (-0.070908, -0.171016, 0.05155), (-0.071119, -0.171104, 0.051009), (-0.068912, -0.174406, 0.051009), (-0.06875, -0.174245, 0.05155), (-0.06836, -0.173855, 0.051775), (-0.06531, -0.175892, 0.051775), (-0.065522, -0.176403, 0.05155), (-0.065609, -0.176614, 0.051009), (-0.061713, -0.177389, 0.051009), (-0.061691, -0.177164, 0.05155), (-0.061637, -0.176623, 0.051775), (-0.071128, -0.167132, 0.051775), (-0.07167, -0.167185, 0.05155), (-0.071894, -0.167207, 0.051009), (-0.071119, -0.171104, 0.045977), (-0.070908, -0.171016, 0.045435), (-0.070397, -0.170805, 0.045211), (-0.068912, -0.174406, 0.045977), (-0.06875, -0.174245, 0.045435), (-0.06836, -0.173855, 0.045211), (-0.065609, -0.176614, 0.045977), (-0.065522, -0.176403, 0.045435), (-0.06531, -0.175892, 0.045211), (-0.061637, -0.176623, 0.045211), (-0.061691, -0.177164, 0.045435), (-0.061713, -0.177389, 0.045977), (-0.071894, -0.167207, 0.045977), (-0.07167, -0.167185, 0.045435), (-0.071128, -0.167132, 0.045211), (-0.05964, -0.177389, 0.051009), (-0.05964, -0.177164, 0.05155), (-0.05964, -0.176623, 0.051775), (-0.057643, -0.176623, 0.051775), (-0.057589, -0.177164, 0.05155), (-0.057568, -0.177389, 0.051009), (-0.053671, -0.176614, 0.051009), (-0.053759, -0.176403, 0.05155), (-0.05397, -0.175892, 0.051775), (-0.05964, -0.177389, 0.045977), (-0.05964, -0.177164, 0.045435), (-0.05964, -0.176623, 0.045211), (-0.053671, -0.176614, 0.045977), (-0.053759, -0.176403, 0.045435), (-0.05397, -0.175892, 0.045211), (-0.057568, -0.177389, 0.045977), (-0.057589, -0.177164, 0.045435), (-0.057643, -0.176623, 0.045211), (-0.050368, -0.174406, 0.051009), (-0.05053, -0.174245, 0.05155), (-0.05092, -0.173855, 0.051775), (-0.050368, -0.174406, 0.045977), (-0.05053, -0.174245, 0.045435), (-0.05092, -0.173855, 0.045211), (-0.048161, -0.171104, 0.051009), (-0.048373, -0.171016, 0.05155), (-0.048883, -0.170805, 0.051775), (-0.048161, -0.171104, 0.045977), (-0.048373, -0.171016, 0.045435), (-0.048883, -0.170805, 0.045211), (-0.047386, -0.167207, 0.051009), (-0.047611, -0.167185, 0.05155), (-0.048152, -0.167132, 0.051775), (-0.048152, -0.167132, 0.045211), (-0.047611, -0.167185, 0.045435), (-0.047386, -0.167207, 0.045977), (-0.071128, -0.155745, 0.05155), (-0.071128, -0.156286, 0.051775), (-0.07167, -0.156286, 0.05155), (-0.071894, -0.156286, 0.051009), (-0.07167, -0.155745, 0.051009), (-0.071128, -0.15552, 0.051009), (-0.071128, -0.155745, 0.045435), (-0.071128, -0.15552, 0.045977), (-0.07167, -0.155745, 0.045977), (-0.071894, -0.156286, 0.045977), (-0.07167, -0.156286, 0.045435), (-0.071128, -0.156286, 0.045211), (-0.061713, -0.156286, 0.051775), (-0.061713, -0.155745, 0.05155), (-0.061713, -0.15552, 0.051009), (-0.061713, -0.156286, 0.045211), (-0.061713, -0.155745, 0.045435), (-0.061713, -0.15552, 0.045977), (-0.048152, -0.155745, 0.05155), (-0.048152, -0.15552, 0.051009), (-0.047611, -0.155745, 0.051009), (-0.047386, -0.156286, 0.051009), (-0.047611, -0.156286, 0.05155), (-0.048152, -0.156286, 0.051775), (-0.048152, -0.155745, 0.045435), (-0.048152, -0.156286, 0.045211), (-0.047611, -0.156286, 0.045435), (-0.047386, -0.156286, 0.045977), (-0.047611, -0.155745, 0.045977), (-0.048152, -0.15552, 0.045977), (-0.05964, -0.15552, 0.051009), (-0.05964, -0.155745, 0.05155), (-0.05964, -0.156286, 0.051775), (-0.057568, -0.15552, 0.051009), (-0.057568, -0.155745, 0.05155), (-0.057568, -0.156286, 0.051775), (-0.05964, -0.156286, 0.045211), (-0.05964, -0.155745, 0.045435), (-0.05964, -0.15552, 0.045977), (-0.057568, -0.156286, 0.045211), (-0.057568, -0.155745, 0.045435), (-0.057568, -0.15552, 0.045977), (-0.07157, -0.155845, 0.051451), (-0.07157, -0.155845, 0.045535), (-0.04771, -0.155845, 0.051451), (-0.04771, -0.155845, 0.045535), (-0.050368, -0.174406, 0.047156), (-0.053671, -0.176614, 0.047156), (-0.057568, -0.177389, 0.047156), (-0.05964, -0.177389, 0.047156), (-0.061713, -0.177389, 0.047156), (-0.065609, -0.176614, 0.047156), (-0.068912, -0.174406, 0.047156), (-0.071119, -0.171104, 0.047156), (-0.071894, -0.167207, 0.047156), (-0.071894, -0.156286, 0.047156), (-0.07167, -0.155745, 0.047156), (-0.071128, -0.15552, 0.047156), (-0.061713, -0.15552, 0.047156), (-0.05964, -0.15552, 0.047156), (-0.057568, -0.15552, 0.047156), (-0.048152, -0.15552, 0.047156), (-0.047611, -0.155745, 0.047156), (-0.047386, -0.156286, 0.047156), (-0.047386, -0.167207, 0.047156), (-0.048161, -0.171104, 0.047156), (-0.050368, -0.174406, 0.049829), (-0.053671, -0.176614, 0.049829), (-0.057568, -0.177389, 0.049829), (-0.05964, -0.177389, 0.049829), (-0.061713, -0.177389, 0.049829), (-0.065609, -0.176614, 0.049829), (-0.068912, -0.174406, 0.049829), (-0.071119, -0.171104, 0.049829), (-0.071894, -0.167207, 0.049829), (-0.071894, -0.156286, 0.049829), (-0.07167, -0.155745, 0.049829), (-0.071128, -0.15552, 0.049829), (-0.061713, -0.15552, 0.049829), (-0.05964, -0.15552, 0.049829), (-0.057568, -0.15552, 0.049829), (-0.048152, -0.15552, 0.049829), (-0.047611, -0.155745, 0.049829), (-0.047386, -0.156286, 0.049829), (-0.047386, -0.167207, 0.049829), (-0.048161, -0.171104, 0.049829), (-0.062634, -0.156556, 0.045978), (-0.062634, -0.145542, 0.045978), (-0.062634, -0.156556, 0.049683), (-0.062634, -0.145542, 0.049683), (-0.056646, -0.156556, 0.049683), (-0.056646, -0.145542, 0.049683), (-0.056646, -0.156556, 0.045978), (-0.056646, -0.145542, 0.045978)]
            bool[] primvars:sharp_face = [0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-14.304933, -18.40213), (-14.241851, -18.40213), (-14.241851, -18.339052), (-14.304933, -18.339052)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_ToasterLever2_27_3"
        {
            token outputs:surface.connect = </root/_materials/M_ToasterLever2_27_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0, 0, 0)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }
    }
}

