#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "ToasterLever1_27_ToasterLever1_27_1_GeomSubset_4"
    {
        def Mesh "ToasterLever1_27_ToasterLever1_27_1_GeomSubset_4"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4]
            int[] faceVertexIndices = [16, 17, 19, 18]
            rel material:binding = </root/_materials/M_ToasterLever1_27_4>
            normal3f[] normals = [(0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.057332, -0.159666, 0.048092), (0.057332, -0.156171, 0.048092), (0.060828, -0.159666, 0.048092), (0.060828, -0.156171, 0.048092), (0.057332, -0.159666, 0.048092), (0.057332, -0.156171, 0.048092), (0.060828, -0.159666, 0.048092), (0.060828, -0.156171, 0.048092), (0.057332, -0.159666, 0.048092), (0.057332, -0.156171, 0.048092), (0.060828, -0.159666, 0.048092), (0.060828, -0.156171, 0.048092), (0.057332, -0.159666, 0.048092), (0.057332, -0.156171, 0.048092), (0.060828, -0.159666, 0.048092), (0.060828, -0.156171, 0.048092), (0.057332, -0.159666, 0.048092), (0.057332, -0.156171, 0.048092), (0.060828, -0.159666, 0.048092), (0.060828, -0.156171, 0.048092), (0.057332, -0.159666, 0.048092), (0.057332, -0.156171, 0.048092), (0.060828, -0.159666, 0.048092), (0.060828, -0.156171, 0.048092), (0.057007, -0.167207, 0.051775), (0.057007, -0.167207, 0.045211), (0.061153, -0.167207, 0.051775), (0.061153, -0.167207, 0.045211), (0.05908, -0.167207, 0.045211), (0.05908, -0.167207, 0.051775), (0.048323, -0.170804, 0.051775), (0.047813, -0.171015, 0.05155), (0.047601, -0.171103, 0.051009), (0.049808, -0.174406, 0.051009), (0.04997, -0.174245, 0.05155), (0.05036, -0.173854, 0.051775), (0.05341, -0.175892, 0.051775), (0.053199, -0.176402, 0.05155), (0.053111, -0.176613, 0.051009), (0.057007, -0.177388, 0.051009), (0.057029, -0.177164, 0.05155), (0.057083, -0.176622, 0.051775), (0.047592, -0.167132, 0.051775), (0.047051, -0.167185, 0.05155), (0.046826, -0.167207, 0.051009), (0.047601, -0.171103, 0.045977), (0.047813, -0.171015, 0.045435), (0.048323, -0.170804, 0.045211), (0.049808, -0.174406, 0.045977), (0.04997, -0.174245, 0.045435), (0.05036, -0.173854, 0.045211), (0.053111, -0.176613, 0.045977), (0.053199, -0.176402, 0.045435), (0.05341, -0.175892, 0.045211), (0.057083, -0.176622, 0.045211), (0.057029, -0.177164, 0.045435), (0.057007, -0.177388, 0.045977), (0.046826, -0.167207, 0.045977), (0.047051, -0.167185, 0.045435), (0.047592, -0.167132, 0.045211), (0.05908, -0.177388, 0.051009), (0.05908, -0.177164, 0.05155), (0.05908, -0.176622, 0.051775), (0.061077, -0.176622, 0.051775), (0.06113, -0.177164, 0.05155), (0.061153, -0.177388, 0.051009), (0.065049, -0.176613, 0.051009), (0.064961, -0.176402, 0.05155), (0.06475, -0.175892, 0.051775), (0.05908, -0.177388, 0.045977), (0.05908, -0.177164, 0.045435), (0.05908, -0.176622, 0.045211), (0.065049, -0.176613, 0.045977), (0.064961, -0.176402, 0.045435), (0.06475, -0.175892, 0.045211), (0.061153, -0.177388, 0.045977), (0.06113, -0.177164, 0.045435), (0.061077, -0.176622, 0.045211), (0.068352, -0.174406, 0.051009), (0.06819, -0.174245, 0.05155), (0.067799, -0.173854, 0.051775), (0.068352, -0.174406, 0.045977), (0.06819, -0.174245, 0.045435), (0.067799, -0.173854, 0.045211), (0.070559, -0.171103, 0.051009), (0.070347, -0.171015, 0.05155), (0.069837, -0.170804, 0.051775), (0.070559, -0.171103, 0.045977), (0.070347, -0.171015, 0.045435), (0.069837, -0.170804, 0.045211), (0.071334, -0.167207, 0.051009), (0.071109, -0.167185, 0.05155), (0.070568, -0.167132, 0.051775), (0.070568, -0.167132, 0.045211), (0.071109, -0.167185, 0.045435), (0.071334, -0.167207, 0.045977), (0.047592, -0.155744, 0.05155), (0.047592, -0.156286, 0.051775), (0.047051, -0.156286, 0.05155), (0.046826, -0.156286, 0.051009), (0.047051, -0.155744, 0.051009), (0.047592, -0.15552, 0.051009), (0.047592, -0.155744, 0.045435), (0.047592, -0.15552, 0.045977), (0.047051, -0.155744, 0.045977), (0.046826, -0.156286, 0.045977), (0.047051, -0.156286, 0.045435), (0.047592, -0.156286, 0.045211), (0.057007, -0.156286, 0.051775), (0.057007, -0.155744, 0.05155), (0.057007, -0.15552, 0.051009), (0.057007, -0.156286, 0.045211), (0.057007, -0.155744, 0.045435), (0.057007, -0.15552, 0.045977), (0.070568, -0.155744, 0.05155), (0.070568, -0.15552, 0.051009), (0.071109, -0.155744, 0.051009), (0.071334, -0.156286, 0.051009), (0.071109, -0.156286, 0.05155), (0.070568, -0.156286, 0.051775), (0.070568, -0.155744, 0.045435), (0.070568, -0.156286, 0.045211), (0.071109, -0.156286, 0.045435), (0.071334, -0.156286, 0.045977), (0.071109, -0.155744, 0.045977), (0.070568, -0.15552, 0.045977), (0.05908, -0.15552, 0.051009), (0.05908, -0.155744, 0.05155), (0.05908, -0.156286, 0.051775), (0.061153, -0.15552, 0.051009), (0.061153, -0.155744, 0.05155), (0.061153, -0.156286, 0.051775), (0.05908, -0.156286, 0.045211), (0.05908, -0.155744, 0.045435), (0.05908, -0.15552, 0.045977), (0.061153, -0.156286, 0.045211), (0.061153, -0.155744, 0.045435), (0.061153, -0.15552, 0.045977), (0.04715, -0.155844, 0.051451), (0.04715, -0.155844, 0.045535), (0.07101, -0.155844, 0.051451), (0.07101, -0.155844, 0.045535), (0.068352, -0.174406, 0.047156), (0.065049, -0.176613, 0.047156), (0.061153, -0.177388, 0.047156), (0.05908, -0.177388, 0.047156), (0.057007, -0.177388, 0.047156), (0.053111, -0.176613, 0.047156), (0.049808, -0.174406, 0.047156), (0.047601, -0.171103, 0.047156), (0.046826, -0.167207, 0.047156), (0.046826, -0.156286, 0.047156), (0.047051, -0.155744, 0.047156), (0.047592, -0.15552, 0.047156), (0.057007, -0.15552, 0.047156), (0.05908, -0.15552, 0.047156), (0.061153, -0.15552, 0.047156), (0.070568, -0.15552, 0.047156), (0.071109, -0.155744, 0.047156), (0.071334, -0.156286, 0.047156), (0.071334, -0.167207, 0.047156), (0.070559, -0.171103, 0.047156), (0.068352, -0.174406, 0.049829), (0.065049, -0.176613, 0.049829), (0.061153, -0.177388, 0.049829), (0.05908, -0.177388, 0.049829), (0.057007, -0.177388, 0.049829), (0.053111, -0.176613, 0.049829), (0.049808, -0.174406, 0.049829), (0.047601, -0.171103, 0.049829), (0.046826, -0.167207, 0.049829), (0.046826, -0.156286, 0.049829), (0.047051, -0.155744, 0.049829), (0.047592, -0.15552, 0.049829), (0.057007, -0.15552, 0.049829), (0.05908, -0.15552, 0.049829), (0.061153, -0.15552, 0.049829), (0.070568, -0.15552, 0.049829), (0.071109, -0.155744, 0.049829), (0.071334, -0.156286, 0.049829), (0.071334, -0.167207, 0.049829), (0.070559, -0.171103, 0.049829), (0.056086, -0.156556, 0.045978), (0.056086, -0.145541, 0.045978), (0.056086, -0.156556, 0.049683), (0.056086, -0.145541, 0.049683), (0.062074, -0.156556, 0.049683), (0.062074, -0.145541, 0.049683), (0.062074, -0.156556, 0.045978), (0.062074, -0.145541, 0.045978)]
            bool[] primvars:sharp_face = [0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-0.024476, -18.597717), (0.766515, -18.597717), (0.766515, -17.806725), (-0.024476, -17.806725)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_ToasterLever1_27_4"
        {
            token outputs:surface.connect = </root/_materials/M_ToasterLever1_27_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_ToasterLever1_27_4/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Toaster_Decal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_ToasterLever1_27_4/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

