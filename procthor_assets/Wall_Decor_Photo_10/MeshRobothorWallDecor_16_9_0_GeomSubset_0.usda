#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshRobothorWallDecor_16_9_0_GeomSubset_0"
    {
        def Mesh "MeshRobothorWallDecor_16_9_0_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 3, 3]
            int[] faceVertexIndices = [0, 1, 3, 2, 28, 30, 29, 28, 31, 30]
            rel material:binding = </root/_materials/M_RobothorWallDecor_16_9_0>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0.000022972345, -0.99999994, -0.00038863963), (0.000022933915, -0.99999994, -0.0003885573), (-0.0000225495, -0.99999994, -0.00038892133), (0.000022972345, -0.99999994, -0.00038863963), (-0.000022511691, -0.99999994, -0.00038897723), (0.000022933915, -0.99999994, -0.0003885573)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.00183, 0.014576, -0.42052), (0.00223, 0.014576, -0.42052), (0.00183, 0.014998, -0.42052), (0.00223, 0.014998, -0.42052), (0.00183, 0.014576, -0.42052), (0.00223, 0.014576, -0.42052), (0.00183, 0.014998, -0.42052), (0.00223, 0.014998, -0.42052), (0.00183, 0.014576, -0.42052), (0.00223, 0.014576, -0.42052), (0.00183, 0.014998, -0.42052), (0.00223, 0.014998, -0.42052), (-0.353965, -0.001031, -0.209333), (-0.353965, 0.014933, -0.209327), (-0.353965, 0.014787, 0.212282), (-0.353965, -0.001176, 0.212276), (0.357182, 0.014933, -0.209327), (0.357182, 0.014787, 0.212282), (0.357182, -0.001031, -0.209333), (0.357182, -0.001176, 0.212276), (0.347116, -0.001174, 0.200727), (0.347116, 0.002888, 0.200728), (-0.343899, 0.002888, 0.200728), (-0.343899, -0.001174, 0.200727), (-0.343899, -0.001033, -0.197783), (0.347116, -0.001033, -0.197783), (0.347116, 0.003029, -0.197782), (-0.343899, 0.003029, -0.197782), (0.344024, 0.003028, -0.195522), (-0.340807, 0.003028, -0.195522), (-0.340807, 0.002889, 0.198467), (0.344024, 0.002889, 0.198467)]
            bool[] primvars:sharp_face = [0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-9.477952, -9.755642), (-9.477952, -9.75594), (-9.477654, -9.75594), (-9.477654, -9.755642), (-9, 0), (-10, 1), (-10, 0), (-9, 0), (-9, 1), (-10, 1)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_RobothorWallDecor_16_9_0"
        {
            token outputs:surface.connect = </root/_materials/M_RobothorWallDecor_16_9_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_RobothorWallDecor_16_9_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Wall_Decor_Photo_10_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_RobothorWallDecor_16_9_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

