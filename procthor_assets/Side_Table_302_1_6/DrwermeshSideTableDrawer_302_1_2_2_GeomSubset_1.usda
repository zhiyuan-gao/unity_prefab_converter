#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "DrwermeshSideTableDrawer_302_1_2_2_GeomSubset_1"
    {
        def Mesh "DrwermeshSideTableDrawer_302_1_2_2_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [52, 54, 53, 52, 55, 54, 56, 55, 52, 56, 57, 55, 55, 58, 54, 55, 59, 58, 57, 59, 55, 57, 60, 59, 59, 61, 58, 59, 62, 61, 60, 62, 59, 60, 63, 62, 64, 66, 65, 64, 67, 66, 63, 52, 62, 63, 56, 52, 62, 52, 53, 62, 53, 61, 66, 61, 53, 66, 67, 61, 65, 53, 54, 65, 66, 53, 64, 54, 58, 64, 65, 54, 67, 58, 61, 67, 64, 58]
            rel material:binding = </root/_materials/M_SideTableDrawer_302_1_2_1>
            normal3f[] normals = [(-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (0.99999994, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -0.99999994), (6.975172e-9, 0.6003244, -0.7997566), (0, 0.60058665, -0.7995597), (2.667366e-8, 0.6002094, -0.79984283), (6.975172e-9, 0.6003244, -0.7997566), (0, 0.60058653, -0.7995598), (0, 0.60058665, -0.7995597), (-0.70709103, 0.7071225, 0.00002145388), (-0.7068479, 0.7073655, 0.0000012474568), (-0.70709896, 0.70711464, 0.000022109674), (-0.70709103, 0.7071225, 0.00002145388), (-0.7068329, 0.70738053, 0), (-0.7068479, 0.7073655, 0.0000012474568), (-4.094963e-9, 0.60056484, 0.799576), (0, 0.6002926, 0.7997805), (3.357127e-8, 0.60067993, 0.79948956), (-4.094963e-9, 0.60056484, 0.799576), (-9.444193e-9, 0.6005608, 0.7995791), (0, 0.6002926, 0.7997805), (0.70684856, 0.70736486, 0.000021461394), (0.7070919, 0.70712155, 0.0000012473153), (0.70684063, 0.7073728, 0.000022117614), (0.70684856, 0.70736486, 0.000021461394), (0.707107, 0.7071066, 0), (0.7070919, 0.70712155, 0.0000012473153)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.231716, -0.157447, -0.062284), (0.231716, -0.168683, -0.062284), (0.231716, -0.168683, -0.312142), (0.231716, -0.157447, -0.312142), (-0.231116, -0.157447, -0.312142), (-0.231116, -0.168683, -0.312142), (-0.231116, -0.168683, -0.062284), (-0.231116, -0.157447, -0.062284), (-0.20613, -0.170569, -0.292146), (0.20673, -0.170569, -0.292146), (0.20673, -0.170569, -0.08228), (-0.20613, -0.170569, -0.08228), (-0.226127, -0.157447, -0.057294), (-0.226127, -0.168683, -0.057294), (0.226727, -0.168683, -0.057294), (0.226727, -0.157447, -0.057294), (-0.202557, 0.030184, -0.070778), (-0.202557, 0.030184, -0.288841), (0.203157, 0.030184, -0.288841), (0.203157, 0.030184, -0.070778), (0.226727, -0.157447, -0.317132), (0.226727, -0.168683, -0.317132), (-0.226127, -0.168683, -0.317132), (-0.226127, -0.157447, -0.317132), (0.226727, -0.152457, -0.062284), (-0.226127, -0.152457, -0.062284), (0.226727, -0.152457, -0.312142), (-0.226127, -0.152457, -0.312142), (-0.226127, -0.173673, -0.062284), (0.226727, -0.173673, -0.062284), (0.226727, -0.173673, -0.312142), (-0.226127, -0.173673, -0.312142), (-0.217633, -0.152457, -0.070777), (0.218233, -0.152457, -0.070777), (-0.217633, -0.152457, -0.303648), (0.218233, -0.152457, -0.303648), (-0.217633, 0.045259, -0.303648), (-0.217633, 0.045259, -0.070777), (0.218233, 0.045259, -0.070777), (0.218233, 0.045259, -0.303648), (0.203157, -0.137382, -0.288841), (0.203157, -0.137382, -0.070777), (-0.202557, -0.137382, -0.070777), (-0.202557, -0.137382, -0.288841), (0.212951, -0.173673, -0.076059), (-0.212351, -0.173673, -0.076059), (0.212951, -0.173673, -0.298366), (-0.212351, -0.173673, -0.298366), (0.209841, -0.173673, -0.07917), (-0.209241, -0.173673, -0.07917), (0.209841, -0.173673, -0.295256), (-0.209241, -0.173673, -0.295256), (0.037601, -0.172651, -0.255746), (0.037601, -0.174255, -0.255746), (0.037601, -0.174254, -0.286653), (0.037601, -0.172651, -0.286653), (0.037601, -0.169753, -0.255746), (0.037601, -0.169753, -0.286653), (-0.037001, -0.174254, -0.286653), (-0.037001, -0.172651, -0.286653), (-0.037001, -0.169753, -0.286653), (-0.037001, -0.174255, -0.255746), (-0.037001, -0.172651, -0.255746), (-0.037001, -0.169753, -0.255746), (-0.035706, -0.175549, -0.285681), (0.036306, -0.175549, -0.285681), (0.036306, -0.175549, -0.256718), (-0.035706, -0.175549, -0.256718)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.818362), (0.092088, 0.675906), (-0.165236, 0.813735), (-0.165236, 0.675906), (0.092088, 0.675906), (0.092088, 0.813735), (-0.165236, 0.813735), (0.096714, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.165236, 0.813735), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.165236, 0.813735), (0.092088, 0.813735), (0.096714, 0.818362), (-0.165236, 0.675906), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.165236, 0.675906), (-0.165236, 0.813735), (-0.169862, 0.818362), (0.092088, 0.675906), (-0.169862, 0.67128), (0.096714, 0.67128), (0.092088, 0.675906), (-0.165236, 0.675906), (-0.169862, 0.67128), (0.092088, 0.813735), (0.096714, 0.67128), (0.096714, 0.818362), (0.092088, 0.813735), (0.092088, 0.675906), (0.096714, 0.67128)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_SideTableDrawer_302_1_2_1"
        {
            token outputs:surface.connect = </root/_materials/M_SideTableDrawer_302_1_2_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_SideTableDrawer_302_1_2_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_SideTableDrawer_302_1_2_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_302_1_2_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_302_1_2_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

