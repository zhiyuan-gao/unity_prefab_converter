#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "CountertopC_8X4"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "CountertopC_8X4" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-1.217872, -0.621578, -0.517404), (1.220527, 0.617625, 0.418626)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 3, 3, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [44, 45, 9, 10, 0, 15, 16, 4, 2, 3, 6, 5, 0, 1, 8, 7, 3, 2, 10, 9, 14, 15, 0, 7, 6, 3, 11, 12, 3, 9, 13, 11, 2, 15, 14, 10, 16, 15, 2, 5, 46, 30, 29, 47, 26, 1, 0, 4, 4, 27, 28, 26, 6, 29, 30, 5, 32, 27, 4, 16, 6, 12, 31, 29, 5, 30, 32, 16, 7, 8, 45, 44, 8, 13, 9, 45, 14, 7, 44, 10, 27, 32, 30, 46, 31, 28, 47, 29, 28, 27, 46, 47, 12, 11, 17, 18, 11, 13, 19, 17, 19, 13, 8, 21, 20, 22, 23, 36, 37, 38, 39, 18, 17, 20, 21, 23, 22, 25, 24, 12, 18, 33, 31, 33, 28, 31, 33, 35, 28, 26, 24, 25, 1, 19, 8, 34, 40, 41, 42, 43, 19, 34, 37, 36, 35, 33, 40, 43, 8, 1, 37, 34, 1, 25, 38, 37, 25, 22, 39, 38, 22, 20, 36, 39, 20, 17, 19, 36, 18, 21, 40, 33, 21, 23, 41, 40, 23, 24, 42, 41, 24, 26, 43, 42, 26, 28, 35, 43]
            rel material:binding = </root/_materials/M_CountertopC_8X4_0>
            normal3f[] normals = [(0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (5.4680395e-8, 0, -1), (1.3274935e-8, 0, -1), (-2.050467e-8, 0, -1), (-2.7340233e-8, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 6.598033e-8, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-5.586519e-8, 0, -1), (1.3274935e-8, 0, -1), (5.4680395e-8, 0, -1), (5.468005e-8, 0, -1), (8.8768627e-7, 0, 1), (-5.9170594e-7, 0, 1), (-5.9163017e-7, 0, 1), (8.8749874e-7, 0, 1), (-5.9170594e-7, 0, 1), (-5.91687e-7, 0, 1), (-5.91687e-7, 0, 1), (-5.9163017e-7, 0, 1), (-1.1094487e-7, 0, -1), (1.3274935e-8, 0, -1), (-5.586519e-8, 0, -1), (-1.10941315e-7, 0, -1), (-2.050467e-8, 0, -1), (1.3274935e-8, 0, -1), (-1.1094487e-7, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, -1.9405979e-8, 0), (-1, 0.0000015778334, 0), (-1, 0.0000015778334, 0), (-1, 0.0000015778334, 0), (-1, 0.0000015778334, 0), (-1.3670252e-8, 0, -1), (-2.7340116e-8, 0, -1), (-2.7340233e-8, 0, -1), (-2.050467e-8, 0, -1), (8.8768627e-7, 0, 1), (8.8749874e-7, 0, 1), (8.8766757e-7, 0, 1), (8.875562e-7, 0, 1), (0, 0, -1), (0, 0, -1), (-1.3670252e-8, 0, -1), (-2.050467e-8, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 0.99999994), (-5.91687e-7, 0, 1), (-5.91687e-7, 0, 1), (0, 0, 0.99999994), (-5.586519e-8, 0, -1), (5.468005e-8, 0, -1), (0, 0, -0.99999994), (-1.10941315e-7, 0, -1), (-2.7340116e-8, 0, -1), (-1.3670252e-8, 0, -1), (0, 0, -1), (0, 0, -1), (8.8766757e-7, 0, 1), (0, 0, 1), (0, 0, 1), (8.875562e-7, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0.0000017789266, 1, 0), (0.0000017789266, 1, 0), (0.0000017789266, 1, 0), (0.0000017789266, 1, 0), (0.0065753763, -0.0047336402, 0.9999672), (-0.0065754233, -0.0047332644, 0.9999672), (-0.0065819114, -0.0047245473, 0.9999672), (0.0065823104, -0.004724323, 0.9999672), (-0.00018922299, 0.00019306155, 0.9999999), (0.00018922145, 0.00019306237, 1), (0.00018928922, 0.00019296765, 0.99999994), (-0.00018928951, 0.00019296866, 0.99999994), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 0.99999994, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-0.0000017789326, 1, 0), (-0.0000017789326, 1, 0), (-0.0000017789326, 1, 0), (-0.0000017789326, 1, 0), (-0.005029616, -0.0016655566, 0.99998593), (-0.000111289795, -0.0032195465, 0.9999948), (-0.000111289795, -0.0032195465, 0.9999948), (-0.0050278916, -0.001666102, 0.99998605), (0.00011129037, -0.003219551, 0.99999475), (0.0050293654, -0.0016655509, 0.99998593), (0.005027645, -0.0016660949, 0.99998605), (0.00011129037, -0.003219551, 0.99999475), (-1, 0, 0), (-1, 6.598033e-8, 0), (-1, 9.881645e-8, 0), (-1, 0, 0), (-1, 6.598033e-8, 0), (-1, 2.1420469e-7, 0), (-1, 2.1420469e-7, 0), (-1, 9.881645e-8, 0), (0.00018928922, 0.00019296765, 0.99999994), (0.00018922145, 0.00019306237, 1), (0.00037857628, -0.00007146295, 0.9999999), (0.00037857628, -0.00007146295, 0.9999999), (0.9999986, 0.001651443, 0), (0.9999986, 0.001651443, 0), (0.9999986, 0.001651443, 0), (0.9999986, 0.001651443, 0), (-0.0065819114, -0.0047245473, 0.9999672), (-0.0065754233, -0.0047332644, 0.9999672), (-0.005029616, -0.0016655566, 0.99998593), (-0.0050278916, -0.001666102, 0.99998605), (0.0065753763, -0.0047336402, 0.9999672), (0.0065823104, -0.004724323, 0.9999672), (0.005027645, -0.0016660949, 0.99998605), (0.0050293654, -0.0016655509, 0.99998593), (-0.9999986, 0.0016481833, 0), (-0.9999986, 0.0016481833, 0), (-0.9999986, 0.0016481833, 0), (-0.9999986, 0.0016481833, 0), (-0.00018922299, 0.00019306155, 0.9999999), (-0.00018928951, 0.00019296866, 0.99999994), (-0.0003785786, -0.00007146337, 1), (-0.0003785786, -0.00007146337, 1), (1, -6.300138e-8, 0), (1, -1.9405979e-8, 0), (1, -2.9063662e-8, 0), (1, -6.300138e-8, 0), (1, -1.9405979e-8, 0), (1, 0, 0), (1, 0, 0), (1, -2.9063662e-8, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(1.220527, 0.617625, 0.418626), (1.220527, 0.617625, 0.388626), (0.610925, 0.008026, 0.418626), (0.610925, 0.008026, 0.388626), (-1.217872, 0.617625, 0.418626), (-0.608274, 0.008026, 0.418626), (-0.608274, 0.008026, 0.388626), (1.220527, -0.601578, 0.418626), (1.220527, -0.601578, 0.388626), (0.610925, -0.621578, 0.388626), (0.610925, -0.621578, 0.418626), (0.630925, 0.028029, 0.388626), (-0.628272, 0.028029, 0.388626), (0.630925, -0.601578, 0.388626), (0.630925, -0.601578, 0.418626), (0.630925, 0.028029, 0.418626), (-0.628272, 0.028029, 0.418626), (0.630925, 0.028029, -0.437404), (-0.628272, 0.028029, -0.437404), (0.630925, -0.601578, -0.437404), (0.649888, 0.046991, -0.437143), (-0.647237, 0.046991, -0.437143), (0.649888, 0.046991, -0.517143), (-0.647237, 0.046991, -0.517143), (-1.217872, 0.617625, -0.517404), (1.220527, 0.617625, -0.517404), (-1.217872, 0.617625, 0.388626), (-1.217872, -0.601578, 0.418626), (-1.217872, -0.601578, 0.388626), (-0.608275, -0.621578, 0.388626), (-0.608275, -0.621578, 0.418626), (-0.628272, -0.601578, 0.388626), (-0.628272, -0.601578, 0.418626), (-0.628272, -0.601578, -0.437404), (1.220527, -0.601578, -0.437274), (-1.217872, -0.601578, -0.437274), (0.650926, -0.581577, -0.437273), (1.220527, -0.581578, -0.437274), (1.220527, -0.581578, -0.517404), (0.650926, -0.581577, -0.517274), (-0.648273, -0.581577, -0.437273), (-0.648273, -0.581577, -0.517274), (-1.217872, -0.581578, -0.517404), (-1.217872, -0.581578, -0.437274), (1.220527, -0.621578, 0.418626), (1.220527, -0.621578, 0.388626), (-1.217872, -0.621578, 0.418626), (-1.217872, -0.621578, 0.388626)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-9.840607, 1.15252), (-9.840607, 1.105646), (-8.888079, 1.105646), (-8.888079, 1.15252), (-11.642847, 1.446918), (-10.72159, 0.525677), (-8.754095, 0.525677), (-7.832848, 1.446918), (-10.441322, 1.096917), (-10.441322, 1.050043), (-8.536366, 1.050043), (-8.536366, 1.096917), (-10.46106, 1.059848), (-10.46106, 1.012974), (-8.556048, 1.012974), (-8.556048, 1.059848), (-8.876535, 1.068577), (-8.876535, 1.115451), (-9.86032, 1.115451), (-9.86032, 1.068577), (-10.72159, -0.458084), (-10.72159, 0.525677), (-11.642847, 1.446918), (-11.642846, -0.458084), (-8.78534, 0.395709), (-10.690347, 0.395709), (-10.721595, 0.364456), (-8.754092, 0.364456), (-10.690347, 0.395709), (-10.690347, 1.379475), (-10.721595, 1.348222), (-10.721595, 0.364456), (-10.690342, 0.49442), (-10.72159, 0.525677), (-10.72159, -0.458084), (-10.690342, -0.489337), (-8.754095, 0.525677), (-10.72159, 0.525677), (-10.690342, 0.49442), (-8.785343, 0.49442), (-8.888103, 1.171056), (-9.840578, 1.171056), (-9.840578, 1.124181), (-8.888104, 1.124181), (-7.832799, 1.041313), (-11.642896, 1.041313), (-11.642896, 0.994439), (-7.832799, 0.994439), (-8.524774, 1.078382), (-10.429832, 1.078382), (-10.429832, 1.031508), (-8.524774, 1.031508), (-9.86031, 1.087112), (-8.876547, 1.087112), (-8.876547, 1.133986), (-9.86031, 1.133986), (-8.754095, -0.458084), (-7.832849, -0.458084), (-7.832848, 1.446918), (-8.754095, 0.525677), (-8.78534, 0.395709), (-8.754092, 0.364456), (-8.754092, 1.348222), (-8.78534, 1.379475), (-8.785343, 0.49442), (-8.785343, -0.489337), (-8.754095, -0.458084), (-8.754095, 0.525677), (-8.556048, 1.059848), (-8.556048, 1.012974), (-8.524799, 1.012974), (-8.524799, 1.059848), (-11.642855, 1.348222), (-10.721595, 1.348222), (-10.690347, 1.379475), (-11.642854, 1.379475), (-10.72159, -0.458084), (-11.642846, -0.458084), (-11.642846, -0.489337), (-10.690342, -0.489337), (-7.832849, -0.458084), (-8.754095, -0.458084), (-8.785343, -0.489337), (-7.832849, -0.489337), (-8.754092, 1.348222), (-7.832842, 1.348222), (-7.832842, 1.379475), (-8.78534, 1.379475), (-10.429832, 1.031508), (-10.429832, 1.078382), (-10.461085, 1.078382), (-10.461085, 1.031508), (-18.652401, 1.028307), (-19.636147, 1.028307), (-19.636147, 0.382973), (-18.652401, 0.382973), (-19.962734, 0.400789), (-19.962734, -0.091091), (-19.317398, -0.091091), (-19.317398, 0.400789), (-19.504082, 0.261143), (-20.149418, 0.261143), (-20.149418, -0.199486), (-18.64178, 0.630468), (-19.655165, 0.630468), (-19.655165, 0.567968), (-18.64178, 0.567968), (-19.658497, 0.474831), (-20.1035, 0.474831), (-20.1035, 0.412233), (-19.658497, 0.412333), (-18.78295, -0.201187), (-19.76674, -0.201187), (-19.781555, -0.216), (-18.768131, -0.215998), (-18.768154, 0.402021), (-19.781532, 0.402021), (-20.227345, -0.043787), (-18.322348, -0.043787), (-20.23206, -0.073115), (-19.586723, -0.073116), (-19.586723, 0.418766), (-20.23206, 0.418766), (-19.586725, 0.084625), (-20.23206, 0.545248), (-20.23206, 0.084625), (-19.586725, 0.084625), (-19.586826, 0.545248), (-20.23206, 0.545248), (-18.322348, 0.129776), (-18.322348, 0.837612), (-20.227345, 0.837612), (-20.227345, 0.129776), (-19.504082, 0.261143), (-20.149418, -0.199486), (-19.504183, -0.199486), (-20.103502, 0.498644), (-20.103502, 0.436146), (-19.658495, 0.436047), (-19.658495, 0.498644), (-19.76674, 0.290716), (-20.227386, 0.290716), (-20.227386, 0.275091), (-19.782366, 0.275091), (-18.322304, 0.290716), (-18.78295, 0.290716), (-18.767323, 0.275091), (-18.322304, 0.275091), (-18.946205, 1.155268), (-19.898708, 1.155268), (-18.961832, 0.510031), (-18.946205, 0.510031), (-19.898708, 1.155268), (-19.898708, 0.447432), (-18.961832, 0.447432), (-18.961832, 0.510031), (-19.21295, 0.202751), (-19.658758, 0.648563), (-20.149826, 0.647751), (-20.149826, 0.202751), (-19.641993, 0.364708), (-19.641993, 0.427208), (-20.133064, 0.427103), (-20.133064, 0.364605), (-19.781555, -0.216), (-19.76674, -0.201187), (-19.76674, 0.290716), (-19.782366, 0.275091), (-18.78295, -0.201187), (-18.768131, -0.215998), (-18.767323, 0.275091), (-18.78295, 0.290716), (-20.133064, 0.451021), (-20.133064, 0.388521), (-19.641993, 0.388418), (-19.641993, 0.450916), (-19.658758, 0.070614), (-19.212948, 0.51642), (-20.149828, 0.51642), (-20.149828, 0.071421), (-19.207352, 0.241014), (-19.207352, 0.948851), (-20.14423, 0.303616), (-20.14423, 0.241014), (-19.207352, 0.948851), (-20.159853, 0.948851), (-20.159853, 0.303616), (-20.14423, 0.303616)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_CountertopC_8X4_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
                rel material:binding = </root/_materials/M_CountertopC_8X4_0>
            }

            def GeomSubset "M_CountertopC_8X4_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47]
                rel material:binding = </root/_materials/M_CountertopC_8X4_1>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_CountertopC_8X4_0"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopC_8X4_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopC_8X4_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/marbleBase2.jpg@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopC_8X4_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_CountertopC_8X4_1"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopC_8X4_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopC_8X4_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_CountertopC_8X4_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/DarkWood2.tif@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopC_8X4_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopC_8X4_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

