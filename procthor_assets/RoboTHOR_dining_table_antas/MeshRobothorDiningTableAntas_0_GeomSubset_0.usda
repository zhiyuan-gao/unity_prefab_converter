#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshRobothorDiningTableAntas_0_GeomSubset_0"
    {
        def Mesh "MeshRobothorDiningTableAntas_0_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [12, 13, 14, 15, 18, 17, 16, 19, 26, 25, 24, 27, 34, 33, 32, 35, 42, 41, 40, 43, 48, 50, 61, 60, 49, 48, 53, 52, 50, 49, 58, 57, 51, 53, 64, 63, 52, 51, 56, 55, 54, 56, 67, 66, 55, 54, 59, 58, 57, 59, 70, 69, 60, 62, 65, 64, 62, 61, 69, 71, 63, 65, 68, 67, 66, 68, 71, 70, 49, 52, 55, 58, 60, 64, 53, 48, 63, 67, 56, 51, 66, 70, 59, 54, 69, 61, 50, 57, 62, 71, 1, 0, 71, 68, 2, 1, 68, 65, 3, 2, 65, 62, 0, 3, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71]
            rel material:binding = </root/_materials/M_RobothorDiningTableAntas_0>
            normal3f[] normals = [(0.00046298705, -0.00049184536, -0.9999998), (0.00046298705, -0.00049184536, -0.9999998), (0.00046298705, -0.00049184536, -0.9999998), (0.00046298705, -0.00049184536, -0.9999998), (-0.00043935413, 0.0005047186, 0.99999976), (-0.00043935413, 0.0005047186, 0.99999976), (-0.00043935413, 0.0005047186, 0.99999976), (-0.00043935413, 0.0005047186, 0.99999976), (-0.00046764204, 0.0004871048, 0.99999976), (-0.00046764204, 0.0004871048, 0.99999976), (-0.00046764204, 0.0004871048, 0.99999976), (-0.00046764204, 0.0004871048, 0.99999976), (-0.0004667201, 0.00048760543, 0.99999976), (-0.0004667201, 0.00048760543, 0.99999976), (-0.0004667201, 0.00048760543, 0.99999976), (-0.0004667201, 0.00048760543, 0.99999976), (-0.00046575163, 0.00048809178, 0.9999998), (-0.00046575163, 0.00048809178, 0.9999998), (-0.00046575163, 0.00048809178, 0.9999998), (-0.00046575163, 0.00048809178, 0.9999998), (-0.9939527, 0.0018250681, 0.109794065), (-0.0030809045, 0.99394584, 0.10982763), (-0.0029970482, 0.9938331, -0.110845834), (-0.9938672, 0.0017333329, -0.11056718), (-0.0023692623, 0.0038072914, 0.9999899), (-0.9939527, 0.0018250681, 0.109794065), (-0.99393713, -0.0043161213, 0.10986537), (-0.0023795962, -0.0028566436, 0.9999931), (-0.0030809045, 0.99394584, 0.10982763), (-0.0023692623, 0.0038072914, 0.9999899), (0.00135988, 0.0038292482, 0.9999918), (0.00041894463, 0.9939504, 0.10982905), (-0.0005188994, -0.9938419, 0.11080539), (-0.99393713, -0.0043161213, 0.10986537), (-0.9938406, -0.0043901578, -0.11073211), (-0.0005412102, -0.99393916, -0.10993053), (-0.0023795962, -0.0028566436, 0.9999931), (-0.0005188994, -0.9938419, 0.11080539), (0.0029277205, -0.99383825, 0.11080157), (0.0015148564, -0.0027564764, 0.9999951), (0.99384904, -0.0016886704, 0.11073035), (0.0029277205, -0.99383825, 0.11080157), (0.0031322464, -0.9939339, -0.10993454), (0.9939618, -0.0018270314, -0.10971131), (0.0015148564, -0.0027564764, 0.9999951), (0.99384904, -0.0016886704, 0.11073035), (0.99383765, 0.0043931305, 0.11075817), (0.00135988, 0.0038292482, 0.9999918), (0.00041894463, 0.9939504, 0.10982905), (0.99383765, 0.0043931305, 0.11075817), (0.9939554, 0.0043020807, -0.10970065), (0.000639379, 0.99385554, -0.110682905), (-0.9938672, 0.0017333329, -0.11056718), (-0.023123503, 0.04042445, -0.998915), (-0.023006067, -0.041418627, -0.998877), (-0.9938406, -0.0043901578, -0.11073211), (-0.023123503, 0.04042445, -0.998915), (-0.0029970482, 0.9938331, -0.110845834), (0.000639379, 0.99385554, -0.110682905), (0.024057101, 0.040492386, -0.9988902), (-0.0005412102, -0.99393916, -0.10993053), (-0.023006067, -0.041418627, -0.998877), (0.023995802, -0.041383624, -0.9988551), (0.0031322464, -0.9939339, -0.10993454), (0.9939618, -0.0018270314, -0.10971131), (0.023995802, -0.041383624, -0.9988551), (0.024057101, 0.040492386, -0.9988902), (0.9939554, 0.0043020807, -0.10970065), (-0.0023692623, 0.0038072914, 0.9999899), (-0.0023795962, -0.0028566436, 0.9999931), (0.0015148564, -0.0027564764, 0.9999951), (0.00135988, 0.0038292482, 0.9999918), (-0.9938672, 0.0017333329, -0.11056718), (-0.9938406, -0.0043901578, -0.11073211), (-0.99393713, -0.0043161213, 0.10986537), (-0.9939527, 0.0018250681, 0.109794065), (-0.0005412102, -0.99393916, -0.10993053), (0.0031322464, -0.9939339, -0.10993454), (0.0029277205, -0.99383825, 0.11080157), (-0.0005188994, -0.9938419, 0.11080539), (0.9939618, -0.0018270314, -0.10971131), (0.9939554, 0.0043020807, -0.10970065), (0.99383765, 0.0043931305, 0.11075817), (0.99384904, -0.0016886704, 0.11073035), (0.000639379, 0.99385554, -0.110682905), (-0.0029970482, 0.9938331, -0.110845834), (-0.0030809045, 0.99394584, 0.10982763), (0.00041894463, 0.9939504, 0.10982905), (-0.023123503, 0.04042445, -0.998915), (0.024057101, 0.040492386, -0.9988902), (0.000463493, -0.00049062545, -0.9999998), (0.00046349157, -0.0004906035, -0.9999998), (0.024057101, 0.040492386, -0.9988902), (0.023995802, -0.041383624, -0.9988551), (0.00046351226, -0.0004906256, -0.9999998), (0.000463493, -0.00049062545, -0.9999998), (0.023995802, -0.041383624, -0.9988551), (-0.023006067, -0.041418627, -0.998877), (0.00046351086, -0.00049060356, -0.9999998), (0.00046351226, -0.0004906256, -0.9999998), (-0.023006067, -0.041418627, -0.998877), (-0.023123503, 0.04042445, -0.998915), (0.00046349157, -0.0004906035, -0.9999998), (0.00046351086, -0.00049060356, -0.9999998), (-0.9939527, 0.0018250681, 0.109794065), (-0.0023692623, 0.0038072914, 0.9999899), (-0.0030809045, 0.99394584, 0.10982763), (-0.0005188994, -0.9938419, 0.11080539), (-0.0023795962, -0.0028566436, 0.9999931), (-0.99393713, -0.0043161213, 0.10986537), (0.99384904, -0.0016886704, 0.11073035), (0.0015148564, -0.0027564764, 0.9999951), (0.0029277205, -0.99383825, 0.11080157), (0.00041894463, 0.9939504, 0.10982905), (0.00135988, 0.0038292482, 0.9999918), (0.99383765, 0.0043931305, 0.11075817), (-0.9938672, 0.0017333329, -0.11056718), (-0.0029970482, 0.9938331, -0.110845834), (-0.023123503, 0.04042445, -0.998915), (-0.0005412102, -0.99393916, -0.10993053), (-0.9938406, -0.0043901578, -0.11073211), (-0.023006067, -0.041418627, -0.998877), (0.9939618, -0.0018270314, -0.10971131), (0.0031322464, -0.9939339, -0.10993454), (0.023995802, -0.041383624, -0.9988551), (0.000639379, 0.99385554, -0.110682905), (0.9939554, 0.0043020807, -0.10970065), (0.024057101, 0.040492386, -0.9988902)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.575556, 0.292624, 0.26508), (0.564243, 0.29409, 0.265606), (0.565002, -0.295708, 0.265897), (-0.574796, -0.297175, 0.265371), (-0.575518, 0.292585, 0.183993), (0.56428, 0.294051, 0.18452), (0.56504, -0.295749, 0.18481), (-0.574759, -0.297215, 0.184284), (-0.550655, 0.267785, 0.184016), (0.539481, 0.269188, 0.18452), (0.540176, -0.27095, 0.184786), (-0.549961, -0.272352, 0.184282), (-0.550692, 0.267825, 0.264432), (0.539444, 0.269227, 0.264936), (0.540139, -0.27091, 0.265202), (-0.549998, -0.272313, 0.264698), (-0.580087, -0.301147, 0.262728), (-0.580125, -0.27145, 0.262713), (-0.56185, -0.271426, 0.262721), (-0.561812, -0.301124, 0.262736), (-0.579759, -0.301497, -0.447731), (-0.579797, -0.271799, -0.447746), (-0.561521, -0.271776, -0.447737), (-0.561483, -0.301473, -0.447723), (-0.580827, 0.274221, 0.262444), (-0.580866, 0.303919, 0.26243), (-0.56259, 0.303942, 0.262438), (-0.562552, 0.274244, 0.262453), (-0.580499, 0.273871, -0.448015), (-0.580537, 0.303569, -0.448029), (-0.562262, 0.303593, -0.448021), (-0.562223, 0.273895, -0.448006), (0.550296, -0.299693, 0.26325), (0.550258, -0.269995, 0.263235), (0.568534, -0.269971, 0.263244), (0.568572, -0.29967, 0.263258), (0.550624, -0.300042, -0.44721), (0.550586, -0.270344, -0.447224), (0.568862, -0.270321, -0.447215), (0.5689, -0.300019, -0.447201), (0.549556, 0.275675, 0.262966), (0.549518, 0.305373, 0.262952), (0.567792, 0.305397, 0.26296), (0.567832, 0.275698, 0.262975), (0.549884, 0.275325, -0.447493), (0.549846, 0.305024, -0.447508), (0.568122, 0.305047, -0.447499), (0.56816, 0.275349, -0.447484), (-0.655765, 0.370161, 0.287242), (-0.653296, 0.370166, 0.289714), (-0.653298, 0.372635, 0.287242), (-0.652334, -0.377364, 0.287611), (-0.652338, -0.374892, 0.29008), (-0.654808, -0.374897, 0.287609), (0.645191, -0.373224, 0.288209), (0.64272, -0.373226, 0.290678), (0.642724, -0.375698, 0.288209), (0.641759, 0.374302, 0.28784), (0.641761, 0.371833, 0.290312), (0.644233, 0.371834, 0.287843), (-0.655756, 0.370151, 0.267475), (-0.653289, 0.372625, 0.267475), (-0.653285, 0.370153, 0.265006), (-0.652325, -0.377374, 0.267845), (-0.654799, -0.374906, 0.267843), (-0.652327, -0.374904, 0.265373), (0.645201, -0.373234, 0.268443), (0.642733, -0.375708, 0.268443), (0.642731, -0.373239, 0.265971), (0.641768, 0.374292, 0.268073), (0.644242, 0.371825, 0.268075), (0.641773, 0.37182, 0.265604)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-9.532816, 1.743166), (-9.535555, -0.386006), (-8.480599, -0.387362), (-8.47786, 1.741811), (-9.737763, 0.569895), (-9.773456, 0.569848), (-9.773381, 0.511848), (-9.737689, 0.511894), (-9.764927, 0.569896), (-9.800621, 0.569852), (-9.800546, 0.511847), (-9.764853, 0.511892), (-9.792091, 0.569899), (-9.827787, 0.569853), (-9.827713, 0.511846), (-9.792016, 0.511892), (-9.819257, 0.569897), (-9.854951, 0.569851), (-9.854876, 0.511847), (-9.819181, 0.511893), (-8.489097, 0.579082), (-8.484272, 0.579085), (-8.484291, 0.617691), (-8.489116, 0.617689), (-9.013824, 1.518485), (-9.013831, 1.523309), (-10.469022, 1.521441), (-10.469015, 1.516615), (-9.008999, 1.518491), (-9.013824, 1.518485), (-9.01057, -1.010922), (-9.005744, -1.010916), (-9.949111, 0.578364), (-9.944286, 0.578366), (-9.944304, 0.616972), (-9.949129, 0.61697), (-10.469015, 1.516615), (-10.473841, 1.51661), (-10.470587, -1.012801), (-10.465763, -1.012795), (-9.243727, -1.016872), (-9.243729, -1.012047), (-9.282334, -1.012064), (-9.282331, -1.01689), (-10.465763, -1.012795), (-10.465756, -1.01762), (-9.010563, -1.015747), (-9.01057, -1.010922), (-9.949133, 0.595416), (-9.944308, 0.595414), (-9.944289, 0.634022), (-9.949114, 0.634024), (-8.489116, 0.617689), (-8.489119, 0.622515), (-9.944306, 0.621797), (-9.944304, 0.616972), (-9.22136, 1.51735), (-9.226186, 1.517352), (-9.227355, -1.012069), (-9.22253, -1.012071), (-9.283502, 1.517351), (-9.288327, 1.517349), (-9.287159, -1.012067), (-9.282334, -1.012064), (-8.489093, 0.633303), (-8.489091, 0.638128), (-9.944286, 0.638848), (-9.944289, 0.634022), (-9.013824, 1.518485), (-10.469015, 1.516615), (-10.465763, -1.012795), (-9.01057, -1.010922), (-8.489116, 0.617689), (-9.944304, 0.616972), (-9.944286, 0.578366), (-8.489097, 0.579082), (-9.283502, 1.517351), (-9.282334, -1.012064), (-9.243729, -1.012047), (-9.244896, 1.517368), (-8.489093, 0.633303), (-9.944289, 0.634022), (-9.944308, 0.595414), (-8.489113, 0.5947), (-9.227355, -1.012069), (-9.226186, 1.517352), (-9.264793, 1.51737), (-9.265963, -1.012053), (-10.153732, 1.518485), (-10.156988, -1.010921), (-10.005173, -0.859497), (-10.002308, 1.366671), (-10.156988, -1.010921), (-8.701797, -1.012794), (-8.853223, -0.860978), (-10.005173, -0.859497), (-8.701797, -1.012794), (-8.698543, 1.516614), (-8.850357, 1.365188), (-8.853223, -0.860978), (-8.698543, 1.516614), (-10.153732, 1.518485), (-10.002308, 1.366671), (-8.850357, 1.365188), (-9.013831, 1.523309), (-9.013824, 1.518485), (-9.008999, 1.518491), (-10.473841, 1.51661), (-10.469015, 1.516615), (-10.469022, 1.521441), (-10.465756, -1.01762), (-10.465763, -1.012795), (-10.470587, -1.012801), (-9.005744, -1.010916), (-9.01057, -1.010922), (-9.010563, -1.015747), (-8.489116, 0.617689), (-8.484291, 0.617691), (-8.489119, 0.622515), (-9.949129, 0.61697), (-9.944304, 0.616972), (-9.944306, 0.621797), (-9.282331, -1.01689), (-9.282334, -1.012064), (-9.287159, -1.012067), (-9.949114, 0.634024), (-9.944289, 0.634022), (-9.944286, 0.638848)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_RobothorDiningTableAntas_0"
        {
            token outputs:surface.connect = </root/_materials/M_RobothorDiningTableAntas_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_RobothorDiningTableAntas_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_RobothorDiningTableAntas_0/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/WoodGrains1.jpg@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_RobothorDiningTableAntas_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/TexturesCom_WoodFine0031_1_seamless_normal_S.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_RobothorDiningTableAntas_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

