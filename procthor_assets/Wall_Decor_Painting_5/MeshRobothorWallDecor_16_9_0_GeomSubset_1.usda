#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshRobothorWallDecor_16_9_0_GeomSubset_1"
    {
        def Mesh "MeshRobothorWallDecor_16_9_0_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [4, 5, 7, 6, 12, 14, 13, 12, 15, 14, 13, 17, 16, 13, 14, 17, 16, 19, 18, 16, 17, 19, 20, 22, 21, 20, 23, 22, 13, 18, 12, 13, 16, 18, 17, 15, 19, 17, 14, 15, 24, 15, 12, 24, 23, 15, 20, 18, 19, 20, 25, 18, 25, 12, 18, 25, 24, 12, 23, 19, 15, 23, 20, 19, 25, 21, 26, 25, 20, 21, 24, 26, 27, 24, 25, 26, 23, 27, 22, 23, 24, 27, 29, 22, 27, 29, 30, 22, 31, 26, 21, 31, 28, 26, 28, 27, 26, 28, 29, 27, 30, 21, 22, 30, 31, 21]
            rel material:binding = </root/_materials/M_RobothorWallDecor_16_9_1>
            normal3f[] normals = [(0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (-1, 3.8662378e-8, 0), (-1, 0.0000015664607, 0), (-1, 0, 0), (-1, 3.8662378e-8, 0), (-1, 0.000001605123, 0), (-1, 0.0000015664607, 0), (0, -1, -0.00034520865), (0, -1, -0.00034520865), (0, -0.9999999, -0.00034520862), (0, -1, -0.00034520865), (0, -1, -0.00034520868), (0, -1, -0.00034520865), (1, 0.0000034466839, 0), (1, 1.4590807e-7, 0), (1, 0.0000035302141, 0), (1, 0.0000034466839, 0), (1, 6.237775e-8, 0), (1, 1.4590807e-7, 0), (0, -0.00021947194, 1), (0, -0.00021947191, 1), (0, -0.00021947194, 1), (0, -0.00021947194, 1), (0, -0.00021947191, 1), (0, -0.00021947191, 1), (0, -0.00033504484, 1), (0, -0.00033504484, 1), (0, -0.00033504484, 0.99999994), (0, -0.00033504484, 1), (0, -0.00033504484, 0.99999994), (0, -0.00033504484, 1), (0, 0.0003358783, -1), (0, 0.00033587834, -1), (0, 0.00033587826, -0.99999994), (0, 0.0003358783, -1), (0, 0.0003358783, -0.99999994), (0, 0.00033587834, -1), (0.00010365241, 1, 0.0002516715), (-0.000057246907, 0.99999994, 0.00028956347), (0.00009811707, 1, 0.000244818), (0.00010365241, 1, 0.0002516715), (-0.00006759363, 0.9999999, 0.00029406798), (-0.000057246907, 0.99999994, 0.00028956347), (0.00006084947, 1, 0.0002896308), (-0.00009704617, 0.99999994, 0.0002488237), (0.000058317226, 1, 0.00028553768), (0.00006084947, 1, 0.0002896308), (-0.00011039617, 0.9999999, 0.0002560897), (-0.00009704617, 0.99999994, 0.0002488237), (-0.00011039617, 0.9999999, 0.0002560897), (0.00009811707, 1, 0.000244818), (-0.00009704617, 0.99999994, 0.0002488237), (-0.00011039617, 0.9999999, 0.0002560897), (0.00010365241, 1, 0.0002516715), (0.00009811707, 1, 0.000244818), (-0.00006759363, 0.9999999, 0.00029406798), (0.000058317226, 1, 0.00028553768), (-0.000057246907, 0.99999994, 0.00028956347), (-0.00006759363, 0.9999999, 0.00029406798), (0.00006084947, 1, 0.0002896308), (0.000058317226, 1, 0.00028553768), (-1, -0.000014555636, 0), (-1, 0.000004239249, 0), (-0.99999994, -0.000014679133, 0), (-1, -0.000014555636, 0), (-1, 0.0000043627297, 0), (-1, 0.000004239249, 0), (0, 0.00043894383, -0.99999994), (0, 0.00043894383, -0.99999994), (0, 0.00043894383, -0.99999994), (0, 0.00043894383, -0.99999994), (0, 0.0004389438, -0.9999999), (0, 0.00043894383, -0.99999994), (1, -0.000014467931, 0), (1, 0.000017673661, 0), (0.99999994, -0.000014679133, 0), (1, -0.000014467931, 0), (1, 0.000017884835, 0), (1, 0.000017673661, 0), (-0.00000979035, 1, 0.0003705637), (0.000017388822, 0.99999994, 0.00036967723), (-0.000017488754, 0.99999994, 0.00036995136), (-0.00000979035, 1, 0.0003705637), (0.000009978293, 0.99999994, 0.00037041624), (0.000017388822, 0.99999994, 0.00036967723), (-0.000009790338, 1, 0.00037039985), (0.000017388742, 0.99999994, 0.00036950287), (-0.000017488732, 0.99999994, 0.00036979612), (-0.000009790338, 1, 0.00037039985), (0.000009978246, 0.99999994, 0.00037023448), (0.000017388742, 0.99999994, 0.00036950287), (0.000009978246, 0.99999994, 0.00037023448), (-0.000017488754, 0.99999994, 0.00036995136), (0.000017388742, 0.99999994, 0.00036950287), (0.000009978246, 0.99999994, 0.00037023448), (-0.00000979035, 1, 0.0003705637), (-0.000017488754, 0.99999994, 0.00036995136), (0.000009978293, 0.99999994, 0.00037041624), (-0.000017488732, 0.99999994, 0.00036979612), (0.000017388822, 0.99999994, 0.00036967723), (0.000009978293, 0.99999994, 0.00037041624), (-0.000009790338, 1, 0.00037039985), (-0.000017488732, 0.99999994, 0.00036979612)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.000437, 0.016184, -0.474274), (-0.000035, 0.016184, -0.474274), (0.000437, 0.016656, -0.474274), (-0.000035, 0.016656, -0.474274), (0.000437, 0.016184, -0.474274), (-0.000035, 0.016184, -0.474274), (0.000437, 0.016656, -0.474274), (-0.000035, 0.016656, -0.474274), (0.000437, 0.016184, -0.474274), (-0.000035, 0.016184, -0.474274), (0.000437, 0.016656, -0.474274), (-0.000035, 0.016656, -0.474274), (0.420708, -0.001296, -0.237757), (0.420708, 0.016583, -0.237751), (0.420708, 0.01642, 0.234427), (0.420708, -0.001459, 0.234421), (-0.419311, 0.016583, -0.237751), (-0.419311, 0.01642, 0.234427), (-0.419311, -0.001296, -0.237757), (-0.419311, -0.001459, 0.234421), (-0.407421, -0.001456, 0.221486), (-0.407421, 0.003093, 0.221487), (0.408818, 0.003093, 0.221487), (0.408818, -0.001456, 0.221486), (0.408818, -0.001298, -0.224822), (-0.407421, -0.001298, -0.224822), (-0.407421, 0.003251, -0.22482), (0.408818, 0.003251, -0.22482), (-0.403769, 0.00325, -0.222289), (0.405166, 0.00325, -0.222289), (0.405166, 0.003094, 0.218956), (-0.403769, 0.003094, 0.218956)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-19.344551, -9.578681), (-19.344551, -9.57881), (-19.344421, -9.57881), (-19.344421, -9.578681), (-18.950922, 0.548352), (-20.90325, 0.475108), (-18.950947, 0.474432), (-18.950922, 0.548352), (-20.903223, 0.549027), (-20.90325, 0.475108), (-17.8049, -0.357648), (-21.278072, 1.594646), (-21.278072, -0.35765), (-17.8049, -0.357648), (-17.8049, 1.594646), (-21.278072, 1.594646), (-18.966734, 0.530915), (-20.91901, 0.456316), (-18.96671, 0.456995), (-18.966734, 0.530915), (-20.919037, 0.530236), (-20.91901, 0.456316), (-17.807972, 0.513489), (-21.18283, 0.494673), (-17.807972, 0.494675), (-17.807972, 0.513489), (-21.18283, 0.513487), (-21.18283, 0.494673), (-21.240007, 0.13242), (-17.766582, 0.206347), (-21.240007, 0.206345), (-21.240007, 0.13242), (-17.766582, 0.132422), (-17.766582, 0.206347), (-17.766596, 0.186857), (-21.239994, 0.112931), (-17.766596, 0.112932), (-17.766596, 0.186857), (-21.239994, 0.186856), (-21.239994, 0.112931), (-21.190773, -0.583004), (-21.239933, 1.315856), (-21.239933, -0.636484), (-21.190773, -0.583004), (-21.190773, 1.262377), (-21.239933, 1.315856), (-17.815819, 1.262379), (-17.766657, -0.636482), (-17.766657, 1.315857), (-17.815819, 1.262379), (-17.815819, -0.583002), (-17.766657, -0.636482), (-17.815819, -0.583002), (-21.239933, -0.636484), (-17.766657, -0.636482), (-17.815819, -0.583002), (-21.190773, -0.583004), (-21.239933, -0.636484), (-21.190773, 1.262377), (-17.766657, 1.315857), (-21.239933, 1.315856), (-21.190773, 1.262377), (-17.815819, 1.262379), (-17.766657, 1.315857), (-19.011917, 0.489012), (-20.85665, 0.470854), (-19.011925, 0.470202), (-19.011917, 0.489012), (-20.856644, 0.489664), (-20.85665, 0.470854), (-21.182943, 0.504416), (-17.807861, 0.523236), (-21.182943, 0.523234), (-21.182943, 0.504416), (-17.807861, 0.504418), (-17.807861, 0.523236), (-20.856392, 0.460934), (-19.012177, 0.480393), (-20.856398, 0.479739), (-20.856392, 0.460934), (-19.01217, 0.461588), (-19.012177, 0.480393), (-21.167818, -0.240247), (-21.182919, 1.594712), (-21.182919, -0.250713), (-21.167818, -0.240247), (-21.167818, 1.584246), (-21.182919, 1.594712), (-17.822985, 1.584248), (-17.807884, -0.250711), (-17.807884, 1.594713), (-17.822985, 1.584248), (-17.822985, -0.240246), (-17.807884, -0.250711), (-17.822985, -0.240246), (-21.182919, -0.250713), (-17.807884, -0.250711), (-17.822985, -0.240246), (-21.167818, -0.240247), (-21.182919, -0.250713), (-21.167818, 1.584246), (-17.807884, 1.594713), (-21.182919, 1.594712), (-21.167818, 1.584246), (-17.822985, 1.584248), (-17.807884, 1.594713)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_RobothorWallDecor_16_9_1"
        {
            token outputs:surface.connect = </root/_materials/M_RobothorWallDecor_16_9_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_RobothorWallDecor_16_9_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_RobothorWallDecor_16_9_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/WoodGrains1.jpg@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_RobothorWallDecor_16_9_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_RobothorWallDecor_16_9_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

