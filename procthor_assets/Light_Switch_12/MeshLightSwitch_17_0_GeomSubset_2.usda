#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshLightSwitch_17_0_GeomSubset_2"
    {
        def Mesh "MeshLightSwitch_17_0_GeomSubset_2"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4]
            int[] faceVertexIndices = [8, 9, 11, 10]
            rel material:binding = </root/_materials/M_LightSwitch_17_2>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.0005, 0.007044, -0.009627), (0.0005, 0.007044, -0.009627), (-0.0005, 0.008044, -0.009627), (0.0005, 0.008044, -0.009627), (-0.0005, 0.007044, -0.009627), (0.0005, 0.007044, -0.009627), (-0.0005, 0.008044, -0.009627), (0.0005, 0.008044, -0.009627), (-0.0005, 0.007044, -0.009627), (0.0005, 0.007044, -0.009627), (-0.0005, 0.008044, -0.009627), (0.0005, 0.008044, -0.009627), (0.000004, -0.003503, 0.045913), (0.000004, -0.004887, 0.064451), (0.000004, -0.004019, 0.066545), (0.000004, -0.001925, 0.067413), (0.000004, 0.005913, 0.067413), (0.000004, -0.003503, -0.052421), (0.000004, -0.004889, -0.069751), (0.000004, -0.004758, 0.053438), (0.000004, -0.004758, -0.060006), (0.000004, -0.003576, -0.071851), (0.000004, -0.001483, -0.072719), (0.000004, 0.005913, -0.072719), (0.000004, -0.007281, 0.052669), (0.000004, -0.006588, 0.053426), (0.000004, -0.006579, 0.045901), (0.000004, -0.007276, 0.046594), (0.000004, -0.006588, -0.059994), (0.000004, -0.007281, -0.059237), (0.000004, -0.007276, -0.053103), (0.000004, -0.006579, -0.052409), (-0.069758, -0.001927, -0.069751), (-0.069069, -0.004022, -0.069751), (-0.067405, -0.004889, -0.069751), (-0.069069, -0.001925, 0.066545), (-0.067405, -0.001925, 0.067413), (-0.067405, -0.004019, 0.066545), (-0.067405, -0.004887, 0.064451), (-0.069069, -0.004019, 0.064451), (-0.069758, -0.001925, 0.064451), (-0.067405, 0.005913, 0.067413), (-0.069069, 0.005913, 0.066545), (-0.069758, 0.005913, 0.064451), (-0.069758, 0.005913, -0.069751), (-0.068763, -0.003634, 0.06616), (-0.05109, -0.003503, -0.052421), (-0.05109, -0.003503, 0.045913), (-0.056966, -0.004758, 0.053438), (-0.056966, -0.004758, -0.060006), (-0.067405, -0.003576, -0.071851), (-0.067405, -0.001483, -0.072719), (-0.069069, -0.001483, -0.071851), (-0.069069, 0.005913, -0.071851), (-0.067405, 0.005913, -0.072719), (-0.068763, -0.003192, -0.071467), (-0.056962, -0.006587, 0.053432), (-0.056311, -0.007281, 0.052676), (-0.051638, -0.007277, 0.046601), (-0.051087, -0.006579, 0.045907), (-0.056962, -0.006587, -0.06), (-0.056311, -0.007281, -0.059244), (-0.051638, -0.007277, -0.053109), (-0.051087, -0.006579, -0.052415), (0.069781, -0.001927, -0.069751), (0.069091, -0.004022, -0.069751), (0.067427, -0.004889, -0.069751), (0.069091, -0.001925, 0.066545), (0.067427, -0.001925, 0.067413), (0.067427, -0.004019, 0.066545), (0.067427, -0.004887, 0.064451), (0.069091, -0.004019, 0.064451), (0.069781, -0.001925, 0.064451), (0.067427, 0.005913, 0.067413), (0.069091, 0.005913, 0.066545), (0.069781, 0.005913, 0.064451), (0.069781, 0.005913, -0.069751), (0.068785, -0.003634, 0.06616), (0.051109, -0.003503, -0.052421), (0.051109, -0.003503, 0.045913), (0.056986, -0.004758, 0.053438), (0.056986, -0.004758, -0.060006), (0.067427, -0.003576, -0.071851), (0.067427, -0.001483, -0.072719), (0.069091, -0.001483, -0.071851), (0.069091, 0.005913, -0.071851), (0.067427, 0.005913, -0.072719), (0.068785, -0.003192, -0.071467), (0.056983, -0.006587, 0.053432), (0.056331, -0.007281, 0.052676), (0.051657, -0.007277, 0.046601), (0.051105, -0.006579, 0.045907), (0.056983, -0.006587, -0.06), (0.056331, -0.007281, -0.059244), (0.051657, -0.007277, -0.053109), (0.051105, -0.006579, -0.052415)]
            bool[] primvars:sharp_face = [0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(1.121951, 0.67355), (1.121951, 0.672478), (1.123023, 0.672478), (1.123023, 0.67355)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_LightSwitch_17_2"
        {
            token outputs:surface.connect = </root/_materials/M_LightSwitch_17_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0, 0, 0)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }
    }
}

