#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshBookFront_23_1_GeomSubset_0"
    {
        def Mesh "MeshBookFront_23_1_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [1, 2, 3, 0, 4, 7, 6, 5, 7, 11, 10, 6, 8, 10, 11, 9, 6, 10, 3, 2, 7, 25, 24, 11, 6, 2, 1, 5, 0, 3, 10, 8, 11, 24, 27, 9, 25, 7, 4, 26, 17, 21, 20, 16, 21, 17, 18, 22, 16, 20, 23, 19, 21, 14, 13, 20, 14, 21, 22, 15, 20, 13, 12, 23, 25, 17, 16, 24, 17, 25, 26, 18, 24, 16, 19, 27, 135, 133, 132, 134, 13, 134, 132, 12, 15, 133, 135, 14, 132, 133, 15, 12, 13, 14, 135, 134]
            rel material:binding = </root/_materials/M_BookFront_23_0>
            normal3f[] normals = [(1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, -0.000005351181), (0, 1, -0.000014183058), (-0.86253, 0, 0.5060059), (-0.86253, -3.080983e-7, 0.5060059), (-0.008613706, 0, 0.99996287), (-0.008613706, 2.9210304e-8, 0.99996287), (0, -1, -0.000010978497), (0, -1, -0.0000064116175), (0, -1, -0.0000021486605), (0, -1, -0.0000016137294), (-0.008613706, 2.9210304e-8, 0.99996287), (-0.008613706, 0, 0.99996287), (0, 0, 1), (0, 0, 1), (-0.86253, 0, 0.5060059), (-0.9773191, 0, 0.2117721), (-0.9773191, 0, 0.2117721), (-0.86253, -3.080983e-7, 0.5060059), (0, 1, -0.000005351181), (0, 0.99999994, -0.000021387135), (0, 0.99999994, -0.000021387135), (0, 1, -0.000014183058), (0, -0.99999994, -0.000014703655), (0, -0.99999994, -0.000014703655), (0, -1, -0.0000064116175), (0, -1, -0.000010978497), (0, -1, -0.0000021486605), (0, -1, -7.7693215e-7), (0, -1, -0.0000012539065), (0, -1, -0.0000016137294), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-0.9896454, 6.0625414e-11, 0.14353345), (-0.99787366, 0, 0.06517763), (-0.99787366, 0, 0.06517763), (-0.9896454, 0, 0.14353345), (0, 1, 5.325557e-7), (0, 1, 4.3109887e-7), (0, 1, 5.649689e-7), (0, 1, 4.6279925e-7), (0, -1, -7.0446544e-7), (0, -1, 5.325557e-7), (0, -1, 4.6279925e-7), (0, -1, -3.0048642e-7), (-0.99787366, 0, 0.06517763), (-0.9993619, 0.0000071525574, -0.03571931), (-0.9993619, 0, -0.03571932), (-0.99787366, 0, 0.06517763), (0.0000011394732, 0.9994289, -0.033790115), (0, 1, 5.325557e-7), (0, 1, 4.6279925e-7), (-0.0000012560089, 0.99951005, -0.03129864), (0, -1, 5.325557e-7), (-0.0000024810433, -0.99942803, -0.03381608), (0.0000041415915, -0.99950916, -0.031326484), (0, -1, 4.6279925e-7), (-0.9773191, 0, 0.2117721), (-0.9896454, 6.0625414e-11, 0.14353345), (-0.9896454, 0, 0.14353345), (-0.9773191, 0, 0.2117721), (0, 1, 4.3109887e-7), (0, 1, 0), (0, 1, 0), (0, 1, 5.649689e-7), (0, -1, -7.7693215e-7), (0, -1, -7.0446544e-7), (0, -1, -3.0048642e-7), (0, -1, -0.0000012539065), (-0.52969146, -0.0000012676068, -0.8481904), (0.52969146, 3.1292439e-7, -0.84819037), (0.52969146, 0.0000012676068, -0.8481904), (-0.52969146, -3.1292439e-7, -0.84819037), (-0.0000024810433, -0.99942803, -0.03381608), (-1.1736129e-8, -0.9094036, -0.41591492), (-1.648732e-8, -0.90940356, -0.41591492), (0.0000041415915, -0.99950916, -0.031326484), (-0.000024735928, 0.9995117, -0.031248346), (0, 0.9092041, -0.41635084), (0, 0.9092041, -0.41635084), (0.000027230148, 0.9994307, -0.033739835), (0.52969146, 0.0000012676068, -0.8481904), (0.52969146, 3.1292439e-7, -0.84819037), (0.79793423, 0, -0.6027444), (0.7981365, -1.2492819e-8, -0.6024766), (-0.9993619, 0, -0.03571932), (-0.9993619, 0.0000071525574, -0.03571931), (-0.52969146, -0.0000012676068, -0.8481904), (-0.52969146, -3.1292439e-7, -0.84819037)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.103872, -0.15546, 0.010107), (0.103872, 0.15546, 0.010107), (0.103872, 0.15546, 0.010929), (0.103872, -0.15546, 0.010929), (-0.109855, 0.15546, 0.008181), (-0.107444, 0.15546, 0.010107), (-0.108617, 0.15546, 0.010929), (-0.110809, 0.15546, 0.009088), (-0.107444, -0.15546, 0.010107), (-0.109855, -0.15546, 0.008181), (-0.108617, -0.15546, 0.010929), (-0.110809, -0.15546, 0.009088), (-0.111181, -0.15546, -0.00267), (-0.112467, -0.15546, -0.00267), (-0.112467, 0.15546, -0.00267), (-0.111181, 0.15546, -0.00267), (-0.112083, -0.15546, 0.003209), (-0.112083, 0.15546, 0.003209), (-0.110804, 0.15546, 0.002755), (-0.110804, -0.15546, 0.002755), (-0.112274, -0.15546, 0.000269), (-0.112274, 0.15546, 0.000269), (-0.111011, 0.15546, 0.000042), (-0.111011, -0.15546, 0.000042), (-0.11142, -0.15546, 0.006149), (-0.11142, 0.15546, 0.006149), (-0.110355, 0.15546, 0.005468), (-0.110355, -0.15546, 0.005468), (-0.109478, 0.15546, -0.00267), (0.103872, 0.15546, -0.00267), (0.103872, -0.15546, -0.00267), (-0.109478, -0.15546, -0.00267), (-0.109071, 0.15546, 0.003718), (0.103872, 0.15546, 0.003718), (0.103872, -0.15546, 0.003718), (-0.109071, -0.15546, 0.003718), (-0.109478, -0.153761, -0.005884), (-0.111181, -0.15546, -0.00267), (-0.109478, 0.153761, -0.005884), (-0.111181, 0.15546, -0.00267), (0.102524, -0.153761, -0.003485), (0.102524, 0.153761, -0.003485), (0.103872, -0.15546, 0.010107), (0.103872, 0.15546, 0.010107), (-0.107444, 0.15546, 0.010107), (-0.109855, 0.15546, 0.008181), (-0.109855, -0.15546, 0.008181), (-0.107444, -0.15546, 0.010107), (-0.110804, 0.15546, 0.002755), (-0.110804, -0.15546, 0.002755), (-0.035034, 0.15546, 0.010107), (-0.036119, 0.15546, 0.003718), (-0.036391, 0.15546, -0.00267), (-0.036768, 0.153761, -0.0158), (-0.036768, -0.153761, -0.0158), (-0.036391, -0.15546, -0.00267), (-0.036119, -0.15546, 0.003718), (-0.035034, -0.15546, 0.010107), (0.030807, 0.15546, 0.010107), (0.030265, 0.15546, 0.003718), (0.03013, 0.15546, -0.00267), (0.029375, 0.153761, -0.011904), (0.029375, -0.153761, -0.011904), (0.03013, -0.15546, -0.00267), (0.030265, -0.15546, 0.003718), (0.030807, -0.15546, 0.010107), (-0.016152, 0.15546, 0.010107), (-0.017056, 0.15546, 0.003718), (-0.017283, 0.15546, -0.00267), (-0.017786, 0.153761, -0.015234), (-0.017786, -0.153761, -0.015234), (-0.017283, -0.15546, -0.00267), (-0.017056, -0.15546, 0.003718), (-0.016152, -0.15546, 0.010107), (0.007327, 0.15546, 0.010107), (0.006603, 0.15546, 0.003718), (0.006423, 0.15546, -0.00267), (0.005794, 0.153761, -0.013899), (0.005794, -0.153761, -0.013899), (0.006423, -0.15546, -0.00267), (0.006603, -0.15546, 0.003718), (0.007327, -0.15546, 0.010107), (-0.092136, 0.15546, 0.010107), (-0.093654, 0.15546, 0.003718), (-0.094034, 0.15546, -0.00267), (-0.09411, 0.153761, -0.012309), (-0.09411, -0.153761, -0.012309), (-0.094034, -0.15546, -0.00267), (-0.093654, -0.15546, 0.003718), (-0.092136, -0.15546, 0.010107), (-0.079268, 0.15546, 0.010107), (-0.080678, 0.15546, 0.003718), (-0.081031, 0.15546, -0.00267), (-0.081182, 0.153761, -0.014898), (-0.081182, -0.153761, -0.014898), (-0.081031, -0.15546, -0.00267), (-0.080678, -0.15546, 0.003718), (-0.079268, -0.15546, 0.010107), (-0.06518, 0.15546, 0.010107), (-0.066482, 0.15546, 0.003718), (-0.066808, 0.15546, -0.00267), (-0.067034, 0.153761, -0.015941), (-0.067034, -0.153761, -0.015941), (-0.066808, -0.15546, -0.00267), (-0.066482, -0.15546, 0.003718), (-0.06518, -0.15546, 0.010107), (-0.051092, 0.15546, 0.010107), (-0.052285, 0.15546, 0.003718), (-0.052584, 0.15546, -0.00267), (-0.052887, 0.153761, -0.016003), (-0.052887, -0.153761, -0.016003), (-0.052584, -0.15546, -0.00267), (-0.052285, -0.15546, 0.003718), (-0.051092, -0.15546, 0.010107), (0.054263, 0.15546, 0.010107), (0.053992, 0.15546, 0.003718), (0.053924, 0.15546, -0.00267), (0.05298, 0.153761, -0.009728), (0.05298, -0.153761, -0.009728), (0.053924, -0.15546, -0.00267), (0.053992, -0.15546, 0.003718), (0.054263, -0.15546, 0.010107), (0.077755, 0.15546, 0.010107), (0.077619, 0.15546, 0.003718), (0.077585, 0.15546, -0.00267), (0.076548, 0.153761, -0.007179), (0.076548, -0.153761, -0.007179), (0.077585, -0.15546, -0.00267), (0.077619, -0.15546, 0.003718), (0.077755, -0.15546, 0.010107), (-0.110977, -0.153977, -0.00448), (-0.110977, 0.153978, -0.00448), (-0.111567, -0.155226, -0.003181), (-0.111567, 0.155226, -0.003181), (-0.112081, -0.155226, -0.003181), (-0.112081, 0.155226, -0.003181), (-0.101801, 0.15546, 0.010107), (-0.103375, 0.15546, 0.003718), (-0.103768, 0.15546, -0.00267), (-0.103806, 0.153761, -0.009189), (-0.103806, -0.153761, -0.009189), (-0.103768, -0.15546, -0.00267), (-0.103375, -0.15546, 0.003718), (-0.101801, -0.15546, 0.010107), (-0.111873, -0.154081, -0.0033), (-0.111873, -0.15546, -0.00267), (-0.111873, 0.154081, -0.0033), (-0.111873, 0.15546, -0.00267), (0.096317, 0.15546, 0.010107), (0.096281, 0.15546, 0.003718), (0.096272, 0.15546, -0.00267), (0.095165, 0.153761, -0.004857), (0.095165, -0.153761, -0.004857), (0.096272, -0.15546, -0.00267), (0.096281, -0.15546, 0.003718), (0.096317, -0.15546, 0.010107)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(0.831969, 0.497732), (0.829759, 0.497744), (0.829714, 0.335027), (0.831924, 0.335038), (0.681929, 0.499307), (0.681966, 0.497744), (0.682566, 0.497744), (0.683406, 0.499307), (0.681966, 0.497744), (0.681966, 0.335027), (0.682566, 0.335027), (0.682566, 0.497744), (0.683406, 0.333722), (0.682566, 0.335027), (0.681966, 0.335027), (0.681929, 0.333722), (0.682566, 0.497744), (0.682566, 0.335027), (0.829714, 0.335027), (0.829759, 0.497744), (0.681966, 0.497744), (0.680623, 0.497744), (0.680623, 0.335027), (0.681966, 0.335027), (0.682566, 0.497744), (0.829759, 0.497744), (0.829727, 0.499326), (0.683406, 0.499307), (0.829714, 0.333708), (0.829714, 0.335027), (0.682566, 0.335027), (0.683406, 0.333722), (0.681966, 0.335027), (0.680623, 0.335027), (0.680557, 0.333722), (0.681929, 0.333722), (0.680623, 0.497744), (0.681966, 0.497744), (0.681929, 0.499307), (0.680595, 0.499307), (0.67928, 0.497744), (0.677937, 0.497744), (0.677937, 0.335027), (0.67928, 0.335027), (0.677937, 0.497744), (0.67928, 0.497744), (0.67926, 0.499307), (0.677926, 0.499307), (0.67928, 0.335027), (0.677937, 0.335027), (0.677813, 0.333722), (0.679185, 0.333722), (0.677937, 0.497744), (0.676647, 0.497744), (0.676644, 0.334968), (0.677937, 0.335027), (0.676647, 0.497744), (0.677937, 0.497744), (0.677926, 0.499307), (0.676652, 0.499307), (0.677937, 0.335027), (0.676644, 0.334968), (0.676644, 0.333722), (0.677813, 0.333722), (0.680623, 0.497744), (0.67928, 0.497744), (0.67928, 0.335027), (0.680623, 0.335027), (0.67928, 0.497744), (0.680623, 0.497744), (0.680595, 0.499307), (0.67926, 0.499307), (0.680623, 0.335027), (0.67928, 0.335027), (0.679185, 0.333722), (0.680557, 0.333722), (0.676331, 0.498213), (0.675913, 0.498213), (0.675913, 0.334679), (0.676331, 0.334679), (0.676644, 0.334968), (0.676331, 0.334679), (0.676331, 0.334081), (0.676644, 0.333722), (0.676652, 0.499307), (0.676331, 0.498865), (0.676331, 0.498213), (0.676647, 0.497744), (0.675913, 0.334679), (0.675913, 0.498213), (0.675436, 0.498213), (0.675428, 0.334679), (0.676644, 0.334968), (0.676647, 0.497744), (0.676331, 0.498213), (0.676331, 0.334679)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_BookFront_23_0"
        {
            token outputs:surface.connect = </root/_materials/M_BookFront_23_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_BookFront_23_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Book_Cover_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_BookFront_23_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

