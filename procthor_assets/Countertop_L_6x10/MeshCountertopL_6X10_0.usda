#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "CountertopL_6X10"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "CountertopL_6X10" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.915633, -1.520485, -0.517404), (0.913169, 1.527517, 0.418626)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [5, 13, 17, 4, 8, 15, 14, 9, 1, 5, 4, 0, 0, 4, 17, 16, 2, 6, 7, 3, 0, 8, 9, 1, 3, 10, 11, 2, 15, 8, 0, 16, 7, 13, 12, 3, 3, 12, 14, 10, 15, 11, 10, 14, 2, 11, 15, 16, 17, 6, 2, 16, 13, 7, 6, 17, 13, 19, 18, 12, 12, 18, 20, 14, 20, 28, 9, 14, 5, 22, 19, 13, 22, 24, 23, 21, 25, 24, 22, 5, 1, 26, 25, 5, 9, 27, 26, 1, 28, 29, 27, 9, 21, 23, 29, 28, 19, 22, 21, 18, 18, 21, 28, 20, 24, 25, 26, 23, 23, 26, 27, 29]
            rel material:binding = </root/_materials/M_CountertopL_6X10_0>
            normal3f[] normals = [(-3.268232e-7, 1, 0.0000011874641), (-0.0000021514306, 1, 0.000001462589), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, -5.524742e-7, 3.9554064e-7), (1, 1.4249372e-7, 1.6776156e-7), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-7.343713e-8, 0, -1), (-1.468752e-7, 0, -1), (9.438752e-7, 0, -1), (1.9930611e-7, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, -7.194508e-8), (0, -1, -7.194505e-8), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (-7.343713e-8, 0, -1), (1.9930611e-7, 0, -1), (0.0000014169332, 0, 1), (0.0000014169332, 0, 1), (7.322846e-7, 0, 1), (7.0039613e-7, 0, 1), (7.0039613e-7, 0, 1), (7.322846e-7, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, -5.524742e-7, 3.9554064e-7), (0.0000010172585, 0, -1), (0, 0, -1), (0, 0, -1), (1.9930611e-7, 0, -1), (9.438752e-7, 0, -1), (0.0000020346256, 0, -1), (0.0000010172585, 0, -1), (1.9930611e-7, 0, -1), (-0.0000021514306, 1, 0.000001462589), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0.99999976, 0.00021219913, -0.0006313279), (0.99999976, 0.00021219913, -0.0006313279), (0.99999976, 0.00021219913, -0.0006313279), (0.99999976, 0.00021219913, -0.0006313279), (0.00084040343, 0.9999997, -5.8253687e-7), (0.00084040343, 0.9999997, -5.8253687e-7), (0.00084040343, 0.9999997, -5.8253687e-7), (0.00084040343, 0.9999997, -5.8253687e-7), (1, -0.0000016574226, 0.0000011866218), (1, 0.0000010602932, -4.1961608e-9), (1, 1.4249372e-7, 1.6776156e-7), (1, -5.524742e-7, 3.9554064e-7), (-3.268232e-7, 1, 0.0000011874641), (0.000001661776, 1, 0.0000015714422), (-0.0000064542915, 1, 0.0000043877667), (-0.0000021514306, 1, 0.000001462589), (0.9999788, 0.00020889538, 0.006520107), (0.9999788, 0.00020889538, 0.006520107), (0.9999788, 0.00020889538, 0.006520107), (0.9999788, 0.00020889538, 0.006520107), (0.000008637029, 1, -8.490132e-7), (0.000008637029, 1, -8.490132e-7), (0.000001661776, 1, 0.0000015714422), (-3.268232e-7, 1, 0.0000011874641), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, -7.194508e-8), (0, -1, -1.438901e-7), (0, -1, -1.438901e-7), (0, -1, -7.194505e-8), (1, 0.0000010602932, -4.1961608e-9), (1, 0.000003396012, -0.000001027635), (1, 0.000003396012, -0.000001027635), (1, 1.4249372e-7, 1.6776156e-7), (0.00040888728, 0.9999786, 0.006521767), (0.00040888728, 0.9999786, 0.006521767), (0.00040888728, 0.9999786, 0.006521767), (0.00040888728, 0.9999786, 0.006521767), (-0.009782642, -0.000030472123, 0.9999522), (-0.009782642, -0.000030472123, 0.9999522), (-0.003420591, -0.0063796085, 0.9999738), (-0.0034235665, -0.006376215, 0.9999739), (-0.0034235665, -0.006376215, 0.9999739), (-0.003420591, -0.0063796085, 0.9999738), (-0.000060217746, -0.009768907, 0.99995226), (-0.000060217746, -0.009768907, 0.99995226), (0.00035587096, -0.000023523215, 1), (0.00035587096, -0.000023523215, 1), (0.00015689076, 0.00017082349, 0.99999994), (0.00015689178, 0.00017082247, 0.9999999), (0.00015689178, 0.00017082247, 0.9999999), (0.00015689076, 0.00017082349, 0.99999994), (-0.000042087664, 0.00036516847, 0.99999994), (-0.000042087664, 0.00036516847, 0.99999994)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.913169, 1.527517, 0.418626), (0.913169, 1.527517, 0.388626), (0.30357, 0.917917, 0.418626), (0.30357, 0.917917, 0.388626), (0.913169, -1.520484, 0.418626), (0.913169, -1.520484, 0.388626), (0.30357, -1.520484, 0.418626), (0.30357, -1.520484, 0.388626), (-0.915632, 1.527517, 0.418626), (-0.915632, 1.527517, 0.388626), (-0.915632, 0.917917, 0.388626), (-0.915632, 0.917917, 0.418626), (0.323574, 0.936875, 0.388626), (0.323574, -1.520484, 0.388626), (-0.915632, 0.937916, 0.388626), (-0.915632, 0.937916, 0.418626), (0.323574, 0.937916, 0.418626), (0.323574, -1.520484, 0.418626), (0.322531, 0.936875, -0.437404), (0.323574, -1.520484, -0.437404), (-0.915632, 0.937916, -0.437404), (0.342535, 0.956879, -0.437143), (0.343575, -1.52048, -0.437273), (0.343578, 0.957922, -0.517143), (0.343575, -1.52048, -0.517273), (0.913169, -1.520485, -0.517404), (0.913169, 1.527517, -0.517404), (-0.915633, 1.527517, -0.517404), (-0.915631, 0.957916, -0.437273), (-0.915631, 0.957916, -0.517273)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-9.045224, 1.314854), (-9.045224, 0.393631), (-8.99835, 0.393631), (-8.99835, 1.314854), (-9.013592, 0.368412), (-9.013592, 1.289708), (-9.060466, 1.289708), (-9.060466, 0.368412), (-10.016891, 2.845772), (-10.016891, -1.916749), (-9.970017, -1.916747), (-9.970017, 2.845772), (-11.133389, 2.845762), (-11.133389, -1.916739), (-10.212147, -1.916739), (-10.212147, 1.92451), (-9.00704, -1.533078), (-9.00704, 2.277045), (-9.053914, 2.277044), (-9.053914, -1.533078), (-9.038322, 1.708246), (-9.038322, -1.149335), (-8.991448, -1.149335), (-8.991448, 1.708246), (-9.029983, 1.698595), (-9.029983, -0.206421), (-8.983109, -0.206421), (-8.983109, 1.698595), (-8.275887, 1.92451), (-8.275887, 2.845762), (-11.133389, 2.845762), (-10.212147, 1.92451), (-10.167742, 2.295617), (-10.198998, 2.295618), (-10.198998, -1.543953), (-10.167742, -1.514334), (-10.167742, -1.514334), (-10.198998, -1.543953), (-8.262764, -1.545581), (-8.262764, -1.514334), (-9.013592, 1.289708), (-9.013592, 1.320958), (-9.060466, 1.320958), (-9.060466, 1.289708), (-10.180889, 1.893262), (-8.275887, 1.893262), (-8.275887, 1.92451), (-10.212147, 1.92451), (-10.212147, -1.916739), (-10.180889, -1.916739), (-10.180889, 1.893262), (-10.212147, 1.92451), (-9.045224, 0.393631), (-9.045224, 0.362374), (-8.99835, 0.362374), (-8.99835, 0.393631), (-20.713737, 1.120565), (-20.713737, 0.475231), (-18.793922, 0.475231), (-18.793922, 1.120565), (-20.229958, 0.739304), (-20.229143, 0.093969), (-19.261827, 0.093969), (-19.261827, 0.739304), (-19.420982, 0.038376), (-19.421082, 0.054001), (-20.066319, 0.499002), (-20.066319, 0.038376), (-20.066319, -0.0858), (-19.421083, 0.359194), (-19.420982, 0.374821), (-20.066319, 0.374821), (-20.22212, 0.567396), (-20.22212, 0.504894), (-18.285854, 0.504997), (-18.286669, 0.567497), (-19.358482, -0.0858), (-19.358583, 0.359194), (-19.421083, 0.359194), (-20.066319, -0.0858), (-20.501873, 0.410499), (-20.501873, -0.297337), (-18.120623, -0.297337), (-18.120623, 0.4105), (-18.976269, 0.264223), (-18.976269, 0.972061), (-20.40502, 0.972061), (-20.40502, 0.264223), (-19.421082, 0.054001), (-19.358583, 0.054001), (-19.35848, 0.499002), (-20.066319, 0.499002), (-20.238974, 0.54467), (-20.239788, 0.482168), (-19.256018, 0.482065), (-19.256018, 0.544567), (-20.222128, 0.20175), (-20.222126, 0.186125), (-18.286655, 0.186935), (-18.302286, 0.202566), (-18.302286, 0.202566), (-18.286655, 0.186935), (-18.285845, 1.169895), (-18.301472, 1.169897), (-20.50187, 0.068228), (-20.501871, -0.376768), (-18.120623, -0.37677), (-18.565617, 0.068226), (-18.565617, 0.068226), (-18.120623, -0.37677), (-18.120623, 1.051983), (-18.56562, 1.051981)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_CountertopL_6X10_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                rel material:binding = </root/_materials/M_CountertopL_6X10_0>
            }

            def GeomSubset "M_CountertopL_6X10_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27]
                rel material:binding = </root/_materials/M_CountertopL_6X10_1>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_CountertopL_6X10_0"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopL_6X10_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopL_6X10_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/marbleBase2.jpg@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopL_6X10_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_CountertopL_6X10_1"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopL_6X10_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopL_6X10_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_CountertopL_6X10_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/DarkWood2.tif@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopL_6X10_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopL_6X10_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

