#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshTelevision_29_0_GeomSubset_1"
    {
        def Mesh "MeshTelevision_29_0_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [4, 5, 7, 6, 45, 60, 61, 47, 95, 96, 97, 98, 47, 61, 50, 49, 60, 45, 37, 76, 21, 26, 38, 36, 27, 25, 37, 39, 41, 83, 27, 39, 99, 100, 101, 102, 36, 38, 46, 44, 39, 37, 45, 47, 38, 40, 48, 46, 51, 41, 49, 50, 41, 39, 47, 49, 40, 51, 50, 48, 103, 104, 105, 106, 44, 60, 76, 36, 61, 60, 44, 46, 50, 61, 46, 48, 43, 81, 21, 36, 101, 100, 105, 104, 76, 37, 42, 59, 36, 76, 59, 43, 83, 82, 25, 27, 106, 97, 96, 103, 42, 37, 25, 82, 107, 99, 102, 108, 40, 38, 26, 84, 21, 81, 84, 26, 109, 110, 107, 108, 109, 111, 112, 110, 114, 113, 112, 111, 114, 95, 98, 113, 84, 81, 96, 95, 42, 82, 102, 101, 43, 59, 104, 103, 59, 42, 101, 104, 81, 43, 103, 96, 82, 83, 108, 102, 83, 41, 109, 108, 41, 51, 111, 109, 51, 40, 114, 111, 40, 84, 95, 114]
            rel material:binding = </root/_materials/M_Television_29_1>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, -3.3049903e-7, 0), (1, -3.3049903e-7, 0), (1, -3.3049903e-7, 0), (1, -3.3049903e-7, 0), (0, -0.88097197, 0.47316837), (0, -0.88097197, 0.4731683), (0, -0.88097197, 0.4731683), (0, -0.88097197, 0.47316837), (0, 1, 0), (0, 0.99999994, 0), (0, 1, 2.0861227e-8), (0, 1, 5.0994373e-8), (0.006821843, 0.0016993603, -0.99997526), (0.006821843, 0.0016993603, -0.99997526), (0.006821843, 0.0016993603, -0.99997526), (0.006821843, 0.0016993603, -0.99997526), (-0.0065439227, 0.0033892412, -0.99997276), (-0.0065439227, 0.0033892412, -0.99997276), (-0.0065439227, 0.0033892412, -0.99997276), (-0.0065439227, 0.0033892412, -0.99997276), (0, -1, 1.718814e-7), (0, -1, 1.718814e-7), (0, -1, 1.718814e-7), (0, -1, 1.718814e-7), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0.87127244, 0.00017529637, 0.49079967), (0.87380093, 0.0011025307, 0.48628256), (0.8751391, 0.0016075907, 0.4838687), (0.87127244, 0.00017529637, 0.49079967), (-0.875, 0.00038227547, 0.4841227), (-0.87392867, -0.0014641522, 0.48605204), (-0.87392867, -0.0014641522, 0.48605204), (-0.8754421, 0.0010900892, 0.48332185), (0.87380093, 0.0011025307, 0.48628256), (0.8759283, 0.0019193543, 0.48243743), (0.8759283, 0.0019193543, 0.48243743), (0.8751391, 0.0016075907, 0.4838687), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.8759429, 0.001940699, 0.48241085), (-0.875, 0.00038227547, 0.4841227), (-0.8754421, 0.0010900892, 0.48332185), (-0.8759429, 0.001940699, 0.48241085), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 5.0994373e-8), (0, 1, 8.9006384e-8), (0, 0, -1), (0, 0, -1), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, -0.88097197, 0.4731683), (0, -0.88097197, 0.4731683), (0, -0.880972, 0.47316834), (0, -0.880972, 0.47316834), (0, 1, 1.2580061e-7), (0, 1, 1.7217077e-7), (0, 1, 1.7217077e-7), (0, 1, 8.9006384e-8), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 5.0994373e-8), (0, 1, 2.0861227e-8), (0, 1, 6.747914e-8), (0, 1, 1.0196879e-7), (0, 1, 8.9006384e-8), (0, 1, 5.0994373e-8), (0, 1, 1.0196879e-7), (0, 1, 1.2580061e-7), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 6.747914e-8), (0, 1, 2.0861227e-8), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (8.984067e-7, -1, -0.00002031013), (8.98408e-7, -1, -0.000020310159), (0.0000017968133, -0.99999994, -0.000040620256), (0.0000017968133, -0.99999994, -0.000040620256), (8.984067e-7, -1, -0.00002031013), (0, -1, 0), (0, -1, 0), (8.98408e-7, -1, -0.000020310159), (-8.9836857e-7, -1, -0.000020310948), (-8.983696e-7, -1, -0.000020310972), (0, -1, 0), (0, -1, 0), (-8.9836857e-7, -1, -0.000020310948), (-0.0000017967371, -1, -0.000040621897), (-0.0000017967371, -1, -0.000040621897), (-8.983696e-7, -1, -0.000020310972), (0.0000032521066, 0, 1), (0.0000032521045, 0, 1), (0.000003252862, 0, 1), (0.000003252861, 0, 1), (0, 0, 1), (-0.0000032521045, 0, 1), (-0.000003252862, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0.0000032521045, 0, 1), (0, 0, 1), (0, 0, 1), (0.000003252862, 0, 1), (-0.0000032521045, 0, 1), (-0.0000032521066, 0, 1), (-0.000003252861, 0, 1), (-0.000003252862, 0, 1), (-0.0000032521066, 0, 1), (0, 0, 1), (0, 0, 1), (-0.000003252861, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0.0000032521066, 0, 1), (0.000003252861, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.000735, -0.060996, 0.041774), (0.000735, -0.060996, 0.041774), (-0.000735, -0.059526, 0.041774), (0.000735, -0.059526, 0.041774), (-0.000735, -0.060996, 0.041774), (0.000735, -0.060996, 0.041774), (-0.000735, -0.059526, 0.041774), (0.000735, -0.059526, 0.041774), (-0.000735, -0.060996, 0.041774), (0.000735, -0.060996, 0.041774), (-0.000735, -0.059526, 0.041774), (0.000735, -0.059526, 0.041774), (-0.000735, -0.060996, 0.041774), (0.000735, -0.060996, 0.041774), (-0.000735, -0.059526, 0.041774), (0.000735, -0.059526, 0.041774), (-0.000735, -0.060996, 0.041774), (0.000735, -0.060996, 0.041774), (-0.000735, -0.059526, 0.041774), (0.000735, -0.059526, 0.041774), (-0.494496, -0.060261, 0.387587), (0.494496, -0.060261, -0.294267), (-0.494496, -0.102845, 0.387587), (0.494496, -0.102845, 0.387587), (0.494496, -0.060261, 0.387587), (-0.494496, -0.060261, -0.294267), (0.494496, -0.102845, -0.294267), (-0.494496, -0.102845, -0.294267), (-0.481433, -0.102845, 0.372916), (-0.481433, -0.102845, -0.239482), (0.481433, -0.102845, -0.239482), (0.481433, -0.102845, 0.372916), (-0.469227, -0.091088, 0.365153), (-0.469227, -0.091088, -0.231719), (0.469227, -0.091088, -0.231719), (0.469227, -0.091088, 0.365153), (0.235427, -0.060261, -0.295962), (-0.235587, -0.060261, -0.295817), (0.235534, -0.102845, -0.296106), (-0.235532, -0.102845, -0.296106), (0.212996, -0.102845, -0.255123), (-0.212996, -0.102845, -0.255123), (-0.212996, -0.060261, -0.255123), (0.212996, -0.060261, -0.255123), (0.241745, -0.060261, -0.307147), (-0.241744, -0.060261, -0.307147), (0.241745, -0.14646, -0.307147), (-0.241744, -0.14646, -0.307147), (0.212996, -0.118518, -0.255123), (-0.212996, -0.118518, -0.255123), (0, -0.118518, -0.255123), (0, -0.102845, -0.255123), (0, -0.102845, -0.239482), (0, -0.091088, -0.231719), (0, -0.091088, 0.365153), (0, -0.102845, 0.372916), (0, -0.102845, 0.387587), (0, -0.060261, 0.387587), (0, -0.060261, -0.239482), (0, -0.060261, -0.255123), (0, -0.060261, -0.307147), (0, -0.14646, -0.307147), (-0.212996, -0.102845, -0.239482), (-0.212996, -0.091088, -0.231719), (-0.212996, -0.091088, 0.365153), (-0.212996, -0.102845, 0.372916), (-0.212996, -0.102845, 0.387587), (-0.212996, -0.060261, 0.387587), (-0.212996, -0.060261, -0.239482), (0.212996, -0.102845, -0.239482), (0.212996, -0.091088, -0.231719), (0.212996, -0.091088, 0.365153), (0.212996, -0.102845, 0.372916), (0.212996, -0.102845, 0.387587), (0.212996, -0.060261, 0.387587), (0.212996, -0.060261, -0.239482), (0, -0.060261, -0.295817), (0.494496, -0.060261, -0.239482), (0.494496, -0.102845, -0.239482), (-0.494496, -0.060261, -0.239482), (-0.494496, -0.102845, -0.239482), (0.494496, -0.060261, -0.255123), (-0.494496, -0.060261, -0.255123), (-0.494496, -0.102845, -0.255123), (0.494496, -0.102845, -0.255123), (-0.494496, -0.102846, -0.242745), (-0.212996, -0.102845, -0.242745), (0, -0.102845, -0.242745), (0.212996, -0.102845, -0.242745), (0.494496, -0.102846, -0.242745), (-0.494496, -0.060261, -0.242745), (-0.212996, -0.060261, -0.242745), (0, -0.060261, -0.242745), (0.212996, -0.060261, -0.242745), (0.494496, -0.060261, -0.242745), (0.490816, -0.099164, -0.255123), (0.490816, -0.063942, -0.255123), (0.490816, -0.063942, -0.242745), (0.490816, -0.099165, -0.242744), (-0.490816, -0.063942, -0.242745), (-0.212996, -0.063942, -0.242745), (-0.212996, -0.063942, -0.255123), (-0.490816, -0.063942, -0.255123), (0.212996, -0.063942, -0.255123), (0, -0.063942, -0.255123), (0, -0.063942, -0.242745), (0.212996, -0.063942, -0.242745), (-0.490816, -0.099165, -0.242744), (-0.490816, -0.099164, -0.255123), (-0.212996, -0.099164, -0.255123), (-0.212996, -0.099164, -0.242744), (0, -0.099164, -0.255123), (0, -0.099164, -0.242745), (0.212996, -0.099164, -0.242745), (0.212996, -0.099164, -0.255123), (-0.494496, -0.102845, 0.416651), (-0.212996, -0.102845, 0.416651), (-0.212996, -0.060261, 0.416651), (-0.494496, -0.060261, 0.416651), (0, -0.102845, 0.416651), (0, -0.060261, 0.416651), (0.212996, -0.102845, 0.416651), (0.212996, -0.060261, 0.416651), (0.494496, -0.102845, 0.416651), (0.494496, -0.060261, 0.416651), (0, -0.102845, 0.39477), (-0.212996, -0.102845, 0.39477), (-0.494496, -0.102845, 0.39477), (-0.494496, -0.060261, 0.39477), (-0.212996, -0.060261, 0.39477), (0, -0.060261, 0.39477), (0.212996, -0.060261, 0.39477), (0.494496, -0.060261, 0.39477), (0.494496, -0.102845, 0.39477), (0.212996, -0.102845, 0.39477), (-0.489896, -0.098244, 0.387587), (-0.212996, -0.098244, 0.387587), (-0.212996, -0.098244, 0.39477), (-0.489896, -0.098244, 0.39477), (-0.489896, -0.064861, 0.387587), (-0.212996, -0.064861, 0.387587), (-0.489896, -0.064861, 0.39477), (-0.212996, -0.064861, 0.39477), (0, -0.098244, 0.387587), (0.212996, -0.098244, 0.387587), (0.212996, -0.098244, 0.39477), (0, -0.098244, 0.39477), (0, -0.064861, 0.387587), (0.212996, -0.064861, 0.387587), (0, -0.064861, 0.39477), (0.212996, -0.064861, 0.39477), (0.489896, -0.098244, 0.387587), (0.489896, -0.098244, 0.39477), (0.489896, -0.064861, 0.387587), (0.489896, -0.064861, 0.39477)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-30.788843, -18.17326), (-30.788843, -18.17474), (-30.787363, -18.17474), (-30.787363, -18.17326), (-31.4309, 0.717608), (-31.4309, 0.245455), (-31.262543, 0.245455), (-31.262543, 0.717608), (-30.834187, 0.054126), (-30.834187, -0.01467), (-30.810009, -0.01467), (-30.810009, 0.054128), (-31.324728, 0.748474), (-31.324728, 0.245454), (-31.216467, 0.245454), (-31.216467, 0.688656), (-31.411846, 0.5), (-31.411846, 0.972159), (-31.433973, 0.960135), (-31.433973, 0.5), (-31.160786, -0.120547), (-31.07761, -0.120548), (-31.07761, 0.385233), (-31.160786, 0.385442), (-31.027353, 0.385296), (-31.110529, 0.385296), (-31.110529, -0.120401), (-31.027353, -0.120509), (-31.176905, -0.13117), (-31.176905, 0.418654), (-31.253359, 0.418654), (-31.256948, -0.087153), (-31.415728, 1.454883), (-31.415728, 0.912286), (-31.39155, 0.912286), (-31.39155, 1.454883), (-31.044899, -0.044631), (-31.0452, 0.044321), (-31.068264, 0.135427), (-31.068264, -0.044631), (-30.985952, 0.046474), (-30.985352, 0.135376), (-31.009003, 0.135376), (-31.009003, -0.04458), (-31.0452, 0.044321), (-30.959595, 0.044321), (-30.959595, 0.07706), (-31.068264, 0.135427), (-31.550583, 0.500001), (-31.550583, 0.915994), (-31.581194, 0.915994), (-31.581194, 0.500001), (-30.900394, 0.046474), (-30.985952, 0.046474), (-31.009003, -0.04458), (-30.900394, 0.013754), (-31.550583, 0.084004), (-31.550583, 0.500001), (-31.581194, 0.500001), (-31.581194, 0.084004), (-31.39155, 0.080302), (-31.39155, 0.496294), (-31.415728, 0.496294), (-31.415728, 0.080301), (-31.411846, 0.027838), (-31.411846, 0.5), (-31.433973, 0.5), (-31.433693, 0.040177), (-31.262543, 0.245455), (-31.4309, 0.245455), (-31.4309, -0.226702), (-31.262543, -0.226702), (-31.216467, 0.245454), (-31.324728, 0.245454), (-31.32472, -0.257568), (-31.216467, -0.197748), (-31.51345, 0.083989), (-31.51345, -0.46582), (-31.436998, -0.46582), (-31.433693, 0.040177), (-31.39155, 0.912286), (-31.415728, 0.912286), (-31.415728, 0.496294), (-31.39155, 0.496294), (-31.433973, 0.5), (-31.433973, 0.960135), (-31.51345, 0.916011), (-31.51345, 0.5), (-31.433693, 0.040177), (-31.433973, 0.5), (-31.51345, 0.5), (-31.51345, 0.083989), (-30.863726, -0.01815), (-30.863726, 0.065021), (-30.94018, 0.065021), (-30.94018, -0.01815), (-31.415728, 0.080301), (-31.415728, -0.462295), (-31.39155, -0.462295), (-31.39155, 0.080302), (-31.51345, 0.916011), (-31.433973, 0.960135), (-31.436998, 1.465821), (-31.51345, 1.465821), (-30.790266, -0.014671), (-30.790266, 0.054129), (-30.814444, 0.054129), (-30.814444, -0.014668), (-31.128439, 0.418635), (-31.20849, 0.374617), (-31.204895, -0.131151), (-31.128439, -0.131151), (-30.893517, -0.018151), (-30.817059, -0.018151), (-30.817059, 0.065022), (-30.893517, 0.065022), (-31.435467, 0.912326), (-31.411297, 0.912326), (-31.411297, 1.454975), (-31.435474, 1.454975), (-31.435467, 0.912326), (-31.435467, 0.496294), (-31.41129, 0.496294), (-31.411297, 0.912326), (-31.435474, 0.080262), (-31.41129, 0.080262), (-31.41129, 0.496294), (-31.435467, 0.496294), (-31.435474, 0.080262), (-31.435474, -0.462387), (-31.411297, -0.462387), (-31.41129, 0.080262), (-31.550583, -0.465783), (-31.467417, -0.465783), (-31.474607, -0.458594), (-31.5434, -0.458596), (-31.467417, 0.915994), (-31.467417, 1.465783), (-31.474607, 1.458596), (-31.474607, 0.915994), (-31.467417, 0.084006), (-31.467417, 0.500001), (-31.474607, 0.500001), (-31.474607, 0.084006), (-31.467417, 0.500001), (-31.467417, 0.915994), (-31.474607, 0.915994), (-31.474607, 0.500001), (-31.467417, -0.465783), (-31.467417, 0.084006), (-31.474607, 0.084006), (-31.474607, -0.458594), (-31.467417, 1.465783), (-31.550583, 1.465783), (-31.5434, 1.458596), (-31.474607, 1.458596), (-31.550583, 1.465783), (-31.550583, 0.915994), (-31.5434, 0.915994), (-31.5434, 1.458596), (-31.550583, 0.915994), (-31.550583, 0.500001), (-31.5434, 0.500001), (-31.5434, 0.915994), (-31.550583, 0.500001), (-31.550583, 0.084004), (-31.5434, 0.084004), (-31.5434, 0.500001), (-31.550583, 0.084004), (-31.550583, -0.465783), (-31.5434, -0.458596), (-31.5434, 0.084004)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_Television_29_1"
        {
            token outputs:surface.connect = </root/_materials/M_Television_29_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_Television_29_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_Television_29_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Television_29_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Television_29_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

