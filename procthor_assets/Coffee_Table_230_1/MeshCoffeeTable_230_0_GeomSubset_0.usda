#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshCoffeeTable_230_0_GeomSubset_0"
    {
        def Mesh "MeshCoffeeTable_230_0_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 2, 1, 0, 3, 2, 4, 6, 5, 4, 7, 6, 8, 10, 9, 8, 11, 10, 12, 14, 13, 12, 15, 14, 16, 18, 17, 16, 19, 18, 20, 1, 12, 2, 10, 15, 21, 13, 16, 11, 19, 14, 22, 5, 0, 9, 3, 6, 23, 17, 4, 8, 7, 18, 21, 12, 13, 21, 20, 12, 1, 15, 12, 1, 2, 15, 10, 14, 15, 10, 11, 14, 19, 13, 14, 19, 16, 13, 23, 16, 17, 23, 21, 16, 11, 18, 19, 11, 8, 18, 7, 17, 18, 7, 4, 17, 22, 4, 5, 22, 23, 4, 8, 6, 7, 8, 9, 6, 3, 5, 6, 3, 0, 5, 20, 0, 1, 20, 22, 0, 9, 2, 3, 9, 10, 2, 21, 22, 20, 21, 23, 22]
            rel material:binding = </root/_materials/M_CoffeeTable_230_0>
            normal3f[] normals = [(0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-0.57724386, 0.57739794, 0.57740897), (-0.57724386, 0.57739794, 0.57740897), (-0.57724386, 0.57739794, 0.57740897), (-0.57724386, 0.57739794, -0.57740897), (-0.57724386, 0.57739794, -0.57740897), (-0.57724386, 0.57739794, -0.57740897), (-0.5762319, -0.5778089, 0.5780084), (-0.5762319, -0.577809, 0.57800835), (-0.5762319, -0.577809, 0.5780083), (-0.5762319, -0.577809, -0.5780083), (-0.5762319, -0.57780886, -0.5780084), (-0.5762319, -0.5778089, -0.57800835), (0.57700306, 0.57738805, 0.57765955), (0.5770031, 0.5773881, 0.57765955), (0.5770031, 0.57738805, 0.5776596), (0.57735395, 0.5775301, -0.5771668), (0.57735395, 0.5775301, -0.5771668), (0.57735395, 0.5775301, -0.5771668), (0.577771, -0.57805413, 0.5762241), (0.5777711, -0.57805413, 0.5762241), (0.577771, -0.57805425, 0.5762241), (0.5778196, -0.5781249, -0.5761043), (0.57781965, -0.57812476, -0.5761043), (0.5778196, -0.5781248, -0.57610434), (-0.7070026, 0, 0.70721096), (-0.7070081, 0, 0.7072054), (-0.7070025, 0, 0.707211), (-0.7070026, 0, 0.70721096), (-0.70700806, 0, 0.7072054), (-0.7070081, 0, 0.7072054), (-0.7070107, 0.7072028, 0), (-0.7069992, 0.7072144, 0), (-0.707013, 0.7072006, 0), (-0.7070107, 0.7072028, 0), (-0.7069969, 0.7072167, 0), (-0.7069992, 0.7072144, 0), (-0.70700634, 0, -0.7072072), (-0.7070066, 0, -0.70720696), (-0.7070063, 0, -0.7072072), (-0.70700634, 0, -0.7072072), (-0.70700663, 0, -0.707207), (-0.7070066, 0, -0.70720696), (-0.7067068, -0.7075066, 0), (-0.7066937, -0.70751965, 0), (-0.7063022, -0.7079104, -2.7480755e-8), (-0.7067068, -0.7075066, 0), (-0.70669115, -0.7075223, 0), (-0.7066937, -0.70751965, 0), (6.868125e-8, -0.7085908, 0.7056196), (6.0815796e-7, -0.7084336, 0.7057774), (0, -0.70899737, 0.7052112), (6.868125e-8, -0.7085908, 0.7056196), (-0.000001700454, -0.70711213, 0.70710146), (6.0815796e-7, -0.7084336, 0.7057774), (3.336004e-8, -0.708089, -0.7061233), (-0.0000017124585, -0.7075156, -0.7066977), (7.880519e-8, -0.7067668, -0.7074467), (3.336004e-8, -0.708089, -0.7061233), (5.3247277e-8, -0.7084982, -0.7057127), (-0.0000017124585, -0.7075156, -0.7066977), (0.7070985, -0.7071151, 0), (0.7071108, -0.7071028, 0), (0.7068587, -0.7073547, 0), (0.7070985, -0.7071151, 0), (0.70711327, -0.7071004, 0), (0.7071108, -0.7071028, 0), (0.70710677, 0, 0.70710677), (0.7071098, 0, 0.7071037), (0.7071069, 0, 0.7071068), (0.70710677, 0, 0.70710677), (0.70710975, 0, 0.70710367), (0.7071098, 0, 0.7071037), (0.7072093, 0, -0.7070042), (0.7072113, 0, -0.7070023), (0.7072093, 0, -0.7070042), (0.7072093, 0, -0.7070042), (0.70721126, 0, -0.7070022), (0.7072113, 0, -0.7070023), (0.7070115, 0.7072021, 0), (0.7069984, 0.70721513, 0), (0.707014, 0.70719945, 0), (0.7070115, 0.7072021, 0), (0.70699584, 0.7072177, 0), (0.7069984, 0.70721513, 0), (0, 0.7072082, 0.7070054), (0, 0.707208, 0.70700556), (1.1034649e-7, 0.7067335, 0.7074798), (0, 0.7072082, 0.7070054), (0, 0.707208, 0.70700556), (0, 0.707208, 0.70700556), (2.048544e-8, 0.7069636, -0.70724994), (6.815149e-9, 0.7069758, -0.7072378), (1.7462901e-7, 0.7067262, -0.70748717), (2.048544e-8, 0.7069636, -0.70724994), (0, 0.70721304, -0.70700043), (6.815149e-9, 0.7069758, -0.7072378), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 0.99999994), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.823884, -0.394055, 0.153866), (0.824409, -0.394055, 0.153866), (0.824409, -0.394055, 0.175842), (-0.823884, -0.394055, 0.175842), (-0.827379, 0.403533, 0.153866), (-0.827379, -0.390561, 0.153866), (-0.827379, -0.390561, 0.175842), (-0.827379, 0.403533, 0.175842), (-0.823885, 0.403537, 0.179337), (-0.823885, -0.390561, 0.179337), (0.824408, -0.390561, 0.179337), (0.824408, 0.403533, 0.179337), (0.827904, -0.390561, 0.153866), (0.827904, 0.403537, 0.153866), (0.827904, 0.403537, 0.175842), (0.827904, -0.390561, 0.175842), (0.824409, 0.407028, 0.153866), (-0.823884, 0.407028, 0.153866), (-0.823884, 0.407028, 0.175842), (0.824409, 0.407028, 0.175842), (0.824408, -0.390561, 0.150371), (0.824408, 0.403533, 0.150371), (-0.823884, -0.390561, 0.150371), (-0.823884, 0.403537, 0.150371), (-0.82099, 0.366886, -0.262304), (-0.78539, 0.366886, -0.262304), (-0.785391, 0.366886, 0.14916), (-0.82099, 0.366886, 0.14916), (-0.823773, 0.401264, -0.262304), (-0.823773, 0.36967, -0.262304), (-0.823774, 0.36967, 0.14916), (-0.823774, 0.401256, 0.14916), (-0.785391, -0.357167, -0.265087), (-0.785391, -0.388756, -0.265087), (-0.82099, -0.388756, -0.265087), (-0.82099, -0.357167, -0.265087), (-0.82099, 0.401264, 0.151943), (-0.82099, 0.36967, 0.151943), (-0.78539, 0.36967, 0.151943), (-0.78539, 0.401264, 0.151943), (-0.782607, 0.36967, -0.262304), (-0.782607, 0.401264, -0.262304), (-0.782608, 0.401264, 0.14916), (-0.782608, 0.36967, 0.14916), (-0.78539, 0.404041, -0.262304), (-0.82099, 0.404045, -0.262304), (-0.82099, 0.404045, 0.14916), (-0.785391, 0.404045, 0.14916), (-0.803118, -0.354184, 0.08282), (-0.803118, 0.367633, 0.08282), (-0.803118, 0.367633, 0.151262), (-0.803118, -0.354184, 0.151262), (-0.823704, 0.367633, 0.08282), (-0.823704, 0.367633, 0.151262), (-0.823704, -0.354184, 0.08282), (-0.823704, -0.354184, 0.151262), (-0.82099, -0.391541, -0.262304), (-0.78539, -0.391541, -0.262304), (-0.785391, -0.391541, 0.14916), (-0.82099, -0.391541, 0.14916), (-0.823773, -0.357167, -0.262304), (-0.823773, -0.388756, -0.262304), (-0.823774, -0.388756, 0.14916), (-0.823774, -0.357171, 0.14916), (0.78329, 0.36967, -0.262304), (0.78329, 0.36967, 0.14916), (0.78329, 0.401264, 0.14916), (0.78329, 0.401264, -0.262304), (-0.82099, -0.357167, 0.151943), (-0.82099, -0.388756, 0.151943), (-0.78539, -0.388756, 0.151943), (-0.78539, -0.357167, 0.151943), (-0.782607, -0.388756, -0.262304), (-0.782607, -0.357167, -0.262304), (-0.782608, -0.357167, 0.14916), (-0.782608, -0.388756, 0.14916), (-0.78539, -0.354386, -0.262304), (-0.82099, -0.354382, -0.262304), (-0.82099, -0.354382, 0.14916), (-0.785391, -0.354382, 0.14916), (0.821672, 0.366893, -0.262304), (0.821672, 0.366893, 0.14916), (0.786073, 0.366886, 0.14916), (0.786074, 0.366886, -0.262304), (0.824456, 0.401264, -0.262304), (0.824456, 0.401264, 0.14916), (0.824456, 0.369674, 0.14916), (0.824456, 0.369674, -0.262304), (0.78329, -0.388756, -0.262304), (0.78329, -0.388756, 0.14916), (0.78329, -0.357167, 0.14916), (0.78329, -0.357167, -0.262304), (0.786073, 0.401264, -0.265087), (0.821672, 0.401264, -0.265087), (0.821672, 0.369674, -0.265087), (0.786073, 0.36967, -0.265087), (0.821672, 0.401264, 0.151943), (0.786073, 0.401264, 0.151943), (0.786073, 0.36967, 0.151943), (0.821672, 0.369674, 0.151943), (0.786074, 0.404045, -0.262304), (0.786073, 0.404045, 0.14916), (0.821672, 0.404045, 0.14916), (0.821672, 0.404045, -0.262304), (0.802903, -0.354184, 0.08282), (0.802904, -0.354184, 0.151262), (0.802904, 0.36763, 0.151262), (0.802903, 0.367633, 0.08282), (0.823491, 0.36763, 0.151262), (0.823491, 0.36763, 0.08282), (0.823491, -0.354184, 0.151262), (0.823491, -0.354184, 0.08282), (0.821672, -0.391537, -0.262304), (0.821672, -0.391537, 0.14916), (0.786073, -0.391541, 0.14916), (0.786074, -0.391541, -0.262304), (0.824456, -0.357167, -0.262304), (0.824456, -0.357167, 0.14916), (0.824456, -0.388752, 0.14916), (0.824456, -0.388752, -0.262304), (0.786073, -0.357167, -0.265087), (0.821672, -0.357167, -0.265087), (0.821672, -0.388752, -0.265087), (0.786073, -0.388756, -0.265087), (0.821672, -0.357167, 0.151943), (0.786073, -0.357167, 0.151943), (0.786073, -0.388756, 0.151943), (0.821672, -0.388752, 0.151943), (0.786074, -0.354382, -0.262304), (0.786073, -0.354382, 0.14916), (0.821672, -0.354382, 0.14916), (0.821672, -0.354382, -0.262304), (0.787332, -0.369606, 0.08282), (-0.786649, -0.369606, 0.08282), (-0.786649, -0.369606, 0.151262), (0.787332, -0.369606, 0.151262), (-0.786649, -0.390194, 0.08282), (-0.786649, -0.390194, 0.151262), (0.787332, -0.390194, 0.08282), (0.787332, -0.390194, 0.151262), (0.787332, 0.384464, 0.08282), (0.787332, 0.384464, 0.151262), (-0.786649, 0.384464, 0.151262), (-0.786649, 0.384464, 0.08282), (-0.786649, 0.405052, 0.151262), (-0.786649, 0.405052, 0.08282), (0.787332, 0.405056, 0.151262), (0.787332, 0.405056, 0.08282), (-0.785391, 0.36967, -0.265087), (-0.785391, 0.401264, -0.265087), (-0.82099, 0.36967, -0.265087), (-0.82099, 0.401264, -0.265087)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(0.504072, 0.697557), (-1.051542, 0.731459), (-1.051542, 0.697557), (0.504072, 0.697557), (0.504072, 0.731459), (-1.051542, 0.731459), (0.095421, 0.697557), (-0.900873, 0.731459), (-0.900873, 0.697557), (0.095421, 0.697557), (0.095421, 0.731459), (-0.900873, 0.731459), (0.504072, 0.095421), (-1.051542, -0.900873), (0.504072, -0.900873), (0.504072, 0.095421), (-1.051542, 0.095421), (-1.051542, -0.900873), (0.099127, 0.697557), (1.095421, 0.731459), (1.095421, 0.697557), (0.099127, 0.697557), (0.099127, 0.731459), (1.095421, 0.731459), (0.948458, 0.697557), (2.504072, 0.731459), (2.504072, 0.697557), (0.948458, 0.697557), (0.948458, 0.731459), (2.504072, 0.731459), (0.948458, 0.692166), (0.948458, 0.697557), (0.943067, 0.697557), (0.948458, 0.731459), (0.948458, 0.736851), (0.943067, 0.731459), (0.948458, 0.692166), (0.943067, 0.697557), (0.948458, 0.697557), (0.948458, 0.736851), (0.948458, 0.731459), (0.943067, 0.731459), (0.504072, 0.692166), (0.509464, 0.697557), (0.504072, 0.697557), (0.504072, 0.736851), (0.504072, 0.731459), (0.509464, 0.731459), (0.504072, 0.692166), (0.504072, 0.697557), (0.509464, 0.697557), (0.504072, 0.736851), (0.509464, 0.731459), (0.504072, 0.731459), (0.095421, 0.692166), (-0.900873, 0.697557), (0.095421, 0.697557), (0.095421, 0.692166), (-0.900873, 0.692166), (-0.900873, 0.697557), (0.948458, 0.697557), (0.943067, 0.731459), (0.943067, 0.697557), (0.948458, 0.697557), (0.948458, 0.731459), (0.943067, 0.731459), (0.099127, 0.736851), (1.095421, 0.731459), (0.099127, 0.731459), (0.099127, 0.736851), (1.095421, 0.736851), (1.095421, 0.731459), (0.948458, 0.731459), (0.943067, 0.697557), (0.943067, 0.731459), (0.948458, 0.731459), (0.948458, 0.697557), (0.943067, 0.697557), (0.504072, 0.692166), (-1.051542, 0.697557), (0.504072, 0.697557), (0.504072, 0.692166), (-1.051542, 0.692166), (-1.051542, 0.697557), (0.948458, 0.736851), (2.504072, 0.731459), (0.948458, 0.731459), (0.948458, 0.736851), (2.504072, 0.736851), (2.504072, 0.731459), (0.509464, 0.731459), (0.504072, 0.697557), (0.504072, 0.731459), (0.509464, 0.731459), (0.509464, 0.697557), (0.504072, 0.697557), (0.504072, 0.099127), (0.509464, 1.095421), (0.509464, 0.099127), (0.504072, 0.099127), (0.504072, 1.095421), (0.509464, 1.095421), (0.504072, 0.095421), (0.509464, -0.900873), (0.509464, 0.095421), (0.504072, 0.095421), (0.504072, -0.900873), (0.509464, -0.900873), (0.504072, 0.731459), (0.509464, 0.697557), (0.509464, 0.731459), (0.504072, 0.731459), (0.504072, 0.697557), (0.509464, 0.697557), (0.948458, 0.692166), (2.504072, 0.697557), (0.948458, 0.697557), (0.948458, 0.692166), (2.504072, 0.692166), (2.504072, 0.697557), (0.504072, 0.736851), (-1.051542, 0.731459), (0.504072, 0.731459), (0.504072, 0.736851), (-1.051542, 0.736851), (-1.051542, 0.731459), (0.948458, 0.095421), (2.504072, -0.900873), (0.948458, -0.900873), (0.948458, 0.095421), (2.504072, 0.095421), (2.504072, -0.900873)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_CoffeeTable_230_0"
        {
            token outputs:surface.connect = </root/_materials/M_CoffeeTable_230_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CoffeeTable_230_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_CoffeeTable_230_0/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/LightWoodCounters.jpg@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CoffeeTable_230_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CoffeeTable_230_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

