#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "CountertopC_10X8"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "CountertopC_10X8" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-1.524867, -1.220625, -0.517404), (1.523137, 1.237775, 0.418626)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 3, 3, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [44, 45, 9, 10, 0, 15, 16, 4, 2, 3, 6, 5, 0, 1, 8, 7, 3, 2, 10, 9, 14, 15, 0, 7, 6, 3, 11, 12, 3, 9, 13, 11, 2, 15, 14, 10, 16, 15, 2, 5, 46, 30, 29, 47, 26, 1, 0, 4, 4, 27, 28, 26, 6, 29, 30, 5, 32, 27, 4, 16, 6, 12, 31, 29, 5, 30, 32, 16, 7, 8, 45, 44, 8, 13, 9, 45, 14, 7, 44, 10, 27, 32, 30, 46, 31, 28, 47, 29, 28, 27, 46, 47, 12, 11, 17, 18, 11, 13, 19, 17, 19, 13, 8, 21, 20, 22, 23, 36, 37, 38, 39, 18, 17, 20, 21, 23, 22, 25, 24, 12, 18, 33, 31, 33, 28, 31, 33, 35, 28, 26, 24, 25, 1, 19, 8, 34, 40, 41, 42, 43, 19, 34, 37, 36, 35, 33, 40, 43, 8, 1, 37, 34, 1, 25, 38, 37, 25, 22, 39, 38, 22, 20, 36, 39, 20, 17, 19, 36, 18, 21, 40, 33, 21, 23, 41, 40, 23, 24, 42, 41, 24, 26, 43, 42, 26, 28, 35, 43]
            rel material:binding = </root/_materials/M_CountertopC_10X8_0>
            normal3f[] normals = [(0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0, -1), (5.666324e-8, 0, -1), (1.3263478e-8, 0, -1), (1.768523e-8, 0, -1), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (-1, -5.0926204e-8, 0), (-1, -3.7760493e-8, 0), (-1, -5.5958505e-8, 0), (-1, -2.5463104e-8, 0), (1, -0.000001074654, 0), (1, -0.000001074654, 0), (1, -0.000001074654, 0), (1, -0.000001074654, 0), (1.6999014e-7, 0, -1), (5.666324e-8, 0, -1), (0, 0, -1), (0, 0, -1), (-7.5582165e-8, 0, 1), (0, 0, 1), (0, 0, 1), (-7.555963e-8, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (2.2666886e-7, 0, -1), (5.666324e-8, 0, -1), (1.6999014e-7, 0, -1), (2.2668254e-7, 0, -1), (1.3263478e-8, 0, -1), (5.666324e-8, 0, -1), (2.2666886e-7, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0.0000010410711, 0), (-1, 0.0000010410711, 0), (-1, 0.0000010410711, 0), (-1, 0.0000010410711, 0), (8.842643e-9, 0, -1), (1.7685036e-8, 0, -1), (1.768523e-8, 0, -1), (1.3263478e-8, 0, -1), (-7.5582165e-8, 0, 1), (-7.555963e-8, 0, 1), (-7.55806e-8, 0, 1), (-7.556441e-8, 0, 1), (0, 0, -1), (0, 0, -1), (8.842643e-9, 0, -1), (1.3263478e-8, 0, -1), (-1, -2.5463104e-8, 0), (-1, -5.5958505e-8, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1.6999014e-7, 0, -1), (0, 0, -1), (0, 0, -1), (2.2668254e-7, 0, -1), (1.7685036e-8, 0, -1), (8.842643e-9, 0, -1), (0, 0, -1), (0, 0, -1), (-7.55806e-8, 0, 1), (0, 0, 1), (0, 0, 1), (-7.556441e-8, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0.0000016742783, 0.99999994, 0), (0.0000016742783, 0.99999994, 0), (0.0000016742783, 0.99999994, 0), (0.0000016742783, 0.99999994, 0), (0.004993386, -0.0069017797, 0.99996364), (-0.004993571, -0.006901704, 0.99996364), (-0.0049958, -0.006898641, 0.99996376), (0.00499584, -0.0068984074, 0.99996376), (-0.00017919394, 0.00021334722, 1), (0.00017916985, 0.00021334722, 1), (0.00017919291, 0.00021331575, 1), (-0.00017921728, 0.00021331545, 0.99999994), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0.99999994, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-0.0000016742722, 0.99999994, 0), (-0.0000016742722, 0.99999994, 0), (-0.0000016742722, 0.99999994, 0), (-0.0000016742722, 0.99999994, 0), (-0.0022121584, -0.0016768203, 0.99999624), (-0.00011388108, -0.0021286285, 0.99999774), (-0.00011388108, -0.0021286285, 0.99999774), (-0.0038109198, -0.00129808, 0.9999918), (0.000112166745, -0.002129212, 0.9999978), (0.0022109426, -0.0016769543, 0.99999624), (0.0038300345, -0.0013926193, 0.9999917), (0.000112166745, -0.002129212, 0.9999978), (-1, -5.5958505e-8, 0), (-1, -3.7760493e-8, 0), (-1, -6.976737e-8, 0), (-1, -1.16949295e-7, 0), (-1, -3.7760493e-8, 0), (-1, 0, 0), (-1, 0, 0), (-1, -6.976737e-8, 0), (0.00017919291, 0.00021331575, 1), (0.00017916985, 0.00021334722, 1), (0.00035838337, -0.00003076646, 0.99999994), (0.00035838337, -0.00003076646, 0.99999994), (0.9999998, 0.0005642872, 0), (0.9999998, 0.0005642872, 0), (0.9999998, 0.0005642872, 0), (0.9999998, 0.0005642872, 0), (-0.0049958, -0.006898641, 0.99996376), (-0.004993571, -0.006901704, 0.99996364), (-0.0022121584, -0.0016768203, 0.99999624), (-0.0038109198, -0.00129808, 0.9999918), (0.004993386, -0.0069017797, 0.99996364), (0.00499584, -0.0068984074, 0.99996376), (0.0038300345, -0.0013926193, 0.9999917), (0.0022109426, -0.0016769543, 0.99999624), (-0.9999998, 0.0005636791, 0), (-0.9999998, 0.0005636791, 0), (-0.9999998, 0.0005636791, 0), (-0.9999998, 0.0005636791, 0), (-0.00017919394, 0.00021334722, 1), (-0.00017921728, 0.00021331545, 0.99999994), (-0.0003584317, -0.000030766536, 0.9999999), (-0.0003584317, -0.000030766536, 0.9999999), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(1.523137, 1.237775, 0.418626), (1.523137, 1.237775, 0.388627), (0.913533, 0.628176, 0.418626), (0.913533, 0.628176, 0.388626), (-1.524867, 1.237775, 0.418626), (-0.915265, 0.628176, 0.418626), (-0.915265, 0.628176, 0.388626), (1.523137, -1.200625, 0.418626), (1.523137, -1.200625, 0.388626), (0.913531, -1.220625, 0.388626), (0.913531, -1.220625, 0.418626), (0.933534, 0.64818, 0.388626), (-0.935262, 0.64818, 0.388626), (0.933534, -1.200625, 0.388626), (0.933534, -1.200625, 0.418626), (0.933534, 0.64818, 0.418626), (-0.935262, 0.64818, 0.418626), (0.933534, 0.64818, -0.437404), (-0.935262, 0.64818, -0.437404), (0.933534, -1.200625, -0.437404), (0.952497, 0.667141, -0.437143), (-0.954226, 0.667141, -0.437143), (0.952497, 0.667141, -0.517143), (-0.954226, 0.667141, -0.517143), (-1.524867, 1.237775, -0.517404), (1.523137, 1.237775, -0.517404), (-1.524867, 1.237775, 0.388626), (-1.524867, -1.200625, 0.418626), (-1.524867, -1.200625, 0.388626), (-0.915267, -1.220625, 0.388626), (-0.915267, -1.220625, 0.418626), (-0.935262, -1.200625, 0.388626), (-0.935262, -1.200625, 0.418626), (-0.935262, -1.200625, -0.437404), (1.523137, -1.200625, -0.437273), (-1.524867, -1.200625, -0.437274), (0.953534, -1.170624, -0.437274), (1.523137, -1.170625, -0.437273), (1.523137, -1.170625, -0.517404), (0.953534, -1.170624, -0.517274), (-0.955262, -1.170624, -0.437274), (-0.955262, -1.170624, -0.517274), (-1.524867, -1.170625, -0.517404), (-1.524867, -1.170625, -0.437274), (1.523137, -1.220625, 0.418626), (1.523137, -1.220625, 0.388626), (-1.524867, -1.220625, 0.418626), (-1.524867, -1.220625, 0.388626)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-10.171292, 1.229714), (-10.171292, 1.182838), (-9.218728, 1.182838), (-9.218728, 1.229714), (-11.940162, 2.404385), (-11.01891, 1.483144), (-8.098913, 1.483144), (-7.17766, 2.404385), (-10.859787, 1.242143), (-10.859787, 1.19527), (-8.002205, 1.19527), (-8.002205, 1.242143), (-11.417684, 1.188114), (-11.417684, 1.141239), (-7.607666, 1.141239), (-7.607666, 1.188114), (-7.988742, 1.168524), (-7.988743, 1.2154), (-10.877445, 1.2154), (-10.877445, 1.168524), (-11.01891, -1.405615), (-11.01891, 1.483144), (-11.940162, 2.404385), (-11.940161, -1.405615), (-8.130168, -0.484322), (-10.98765, -0.484322), (-11.018903, -0.515578), (-8.09892, -0.515578), (-10.98765, -0.484322), (-10.987646, 2.404414), (-11.018901, 2.373166), (-11.018903, -0.515578), (-10.987658, 1.451886), (-11.01891, 1.483144), (-11.01891, -1.405615), (-10.987654, -1.436862), (-8.098913, 1.483144), (-11.01891, 1.483144), (-10.987658, 1.451886), (-8.130161, 1.451886), (-9.218752, 1.217283), (-10.171268, 1.217283), (-10.171268, 1.17041), (-9.218752, 1.17041), (-7.17761, 1.174471), (-11.940208, 1.17447), (-11.940209, 1.127597), (-7.177609, 1.127597), (-7.576367, 1.201756), (-11.386486, 1.201756), (-11.386487, 1.154882), (-7.576366, 1.154882), (-10.877472, 1.182168), (-7.988716, 1.182168), (-7.988716, 1.229041), (-10.877472, 1.229041), (-8.098913, -1.405615), (-7.177658, -1.405615), (-7.17766, 2.404385), (-8.098913, 1.483144), (-8.130168, -0.484322), (-8.09892, -0.515578), (-8.09892, 2.373165), (-8.130163, 2.404414), (-8.130161, 1.451886), (-8.130157, -1.436862), (-8.098913, -1.405615), (-8.098913, 1.483144), (-7.607666, 1.188114), (-7.607666, 1.141239), (-7.576418, 1.141239), (-7.576417, 1.188114), (-11.940149, 2.373167), (-11.018901, 2.373166), (-10.987646, 2.404414), (-11.940149, 2.404414), (-11.01891, -1.405615), (-11.940161, -1.405615), (-11.940161, -1.436862), (-10.987654, -1.436862), (-7.177658, -1.405615), (-8.098913, -1.405615), (-8.130157, -1.436862), (-7.177658, -1.436862), (-8.09892, 2.373165), (-7.177668, 2.373165), (-7.177669, 2.404414), (-8.130163, 2.404414), (-11.386487, 1.154882), (-11.386486, 1.201756), (-11.417734, 1.201756), (-11.417735, 1.154882), (-18.966494, 0.755596), (-20.426489, 0.755596), (-20.426489, 0.110258), (-18.966494, 0.110258), (-18.972574, 0.607182), (-20.416954, 0.607181), (-20.416954, -0.038155), (-18.972574, -0.038155), (-19.606846, 0.246767), (-20.252182, 0.246767), (-20.252182, -0.213862), (-18.954948, 0.548155), (-20.444582, 0.548155), (-20.444582, 0.485653), (-18.954948, 0.485653), (-19.684862, 0.222095), (-20.12987, 0.222095), (-20.12987, 0.159494), (-19.684862, 0.159595), (-18.538078, -0.587955), (-19.998123, -0.587955), (-20.012936, -0.602772), (-18.523262, -0.602772), (-18.523285, 0.566965), (-20.012915, 0.566965), (-20.458729, 0.121157), (-18.077473, 0.121157), (-20.416952, 0.458769), (-20.416952, -0.186567), (-18.972574, -0.186569), (-18.972574, 0.458769), (-19.606846, -0.104599), (-20.252182, 0.356031), (-20.252182, -0.104597), (-19.606846, -0.104599), (-19.606947, 0.356031), (-20.252182, 0.356031), (-18.077475, 0.230003), (-18.077475, 0.937842), (-20.458725, 0.937841), (-20.458725, 0.230003), (-19.606846, 0.246767), (-20.252182, -0.213862), (-19.606947, -0.213863), (-20.129871, 0.242094), (-20.129871, 0.179594), (-19.684862, 0.179495), (-19.684862, 0.242094), (-19.998123, 0.856466), (-20.458765, 0.856466), (-20.458765, 0.833033), (-20.013748, 0.833029), (-18.077436, 0.856466), (-18.538078, 0.856466), (-18.522453, 0.833029), (-18.077436, 0.833033), (-18.262949, 1.101463), (-20.16795, 1.101463), (-18.286386, 0.456228), (-18.262949, 0.456228), (-20.16795, 1.101463), (-20.16795, 0.393625), (-18.286386, 0.393625), (-18.286386, 0.456228), (-18.802315, 0.460215), (-19.248123, 0.906027), (-20.683876, 0.905216), (-20.683878, 0.460215), (-18.97593, 0.020914), (-18.97593, 0.083414), (-20.411692, 0.083311), (-20.411692, 0.020811), (-20.012936, -0.602772), (-19.998123, -0.587955), (-19.998123, 0.856466), (-20.013748, 0.833029), (-18.538078, -0.587955), (-18.523262, -0.602772), (-18.522453, 0.833029), (-18.538078, 0.856466), (-20.411692, 0.063848), (-20.411692, 0.00135), (-18.97593, 0.001247), (-18.97593, 0.063746), (-19.248121, 0.355919), (-18.802313, 0.801731), (-20.683878, 0.801731), (-20.683878, 0.356727), (-18.687883, 0.462467), (-18.687883, 1.170303), (-20.569448, 0.525068), (-20.569448, 0.462467), (-18.687883, 1.170303), (-20.592886, 1.170303), (-20.592886, 0.525068), (-20.569448, 0.525068)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_CountertopC_10X8_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
                rel material:binding = </root/_materials/M_CountertopC_10X8_0>
            }

            def GeomSubset "M_CountertopC_10X8_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47]
                rel material:binding = </root/_materials/M_CountertopC_10X8_1>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_CountertopC_10X8_0"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopC_10X8_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopC_10X8_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/marbleBase2.jpg@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopC_10X8_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_CountertopC_10X8_1"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopC_10X8_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopC_10X8_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_CountertopC_10X8_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/DarkWood2.tif@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopC_10X8_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopC_10X8_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

