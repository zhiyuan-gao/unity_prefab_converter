#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "AlarmClockButton_9"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "AlarmClockButton_9" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.04834, -0.017086, -0.383913), (0.04834, 0.017086, 0.129574)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 4, 5, 7, 6, 8, 9, 11, 10, 20, 22, 27, 26, 21, 20, 33, 32, 67, 68, 24, 23, 23, 25, 31, 30, 25, 24, 35, 34, 26, 28, 37, 36, 65, 66, 30, 29, 29, 31, 39, 38, 68, 69, 35, 24, 67, 23, 30, 66, 65, 29, 38, 64, 25, 34, 39, 31, 26, 36, 33, 20, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 28, 41, 40, 37, 28, 27, 42, 41, 22, 43, 42, 27, 22, 21, 44, 43, 21, 32, 45, 44, 41, 47, 46, 40, 41, 42, 48, 47, 43, 49, 48, 42, 43, 44, 50, 49, 44, 45, 51, 50, 47, 53, 52, 46, 47, 48, 54, 53, 49, 55, 54, 48, 49, 50, 56, 55, 50, 51, 57, 56, 53, 59, 58, 52, 53, 54, 60, 59, 55, 61, 60, 54, 55, 56, 62, 61, 56, 57, 63, 62, 59, 65, 64, 58, 59, 60, 66, 65, 61, 67, 66, 60, 61, 62, 68, 67, 62, 63, 69, 68, 12, 13, 15, 14, 16, 17, 19, 18]
            rel material:binding = </root/_materials/M_AlarmClockButton_9_0>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.7442182, 0.4896778, -0.45426324), (-0.54025084, 0.5046368, -0.67340237), (-0.5403309, -0.50448614, -0.673451), (-0.74430364, -0.48944372, -0.45437554), (-0.5586684, 0.72843635, -0.3965729), (-0.7442182, 0.4896778, -0.45426324), (-0.8146262, 0.57998633, -1.9599675e-8), (-0.55776584, 0.8299984, 0), (0.27330595, 0.563985, -0.77924633), (0.21849519, 0.7845007, -0.5803607), (0.558697, 0.7284612, -0.39648694), (0.5403227, 0.5046712, -0.67331886), (0.5403227, 0.5046712, -0.67331886), (0.7442617, 0.4895702, -0.45430797), (0.7443136, -0.4895624, -0.45423126), (0.5402824, -0.50457096, -0.67342645), (0.7442617, 0.4895702, -0.45430797), (0.558697, 0.7284612, -0.39648694), (0.55776584, 0.82999843, 0.0000947147), (0.8146262, 0.57998633, 0), (-0.74430364, -0.48944372, -0.45437554), (-0.55874085, -0.7283197, -0.39668494), (-0.5578653, -0.8299315, -1.7283318e-8), (-0.81471884, -0.5798561, 0), (0.2184811, -0.784332, -0.58059406), (0.27338952, -0.5638562, -0.7793102), (0.5402824, -0.50457096, -0.67342645), (0.5587721, -0.72834456, -0.39659536), (0.5587721, -0.72834456, -0.39659536), (0.7443136, -0.4895624, -0.45423126), (0.81471884, -0.5798561, -1.958606e-8), (0.5578653, -0.8299315, 0), (0.21849519, 0.7845007, -0.5803607), (0, 1, 0), (0.55776584, 0.82999843, 0.0000947147), (0.558697, 0.7284612, -0.39648694), (0.27330595, 0.563985, -0.77924633), (0.5403227, 0.5046712, -0.67331886), (0.5402824, -0.50457096, -0.67342645), (0.27338952, -0.5638562, -0.7793102), (0.2184811, -0.784332, -0.58059406), (0.5587721, -0.72834456, -0.39659536), (0.5578653, -0.8299315, 0), (0, -1, 0), (0.7442617, 0.4895702, -0.45430797), (0.8146262, 0.57998633, 0), (0.81471884, -0.5798561, -1.958606e-8), (0.7443136, -0.4895624, -0.45423126), (-0.74430364, -0.48944372, -0.45437554), (-0.81471884, -0.5798561, 0), (-0.8146262, 0.57998633, -1.9599675e-8), (-0.7442182, 0.4896778, -0.45426324), (-0.7442182, 0.4896778, -0.45426324), (-0.5586684, 0.72843635, -0.3965729), (-0.54025084, 0.5046368, -0.67340237), (0.5403227, 0.5046712, -0.67331886), (0.558697, 0.7284612, -0.39648694), (0.7442617, 0.4895702, -0.45430797), (-0.74430364, -0.48944372, -0.45437554), (-0.5403309, -0.50448614, -0.673451), (-0.55874085, -0.7283197, -0.39668494), (0.5587721, -0.72834456, -0.39659536), (0.5402824, -0.50457096, -0.67342645), (0.7443136, -0.4895624, -0.45423126), (-0.55874085, -0.7283197, -0.39668494), (-0.21848151, -0.784332, -0.5805939), (0, -1, 0), (-0.5578653, -0.8299315, -1.7283318e-8), (-0.55874085, -0.7283197, -0.39668494), (-0.5403309, -0.50448614, -0.673451), (-0.27339935, -0.5638564, -0.77930665), (-0.21848151, -0.784332, -0.5805939), (-0.54025084, 0.5046368, -0.67340237), (-0.2733159, 0.5639852, -0.7792426), (-0.27339935, -0.5638564, -0.77930665), (-0.5403309, -0.50448614, -0.673451), (-0.54025084, 0.5046368, -0.67340237), (-0.5586684, 0.72843635, -0.3965729), (-0.218483, 0.7844235, -0.5804698), (-0.2733159, 0.5639852, -0.7792426), (-0.5586684, 0.72843635, -0.3965729), (-0.55776584, 0.8299984, 0), (0, 1, 0), (-0.218483, 0.7844235, -0.5804698), (-0.21848151, -0.784332, -0.5805939), (-0.118763134, -0.7881753, -0.60388327), (0, -1, 0), (0, -1, 0), (-0.21848151, -0.784332, -0.5805939), (-0.27339935, -0.5638564, -0.77930665), (-0.1475208, -0.5732367, -0.80600077), (-0.118763134, -0.7881753, -0.60388327), (-0.2733159, 0.5639852, -0.7792426), (-0.15005991, 0.5733588, -0.8054451), (-0.1475208, -0.5732367, -0.80600077), (-0.27339935, -0.5638564, -0.77930665), (-0.2733159, 0.5639852, -0.7792426), (-0.218483, 0.7844235, -0.5804698), (-0.118783176, 0.78826046, -0.60376817), (-0.15005991, 0.5733588, -0.8054451), (-0.218483, 0.7844235, -0.5804698), (0, 1, 0), (0, 1, 0), (-0.118783176, 0.78826046, -0.60376817), (-0.118763134, -0.7881753, -0.60388327), (0, -0.7878783, -0.61583096), (0, -1, 0), (0, -1, 0), (-0.118763134, -0.7881753, -0.60388327), (-0.1475208, -0.5732367, -0.80600077), (-0.000021581138, -0.57287323, -0.819644), (0, -0.7878783, -0.61583096), (-0.15005991, 0.5733588, -0.8054451), (0, 0.5730468, -0.8195227), (-0.000021581138, -0.57287323, -0.819644), (-0.1475208, -0.5732367, -0.80600077), (-0.15005991, 0.5733588, -0.8054451), (-0.118783176, 0.78826046, -0.60376817), (-0.00011747857, 0.78793836, -0.615754), (0, 0.5730468, -0.8195227), (-0.118783176, 0.78826046, -0.60376817), (0, 1, 0), (0, 1, 0), (-0.00011747857, 0.78793836, -0.615754), (0, -0.7878783, -0.61583096), (0.118763216, -0.78817534, -0.6038833), (0, -1, 0), (0, -1, 0), (0, -0.7878783, -0.61583096), (-0.000021581138, -0.57287323, -0.819644), (0.14752081, -0.57323676, -0.8060007), (0.118763216, -0.78817534, -0.6038833), (0, 0.5730468, -0.8195227), (0.15005991, 0.5733588, -0.80544496), (0.14752081, -0.57323676, -0.8060007), (-0.000021581138, -0.57287323, -0.819644), (0, 0.5730468, -0.8195227), (-0.00011747857, 0.78793836, -0.615754), (0.11869128, 0.78826046, -0.6037863), (0.15005991, 0.5733588, -0.80544496), (-0.00011747857, 0.78793836, -0.615754), (0, 1, 0), (0, 1, 0), (0.11869128, 0.78826046, -0.6037863), (0.118763216, -0.78817534, -0.6038833), (0.2184811, -0.784332, -0.58059406), (0, -1, 0), (0, -1, 0), (0.118763216, -0.78817534, -0.6038833), (0.14752081, -0.57323676, -0.8060007), (0.27338952, -0.5638562, -0.7793102), (0.2184811, -0.784332, -0.58059406), (0.15005991, 0.5733588, -0.80544496), (0.27330595, 0.563985, -0.77924633), (0.27338952, -0.5638562, -0.7793102), (0.14752081, -0.57323676, -0.8060007), (0.15005991, 0.5733588, -0.80544496), (0.11869128, 0.78826046, -0.6037863), (0.21849519, 0.7845007, -0.5803607), (0.27330595, 0.563985, -0.77924633), (0.11869128, 0.78826046, -0.6037863), (0, 1, 0), (0, 1, 0), (0.21849519, 0.7845007, -0.5803607), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.0005, -0.0005, -0.383913), (-0.0005, -0.0005, -0.383913), (0.0005, 0.0005, -0.383913), (-0.0005, 0.0005, -0.383913), (0.0005, -0.0005, -0.383913), (-0.0005, -0.0005, -0.383913), (0.0005, 0.0005, -0.383913), (-0.0005, 0.0005, -0.383913), (0.0005, -0.0005, -0.383913), (-0.0005, -0.0005, -0.383913), (0.0005, 0.0005, -0.383913), (-0.0005, 0.0005, -0.383913), (0.0005, -0.0005, -0.383913), (-0.0005, -0.0005, -0.383913), (0.0005, 0.0005, -0.383913), (-0.0005, 0.0005, -0.383913), (0.0005, -0.0005, -0.383913), (-0.0005, -0.0005, -0.383913), (0.0005, 0.0005, -0.383913), (-0.0005, 0.0005, -0.383913), (0.04834, -0.014668, 0.114399), (0.045923, -0.017086, 0.114399), (0.045923, -0.014668, 0.116816), (-0.045923, -0.014668, 0.116816), (-0.045923, -0.017086, 0.114399), (-0.04834, -0.014668, 0.114399), (0.04834, 0.014668, 0.114399), (0.045923, 0.014668, 0.116816), (0.045923, 0.017086, 0.114399), (-0.045923, 0.017086, 0.114399), (-0.045923, 0.014668, 0.116816), (-0.04834, 0.014668, 0.114399), (0.045923, -0.017086, 0.098591), (0.04834, -0.014668, 0.098591), (-0.04834, -0.014668, 0.098591), (-0.045923, -0.017086, 0.098591), (0.04834, 0.014668, 0.098591), (0.045923, 0.017086, 0.098591), (-0.045923, 0.017086, 0.098591), (-0.04834, 0.014668, 0.098591), (0.030616, 0.017086, 0.098591), (0.030616, 0.017086, 0.121326), (0.030616, 0.014667, 0.123743), (0.030616, -0.014668, 0.123743), (0.030616, -0.017086, 0.121326), (0.030616, -0.017086, 0.098591), (0.015308, 0.017086, 0.098591), (0.015308, 0.017086, 0.125565), (0.015308, 0.014667, 0.127982), (0.015308, -0.014668, 0.127982), (0.015308, -0.017086, 0.125565), (0.015308, -0.017086, 0.098591), (0, 0.017086, 0.098591), (0, 0.017086, 0.127158), (0, 0.014667, 0.129574), (0, -0.014668, 0.129574), (0, -0.017086, 0.127158), (0, -0.017086, 0.098591), (-0.015308, 0.017086, 0.098591), (-0.015308, 0.017086, 0.125565), (-0.015308, 0.014667, 0.127982), (-0.015308, -0.014668, 0.127982), (-0.015308, -0.017086, 0.125565), (-0.015308, -0.017086, 0.098591), (-0.030616, 0.017086, 0.098591), (-0.030616, 0.017086, 0.121326), (-0.030616, 0.014667, 0.123743), (-0.030616, -0.014668, 0.123743), (-0.030616, -0.017086, 0.121326), (-0.030616, -0.017086, 0.098591)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-20.43686, -6.067932), (-19.440914, -6.067932), (-19.440914, -5.071916), (-20.43686, -5.071916), (-14.606204, -5.071917), (-14.606204, -6.067932), (-13.610188, -6.067932), (-13.610188, -5.071917), (-7.189819, -5.333173), (-7.189819, -5.341045), (-7.181947, -5.341045), (-7.181947, -5.333173), (-6.950371, 0.848381), (-6.947889, 0.848381), (-6.947889, 0.878507), (-6.950371, 0.878507), (-6.950371, 0.845898), (-6.950371, 0.848381), (-6.966605, 0.848381), (-6.966605, 0.845898), (-7.642926, 0.33227), (-7.645406, 0.33227), (-7.645406, 0.316566), (-7.642926, 0.316566), (-7.096829, 0.878507), (-7.09931, 0.878507), (-7.09931, 0.848381), (-7.096829, 0.848381), (-7.09931, 0.878507), (-7.09931, 0.88099), (-7.115545, 0.88099), (-7.115545, 0.878507), (-6.950371, 0.878507), (-6.950371, 0.88099), (-6.966605, 0.88099), (-6.966605, 0.878507), (-7.61035, 0.33227), (-7.61283, 0.33227), (-7.61283, 0.316566), (-7.61035, 0.316566), (-7.09931, 0.845898), (-7.09931, 0.848381), (-7.115545, 0.848381), (-7.115545, 0.845898), (-7.366964, 0.333781), (-7.389166, 0.333781), (-7.389166, 0.318832), (-7.373729, 0.318832), (-7.642926, 0.33227), (-7.642926, 0.316566), (-7.61283, 0.316566), (-7.61283, 0.33227), (-7.151812, 0.333781), (-7.145047, 0.318832), (-7.12961, 0.318832), (-7.12961, 0.333781), (-7.09931, 0.878507), (-7.115545, 0.878507), (-7.115545, 0.848381), (-7.09931, 0.848381), (-6.950371, 0.878507), (-6.966605, 0.878507), (-6.966605, 0.848381), (-6.950371, 0.848381), (-6.950371, 0.848381), (-6.950371, 0.845898), (-6.947889, 0.848381), (-7.096829, 0.878507), (-7.09931, 0.88099), (-7.09931, 0.878507), (-6.950371, 0.878507), (-6.947889, 0.878507), (-6.950371, 0.88099), (-7.09931, 0.845898), (-7.096829, 0.848381), (-7.09931, 0.848381), (-7.145047, 0.408526), (-7.151812, 0.393577), (-7.12961, 0.393577), (-7.12961, 0.408526), (-7.61035, 0.410792), (-7.61283, 0.410792), (-7.61283, 0.395088), (-7.61035, 0.395088), (-7.642926, 0.410792), (-7.642926, 0.395088), (-7.61283, 0.395088), (-7.61283, 0.410792), (-7.642926, 0.410792), (-7.645406, 0.410792), (-7.645406, 0.395088), (-7.642926, 0.395088), (-7.373729, 0.408526), (-7.389166, 0.408526), (-7.389166, 0.393577), (-7.366964, 0.393577), (-7.151812, 0.393577), (-7.155951, 0.378628), (-7.12961, 0.378628), (-7.12961, 0.393577), (-7.61035, 0.395088), (-7.61283, 0.395088), (-7.61283, 0.379383), (-7.61035, 0.379383), (-7.642926, 0.395088), (-7.642926, 0.379383), (-7.61283, 0.379383), (-7.61283, 0.395088), (-7.642926, 0.395088), (-7.645406, 0.395088), (-7.645406, 0.379383), (-7.642926, 0.379383), (-7.366964, 0.393577), (-7.389166, 0.393577), (-7.389166, 0.378628), (-7.362824, 0.378628), (-7.155951, 0.378628), (-7.157506, 0.363679), (-7.12961, 0.363679), (-7.12961, 0.378628), (-7.61035, 0.379383), (-7.61283, 0.379383), (-7.61283, 0.363679), (-7.61035, 0.363679), (-7.642926, 0.379383), (-7.642926, 0.363679), (-7.61283, 0.363679), (-7.61283, 0.379383), (-7.642926, 0.379383), (-7.645406, 0.379383), (-7.645406, 0.363679), (-7.642926, 0.363679), (-7.362824, 0.378628), (-7.389166, 0.378628), (-7.389166, 0.363679), (-7.361269, 0.363679), (-7.157506, 0.363679), (-7.155951, 0.34873), (-7.12961, 0.34873), (-7.12961, 0.363679), (-7.61035, 0.363679), (-7.61283, 0.363679), (-7.61283, 0.347975), (-7.61035, 0.347975), (-7.642926, 0.363679), (-7.642926, 0.347975), (-7.61283, 0.347975), (-7.61283, 0.363679), (-7.642926, 0.363679), (-7.645406, 0.363679), (-7.645406, 0.347975), (-7.642926, 0.347975), (-7.361269, 0.363679), (-7.389166, 0.363679), (-7.389166, 0.34873), (-7.362824, 0.34873), (-7.155951, 0.34873), (-7.151812, 0.333781), (-7.12961, 0.333781), (-7.12961, 0.34873), (-7.61035, 0.347975), (-7.61283, 0.347975), (-7.61283, 0.33227), (-7.61035, 0.33227), (-7.642926, 0.347975), (-7.642926, 0.33227), (-7.61283, 0.33227), (-7.61283, 0.347975), (-7.642926, 0.347975), (-7.645406, 0.347975), (-7.645406, 0.33227), (-7.642926, 0.33227), (-7.362824, 0.34873), (-7.389166, 0.34873), (-7.389166, 0.333781), (-7.366964, 0.333781), (0.001991, -3.564456), (0.001991, -4.560472), (0.997473, -4.560472), (0.997473, -3.564456), (0.51998, -9.040928), (0.51998, -9.048801), (0.527853, -9.048801), (0.527853, -9.040928)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_AlarmClockButton_9_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0]
                rel material:binding = </root/_materials/M_AlarmClockButton_9_0>
            }

            def GeomSubset "M_AlarmClockButton_9_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [1]
                rel material:binding = </root/_materials/M_AlarmClockButton_9_1>
            }

            def GeomSubset "M_AlarmClockButton_9_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44]
                rel material:binding = </root/_materials/M_AlarmClockButton_9_2>
            }

            def GeomSubset "M_AlarmClockButton_9_3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [45]
                rel material:binding = </root/_materials/M_AlarmClockButton_9_3>
            }

            def GeomSubset "M_AlarmClockButton_9_4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [46]
                rel material:binding = </root/_materials/M_AlarmClockButton_9_4>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_AlarmClockButton_9_0"
        {
            token outputs:surface.connect = </root/_materials/M_AlarmClockButton_9_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.5588235, 0.37020314, 0)
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }

        def Material "M_AlarmClockButton_9_1"
        {
            token outputs:surface.connect = </root/_materials/M_AlarmClockButton_9_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.46323532, 0.20096238, 0.20096238)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_AlarmClockButton_9_1/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Copper_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_AlarmClockButton_9_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_AlarmClockButton_9_2"
        {
            token outputs:surface.connect = </root/_materials/M_AlarmClockButton_9_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_AlarmClockButton_9_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_AlarmClockButton_9_2/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_AlarmClockButton_9_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_AlarmClockButton_9_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_AlarmClockButton_9_3"
        {
            token outputs:surface.connect = </root/_materials/M_AlarmClockButton_9_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_AlarmClockButton_9_3/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Alarm_Clock_Readout3_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_AlarmClockButton_9_3/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_AlarmClockButton_9_4"
        {
            token outputs:surface.connect = </root/_materials/M_AlarmClockButton_9_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.8, 0.8, 0.8)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 1
                float inputs:specular = 0
                token outputs:surface
            }
        }
    }
}

