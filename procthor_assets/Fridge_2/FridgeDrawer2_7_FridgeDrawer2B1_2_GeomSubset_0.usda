#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "FridgeDrawer2_7_FridgeDrawer2B1_2_GeomSubset_0"
    {
        def Mesh "FridgeDrawer2_7_FridgeDrawer2B1_2_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 68, 61, 81, 78, 56, 37, 41, 55, 61, 34, 35, 60, 60, 35, 36, 62, 55, 41, 40, 67, 69, 38, 39, 68, 67, 40, 38, 69, 62, 36, 37, 56, 68, 39, 34, 61, 28, 34, 39, 29, 56, 75, 74, 62, 69, 77, 76, 67, 69, 68, 78, 77, 55, 67, 76, 79, 60, 62, 74, 80, 60, 80, 81, 61, 75, 56, 55, 79, 83, 82, 28, 29, 93, 92, 91, 90, 35, 34, 28, 82, 86, 87, 36, 35, 86, 40, 41, 84, 88, 38, 89, 83, 29, 39, 89, 38, 40, 88, 37, 36, 87, 85, 41, 37, 90, 91, 37, 85, 93, 90, 85, 84, 92, 93, 84, 41, 91, 92]
            rel material:binding = </root/_materials/M_FridgeDrawer2B1_0>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -0.8724595, 0.48868632), (0, -0.8724595, 0.48868632), (-8.7573426e-8, -0.8501915, 0.52647364), (-3.160676e-7, -0.8501915, 0.5264737), (-0.041789472, -0.06822562, 0.9967943), (-0.015800714, -0.025300317, 0.999555), (0.01580013, -0.025296316, 0.9995552), (0.041807525, -0.068184465, 0.9967963), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.06930402, 0.0020005777, 0.9975935), (-0.06929284, 0.0019981791, 0.9975943), (0.041807525, -0.068184465, 0.9967963), (0.01580013, -0.025296316, 0.9995552), (0.06929966, 0.0020005514, 0.9975938), (0.06928855, 0.0019982911, 0.99759465), (8.6084486e-7, 0, 1), (8.738244e-7, 0, 1), (8.73908e-7, 0, 1), (8.8224806e-7, 0, 1), (0.06928855, 0.0019982911, 0.99759465), (0.06929966, 0.0020005514, 0.9975938), (8.738244e-7, 0, 1), (8.6084486e-7, 0, 1), (-0.06929284, 0.0019981791, 0.9975943), (-0.06930402, 0.0020005777, 0.9975935), (-0.015800714, -0.025300317, 0.999555), (-0.041789472, -0.06822562, 0.9967943), (8.8224806e-7, 0, 1), (8.73908e-7, 0, 1), (0, 0, 1), (0, 0, 1), (0.000059531198, 0.9155121, -0.40229037), (0, 1, 0), (0, 1, 0), (0, 0.915512, -0.4022904), (0.99960124, -0.008783014, -0.026838206), (0.999626, -0.009072473, -0.025796507), (0.9996317, -0.00899718, -0.025600936), (0.9996025, -0.0087273, -0.02680395), (-0.9956644, 0.058400925, -0.07239998), (-0.9966232, 0.06951295, -0.043704055), (-0.9996317, -0.0090003265, -0.025601393), (-0.99960315, -0.00868303, -0.026797637), (-0.9956644, 0.058400925, -0.07239998), (-0.99512345, 0.062863626, -0.07600957), (-0.99587834, 0.07249574, -0.054505296), (-0.9966232, 0.06951295, -0.043704055), (-0.9996012, -0.008782968, -0.02683901), (-0.99960315, -0.00868303, -0.026797637), (-0.9996317, -0.0090003265, -0.025601393), (-0.9996186, -0.008979132, -0.026119292), (0.9956642, 0.058401957, -0.07240166), (0.9996025, -0.0087273, -0.02680395), (0.9996317, -0.00899718, -0.025600936), (0.99662304, 0.06951654, -0.043700796), (0.9956642, 0.058401957, -0.07240166), (0.99662304, 0.06951654, -0.043700796), (0.99587834, 0.07249562, -0.054504942), (0.99512345, 0.06286346, -0.07600906), (0, 0.98231536, 0.18723382), (0, 0.9823141, 0.18724021), (0, 0.9823141, 0.18724021), (0, 0.9823154, 0.18723384), (0, 0.83701074, -0.5471865), (0, 0.83701074, -0.5471865), (0.000059531198, 0.9155121, -0.40229037), (0, 0.915512, -0.4022904), (0, -0.98568594, -0.16859207), (0, -0.98568594, -0.16859207), (0, -0.98568594, -0.16859207), (0, -0.98568594, -0.16859207), (-1, -2.03651e-8, 0), (-1, -4.07302e-8, 0), (-1, -4.07302e-8, 0), (-1, -2.787162e-8, 0), (-1, -2.2450218e-8, 0), (-1, -1.3234265e-8, 0), (-1, 0, 0), (-1, -2.03651e-8, 0), (-1, -2.2450218e-8, 0), (1, 0, 0), (1, 0, 0), (1, 2.6836031e-9, 0), (1, 2.174845e-9, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 2.174845e-9, 0), (-1, 0, 0), (-1, 0, 0), (-1, -1.3234265e-8, 0), (-1, -1.1927127e-9, 0), (0.01580013, -0.025296316, 0.9995552), (-0.015800714, -0.025300317, 0.999555), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, -1.1927127e-9, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 2.6836031e-9, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.004786, 0.044805, -0.909221), (-0.004777, 0.044805, -0.909221), (-0.004786, 0.044814, -0.909221), (-0.004777, 0.044814, -0.909221), (-0.004786, 0.044805, -0.909221), (-0.004777, 0.044805, -0.909221), (-0.004786, 0.044814, -0.909221), (-0.004777, 0.044814, -0.909221), (-0.004786, 0.044805, -0.909221), (-0.004777, 0.044805, -0.909221), (-0.004786, 0.044814, -0.909221), (-0.004777, 0.044814, -0.909221), (-0.004786, 0.044805, -0.909221), (-0.004777, 0.044805, -0.909221), (-0.004786, 0.044814, -0.909221), (-0.004777, 0.044814, -0.909221), (-0.004786, 0.044805, -0.909221), (-0.004777, 0.044805, -0.909221), (-0.004786, 0.044814, -0.909221), (-0.004777, 0.044814, -0.909221), (-0.004786, 0.044805, -0.909221), (-0.004777, 0.044805, -0.909221), (-0.004786, 0.044814, -0.909221), (-0.004777, 0.044814, -0.909221), (-0.004786, 0.044805, -0.909221), (-0.004777, 0.044805, -0.909221), (-0.004786, 0.044814, -0.909221), (-0.004777, 0.044814, -0.909221), (0.024687, 0.211928, -0.631387), (0.311026, 0.211928, -0.631387), (0.024687, 0.143474, -0.736102), (0.024687, 0.138602, -0.738737), (0.311026, 0.138602, -0.738737), (0.311026, 0.143474, -0.736102), (0.024687, 0.211928, -0.624204), (0.024687, 0.143474, -0.624204), (0.024687, 0.138602, -0.624204), (0.024687, -0.198804, -0.624204), (0.311026, 0.143474, -0.624204), (0.311026, 0.211928, -0.624204), (0.311026, 0.138602, -0.624204), (0.311026, -0.198804, -0.624204), (0.311026, -0.162537, -0.738737), (0.311026, -0.182658, -0.718617), (0.024687, -0.182658, -0.718617), (0.024687, -0.162537, -0.738737), (0.024687, -0.181126, -0.726317), (0.311026, -0.181126, -0.726317), (0.024687, -0.176765, -0.732844), (0.311026, -0.176765, -0.732844), (0.024687, -0.170237, -0.737206), (0.311026, -0.170237, -0.737206), (0.30407, 0.138908, -0.73114), (0.031642, 0.138908, -0.73114), (0.306693, -0.174137, -0.717041), (0.304175, -0.192052, -0.623049), (0.031537, -0.192052, -0.623049), (0.029019, -0.174137, -0.717041), (0.30407, 0.136948, -0.732201), (0.031642, 0.136948, -0.732201), (0.034374, 0.143474, -0.624204), (0.031537, 0.205078, -0.624204), (0.034374, 0.138602, -0.624204), (0.306626, -0.173152, -0.723014), (0.306626, -0.170662, -0.726741), (0.306626, -0.166934, -0.729232), (0.306676, -0.161689, -0.730123), (0.301338, 0.138602, -0.624204), (0.304175, 0.205078, -0.624204), (0.301338, 0.143474, -0.624204), (0.029036, -0.161689, -0.730123), (0.029087, -0.166934, -0.729232), (0.029087, -0.170662, -0.726741), (0.029087, -0.173152, -0.723014), (0.03382, 0.138267, -0.646117), (0.030919, -0.187655, -0.646117), (0.301892, 0.138267, -0.646117), (0.301898, 0.142538, -0.646117), (0.306128, 0.192804, -0.646117), (0.304793, -0.187655, -0.646117), (0.033814, 0.142538, -0.646117), (0.029584, 0.192804, -0.646117), (0.024687, 0.202298, -0.646117), (0.311026, 0.202298, -0.646117), (0.311026, -0.195056, -0.646117), (0.024687, -0.195056, -0.646117), (0.024687, 0.143474, -0.646117), (0.024687, 0.138602, -0.646117), (0.311026, 0.138602, -0.646117), (0.311026, 0.143474, -0.646117), (0.024687, -0.212466, -0.624204), (0.311026, -0.212466, -0.624204), (0.311026, -0.208718, -0.646117), (0.024687, -0.208718, -0.646117)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-170.75969, -111.21793), (-170.75969, -111.21802), (-170.7596, -111.21802), (-170.7596, -111.21793), (-170.07146, 0.041937), (-170.07146, 0.901153), (-170.14052, 0.907308), (-170.14052, 0.035782), (-171.1225, -0.498489), (-171.1427, -0.518391), (-170.29869, -0.518391), (-170.31891, -0.498489), (-171.1225, 0.672046), (-171.1427, 0.692237), (-171.1427, 0.490469), (-171.11414, 0.490469), (-171.11414, 0.490469), (-171.1427, 0.490469), (-171.1427, 0.476111), (-171.11414, 0.476111), (-170.31891, -0.498489), (-170.29869, -0.518391), (-170.29869, 0.476111), (-170.32727, 0.476111), (-170.32727, 0.490469), (-170.29869, 0.490469), (-170.29869, 0.692237), (-170.31891, 0.672046), (-170.32727, 0.476111), (-170.29869, 0.476111), (-170.29869, 0.490469), (-170.32727, 0.490469), (-171.11414, 0.476111), (-171.1427, 0.476111), (-171.1427, -0.518391), (-171.1225, -0.498489), (-170.31891, 0.672046), (-170.29869, 0.692237), (-171.1427, 0.692237), (-171.1225, 0.672046), (-170.2394, 0.38471), (-170.26187, 0.38471), (-170.26187, -0.511837), (-170.2394, -0.511837), (-170.29176, 0.625944), (-170.35971, 0.612993), (-170.35971, -0.347051), (-170.29518, -0.348041), (-170.24556, 0.444485), (-170.31007, 0.441729), (-170.31007, 0.429146), (-170.24556, 0.430136), (-170.24556, 0.444485), (-170.24556, 0.625948), (-170.31007, 0.589795), (-170.31007, 0.441729), (-170.24214, -0.543857), (-170.24556, 0.430136), (-170.31007, 0.429146), (-170.31007, -0.530906), (-170.29518, -0.36239), (-170.29518, -0.348041), (-170.35971, -0.347051), (-170.35971, -0.359634), (-170.29518, -0.36239), (-170.35971, -0.359634), (-170.35971, -0.507699), (-170.29518, -0.543852), (-170.11977, 0.875834), (-170.1883, 0.873998), (-170.1883, 0.064049), (-170.11977, 0.062213), (-170.19328, -0.511837), (-170.19328, 0.38471), (-170.2394, 0.38471), (-170.2394, -0.511837), (-170.2122, 0.361037), (-170.2122, -0.488164), (-170.14723, -0.488164), (-170.14723, 0.361037), (-170.39027, 0.490025), (-170.39027, 0.691582), (-170.41142, 0.691582), (-170.45479, 0.663228), (-170.45479, 0.490025), (-170.45479, 0.475682), (-170.39027, 0.475682), (-170.39027, 0.490025), (-170.45479, 0.490025), (-170.34244, -0.342009), (-170.34244, 0.651219), (-170.40695, 0.640188), (-170.40695, -0.342009), (-170.34244, -0.356349), (-170.40695, -0.356349), (-170.40695, -0.529512), (-170.36356, -0.557859), (-170.34244, -0.557859), (-170.40695, -0.356349), (-170.34244, -0.356349), (-170.34244, -0.342009), (-170.40695, -0.342009), (-170.39027, -0.517778), (-170.39027, 0.475682), (-170.45479, 0.475682), (-170.45479, -0.506744), (-170.29869, -0.518391), (-171.1427, -0.518391), (-171.1427, -0.55866), (-170.29869, -0.55866), (-170.39027, -0.517778), (-170.45479, -0.506744), (-170.45479, -0.54697), (-170.39027, -0.558004), (-170.15977, 0.357813), (-170.15977, -0.48494), (-170.11954, -0.48494), (-170.11954, 0.357813), (-170.40695, 0.640188), (-170.34244, 0.651219), (-170.34244, 0.691437), (-170.40695, 0.680405)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer2B1_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2B1_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.03676468, 0.03676468, 0.03676468)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2B1_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge.tga@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2B1_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

