#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "FridgeDrawer1_7_FridgeDrawer1B1_1_GeomSubset_0"
    {
        def Mesh "FridgeDrawer1_7_FridgeDrawer1B1_1_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 68, 61, 81, 78, 56, 37, 41, 55, 61, 34, 35, 60, 60, 35, 36, 62, 55, 41, 40, 67, 69, 38, 39, 68, 67, 40, 38, 69, 62, 36, 37, 56, 68, 39, 34, 61, 28, 34, 39, 29, 56, 75, 74, 62, 69, 77, 76, 67, 69, 68, 78, 77, 55, 67, 76, 79, 60, 62, 74, 80, 60, 80, 81, 61, 75, 56, 55, 79, 83, 82, 28, 29, 93, 92, 91, 90, 35, 34, 28, 82, 86, 87, 36, 35, 86, 40, 41, 84, 88, 38, 89, 83, 29, 39, 89, 38, 40, 88, 37, 36, 87, 85, 41, 37, 90, 91, 37, 85, 93, 90, 85, 84, 92, 93, 84, 41, 91, 92]
            rel material:binding = </root/_materials/M_FridgeDrawer1B1_0>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -0.8724768, 0.48865548), (0, -0.8724768, 0.48865548), (-5.509355e-8, -0.8501735, 0.52650285), (-3.395835e-7, -0.8501735, 0.52650285), (-0.041789442, -0.06822557, 0.9967943), (-0.015800705, -0.025300276, 0.999555), (0.01580071, -0.02530029, 0.999555), (0.041789573, -0.068225615, 0.9967943), (-0.0000035295393, 0, 1), (-0.0000034957304, 0, 1), (-0.0000034957304, 0, 1), (-0.0000034438058, 0, 1), (-0.0000034438058, 0, 1), (-0.0000034957304, 0, 1), (-0.069304, 0.0020005777, 0.9975935), (-0.06929281, 0.001998179, 0.9975943), (0.041789573, -0.068225615, 0.9967943), (0.01580071, -0.02530029, 0.999555), (0.06930402, 0.0020005722, 0.9975935), (0.06929284, 0.001998309, 0.99759436), (0.0000025828565, 0, 1), (0.0000026218, 0, 1), (0.0000026217988, 0, 1), (0.0000026471569, 0, 1), (0.06929284, 0.001998309, 0.99759436), (0.06930402, 0.0020005722, 0.9975935), (0.0000026218, 0, 1), (0.0000025828565, 0, 1), (-0.06929281, 0.001998179, 0.9975943), (-0.069304, 0.0020005777, 0.9975935), (-0.015800705, -0.025300276, 0.999555), (-0.041789442, -0.06822557, 0.9967943), (0.0000026471569, 0, 1), (0.0000026217988, 0, 1), (-0.0000034957304, 0, 1), (-0.0000035295393, 0, 1), (0.000047598674, 0.9155223, -0.40226743), (0, 1, 0), (0, 1, 0), (0, 0.9155223, -0.40226746), (0.99960124, -0.008783003, -0.026837885), (0.9996186, -0.008979028, -0.026118599), (0.9996318, -0.0089974785, -0.025600757), (0.9996031, -0.008682791, -0.026797596), (-0.9956644, 0.058400232, -0.0723996), (-0.9966229, 0.06951634, -0.043703724), (-0.9996317, -0.008997481, -0.02560059), (-0.99960256, -0.008727992, -0.026803875), (-0.9956644, 0.058400232, -0.0723996), (-0.9951237, 0.06286355, -0.07600628), (-0.9958783, 0.07249665, -0.054503746), (-0.9966229, 0.06951634, -0.043703724), (-0.9996013, -0.008782949, -0.026837695), (-0.99960256, -0.008727992, -0.026803875), (-0.9996317, -0.008997481, -0.02560059), (-0.9996255, -0.009098564, -0.025804978), (0.9956645, 0.058398232, -0.072399914), (0.9996031, -0.008682791, -0.026797596), (0.9996318, -0.0089974785, -0.025600757), (0.99662673, 0.06946926, -0.043691956), (0.9956645, 0.058398232, -0.072399914), (0.99662673, 0.06946926, -0.043691956), (0.99587834, 0.07249635, -0.054503705), (0.9951237, 0.062864, -0.07600668), (0, 0.98231924, 0.18721357), (0, 0.9823221, 0.18719883), (0, 0.9823221, 0.18719883), (0, 0.98231924, 0.18721358), (0, 0.8370217, -0.54716974), (0, 0.8370217, -0.54716974), (0.000047598674, 0.9155223, -0.40226743), (0, 0.9155223, -0.40226746), (0, -0.9856934, -0.16854827), (0, -0.9856934, -0.16854827), (0, -0.9856934, -0.16854827), (0, -0.9856934, -0.16854827), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, -1.9632233e-7, 0), (-1, -1.808568e-7, 0), (-1, 0, 0), (-1, 0, 0), (-1, -1.9632233e-7, 0), (1, 0, 0), (1, 0, 0), (1, 4.4726362e-10, 0), (1, 3.6247363e-10, 0), (1, -1.0182466e-8, 0), (1, -5.091233e-9, 0), (1, -1.3935632e-8, 0), (1, -2.0364933e-8, 0), (1, -2.0364933e-8, 0), (1, -5.091233e-9, 0), (1, -1.0182466e-8, 0), (1, 0, 0), (1, 3.6247363e-10, 0), (-1, 0, 0), (-1, 0, 0), (-1, -1.808568e-7, 0), (-1, 1.9083243e-8, 0), (0.01580071, -0.02530029, 0.999555), (-0.015800705, -0.025300276, 0.999555), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 1.9083243e-8, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 4.4726362e-10, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.004786, 0.044805, -0.909221), (-0.004777, 0.044805, -0.909221), (-0.004786, 0.044814, -0.909221), (-0.004777, 0.044814, -0.909221), (-0.004786, 0.044805, -0.909221), (-0.004777, 0.044805, -0.909221), (-0.004786, 0.044814, -0.909221), (-0.004777, 0.044814, -0.909221), (-0.004786, 0.044805, -0.909221), (-0.004777, 0.044805, -0.909221), (-0.004786, 0.044814, -0.909221), (-0.004777, 0.044814, -0.909221), (-0.004786, 0.044805, -0.909221), (-0.004777, 0.044805, -0.909221), (-0.004786, 0.044814, -0.909221), (-0.004777, 0.044814, -0.909221), (-0.004786, 0.044805, -0.909221), (-0.004777, 0.044805, -0.909221), (-0.004786, 0.044814, -0.909221), (-0.004777, 0.044814, -0.909221), (-0.004786, 0.044805, -0.909221), (-0.004777, 0.044805, -0.909221), (-0.004786, 0.044814, -0.909221), (-0.004777, 0.044814, -0.909221), (-0.004786, 0.044805, -0.909221), (-0.004777, 0.044805, -0.909221), (-0.004786, 0.044814, -0.909221), (-0.004777, 0.044814, -0.909221), (-0.326799, 0.209259, -0.631387), (-0.040461, 0.209259, -0.631387), (-0.326799, 0.140805, -0.736102), (-0.326799, 0.135934, -0.738737), (-0.040461, 0.135934, -0.738737), (-0.040461, 0.140805, -0.736102), (-0.326799, 0.209259, -0.624204), (-0.326799, 0.140805, -0.624204), (-0.326799, 0.135934, -0.624204), (-0.326799, -0.201472, -0.624204), (-0.040461, 0.140805, -0.624204), (-0.040461, 0.209259, -0.624204), (-0.040461, 0.135934, -0.624204), (-0.040461, -0.201472, -0.624204), (-0.040461, -0.165206, -0.738737), (-0.040461, -0.185326, -0.718617), (-0.326799, -0.185326, -0.718617), (-0.326799, -0.165206, -0.738737), (-0.326799, -0.183795, -0.726317), (-0.040461, -0.183795, -0.726317), (-0.326799, -0.179433, -0.732844), (-0.040461, -0.179433, -0.732844), (-0.326799, -0.172906, -0.737206), (-0.040461, -0.172906, -0.737206), (-0.047416, 0.136239, -0.73114), (-0.319844, 0.136239, -0.73114), (-0.044793, -0.176806, -0.717041), (-0.047311, -0.19472, -0.623049), (-0.319949, -0.19472, -0.623049), (-0.322467, -0.176806, -0.717041), (-0.047416, 0.134279, -0.732201), (-0.319844, 0.134279, -0.732201), (-0.317112, 0.140805, -0.624204), (-0.319949, 0.202409, -0.624204), (-0.317112, 0.135934, -0.624204), (-0.044861, -0.175821, -0.723014), (-0.044861, -0.17333, -0.726741), (-0.044861, -0.169603, -0.729232), (-0.04481, -0.164357, -0.730123), (-0.050148, 0.135934, -0.624204), (-0.047311, 0.202409, -0.624204), (-0.050148, 0.140805, -0.624204), (-0.32245, -0.164357, -0.730123), (-0.322399, -0.169603, -0.729232), (-0.322399, -0.17333, -0.726741), (-0.322399, -0.175821, -0.723014), (-0.317666, 0.135598, -0.646117), (-0.320567, -0.190324, -0.646117), (-0.049594, 0.135598, -0.646117), (-0.049588, 0.13987, -0.646117), (-0.045358, 0.190136, -0.646117), (-0.046693, -0.190324, -0.646117), (-0.317672, 0.13987, -0.646117), (-0.321902, 0.190136, -0.646117), (-0.326799, 0.19963, -0.646117), (-0.040461, 0.19963, -0.646117), (-0.040461, -0.197725, -0.646117), (-0.326799, -0.197725, -0.646117), (-0.326799, 0.140805, -0.646117), (-0.326799, 0.135934, -0.646117), (-0.040461, 0.135934, -0.646117), (-0.040461, 0.140805, -0.646117), (-0.326799, -0.215134, -0.624204), (-0.040461, -0.215134, -0.624204), (-0.040461, -0.211387, -0.646117), (-0.326799, -0.211387, -0.646117)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-170.75967, -111.21793), (-170.75967, -111.21802), (-170.7596, -111.21802), (-170.7596, -111.21793), (-170.07146, 0.041908), (-170.07146, 0.901182), (-170.14052, 0.907337), (-170.14052, 0.035752), (-171.12256, -0.498582), (-171.14278, -0.518487), (-170.29863, -0.518487), (-170.31883, -0.498582), (-171.12256, 0.672146), (-171.14278, 0.69234), (-171.14278, 0.490539), (-171.1142, 0.490539), (-171.1142, 0.490539), (-171.14278, 0.490539), (-171.14278, 0.476179), (-171.1142, 0.476179), (-170.31883, -0.498582), (-170.29863, -0.518487), (-170.29863, 0.476179), (-170.32721, 0.476179), (-170.32721, 0.490539), (-170.29863, 0.490539), (-170.29863, 0.69234), (-170.31883, 0.672146), (-170.32721, 0.476179), (-170.29863, 0.476179), (-170.29863, 0.490539), (-170.32721, 0.490539), (-171.1142, 0.476179), (-171.14278, 0.476179), (-171.14278, -0.518487), (-171.12256, -0.498582), (-170.31883, 0.672146), (-170.29863, 0.69234), (-171.14278, 0.69234), (-171.12256, 0.672146), (-170.23938, 0.384632), (-170.26187, 0.384632), (-170.26187, -0.511759), (-170.23938, -0.511759), (-170.29176, 0.625953), (-170.35971, 0.613002), (-170.35971, -0.347057), (-170.29518, -0.348046), (-170.24556, 0.444483), (-170.31007, 0.441727), (-170.31007, 0.429144), (-170.24556, 0.430134), (-170.24556, 0.444483), (-170.24556, 0.625946), (-170.31007, 0.589792), (-170.31007, 0.441727), (-170.24214, -0.543854), (-170.24556, 0.430134), (-170.31007, 0.429144), (-170.31007, -0.530903), (-170.29518, -0.362396), (-170.29518, -0.348046), (-170.35971, -0.347057), (-170.35971, -0.35964), (-170.29518, -0.362396), (-170.35971, -0.35964), (-170.35971, -0.507707), (-170.29518, -0.543861), (-170.11977, 0.875721), (-170.1883, 0.873886), (-170.1883, 0.064161), (-170.11977, 0.062326), (-170.19327, -0.511759), (-170.19327, 0.384632), (-170.23938, 0.384632), (-170.23938, -0.511759), (-170.2122, 0.361016), (-170.2122, -0.488143), (-170.14723, -0.488143), (-170.14723, 0.361016), (-170.39027, 0.48999), (-170.39027, 0.691529), (-170.41142, 0.691529), (-170.45479, 0.663178), (-170.45479, 0.48999), (-170.45479, 0.475648), (-170.39027, 0.475648), (-170.39027, 0.48999), (-170.45479, 0.48999), (-170.34244, -0.341998), (-170.34244, 0.651204), (-170.40695, 0.640172), (-170.40695, -0.341998), (-170.34244, -0.356337), (-170.40695, -0.356337), (-170.40695, -0.529495), (-170.36356, -0.557841), (-170.34244, -0.557841), (-170.40695, -0.356337), (-170.34244, -0.356337), (-170.34244, -0.341998), (-170.40695, -0.341998), (-170.39027, -0.517728), (-170.39027, 0.475648), (-170.45479, 0.475648), (-170.45479, -0.506695), (-170.29863, -0.518487), (-171.14278, -0.518487), (-171.14278, -0.558762), (-170.29863, -0.558762), (-170.39027, -0.517728), (-170.45479, -0.506695), (-170.45479, -0.546918), (-170.39027, -0.557951), (-170.15977, 0.357859), (-170.15977, -0.484986), (-170.11954, -0.484986), (-170.11954, 0.357859), (-170.40695, 0.640172), (-170.34244, 0.651204), (-170.34244, 0.691419), (-170.40695, 0.680388)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer1B1_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1B1_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.03676468, 0.03676468, 0.03676468)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1B1_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge.tga@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1B1_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

