#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.0"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "FridgeDrawer1B1"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "FridgeDrawer1B1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.326799, -0.215134, -0.909221), (-0.004777, 0.209259, -0.623049)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 8, 4, 3, 8, 4, 3, 4, 4, 4, 4, 3, 4, 8, 3, 4, 8]
            int[] faceVertexIndices = [0, 1, 3, 2, 68, 61, 81, 78, 56, 37, 41, 55, 61, 34, 35, 60, 60, 35, 36, 62, 55, 41, 40, 67, 69, 38, 39, 68, 67, 40, 38, 69, 62, 36, 37, 56, 68, 39, 34, 61, 28, 34, 39, 29, 56, 75, 74, 62, 69, 77, 76, 67, 69, 68, 78, 77, 55, 67, 76, 79, 60, 62, 74, 80, 60, 80, 81, 61, 75, 56, 55, 79, 83, 82, 28, 29, 93, 92, 91, 90, 35, 34, 28, 82, 86, 87, 36, 35, 86, 40, 41, 84, 88, 38, 89, 83, 29, 39, 89, 38, 40, 88, 37, 36, 87, 85, 41, 37, 90, 91, 37, 85, 93, 90, 85, 84, 92, 93, 84, 41, 91, 92, 4, 5, 7, 6, 8, 9, 11, 10, 12, 13, 15, 14, 16, 17, 19, 18, 20, 21, 23, 22, 24, 25, 27, 26, 65, 66, 70, 71, 64, 65, 71, 72, 63, 64, 72, 73, 54, 63, 73, 57, 59, 70, 66, 58, 52, 53, 59, 58, 33, 32, 31, 30, 31, 32, 42, 45, 43, 44, 46, 47, 47, 46, 48, 49, 49, 48, 50, 51, 51, 50, 45, 42, 74, 75, 57, 73, 72, 71, 70, 59, 76, 77, 52, 58, 77, 78, 52, 76, 58, 66, 65, 64, 63, 54, 79, 74, 59, 53, 80, 80, 53, 81, 54, 57, 75, 79, 78, 81, 53, 52, 83, 33, 30, 82, 85, 44, 43, 84, 86, 82, 30, 87, 86, 30, 31, 88, 84, 43, 47, 49, 51, 42, 32, 83, 89, 33, 88, 32, 33, 89, 87, 31, 45, 50, 48, 46, 44, 85]
            rel material:binding = </root/_materials/M_FridgeDrawer1B1_0>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -0.8724768, 0.48865548), (0, -0.8724768, 0.48865548), (-5.509355e-8, -0.8501735, 0.52650285), (-3.395835e-7, -0.8501735, 0.52650285), (-0.041789442, -0.06822557, 0.9967943), (-0.015800705, -0.025300276, 0.999555), (0.01580071, -0.02530029, 0.999555), (0.041789573, -0.068225615, 0.9967943), (-0.0000035295393, 0, 1), (-0.0000034957304, 0, 1), (-0.0000034957304, 0, 1), (-0.0000034438058, 0, 1), (-0.0000034438058, 0, 1), (-0.0000034957304, 0, 1), (-0.069304, 0.0020005777, 0.9975935), (-0.06929281, 0.001998179, 0.9975943), (0.041789573, -0.068225615, 0.9967943), (0.01580071, -0.02530029, 0.999555), (0.06930402, 0.0020005722, 0.9975935), (0.06929284, 0.001998309, 0.99759436), (0.0000025828565, 0, 1), (0.0000026218, 0, 1), (0.0000026217988, 0, 1), (0.0000026471569, 0, 1), (0.06929284, 0.001998309, 0.99759436), (0.06930402, 0.0020005722, 0.9975935), (0.0000026218, 0, 1), (0.0000025828565, 0, 1), (-0.06929281, 0.001998179, 0.9975943), (-0.069304, 0.0020005777, 0.9975935), (-0.015800705, -0.025300276, 0.999555), (-0.041789442, -0.06822557, 0.9967943), (0.0000026471569, 0, 1), (0.0000026217988, 0, 1), (-0.0000034957304, 0, 1), (-0.0000035295393, 0, 1), (0.000047598674, 0.9155223, -0.40226743), (0, 1, 0), (0, 1, 0), (0, 0.9155223, -0.40226746), (0.99960124, -0.008783003, -0.026837885), (0.9996186, -0.008979028, -0.026118599), (0.9996318, -0.0089974785, -0.025600757), (0.9996031, -0.008682791, -0.026797596), (-0.9956644, 0.058400232, -0.0723996), (-0.9966229, 0.06951634, -0.043703724), (-0.9996317, -0.008997481, -0.02560059), (-0.99960256, -0.008727992, -0.026803875), (-0.9956644, 0.058400232, -0.0723996), (-0.9951237, 0.06286355, -0.07600628), (-0.9958783, 0.07249665, -0.054503746), (-0.9966229, 0.06951634, -0.043703724), (-0.9996013, -0.008782949, -0.026837695), (-0.99960256, -0.008727992, -0.026803875), (-0.9996317, -0.008997481, -0.02560059), (-0.9996255, -0.009098564, -0.025804978), (0.9956645, 0.058398232, -0.072399914), (0.9996031, -0.008682791, -0.026797596), (0.9996318, -0.0089974785, -0.025600757), (0.99662673, 0.06946926, -0.043691956), (0.9956645, 0.058398232, -0.072399914), (0.99662673, 0.06946926, -0.043691956), (0.99587834, 0.07249635, -0.054503705), (0.9951237, 0.062864, -0.07600668), (0, 0.98231924, 0.18721357), (0, 0.9823221, 0.18719883), (0, 0.9823221, 0.18719883), (0, 0.98231924, 0.18721358), (0, 0.8370217, -0.54716974), (0, 0.8370217, -0.54716974), (0.000047598674, 0.9155223, -0.40226743), (0, 0.9155223, -0.40226746), (0, -0.9856934, -0.16854827), (0, -0.9856934, -0.16854827), (0, -0.9856934, -0.16854827), (0, -0.9856934, -0.16854827), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, -1.9632233e-7, 0), (-1, -1.808568e-7, 0), (-1, 0, 0), (-1, 0, 0), (-1, -1.9632233e-7, 0), (1, 0, 0), (1, 0, 0), (1, 4.4726362e-10, 0), (1, 3.6247363e-10, 0), (1, -1.0182466e-8, 0), (1, -5.091233e-9, 0), (1, -1.3935632e-8, 0), (1, -2.0364933e-8, 0), (1, -2.0364933e-8, 0), (1, -5.091233e-9, 0), (1, -1.0182466e-8, 0), (1, 0, 0), (1, 3.6247363e-10, 0), (-1, 0, 0), (-1, 0, 0), (-1, -1.808568e-7, 0), (-1, 1.9083243e-8, 0), (0.01580071, -0.02530029, 0.999555), (-0.015800705, -0.025300276, 0.999555), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 1.9083243e-8, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 4.4726362e-10, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (8.934876e-9, 0.35201305, 0.9359951), (0.0000027403003, 0.009837609, 0.99995166), (0.00074701133, 0.009841077, 0.9999513), (0, 0.3520128, 0.9359952), (0, 0.7071069, 0.7071067), (8.934876e-9, 0.35201305, 0.9359951), (0, 0.3520128, 0.9359952), (0, 0.7071069, 0.7071067), (0, 0.9416451, 0.33660737), (0, 0.7071069, 0.7071067), (0, 0.7071069, 0.7071067), (5.1193638e-8, 0.9416451, 0.3366073), (-9.962241e-8, 0.98268133, 0.18530367), (0, 0.9416451, 0.33660737), (5.1193638e-8, 0.9416451, 0.3366073), (1.9287108e-7, 0.98268133, 0.18530367), (0.0000016423874, 0.0033615858, 0.99999434), (0.00074701133, 0.009841077, 0.9999513), (0.0000027403003, 0.009837609, 0.99995166), (0, 0.0033615977, 0.99999434), (-9.345822e-7, -0.8389162, 0.5442607), (0, -0.8389161, 0.5442608), (0.0000016423874, 0.0033615858, 0.99999434), (0, 0.0033615977, 0.99999434), (1.9452289e-8, 0.82388306, -0.5667598), (0, 0.008717954, -0.99996203), (0.00011358435, 0.008717969, -0.99996203), (0, 0.82388306, -0.5667598), (0.00011358435, 0.008717969, -0.99996203), (0, 0.008717954, -0.99996203), (-0.000035643097, -0.0050088987, -0.9999875), (0, -0.005008891, -0.9999875), (0, -0.985248, -0.17113245), (-9.483094e-10, -0.985248, -0.17113245), (0, -0.9238786, -0.3826857), (0, -0.9238786, -0.3826857), (0, -0.9238786, -0.3826857), (0, -0.9238786, -0.3826857), (0, -0.7071066, -0.7071069), (0, -0.7071066, -0.7071069), (0, -0.7071066, -0.7071069), (0, -0.7071066, -0.7071069), (0, -0.3826859, -0.92387855), (0, -0.3826859, -0.92387855), (0, -0.3826859, -0.92387855), (0, -0.3826859, -0.92387855), (0, -0.005008891, -0.9999875), (-0.000035643097, -0.0050088987, -0.9999875), (0.9996318, -0.0089974785, -0.025600757), (0.9996186, -0.008979028, -0.026118599), (0.9996397, -0.009228347, -0.025203701), (0.9996397, -0.009228347, -0.025203701), (0.9996397, -0.009228347, -0.025203701), (0.9996397, -0.009228347, -0.025203701), (0.9996397, -0.009228347, -0.025203701), (0.9996408, -0.009114702, -0.025200846), (-0.9996317, -0.008997481, -0.02560059), (-0.9966229, 0.06951634, -0.043703724), (-0.99794394, 0.057701945, -0.027899703), (-0.9996408, -0.009116576, -0.02520073), (-0.9966229, 0.06951634, -0.043703724), (-0.9958783, 0.07249665, -0.054503746), (-0.99794394, 0.057701945, -0.027899703), (-0.9996317, -0.008997481, -0.02560059), (-0.9996408, -0.009116576, -0.02520073), (-0.99963975, -0.009228399, -0.025203627), (-0.99963975, -0.009228399, -0.025203627), (-0.99963975, -0.009228399, -0.025203627), (-0.99963975, -0.009228399, -0.025203627), (-0.99963975, -0.009228399, -0.025203627), (-0.9996255, -0.009098564, -0.025804978), (0.9996318, -0.0089974785, -0.025600757), (0.9996408, -0.009114702, -0.025200846), (0.9979381, 0.057802238, -0.027899805), (0.99662673, 0.06946926, -0.043691956), (0.99662673, 0.06946926, -0.043691956), (0.9979381, 0.057802238, -0.027899805), (0.99587834, 0.07249635, -0.054503705), (-9.962241e-8, 0.98268133, 0.18530367), (1.9287108e-7, 0.98268133, 0.18530367), (0, 0.98231924, 0.18721357), (0, 0.98231924, 0.18721358), (-3.395835e-7, -0.8501735, 0.52650285), (-5.509355e-8, -0.8501735, 0.52650285), (0, -0.8389161, 0.5442608), (-9.345822e-7, -0.8389162, 0.5442607), (0, 0.8370217, -0.54716974), (1.9452289e-8, 0.82388306, -0.5667598), (0, 0.82388306, -0.5667598), (0, 0.8370217, -0.54716974), (0, -0.98568916, -0.16857316), (-9.483094e-10, -0.985248, -0.17113245), (0, -0.985248, -0.17113245), (0, -0.98568916, -0.16857316), (-1, -1.9632233e-7, 0), (-1, 0, 0), (-1, -6.134313e-7, 0), (-1, -1.808568e-7, 0), (-1, -1.9632233e-7, 0), (-1, -6.134313e-7, 0), (-1, -2.8232012e-7, 0), (1, 3.6247363e-10, 0), (1, 4.4726362e-10, 0), (0.99999994, 1.4498945e-9, 0), (0.99999994, 1.4498945e-9, 0), (0.99999994, 1.4498945e-9, 0), (0.99999994, 1.4498945e-9, 0), (0.99999994, 1.4498945e-9, 0), (1, 8.6082874e-10, 0), (1, -1.3935632e-8, 0), (1, -5.091233e-9, 0), (1, 0, 0), (1, 3.6247363e-10, 0), (1, 8.6082874e-10, 0), (1, 0, 0), (1, -5.091233e-9, 0), (-1, -1.808568e-7, 0), (-1, -2.8232012e-7, 0), (-0.99999994, 6.186216e-8, 0), (-0.99999994, 6.186216e-8, 0), (-0.99999994, 6.186216e-8, 0), (-0.99999994, 6.186216e-8, 0), (-0.99999994, 6.186216e-8, 0), (-1, 1.9083243e-8, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.004786, 0.044805, -0.909221), (-0.004777, 0.044805, -0.909221), (-0.004786, 0.044814, -0.909221), (-0.004777, 0.044814, -0.909221), (-0.004786, 0.044805, -0.909221), (-0.004777, 0.044805, -0.909221), (-0.004786, 0.044814, -0.909221), (-0.004777, 0.044814, -0.909221), (-0.004786, 0.044805, -0.909221), (-0.004777, 0.044805, -0.909221), (-0.004786, 0.044814, -0.909221), (-0.004777, 0.044814, -0.909221), (-0.004786, 0.044805, -0.909221), (-0.004777, 0.044805, -0.909221), (-0.004786, 0.044814, -0.909221), (-0.004777, 0.044814, -0.909221), (-0.004786, 0.044805, -0.909221), (-0.004777, 0.044805, -0.909221), (-0.004786, 0.044814, -0.909221), (-0.004777, 0.044814, -0.909221), (-0.004786, 0.044805, -0.909221), (-0.004777, 0.044805, -0.909221), (-0.004786, 0.044814, -0.909221), (-0.004777, 0.044814, -0.909221), (-0.004786, 0.044805, -0.909221), (-0.004777, 0.044805, -0.909221), (-0.004786, 0.044814, -0.909221), (-0.004777, 0.044814, -0.909221), (-0.326799, 0.209259, -0.631387), (-0.040461, 0.209259, -0.631387), (-0.326799, 0.140805, -0.736102), (-0.326799, 0.135934, -0.738737), (-0.040461, 0.135934, -0.738737), (-0.040461, 0.140805, -0.736102), (-0.326799, 0.209259, -0.624204), (-0.326799, 0.140805, -0.624204), (-0.326799, 0.135934, -0.624204), (-0.326799, -0.201472, -0.624204), (-0.040461, 0.140805, -0.624204), (-0.040461, 0.209259, -0.624204), (-0.040461, 0.135934, -0.624204), (-0.040461, -0.201472, -0.624204), (-0.040461, -0.165206, -0.738737), (-0.040461, -0.185326, -0.718617), (-0.326799, -0.185326, -0.718617), (-0.326799, -0.165206, -0.738737), (-0.326799, -0.183795, -0.726317), (-0.040461, -0.183795, -0.726317), (-0.326799, -0.179433, -0.732844), (-0.040461, -0.179433, -0.732844), (-0.326799, -0.172906, -0.737206), (-0.040461, -0.172906, -0.737206), (-0.047416, 0.136239, -0.73114), (-0.319844, 0.136239, -0.73114), (-0.044793, -0.176806, -0.717041), (-0.047311, -0.19472, -0.623049), (-0.319949, -0.19472, -0.623049), (-0.322467, -0.176806, -0.717041), (-0.047416, 0.134279, -0.732201), (-0.319844, 0.134279, -0.732201), (-0.317112, 0.140805, -0.624204), (-0.319949, 0.202409, -0.624204), (-0.317112, 0.135934, -0.624204), (-0.044861, -0.175821, -0.723014), (-0.044861, -0.17333, -0.726741), (-0.044861, -0.169603, -0.729232), (-0.04481, -0.164357, -0.730123), (-0.050148, 0.135934, -0.624204), (-0.047311, 0.202409, -0.624204), (-0.050148, 0.140805, -0.624204), (-0.32245, -0.164357, -0.730123), (-0.322399, -0.169603, -0.729232), (-0.322399, -0.17333, -0.726741), (-0.322399, -0.175821, -0.723014), (-0.317666, 0.135598, -0.646117), (-0.320567, -0.190324, -0.646117), (-0.049594, 0.135598, -0.646117), (-0.049588, 0.13987, -0.646117), (-0.045358, 0.190136, -0.646117), (-0.046693, -0.190324, -0.646117), (-0.317672, 0.13987, -0.646117), (-0.321902, 0.190136, -0.646117), (-0.326799, 0.19963, -0.646117), (-0.040461, 0.19963, -0.646117), (-0.040461, -0.197725, -0.646117), (-0.326799, -0.197725, -0.646117), (-0.326799, 0.140805, -0.646117), (-0.326799, 0.135934, -0.646117), (-0.040461, 0.135934, -0.646117), (-0.040461, 0.140805, -0.646117), (-0.326799, -0.215134, -0.624204), (-0.040461, -0.215134, -0.624204), (-0.040461, -0.211387, -0.646117), (-0.326799, -0.211387, -0.646117)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-170.75967, -111.21793), (-170.75967, -111.21802), (-170.7596, -111.21802), (-170.7596, -111.21793), (-170.07146, 0.041908), (-170.07146, 0.901182), (-170.14052, 0.907337), (-170.14052, 0.035752), (-171.12256, -0.498582), (-171.14278, -0.518487), (-170.29863, -0.518487), (-170.31883, -0.498582), (-171.12256, 0.672146), (-171.14278, 0.69234), (-171.14278, 0.490539), (-171.1142, 0.490539), (-171.1142, 0.490539), (-171.14278, 0.490539), (-171.14278, 0.476179), (-171.1142, 0.476179), (-170.31883, -0.498582), (-170.29863, -0.518487), (-170.29863, 0.476179), (-170.32721, 0.476179), (-170.32721, 0.490539), (-170.29863, 0.490539), (-170.29863, 0.69234), (-170.31883, 0.672146), (-170.32721, 0.476179), (-170.29863, 0.476179), (-170.29863, 0.490539), (-170.32721, 0.490539), (-171.1142, 0.476179), (-171.14278, 0.476179), (-171.14278, -0.518487), (-171.12256, -0.498582), (-170.31883, 0.672146), (-170.29863, 0.69234), (-171.14278, 0.69234), (-171.12256, 0.672146), (-170.23938, 0.384632), (-170.26187, 0.384632), (-170.26187, -0.511759), (-170.23938, -0.511759), (-170.29176, 0.625953), (-170.35971, 0.613002), (-170.35971, -0.347057), (-170.29518, -0.348046), (-170.24556, 0.444483), (-170.31007, 0.441727), (-170.31007, 0.429144), (-170.24556, 0.430134), (-170.24556, 0.444483), (-170.24556, 0.625946), (-170.31007, 0.589792), (-170.31007, 0.441727), (-170.24214, -0.543854), (-170.24556, 0.430134), (-170.31007, 0.429144), (-170.31007, -0.530903), (-170.29518, -0.362396), (-170.29518, -0.348046), (-170.35971, -0.347057), (-170.35971, -0.35964), (-170.29518, -0.362396), (-170.35971, -0.35964), (-170.35971, -0.507707), (-170.29518, -0.543861), (-170.11977, 0.875721), (-170.1883, 0.873886), (-170.1883, 0.064161), (-170.11977, 0.062326), (-170.19327, -0.511759), (-170.19327, 0.384632), (-170.23938, 0.384632), (-170.23938, -0.511759), (-170.2122, 0.361016), (-170.2122, -0.488143), (-170.14723, -0.488143), (-170.14723, 0.361016), (-170.39027, 0.48999), (-170.39027, 0.691529), (-170.41142, 0.691529), (-170.45479, 0.663178), (-170.45479, 0.48999), (-170.45479, 0.475648), (-170.39027, 0.475648), (-170.39027, 0.48999), (-170.45479, 0.48999), (-170.34244, -0.341998), (-170.34244, 0.651204), (-170.40695, 0.640172), (-170.40695, -0.341998), (-170.34244, -0.356337), (-170.40695, -0.356337), (-170.40695, -0.529495), (-170.36356, -0.557841), (-170.34244, -0.557841), (-170.40695, -0.356337), (-170.34244, -0.356337), (-170.34244, -0.341998), (-170.40695, -0.341998), (-170.39027, -0.517728), (-170.39027, 0.475648), (-170.45479, 0.475648), (-170.45479, -0.506695), (-170.29863, -0.518487), (-171.14278, -0.518487), (-171.14278, -0.558762), (-170.29863, -0.558762), (-170.39027, -0.517728), (-170.45479, -0.506695), (-170.45479, -0.546918), (-170.39027, -0.557951), (-170.15977, 0.357859), (-170.15977, -0.484986), (-170.11954, -0.484986), (-170.11954, 0.357859), (-170.40695, 0.640172), (-170.34244, 0.651204), (-170.34244, 0.691419), (-170.40695, 0.680388), (-141.05603, -111.06724), (-141.05603, -111.06727), (-141.056, -111.06727), (-141.056, -111.06724), (-116.597755, -111.562), (-116.597755, -111.56212), (-116.59764, -111.56212), (-116.59764, -111.562), (-87.13006, -112.34138), (-87.13006, -112.34148), (-87.12996, -112.34148), (-87.12996, -112.34138), (-68.987885, -112.292), (-68.987885, -112.29201), (-68.98788, -112.29201), (-68.98788, -112.292), (-68.993546, -112.292), (-68.993546, -112.29201), (-68.99354, -112.29201), (-68.99354, -112.292), (-68.99921, -112.292), (-68.99921, -112.29201), (-68.9992, -112.29201), (-68.9992, -112.292), (-70.84552, -0.43612), (-70.845375, -0.42075), (-71.65893, -0.42075), (-71.658775, -0.43612), (-70.84552, -0.447042), (-70.84552, -0.43612), (-71.658775, -0.43612), (-71.658775, -0.447042), (-70.84552, -0.454341), (-70.84552, -0.447042), (-71.658775, -0.447042), (-71.658775, -0.454341), (-71.51433, -0.361659), (-71.497765, -0.361473), (-71.497765, 0.408221), (-71.51433, 0.408408), (-71.65128, 0.454322), (-71.65893, -0.42075), (-70.845375, -0.42075), (-70.85301, 0.454322), (-70.85301, 0.460066), (-71.65128, 0.460066), (-71.65128, 0.454322), (-70.85301, 0.454322), (-71.1166, -0.808362), (-71.1166, -0.794053), (-71.95769, -0.794053), (-71.95769, -0.808362), (-71.95769, -0.794053), (-71.1166, -0.794053), (-71.1166, 0.090513), (-71.95769, 0.090513), (-71.584465, -0.367422), (-71.584465, 0.425645), (-71.60579, 0.425645), (-71.60579, -0.367422), (-71.1166, 0.145116), (-71.95769, 0.145116), (-71.95769, 0.132304), (-71.1166, 0.132304), (-71.1166, 0.132304), (-71.95769, 0.132304), (-71.95769, 0.11313), (-71.1166, 0.11313), (-71.1166, 0.11313), (-71.95769, 0.11313), (-71.95769, 0.090513), (-71.1166, 0.090513), (-71.1656, -0.793133), (-71.1656, 0.103148), (-71.36064, 0.065975), (-71.37707, 0.063266), (-71.38732, 0.056417), (-71.394165, 0.046166), (-71.396614, 0.031741), (-71.40233, -0.789505), (-71.04539, -0.04683), (-71.04539, -0.035083), (-71.2792, -0.045067), (-71.28212, -0.050457), (-71.04539, -0.035083), (-71.04539, 0.103148), (-71.2792, -0.045067), (-71.04539, -0.04683), (-71.28212, -0.050457), (-71.276405, -0.871704), (-71.27395, -0.886128), (-71.267105, -0.896379), (-71.25685, -0.903228), (-71.240425, -0.905937), (-71.04539, -0.94311), (-71.1656, -0.793133), (-71.40233, -0.789505), (-71.399414, -0.794896), (-71.1656, -0.80488), (-71.1656, -0.80488), (-71.399414, -0.794896), (-71.1656, -0.943111), (-71.51433, -0.361659), (-71.51433, 0.408408), (-71.71101, 0.40314), (-71.71101, -0.356392), (-70.84698, 0.617995), (-71.65732, 0.617995), (-71.65128, 0.460066), (-70.85301, 0.460066), (-71.1166, -0.981152), (-71.1166, -0.808362), (-71.95769, -0.808362), (-71.95769, -0.981152), (-71.38366, 0.425645), (-71.584465, 0.425645), (-71.584465, -0.367422), (-71.38366, -0.367422), (-71.796646, -0.024321), (-71.796646, 0.137395), (-72.04403, -0.024321), (-71.796646, -0.037713), (-71.796646, -0.024321), (-72.04403, -0.024321), (-72.05127, -0.037713), (-71.66728, -0.779876), (-71.66728, 0.137394), (-71.86659, 0.103309), (-71.88776, 0.099099), (-71.90571, 0.087108), (-71.917694, 0.069163), (-71.921906, 0.047995), (-71.921906, -0.779876), (-71.66728, -0.954984), (-71.66728, -0.793268), (-71.91466, -0.793268), (-71.66728, -0.779876), (-71.921906, -0.779876), (-71.91466, -0.793268), (-71.66728, -0.793268), (-71.796646, -0.037713), (-72.05127, -0.037713), (-72.05127, -0.865585), (-72.047066, -0.886753), (-72.03507, -0.904698), (-72.01713, -0.916689), (-71.99596, -0.920899), (-71.796646, -0.954984)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_FridgeDrawer1B1_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]
                rel material:binding = </root/_materials/M_FridgeDrawer1B1_0>
            }

            def GeomSubset "M_FridgeDrawer1B1_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [30]
                rel material:binding = </root/_materials/M_FridgeDrawer1B1_1>
            }

            def GeomSubset "M_FridgeDrawer1B1_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [31]
                rel material:binding = </root/_materials/M_FridgeDrawer1B1_2>
            }

            def GeomSubset "M_FridgeDrawer1B1_3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [32]
                rel material:binding = </root/_materials/M_FridgeDrawer1B1_3>
            }

            def GeomSubset "M_FridgeDrawer1B1_4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]
                rel material:binding = </root/_materials/M_FridgeDrawer1B1_4>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer1B1_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1B1_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.03676468, 0.03676468, 0.03676468)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1B1_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge.tga@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1B1_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer1B1_1"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1B1_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1B1_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1B1_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1B1_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1B1_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer1B1_2"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1B1_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1B1_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1B1_2/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1B1_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1B1_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer1B1_3"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1B1_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.25, 0.25, 0.25)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1B1_3/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1B1_3/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer1B1_4"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1B1_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.39705884, 0.39705884, 0.39705884)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }
    }
}

