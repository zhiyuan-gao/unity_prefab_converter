#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.0"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "FridgeDrawer2B1"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "FridgeDrawer2B1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.004786, -0.212466, -0.909221), (0.311026, 0.211928, -0.623049)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 8, 4, 3, 8, 4, 3, 4, 4, 4, 4, 3, 4, 8, 3, 4, 8]
            int[] faceVertexIndices = [0, 1, 3, 2, 68, 61, 81, 78, 56, 37, 41, 55, 61, 34, 35, 60, 60, 35, 36, 62, 55, 41, 40, 67, 69, 38, 39, 68, 67, 40, 38, 69, 62, 36, 37, 56, 68, 39, 34, 61, 28, 34, 39, 29, 56, 75, 74, 62, 69, 77, 76, 67, 69, 68, 78, 77, 55, 67, 76, 79, 60, 62, 74, 80, 60, 80, 81, 61, 75, 56, 55, 79, 83, 82, 28, 29, 93, 92, 91, 90, 35, 34, 28, 82, 86, 87, 36, 35, 86, 40, 41, 84, 88, 38, 89, 83, 29, 39, 89, 38, 40, 88, 37, 36, 87, 85, 41, 37, 90, 91, 37, 85, 93, 90, 85, 84, 92, 93, 84, 41, 91, 92, 4, 5, 7, 6, 8, 9, 11, 10, 12, 13, 15, 14, 16, 17, 19, 18, 20, 21, 23, 22, 24, 25, 27, 26, 65, 66, 70, 71, 64, 65, 71, 72, 63, 64, 72, 73, 54, 63, 73, 57, 59, 70, 66, 58, 52, 53, 59, 58, 33, 32, 31, 30, 31, 32, 42, 45, 43, 44, 46, 47, 47, 46, 48, 49, 49, 48, 50, 51, 51, 50, 45, 42, 74, 75, 57, 73, 72, 71, 70, 59, 76, 77, 52, 58, 77, 78, 52, 76, 58, 66, 65, 64, 63, 54, 79, 74, 59, 53, 80, 80, 53, 81, 54, 57, 75, 79, 78, 81, 53, 52, 83, 33, 30, 82, 85, 44, 43, 84, 86, 82, 30, 87, 86, 30, 31, 88, 84, 43, 47, 49, 51, 42, 32, 83, 89, 33, 88, 32, 33, 89, 87, 31, 45, 50, 48, 46, 44, 85]
            rel material:binding = </root/_materials/M_FridgeDrawer2B1_0>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -0.8724595, 0.48868632), (0, -0.8724595, 0.48868632), (-8.7573426e-8, -0.8501915, 0.52647364), (-3.160676e-7, -0.8501915, 0.5264737), (-0.041789472, -0.06822562, 0.9967943), (-0.015800714, -0.025300317, 0.999555), (0.01580013, -0.025296316, 0.9995552), (0.041807525, -0.068184465, 0.9967963), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.06930402, 0.0020005777, 0.9975935), (-0.06929284, 0.0019981791, 0.9975943), (0.041807525, -0.068184465, 0.9967963), (0.01580013, -0.025296316, 0.9995552), (0.06929966, 0.0020005514, 0.9975938), (0.06928855, 0.0019982911, 0.99759465), (8.6084486e-7, 0, 1), (8.738244e-7, 0, 1), (8.73908e-7, 0, 1), (8.8224806e-7, 0, 1), (0.06928855, 0.0019982911, 0.99759465), (0.06929966, 0.0020005514, 0.9975938), (8.738244e-7, 0, 1), (8.6084486e-7, 0, 1), (-0.06929284, 0.0019981791, 0.9975943), (-0.06930402, 0.0020005777, 0.9975935), (-0.015800714, -0.025300317, 0.999555), (-0.041789472, -0.06822562, 0.9967943), (8.8224806e-7, 0, 1), (8.73908e-7, 0, 1), (0, 0, 1), (0, 0, 1), (0.000059531198, 0.9155121, -0.40229037), (0, 1, 0), (0, 1, 0), (0, 0.915512, -0.4022904), (0.99960124, -0.008783014, -0.026838206), (0.999626, -0.009072473, -0.025796507), (0.9996317, -0.00899718, -0.025600936), (0.9996025, -0.0087273, -0.02680395), (-0.9956644, 0.058400925, -0.07239998), (-0.9966232, 0.06951295, -0.043704055), (-0.9996317, -0.0090003265, -0.025601393), (-0.99960315, -0.00868303, -0.026797637), (-0.9956644, 0.058400925, -0.07239998), (-0.99512345, 0.062863626, -0.07600957), (-0.99587834, 0.07249574, -0.054505296), (-0.9966232, 0.06951295, -0.043704055), (-0.9996012, -0.008782968, -0.02683901), (-0.99960315, -0.00868303, -0.026797637), (-0.9996317, -0.0090003265, -0.025601393), (-0.9996186, -0.008979132, -0.026119292), (0.9956642, 0.058401957, -0.07240166), (0.9996025, -0.0087273, -0.02680395), (0.9996317, -0.00899718, -0.025600936), (0.99662304, 0.06951654, -0.043700796), (0.9956642, 0.058401957, -0.07240166), (0.99662304, 0.06951654, -0.043700796), (0.99587834, 0.07249562, -0.054504942), (0.99512345, 0.06286346, -0.07600906), (0, 0.98231536, 0.18723382), (0, 0.9823141, 0.18724021), (0, 0.9823141, 0.18724021), (0, 0.9823154, 0.18723384), (0, 0.83701074, -0.5471865), (0, 0.83701074, -0.5471865), (0.000059531198, 0.9155121, -0.40229037), (0, 0.915512, -0.4022904), (0, -0.98568594, -0.16859207), (0, -0.98568594, -0.16859207), (0, -0.98568594, -0.16859207), (0, -0.98568594, -0.16859207), (-1, -2.03651e-8, 0), (-1, -4.07302e-8, 0), (-1, -4.07302e-8, 0), (-1, -2.787162e-8, 0), (-1, -2.2450218e-8, 0), (-1, -1.3234265e-8, 0), (-1, 0, 0), (-1, -2.03651e-8, 0), (-1, -2.2450218e-8, 0), (1, 0, 0), (1, 0, 0), (1, 2.6836031e-9, 0), (1, 2.174845e-9, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 2.174845e-9, 0), (-1, 0, 0), (-1, 0, 0), (-1, -1.3234265e-8, 0), (-1, -1.1927127e-9, 0), (0.01580013, -0.025296316, 0.9995552), (-0.015800714, -0.025300317, 0.999555), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, -1.1927127e-9, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 2.6836031e-9, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1.2907549e-7, 0.35202122, 0.93599194), (0.000001907989, 0.0098120645, 0.9999519), (0.000747262, 0.009810835, 0.9999516), (0, 0.3520095, 0.93599635), (0, 0.7071293, 0.70708424), (-1.2907549e-7, 0.35202122, 0.93599194), (0, 0.3520095, 0.93599635), (0, 0.7071293, 0.70708424), (0, 0.9416436, 0.3366115), (0, 0.7071293, 0.70708424), (0, 0.7071293, 0.70708424), (1.5588012e-7, 0.94163275, 0.33664197), (-1.06818334e-7, 0.9826812, 0.18530402), (0, 0.9416436, 0.3366115), (1.5588012e-7, 0.94163275, 0.33664197), (1.9487925e-7, 0.9826811, 0.18530466), (0.0000016328413, 0.0033599017, 0.99999434), (0.000747262, 0.009810835, 0.9999516), (0.000001907989, 0.0098120645, 0.9999519), (0, 0.003359899, 0.99999434), (-0.0000016433187, -0.8389191, 0.54425615), (0, -0.8389191, 0.54425615), (0.0000016328413, 0.0033599017, 0.99999434), (0, 0.003359899, 0.99999434), (-0.00008530638, 0.82389325, -0.566745), (0, 0.008731931, -0.9999619), (-2.0709466e-8, 0.008731931, -0.9999619), (0, 0.82389325, -0.566745), (-2.0709466e-8, 0.008731931, -0.9999619), (0, 0.008731931, -0.9999619), (8.12967e-9, -0.0050085858, -0.99998754), (0, -0.0050085858, -0.99998754), (0, -0.98525494, -0.17109269), (0.0000041947733, -0.98525494, -0.17109269), (0, -0.92387456, -0.38269544), (0, -0.92387456, -0.38269544), (0, -0.92387456, -0.38269544), (0, -0.92387456, -0.38269544), (0, -0.7071193, -0.7070944), (0, -0.7071193, -0.7070944), (0, -0.7071193, -0.7070944), (0, -0.7071193, -0.7070944), (0, -0.38265365, -0.9238919), (0, -0.38265365, -0.9238919), (0, -0.38265365, -0.9238919), (0, -0.38265365, -0.9238919), (0, -0.0050085858, -0.99998754), (8.12967e-9, -0.0050085858, -0.99998754), (0.9996317, -0.00899718, -0.025600936), (0.999626, -0.009072473, -0.025796507), (0.9996397, -0.009228406, -0.025203574), (0.9996397, -0.009228406, -0.025203574), (0.9996397, -0.009228406, -0.025203574), (0.9996397, -0.009228406, -0.025203574), (0.9996397, -0.009228406, -0.025203574), (0.99964076, -0.009116865, -0.02520073), (-0.9996317, -0.0090003265, -0.025601393), (-0.9966232, 0.06951295, -0.043704055), (-0.9979441, 0.057696536, -0.027903166), (-0.9996413, -0.009071291, -0.02520202), (-0.9966232, 0.06951295, -0.043704055), (-0.99587834, 0.07249574, -0.054505296), (-0.9979441, 0.057696536, -0.027903166), (-0.9996317, -0.0090003265, -0.025601393), (-0.9996413, -0.009071291, -0.02520202), (-0.9996397, -0.009228635, -0.025203817), (-0.9996397, -0.009228635, -0.025203817), (-0.9996397, -0.009228635, -0.025203817), (-0.9996397, -0.009228635, -0.025203817), (-0.9996397, -0.009228635, -0.025203817), (-0.9996186, -0.008979132, -0.026119292), (0.9996317, -0.00899718, -0.025600936), (0.99964076, -0.009116865, -0.02520073), (0.997944, 0.05770161, -0.027899161), (0.99662304, 0.06951654, -0.043700796), (0.99662304, 0.06951654, -0.043700796), (0.997944, 0.05770161, -0.027899161), (0.99587834, 0.07249562, -0.054504942), (-1.06818334e-7, 0.9826812, 0.18530402), (1.9487925e-7, 0.9826811, 0.18530466), (0, 0.98231536, 0.18723382), (0, 0.9823154, 0.18723384), (-3.160676e-7, -0.8501915, 0.5264737), (-8.7573426e-8, -0.8501915, 0.52647364), (0, -0.8389191, 0.54425615), (-0.0000016433187, -0.8389191, 0.54425615), (0, 0.83701074, -0.5471865), (-0.00008530638, 0.82389325, -0.566745), (0, 0.82389325, -0.566745), (0, 0.83701074, -0.5471865), (0, -0.9856913, -0.16856003), (0.0000041947733, -0.98525494, -0.17109269), (0, -0.98525494, -0.17109269), (0, -0.9856913, -0.16856003), (-1, -2.2450218e-8, 0), (-1, -2.787162e-8, 0), (-1, -3.8331486e-8, 0), (-1, -1.3234265e-8, 0), (-1, -2.2450218e-8, 0), (-1, -3.8331486e-8, 0), (-1, -2.2232925e-8, 0), (1, 2.174845e-9, 0), (1, 2.6836031e-9, 0), (0.99999994, 8.69938e-9, 0), (0.99999994, 8.69938e-9, 0), (0.99999994, 8.69938e-9, 0), (0.99999994, 8.69938e-9, 0), (0.99999994, 8.69938e-9, 0), (1, 5.1648152e-9, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 2.174845e-9, 0), (1, 5.1648152e-9, 0), (1, 0, 0), (1, 0, 0), (-1, -1.3234265e-8, 0), (-1, -2.2232925e-8, 0), (-0.99999994, -3.866391e-9, 0), (-0.99999994, -3.866391e-9, 0), (-0.99999994, -3.866391e-9, 0), (-0.99999994, -3.866391e-9, 0), (-0.99999994, -3.866391e-9, 0), (-1, -1.1927127e-9, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.004786, 0.044805, -0.909221), (-0.004777, 0.044805, -0.909221), (-0.004786, 0.044814, -0.909221), (-0.004777, 0.044814, -0.909221), (-0.004786, 0.044805, -0.909221), (-0.004777, 0.044805, -0.909221), (-0.004786, 0.044814, -0.909221), (-0.004777, 0.044814, -0.909221), (-0.004786, 0.044805, -0.909221), (-0.004777, 0.044805, -0.909221), (-0.004786, 0.044814, -0.909221), (-0.004777, 0.044814, -0.909221), (-0.004786, 0.044805, -0.909221), (-0.004777, 0.044805, -0.909221), (-0.004786, 0.044814, -0.909221), (-0.004777, 0.044814, -0.909221), (-0.004786, 0.044805, -0.909221), (-0.004777, 0.044805, -0.909221), (-0.004786, 0.044814, -0.909221), (-0.004777, 0.044814, -0.909221), (-0.004786, 0.044805, -0.909221), (-0.004777, 0.044805, -0.909221), (-0.004786, 0.044814, -0.909221), (-0.004777, 0.044814, -0.909221), (-0.004786, 0.044805, -0.909221), (-0.004777, 0.044805, -0.909221), (-0.004786, 0.044814, -0.909221), (-0.004777, 0.044814, -0.909221), (0.024687, 0.211928, -0.631387), (0.311026, 0.211928, -0.631387), (0.024687, 0.143474, -0.736102), (0.024687, 0.138602, -0.738737), (0.311026, 0.138602, -0.738737), (0.311026, 0.143474, -0.736102), (0.024687, 0.211928, -0.624204), (0.024687, 0.143474, -0.624204), (0.024687, 0.138602, -0.624204), (0.024687, -0.198804, -0.624204), (0.311026, 0.143474, -0.624204), (0.311026, 0.211928, -0.624204), (0.311026, 0.138602, -0.624204), (0.311026, -0.198804, -0.624204), (0.311026, -0.162537, -0.738737), (0.311026, -0.182658, -0.718617), (0.024687, -0.182658, -0.718617), (0.024687, -0.162537, -0.738737), (0.024687, -0.181126, -0.726317), (0.311026, -0.181126, -0.726317), (0.024687, -0.176765, -0.732844), (0.311026, -0.176765, -0.732844), (0.024687, -0.170237, -0.737206), (0.311026, -0.170237, -0.737206), (0.30407, 0.138908, -0.73114), (0.031642, 0.138908, -0.73114), (0.306693, -0.174137, -0.717041), (0.304175, -0.192052, -0.623049), (0.031537, -0.192052, -0.623049), (0.029019, -0.174137, -0.717041), (0.30407, 0.136948, -0.732201), (0.031642, 0.136948, -0.732201), (0.034374, 0.143474, -0.624204), (0.031537, 0.205078, -0.624204), (0.034374, 0.138602, -0.624204), (0.306626, -0.173152, -0.723014), (0.306626, -0.170662, -0.726741), (0.306626, -0.166934, -0.729232), (0.306676, -0.161689, -0.730123), (0.301338, 0.138602, -0.624204), (0.304175, 0.205078, -0.624204), (0.301338, 0.143474, -0.624204), (0.029036, -0.161689, -0.730123), (0.029087, -0.166934, -0.729232), (0.029087, -0.170662, -0.726741), (0.029087, -0.173152, -0.723014), (0.03382, 0.138267, -0.646117), (0.030919, -0.187655, -0.646117), (0.301892, 0.138267, -0.646117), (0.301898, 0.142538, -0.646117), (0.306128, 0.192804, -0.646117), (0.304793, -0.187655, -0.646117), (0.033814, 0.142538, -0.646117), (0.029584, 0.192804, -0.646117), (0.024687, 0.202298, -0.646117), (0.311026, 0.202298, -0.646117), (0.311026, -0.195056, -0.646117), (0.024687, -0.195056, -0.646117), (0.024687, 0.143474, -0.646117), (0.024687, 0.138602, -0.646117), (0.311026, 0.138602, -0.646117), (0.311026, 0.143474, -0.646117), (0.024687, -0.212466, -0.624204), (0.311026, -0.212466, -0.624204), (0.311026, -0.208718, -0.646117), (0.024687, -0.208718, -0.646117)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-170.75969, -111.21793), (-170.75969, -111.21802), (-170.7596, -111.21802), (-170.7596, -111.21793), (-170.07146, 0.041937), (-170.07146, 0.901153), (-170.14052, 0.907308), (-170.14052, 0.035782), (-171.1225, -0.498489), (-171.1427, -0.518391), (-170.29869, -0.518391), (-170.31891, -0.498489), (-171.1225, 0.672046), (-171.1427, 0.692237), (-171.1427, 0.490469), (-171.11414, 0.490469), (-171.11414, 0.490469), (-171.1427, 0.490469), (-171.1427, 0.476111), (-171.11414, 0.476111), (-170.31891, -0.498489), (-170.29869, -0.518391), (-170.29869, 0.476111), (-170.32727, 0.476111), (-170.32727, 0.490469), (-170.29869, 0.490469), (-170.29869, 0.692237), (-170.31891, 0.672046), (-170.32727, 0.476111), (-170.29869, 0.476111), (-170.29869, 0.490469), (-170.32727, 0.490469), (-171.11414, 0.476111), (-171.1427, 0.476111), (-171.1427, -0.518391), (-171.1225, -0.498489), (-170.31891, 0.672046), (-170.29869, 0.692237), (-171.1427, 0.692237), (-171.1225, 0.672046), (-170.2394, 0.38471), (-170.26187, 0.38471), (-170.26187, -0.511837), (-170.2394, -0.511837), (-170.29176, 0.625944), (-170.35971, 0.612993), (-170.35971, -0.347051), (-170.29518, -0.348041), (-170.24556, 0.444485), (-170.31007, 0.441729), (-170.31007, 0.429146), (-170.24556, 0.430136), (-170.24556, 0.444485), (-170.24556, 0.625948), (-170.31007, 0.589795), (-170.31007, 0.441729), (-170.24214, -0.543857), (-170.24556, 0.430136), (-170.31007, 0.429146), (-170.31007, -0.530906), (-170.29518, -0.36239), (-170.29518, -0.348041), (-170.35971, -0.347051), (-170.35971, -0.359634), (-170.29518, -0.36239), (-170.35971, -0.359634), (-170.35971, -0.507699), (-170.29518, -0.543852), (-170.11977, 0.875834), (-170.1883, 0.873998), (-170.1883, 0.064049), (-170.11977, 0.062213), (-170.19328, -0.511837), (-170.19328, 0.38471), (-170.2394, 0.38471), (-170.2394, -0.511837), (-170.2122, 0.361037), (-170.2122, -0.488164), (-170.14723, -0.488164), (-170.14723, 0.361037), (-170.39027, 0.490025), (-170.39027, 0.691582), (-170.41142, 0.691582), (-170.45479, 0.663228), (-170.45479, 0.490025), (-170.45479, 0.475682), (-170.39027, 0.475682), (-170.39027, 0.490025), (-170.45479, 0.490025), (-170.34244, -0.342009), (-170.34244, 0.651219), (-170.40695, 0.640188), (-170.40695, -0.342009), (-170.34244, -0.356349), (-170.40695, -0.356349), (-170.40695, -0.529512), (-170.36356, -0.557859), (-170.34244, -0.557859), (-170.40695, -0.356349), (-170.34244, -0.356349), (-170.34244, -0.342009), (-170.40695, -0.342009), (-170.39027, -0.517778), (-170.39027, 0.475682), (-170.45479, 0.475682), (-170.45479, -0.506744), (-170.29869, -0.518391), (-171.1427, -0.518391), (-171.1427, -0.55866), (-170.29869, -0.55866), (-170.39027, -0.517778), (-170.45479, -0.506744), (-170.45479, -0.54697), (-170.39027, -0.558004), (-170.15977, 0.357813), (-170.15977, -0.48494), (-170.11954, -0.48494), (-170.11954, 0.357813), (-170.40695, 0.640188), (-170.34244, 0.651219), (-170.34244, 0.691437), (-170.40695, 0.680405), (-141.05603, -111.06724), (-141.05603, -111.06727), (-141.056, -111.06727), (-141.056, -111.06724), (-116.597755, -111.562), (-116.597755, -111.56212), (-116.59764, -111.56212), (-116.59764, -111.562), (-87.13006, -112.34138), (-87.13006, -112.34148), (-87.12996, -112.34148), (-87.12996, -112.34138), (-68.987885, -112.292), (-68.987885, -112.292), (-68.987885, -112.292), (-68.987885, -112.292), (-68.993546, -112.292), (-68.993546, -112.29201), (-68.99354, -112.29201), (-68.99354, -112.292), (-68.99921, -112.292), (-68.99921, -112.29201), (-68.9992, -112.29201), (-68.9992, -112.292), (-70.84552, -0.43612), (-70.845375, -0.42075), (-71.65893, -0.42075), (-71.658775, -0.43612), (-70.84552, -0.447042), (-70.84552, -0.43612), (-71.658775, -0.43612), (-71.658775, -0.447042), (-70.84552, -0.454341), (-70.84552, -0.447042), (-71.658775, -0.447042), (-71.658775, -0.454341), (-71.51433, -0.36166), (-71.497765, -0.361473), (-71.497765, 0.408222), (-71.51433, 0.408408), (-71.65128, 0.454322), (-71.65893, -0.42075), (-70.845375, -0.42075), (-70.85301, 0.454322), (-70.85301, 0.460066), (-71.65128, 0.460066), (-71.65128, 0.454322), (-70.85301, 0.454322), (-71.1166, -0.808361), (-71.1166, -0.794053), (-71.95769, -0.794053), (-71.95769, -0.808361), (-71.95769, -0.794053), (-71.1166, -0.794053), (-71.1166, 0.090513), (-71.95769, 0.090513), (-71.584465, -0.367422), (-71.584465, 0.425645), (-71.60579, 0.425645), (-71.60579, -0.367422), (-71.1166, 0.145116), (-71.95769, 0.145116), (-71.95769, 0.132304), (-71.1166, 0.132304), (-71.1166, 0.132304), (-71.95769, 0.132304), (-71.95769, 0.11313), (-71.1166, 0.11313), (-71.1166, 0.11313), (-71.95769, 0.11313), (-71.95769, 0.090513), (-71.1166, 0.090513), (-71.1656, -0.793133), (-71.1656, 0.103148), (-71.36064, 0.065975), (-71.37707, 0.063266), (-71.38732, 0.056417), (-71.394165, 0.046166), (-71.396614, 0.031742), (-71.40233, -0.789505), (-71.04539, -0.04683), (-71.04539, -0.035083), (-71.2792, -0.045066), (-71.28211, -0.050457), (-71.04539, -0.035083), (-71.04539, 0.103148), (-71.2792, -0.045066), (-71.04539, -0.04683), (-71.28211, -0.050457), (-71.2764, -0.871704), (-71.27395, -0.886128), (-71.267105, -0.896379), (-71.25685, -0.903229), (-71.240425, -0.905938), (-71.04539, -0.943111), (-71.1656, -0.793133), (-71.40233, -0.789505), (-71.399414, -0.794896), (-71.1656, -0.80488), (-71.1656, -0.80488), (-71.399414, -0.794896), (-71.1656, -0.943111), (-71.51433, -0.36166), (-71.51433, 0.408408), (-71.71101, 0.40314), (-71.71101, -0.356392), (-70.84698, 0.617995), (-71.65732, 0.617995), (-71.65128, 0.460066), (-70.85301, 0.460066), (-71.1166, -0.981152), (-71.1166, -0.808361), (-71.95769, -0.808361), (-71.95769, -0.981152), (-71.38366, 0.425645), (-71.584465, 0.425645), (-71.584465, -0.367422), (-71.38366, -0.367422), (-71.796646, -0.024321), (-71.796646, 0.137395), (-72.04403, -0.024321), (-71.796646, -0.037713), (-71.796646, -0.024321), (-72.04403, -0.024321), (-72.05127, -0.037713), (-71.66728, -0.779876), (-71.66728, 0.137394), (-71.86659, 0.103309), (-71.88776, 0.099099), (-71.90571, 0.087108), (-71.917694, 0.069163), (-71.921906, 0.047995), (-71.921906, -0.779876), (-71.66728, -0.954984), (-71.66728, -0.793268), (-71.91466, -0.793268), (-71.66728, -0.779876), (-71.921906, -0.779876), (-71.91466, -0.793268), (-71.66728, -0.793268), (-71.796646, -0.037713), (-72.05127, -0.037713), (-72.05127, -0.865585), (-72.047066, -0.886753), (-72.03507, -0.904698), (-72.01713, -0.916689), (-71.99596, -0.920899), (-71.796646, -0.954984)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_FridgeDrawer2B1_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]
                rel material:binding = </root/_materials/M_FridgeDrawer2B1_0>
            }

            def GeomSubset "M_FridgeDrawer2B1_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [30]
                rel material:binding = </root/_materials/M_FridgeDrawer2B1_1>
            }

            def GeomSubset "M_FridgeDrawer2B1_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [31]
                rel material:binding = </root/_materials/M_FridgeDrawer2B1_2>
            }

            def GeomSubset "M_FridgeDrawer2B1_3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [32]
                rel material:binding = </root/_materials/M_FridgeDrawer2B1_3>
            }

            def GeomSubset "M_FridgeDrawer2B1_4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]
                rel material:binding = </root/_materials/M_FridgeDrawer2B1_4>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer2B1_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2B1_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.03676468, 0.03676468, 0.03676468)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2B1_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge.tga@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2B1_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer2B1_1"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2B1_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer2B1_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2B1_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2B1_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2B1_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer2B1_2"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2B1_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer2B1_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2B1_2/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2B1_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2B1_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer2B1_3"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2B1_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.25, 0.25, 0.25)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2B1_3/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2B1_3/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer2B1_4"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2B1_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.39705884, 0.39705884, 0.39705884)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }
    }
}

