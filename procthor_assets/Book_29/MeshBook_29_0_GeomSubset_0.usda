#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshBook_29_0_GeomSubset_0"
    {
        def Mesh "MeshBook_29_0_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [1, 0, 3, 2, 4, 5, 6, 7, 7, 6, 10, 11, 8, 9, 11, 10, 6, 2, 3, 10, 7, 11, 24, 25, 6, 5, 1, 2, 0, 8, 10, 3, 11, 9, 27, 24, 25, 26, 4, 7, 17, 16, 20, 21, 21, 22, 18, 17, 16, 19, 23, 20, 21, 20, 13, 14, 14, 15, 22, 21, 20, 23, 12, 13, 25, 24, 16, 17, 17, 18, 26, 25, 24, 27, 19, 16, 135, 134, 132, 133, 13, 12, 132, 134, 15, 14, 135, 133, 132, 12, 15, 133, 13, 134, 135, 14]
            rel material:binding = </root/_materials/M_Book_29_0>
            normal3f[] normals = [(1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, -0.000018637185), (0, 1, -0.0000050567833), (0, 1, 0), (-0.79751307, 0, -0.60330176), (-0.0067447126, 0, -0.99997735), (-0.0067447424, -2.4316137e-8, -0.9999773), (-0.79751307, 0.000007711502, -0.60330176), (0, -1, -0.00002116465), (0, -1, -0.0000044154635), (0, -1, -0.000004464361), (0, -1, -0.0000122113615), (-0.0067447126, 0, -0.99997735), (0, 0, -1), (0, 0, -1), (-0.0067447424, -2.4316137e-8, -0.9999773), (-0.79751307, 0, -0.60330176), (-0.79751307, 0.000007711502, -0.60330176), (-0.96313846, 0, -0.26900616), (-0.96313846, 0, -0.26900616), (0, 1, -0.0000050567833), (0, 1, -0.000018637185), (0, 1, -0.00002605519), (0, 1, -0.00002605519), (0, -1, -0.00002605519), (0, -1, -0.00002116465), (0, -1, -0.0000122113615), (0, -1, -0.00002605519), (0, -1, -0.000004464361), (0, -1, -0.0000044154635), (0, -1, 0.0000028077043), (0, -1, 0.0000021534538), (0, 1, 0.0000021534406), (0, 1, 0.0000028076872), (0, 1, 0), (0, 1, 0), (-0.98293215, 0, -0.18396823), (-0.98293215, -2.2716554e-10, -0.18396823), (-0.99647486, 0, -0.08389189), (-0.99647486, 0, -0.08389189), (0, 1, 0), (0, 1, 0), (0, 1, 0.0000022729062), (0, 1, 0.0000025826862), (0, -1, 0.0000025827017), (0, -1, 0.00000227292), (0, -1, 0), (0, -1, 0), (-0.99647486, 0, -0.08389189), (-0.99647486, 0, -0.08389189), (-0.9989391, -0.0000056251884, 0.046052214), (-0.99893904, 0, 0.046052262), (0.000004477799, 0.9991281, 0.041749887), (0.0000064289197, 0.9992533, 0.038637813), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (3.3200163e-7, -0.9992591, 0.038485), (-0.0000029685907, -0.99913037, 0.041694287), (-0.96313846, 0, -0.26900616), (-0.96313846, 0, -0.26900616), (-0.98293215, -2.2716554e-10, -0.18396823), (-0.98293215, 0, -0.18396823), (0, 1, 0.0000025826862), (0, 1, 0.0000022729062), (0, 1, 0.0000028076872), (0, 1, 0.0000021534406), (0, -1, 0.0000021534538), (0, -1, 0.0000028077043), (0, -1, 0.00000227292), (0, -1, 0.0000025827017), (-0.43592352, 3.182795e-7, 0.89998376), (-0.43592355, -1.3015956e-7, 0.89998376), (0.4359316, -2.188608e-7, 0.89997977), (0.4359316, 6.370646e-8, 0.8999797), (-0.00011313232, -0.9991246, 0.04183325), (-0.00010280311, -0.9992501, 0.038719743), (-8.7459195e-9, -0.87142396, 0.49053055), (4.976755e-9, -0.87142396, 0.49053055), (0.0000064289197, 0.9992533, 0.038637813), (0.000004477799, 0.9991281, 0.041749887), (-1.1477343e-8, 0.87130636, 0.4907394), (3.547757e-8, 0.8713063, 0.4907394), (0.4359316, -2.188608e-7, 0.89997977), (0.71639305, 4.3213408e-8, 0.697697), (0.7165268, -3.5215635e-9, 0.69755954), (0.4359316, 6.370646e-8, 0.8999797), (-0.9989391, -0.0000056251884, 0.046052214), (-0.43592355, -1.3015956e-7, 0.89998376), (-0.43592352, 3.182795e-7, 0.89998376), (-0.99893904, 0, 0.046052262)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.07032, -0.107909, -0.009742), (0.07032, 0.107909, -0.009742), (0.07032, 0.107909, -0.010206), (0.07032, -0.107909, -0.010206), (-0.085076, 0.107909, -0.008656), (-0.083323, 0.107909, -0.009742), (-0.084177, 0.107909, -0.010206), (-0.085771, 0.107909, -0.009168), (-0.083323, -0.107909, -0.009742), (-0.085076, -0.107909, -0.008656), (-0.084177, -0.107909, -0.010206), (-0.085771, -0.107909, -0.009168), (-0.08604, -0.107909, -0.002539), (-0.086976, -0.107909, -0.002539), (-0.086976, 0.107909, -0.002539), (-0.08604, 0.107909, -0.002539), (-0.086697, -0.107909, -0.005853), (-0.086697, 0.107909, -0.005853), (-0.085766, 0.107909, -0.005598), (-0.085766, -0.107909, -0.005598), (-0.086834, -0.107909, -0.004196), (-0.086834, 0.107909, -0.004196), (-0.085918, 0.107909, -0.004068), (-0.085918, -0.107909, -0.004068), (-0.086216, -0.107909, -0.007511), (-0.086216, 0.107909, -0.007511), (-0.085439, 0.107909, -0.007127), (-0.085439, -0.107909, -0.007127), (-0.084803, 0.107909, -0.002539), (0.07032, 0.107909, -0.002539), (0.07032, -0.107909, -0.002539), (-0.084803, -0.107909, -0.002539), (-0.084507, 0.107909, -0.006141), (0.07032, 0.107909, -0.006141), (0.07032, -0.107909, -0.006141), (-0.084507, -0.107909, -0.006141), (-0.084803, -0.10673, -0.000727), (-0.08604, -0.107909, -0.002539), (-0.084803, 0.106731, -0.000727), (-0.08604, 0.107909, -0.002539), (0.069339, -0.10673, -0.002079), (0.069339, 0.106731, -0.002079), (0.07032, -0.107909, -0.009742), (0.07032, 0.107909, -0.009742), (-0.083323, 0.107909, -0.009742), (-0.085076, 0.107909, -0.008656), (-0.085076, -0.107909, -0.008656), (-0.083323, -0.107909, -0.009742), (-0.085766, 0.107909, -0.005598), (-0.085767, -0.107909, -0.005598), (-0.030676, 0.107909, -0.009742), (-0.031465, 0.107909, -0.006141), (-0.031662, 0.107909, -0.002539), (-0.031938, 0.106731, 0.004864), (-0.031938, -0.10673, 0.004864), (-0.031662, -0.107909, -0.002539), (-0.031465, -0.107909, -0.006141), (-0.030676, -0.107909, -0.009742), (0.017194, 0.107909, -0.009742), (0.016802, 0.107909, -0.006141), (0.016702, 0.107909, -0.002539), (0.016154, 0.106731, 0.002667), (0.016154, -0.10673, 0.002667), (0.016702, -0.107909, -0.002539), (0.016802, -0.107909, -0.006141), (0.017194, -0.107909, -0.009742), (-0.016947, 0.107909, -0.009742), (-0.017605, 0.107909, -0.006141), (-0.017769, 0.107909, -0.002539), (-0.018134, 0.106731, 0.004545), (-0.018134, -0.10673, 0.004545), (-0.017769, -0.107909, -0.002539), (-0.017605, -0.107909, -0.006141), (-0.016947, -0.107909, -0.009742), (0.000125, 0.107909, -0.009742), (-0.000401, 0.107909, -0.006141), (-0.000533, 0.107909, -0.002539), (-0.000991, 0.106731, 0.003792), (-0.000991, -0.10673, 0.003792), (-0.000533, -0.107909, -0.002539), (-0.000401, -0.107909, -0.006141), (0.000125, -0.107909, -0.009742), (-0.072193, 0.107909, -0.009742), (-0.073298, 0.107909, -0.006141), (-0.073574, 0.107909, -0.002539), (-0.073628, 0.106731, 0.002896), (-0.073628, -0.10673, 0.002896), (-0.073574, -0.107909, -0.002539), (-0.073298, -0.107909, -0.006141), (-0.072193, -0.107909, -0.009742), (-0.062838, 0.107909, -0.009742), (-0.063863, 0.107909, -0.006141), (-0.064119, 0.107909, -0.002539), (-0.064229, 0.106731, 0.004355), (-0.064229, -0.10673, 0.004355), (-0.064119, -0.107909, -0.002539), (-0.063863, -0.107909, -0.006141), (-0.062838, -0.107909, -0.009742), (-0.052595, 0.107909, -0.009742), (-0.053541, 0.107909, -0.006141), (-0.053778, 0.107909, -0.002539), (-0.053942, 0.106731, 0.004943), (-0.053942, -0.10673, 0.004943), (-0.053778, -0.107909, -0.002539), (-0.053541, -0.107909, -0.006141), (-0.052595, -0.107909, -0.009742), (-0.042351, 0.107909, -0.009742), (-0.04322, 0.107909, -0.006141), (-0.043436, 0.107909, -0.002539), (-0.043656, 0.106731, 0.004979), (-0.043656, -0.10673, 0.004979), (-0.043436, -0.107909, -0.002539), (-0.04322, -0.107909, -0.006141), (-0.042351, -0.107909, -0.009742), (0.03425, 0.107909, -0.009742), (0.034053, 0.107909, -0.006141), (0.034003, 0.107909, -0.002539), (0.033318, 0.106731, 0.00144), (0.033318, -0.10673, 0.00144), (0.034003, -0.107909, -0.002539), (0.034053, -0.107909, -0.006141), (0.03425, -0.107909, -0.009742), (0.05133, 0.107909, -0.009742), (0.051232, 0.107909, -0.006141), (0.051207, 0.107909, -0.002539), (0.050452, 0.106731, 0.000004), (0.050452, -0.10673, 0.000004), (0.051207, -0.107909, -0.002539), (0.051232, -0.107909, -0.006141), (0.05133, -0.107909, -0.009742), (-0.085893, -0.106881, -0.001518), (-0.085893, 0.106881, -0.001518), (-0.08632, -0.107747, -0.002251), (-0.08632, 0.107747, -0.002251), (-0.086695, -0.107747, -0.002251), (-0.086695, 0.107747, -0.002251), (-0.07922, 0.107909, -0.009742), (-0.080365, 0.107909, -0.006141), (-0.08065, 0.107909, -0.002539), (-0.080678, 0.106731, 0.001137), (-0.080678, -0.10673, 0.001137), (-0.08065, -0.107909, -0.002539), (-0.080365, -0.107909, -0.006141), (-0.07922, -0.107909, -0.009742), (-0.086543, -0.106952, -0.002184), (-0.086543, -0.107909, -0.002539), (-0.086543, 0.106953, -0.002184), (-0.086543, 0.107909, -0.002539), (0.064826, 0.107909, -0.009742), (0.0648, 0.107909, -0.006141), (0.064795, 0.107909, -0.002539), (0.06399, 0.106731, -0.001306), (0.06399, -0.10673, -0.001306), (0.064795, -0.107909, -0.002539), (0.0648, -0.107909, -0.006141), (0.064826, -0.107909, -0.009742)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(0.666715, 0.331252), (0.666736, 0.168054), (0.667778, 0.168043), (0.667757, 0.331263), (0.668705, 0.332827), (0.668088, 0.332827), (0.66809, 0.331263), (0.668669, 0.331263), (0.668669, 0.331263), (0.66809, 0.331263), (0.66809, 0.168043), (0.668669, 0.168043), (0.668088, 0.166738), (0.668705, 0.166738), (0.668669, 0.168043), (0.66809, 0.168043), (0.66809, 0.331263), (0.667757, 0.331263), (0.667778, 0.168043), (0.66809, 0.168043), (0.668669, 0.331263), (0.668669, 0.168043), (0.669964, 0.168043), (0.669964, 0.331263), (0.66809, 0.331263), (0.668088, 0.332827), (0.667772, 0.332845), (0.667757, 0.331263), (0.667797, 0.166723), (0.668088, 0.166738), (0.66809, 0.168043), (0.667778, 0.168043), (0.668669, 0.168043), (0.668705, 0.166738), (0.670028, 0.166738), (0.669964, 0.168043), (0.669964, 0.331263), (0.669992, 0.332827), (0.668705, 0.332827), (0.668669, 0.331263), (0.67126, 0.331263), (0.67126, 0.168043), (0.672555, 0.168043), (0.672555, 0.331263), (0.672555, 0.331263), (0.672565, 0.332827), (0.671278, 0.332827), (0.67126, 0.331263), (0.67126, 0.168043), (0.671351, 0.166738), (0.672674, 0.166738), (0.672555, 0.168043), (0.672555, 0.331263), (0.672555, 0.168043), (0.673801, 0.167984), (0.673799, 0.331263), (0.673799, 0.331263), (0.673794, 0.332827), (0.672565, 0.332827), (0.672555, 0.331263), (0.672555, 0.168043), (0.672674, 0.166738), (0.673801, 0.166738), (0.673801, 0.167984), (0.669964, 0.331263), (0.669964, 0.168043), (0.67126, 0.168043), (0.67126, 0.331263), (0.67126, 0.331263), (0.671278, 0.332827), (0.669992, 0.332827), (0.669964, 0.331263), (0.669964, 0.168043), (0.670028, 0.166738), (0.671351, 0.166738), (0.67126, 0.168043), (0.674104, 0.331732), (0.674104, 0.167695), (0.674507, 0.167695), (0.674507, 0.331732), (0.673801, 0.167984), (0.673801, 0.166738), (0.674104, 0.167096), (0.674104, 0.167695), (0.673794, 0.332827), (0.673799, 0.331263), (0.674104, 0.331732), (0.674104, 0.332384), (0.674507, 0.167695), (0.674974, 0.167695), (0.674967, 0.331732), (0.674507, 0.331732), (0.673801, 0.167984), (0.674104, 0.167695), (0.674104, 0.331732), (0.673799, 0.331263)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_Book_29_0"
        {
            token outputs:surface.connect = </root/_materials/M_Book_29_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_Book_29_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Book_Cover_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Book_29_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

