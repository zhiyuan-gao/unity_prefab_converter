#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshBookFront_29_1_GeomSubset_0"
    {
        def Mesh "MeshBookFront_29_1_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [1, 2, 3, 0, 4, 7, 6, 5, 7, 11, 10, 6, 8, 10, 11, 9, 6, 10, 3, 2, 7, 25, 24, 11, 6, 2, 1, 5, 0, 3, 10, 8, 11, 24, 27, 9, 25, 7, 4, 26, 17, 21, 20, 16, 21, 17, 18, 22, 16, 20, 23, 19, 21, 14, 13, 20, 14, 21, 22, 15, 20, 13, 12, 23, 25, 17, 16, 24, 17, 25, 26, 18, 24, 16, 19, 27, 135, 133, 132, 134, 13, 134, 132, 12, 15, 133, 135, 14, 132, 133, 15, 12, 13, 14, 135, 134]
            rel material:binding = </root/_materials/M_BookFront_29_0>
            normal3f[] normals = [(1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, -0.0000022074923), (0, -1, -0.0000022338559), (0, -1, -0.0000035779317), (0, -1, -0.0000012637383), (-0.8174414, -0.0000048781253, -0.5760117), (-0.8174414, 0, -0.5760117), (-0.48714793, 0, -0.87331945), (-0.48714793, 1.9096547e-8, -0.87331945), (0, 1, 3.640348e-7), (0, 1, 9.876593e-8), (0, 1, 0), (0, 1, 0), (-0.48714793, 1.9096547e-8, -0.87331945), (-0.48714793, 0, -0.87331945), (0, 0, -1), (0, 0, -1), (-0.8174414, -0.0000048781253, -0.5760117), (-0.9631379, 0, -0.26900816), (-0.9631379, 0, -0.26900816), (-0.8174414, 0, -0.5760117), (0, -1, -0.0000035779317), (0, -1, 0), (0, -1, 0), (0, -1, -0.0000012637383), (0, 1, 5.088932e-7), (0, 1, 5.088932e-7), (0, 1, 9.876593e-8), (0, 1, 3.640348e-7), (0, 1, 0), (0, 1, -0.0000010770215), (0, 1, -0.0000014051953), (0, 1, 0), (0, -1, -0.0000010770215), (0, -1, -0.0000022338559), (0, -1, -0.0000022074923), (0, -1, -0.0000014051953), (-0.9835724, -5.80799e-7, -0.18051374), (-0.9964092, 0, -0.084667936), (-0.9964092, 1.8378954e-7, -0.084667936), (-0.9835724, 0, -0.18051374), (0, -1, -4.842479e-7), (0, -1, 4.2154312e-7), (0, -1, 8.1122505e-7), (0, -1, -7.6443547e-7), (0, 1, 4.2154312e-7), (0, 1, -4.842479e-7), (0, 1, -7.6443547e-7), (0, 1, 8.1122505e-7), (-0.9964092, 0, -0.084667936), (-0.9019273, 0.0000040382147, 0.43188798), (-0.9020299, 0, 0.43167362), (-0.9964092, 1.8378954e-7, -0.084667936), (9.1153197e-7, -0.99913025, -0.041699253), (0, -1, -4.842479e-7), (0, -1, -7.6443547e-7), (-0.0000026968164, -0.9992553, -0.03858577), (0, 1, -4.842479e-7), (-0.000007942319, 0.95284194, 0.303467), (-0.000005341135, 0.9585917, 0.2847843), (0, 1, -7.6443547e-7), (-0.9631379, 0, -0.26900816), (-0.9835724, -5.80799e-7, -0.18051374), (-0.9835724, 0, -0.18051374), (-0.9631379, 0, -0.26900816), (0, -1, 4.2154312e-7), (0, -1, -0.0000010770215), (0, -1, -0.0000014051953), (0, -1, 8.1122505e-7), (0, 1, -0.0000010770215), (0, 1, 4.2154312e-7), (0, 1, 8.1122505e-7), (0, 1, -0.0000014051953), (-0.42540124, -1.5195832e-7, 0.90500486), (0.42854086, -5.7742e-8, 0.9035225), (0.42872173, 1.8787887e-7, 0.9034366), (-0.42551002, -2.3981556e-8, 0.9049537), (-0.000007942319, 0.95284194, 0.303467), (-2.771684e-8, 0.8716685, 0.49009594), (1.18045136e-7, 0.8714569, 0.490472), (-0.000005341135, 0.9585917, 0.2847843), (0.000055894256, -0.55204386, 0.83381516), (0, -0.8722986, 0.4889737), (0, -0.8722986, 0.4889737), (0.000018936, -0.5545994, 0.83211756), (0.42872173, 1.8787887e-7, 0.9034366), (0.42854086, -5.7742e-8, 0.9035225), (0.71944225, 0, 0.6945523), (0.71910924, -8.440111e-9, 0.6948971), (-0.9020299, 0, 0.43167362), (-0.9019273, 0.0000040382147, 0.43188798), (-0.42540124, -1.5195832e-7, 0.90500486), (-0.42551002, -2.3981556e-8, 0.9049537)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.070267, -0.107909, 0.004665), (-0.070267, 0.107909, 0.004665), (-0.070267, 0.107909, 0.005129), (-0.070267, -0.107909, 0.005129), (0.085129, 0.107909, 0.003579), (0.083375, 0.107909, 0.004665), (0.084229, 0.107909, 0.005129), (0.085823, 0.107909, 0.004091), (0.083375, -0.107909, 0.004665), (0.085129, -0.107909, 0.003579), (0.084229, -0.107909, 0.005129), (0.085823, -0.107909, 0.004091), (0.086094, -0.107909, -0.002538), (0.087029, -0.107909, -0.002538), (0.087029, 0.107909, -0.002538), (0.086094, 0.107909, -0.002538), (0.086749, -0.107909, 0.000776), (0.086749, 0.107909, 0.000776), (0.085819, 0.107909, 0.00052), (0.085819, -0.107909, 0.00052), (0.086888, -0.107909, -0.000881), (0.086888, 0.107909, -0.000881), (0.085971, 0.107909, -0.001009), (0.085971, -0.107909, -0.001009), (0.086268, -0.107909, 0.002434), (0.086268, 0.107909, 0.002434), (0.085492, 0.107909, 0.00205), (0.085492, -0.107909, 0.00205), (0.084855, 0.107909, -0.002538), (-0.070267, 0.107909, -0.002538), (-0.070267, -0.107909, -0.002538), (0.084855, -0.107909, -0.002538), (0.08456, 0.107909, 0.001063), (-0.070267, 0.107909, 0.001063), (-0.070267, -0.107909, 0.001063), (0.08456, -0.107909, 0.001063), (0.084855, -0.10673, -0.00435), (0.086094, -0.107909, -0.002538), (0.084855, 0.10673, -0.00435), (0.086094, 0.107909, -0.002538), (-0.069287, -0.10673, -0.002998), (-0.069287, 0.10673, -0.002998), (-0.070267, -0.107909, 0.004665), (-0.070267, 0.107909, 0.004665), (0.083375, 0.107909, 0.004665), (0.085129, 0.107909, 0.003579), (0.085129, -0.107909, 0.003579), (0.083375, -0.107909, 0.004665), (0.085819, 0.107909, 0.00052), (0.085819, -0.107909, 0.00052), (0.030727, 0.107909, 0.004665), (0.031518, 0.107909, 0.001063), (0.031715, 0.107909, -0.002538), (0.031989, 0.10673, -0.009941), (0.031989, -0.10673, -0.009941), (0.031715, -0.107909, -0.002538), (0.031518, -0.107909, 0.001063), (0.030727, -0.107909, 0.004665), (-0.017143, 0.107909, 0.004665), (-0.016749, 0.107909, 0.001063), (-0.01665, 0.107909, -0.002538), (-0.016101, 0.10673, -0.007745), (-0.016101, -0.10673, -0.007745), (-0.01665, -0.107909, -0.002538), (-0.016749, -0.107909, 0.001063), (-0.017143, -0.107909, 0.004665), (0.017, 0.107909, 0.004665), (0.017658, 0.107909, 0.001063), (0.017822, 0.107909, -0.002538), (0.018188, 0.10673, -0.009622), (0.018188, -0.10673, -0.009622), (0.017822, -0.107909, -0.002538), (0.017658, -0.107909, 0.001063), (0.017, -0.107909, 0.004665), (-0.00007, 0.107909, 0.004665), (0.000455, 0.107909, 0.001063), (0.000586, 0.107909, -0.002538), (0.001043, 0.10673, -0.008869), (0.001043, -0.10673, -0.008869), (0.000586, -0.107909, -0.002538), (0.000455, -0.107909, 0.001063), (-0.00007, -0.107909, 0.004665), (0.072246, 0.107909, 0.004665), (0.07335, 0.107909, 0.001063), (0.073627, 0.107909, -0.002538), (0.073682, 0.10673, -0.007973), (0.073682, -0.10673, -0.007973), (0.073627, -0.107909, -0.002538), (0.07335, -0.107909, 0.001063), (0.072246, -0.107909, 0.004665), (0.06289, 0.107909, 0.004665), (0.063917, 0.107909, 0.001063), (0.064172, 0.107909, -0.002538), (0.064282, 0.10673, -0.009432), (0.064282, -0.10673, -0.009432), (0.064172, -0.107909, -0.002538), (0.063917, -0.107909, 0.001063), (0.06289, -0.107909, 0.004665), (0.052647, 0.107909, 0.004665), (0.053594, 0.107909, 0.001063), (0.05383, 0.107909, -0.002538), (0.053995, 0.10673, -0.010021), (0.053995, -0.10673, -0.010021), (0.05383, -0.107909, -0.002538), (0.053594, -0.107909, 0.001063), (0.052647, -0.107909, 0.004665), (0.042405, 0.107909, 0.004665), (0.043271, 0.107909, 0.001063), (0.04349, 0.107909, -0.002538), (0.043709, 0.10673, -0.010056), (0.043709, -0.10673, -0.010056), (0.04349, -0.107909, -0.002538), (0.043271, -0.107909, 0.001063), (0.042405, -0.107909, 0.004665), (-0.034198, 0.107909, 0.004665), (-0.034, 0.107909, 0.001063), (-0.033951, 0.107909, -0.002538), (-0.033266, 0.10673, -0.006518), (-0.033266, -0.10673, -0.006518), (-0.033951, -0.107909, -0.002538), (-0.034, -0.107909, 0.001063), (-0.034198, -0.107909, 0.004665), (-0.051279, 0.107909, 0.004665), (-0.051179, 0.107909, 0.001063), (-0.051155, 0.107909, -0.002538), (-0.0504, 0.10673, -0.005081), (-0.0504, -0.10673, -0.005081), (-0.051155, -0.107909, -0.002538), (-0.051179, -0.107909, 0.001063), (-0.051279, -0.107909, 0.004665), (0.085945, -0.106881, -0.003559), (0.085945, 0.106881, -0.003559), (0.086373, -0.107747, -0.002827), (0.086373, 0.107747, -0.002827), (0.086748, -0.107747, -0.002827), (0.086748, 0.107747, -0.002827), (0.079273, 0.107909, 0.004665), (0.080418, 0.107909, 0.001063), (0.080703, 0.107909, -0.002538), (0.080731, 0.10673, -0.006214), (0.080731, -0.10673, -0.006214), (0.080703, -0.107909, -0.002538), (0.080418, -0.107909, 0.001063), (0.079273, -0.107909, 0.004665), (0.086596, -0.106952, -0.002893), (0.086596, -0.107909, -0.002538), (0.086596, 0.106953, -0.002893), (0.086596, 0.107909, -0.002538), (-0.064773, 0.107909, 0.004665), (-0.064748, 0.107909, 0.001063), (-0.064742, 0.107909, -0.002538), (-0.063936, 0.10673, -0.003771), (-0.063936, -0.10673, -0.003771), (-0.064742, -0.107909, -0.002538), (-0.064748, -0.107909, 0.001063), (-0.064773, -0.107909, 0.004665)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(0.833353, 0.331252), (0.831143, 0.331263), (0.831098, 0.168043), (0.833308, 0.168054), (0.678883, 0.332827), (0.678919, 0.331263), (0.679498, 0.331263), (0.680299, 0.332827), (0.678919, 0.331263), (0.678919, 0.168043), (0.679498, 0.168043), (0.679498, 0.331263), (0.680299, 0.166738), (0.679498, 0.168043), (0.678919, 0.168043), (0.678883, 0.166738), (0.679498, 0.331263), (0.679498, 0.168043), (0.831098, 0.168043), (0.831143, 0.331263), (0.678919, 0.331263), (0.677623, 0.331263), (0.677623, 0.168043), (0.678919, 0.168043), (0.679498, 0.331263), (0.831143, 0.331263), (0.831111, 0.332845), (0.680299, 0.332827), (0.831098, 0.166723), (0.831098, 0.168043), (0.679498, 0.168043), (0.680299, 0.166738), (0.678919, 0.168043), (0.677623, 0.168043), (0.67756, 0.166738), (0.678883, 0.166738), (0.677623, 0.331263), (0.678919, 0.331263), (0.678883, 0.332827), (0.677596, 0.332827), (0.676328, 0.331263), (0.675033, 0.331263), (0.675033, 0.168043), (0.676328, 0.168043), (0.675033, 0.331263), (0.676328, 0.331263), (0.67631, 0.332827), (0.675023, 0.332827), (0.676328, 0.168043), (0.675033, 0.168043), (0.674914, 0.166738), (0.676237, 0.166738), (0.675033, 0.331263), (0.673789, 0.331263), (0.673787, 0.167984), (0.675033, 0.168043), (0.673789, 0.331263), (0.675033, 0.331263), (0.675023, 0.332827), (0.673794, 0.332827), (0.675033, 0.168043), (0.673787, 0.167984), (0.673787, 0.166738), (0.674914, 0.166738), (0.677623, 0.331263), (0.676328, 0.331263), (0.676328, 0.168043), (0.677623, 0.168043), (0.676328, 0.331263), (0.677623, 0.331263), (0.677596, 0.332827), (0.67631, 0.332827), (0.677623, 0.168043), (0.676328, 0.168043), (0.676237, 0.166738), (0.67756, 0.166738), (0.673484, 0.331732), (0.673081, 0.331732), (0.673081, 0.167695), (0.673484, 0.167695), (0.673787, 0.167984), (0.673484, 0.167695), (0.673484, 0.167096), (0.673787, 0.166738), (0.673794, 0.332827), (0.673484, 0.332384), (0.673484, 0.331732), (0.673789, 0.331263), (0.673081, 0.167695), (0.673081, 0.331732), (0.672621, 0.331732), (0.672614, 0.167695), (0.673787, 0.167984), (0.673789, 0.331263), (0.673484, 0.331732), (0.673484, 0.167695)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_BookFront_29_0"
        {
            token outputs:surface.connect = </root/_materials/M_BookFront_29_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_BookFront_29_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Book_Cover_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_BookFront_29_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

