#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "FridgeDrawer1_29_FridgeDrawer1E5_2_GeomSubset_4"
    {
        def Mesh "FridgeDrawer1_29_FridgeDrawer1E5_2_GeomSubset_4"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [16, 17, 19, 18, 28, 30, 31, 29, 30, 32, 33, 31, 32, 34, 35, 33, 34, 28, 29, 35, 29, 31, 33, 35, 34, 32, 30, 28]
            rel material:binding = </root/_materials/M_FridgeDrawer1E5_4>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0.00000330218, 1, 0), (0.00000330218, 1, 0), (0.00000330218, 1, 0), (0.00000330218, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.0000016634116, -1, 0), (-0.0000016634116, -1, 0), (-0.0000016634116, -1, 0), (-0.0000016634116, -1, 0), (5.594e-8, 0, 1), (5.594e-8, 0, 1), (5.594e-8, 0, 1), (5.594e-8, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.005623, 0.092349, -0.895671), (0.005615, 0.092349, -0.895671), (0.005623, 0.092357, -0.895671), (0.005615, 0.092357, -0.895671), (0.005623, 0.092349, -0.895671), (0.005615, 0.092349, -0.895671), (0.005623, 0.092357, -0.895671), (0.005615, 0.092357, -0.895671), (0.005623, 0.092349, -0.895671), (0.005615, 0.092349, -0.895671), (0.005623, 0.092357, -0.895671), (0.005615, 0.092357, -0.895671), (0.005623, 0.092349, -0.895671), (0.005615, 0.092349, -0.895671), (0.005623, 0.092357, -0.895671), (0.005615, 0.092357, -0.895671), (0.005623, 0.092349, -0.895671), (0.005615, 0.092349, -0.895671), (0.005623, 0.092357, -0.895671), (0.005615, 0.092357, -0.895671), (0.005623, 0.092349, -0.895671), (0.005615, 0.092349, -0.895671), (0.005623, 0.092357, -0.895671), (0.005615, 0.092357, -0.895671), (0.005623, 0.092349, -0.895671), (0.005615, 0.092349, -0.895671), (0.005623, 0.092357, -0.895671), (0.005615, 0.092357, -0.895671), (-0.301733, -0.08053, -0.312279), (0.302945, -0.080532, -0.312279), (-0.301733, -0.08053, -0.125247), (0.302945, -0.080532, -0.125247), (-0.301733, -0.066764, -0.125247), (0.302945, -0.066765, -0.125247), (-0.301733, -0.066764, -0.312279), (0.302945, -0.066765, -0.312279), (0.310263, -0.086162, -0.162931), (0.309884, -0.088831, -0.16301), (0.307874, -0.087137, -0.16507), (0.245304, -0.106111, -0.16507), (0.245842, -0.108051, -0.162853), (0.307874, -0.087137, -0.135861), (0.309776, -0.088863, -0.137999), (0.310263, -0.086162, -0.137999), (0.245304, -0.106111, -0.135861), (0.245842, -0.108051, -0.138077), (0.30376, -0.082904, -0.138135), (0.304923, -0.084603, -0.135861), (0.306662, -0.083481, -0.138135), (0.243958, -0.099987, -0.135861), (0.243516, -0.098023, -0.138077), (0.304923, -0.084603, -0.16507), (0.30378, -0.082899, -0.162824), (0.306646, -0.083468, -0.162824), (0.243516, -0.098023, -0.162853), (0.243958, -0.099987, -0.16507), (0.005619, -0.139705, -0.138077), (0.005619, -0.137689, -0.135861), (0.11572, -0.133299, -0.135861), (0.115975, -0.135297, -0.138077), (0.005619, -0.122856, -0.135861), (0.005619, -0.120843, -0.138077), (0.115975, -0.117815, -0.138077), (0.116152, -0.11982, -0.135861), (0.005619, -0.120843, -0.162853), (0.005619, -0.122856, -0.16507), (0.116152, -0.11982, -0.16507), (0.115975, -0.117815, -0.162853), (0.005619, -0.137689, -0.16507), (0.005619, -0.139705, -0.162853), (0.115975, -0.135297, -0.162853), (0.11572, -0.133299, -0.16507), (0.179903, -0.121738, -0.135861), (0.180327, -0.123706, -0.138077), (0.180327, -0.109835, -0.138077), (0.180645, -0.111822, -0.135861), (0.180645, -0.111822, -0.16507), (0.180327, -0.109835, -0.162853), (0.180327, -0.123706, -0.162853), (0.179903, -0.121738, -0.16507), (-0.306661, -0.087135, -0.16507), (-0.308564, -0.088862, -0.162931), (-0.309051, -0.08616, -0.162931), (-0.244092, -0.106109, -0.16507), (-0.24463, -0.10805, -0.162853), (-0.309051, -0.08616, -0.137999), (-0.308672, -0.088829, -0.137921), (-0.306661, -0.087135, -0.135861), (-0.244092, -0.106109, -0.135861), (-0.24463, -0.10805, -0.138077), (-0.30545, -0.083479, -0.138135), (-0.303711, -0.084601, -0.135861), (-0.302548, -0.082903, -0.138135), (-0.242746, -0.099985, -0.135861), (-0.242304, -0.098021, -0.138077), (-0.305434, -0.083467, -0.162824), (-0.302548, -0.082903, -0.162795), (-0.303711, -0.084601, -0.16507), (-0.242304, -0.098021, -0.162853), (-0.242746, -0.099985, -0.16507), (-0.114764, -0.135296, -0.138077), (-0.114508, -0.133298, -0.135861), (-0.11494, -0.119819, -0.135861), (-0.114764, -0.117814, -0.138077), (-0.114764, -0.117814, -0.162853), (-0.11494, -0.119819, -0.16507), (-0.114508, -0.133298, -0.16507), (-0.114764, -0.135296, -0.162853), (-0.179115, -0.123705, -0.138077), (-0.178691, -0.121737, -0.135861), (-0.179433, -0.111821, -0.135861), (-0.179115, -0.109834, -0.138077), (-0.179115, -0.109834, -0.162853), (-0.179433, -0.111821, -0.16507), (-0.178691, -0.121737, -0.16507), (-0.179115, -0.123705, -0.162853), (-0.315998, -0.087485, -0.323004), (-0.32009, -0.083675, -0.328232), (-0.316304, -0.083753, -0.332431), (-0.312356, -0.087485, -0.327986), (0.313569, -0.087486, -0.327986), (0.317436, -0.083676, -0.332431), (0.321302, -0.083755, -0.328318), (0.31721, -0.087486, -0.323004), (-0.311047, 0.097086, -0.118069), (-0.316224, 0.10112, -0.122267), (-0.32009, 0.097388, -0.122182), (-0.315997, 0.093781, -0.118069), (0.317211, 0.093779, -0.118069), (0.321302, 0.097308, -0.122268), (0.317516, 0.101118, -0.122181), (0.31226, 0.097085, -0.118069), (-0.32009, 0.097232, -0.328145), (-0.316145, 0.10112, -0.328145), (-0.316145, 0.097232, -0.332431), (0.317357, 0.09723, -0.332431), (0.317357, 0.101118, -0.328145), (0.321302, 0.09723, -0.328145), (-0.316145, -0.083596, -0.118069), (-0.32009, -0.083596, -0.122354), (-0.316145, -0.087485, -0.122354), (0.317357, -0.087486, -0.122354), (0.321302, -0.083598, -0.122354), (0.317357, -0.083598, -0.118069), (-0.301305, -0.087484, -0.31496), (-0.297555, -0.083639, -0.310576), (-0.301457, -0.083666, -0.306367), (-0.305463, -0.087484, -0.310746), (0.306675, -0.087486, -0.310746), (0.302669, -0.083633, -0.306328), (0.298811, -0.083684, -0.310576), (0.302517, -0.087486, -0.31496), (0.302669, -0.083598, -0.122354), (0.306614, -0.087486, -0.122354), (0.306614, -0.083598, -0.118069), (-0.305402, -0.083596, -0.118069), (-0.305402, -0.087484, -0.122354), (-0.301457, -0.083596, -0.122354), (-0.301456, 0.081142, -0.122304), (-0.297575, 0.084985, -0.122284), (-0.30172, 0.088877, -0.118069), (-0.305473, 0.084737, -0.118069), (0.306685, 0.084735, -0.118069), (0.302936, 0.088919, -0.118069), (0.298756, 0.084983, -0.12232), (0.30267, 0.08114, -0.122304), (0.30267, 0.081095, -0.30629), (0.298724, 0.084983, -0.30629), (0.298724, 0.081095, -0.310576), (-0.297511, 0.081096, -0.310576), (-0.297511, 0.084985, -0.30629), (-0.301456, 0.081096, -0.30629)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-68.569695, -112.61662), (-68.569695, -112.61664), (-68.56968, -112.61664), (-68.56968, -112.61662), (-72.1317, -1.144079), (-71.53152, -1.144079), (-71.53152, 0.796323), (-72.1317, 0.796323), (-71.68146, -1.144062), (-71.63728, -1.144062), (-71.63728, 0.796305), (-71.68146, 0.796305), (-71.78847, -1.144078), (-71.188286, -1.144078), (-71.188286, 0.796322), (-71.78847, 0.796322), (-71.33841, -1.144068), (-71.294235, -1.144068), (-71.294235, 0.796311), (-71.33841, 0.796311), (-71.265945, -0.817936), (-71.265945, -0.21776), (-71.31012, -0.21776), (-71.31012, -0.817936), (-71.23765, -0.817936), (-71.23765, -0.217761), (-71.28182, -0.217761), (-71.28182, -0.817936)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer1E5_4"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1E5_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.39705884, 0.39705884, 0.39705884)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }
    }
}

