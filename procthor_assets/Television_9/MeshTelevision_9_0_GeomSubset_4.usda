#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshTelevision_9_0_GeomSubset_4"
    {
        def Mesh "MeshTelevision_9_0_GeomSubset_4"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4]
            int[] faceVertexIndices = [16, 17, 19, 18]
            rel material:binding = </root/_materials/M_Television_9_4>
            normal3f[] normals = [(0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.00093, 0.028059, -0.024943), (0.00093, 0.028059, -0.024943), (-0.00093, 0.029919, -0.024943), (0.00093, 0.029919, -0.024943), (-0.00093, 0.028059, -0.024943), (0.00093, 0.028059, -0.024943), (-0.00093, 0.029919, -0.024943), (0.00093, 0.029919, -0.024943), (-0.00093, 0.028059, -0.024943), (0.00093, 0.028059, -0.024943), (-0.00093, 0.029919, -0.024943), (0.00093, 0.029919, -0.024943), (-0.00093, 0.028059, -0.024943), (0.00093, 0.028059, -0.024943), (-0.00093, 0.029919, -0.024943), (0.00093, 0.029919, -0.024943), (-0.00093, 0.028059, -0.024943), (0.00093, 0.028059, -0.024943), (-0.00093, 0.029919, -0.024943), (0.00093, 0.029919, -0.024943), (0.635762, 0.00629, -0.398202), (0.635762, 0.028988, -0.398202), (0.000061, 0.028988, -0.398202), (0.000061, 0.00629, -0.398202), (0.635762, -0.021292, 0.341537), (0.635762, 0.028988, 0.341537), (0.000061, 0.028988, 0.341537), (0.000061, -0.021292, 0.341537), (0.635762, -0.021292, -0.209755), (0.635762, 0.028988, -0.209755), (0.000031, 0.028988, -0.209755), (0.000061, -0.021292, -0.209755), (0.635762, -0.021292, -0.273462), (0.635762, 0.028988, -0.273462), (0.000031, 0.028988, -0.273462), (0.000061, -0.021292, -0.273462), (0.635762, 0.00822, 0.39631), (0.000061, 0.007141, 0.395946), (0.000061, 0.028988, 0.398202), (0.635762, 0.028988, 0.398202), (0.635762, 0.00822, 0.368616), (0.635762, -0.017509, 0.368616), (0.635762, -0.00814, 0.385641), (0.000061, 0.028988, 0.349562), (0.635762, 0.028988, 0.349562), (0.000061, -0.017914, 0.367508), (0.000061, -0.00814, 0.385641), (0.000061, -0.021292, 0.349562), (0.635762, -0.021292, 0.349562), (0.000061, -0.021292, -0.179483), (0.000061, -0.021292, 0.311266), (0.571907, -0.021292, -0.179483), (0.571907, -0.021292, 0.311266), (0.635762, -0.014894, -0.353294), (0.635762, 0.028988, -0.353294), (0.000061, 0.028988, -0.353294), (0.000061, -0.014894, -0.353294), (0.635762, -0.021228, -0.300337), (0.635762, 0.028988, -0.300337), (0.000061, 0.028988, -0.300337), (0.000061, -0.021228, -0.300337), (0.635762, -0.00856, -0.376977), (0.635762, 0.028988, -0.376977), (0.000061, 0.028988, -0.376977), (0.000061, -0.00856, -0.376977), (0.000061, 0.009177, -0.179483), (0.000061, 0.009177, 0.311266), (0.571907, 0.009177, -0.179483), (0.571907, 0.009177, 0.311266), (0.634234, 0.027259, 0.341537), (0.000061, 0.025531, 0.341537), (0.634234, 0.027259, 0.349562), (0.000061, 0.025531, 0.349562), (0.000061, -0.017835, 0.341537), (0.634234, -0.019564, 0.341537), (0.000061, -0.017835, 0.349562), (0.634234, -0.019564, 0.349562), (0.641638, -0.027939, -0.271111), (0.639288, -0.025304, -0.273462), (0.639288, 0.028988, -0.273462), (0.641638, 0.028988, -0.271111), (0.639288, -0.025304, -0.209755), (0.641638, -0.027939, -0.212105), (0.641638, 0.028988, -0.212105), (0.639288, 0.028988, -0.209755), (0.000061, -0.034587, -0.271111), (0.000061, -0.03193, -0.273462), (0.000061, -0.03193, -0.209755), (0.000061, -0.034587, -0.212105), (0.000061, -0.018833, -0.328204), (0.635762, -0.018833, -0.328204), (0.635762, 0.028988, -0.328204), (0.000061, 0.028988, -0.328204), (-0.635761, 0.00629, -0.398202), (-0.635761, 0.028988, -0.398202), (-0.635761, -0.021292, 0.341537), (-0.635761, 0.028988, 0.341537), (-0.635761, -0.021292, -0.209755), (-0.635761, 0.028988, -0.209755), (-0.635761, -0.021292, -0.273462), (-0.635761, 0.028988, -0.273462), (-0.635761, 0.00822, 0.39631), (-0.635761, 0.028988, 0.398202), (-0.635761, 0.00822, 0.368616), (-0.635761, -0.017509, 0.368616), (-0.635761, -0.00814, 0.385641), (-0.635761, 0.028988, 0.349562), (-0.635761, -0.021292, 0.349562), (-0.571894, -0.021292, -0.179483), (-0.571894, -0.021292, 0.311266), (-0.635761, -0.014894, -0.353294), (-0.635761, 0.028988, -0.353294), (-0.635761, -0.021228, -0.300337), (-0.635761, 0.028988, -0.300337), (-0.635761, -0.00856, -0.376977), (-0.635761, 0.028988, -0.376977), (-0.571894, 0.009177, -0.179483), (-0.571894, 0.009177, 0.311266), (-0.634233, 0.027259, 0.341537), (-0.634233, 0.027259, 0.349562), (-0.634233, -0.019564, 0.341537), (-0.634233, -0.019564, 0.349562), (-0.641638, -0.027939, -0.271111), (-0.639288, -0.025304, -0.273462), (-0.639288, 0.028988, -0.273462), (-0.641638, 0.028988, -0.271111), (-0.639288, -0.025304, -0.209755), (-0.641638, -0.027939, -0.212105), (-0.641638, 0.028988, -0.212105), (-0.639288, 0.028988, -0.209755), (-0.635761, -0.018833, -0.328204), (-0.635761, 0.028988, -0.328204), (-0.635761, 0.028988, -0.271111), (-0.635761, 0.028988, -0.212105), (0.635762, 0.028988, -0.271111), (0.635762, 0.028988, -0.212105), (0.000001, 0.028988, -0.212105), (0.000001, 0.028988, -0.271111)]
            bool[] primvars:sharp_face = [0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-7.592647, -17.643036), (-7.592647, -17.6438), (-7.591883, -17.6438), (-7.591883, -17.643036)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_Television_9_4"
        {
            token outputs:surface.connect = </root/_materials/M_Television_9_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.8, 0.8, 0.8)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 1
                float inputs:specular = 0
                token outputs:surface
            }
        }
    }
}

