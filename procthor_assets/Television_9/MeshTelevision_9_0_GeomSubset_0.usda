#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshTelevision_9_0_GeomSubset_0"
    {
        def Mesh "MeshTelevision_9_0_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 29, 25, 24, 28, 25, 29, 30, 26, 28, 51, 49, 31, 27, 50, 52, 24, 24, 52, 51, 28, 51, 67, 65, 49, 50, 66, 68, 52, 52, 68, 67, 51, 26, 70, 69, 25, 24, 74, 73, 27, 25, 69, 74, 24, 98, 97, 95, 96, 96, 26, 30, 98, 97, 31, 49, 108, 27, 95, 109, 50, 95, 97, 108, 109, 108, 49, 65, 116, 50, 109, 117, 66, 109, 108, 116, 117, 26, 96, 118, 70, 95, 27, 73, 120, 96, 95, 120, 118]
            rel material:binding = </root/_materials/M_Television_9_0>
            normal3f[] normals = [(0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, -6.1439176e-10), (0, -1, -2.1974107e-7), (0, -1, 3.4254796e-8), (0, -1, -2.9641238e-9), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 3.1847796e-9), (0, 1, 3.1847796e-9), (0, 1, 3.6480012e-9), (0, 1, 1.7950446e-9), (0, 1, 1.7950446e-9), (0, 1, 3.6480012e-9), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (3.3654511e-12, 0, -1), (3.3610957e-12, 0, -1), (0.000012489952, 0, -1), (0.000011226319, 0, -1), (0.0000112117, 0, -1), (0.00001247123, 0, -1), (0, 0, -1), (0, 0, -1), (0.000011226319, 0, -1), (0.000012489952, 0, -1), (0.00001247123, 0, -1), (0.0000112117, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, -5.314019e-9), (0, -1, -2.9641238e-9), (0, -1, 3.4254796e-8), (0, -1, 4.6267857e-8), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 3.1847796e-9), (0, 1, 0), (0, 1, 0), (0, 1, 3.1847796e-9), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (3.3654511e-12, 0, -1), (-0.000011587696, 0, -1), (-0.000012891689, 0, -1), (3.3610957e-12, 0, -1), (-0.0000115732255, 0, -1), (0, 0, -1), (0, 0, -1), (-0.000012872923, 0, -1), (-0.000011587696, 0, -1), (-0.0000115732255, 0, -1), (-0.000012872923, 0, -1), (-0.000012891689, 0, -1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.00093, 0.028059, -0.024943), (-0.00093, 0.028059, -0.024943), (0.00093, 0.029919, -0.024943), (-0.00093, 0.029919, -0.024943), (0.00093, 0.028059, -0.024943), (-0.00093, 0.028059, -0.024943), (0.00093, 0.029919, -0.024943), (-0.00093, 0.029919, -0.024943), (0.00093, 0.028059, -0.024943), (-0.00093, 0.028059, -0.024943), (0.00093, 0.029919, -0.024943), (-0.00093, 0.029919, -0.024943), (0.00093, 0.028059, -0.024943), (-0.00093, 0.028059, -0.024943), (0.00093, 0.029919, -0.024943), (-0.00093, 0.029919, -0.024943), (0.00093, 0.028059, -0.024943), (-0.00093, 0.028059, -0.024943), (0.00093, 0.029919, -0.024943), (-0.00093, 0.029919, -0.024943), (-0.635762, 0.00629, -0.398202), (-0.635762, 0.028988, -0.398202), (-0.000061, 0.028988, -0.398202), (-0.000061, 0.00629, -0.398202), (-0.635762, -0.021292, 0.341537), (-0.635762, 0.028988, 0.341537), (-0.000061, 0.028988, 0.341537), (-0.000061, -0.021292, 0.341537), (-0.635762, -0.021292, -0.209755), (-0.635762, 0.028988, -0.209755), (-0.000031, 0.028988, -0.209755), (-0.000061, -0.021292, -0.209755), (-0.635762, -0.021292, -0.273462), (-0.635762, 0.028988, -0.273462), (-0.000031, 0.028988, -0.273462), (-0.000061, -0.021292, -0.273462), (-0.635762, 0.00822, 0.39631), (-0.000061, 0.007141, 0.395946), (-0.000061, 0.028988, 0.398202), (-0.635762, 0.028988, 0.398202), (-0.635762, 0.00822, 0.368616), (-0.635762, -0.017509, 0.368616), (-0.635762, -0.00814, 0.385641), (-0.000061, 0.028988, 0.349562), (-0.635762, 0.028988, 0.349562), (-0.000061, -0.017914, 0.367508), (-0.000061, -0.00814, 0.385641), (-0.000061, -0.021292, 0.349562), (-0.635762, -0.021292, 0.349562), (-0.000061, -0.021292, -0.179483), (-0.000061, -0.021292, 0.311266), (-0.571907, -0.021292, -0.179483), (-0.571907, -0.021292, 0.311266), (-0.635762, -0.014894, -0.353294), (-0.635762, 0.028988, -0.353294), (-0.000061, 0.028988, -0.353294), (-0.000061, -0.014894, -0.353294), (-0.635762, -0.021228, -0.300337), (-0.635762, 0.028988, -0.300337), (-0.000061, 0.028988, -0.300337), (-0.000061, -0.021228, -0.300337), (-0.635762, -0.00856, -0.376977), (-0.635762, 0.028988, -0.376977), (-0.000061, 0.028988, -0.376977), (-0.000061, -0.00856, -0.376977), (-0.000061, 0.009177, -0.179483), (-0.000061, 0.009177, 0.311266), (-0.571907, 0.009177, -0.179483), (-0.571907, 0.009177, 0.311266), (-0.634234, 0.027259, 0.341537), (-0.000061, 0.025531, 0.341537), (-0.634234, 0.027259, 0.349562), (-0.000061, 0.025531, 0.349562), (-0.000061, -0.017835, 0.341537), (-0.634234, -0.019564, 0.341537), (-0.000061, -0.017835, 0.349562), (-0.634234, -0.019564, 0.349562), (-0.641638, -0.027939, -0.271111), (-0.639288, -0.025304, -0.273462), (-0.639288, 0.028988, -0.273462), (-0.641638, 0.028988, -0.271111), (-0.639288, -0.025304, -0.209755), (-0.641638, -0.027939, -0.212105), (-0.641638, 0.028988, -0.212105), (-0.639288, 0.028988, -0.209755), (-0.000061, -0.034587, -0.271111), (-0.000061, -0.03193, -0.273462), (-0.000061, -0.03193, -0.209755), (-0.000061, -0.034587, -0.212105), (-0.000061, -0.018833, -0.328204), (-0.635762, -0.018833, -0.328204), (-0.635762, 0.028988, -0.328204), (-0.000061, 0.028988, -0.328204), (0.635761, 0.00629, -0.398202), (0.635761, 0.028988, -0.398202), (0.635761, -0.021292, 0.341537), (0.635761, 0.028988, 0.341537), (0.635761, -0.021292, -0.209755), (0.635761, 0.028988, -0.209755), (0.635761, -0.021292, -0.273462), (0.635761, 0.028988, -0.273462), (0.635761, 0.00822, 0.39631), (0.635761, 0.028988, 0.398202), (0.635761, 0.00822, 0.368616), (0.635761, -0.017509, 0.368616), (0.635761, -0.00814, 0.385641), (0.635761, 0.028988, 0.349562), (0.635761, -0.021292, 0.349562), (0.571894, -0.021292, -0.179483), (0.571894, -0.021292, 0.311266), (0.635761, -0.014894, -0.353294), (0.635761, 0.028988, -0.353294), (0.635761, -0.021228, -0.300337), (0.635761, 0.028988, -0.300337), (0.635761, -0.00856, -0.376977), (0.635761, 0.028988, -0.376977), (0.571894, 0.009177, -0.179483), (0.571894, 0.009177, 0.311266), (0.634233, 0.027259, 0.341537), (0.634233, 0.027259, 0.349562), (0.634233, -0.019564, 0.341537), (0.634233, -0.019564, 0.349562), (0.641638, -0.027939, -0.271111), (0.639288, -0.025304, -0.273462), (0.639288, 0.028988, -0.273462), (0.641638, 0.028988, -0.271111), (0.639288, -0.025304, -0.209755), (0.641638, -0.027939, -0.212105), (0.641638, 0.028988, -0.212105), (0.639288, 0.028988, -0.209755), (0.635761, -0.018833, -0.328204), (0.635761, 0.028988, -0.328204), (0.635761, 0.028988, -0.271111), (0.635761, 0.028988, -0.212105), (-0.635762, 0.028988, -0.271111), (-0.635762, 0.028988, -0.212105), (-0.000001, 0.028988, -0.212105), (-0.000001, 0.028988, -0.271111)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-43.663452, -17.77583), (-43.663452, -17.777157), (-43.662125, -17.777157), (-43.662125, -17.77583), (-43.48365, 0.949396), (-44.560402, 0.9494), (-44.5604, 0.851197), (-43.48365, 0.851201), (-43.037518, -0.363657), (-43.03752, 0.713092), (-44.279182, 0.713092), (-44.279125, -0.363653), (-43.0375, 0.038021), (-43.16222, 0.097146), (-44.279125, 0.097148), (-44.279118, 0.038021), (-44.279125, 1.114779), (-44.279118, 1.055652), (-43.162216, 1.055652), (-43.037502, 1.11478), (-43.037502, 1.11478), (-43.162216, 1.055652), (-43.16222, 0.097146), (-43.0375, 0.038021), (-43.116478, 0.804999), (-43.11648, 0.864513), (-44.233517, 0.864507), (-44.23352, 0.805003), (-44.233517, 0.893745), (-44.233517, 0.834226), (-43.1166, 0.834232), (-43.1166, 0.893745), (-44.87731, 0.992719), (-44.877308, 0.933227), (-43.919014, 0.933226), (-43.919006, 0.99272), (-44.279118, 0.848055), (-44.279125, 0.841312), (-43.040398, 0.844678), (-43.037407, 0.848055), (-43.03741, 0.749854), (-43.040398, 0.75322), (-44.279125, 0.756603), (-44.279125, 0.749854), (-43.037407, 0.848055), (-43.040398, 0.844678), (-43.040398, 0.75322), (-43.03741, 0.749854), (-43.483658, 0.894079), (-43.483654, 0.992278), (-44.56039, 0.992274), (-44.5604, 0.894078), (-45.520958, -0.363657), (-44.279125, -0.363653), (-44.279182, 0.713092), (-45.520958, 0.713089), (-45.52098, 0.038025), (-44.279118, 0.038021), (-44.279125, 0.097148), (-45.39624, 0.097146), (-44.279125, 1.114779), (-45.52098, 1.114778), (-45.396236, 1.055656), (-44.279118, 1.055652), (-45.52098, 1.114778), (-45.52098, 0.038025), (-45.39624, 0.097146), (-45.396236, 1.055656), (-45.350777, 0.805002), (-44.23352, 0.805003), (-44.233517, 0.864507), (-45.35077, 0.864513), (-44.233517, 0.893745), (-45.35065, 0.89374), (-45.35065, 0.834232), (-44.233517, 0.834226), (-44.877426, 0.90531), (-43.918888, 0.905314), (-43.91889, 0.964826), (-44.87743, 0.964822), (-44.279118, 0.848055), (-45.52107, 0.848055), (-45.51809, 0.844679), (-44.279125, 0.841312), (-45.521072, 0.749848), (-44.279125, 0.749854), (-44.279125, 0.756603), (-45.51809, 0.753217), (-45.52107, 0.848055), (-45.521072, 0.749848), (-45.51809, 0.753217), (-45.51809, 0.844679)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_Television_9_0"
        {
            token outputs:surface.connect = </root/_materials/M_Television_9_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.7977941, 0.8238844, 0.875)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_Television_9_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Television_9_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

