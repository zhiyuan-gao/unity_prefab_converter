#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "AlarmClockButton_21"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "AlarmClockButton_21" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.058639, -0.005721, -0.330648), (0.05816, 0.023149, 0.082276)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 4, 5, 7, 6, 8, 9, 11, 10, 22, 23, 46, 45, 23, 22, 25, 24, 24, 25, 51, 50, 26, 27, 45, 46, 27, 26, 29, 28, 28, 29, 49, 48, 30, 31, 48, 49, 31, 30, 33, 32, 32, 33, 53, 54, 34, 35, 50, 51, 35, 34, 37, 36, 36, 37, 54, 53, 71, 20, 21, 70, 40, 64, 65, 41, 68, 42, 43, 67, 62, 39, 38, 61, 38, 44, 60, 61, 44, 20, 71, 60, 21, 47, 69, 70, 47, 42, 68, 69, 62, 63, 52, 39, 63, 64, 40, 52, 65, 66, 55, 41, 66, 67, 43, 55, 56, 57, 58, 59, 32, 58, 57, 31, 22, 56, 59, 25, 27, 56, 22, 45, 28, 57, 56, 27, 31, 57, 28, 48, 54, 37, 58, 32, 59, 58, 37, 34, 25, 59, 34, 51, 61, 60, 46, 23, 24, 62, 61, 23, 24, 50, 63, 62, 50, 35, 64, 63, 65, 64, 35, 36, 36, 53, 66, 65, 53, 33, 67, 66, 30, 68, 67, 33, 69, 68, 30, 49, 70, 69, 49, 29, 26, 71, 70, 29, 60, 71, 26, 46, 12, 13, 15, 14, 16, 17, 19, 18]
            rel material:binding = </root/_materials/M_AlarmClockButton_21_0>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.54166436, -0.10892407, -0.83350784), (-0.71840096, -0.02258892, -0.69526243), (-0.5129072, 0.404621, -0.7571051), (-0.3946852, 0.18716425, -0.89955163), (-0.71840096, -0.02258892, -0.69526243), (-0.54166436, -0.10892407, -0.83350784), (-0.5416541, -0.3319656, -0.77227557), (-0.7177095, -0.33479604, -0.6105774), (-0.7177095, -0.33479604, -0.6105774), (-0.5416541, -0.3319656, -0.77227557), (-0.39455706, -0.6200667, -0.6781165), (-0.51150733, -0.7323956, -0.4493961), (-0.222485, 0.5911383, -0.77527785), (-0.12118088, 0.32543188, -0.93776834), (-0.3946852, 0.18716425, -0.89955163), (-0.5129072, 0.404621, -0.7571051), (-0.12118088, 0.32543188, -0.93776834), (-0.222485, 0.5911383, -0.77527785), (0.22247724, 0.5912462, -0.775198), (0.12117964, 0.32547063, -0.937755), (0.12117964, 0.32547063, -0.937755), (0.22247724, 0.5912462, -0.775198), (0.5129035, 0.404609, -0.75711393), (0.39471275, 0.18717986, -0.8995363), (0.71834266, -0.022594588, -0.6953226), (0.5416702, -0.10889173, -0.83350813), (0.39471275, 0.18717986, -0.8995363), (0.5129035, 0.404609, -0.75711393), (0.5416702, -0.10889173, -0.83350813), (0.71834266, -0.022594588, -0.6953226), (0.7177128, -0.33478695, -0.6105784), (0.5416945, -0.33199063, -0.7722364), (0.5416945, -0.33199063, -0.7722364), (0.7177128, -0.33478695, -0.6105784), (0.51150703, -0.73241, -0.44937295), (0.3945862, -0.6199934, -0.6781666), (-0.121105924, -0.7581647, -0.64071804), (-0.2221825, -0.9018301, -0.3705905), (-0.51150733, -0.7323956, -0.4493961), (-0.39455706, -0.6200667, -0.6781165), (-0.2221825, -0.9018301, -0.3705905), (-0.121105924, -0.7581647, -0.64071804), (0.12109307, -0.75805706, -0.6408479), (0.22209927, -0.90184766, -0.3705979), (0.22209927, -0.90184766, -0.3705979), (0.12109307, -0.75805706, -0.6408479), (0.3945862, -0.6199934, -0.6781666), (0.51150703, -0.73241, -0.44937295), (-0.36356696, 0.84432375, -0.39361984), (-0.32824755, 0.9142191, -0.23760706), (0.32824725, 0.91422135, -0.23759872), (0.36357653, 0.84437734, -0.3934959), (-0.32833725, -0.9142928, 0.23719901), (-0.3629826, -0.92862326, 0.076828495), (0.36297965, -0.9286249, 0.076821454), (0.3283785, -0.91430384, 0.23709913), (0.9362289, 0.1145021, -0.3322118), (0.97733116, 0.20492315, -0.05319902), (0.9766382, -0.20799565, 0.053997193), (0.9354545, -0.26981482, -0.22830902), (-0.9354544, -0.26981452, -0.22830935), (-0.9766382, -0.20799688, 0.053991776), (-0.97731286, 0.20500983, -0.053202692), (-0.9362721, 0.11449167, -0.33209354), (-0.97731286, 0.20500983, -0.053202692), (-0.6989983, 0.6921407, -0.17984077), (-0.699691, 0.58719546, -0.40698177), (-0.9362721, 0.11449167, -0.33209354), (-0.6989983, 0.6921407, -0.17984077), (-0.32824755, 0.9142191, -0.23760706), (-0.36356696, 0.84432375, -0.39361984), (-0.699691, 0.58719546, -0.40698177), (0.32824725, 0.91422135, -0.23759872), (0.6989977, 0.69214857, -0.17981291), (0.6996865, 0.58719933, -0.40698376), (0.36357653, 0.84437734, -0.3934959), (0.6989977, 0.69214857, -0.17981291), (0.97733116, 0.20492315, -0.05319902), (0.9362289, 0.1145021, -0.3322118), (0.6996865, 0.58719933, -0.40698376), (-0.9354544, -0.26981452, -0.22830935), (-0.69622016, -0.7155207, -0.05751166), (-0.6967912, -0.69424695, 0.18028677), (-0.9766382, -0.20799688, 0.053991776), (-0.69622016, -0.7155207, -0.05751166), (-0.3629826, -0.92862326, 0.076828495), (-0.32833725, -0.9142928, 0.23719901), (-0.6967912, -0.69424695, 0.18028677), (0.36297965, -0.9286249, 0.076821454), (0.69622, -0.71552086, -0.057511352), (0.6967048, -0.69432837, 0.18030708), (0.3283785, -0.91430384, 0.23709913), (0.69622, -0.71552086, -0.057511352), (0.9354545, -0.26981482, -0.22830902), (0.9766382, -0.20799565, 0.053997193), (0.6967048, -0.69432837, 0.18030708), (0.000020919459, -0.26471844, -0.9643258), (-0.000020817753, -0.26471838, -0.9643258), (-0.000008369554, -0.2648097, -0.96430075), (0.000008472995, -0.2648097, -0.96430075), (0.5416945, -0.33199063, -0.7722364), (-0.000008369554, -0.2648097, -0.96430075), (-0.000020817753, -0.26471838, -0.9643258), (0.5416702, -0.10889173, -0.83350813), (-0.54166436, -0.10892407, -0.83350784), (0.000020919459, -0.26471844, -0.9643258), (0.000008472995, -0.2648097, -0.96430075), (-0.5416541, -0.3319656, -0.77227557), (-0.12118088, 0.32543188, -0.93776834), (0.000020919459, -0.26471844, -0.9643258), (-0.54166436, -0.10892407, -0.83350784), (-0.3946852, 0.18716425, -0.89955163), (0.12117964, 0.32547063, -0.937755), (-0.000020817753, -0.26471838, -0.9643258), (0.000020919459, -0.26471844, -0.9643258), (-0.12118088, 0.32543188, -0.93776834), (0.5416702, -0.10889173, -0.83350813), (-0.000020817753, -0.26471838, -0.9643258), (0.12117964, 0.32547063, -0.937755), (0.39471275, 0.18717986, -0.8995363), (0.3945862, -0.6199934, -0.6781666), (0.12109307, -0.75805706, -0.6408479), (-0.000008369554, -0.2648097, -0.96430075), (0.5416945, -0.33199063, -0.7722364), (0.000008472995, -0.2648097, -0.96430075), (-0.000008369554, -0.2648097, -0.96430075), (0.12109307, -0.75805706, -0.6408479), (-0.121105924, -0.7581647, -0.64071804), (-0.5416541, -0.3319656, -0.77227557), (0.000008472995, -0.2648097, -0.96430075), (-0.121105924, -0.7581647, -0.64071804), (-0.39455706, -0.6200667, -0.6781165), (-0.9362721, 0.11449167, -0.33209354), (-0.699691, 0.58719546, -0.40698177), (-0.5129072, 0.404621, -0.7571051), (-0.71840096, -0.02258892, -0.69526243), (-0.7177095, -0.33479604, -0.6105774), (-0.9354544, -0.26981452, -0.22830935), (-0.9362721, 0.11449167, -0.33209354), (-0.71840096, -0.02258892, -0.69526243), (-0.7177095, -0.33479604, -0.6105774), (-0.51150733, -0.7323956, -0.4493961), (-0.69622016, -0.7155207, -0.05751166), (-0.9354544, -0.26981452, -0.22830935), (-0.51150733, -0.7323956, -0.4493961), (-0.2221825, -0.9018301, -0.3705905), (-0.3629826, -0.92862326, 0.076828495), (-0.69622016, -0.7155207, -0.05751166), (0.36297965, -0.9286249, 0.076821454), (-0.3629826, -0.92862326, 0.076828495), (-0.2221825, -0.9018301, -0.3705905), (0.22209927, -0.90184766, -0.3705979), (0.22209927, -0.90184766, -0.3705979), (0.51150703, -0.73241, -0.44937295), (0.69622, -0.71552086, -0.057511352), (0.36297965, -0.9286249, 0.076821454), (0.51150703, -0.73241, -0.44937295), (0.7177128, -0.33478695, -0.6105784), (0.9354545, -0.26981482, -0.22830902), (0.69622, -0.71552086, -0.057511352), (0.71834266, -0.022594588, -0.6953226), (0.9362289, 0.1145021, -0.3322118), (0.9354545, -0.26981482, -0.22830902), (0.7177128, -0.33478695, -0.6105784), (0.6996865, 0.58719933, -0.40698376), (0.9362289, 0.1145021, -0.3322118), (0.71834266, -0.022594588, -0.6953226), (0.5129035, 0.404609, -0.75711393), (0.36357653, 0.84437734, -0.3934959), (0.6996865, 0.58719933, -0.40698376), (0.5129035, 0.404609, -0.75711393), (0.22247724, 0.5912462, -0.775198), (-0.222485, 0.5911383, -0.77527785), (-0.36356696, 0.84432375, -0.39361984), (0.36357653, 0.84437734, -0.3934959), (0.22247724, 0.5912462, -0.775198), (-0.699691, 0.58719546, -0.40698177), (-0.36356696, 0.84432375, -0.39361984), (-0.222485, 0.5911383, -0.77527785), (-0.5129072, 0.404621, -0.7571051), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.0005, -0.005721, -0.330648), (-0.0005, -0.005721, -0.330648), (0.0005, -0.004721, -0.330648), (-0.0005, -0.004721, -0.330648), (0.0005, -0.005721, -0.330648), (-0.0005, -0.005721, -0.330648), (0.0005, -0.004721, -0.330648), (-0.0005, -0.004721, -0.330648), (0.0005, -0.005721, -0.330648), (-0.0005, -0.005721, -0.330648), (0.0005, -0.004721, -0.330648), (-0.0005, -0.004721, -0.330648), (0.0005, -0.005721, -0.330648), (-0.0005, -0.005721, -0.330648), (0.0005, -0.004721, -0.330648), (-0.0005, -0.004721, -0.330648), (0.0005, -0.005721, -0.330648), (-0.0005, -0.005721, -0.330648), (0.0005, -0.004721, -0.330648), (-0.0005, -0.004721, -0.330648), (0.05237, 0.006868, 0.076926), (-0.052849, 0.006868, 0.076926), (0.056345, 0.01382, 0.080997), (0.057051, 0.013532, 0.080453), (0.057051, 0.017971, 0.079234), (0.056345, 0.018002, 0.079849), (0.051397, 0.008355, 0.081874), (0.051256, 0.00916, 0.082276), (-0.051736, 0.00916, 0.082276), (-0.051876, 0.008355, 0.081874), (-0.05753, 0.013532, 0.080453), (-0.056825, 0.01382, 0.080997), (-0.056825, 0.018002, 0.079849), (-0.05753, 0.017971, 0.079234), (0.051256, 0.022661, 0.078569), (0.051397, 0.023149, 0.077812), (-0.051876, 0.023149, 0.077812), (-0.051736, 0.022661, 0.078569), (0.05816, 0.012195, 0.075564), (0.05816, 0.016762, 0.074397), (0.05237, 0.022089, 0.073035), (-0.052849, 0.022089, 0.073035), (-0.058639, 0.012195, 0.075564), (-0.058639, 0.016762, 0.074397), (0.056464, 0.008429, 0.076527), (0.054855, 0.010525, 0.081902), (0.055395, 0.009872, 0.081458), (-0.056943, 0.008429, 0.076527), (-0.055334, 0.010525, 0.081902), (-0.055874, 0.009872, 0.081458), (0.055395, 0.021633, 0.078229), (0.054855, 0.021297, 0.078944), (0.056464, 0.020528, 0.073434), (-0.055874, 0.021633, 0.078229), (-0.055334, 0.021297, 0.078944), (-0.056943, 0.020528, 0.073434), (0.051256, 0.01382, 0.080997), (-0.051736, 0.01382, 0.080997), (-0.051736, 0.018002, 0.079849), (0.051256, 0.018002, 0.079849), (0.056464, 0.00925, 0.079688), (0.05816, 0.012999, 0.078659), (0.05816, 0.017545, 0.077411), (0.056464, 0.021294, 0.076382), (0.05237, 0.022846, 0.075956), (-0.052849, 0.022846, 0.075956), (-0.056943, 0.021294, 0.076382), (-0.058639, 0.017545, 0.077411), (-0.058639, 0.012999, 0.078659), (-0.056943, 0.00925, 0.079688), (-0.052849, 0.007697, 0.080115), (0.05237, 0.007697, 0.080115)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-20.43686, -5.071917), (-20.43686, -6.067932), (-19.440842, -6.067932), (-19.440842, -5.071917), (-14.606205, -5.071916), (-14.606205, -6.067932), (-13.610725, -6.067932), (-13.610725, -5.071916), (-7.360346, -6.059149), (-7.360346, -6.067932), (-7.351567, -6.067932), (-7.351567, -6.059149), (-7.481658, 0.058695), (-7.482232, 0.058392), (-7.481172, 0.054531), (-7.480703, 0.055219), (-7.482232, 0.058392), (-7.481658, 0.058695), (-7.482868, 0.063106), (-7.483517, 0.063075), (-7.483517, 0.063075), (-7.482868, 0.063106), (-7.483823, 0.066582), (-7.484577, 0.066936), (-7.600454, 0.551075), (-7.59964, 0.550933), (-7.598263, 0.554565), (-7.598922, 0.55511), (-7.59964, 0.550933), (-7.600454, 0.551075), (-7.600454, 0.446845), (-7.59964, 0.446986), (-7.59964, 0.446986), (-7.600454, 0.446845), (-7.598922, 0.442809), (-7.598263, 0.443354), (-7.401939, 0.061553), (-7.401365, 0.061249), (-7.400411, 0.064725), (-7.400878, 0.065414), (-7.401365, 0.061249), (-7.401939, 0.061553), (-7.403224, 0.05687), (-7.402575, 0.056838), (-7.402575, 0.056838), (-7.403224, 0.05687), (-7.404284, 0.053009), (-7.40353, 0.053362), (-7.586015, 0.550933), (-7.585522, 0.551075), (-7.587053, 0.55511), (-7.587391, 0.554565), (-7.585522, 0.551075), (-7.586015, 0.550933), (-7.586015, 0.446986), (-7.585522, 0.446845), (-7.585522, 0.446845), (-7.586015, 0.446986), (-7.587391, 0.443354), (-7.587053, 0.442809), (-7.739007, 0.552733), (-7.742203, 0.552733), (-7.742203, 0.447268), (-7.739007, 0.447268), (-7.684316, 0.552152), (-7.687211, 0.552152), (-7.687211, 0.447848), (-7.684316, 0.447848), (-7.403831, 0.062115), (-7.407096, 0.062963), (-7.408327, 0.058146), (-7.405148, 0.05732), (-7.48544, 0.062624), (-7.48862, 0.061799), (-7.487389, 0.056981), (-7.484123, 0.057829), (-7.487389, 0.056981), (-7.486372, 0.053009), (-7.483037, 0.053875), (-7.484123, 0.057829), (-7.742603, 0.556836), (-7.742203, 0.552733), (-7.739007, 0.552733), (-7.739434, 0.556836), (-7.742203, 0.447268), (-7.742603, 0.443165), (-7.739434, 0.443165), (-7.739007, 0.447268), (-7.40608, 0.066936), (-7.407096, 0.062963), (-7.403831, 0.062115), (-7.402744, 0.06607), (-7.48544, 0.062624), (-7.486526, 0.06658), (-7.489635, 0.065771), (-7.48862, 0.061799), (-7.687634, 0.556211), (-7.687211, 0.552152), (-7.684316, 0.552152), (-7.684711, 0.556211), (-7.687211, 0.447848), (-7.687634, 0.44379), (-7.684711, 0.44379), (-7.684316, 0.447848), (-7.406233, 0.053365), (-7.405148, 0.05732), (-7.408327, 0.058146), (-7.409343, 0.054174), (-7.594937, 0.550933), (-7.594937, 0.446986), (-7.590717, 0.446986), (-7.590717, 0.550933), (-7.590717, 0.44185), (-7.590717, 0.446986), (-7.594937, 0.446986), (-7.594937, 0.44185), (-7.594937, 0.556069), (-7.594937, 0.550933), (-7.590717, 0.550933), (-7.590717, 0.556069), (-7.59964, 0.550933), (-7.594937, 0.550933), (-7.594937, 0.556069), (-7.598263, 0.554565), (-7.59964, 0.446986), (-7.594937, 0.446986), (-7.594937, 0.550933), (-7.59964, 0.550933), (-7.594937, 0.44185), (-7.594937, 0.446986), (-7.59964, 0.446986), (-7.598263, 0.443354), (-7.587391, 0.443354), (-7.586015, 0.446986), (-7.590717, 0.446986), (-7.590717, 0.44185), (-7.590717, 0.550933), (-7.590717, 0.446986), (-7.586015, 0.446986), (-7.586015, 0.550933), (-7.590717, 0.556069), (-7.590717, 0.550933), (-7.586015, 0.550933), (-7.587391, 0.554565), (-7.484123, 0.057829), (-7.483037, 0.053875), (-7.481172, 0.054531), (-7.482232, 0.058392), (-7.483517, 0.063075), (-7.48544, 0.062624), (-7.484123, 0.057829), (-7.482232, 0.058392), (-7.483517, 0.063075), (-7.484577, 0.066936), (-7.486526, 0.06658), (-7.48544, 0.062624), (-7.689465, 0.555152), (-7.689052, 0.551188), (-7.687211, 0.552152), (-7.687634, 0.556211), (-7.687211, 0.447848), (-7.687211, 0.552152), (-7.689052, 0.551188), (-7.689052, 0.448813), (-7.689052, 0.448813), (-7.689465, 0.444849), (-7.687634, 0.44379), (-7.687211, 0.447848), (-7.404284, 0.053009), (-7.403224, 0.05687), (-7.405148, 0.05732), (-7.406233, 0.053365), (-7.401939, 0.061553), (-7.403831, 0.062115), (-7.405148, 0.05732), (-7.403224, 0.05687), (-7.402744, 0.06607), (-7.403831, 0.062115), (-7.401939, 0.061553), (-7.400878, 0.065414), (-7.739007, 0.447268), (-7.739434, 0.443165), (-7.737661, 0.444236), (-7.737244, 0.448243), (-7.737244, 0.551758), (-7.739007, 0.552733), (-7.739007, 0.447268), (-7.737244, 0.448243), (-7.739434, 0.556836), (-7.739007, 0.552733), (-7.737244, 0.551758), (-7.737661, 0.555765), (0.001992, -3.564456), (0.001992, -4.560472), (0.998008, -4.560472), (0.998008, -3.564456), (0.466863, -9.766905), (0.466863, -9.775688), (0.475643, -9.775688), (0.475643, -9.766905)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_AlarmClockButton_21_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0]
                rel material:binding = </root/_materials/M_AlarmClockButton_21_0>
            }

            def GeomSubset "M_AlarmClockButton_21_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [1]
                rel material:binding = </root/_materials/M_AlarmClockButton_21_1>
            }

            def GeomSubset "M_AlarmClockButton_21_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47]
                rel material:binding = </root/_materials/M_AlarmClockButton_21_2>
            }

            def GeomSubset "M_AlarmClockButton_21_3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [48]
                rel material:binding = </root/_materials/M_AlarmClockButton_21_3>
            }

            def GeomSubset "M_AlarmClockButton_21_4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [49]
                rel material:binding = </root/_materials/M_AlarmClockButton_21_4>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_AlarmClockButton_21_0"
        {
            token outputs:surface.connect = </root/_materials/M_AlarmClockButton_21_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.53676474, 0.53676474, 0.53676474)
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }

        def Material "M_AlarmClockButton_21_1"
        {
            token outputs:surface.connect = </root/_materials/M_AlarmClockButton_21_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.1397059, 0.1397059, 0.1397059)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_AlarmClockButton_21_1/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Copper_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_AlarmClockButton_21_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_AlarmClockButton_21_2"
        {
            token outputs:surface.connect = </root/_materials/M_AlarmClockButton_21_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_AlarmClockButton_21_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_AlarmClockButton_21_2/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_AlarmClockButton_21_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_AlarmClockButton_21_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_AlarmClockButton_21_3"
        {
            token outputs:surface.connect = </root/_materials/M_AlarmClockButton_21_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0, 0, 0)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }

        def Material "M_AlarmClockButton_21_4"
        {
            token outputs:surface.connect = </root/_materials/M_AlarmClockButton_21_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.8, 0.8, 0.8)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 1
                float inputs:specular = 0
                token outputs:surface
            }
        }
    }
}

