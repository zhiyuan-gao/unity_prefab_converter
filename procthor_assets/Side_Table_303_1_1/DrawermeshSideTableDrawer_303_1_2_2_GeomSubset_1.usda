#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "DrawermeshSideTableDrawer_303_1_2_2_GeomSubset_1"
    {
        def Mesh "DrawermeshSideTableDrawer_303_1_2_2_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [52, 54, 53, 52, 55, 54, 56, 55, 52, 56, 57, 55, 55, 58, 54, 55, 59, 58, 57, 59, 55, 57, 60, 59, 59, 61, 58, 59, 62, 61, 60, 62, 59, 60, 63, 62, 64, 66, 65, 64, 67, 66, 63, 52, 62, 63, 56, 52, 62, 52, 53, 62, 53, 61, 66, 61, 53, 66, 67, 61, 65, 53, 54, 65, 66, 53, 64, 54, 58, 64, 65, 54, 67, 58, 61, 67, 64, 58]
            rel material:binding = </root/_materials/M_SideTableDrawer_303_1_2_1>
            normal3f[] normals = [(-1, -7.908956e-9, 0), (-1, -3.9968936e-7, 0), (-1, 0, 0), (-1, -7.908956e-9, 0), (-1, -2.5914773e-7, 0), (-1, -3.9968936e-7, 0), (-0.99999994, -0.0003355761, 2.0476193e-8), (-1, -2.5914773e-7, 0), (-1, -7.908956e-9, 0), (-0.99999994, -0.0003355761, 2.0476193e-8), (-1, -1.1035414e-7, 0), (-1, -2.5914773e-7, 0), (0, 0.00035905774, -0.99999994), (-1.6106496e-8, 0.00012186097, -0.99999994), (0, 0.00045742953, -0.9999999), (0, 0.00035905774, -0.99999994), (0, 0.00035905646, -0.99999994), (-1.6106496e-8, 0.00012186097, -0.99999994), (0, 0.00026068502, -1), (0, 0.00035905646, -0.99999994), (0, 0.00035905774, -0.99999994), (0, 0.00026068502, -1), (0, 0.000260685, -1), (0, 0.00035905646, -0.99999994), (1, 0.0000029020312, 0), (1, 2.2978413e-7, 0), (1, 0.000006033739, 0), (1, 0.0000029020312, 0), (1, -7.0229135e-7, 0), (1, 2.2978413e-7, 0), (1, -1.03519255e-7, 0), (1, -7.0229135e-7, 0), (1, 0.0000029020312, 0), (1, -1.03519255e-7, 0), (1, -0.0000015081728, 0), (1, -7.0229135e-7, 0), (-0.000002239085, -0.99999994, -0.00033323446), (-0.000008254399, -0.99999994, -0.00035032848), (-0.000010493484, -0.9999999, -0.00035669137), (-0.000002239085, -0.99999994, -0.00033323446), (0, -0.9999999, -0.00032687152), (-0.000008254399, -0.99999994, -0.00035032848), (0, -0.0005138355, 0.9999998), (0, -0.00025691753, 0.99999994), (-5.8625944e-9, -0.00025691657, 1), (0, -0.0005138355, 0.9999998), (0, -0.00051383075, 0.9999998), (0, -0.00025691753, 0.99999994), (-5.8625944e-9, -0.00025691657, 1), (0, -0.00025691753, 0.99999994), (-1.6265445e-10, 0, 1), (-5.8625944e-9, -0.00025691657, 1), (-1.6265445e-10, 0, 1), (1.6281558e-7, -0.0003355685, 0.9999999), (-0.0000055538903, -0.5455441, 0.83808213), (-8.801245e-9, -0.54547435, 0.8381275), (-0.000005605921, -0.545542, 0.83808345), (-0.0000055538903, -0.5455441, 0.83808213), (-2.1667802e-8, -0.5453592, 0.8382024), (-8.801245e-9, -0.54547435, 0.8381275), (-0.707037, -0.7071766, -0.00023765268), (-0.7071786, -0.70703495, -0.000250709), (-0.7070314, -0.70718205, -0.0002371436), (-0.707037, -0.7071766, -0.00023765268), (-0.70718825, -0.7070253, -0.0002516032), (-0.7071786, -0.70703495, -0.000250709), (-5.405134e-8, -0.5449784, -0.83845), (-0.0000056813265, -0.54518974, -0.83831275), (0, -0.5449764, -0.8384514), (-5.405134e-8, -0.5449784, -0.83845), (-2.3792381e-7, -0.5449136, -0.8384921), (-0.0000056813265, -0.54518974, -0.83831275), (0.70699674, -0.7072167, -0.00025542968), (0.7072232, -0.70699024, -0.00023270489), (0.7069879, -0.70722556, -0.0002563158), (0.70699674, -0.7072167, -0.00025542968), (0.70723873, -0.7069748, -0.00023114863), (0.7072232, -0.70699024, -0.00023270489)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.387428, -0.222982, -0.067112), (-0.387428, -0.238048, -0.067117), (-0.387428, -0.237948, -0.3573), (-0.387428, -0.222882, -0.357295), (0.414025, -0.222883, -0.357295), (0.414024, -0.23795, -0.3573), (0.414024, -0.23805, -0.067117), (0.414025, -0.222984, -0.067112), (0.38052, -0.240488, -0.334078), (-0.353923, -0.240486, -0.334078), (-0.353923, -0.24057, -0.090341), (0.38052, -0.240571, -0.090341), (0.407334, -0.222986, -0.061317), (0.407334, -0.238052, -0.061322), (-0.380737, -0.23805, -0.061322), (-0.380737, -0.222984, -0.061317), (0.37573, 0.028618, -0.07689), (0.37573, 0.028706, -0.330146), (-0.349132, 0.028707, -0.330146), (-0.349132, 0.02862, -0.07689), (-0.380737, -0.22288, -0.36309), (-0.380737, -0.237946, -0.363095), (0.407334, -0.237948, -0.363095), (0.407334, -0.222881, -0.36309), (-0.380737, -0.216291, -0.067109), (0.407334, -0.216293, -0.067109), (-0.380737, -0.216191, -0.357293), (0.407334, -0.216192, -0.357293), (0.407334, -0.244741, -0.067119), (-0.380737, -0.244739, -0.067119), (-0.380737, -0.244639, -0.357302), (0.407334, -0.244641, -0.357302), (0.395943, -0.216289, -0.076974), (-0.369347, -0.216287, -0.076974), (-0.369347, -0.216194, -0.347428), (0.395943, -0.216196, -0.347428), (0.395944, 0.048926, -0.347336), (0.395944, 0.048832, -0.076883), (-0.369347, 0.048834, -0.076883), (-0.369347, 0.048928, -0.347336), (-0.349133, -0.195986, -0.330224), (-0.349133, -0.196073, -0.076967), (0.375729, -0.196075, -0.076967), (0.375729, -0.195987, -0.330224), (-0.362265, -0.244734, -0.083118), (0.388861, -0.244736, -0.083118), (-0.362265, -0.244645, -0.341304), (0.388861, -0.244647, -0.341304), (-0.358094, -0.244733, -0.08673), (0.38469, -0.244735, -0.08673), (-0.358094, -0.244646, -0.337691), (0.38469, -0.244648, -0.337691), (-0.025111, -0.243292, -0.291804), (-0.025111, -0.245442, -0.291804), (-0.025111, -0.24543, -0.3277), (-0.025111, -0.24328, -0.327699), (-0.025111, -0.239406, -0.291802), (-0.025111, -0.239393, -0.327698), (0.074924, -0.24543, -0.3277), (0.074924, -0.24328, -0.327699), (0.074924, -0.239393, -0.327698), (0.074924, -0.245443, -0.291804), (0.074924, -0.243292, -0.291804), (0.074924, -0.239406, -0.291802), (0.073188, -0.247167, -0.326571), (-0.023375, -0.247166, -0.326571), (-0.023375, -0.247178, -0.292934), (0.073188, -0.247178, -0.292934)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(0.714768, 0.525237), (0.713442, 0.499685), (0.713442, 0.525237), (0.714768, 0.525237), (0.714768, 0.499685), (0.713442, 0.499685), (0.717164, 0.525237), (0.714768, 0.499685), (0.714768, 0.525237), (0.717164, 0.525237), (0.717164, 0.499685), (0.714768, 0.499685), (0.247143, 0.714768), (0.308816, 0.713442), (0.247143, 0.713442), (0.247143, 0.714768), (0.308816, 0.714768), (0.308816, 0.713442), (0.247143, 0.717164), (0.308816, 0.714768), (0.247143, 0.714768), (0.247143, 0.717164), (0.308816, 0.717164), (0.308816, 0.714768), (0.714768, 0.499685), (0.713442, 0.525237), (0.713442, 0.499685), (0.714768, 0.499685), (0.714768, 0.525237), (0.713442, 0.525237), (0.717164, 0.499685), (0.714768, 0.525237), (0.714768, 0.499685), (0.717164, 0.499685), (0.717164, 0.525237), (0.714768, 0.525237), (0.307746, 0.500489), (0.248213, 0.524433), (0.248213, 0.500489), (0.307746, 0.500489), (0.307746, 0.524433), (0.248213, 0.524433), (0.308816, 0.717164), (0.247143, 0.714768), (0.308816, 0.714768), (0.308816, 0.717164), (0.247143, 0.717164), (0.247143, 0.714768), (0.308816, 0.714768), (0.247143, 0.714768), (0.247143, 0.713442), (0.308816, 0.714768), (0.247143, 0.713442), (0.308816, 0.713442), (0.248213, 0.712372), (0.308816, 0.713442), (0.247143, 0.713442), (0.248213, 0.712372), (0.307746, 0.712372), (0.308816, 0.713442), (0.248213, 0.500489), (0.247143, 0.525237), (0.247143, 0.499685), (0.248213, 0.500489), (0.248213, 0.524433), (0.247143, 0.525237), (0.307746, 0.712372), (0.247143, 0.713442), (0.308816, 0.713442), (0.307746, 0.712372), (0.248213, 0.712372), (0.247143, 0.713442), (0.307746, 0.524433), (0.308816, 0.499685), (0.308816, 0.525237), (0.307746, 0.524433), (0.307746, 0.500489), (0.308816, 0.499685)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_SideTableDrawer_303_1_2_1"
        {
            token outputs:surface.connect = </root/_materials/M_SideTableDrawer_303_1_2_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_SideTableDrawer_303_1_2_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_SideTableDrawer_303_1_2_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/LightWoodCounters.jpg@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_303_1_2_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_303_1_2_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

