#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "DrawermeshSideTableDrawer_303_1_1_1_GeomSubset_1"
    {
        def Mesh "DrawermeshSideTableDrawer_303_1_1_1_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [52, 54, 53, 52, 55, 54, 56, 55, 52, 56, 57, 55, 55, 58, 54, 55, 59, 58, 57, 59, 55, 57, 60, 59, 59, 61, 58, 59, 62, 61, 60, 62, 59, 60, 63, 62, 64, 66, 65, 64, 67, 66, 63, 52, 62, 63, 56, 52, 62, 52, 53, 62, 53, 61, 66, 61, 53, 66, 67, 61, 65, 53, 54, 65, 66, 53, 64, 54, 58, 64, 65, 54, 67, 58, 61, 67, 64, 58]
            rel material:binding = </root/_materials/M_SideTableDrawer_303_1_1_1>
            normal3f[] normals = [(-1, -3.0822392e-7, 0), (-1, -5.7423925e-8, 0), (-1, -0.0000015084739, 0), (-1, -3.0822392e-7, 0), (-1, -7.4293547e-7, 0), (-1, -5.7423925e-8, 0), (-1, 6.6358456e-7, 0), (-1, -7.4293547e-7, 0), (-1, -3.0822392e-7, 0), (-1, 6.6358456e-7, 0), (-1, -0.0000016568026, 0), (-1, -7.4293547e-7, 0), (0, -0.0002573959, 1), (0, 0, 1), (-1.603049e-8, -0.00033556853, 0.9999999), (0, -0.0002573959, 1), (0, -0.00025739684, 0.99999994), (0, 0, 1), (0, -0.0005147942, 0.9999998), (0, -0.00025739684, 0.99999994), (0, -0.0002573959, 1), (0, -0.0005147942, 0.9999998), (0, -0.00051478937, 0.9999998), (0, -0.00025739684, 0.99999994), (1, 4.8963532e-8, 0), (0.99999994, -0.00033309578, -4.350319e-9), (0.9999999, -0.0004793836, -2.361694e-8), (1, 4.8963532e-8, 0), (1, -7.280083e-8, 0), (0.99999994, -0.00033309578, -4.350319e-9), (1, -2.0012111e-7, 0), (1, -7.280083e-8, 0), (1, 4.8963532e-8, 0), (1, -2.0012111e-7, 0), (1, -0.000002916075, 0), (1, -7.280083e-8, 0), (-0.0000022390777, 0.99999994, 0.00033323435), (-0.0000082543675, 0.99999994, 0.00035032837), (-0.000010493445, 0.99999994, 0.00035669125), (-0.0000022390777, 0.99999994, 0.00033323435), (0, 0.99999994, 0.00032687144), (-0.0000082543675, 0.99999994, 0.00035032837), (0, 0.00025739716, -1), (0, 0.00036109332, -0.99999994), (-2.129261e-9, 0.00036098866, -0.99999994), (0, 0.00025739716, -1), (0, 0.0002573947, -0.9999999), (0, 0.00036109332, -0.99999994), (-2.129261e-9, 0.00036098866, -0.99999994), (0, 0.00036109332, -0.99999994), (-5.907518e-11, 0.00046479047, -0.9999998), (-2.129261e-9, 0.00036098866, -0.99999994), (-5.907518e-11, 0.00046479047, -0.9999998), (-4.3175463e-9, 0.00046457612, -0.9999999), (-0.0000053877566, 0.54553926, -0.8380853), (-1.3118641e-7, 0.545751, -0.8379475), (-0.0000054382313, 0.54553723, -0.83808655), (-0.0000053877566, 0.54553926, -0.8380853), (0, 0.5457562, -0.83794403), (-1.3118641e-7, 0.545751, -0.8379475), (-0.7070361, 0.70717746, 0.0002376591), (-0.7071791, 0.7070344, 0.00025070927), (-0.7070305, 0.70718306, 0.00023715015), (-0.7070361, 0.70717746, 0.0002376591), (-0.7071889, 0.7070245, 0.00025160302), (-0.7071791, 0.7070344, 0.00025070927), (-3.499233e-9, 0.5450402, 0.8384099), (-0.000005576288, 0.54484946, 0.8385339), (-1.610897e-8, 0.5450382, 0.8384112), (-3.499233e-9, 0.5450402, 0.8384099), (-0.000005714141, 0.54485476, 0.8385305), (-0.000005576288, 0.54484946, 0.8385339), (0.7069949, 0.70721847, 0.00025543582), (0.7072235, 0.70699, 0.00023270525), (0.706986, 0.70722747, 0.00025632227), (0.7069949, 0.70721847, 0.00025543582), (0.7072391, 0.7069743, 0.000231149), (0.7072235, 0.70699, 0.00023270525)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.387428, -0.222982, 0.234777), (0.387428, -0.238048, 0.234771), (0.387428, -0.237948, -0.055412), (0.387428, -0.222882, -0.055406), (-0.414025, -0.222883, -0.055406), (-0.414024, -0.23795, -0.055412), (-0.414024, -0.23805, 0.234771), (-0.414025, -0.222984, 0.234777), (-0.38052, -0.240488, -0.032189), (0.353923, -0.240486, -0.032189), (0.353923, -0.24057, 0.211547), (-0.38052, -0.240571, 0.211547), (-0.407334, -0.222986, 0.240572), (-0.407334, -0.238052, 0.240567), (0.380737, -0.238051, 0.240567), (0.380737, -0.222984, 0.240572), (-0.37573, 0.028618, 0.224999), (-0.37573, 0.028706, -0.028258), (0.349132, 0.028707, -0.028258), (0.349132, 0.028619, 0.224999), (0.380737, -0.22288, -0.061202), (0.380737, -0.237946, -0.061207), (-0.407334, -0.237948, -0.061207), (-0.407334, -0.222881, -0.061202), (0.380737, -0.216291, 0.234779), (-0.407334, -0.216293, 0.234779), (0.380737, -0.216191, -0.055404), (-0.407334, -0.216192, -0.055404), (-0.407334, -0.244741, 0.234769), (0.380737, -0.244739, 0.234769), (0.380737, -0.244639, -0.055414), (-0.407334, -0.244641, -0.055414), (-0.395943, -0.216289, 0.224914), (0.369347, -0.216287, 0.224914), (0.369347, -0.216194, -0.045539), (-0.395943, -0.216196, -0.045539), (-0.395944, 0.048926, -0.045448), (-0.395944, 0.048832, 0.225006), (0.369347, 0.048834, 0.225006), (0.369347, 0.048928, -0.045448), (0.349133, -0.195986, -0.028335), (0.349133, -0.196073, 0.224921), (-0.375729, -0.196075, 0.224921), (-0.375729, -0.195987, -0.028335), (0.362265, -0.244734, 0.21877), (-0.388861, -0.244736, 0.21877), (0.362265, -0.244645, -0.039415), (-0.388861, -0.244647, -0.039415), (0.358094, -0.244733, 0.215158), (-0.38469, -0.244735, 0.215158), (0.358094, -0.244646, -0.035803), (-0.38469, -0.244648, -0.035803), (0.025111, -0.243292, 0.010085), (0.025111, -0.245442, 0.010084), (0.025111, -0.24543, -0.025811), (0.025111, -0.24328, -0.025811), (0.025111, -0.239406, 0.010086), (0.025111, -0.239394, -0.025809), (-0.074924, -0.24543, -0.025811), (-0.074924, -0.24328, -0.025811), (-0.074924, -0.239394, -0.025809), (-0.074924, -0.245443, 0.010084), (-0.074924, -0.243292, 0.010085), (-0.074924, -0.239406, 0.010086), (-0.073188, -0.247167, -0.024683), (0.023375, -0.247166, -0.024683), (0.023375, -0.247178, 0.008954), (-0.073188, -0.247178, 0.008954)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(0.714768, 0.73971), (0.713442, 0.714159), (0.713442, 0.73971), (0.714768, 0.73971), (0.714768, 0.714159), (0.713442, 0.714159), (0.717164, 0.73971), (0.714768, 0.714159), (0.714768, 0.73971), (0.717164, 0.73971), (0.717164, 0.714159), (0.714768, 0.714159), (0.247143, 0.714768), (0.308816, 0.713442), (0.247143, 0.713442), (0.247143, 0.714768), (0.308816, 0.714768), (0.308816, 0.713442), (0.247143, 0.717164), (0.308816, 0.714768), (0.247143, 0.714768), (0.247143, 0.717164), (0.308816, 0.717164), (0.308816, 0.714768), (0.714768, 0.714159), (0.713442, 0.73971), (0.713442, 0.714159), (0.714768, 0.714159), (0.714768, 0.73971), (0.713442, 0.73971), (0.717164, 0.714159), (0.714768, 0.73971), (0.714768, 0.714159), (0.717164, 0.714159), (0.717164, 0.73971), (0.714768, 0.73971), (0.307746, 0.714963), (0.248213, 0.738907), (0.248213, 0.714963), (0.307746, 0.714963), (0.307746, 0.738907), (0.248213, 0.738907), (0.308816, 0.717164), (0.247143, 0.714768), (0.308816, 0.714768), (0.308816, 0.717164), (0.247143, 0.717164), (0.247143, 0.714768), (0.308816, 0.714768), (0.247143, 0.714768), (0.247143, 0.713442), (0.308816, 0.714768), (0.247143, 0.713442), (0.308816, 0.713442), (0.248213, 0.712372), (0.308816, 0.713442), (0.247143, 0.713442), (0.248213, 0.712372), (0.307746, 0.712372), (0.308816, 0.713442), (0.248213, 0.714963), (0.247143, 0.73971), (0.247143, 0.714159), (0.248213, 0.714963), (0.248213, 0.738907), (0.247143, 0.73971), (0.307746, 0.712372), (0.247143, 0.713442), (0.308816, 0.713442), (0.307746, 0.712372), (0.248213, 0.712372), (0.247143, 0.713442), (0.307746, 0.738907), (0.308816, 0.714159), (0.308816, 0.73971), (0.307746, 0.738907), (0.307746, 0.714963), (0.308816, 0.714159)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_SideTableDrawer_303_1_1_1"
        {
            token outputs:surface.connect = </root/_materials/M_SideTableDrawer_303_1_1_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_SideTableDrawer_303_1_1_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_SideTableDrawer_303_1_1_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/LightWoodCounters.jpg@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_303_1_1_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_303_1_1_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

