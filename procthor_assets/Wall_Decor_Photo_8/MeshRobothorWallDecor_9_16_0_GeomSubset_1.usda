#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshRobothorWallDecor_9_16_0_GeomSubset_1"
    {
        def Mesh "MeshRobothorWallDecor_9_16_0_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [4, 5, 7, 6, 12, 14, 13, 12, 15, 14, 13, 17, 16, 13, 14, 17, 16, 19, 18, 16, 17, 19, 20, 22, 21, 20, 23, 22, 13, 18, 12, 13, 16, 18, 17, 15, 19, 17, 14, 15, 24, 15, 12, 24, 23, 15, 20, 18, 19, 20, 25, 18, 25, 12, 18, 25, 24, 12, 23, 19, 15, 23, 20, 19, 25, 21, 26, 25, 20, 21, 24, 26, 27, 24, 25, 26, 23, 27, 22, 23, 24, 27, 29, 22, 27, 29, 30, 22, 31, 26, 21, 31, 28, 26, 28, 27, 26, 28, 29, 27, 30, 21, 22, 30, 31, 21]
            rel material:binding = </root/_materials/M_RobothorWallDecor_9_16_1>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1.5354975e-7, 0, 1), (-1.7013463e-7, 0, 1), (1.6032038e-7, 0, 1), (1.5354975e-7, 0, 1), (-1.7690525e-7, 0, 1), (-1.7013463e-7, 0, 1), (0.0002876617, 0.99999994, 0), (0.0002876617, 0.99999994, 0), (0.00028766168, 0.9999999, 0), (0.0002876617, 0.99999994, 0), (0.0002876617, 0.9999999, 0), (0.0002876617, 0.99999994, 0), (1.6844896e-7, 0, -1), (-1.6983104e-7, 0, -1), (1.7552317e-7, 0, -1), (1.6844896e-7, 0, -1), (-1.7690523e-7, 0, -1), (-1.6983104e-7, 0, -1), (-1, 0.0003087748, 0), (-1, 0.00029344278, 0), (-1, 0.0003088295, 0), (-1, 0.0003087748, 0), (-1, 0.00029338806, 0), (-1, 0.00029344278, 0), (-0.9999998, 0.00042578456, 0), (-0.9999998, 0.00042764208, 0), (-1, 0.00042575877, 0), (-0.9999998, 0.00042578456, 0), (-1, 0.000427668, 0), (-0.9999998, 0.00042764208, 0), (0.9999998, -0.00042578456, 0), (0.9999998, -0.00042764208, 0), (1, -0.00042575877, 0), (0.9999998, -0.00042578456, 0), (1, -0.000427668, 0), (0.9999998, -0.00042764208, 0), (-0.00021520066, -0.9999999, -0.00010427542), (-0.0002271291, -0.99999994, 0.00005850018), (-0.00019799295, -1, -0.00008346368), (-0.00021520066, -0.9999999, -0.00010427542), (-0.00024026149, -0.9999999, 0.00008036168), (-0.0002271291, -0.99999994, 0.00005850018), (-0.00023628092, -0.9999999, -0.00007345491), (-0.00020105099, -1, 0.00008268264), (-0.00022406658, -1, -0.000059168993), (-0.00023628092, -0.9999999, -0.00007345491), (-0.00021918342, -1, 0.00011104655), (-0.00020105099, -1, 0.00008268264), (-0.00021918342, -1, 0.00011104655), (-0.00019799295, -1, -0.00008346368), (-0.00020105099, -1, 0.00008268264), (-0.00021918342, -1, 0.00011104655), (-0.00021520066, -0.9999999, -0.00010427542), (-0.00019799295, -1, -0.00008346368), (-0.00024026149, -0.9999999, 0.00008036168), (-0.00022406658, -1, -0.000059168993), (-0.0002271291, -0.99999994, 0.00005850018), (-0.00024026149, -0.9999999, 0.00008036168), (-0.00023628092, -0.9999999, -0.00007345491), (-0.00022406658, -1, -0.000059168993), (-2.807881e-8, 0, 1), (9.127585e-8, 0, 1), (-2.873206e-8, 0, 1), (-2.807881e-8, 0, 1), (9.192856e-8, 0, 1), (9.127585e-8, 0, 1), (1, -0.0003011821, 0), (0.99999994, -0.00030884924, 0), (0.9999999, -0.00030115468, 0), (1, -0.0003011821, 0), (0.99999994, -0.0003088766, 0), (0.99999994, -0.00030884924, 0), (-1.0931556e-8, 0, -1), (9.138259e-8, 0, -1), (-1.1491072e-8, 0, -1), (-1.0931556e-8, 0, -1), (9.1942574e-8, 0, -1), (9.138259e-8, 0, -1), (-0.0002685628, -1, -0.000019613895), (-0.00026541154, -0.99999994, 0.00003031057), (-0.00026494317, -1, -0.000030563828), (-0.0002685628, -1, -0.000019613895), (-0.00026887772, -0.99999994, 0.000019880292), (-0.00026541154, -0.99999994, 0.00003031057), (-0.00026860458, -1, -0.000019531282), (-0.00026536328, -0.99999994, 0.000030460465), (-0.00026499055, -0.99999994, -0.000030435946), (-0.00026860458, -1, -0.000019531282), (-0.0002688352, -0.99999994, 0.000019977184), (-0.00026536328, -0.99999994, 0.000030460465), (-0.0002688352, -0.99999994, 0.000019977184), (-0.00026494317, -1, -0.000030563828), (-0.00026536328, -0.99999994, 0.000030460465), (-0.0002688352, -0.99999994, 0.000019977184), (-0.0002685628, -1, -0.000019613895), (-0.00026494317, -1, -0.000030563828), (-0.00026887772, -0.99999994, 0.000019880292), (-0.00026499055, -0.99999994, -0.000030435946), (-0.00026541154, -0.99999994, 0.00003031057), (-0.00026887772, -0.99999994, 0.000019880292), (-0.00026860458, -1, -0.000019531282), (-0.00026499055, -0.99999994, -0.000030435946)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.001042, 0.014447, -0.677398), (0.001859, 0.014447, -0.677398), (0.001042, 0.015128, -0.677398), (0.001859, 0.015128, -0.677398), (0.001042, 0.014447, -0.677398), (0.001859, 0.014447, -0.677398), (0.001042, 0.015128, -0.677398), (0.001859, 0.015128, -0.677398), (0.001042, 0.014447, -0.677398), (0.001859, 0.014447, -0.677398), (0.001042, 0.015128, -0.677398), (0.001859, 0.015128, -0.677398), (-0.406626, -0.010755, 0.609952), (-0.406615, 0.015022, 0.609952), (0.410319, 0.014787, 0.609952), (0.410308, -0.01099, 0.609952), (-0.406615, 0.015022, -0.601173), (0.410319, 0.014787, -0.601173), (-0.406626, -0.010755, -0.601173), (0.410308, -0.01099, -0.601173), (0.387929, -0.010986, -0.584031), (0.387931, -0.004426, -0.584031), (0.387931, -0.004426, 0.592809), (0.387929, -0.010986, 0.592809), (-0.384246, -0.010758, 0.592809), (-0.384246, -0.010758, -0.584031), (-0.384244, -0.004199, -0.584031), (-0.384244, -0.004199, 0.592809), (-0.379864, -0.0042, -0.578766), (-0.379864, -0.0042, 0.587544), (0.383551, -0.004425, 0.587544), (0.383551, -0.004425, -0.578766)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-19.344551, -9.578811), (-19.344421, -9.578811), (-19.344421, -9.578681), (-19.344551, -9.578681), (-19.365158, 1.696402), (-19.291908, -0.256058), (-19.291231, 1.696376), (-19.365158, 1.696402), (-19.365835, -0.256033), (-19.291908, -0.256058), (-18.227365, 2.055372), (-20.179659, -1.417802), (-18.227365, -1.417802), (-18.227365, 2.055372), (-20.179659, 2.055372), (-20.179659, -1.417802), (-19.347704, 1.680402), (-19.273127, -0.271631), (-19.273792, 1.680427), (-19.347704, 1.680402), (-19.347038, -0.271658), (-19.273127, -0.271631), (-19.30866, -1.414582), (-19.327475, 1.959984), (-19.327475, -1.414582), (-19.30866, -1.414582), (-19.30866, 1.959984), (-19.327475, 1.959984), (-19.709213, 2.017126), (-19.635296, -1.455937), (-19.635296, 2.017126), (-19.709213, 2.017126), (-19.709213, -1.455937), (-19.635296, -1.455937), (-19.615805, -1.455986), (-19.689726, 2.017175), (-19.689726, -1.455986), (-19.615805, -1.455986), (-19.615805, 2.017175), (-19.689726, 2.017175), (-20.405167, 1.968097), (-18.506277, 2.017258), (-20.458647, 2.017258), (-20.405167, 1.968097), (-18.559757, 1.968096), (-18.506277, 2.017258), (-18.559757, -1.406907), (-20.458647, -1.456069), (-18.506277, -1.456069), (-18.559757, -1.406907), (-20.405167, -1.406907), (-20.458647, -1.456069), (-20.405167, -1.406907), (-20.458647, 2.017258), (-20.458647, -1.456069), (-20.405167, -1.406907), (-20.405167, 1.968097), (-20.458647, 2.017258), (-18.559757, 1.968096), (-18.506277, -1.456069), (-18.506277, 2.017258), (-18.559757, 1.968096), (-18.559757, -1.406907), (-18.506277, -1.456069), (-19.351288, 1.63348), (-19.333141, -0.210315), (-19.332487, 1.633474), (-19.351288, 1.63348), (-19.35194, -0.21031), (-19.333141, -0.210315), (-19.31773, 1.960005), (-19.298916, -1.414603), (-19.298916, 1.960005), (-19.31773, 1.960005), (-19.31773, -1.414603), (-19.298916, -1.414603), (-19.341757, -0.210555), (-19.361204, 1.633718), (-19.36055, -0.21056), (-19.341757, -0.210555), (-19.342398, 1.633724), (-19.361204, 1.633718), (-20.062355, 1.945042), (-18.227478, 1.960142), (-20.07282, 1.960142), (-20.062355, 1.945042), (-18.237942, 1.945042), (-18.227478, 1.960142), (-18.237942, -1.399641), (-20.07282, -1.41474), (-18.227478, -1.41474), (-18.237942, -1.399641), (-20.062355, -1.399641), (-20.07282, -1.41474), (-20.062355, -1.399641), (-20.07282, 1.960142), (-20.07282, -1.41474), (-20.062355, -1.399641), (-20.062355, 1.945042), (-20.07282, 1.960142), (-18.237942, 1.945042), (-18.227478, -1.41474), (-18.227478, 1.960142), (-18.237942, 1.945042), (-18.237942, -1.399641), (-18.227478, -1.41474)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_RobothorWallDecor_9_16_1"
        {
            token outputs:surface.connect = </root/_materials/M_RobothorWallDecor_9_16_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_RobothorWallDecor_9_16_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_RobothorWallDecor_9_16_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/DarkWood2.tif@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_RobothorWallDecor_9_16_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_RobothorWallDecor_9_16_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

