#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "CountertopC_10X10"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "CountertopC_10X10" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-1.524867, -1.533222, -0.517404), (1.523137, 1.534778, 0.418626)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 3, 3, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [44, 45, 9, 10, 0, 15, 16, 4, 2, 3, 6, 5, 0, 1, 8, 7, 3, 2, 10, 9, 14, 15, 0, 7, 6, 3, 11, 12, 3, 9, 13, 11, 2, 15, 14, 10, 16, 15, 2, 5, 46, 30, 29, 47, 26, 1, 0, 4, 4, 27, 28, 26, 6, 29, 30, 5, 32, 27, 4, 16, 6, 12, 31, 29, 5, 30, 32, 16, 7, 8, 45, 44, 8, 13, 9, 45, 14, 7, 44, 10, 27, 32, 30, 46, 31, 28, 47, 29, 28, 27, 46, 47, 12, 11, 17, 18, 11, 13, 19, 17, 19, 13, 8, 21, 20, 22, 23, 36, 37, 38, 39, 18, 17, 20, 21, 23, 22, 25, 24, 12, 18, 33, 31, 33, 28, 31, 33, 35, 28, 26, 24, 25, 1, 19, 8, 34, 40, 41, 42, 43, 19, 34, 37, 36, 35, 33, 40, 43, 18, 21, 40, 33, 21, 23, 41, 40, 23, 24, 42, 41, 24, 26, 43, 42, 26, 28, 35, 43, 8, 1, 37, 34, 1, 25, 38, 37, 25, 22, 39, 38, 22, 20, 36, 39, 20, 17, 19, 36]
            rel material:binding = </root/_materials/M_CountertopC_10X10_0>
            normal3f[] normals = [(0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (-3.6718596e-8, 0, -1), (-1.1039627e-7, 0, -1), (1.7211246e-8, 0, -1), (2.294909e-8, 0, -1), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (-1, -4.074098e-8, 0), (-1, -5.569119e-8, 0), (-1, -1.3580323e-8, 0), (-1, -2.0370491e-8, 0), (1, -8.0817614e-7, 0), (1, -8.0817614e-7, 0), (1, -8.0817614e-7, 0), (1, -8.0817614e-7, 0), (-2.6693374e-7, 0, -1), (-1.1039627e-7, 0, -1), (-3.6718596e-8, 0, -1), (-3.671828e-8, 0, -1), (7.578713e-8, 0, 1), (0, 0, 1), (0, 0, 1), (7.576472e-8, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-3.3145497e-7, 0, -1), (-1.1039627e-7, 0, -1), (-2.6693374e-7, 0, -1), (-3.314766e-7, 0, -1), (1.7211246e-8, 0, -1), (-1.1039627e-7, 0, -1), (-3.3145497e-7, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 7.829206e-7, 0), (-1, 7.829206e-7, 0), (-1, 7.829206e-7, 0), (-1, 7.829206e-7, 0), (1.1474584e-8, 0, -1), (2.2948841e-8, 0, -1), (2.294909e-8, 0, -1), (1.7211246e-8, 0, -1), (7.578713e-8, 0, 1), (7.576472e-8, 0, 1), (7.57855e-8, 0, 1), (7.576963e-8, 0, 1), (0, 0, -1), (0, 0, -1), (1.1474584e-8, 0, -1), (1.7211246e-8, 0, -1), (-1, -2.0370491e-8, 0), (-1, -1.3580323e-8, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-2.6693374e-7, 0, -1), (-3.671828e-8, 0, -1), (0, 0, -1), (-3.314766e-7, 0, -1), (2.2948841e-8, 0, -1), (1.1474584e-8, 0, -1), (0, 0, -1), (0, 0, -1), (7.57855e-8, 0, 1), (0, 0, 1), (0, 0, 1), (7.576963e-8, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0.0000016742785, 1, 0), (0.0000016742785, 1, 0), (0.0000016742785, 1, 0), (0.0000016742785, 1, 0), (0.004288269, -0.007916203, 0.9999594), (-0.004343041, -0.007837634, 0.9999599), (-0.004344509, -0.007835762, 0.9999599), (0.0043569035, -0.00772588, 0.9999607), (-0.00017740211, 0.00021677099, 1), (0.00017740265, 0.00021677093, 1), (0.00017742017, 0.00021674712, 0.99999994), (-0.00017741989, 0.0002167468, 0.99999994), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0.99999994, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-0.0000016742722, 0.99999994, 0), (-0.0000016742722, 0.99999994, 0), (-0.0000016742722, 0.99999994, 0), (-0.0000016742722, 0.99999994, 0), (-0.0013820919, -0.0019040483, 0.9999972), (-0.00011216713, -0.0021292118, 0.99999774), (-0.00011216713, -0.0021292118, 0.99999774), (-0.003221501, -0.0014952811, 0.9999936), (0.000112166745, -0.002129212, 0.9999978), (0.001428751, -0.0018932582, 0.9999973), (0.0032731313, -0.0015062804, 0.99999344), (0.000112166745, -0.002129212, 0.9999978), (0.004288269, -0.007916203, 0.9999594), (0.0043569035, -0.00772588, 0.9999607), (0.0032731313, -0.0015062804, 0.99999344), (0.001428751, -0.0018932582, 0.9999973), (-0.99999994, 0.00042327537, 0), (-0.99999994, 0.00042327537, 0), (-0.99999994, 0.00042327537, 0), (-0.99999994, 0.00042327537, 0), (-0.00017740211, 0.00021677099, 1), (-0.00017741989, 0.0002167468, 0.99999994), (-0.00035483696, -0.000023903865, 0.99999994), (-0.00035483696, -0.000023903865, 0.99999994), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, -1.3580323e-8, 0), (-1, -5.569119e-8, 0), (-1, -3.3195995e-8, 0), (-1, 0, 0), (-1, -5.569119e-8, 0), (-0.99999994, -8.511419e-8, 0), (-0.99999994, -8.511419e-8, 0), (-1, -3.3195995e-8, 0), (0.00017742017, 0.00021674712, 0.99999994), (0.00017740265, 0.00021677093, 1), (0.00035483795, -0.00002390381, 0.99999994), (0.00035483795, -0.00002390381, 0.99999994), (0.99999994, 0.000423732, 0), (0.99999994, 0.000423732, 0), (0.99999994, 0.000423732, 0), (0.99999994, 0.000423732, 0), (-0.004344509, -0.007835762, 0.9999599), (-0.004343041, -0.007837634, 0.9999599), (-0.0013820919, -0.0019040483, 0.9999972), (-0.003221501, -0.0014952811, 0.9999936)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(1.523137, 1.534778, 0.418626), (1.523137, 1.534778, 0.388627), (0.913533, 0.925179, 0.418626), (0.913533, 0.925179, 0.388626), (-1.524867, 1.534778, 0.418626), (-0.915265, 0.925179, 0.418626), (-0.915265, 0.925179, 0.388626), (1.523137, -1.513222, 0.418626), (1.523137, -1.513222, 0.388626), (0.913531, -1.533222, 0.388626), (0.913531, -1.533222, 0.418626), (0.933534, 0.945183, 0.388626), (-0.935262, 0.945183, 0.388626), (0.933534, -1.513222, 0.388626), (0.933534, -1.513222, 0.418626), (0.933534, 0.945183, 0.418626), (-0.935262, 0.945183, 0.418626), (0.933534, 0.945183, -0.437404), (-0.935262, 0.945183, -0.437404), (0.933534, -1.513222, -0.437404), (0.952497, 0.964144, -0.437143), (-0.954226, 0.964144, -0.437143), (0.952497, 0.964144, -0.517143), (-0.954226, 0.964144, -0.517143), (-1.524867, 1.534778, -0.517404), (1.523137, 1.534778, -0.517404), (-1.524867, 1.534778, 0.388626), (-1.524867, -1.513222, 0.418626), (-1.524867, -1.513222, 0.388626), (-0.915267, -1.533222, 0.388626), (-0.915267, -1.533222, 0.418626), (-0.935262, -1.513222, 0.388626), (-0.935262, -1.513222, 0.418626), (-0.935262, -1.513222, -0.437404), (1.523137, -1.513222, -0.437274), (-1.524867, -1.513222, -0.437274), (0.953534, -1.483221, -0.437274), (1.523137, -1.483222, -0.437274), (1.523137, -1.483222, -0.517404), (0.953534, -1.483221, -0.517274), (-0.955262, -1.483221, -0.437274), (-0.955262, -1.483221, -0.517274), (-1.524867, -1.483222, -0.517404), (-1.524867, -1.483222, -0.437274), (1.523137, -1.533222, 0.418626), (1.523137, -1.533222, 0.388626), (-1.524867, -1.533222, 0.418626), (-1.524867, -1.533222, 0.388626)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-9.522149, 1.029168), (-9.569024, 1.029168), (-9.569024, 0.076617), (-9.522149, 0.076617), (-12.132158, 2.647779), (-11.210907, 1.726537), (-8.290907, 1.726536), (-7.369651, 2.647779), (-9.511711, 2.080607), (-9.558584, 2.080607), (-9.558584, -0.776994), (-9.511711, -0.776994), (-9.471257, 2.647773), (-9.518132, 2.647773), (-9.518132, -2.11472), (-9.471257, -2.11472), (-9.537706, -1.217695), (-9.49083, -1.217695), (-9.49083, 2.623469), (-9.537706, 2.623471), (-11.210906, -2.114728), (-11.210907, 1.726537), (-12.132158, 2.647779), (-12.132158, -2.114728), (-11.199715, -0.678004), (-11.199715, 2.179446), (-11.23097, 2.210698), (-11.23097, -0.709252), (-11.199715, 2.179446), (-7.358525, 2.179441), (-7.389771, 2.210698), (-11.23097, 2.210698), (-11.179654, 1.695279), (-11.210907, 1.726537), (-11.210906, -2.114728), (-11.17965, -2.145976), (-8.290907, 1.726536), (-11.210907, 1.726537), (-11.179654, 1.695279), (-8.322156, 1.695279), (-9.53259, 0.076631), (-9.53259, 1.029154), (-9.579463, 1.029154), (-9.579463, 0.076631), (-9.480392, -1.630589), (-9.480392, 3.132033), (-9.527266, 3.132032), (-9.527266, -1.630588), (-9.460638, -2.146034), (-9.460638, 2.616588), (-9.507511, 2.616588), (-9.507511, -2.146034), (-9.548145, 2.623506), (-9.548145, -1.217732), (-9.50127, -1.217732), (-9.50127, 2.623506), (-8.290907, -2.114728), (-7.369651, -2.114728), (-7.369651, 2.647779), (-8.290907, 1.726536), (-11.199715, -0.678004), (-11.23097, -0.709252), (-7.389771, -0.709252), (-7.358525, -0.678009), (-8.322156, 1.695279), (-8.32215, -2.145974), (-8.290907, -2.114728), (-8.290907, 1.726536), (-9.471257, -2.11472), (-9.518132, -2.11472), (-9.518132, -2.14597), (-9.471257, -2.14597), (-7.389771, 3.131933), (-7.389771, 2.210698), (-7.358525, 2.179441), (-7.358526, 3.131933), (-11.210906, -2.114728), (-12.132158, -2.114728), (-12.132158, -2.145976), (-11.17965, -2.145976), (-7.369651, -2.114728), (-8.290907, -2.114728), (-8.32215, -2.145974), (-7.369651, -2.145976), (-7.389771, -0.709252), (-7.389771, -1.630492), (-7.358526, -1.63049), (-7.358525, -0.678009), (-9.507511, 2.616588), (-9.460638, 2.616588), (-9.460638, 2.647836), (-9.507511, 2.647836), (-18.90137, 0.55477), (-20.361364, 0.554769), (-20.361364, -0.090567), (-18.90137, -0.090569), (-18.717144, 0.881294), (-20.637772, 0.881294), (-20.637772, 0.235954), (-18.717144, 0.235954), (-19.227186, 0.345617), (-19.872522, 0.345617), (-19.872522, -0.115009), (-18.889511, 0.340313), (-20.379152, 0.340313), (-20.379152, 0.277811), (-18.889511, 0.277811), (-19.440437, 0.003225), (-19.885447, 0.003225), (-19.885447, -0.059376), (-19.440437, -0.059273), (-18.512995, -0.793633), (-19.97306, -0.793633), (-19.987873, -0.808449), (-18.49818, -0.808449), (-18.498215, 0.627058), (-19.987839, 0.627058), (-20.433653, 0.181248), (-18.052402, 0.181248), (-20.637772, 0.746014), (-20.637772, 0.100679), (-18.717142, 0.100679), (-18.717142, 0.746014), (-19.227184, -0.213322), (-19.872522, 0.247305), (-19.872522, -0.213322), (-19.227184, -0.213322), (-19.227285, 0.247305), (-19.872522, 0.247305), (-18.052402, 0.26745), (-18.052402, 0.975285), (-20.433653, 0.975285), (-20.433653, 0.26745), (-19.227186, 0.345617), (-19.872522, -0.115009), (-19.227287, -0.115009), (-19.885447, 0.022909), (-19.885447, -0.039589), (-19.440437, -0.039688), (-19.440437, 0.022909), (-19.97306, 1.127085), (-20.433708, 1.127085), (-20.433708, 1.103645), (-19.988686, 1.103645), (-18.052347, 1.127085), (-18.512995, 1.127085), (-18.49737, 1.103645), (-18.052347, 1.103645), (-18.512995, -0.793633), (-18.49818, -0.808449), (-18.49737, 1.103645), (-18.512995, 1.127085), (-20.6326, 0.377676), (-20.6326, 0.315178), (-18.720587, 0.315077), (-18.720587, 0.377575), (-18.9881, 0.546381), (-18.54229, 0.992193), (-20.90011, 0.992193), (-20.900108, 0.547192), (-18.052402, 0.415571), (-18.052402, 1.123405), (-20.410215, 0.47817), (-20.410215, 0.415571), (-18.052402, 1.123405), (-20.433653, 1.123405), (-20.433653, 0.47817), (-20.410215, 0.47817), (-18.53292, 1.244772), (-20.914171, 1.244772), (-18.556358, 0.599537), (-18.53292, 0.599537), (-20.914171, 1.244772), (-20.914171, 0.536938), (-18.556358, 0.536938), (-18.556358, 0.599537), (-18.542295, 0.451031), (-18.988104, 0.896843), (-20.900105, 0.896032), (-20.900108, 0.451031), (-18.720585, 0.296515), (-18.720585, 0.359013), (-20.632603, 0.358913), (-20.632603, 0.296413), (-19.987873, -0.808449), (-19.97306, -0.793633), (-19.97306, 1.127085), (-19.988686, 1.103645)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_CountertopC_10X10_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
                rel material:binding = </root/_materials/M_CountertopC_10X10_0>
            }

            def GeomSubset "M_CountertopC_10X10_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47]
                rel material:binding = </root/_materials/M_CountertopC_10X10_1>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_CountertopC_10X10_0"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopC_10X10_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopC_10X10_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/marbleBase2.jpg@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopC_10X10_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_CountertopC_10X10_1"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopC_10X10_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopC_10X10_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_CountertopC_10X10_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/DarkWood2.tif@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopC_10X10_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopC_10X10_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

