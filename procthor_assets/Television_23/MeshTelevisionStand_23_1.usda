#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "TelevisionStand_23"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "TelevisionStand_23" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.237522, -0.150628, -0.402605), (0.237522, 0.163627, 0.058762)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 31, 30, 28, 29, 46, 47, 45, 44, 23, 27, 31, 29, 43, 42, 40, 41, 24, 20, 28, 30, 20, 23, 33, 32, 23, 29, 37, 33, 29, 28, 36, 37, 28, 20, 32, 36, 30, 31, 39, 38, 31, 27, 35, 39, 27, 24, 34, 35, 24, 30, 38, 34, 37, 36, 42, 43, 36, 32, 40, 42, 32, 33, 41, 40, 33, 37, 43, 41, 34, 38, 49, 54, 55, 48, 46, 44, 35, 34, 54, 52, 53, 55, 44, 45, 39, 35, 52, 50, 51, 53, 45, 47, 38, 39, 50, 49, 48, 51, 47, 46, 51, 48, 56, 57, 57, 56, 58, 59, 59, 58, 60, 61, 61, 60, 49, 50, 53, 51, 57, 62, 62, 57, 59, 63, 63, 59, 61, 64, 64, 61, 50, 52, 55, 53, 62, 65, 65, 62, 63, 66, 66, 63, 64, 67, 67, 64, 52, 54, 48, 55, 65, 56, 56, 65, 66, 58, 58, 66, 67, 60, 60, 67, 54, 49, 4, 5, 7, 6, 20, 21, 22, 23, 24, 25, 21, 20, 70, 71, 69, 68, 26, 27, 23, 22, 24, 27, 26, 25, 78, 79, 76, 77, 21, 25, 76, 79, 72, 73, 75, 74, 26, 22, 78, 77, 71, 70, 74, 75, 70, 25, 72, 74, 25, 26, 73, 72, 26, 71, 75, 73, 76, 25, 70, 68, 77, 76, 68, 69, 26, 77, 69, 71, 22, 21, 79, 78, 8, 9, 11, 10, 12, 13, 15, 14, 16, 17, 19, 18]
            rel material:binding = </root/_materials/M_TelevisionStand_23_0>
            normal3f[] normals = [(0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0.005552389, 0.9999846), (0, 0.005552389, 0.9999846), (0, -0.005552389, 0.9999846), (0, -0.005552389, 0.9999846), (0, 0.99993795, -0.011133794), (0, 0.99993795, -0.011133794), (0, 0.99993795, -0.011133794), (0, 0.99993795, -0.011133794), (0.99951833, 0.000031390653, -0.031034209), (0.99951833, -4.0005398e-7, -0.031034267), (0.9999644, -0.000047343536, -0.0084409695), (0.9999644, 0.000047342397, -0.008440974), (0, -0.99993855, -0.011079572), (0, -0.99993855, -0.011079572), (0, -0.99993855, -0.011079572), (0, -0.99993855, -0.011079572), (-0.9995153, -0.00003139146, -0.031131556), (-0.9995153, 5.9104786e-7, -0.031131627), (-0.99996376, 0.00004734236, -0.008516214), (-0.99996376, -0.0000473435, -0.008516207), (0, 0.0111061055, -0.99993837), (0, 0.0111061055, -0.99993837), (0, -0.08543882, -0.99634343), (0, -0.08543882, -0.99634343), (0.99951833, 0.000031390653, -0.031034209), (0.9999644, 0.000047342397, -0.008440974), (0.99996394, -0.00077999616, -0.008450109), (0.999964, -0.0006779424, -0.008448981), (0, -0.005552389, 0.9999846), (0, -0.005552389, 0.9999846), (0, 0.08543958, 0.99634326), (0, 0.08543958, 0.99634326), (-0.99996376, 0.00004734236, -0.008516214), (-0.9995153, 5.9104786e-7, -0.031131627), (-0.99996346, -0.0006843124, -0.008524292), (-0.99996334, -0.00078720786, -0.008525429), (0, 0.005552389, 0.9999846), (0, 0.005552389, 0.9999846), (-7.947527e-7, -0.32839713, 0.9445398), (-2.4046238e-7, -0.32860476, 0.94446754), (0.9999644, -0.000047343536, -0.0084409695), (0.99951833, -4.0005398e-7, -0.031034267), (0.999964, 0.0011456136, -0.0084045185), (0.99995965, 0.0031996968, -0.008399733), (0, -0.011106665, -0.99993837), (0, -0.011106665, -0.99993837), (0, 0.32650575, -0.9451952), (0, 0.32650575, -0.9451952), (-0.9995153, -0.00003139146, -0.031131556), (-0.99996376, -0.0000473435, -0.008516207), (-0.9999587, 0.0032400412, -0.008491684), (-0.99996316, 0.0011659465, -0.008503907), (0, 0.08543958, 0.99634326), (0, 0.08543958, 0.99634326), (0, 0.1811863, 0.9834488), (0, 0.1811863, 0.9834488), (-0.99996334, -0.00078720786, -0.008525429), (-0.99996346, -0.0006843124, -0.008524292), (-0.99996233, -0.0015722018, -0.008534105), (-0.99996233, -0.0015722018, -0.008534105), (0, -0.08543882, -0.99634343), (0, -0.08543882, -0.99634343), (0, -0.18118629, -0.9834488), (0, -0.18118629, -0.9834488), (0.999964, -0.0006779424, -0.008448981), (0.99996394, -0.00077999616, -0.008450109), (0.999963, -0.0015585684, -0.0084587075), (0.999963, -0.0015585684, -0.0084587075), (-0.99996316, 0.0011659465, -0.008503907), (-0.9999587, 0.0032400412, -0.008491684), (-0.999953, 0.0045104576, -0.008578297), (-0.99995166, 0.0047998047, -0.008582468), (-0.9999633, 0.0010711345, -0.00850286), (-0.99996334, 0.0009930586, -0.008503682), (-0.99996346, 0.00082188804, -0.008505484), (-0.99996346, 0.00082188804, -0.008505484), (0, 0.32650575, -0.9451952), (0, 0.32650575, -0.9451952), (0, 0.6047868, -0.7963874), (0, 0.6047868, -0.7963874), (0, 0.27555278, -0.96128595), (0, 0.27555278, -0.96128595), (0, 0.25004697, -0.96823376), (0, 0.25004697, -0.96823376), (0.99995965, 0.0031996968, -0.008399733), (0.999964, 0.0011456136, -0.0084045185), (0.99995255, 0.0047329594, -0.00851765), (0.99995375, 0.0044367854, -0.008529307), (0.99996334, 0.0009936774, -0.008503682), (0.9999633, 0.0010720355, -0.00850286), (0.99996346, 0.00082188804, -0.008505484), (0.99996346, 0.00082188804, -0.008505484), (-2.4046238e-7, -0.32860476, 0.94446754), (-7.947527e-7, -0.32839713, 0.9445398), (0, -0.6071831, 0.7945619), (0, -0.6071837, 0.79456156), (0, -0.27879527, 0.9603506), (0, -0.27879527, 0.9603506), (0, -0.25333986, 0.96737736), (0, -0.25333986, 0.96737736), (0, -0.27879527, 0.9603506), (0, -0.27879527, 0.9603506), (0, -0.35399356, 0.9352479), (0, -0.35399356, 0.9352479), (0, -0.35399356, 0.9352479), (0, -0.35399356, 0.9352479), (0, -0.4506988, 0.8926761), (0, -0.4506988, 0.8926761), (0, -0.4506988, 0.8926761), (0, -0.4506988, 0.8926761), (0, -0.5423263, 0.840168), (0, -0.542325, 0.8401687), (0, -0.542325, 0.8401687), (0, -0.5423263, 0.840168), (0, -0.6071837, 0.79456156), (0, -0.6071831, 0.7945619), (0.9999633, 0.0010720355, -0.00850286), (0.99996334, 0.0009936774, -0.008503682), (0.99996245, 0.0015811916, -0.008514161), (0.9999621, 0.0017913008, -0.008522376), (0.9999621, 0.0017913008, -0.008522376), (0.99996245, 0.0015811916, -0.008514161), (0.9999625, 0.0020401953, -0.008411686), (0.9999594, 0.0028242036, -0.008560083), (0.9999594, 0.0028242036, -0.008560083), (0.9999625, 0.0020401953, -0.008411686), (0.9999586, 0.0031861218, -0.00852207), (0.9999558, 0.0039059022, -0.00854873), (0.9999558, 0.0039059022, -0.00854873), (0.9999586, 0.0031861218, -0.00852207), (0.99995375, 0.0044367854, -0.008529307), (0.99995255, 0.0047329594, -0.00851765), (0, 0.27555278, -0.96128595), (0, 0.27555278, -0.96128595), (0, 0.35084227, -0.9364346), (0, 0.35084227, -0.9364346), (0, 0.35084227, -0.9364346), (0, 0.35084227, -0.9364346), (0, 0.44777566, -0.89414597), (0, 0.44777566, -0.89414597), (0, 0.44777566, -0.89414597), (0, 0.44777566, -0.89414597), (0, 0.53972656, -0.8418404), (0, 0.53972656, -0.8418404), (0, 0.53972656, -0.8418404), (0, 0.53972656, -0.8418404), (0, 0.6047868, -0.7963874), (0, 0.6047868, -0.7963874), (-0.99996334, 0.0009930586, -0.008503682), (-0.9999633, 0.0010711345, -0.00850286), (-0.9999621, 0.001790711, -0.00852238), (-0.99996245, 0.0015802413, -0.008514163), (-0.99996245, 0.0015802413, -0.008514163), (-0.9999621, 0.001790711, -0.00852238), (-0.9999594, 0.002825297, -0.008560089), (-0.99996036, 0.0025002526, -0.008548662), (-0.99996036, 0.0025002526, -0.008548662), (-0.9999594, 0.002825297, -0.008560089), (-0.9999554, 0.0039596194, -0.0085748155), (-0.999957, 0.0035445257, -0.008574016), (-0.999957, 0.0035445257, -0.008574016), (-0.9999554, 0.0039596194, -0.0085748155), (-0.99995166, 0.0047998047, -0.008582468), (-0.999953, 0.0045104576, -0.008578297), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, -1, 1.2727361e-9), (0, -0.99973565, 0.02299418), (0.0000020628795, -0.99973565, 0.022994187), (0, -1, 1.2727361e-9), (-0.9995153, -0.00003139146, -0.031131556), (-0.999685, -4.3357133e-7, -0.025095366), (-0.99912965, -0.00000301504, -0.04171014), (-0.9995153, 5.9104786e-7, -0.031131627), (0, -0.2611707, -0.96529263), (-1.0832097e-8, -0.2611707, -0.96529263), (0.0001710339, -0.76136106, -0.64832807), (0, -0.7613611, -0.64832807), (0.999685, -3.5994046e-7, -0.025095362), (0.99951833, -4.0005398e-7, -0.031034267), (0.99951833, 0.000031390653, -0.031034209), (0.9991297, -3.2025855e-7, -0.041710135), (0, 1, -1.3575852e-8), (0, 1, -1.3575852e-8), (0, 1, -1.3575852e-8), (0, 1, -1.3575852e-8), (4.2313826e-7, -0.97637135, -0.21609937), (0, -0.97636145, -0.2161443), (1.8530576e-9, -0.8040966, -0.59449875), (0, -0.8040966, -0.59449875), (-0.99912965, -0.00000301504, -0.04171014), (-0.999685, -4.3357133e-7, -0.025095366), (-1, -1.9022204e-7, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0.999685, -3.5994046e-7, -0.025095362), (0.9991297, -3.2025855e-7, -0.041710135), (1, 0, 0), (1, 9.511102e-8, 0), (-1.0832097e-8, -0.2611707, -0.96529263), (0, -0.2611707, -0.96529263), (0, 0, -0.99999994), (0, 0, -0.99999994), (-1, -1.3815053e-7, 0), (-0.999685, -4.3357133e-7, -0.025095366), (-1, 0, 0), (-1, 0, 0), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0.999685, -3.5994046e-7, -0.025095362), (1, 6.907526e-8, 0), (1, 0, 0), (1, 0, 0), (-1, -1.9022204e-7, 0), (-0.999685, -4.3357133e-7, -0.025095366), (-1, -1.3815053e-7, 0), (-1, -3.1394165e-7, 0), (0, -0.8040966, -0.59449875), (1.8530576e-9, -0.8040966, -0.59449875), (0, -0.7613611, -0.64832807), (0.0001710339, -0.76136106, -0.64832807), (0.999685, -3.5994046e-7, -0.025095362), (1, 9.511102e-8, 0), (1, 1.5697083e-7, 0), (1, 6.907526e-8, 0), (0.0000020628795, -0.99973565, 0.022994187), (0, -0.99973565, 0.02299418), (0, -0.97636145, -0.2161443), (4.2313826e-7, -0.97637135, -0.21609937), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.000551, -0.08704, 0.058762), (-0.000551, -0.08704, 0.058762), (0.000551, -0.085601, 0.058762), (-0.000551, -0.085601, 0.058762), (0.000551, -0.08704, 0.058762), (-0.000551, -0.08704, 0.058762), (0.000551, -0.085601, 0.058762), (-0.000551, -0.085601, 0.058762), (0.000551, -0.08704, 0.058762), (-0.000551, -0.08704, 0.058762), (0.000551, -0.085601, 0.058762), (-0.000551, -0.085601, 0.058762), (0.000551, -0.08704, 0.058762), (-0.000551, -0.08704, 0.058762), (0.000551, -0.085601, 0.058762), (-0.000551, -0.085601, 0.058762), (0.000551, -0.08704, 0.058762), (-0.000551, -0.08704, 0.058762), (0.000551, -0.085601, 0.058762), (-0.000551, -0.085601, 0.058762), (0.237295, -0.026663, -0.354059), (0.206447, -0.026663, -0.044864), (-0.206447, -0.026663, -0.044864), (-0.237295, -0.026663, -0.354059), (0.237295, -0.062041, -0.354059), (0.206447, -0.062041, -0.044864), (-0.206447, -0.062041, -0.044864), (-0.237295, -0.062041, -0.354059), (0.237408, -0.026516, -0.367326), (-0.237407, -0.026516, -0.367326), (0.237408, -0.062188, -0.367326), (-0.237407, -0.062188, -0.367326), (0.237295, -0.006764, -0.353838), (-0.237295, -0.006764, -0.353838), (0.237295, -0.081939, -0.353838), (-0.237295, -0.081939, -0.353838), (0.237408, -0.006617, -0.367105), (-0.237407, -0.006617, -0.367105), (0.237408, -0.082087, -0.367105), (-0.237407, -0.082087, -0.367105), (0.237295, 0.16348, -0.385203), (-0.237295, 0.16348, -0.385203), (0.237408, 0.163627, -0.39847), (-0.237407, 0.163627, -0.39847), (0.237407, -0.150477, -0.389044), (-0.237407, -0.150477, -0.389044), (0.237522, -0.150628, -0.402605), (-0.237522, -0.150628, -0.402605), (0.237504, -0.137668, -0.399211), (0.237434, -0.095469, -0.377904), (-0.237433, -0.095469, -0.377904), (-0.237504, -0.137668, -0.399211), (-0.23732, -0.095275, -0.364534), (-0.237389, -0.13754, -0.385703), (0.23732, -0.095275, -0.364534), (0.237389, -0.13754, -0.385703), (0.237487, -0.126331, -0.395592), (-0.237487, -0.126331, -0.395592), (0.23747, -0.115439, -0.390796), (-0.23747, -0.115439, -0.390796), (0.237452, -0.105113, -0.384878), (-0.237452, -0.105113, -0.384878), (-0.237373, -0.126191, -0.382122), (-0.237355, -0.115283, -0.377363), (-0.237338, -0.104939, -0.371478), (0.237373, -0.126191, -0.382122), (0.237355, -0.115283, -0.377363), (0.237338, -0.104939, -0.371478), (0.206447, -0.045997, -0.00194), (-0.206447, -0.045997, -0.00194), (0.206447, -0.063554, 0.003109), (-0.206447, -0.063554, 0.003109), (0.206447, -0.095227, -0.044864), (-0.206447, -0.095227, -0.044864), (0.206447, -0.095227, 0.003109), (-0.206447, -0.095227, 0.003109), (0.206447, -0.034252, -0.010947), (-0.206447, -0.034252, -0.010947), (-0.206447, -0.028787, -0.027758), (0.206447, -0.028787, -0.027758)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-43.87829, -17.574139), (-43.876904, -17.574139), (-43.876904, -17.572329), (-43.87829, -17.572329), (-43.651344, 0.312072), (-44.59702, 0.31207), (-44.597015, 0.241022), (-43.651344, 0.241025), (-44.588116, 0.374747), (-43.660248, 0.374743), (-43.660473, 0.401231), (-44.58789, 0.401237), (-44.688404, 0.853098), (-44.7575, 0.853094), (-44.75779, 0.827186), (-44.688114, 0.827184), (-43.66037, 0.424291), (-44.587708, 0.424297), (-44.58749, 0.398382), (-43.66059, 0.398385), (-44.489765, 0.786433), (-44.55886, 0.786436), (-44.55915, 0.760528), (-44.48948, 0.760528), (-44.590847, 0.476732), (-43.65695, 0.476731), (-43.65695, 0.51589), (-44.59084, 0.515887), (-44.688404, 0.853098), (-44.688114, 0.827184), (-44.64925, 0.827615), (-44.649536, 0.853532), (-43.651344, 0.241025), (-44.597015, 0.241022), (-44.597023, 0.201391), (-43.65134, 0.201391), (-44.55915, 0.760528), (-44.55886, 0.786436), (-44.597717, 0.786867), (-44.59801, 0.760962), (-44.59702, 0.31207), (-43.651344, 0.312072), (-43.651344, 0.351705), (-44.597015, 0.351702), (-44.75779, 0.827186), (-44.7575, 0.853094), (-44.796368, 0.853534), (-44.79666, 0.827617), (-43.636257, 0.573055), (-44.611816, 0.573056), (-44.611813, 0.532156), (-43.636257, 0.532152), (-44.489765, 0.786433), (-44.48948, 0.760528), (-44.450615, 0.760958), (-44.45091, 0.786871), (-43.65134, 0.201391), (-44.597023, 0.201391), (-44.597015, -0.137682), (-43.651344, -0.137679), (-44.59801, 0.760962), (-44.597717, 0.786867), (-44.930206, 0.72561), (-44.930496, 0.699702), (-44.59084, 0.515887), (-43.65695, 0.51589), (-43.656948, 0.850894), (-44.590847, 0.850893), (-44.649536, 0.853532), (-44.64925, 0.827615), (-44.316715, 0.766352), (-44.317005, 0.792266), (-44.45091, 0.786871), (-44.450615, 0.760958), (-44.42448, 0.739867), (-44.42486, 0.765979), (-44.34232, 0.724634), (-44.34207, 0.698259), (-44.31676, 0.691625), (-44.31705, 0.718114), (-43.636257, 0.532152), (-44.611813, 0.532156), (-44.611862, 0.504745), (-43.636208, 0.504745), (-43.63607, 0.417864), (-44.612003, 0.417864), (-44.61204, 0.391273), (-43.63603, 0.391269), (-44.79666, 0.827617), (-44.796368, 0.853534), (-44.822422, 0.83264), (-44.8228, 0.806525), (-44.905228, 0.764905), (-44.90497, 0.791286), (-44.93024, 0.784762), (-44.930534, 0.75827), (-44.597015, 0.351702), (-43.651344, 0.351705), (-43.651295, 0.378358), (-44.597073, 0.378358), (-44.59721, 0.462402), (-43.651154, 0.462404), (-43.65112, 0.488215), (-44.597244, 0.488212), (-43.651154, 0.462404), (-44.59721, 0.462402), (-44.597176, 0.439822), (-43.651184, 0.439826), (-43.651184, 0.439826), (-44.597176, 0.439822), (-44.597145, 0.418131), (-43.651222, 0.418131), (-43.651222, 0.418131), (-44.597145, 0.418131), (-44.597103, 0.397563), (-43.651253, 0.397566), (-43.651253, 0.397566), (-44.597103, 0.397563), (-44.597073, 0.378358), (-43.651295, 0.378358), (-44.90497, 0.791286), (-44.905228, 0.764905), (-44.883076, 0.771967), (-44.8828, 0.798278), (-44.8828, 0.798278), (-44.883076, 0.771967), (-44.8618, 0.781341), (-44.861496, 0.807573), (-44.861496, 0.807573), (-44.8618, 0.781341), (-44.841633, 0.7929), (-44.841293, 0.819068), (-44.841293, 0.819068), (-44.841633, 0.7929), (-44.8228, 0.806525), (-44.822422, 0.83264), (-44.612003, 0.417864), (-43.63607, 0.417864), (-43.636105, 0.441194), (-44.611973, 0.44119), (-44.611973, 0.44119), (-43.636105, 0.441194), (-43.63614, 0.463615), (-44.61194, 0.463614), (-44.61194, 0.463614), (-43.63614, 0.463615), (-43.636173, 0.484872), (-44.6119, 0.484878), (-44.6119, 0.484878), (-43.636173, 0.484872), (-43.636208, 0.504745), (-44.611862, 0.504745), (-44.34207, 0.698259), (-44.34232, 0.724634), (-44.364487, 0.731635), (-44.36421, 0.705329), (-44.36421, 0.705329), (-44.364487, 0.731635), (-44.385788, 0.740923), (-44.385487, 0.714694), (-44.385487, 0.714694), (-44.385788, 0.740923), (-44.40599, 0.752419), (-44.40565, 0.726248), (-44.40565, 0.726248), (-44.40599, 0.752419), (-44.42486, 0.765979), (-44.42448, 0.739867), (-30.840147, -17.604818), (-30.83883, -17.604818), (-30.83883, -17.603102), (-30.840147, -17.603102), (-31.013115, 0.749174), (-31.617832, 0.688841), (-31.617832, -0.118682), (-31.013115, -0.179014), (-30.702477, 0.36189), (-30.702477, 0.96695), (-30.771706, 0.96695), (-30.771706, 0.36189), (-30.724056, 0.663767), (-30.724056, -0.167211), (-30.688719, -0.167211), (-30.688719, 0.663767), (-30.79432, 1.040559), (-30.79432, 0.435485), (-30.725088, 0.435485), (-30.725088, 1.040559), (-31.25536, 0.748548), (-31.25536, -0.178388), (-30.651463, -0.118137), (-30.651463, 0.688296), (-31.651285, -0.118682), (-31.651285, 0.688842), (-31.684166, 0.688842), (-31.684166, -0.118682), (-30.771706, 0.96695), (-30.702477, 0.96695), (-30.756857, 1.03332), (-30.767551, 1.000424), (-30.70238, 0.651497), (-30.70238, -0.15494), (-30.608683, -0.15494), (-30.608683, 0.651497), (-30.79432, 1.040559), (-30.725088, 1.040559), (-30.729244, 1.074034), (-30.739937, 1.106932), (-30.724056, -0.167211), (-30.724056, 0.663767), (-30.7878, 0.663767), (-30.7878, -0.167211), (-30.699518, 1.060826), (-30.702477, 0.96695), (-30.637539, 0.96695), (-30.637539, 1.060826), (-30.67058, 1.147837), (-30.67058, 0.341357), (-30.60576, 0.341357), (-30.60576, 1.147837), (-30.79432, 1.040559), (-30.797281, 1.134438), (-30.859262, 1.134438), (-30.859262, 1.040559), (-30.756857, 1.03332), (-30.702477, 0.96695), (-30.699518, 1.060826), (-30.733873, 1.050947), (-30.665081, -0.167211), (-30.665081, 0.663768), (-30.688719, 0.663767), (-30.688719, -0.167211), (-30.79432, 1.040559), (-30.739937, 1.106932), (-30.76292, 1.124558), (-30.797281, 1.134438), (-31.617832, -0.118682), (-31.617832, 0.688841), (-31.651285, 0.688842), (-31.651285, -0.118682), (-19.286005, -17.756765), (-19.285044, -17.756765), (-19.285044, -17.75551), (-19.286005, -17.75551), (-7.885071, -17.756765), (-7.88411, -17.756765), (-7.88411, -17.75551), (-7.885071, -17.75551), (-7.892169, -17.756765), (-7.891207, -17.756765), (-7.891207, -17.75551), (-7.892169, -17.75551)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_TelevisionStand_23_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41]
                rel material:binding = </root/_materials/M_TelevisionStand_23_0>
            }

            def GeomSubset "M_TelevisionStand_23_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59]
                rel material:binding = </root/_materials/M_TelevisionStand_23_1>
            }

            def GeomSubset "M_TelevisionStand_23_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [60]
                rel material:binding = </root/_materials/M_TelevisionStand_23_2>
            }

            def GeomSubset "M_TelevisionStand_23_3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [61]
                rel material:binding = </root/_materials/M_TelevisionStand_23_3>
            }

            def GeomSubset "M_TelevisionStand_23_4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [62]
                rel material:binding = </root/_materials/M_TelevisionStand_23_4>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_TelevisionStand_23_0"
        {
            token outputs:surface.connect = </root/_materials/M_TelevisionStand_23_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.19852942, 0.19852942, 0.19852942)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_TelevisionStand_23_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_TelevisionStand_23_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_TelevisionStand_23_1"
        {
            token outputs:surface.connect = </root/_materials/M_TelevisionStand_23_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_TelevisionStand_23_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_TelevisionStand_23_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_TelevisionStand_23_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_TelevisionStand_23_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_TelevisionStand_23_2"
        {
            token outputs:surface.connect = </root/_materials/M_TelevisionStand_23_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0, 0, 0)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }

        def Material "M_TelevisionStand_23_3"
        {
            token outputs:surface.connect = </root/_materials/M_TelevisionStand_23_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.5661765, 0.5661765, 0.5661765)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }

        def Material "M_TelevisionStand_23_4"
        {
            token outputs:surface.connect = </root/_materials/M_TelevisionStand_23_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.8, 0.8, 0.8)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 1
                float inputs:specular = 0
                token outputs:surface
            }
        }
    }
}

