#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.0"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "CountertopL_8X10"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "CountertopL_8X10" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-1.219356, -1.526068, -0.517404), (1.219046, 1.521937, 0.418626)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [5, 13, 17, 4, 8, 15, 14, 9, 1, 5, 4, 0, 0, 4, 17, 16, 2, 6, 7, 3, 0, 8, 9, 1, 3, 10, 11, 2, 15, 8, 0, 16, 7, 13, 12, 3, 3, 12, 14, 10, 15, 11, 10, 14, 2, 11, 15, 16, 17, 6, 2, 16, 13, 7, 6, 17, 13, 19, 18, 12, 12, 18, 20, 14, 20, 28, 9, 14, 5, 22, 19, 13, 22, 24, 23, 21, 25, 24, 22, 5, 1, 26, 25, 5, 9, 27, 26, 1, 28, 29, 27, 9, 21, 23, 29, 28, 19, 22, 21, 18, 18, 21, 28, 20, 24, 25, 26, 23, 23, 26, 27, 29]
            rel material:binding = </root/_materials/M_CountertopL_8X10_0>
            normal3f[] normals = [(0.0000023624652, -1, 0.000017562645), (5.113208e-8, -1, 0.000011127663), (8.593e-7, -1, 0.000018533912), (0.0000017186, -1, 0.000037067824), (1, 0, 0), (1, 0, 0), (1, 0.0000012627986, -7.910818e-7), (1, 1.0553307e-7, -5.4464067e-7), (-1, 0, 0), (-1, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (0, 0, 1), (0, 0, 0.99999994), (3.3276535e-7, 0, 1), (8.320677e-8, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (8.320677e-8, 0, 1), (-2.7577846e-7, 0, -1), (-2.7577846e-7, 0, -1), (-1.4254553e-7, 0, -1), (-1.3632e-7, 0, -1), (-1.3632e-7, 0, -1), (-1.4254553e-7, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0.0000012627986, -7.910818e-7), (3.3275103e-7, 0, 1), (0, 0, 1), (0, 0, 1), (8.320677e-8, 0, 1), (3.3276535e-7, 0, 1), (6.6553065e-7, 0, 1), (3.3275103e-7, 0, 1), (8.320677e-8, 0, 1), (5.113208e-8, -1, 0.000011127663), (0, -1, 0), (0, -1, 0), (8.593e-7, -1, 0.000018533912), (0.9999999, -0.00021241928, 0.00063195935), (0.9999999, -0.00021241928, 0.00063195935), (0.9999999, -0.00021241928, 0.00063195935), (0.9999999, -0.00021241928, 0.00063195935), (0.0005632227, -0.9999998, 3.1232426e-7), (0.0005632227, -0.9999998, 3.1232426e-7), (0.0005632227, -0.9999998, 3.1232426e-7), (0.0005632227, -0.9999998, 3.1232426e-7), (1, 0.0000037883958, -0.0000023732453), (1, -0.0000012168719, -5.767562e-7), (1, 1.0553307e-7, -5.4464067e-7), (1, 0.0000012627986, -7.910818e-7), (0.0000023624652, -1, 0.000017562645), (0.000004831087, -1, -0.0000012465488), (-0.0000015652038, -1, -0.000003684836), (5.113208e-8, -1, 0.000011127663), (0.9999788, -0.00020870735, -0.006513773), (0.9999788, -0.00020870735, -0.006513773), (0.9999788, -0.00020870735, -0.006513773), (0.9999788, -0.00020870735, -0.006513773), (0.000010328308, -0.99999994, 8.4901046e-7), (0.000010328308, -0.99999994, 8.4901046e-7), (0.000004831087, -1, -0.0000012465488), (0.0000023624652, -1, 0.000017562645), (-1, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, -0.0000012168719, -5.767562e-7), (1, -0.0000055185105, 9.671865e-7), (1, -0.0000055185105, 9.671865e-7), (1, 1.0553307e-7, -5.4464067e-7), (0.0002751827, -0.9999787, -0.0065137343), (0.0002751827, -0.9999787, -0.0065137343), (0.0002751827, -0.9999787, -0.0065137343), (0.0002751827, -0.9999787, -0.0065137343), (-0.009785051, 0.000030472107, -0.99995214), (-0.009785051, 0.000030472107, -0.99995214), (-0.0054534054, 0.0043466976, -0.9999757), (-0.0053867283, 0.004414145, -0.9999758), (-0.0053867283, 0.004414145, -0.9999758), (-0.0054534054, 0.0043466976, -0.9999757), (-0.00004071544, 0.009753612, -0.99995244), (-0.00004071544, 0.009753612, -0.99995244), (0.00035592628, 0.000023523191, -1), (0.00035592628, 0.000023523191, -1), (0.00016276602, -0.00016745806, -1), (0.00016276682, -0.00016745724, -0.9999999), (0.00016276682, -0.00016745724, -0.9999999), (0.00016276602, -0.00016745806, -1), (-0.000030392936, -0.00035843794, -0.9999999), (-0.000030392936, -0.00035843794, -0.9999999)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-1.219356, 1.521937, 0.418626), (-1.219356, 1.521937, 0.388626), (-0.609756, 0.912336, 0.418626), (-0.609756, 0.912336, 0.388626), (-1.219356, -1.526065, 0.418626), (-1.219356, -1.526067, 0.388626), (-0.609756, -1.526065, 0.418626), (-0.609756, -1.526065, 0.388626), (1.219045, 1.521937, 0.418626), (1.219045, 1.521937, 0.388626), (1.219045, 0.912336, 0.388626), (1.219045, 0.912336, 0.418626), (-0.62976, 0.931295, 0.388626), (-0.62976, -1.526065, 0.388626), (1.219045, 0.932336, 0.388626), (1.219045, 0.932336, 0.418626), (-0.62976, 0.932336, 0.418626), (-0.62976, -1.526065, 0.418626), (-0.628716, 0.931295, -0.437404), (-0.62976, -1.526065, -0.437404), (1.219045, 0.932336, -0.437404), (-0.648721, 0.951299, -0.437143), (-0.64976, -1.526062, -0.437273), (-0.649763, 0.952341, -0.517143), (-0.64976, -1.526062, -0.517273), (-1.219356, -1.526068, -0.517404), (-1.219356, 1.521937, -0.517404), (1.219046, 1.521937, -0.517404), (1.219043, 0.952335, -0.437274), (1.219043, 0.952335, -0.517274)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-9.041379, 1.080384), (-9.041379, 0.159143), (-8.994504, 0.159143), (-8.994504, 1.080384), (-9.007182, 0.127874), (-9.007182, 1.049152), (-9.054056, 1.049153), (-9.054056, 0.127874), (-10.018173, 2.715506), (-10.018173, -2.047015), (-9.971299, -2.047015), (-9.971299, 2.715507), (-11.623269, 2.715496), (-11.623269, -2.047008), (-10.702026, -2.047008), (-10.702026, 1.794247), (-9.006373, -1.637277), (-9.006373, 2.172818), (-9.053246, 2.172818), (-9.053247, -1.637276), (-9.039604, 2.17283), (-9.039605, -1.637288), (-8.992731, -1.63729), (-8.992731, 2.17283), (-9.028702, 2.165803), (-9.028702, -0.691629), (-8.981826, -0.691629), (-8.981826, 2.165803), (-7.813268, 1.794246), (-7.813268, 2.715497), (-11.623269, 2.715496), (-10.702026, 1.794247), (-10.655858, 2.19062), (-10.687114, 2.19062), (-10.687114, -1.649087), (-10.655858, -1.619469), (-10.655858, -1.619469), (-10.687114, -1.649087), (-7.798295, -1.650718), (-7.798295, -1.61947), (-9.007182, 1.049152), (-9.007182, 1.080402), (-9.054056, 1.080402), (-9.054056, 1.049153), (-10.670772, 1.762999), (-7.813268, 1.762998), (-7.813268, 1.794246), (-10.702026, 1.794247), (-10.702026, -2.047008), (-10.670772, -2.047007), (-10.670772, 1.762999), (-10.702026, 1.794247), (-9.041379, 0.159143), (-9.041379, 0.127888), (-8.994504, 0.127888), (-8.994504, 0.159143), (-20.641088, 1.209417), (-20.641088, 0.564083), (-18.721273, 0.564083), (-18.721273, 1.209417), (-20.451506, 0.86224), (-20.450691, 0.216906), (-19.007126, 0.216906), (-19.007126, 0.86224), (-19.352379, 0.174713), (-19.35248, 0.190338), (-19.997715, 0.635338), (-19.997715, 0.174713), (-19.997715, 0.061615), (-19.352482, 0.506607), (-19.352379, 0.522236), (-19.997715, 0.522236), (-20.1976, 0.626043), (-20.1976, 0.563541), (-18.261333, 0.563643), (-18.262148, 0.626144), (-19.289879, 0.061615), (-19.289982, 0.506607), (-19.352482, 0.506607), (-19.997715, 0.061615), (-20.47176, 0.401768), (-20.47176, -0.30607), (-18.090508, -0.30607), (-18.09051, 0.401768), (-18.726967, 0.369579), (-18.726963, 1.077417), (-20.631962, 1.077417), (-20.631962, 0.369579), (-19.35248, 0.190338), (-19.28998, 0.190338), (-19.289879, 0.635338), (-19.997715, 0.635338), (-20.356997, 0.659208), (-20.35781, 0.59671), (-18.897778, 0.596605), (-18.897778, 0.659103), (-20.19757, 0.064171), (-20.197569, 0.048546), (-18.26217, 0.049358), (-18.2778, 0.064985), (-18.2778, 0.064985), (-18.26217, 0.049358), (-18.26136, 1.508518), (-18.276985, 1.508518), (-20.471758, -0.148953), (-20.471762, -0.593948), (-18.090508, -0.593948), (-18.535503, -0.148954), (-18.535503, -0.148954), (-18.090508, -0.593948), (-18.090508, 1.311054), (-18.535507, 1.311052)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_CountertopL_8X10_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                rel material:binding = </root/_materials/M_CountertopL_8X10_0>
            }

            def GeomSubset "M_CountertopL_8X10_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27]
                rel material:binding = </root/_materials/M_CountertopL_8X10_1>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_CountertopL_8X10_0"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopL_8X10_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopL_8X10_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/marbleBase2.jpg@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopL_8X10_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_CountertopL_8X10_1"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopL_8X10_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopL_8X10_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_CountertopL_8X10_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/DarkWood2.tif@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopL_8X10_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopL_8X10_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

