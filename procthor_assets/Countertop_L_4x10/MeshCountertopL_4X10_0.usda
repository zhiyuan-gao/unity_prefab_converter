#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.0"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "CountertopL_4X10"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "CountertopL_4X10" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.61095, -1.525621, -0.517404), (0.60825, 1.522383, 0.418626)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [5, 13, 17, 4, 8, 15, 14, 9, 1, 5, 4, 0, 0, 4, 17, 16, 2, 6, 7, 3, 0, 8, 9, 1, 3, 10, 11, 2, 15, 8, 0, 16, 7, 13, 12, 3, 3, 12, 14, 10, 15, 11, 10, 14, 2, 11, 15, 16, 17, 6, 2, 16, 13, 7, 6, 17, 13, 19, 18, 12, 12, 18, 20, 14, 20, 28, 9, 14, 5, 22, 19, 13, 22, 24, 23, 21, 25, 24, 22, 5, 1, 26, 25, 5, 9, 27, 26, 1, 28, 29, 27, 9, 21, 23, 29, 28, 19, 22, 21, 18, 18, 21, 28, 20, 24, 25, 26, 23, 23, 26, 27, 29]
            rel material:binding = </root/_materials/M_CountertopL_4X10_0>
            normal3f[] normals = [(0.0000025792592, -1, 0.000017917771), (6.3788656e-7, -1, 0.000011468046), (8.5930117e-7, -1, 0.000018533938), (0.0000017186023, -1, 0.000037067875), (1, 0, 0), (1, 0, 0), (1, 0.0000021309695, -0.0000015588934), (1, 9.0724535e-7, -0.0000016370585), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-7.343713e-8, 0, 1), (-1.468752e-7, 0, 1), (9.438755e-7, 0, 1), (1.9930616e-7, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, -5.3958832e-8), (0, 1, -5.3958853e-8), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (-7.343713e-8, 0, 1), (1.9930616e-7, 0, 1), (-5.8947114e-7, 0, -1), (-5.8947114e-7, 0, -1), (-2.9478275e-7, 0, -1), (-2.9471983e-7, 0, -1), (-2.9471983e-7, 0, -1), (-2.9478275e-7, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0.0000021309695, -0.0000015588934), (0.0000010172588, 0, 1), (0, 0, 1), (0, 0, 1), (1.9930616e-7, 0, 1), (9.438755e-7, 0, 1), (0.0000020346263, 0, 1), (0.0000010172588, 0, 1), (1.9930616e-7, 0, 1), (6.3788656e-7, -1, 0.000011468046), (0, -1, 0), (0, -1, 0), (8.5930117e-7, -1, 0.000018533938), (0.9999999, -0.00021217442, 0.0006314662), (0.9999999, -0.00021217442, 0.0006314662), (0.9999999, -0.00021217442, 0.0006314662), (0.9999999, -0.00021217442, 0.0006314662), (0.0008273897, -0.9999994, 0.00063063845), (0.0008273897, -0.9999994, 0.00063063845), (0.0008273897, -0.9999994, 0.00063063845), (0.0008273897, -0.9999994, 0.00063063845), (1, 0.0000063929087, -0.00000467668), (1, -1.3077156e-8, -0.0000027142182), (1, 9.0724535e-7, -0.0000016370585), (1, 0.0000021309695, -0.0000015588934), (0.0000025792592, -1, 0.000017917771), (0.000004735126, -1, -6.6044083e-7), (1.9505725e-7, -1, -0.0000026637365), (6.3788656e-7, -1, 0.000011468046), (0.9999788, -0.00020910669, -0.006513731), (0.9999788, -0.00020910669, -0.006513731), (0.9999788, -0.00020910669, -0.006513731), (0.9999788, -0.00020910669, -0.006513731), (0.000008637032, -1, 0.0000010612669), (0.000008637032, -1, 0.0000010612669), (0.000004735126, -1, -6.6044083e-7), (0.0000025792592, -1, 0.000017917771), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, -5.3958832e-8), (0, 1, -1.0791771e-7), (0, 1, -1.0791771e-7), (0, 1, -5.3958853e-8), (1, -1.3077156e-8, -0.0000027142182), (1, -0.0000055185196, -0.0000010276358), (1, -0.0000055185196, -0.0000010276358), (1, 9.0724535e-7, -0.0000016370585), (0.000792849, -0.9999784, -0.0065243), (0.000792849, -0.9999784, -0.0065243), (0.000792849, -0.9999784, -0.0065243), (0.000792849, -0.9999784, -0.0065243), (-0.009782103, 0.00003047196, -0.9999522), (-0.009782103, 0.00003047196, -0.9999522), (-0.007802573, 0.002096887, -0.9999673), (-0.007794968, 0.0020053394, -0.99996763), (-0.007794968, 0.0020053394, -0.99996763), (-0.007802573, 0.002096887, -0.9999673), (-0.00011845991, 0.009714535, -0.9999528), (-0.00011845991, 0.009714535, -0.9999528), (0.00035594607, 0.000023523131, -0.99999994), (0.00035594607, 0.000023523131, -0.99999994), (0.00014294745, -0.00017738038, -0.99999994), (0.00014294806, -0.00017737984, -1), (0.00014294806, -0.00017737984, -1), (0.00014294745, -0.00017738038, -0.99999994), (-0.000070049704, -0.00037828254, -1), (-0.000070049704, -0.00037828254, -1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.61095, 1.522383, 0.418626), (-0.61095, 1.522383, 0.388626), (-0.001351, 0.912783, 0.418626), (-0.001351, 0.912783, 0.388626), (-0.61095, -1.525618, 0.418626), (-0.61095, -1.52562, 0.388626), (-0.001351, -1.525618, 0.418626), (-0.001351, -1.525618, 0.388626), (0.60825, 1.522383, 0.418626), (0.60825, 1.522383, 0.388626), (0.60825, 0.912783, 0.388626), (0.60825, 0.912783, 0.418626), (-0.021355, 0.932782, 0.388626), (-0.021355, -1.525618, 0.388626), (0.60825, 0.932782, 0.388626), (0.60825, 0.932782, 0.418626), (-0.021355, 0.932782, 0.418626), (-0.021355, -1.525618, 0.418626), (-0.020312, 0.931741, -0.437404), (-0.021355, -1.525618, -0.437404), (0.60825, 0.932782, -0.437404), (-0.040316, 0.951745, -0.437143), (-0.041356, -1.525616, -0.437273), (-0.041358, 0.952788, -0.517143), (-0.041356, -1.525616, -0.517273), (-0.61095, -1.525621, -0.517404), (-0.61095, 1.522383, -0.517404), (0.608249, 1.522383, -0.517404), (0.608246, 0.952782, -0.437274), (0.608246, 0.952782, -0.517274)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-9.349935, 0.577846), (-9.349935, -0.343404), (-9.30306, -0.343404), (-9.30306, 0.577846), (-9.286613, -0.374671), (-9.286613, 0.546609), (-9.333488, 0.546609), (-9.333488, -0.374671), (-10.017116, 2.88126), (-10.017116, -1.881259), (-9.970242, -1.881261), (-9.970242, 2.881261), (-10.735249, 2.881253), (-10.735249, -1.881251), (-9.814005, -1.881251), (-9.814005, 1.960001), (-9.335954, -1.504653), (-9.335954, 2.305452), (-9.382828, 2.305452), (-9.382828, -1.504653), (-9.366381, 1.153722), (-9.366381, -0.751331), (-9.319507, -0.751331), (-9.319507, 1.153722), (-9.317041, 0.577847), (-9.317041, -0.374658), (-9.270166, -0.374658), (-9.270166, 0.577847), (-8.830246, 1.960001), (-8.830246, 2.881252), (-10.735249, 2.881253), (-9.814005, 1.960001), (-9.934029, 2.324313), (-9.965284, 2.324313), (-9.965284, -1.516979), (-9.934029, -1.48573), (-9.934029, -1.48573), (-9.965284, -1.516979), (-8.981515, -1.51698), (-8.981515, -1.485732), (-9.286613, 0.546609), (-9.286613, 0.577858), (-9.333488, 0.577858), (-9.333488, 0.546609), (-9.78275, 1.928753), (-8.830246, 1.928753), (-8.830246, 1.960001), (-9.814005, 1.960001), (-9.814005, -1.881251), (-9.78275, -1.881251), (-9.78275, 1.928753), (-9.814005, 1.960001), (-9.349935, -0.343404), (-9.349935, -0.374658), (-9.30306, -0.374658), (-9.30306, -0.343404), (-20.254566, 1.085484), (-20.254566, 0.440147), (-18.334759, 0.440147), (-18.333942, 1.085484), (-20.14661, 0.132017), (-19.501274, 0.132832), (-19.501274, 0.623896), (-20.14661, 0.623896), (-19.407778, 0.442381), (-19.407879, 0.458004), (-20.053116, 0.903006), (-20.053116, 0.442381), (-20.187283, 0.297367), (-19.542048, 0.742365), (-19.541946, 0.757992), (-20.187283, 0.757992), (-20.264744, 0.521019), (-20.264744, 0.458517), (-18.328478, 0.458618), (-18.329292, 0.521118), (-19.479446, 0.297367), (-19.479548, 0.742365), (-19.542048, 0.742365), (-20.187283, 0.297367), (-20.55432, 0.426287), (-20.55432, -0.28155), (-18.173069, -0.281549), (-18.173069, 0.426287), (-19.25512, 0.501055), (-19.255123, 1.208891), (-20.20762, 1.208891), (-20.20762, 0.501055), (-19.407879, 0.458004), (-19.345379, 0.458004), (-19.345278, 0.903006), (-20.053116, 0.903006), (-20.056107, 0.319534), (-20.056921, 0.257034), (-19.549406, 0.256933), (-19.549406, 0.319433), (-20.264761, 0.344091), (-20.26476, 0.328465), (-18.32927, 0.329277), (-18.344898, 0.344906), (-18.344898, 0.344906), (-18.32927, 0.329277), (-18.328459, 0.83598), (-18.344084, 0.835983), (-20.554316, 0.298424), (-20.554321, -0.146572), (-18.173067, -0.146572), (-18.618061, 0.298422), (-18.618061, 0.298422), (-18.173067, -0.146572), (-18.173067, 0.805927), (-18.618067, 0.805927)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_CountertopL_4X10_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                rel material:binding = </root/_materials/M_CountertopL_4X10_0>
            }

            def GeomSubset "M_CountertopL_4X10_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27]
                rel material:binding = </root/_materials/M_CountertopL_4X10_1>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_CountertopL_4X10_0"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopL_4X10_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopL_4X10_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/marbleBase2.jpg@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopL_4X10_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_CountertopL_4X10_1"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopL_4X10_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopL_4X10_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_CountertopL_4X10_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/DarkWood2.tif@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopL_4X10_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopL_4X10_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

