#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "DrawermeshRobothorSideTableDrawer_2_Hopen_2_GeomSubset_1"
    {
        def Mesh "DrawermeshRobothorSideTableDrawer_2_Hopen_2_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [100, 101, 102, 103, 92, 93, 94, 95, 95, 89, 88, 92, 92, 88, 91, 93, 93, 91, 90, 94, 94, 90, 89, 95, 88, 89, 97, 96, 89, 90, 98, 97, 90, 91, 99, 98, 91, 88, 96, 99, 96, 97, 101, 100, 97, 98, 102, 101, 98, 99, 103, 102, 99, 96, 100, 103]
            rel material:binding = </root/_materials/M_RobothorSideTableDrawer_2_Hopen_1>
            normal3f[] normals = [(0.0022431233, 0.9999975, 0), (0.0022431233, 0.9999975, 0), (0.0022431233, 0.9999975, 0), (0.0022431233, 0.9999975, 0), (-0.0022436937, -0.99999744, 0), (-0.0022436937, -0.99999744, 0), (-0.0022436937, -0.99999744, 0), (-0.0022436937, -0.99999744, 0), (-0.9999993, 0.0012987237, 0), (-0.9999993, 0.0012987237, 0), (-0.9999993, 0.0012987237, 0), (-0.9999993, 0.0012987237, 0), (-7.795224e-9, 0, -1), (-7.795224e-9, 0, -1), (-7.795224e-9, 0, -1), (-7.795224e-9, 0, -1), (0.999999, -0.0014208115, 0), (0.999999, -0.0014208115, 0), (0.999999, -0.0014208115, 0), (0.999999, -0.0014208115, 0), (-3.1180928e-8, 0, 1), (-3.1180928e-8, 0, 1), (-3.1180928e-8, 0, 1), (-3.1180928e-8, 0, 1), (0.0022306072, 0.9999975, -5.3591776e-7), (0.0022306074, 0.99999756, 5.359079e-7), (0.0022331222, 0.9999975, 7.0736843e-7), (0.0022331227, 0.9999975, -7.07432e-7), (0.0022306074, 0.99999756, 5.359079e-7), (0.0022301157, 0.9999975, 5.35908e-7), (0.002232737, 0.9999975, 7.073684e-7), (0.0022331222, 0.9999975, 7.0736843e-7), (0.0022301157, 0.9999975, 5.35908e-7), (0.0022301157, 0.9999975, -5.3591805e-7), (0.0022327371, 0.9999975, -7.0743187e-7), (0.002232737, 0.9999975, 7.073684e-7), (0.0022301157, 0.9999975, -5.3591805e-7), (0.0022306072, 0.9999975, -5.3591776e-7), (0.0022331227, 0.9999975, -7.07432e-7), (0.0022327371, 0.9999975, -7.0743187e-7), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (-1.16258825e-8, 0, -1), (-1.16258825e-8, 0, -1), (-1.16258825e-8, 0, -1), (-1.16258825e-8, 0, -1), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.469899, 0.200234, -0.209326), (0.027772, 0.201226, -0.209326), (0.027772, 0.201226, -0.216285), (0.469899, 0.200234, -0.216285), (0.469328, -0.212652, -0.216285), (0.0272, -0.21166, -0.216285), (0.0272, -0.21166, -0.209326), (0.469328, -0.212652, -0.209326), (0.469343, -0.201576, -0.216285), (0.027757, 0.190266, -0.216285), (0.027216, -0.200585, -0.216285), (0.0188, -0.200566, -0.216285), (-0.001749, -0.20052, -0.216285), (-0.001749, -0.20052, -0.209326), (-0.001764, -0.211596, -0.209326), (-0.001764, -0.211596, -0.216285), (0.027215, -0.200585, -0.032533), (0.469343, -0.201576, -0.032533), (0.469328, -0.212652, -0.032533), (0.0272, -0.21166, -0.032533), (0.498307, -0.201641, -0.032533), (0.498307, -0.201641, -0.044229), (0.498292, -0.212717, -0.044232), (0.498292, -0.212717, -0.032533), (0.027215, -0.200585, -0.044229), (0.469343, -0.201576, -0.044229), (0.469328, -0.212652, -0.044232), (0.0272, -0.21166, -0.044232), (-0.001749, -0.20052, -0.044229), (-0.001764, -0.211596, -0.044232), (0.498307, -0.201641, -0.209326), (0.498307, -0.201641, -0.216285), (0.498292, -0.212717, -0.216285), (0.498292, -0.212717, -0.209326), (0.027772, 0.201226, -0.044151), (0.019356, 0.201245, -0.209326), (0.019356, 0.201245, -0.216285), (0.478315, 0.200216, -0.216285), (0.478315, 0.200216, -0.209326), (0.018785, -0.211642, -0.216285), (0.018785, -0.211642, -0.209326), (0.477744, -0.212671, -0.209326), (0.477744, -0.212671, -0.216285), (0.477759, -0.201596, -0.216285), (0.477759, -0.201596, -0.032533), (0.477744, -0.212671, -0.032533), (0.018784, -0.211642, -0.032533), (0.0188, -0.200566, -0.032533), (0.478315, 0.200216, -0.044151), (0.469899, 0.200234, -0.044151), (0.477744, -0.212671, -0.044232), (0.018784, -0.211642, -0.044232), (0.477759, -0.201596, -0.209326), (0.4783, 0.189256, -0.209326), (0.4783, 0.189256, -0.216285), (0.477759, -0.201596, -0.044229), (0.4783, 0.189256, -0.04419), (0.469343, -0.201576, -0.209326), (0.027216, -0.200585, -0.209326), (0.469884, 0.189275, -0.209326), (0.027757, 0.190266, -0.209326), (0.027757, 0.190266, -0.04419), (0.0188, -0.200566, -0.209326), (0.019341, 0.190285, -0.216285), (0.019341, 0.190285, -0.209326), (0.469884, 0.189275, -0.216285), (-0.001749, -0.20052, -0.032533), (-0.001764, -0.211596, -0.032533), (0.019356, 0.201245, -0.044151), (0.469884, 0.189275, -0.04419), (0.0188, -0.200566, -0.044229), (0.019341, 0.190285, -0.04419), (0.287191, 0.189686, -0.04419), (0.287206, 0.200645, -0.209326), (0.287206, 0.200645, -0.044151), (0.287191, 0.189686, -0.209326), (0.290101, -0.21227, -0.044368), (0.290101, -0.21227, -0.049841), (0.290088, -0.222275, -0.049841), (0.290075, -0.231252, -0.044368), (0.290088, -0.222275, -0.071734), (0.290075, -0.231252, -0.071734), (0.206614, -0.212083, -0.044368), (0.206587, -0.231065, -0.044368), (0.206587, -0.231065, -0.071734), (0.2066, -0.222088, -0.071734), (0.2066, -0.222088, -0.049841), (0.206614, -0.212083, -0.049841), (0.46933, -0.211289, -0.044232), (0.46933, -0.211289, -0.209326), (0.027202, -0.210298, -0.209326), (0.027202, -0.210298, -0.044232), (0.469341, -0.202845, -0.044232), (0.027214, -0.201853, -0.044232), (0.027214, -0.201853, -0.209326), (0.469341, -0.202845, -0.209326), (0.45133, -0.211249, -0.057449), (0.45133, -0.211249, -0.196108), (0.045202, -0.210338, -0.196108), (0.045202, -0.210338, -0.057449), (0.45133, -0.208167, -0.057449), (0.45133, -0.208167, -0.196108), (0.045202, -0.207256, -0.196108), (0.045202, -0.207256, -0.057449)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-19.80552, 0.914434), (-19.80552, 0.643615), (-19.012302, 0.643615), (-19.012302, 0.914434), (-19.871946, 0.055142), (-19.008415, 0.055143), (-19.008415, 0.377592), (-19.871946, 0.377591), (-19.747534, 0.928538), (-19.747534, 0.945032), (-20.069983, 0.945031), (-20.069983, 0.928539), (-19.87197, 0.041554), (-19.871946, 0.025062), (-19.008411, 0.026998), (-19.008434, 0.043491), (-20.069984, 0.924706), (-20.069984, 0.908214), (-19.747532, 0.908214), (-19.747532, 0.924706), (-19.008436, 0.048593), (-19.008411, 0.065088), (-19.871944, 0.067024), (-19.871967, 0.05053), (-19.871946, 0.6704), (-19.871946, 0.347951), (-19.83679, 0.373766), (-19.83679, 0.644585), (-19.871946, 0.347951), (-19.008415, 0.347951), (-19.04357, 0.373768), (-19.83679, 0.373766), (-19.008415, 0.347951), (-19.008415, 0.6704), (-19.043571, 0.644585), (-19.04357, 0.373768), (-19.008415, 0.6704), (-19.871946, 0.6704), (-19.83679, 0.644585), (-19.043571, 0.644585), (-20.021206, 0.897784), (-19.750387, 0.897785), (-19.750387, 0.903802), (-20.021206, 0.903802), (-19.805523, 0.906051), (-19.012297, 0.907831), (-19.012297, 0.913849), (-19.805525, 0.912072), (-19.750383, 0.892793), (-20.02121, 0.892792), (-20.02121, 0.886775), (-19.750383, 0.886776), (-19.012297, 0.926443), (-19.805525, 0.928222), (-19.805525, 0.922201), (-19.012297, 0.920423)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_RobothorSideTableDrawer_2_Hopen_1"
        {
            token outputs:surface.connect = </root/_materials/M_RobothorSideTableDrawer_2_Hopen_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_RobothorSideTableDrawer_2_Hopen_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/ScratchedPlastic_Albedo.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_RobothorSideTableDrawer_2_Hopen_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

