#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.0"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "SideTableDrawer_216_1_2"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "SideTableDrawer_216_1_2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.8367, -0.194201, 0.122849), (-0.027, 0.148659, 0.354349)]
            int[] faceVertexCounts = [4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [24, 25, 26, 27, 17, 2, 1, 17, 18, 2, 18, 3, 2, 18, 19, 3, 19, 0, 3, 19, 16, 0, 0, 5, 4, 0, 1, 5, 1, 6, 5, 1, 2, 6, 2, 7, 6, 2, 3, 7, 3, 4, 7, 3, 0, 4, 4, 5, 8, 4, 8, 9, 7, 4, 9, 5, 10, 8, 5, 6, 10, 6, 11, 10, 6, 7, 11, 7, 9, 11, 17, 16, 19, 18, 1, 0, 21, 20, 0, 16, 22, 21, 16, 17, 23, 22, 17, 1, 20, 23, 20, 21, 25, 24, 21, 22, 26, 25, 22, 23, 27, 26, 23, 20, 24, 27, 12, 14, 13, 12, 15, 14, 9, 12, 13, 9, 8, 12, 8, 15, 12, 8, 10, 15, 10, 14, 15, 10, 11, 14, 11, 13, 14, 11, 9, 13]
            rel material:binding = </root/_materials/M_SideTableDrawer_216_1_2_0>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.08096697, -0.95997417, 0.26813012), (-0.023858406, -0.99441314, 0.10282644), (0.031130172, -0.9941195, 0.10371793), (0.08096697, -0.95997417, 0.26813012), (-0.06714391, -0.9573824, 0.28091046), (-0.023858406, -0.99441314, 0.10282644), (-0.06714391, -0.9573824, 0.28091046), (-0.029066786, -0.99486214, -0.096976094), (-0.023858406, -0.99441314, 0.10282644), (-0.06714391, -0.9573824, 0.28091046), (-0.080917366, -0.9599723, -0.26815233), (-0.029066786, -0.99486214, -0.096976094), (-0.080917366, -0.9599723, -0.26815233), (0.025429204, -0.99367076, -0.109416254), (-0.029066786, -0.99486214, -0.096976094), (-0.080917366, -0.9599723, -0.26815233), (0.06715943, -0.957377, -0.28092527), (0.025429204, -0.99367076, -0.109416254), (0.06715943, -0.957377, -0.28092527), (0.031130172, -0.9941195, 0.10371793), (0.025429204, -0.99367076, -0.109416254), (0.06715943, -0.957377, -0.28092527), (0.08096697, -0.95997417, 0.26813012), (0.031130172, -0.9941195, 0.10371793), (0.031130172, -0.9941195, 0.10371793), (-0.023858406, -0.99441314, 0.10282644), (0, -1, 5.6013146e-8), (0.031130172, -0.9941195, 0.10371793), (0, -1, 5.6013146e-8), (0, -1, -2.1639366e-7), (0.025429204, -0.99367076, -0.109416254), (0.031130172, -0.9941195, 0.10371793), (0, -1, -2.1639366e-7), (-0.023858406, -0.99441314, 0.10282644), (0, -1, -2.1844524e-7), (0, -1, 5.6013146e-8), (-0.023858406, -0.99441314, 0.10282644), (-0.029066786, -0.99486214, -0.096976094), (0, -1, -2.1844524e-7), (-0.029066786, -0.99486214, -0.096976094), (0, -1, -1.2826742e-8), (0, -1, -2.1844524e-7), (-0.029066786, -0.99486214, -0.096976094), (0.025429204, -0.99367076, -0.109416254), (0, -1, -1.2826742e-8), (0.025429204, -0.99367076, -0.109416254), (0, -1, -2.1639366e-7), (0, -1, -1.2826742e-8), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -0.99999994, 0), (0, -1, 0), (0, -0.99999994, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.99999994, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (0.99999994, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.027, -0.163701, 0.354349), (-0.8367, -0.163701, 0.354349), (-0.8367, -0.163701, 0.122849), (-0.027, -0.163701, 0.122849), (-0.049, -0.171701, 0.332349), (-0.8147, -0.171701, 0.332349), (-0.8147, -0.171701, 0.144849), (-0.049, -0.171701, 0.144849), (-0.479112, -0.171701, 0.251949), (-0.348288, -0.171701, 0.251949), (-0.479112, -0.171701, 0.225249), (-0.348288, -0.171701, 0.225249), (-0.479112, -0.194201, 0.251949), (-0.348288, -0.194201, 0.251949), (-0.348288, -0.194201, 0.225249), (-0.479112, -0.194201, 0.225249), (-0.027, 0.148659, 0.354349), (-0.8367, 0.148659, 0.354349), (-0.8367, 0.148659, 0.122849), (-0.027, 0.148659, 0.122849), (-0.8247, -0.151701, 0.354349), (-0.039, -0.151701, 0.354349), (-0.039, 0.136659, 0.354349), (-0.8247, 0.136659, 0.354349), (-0.8247, -0.151701, 0.132762), (-0.039, -0.151701, 0.132762), (-0.039, 0.136659, 0.132762), (-0.8247, 0.136659, 0.132762)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(0.884853, -0.003), (0.884853, 0.495628), (0.701851, 0.495628), (0.701851, -0.003), (0.664619, 0.705612), (0.517702, 0.507379), (0.664619, 0.507379), (0.664619, 0.705612), (0.517702, 0.705612), (0.517702, 0.507379), (0.549131, -0.003152), (0.350898, 0.510707), (0.350898, -0.003152), (0.549131, -0.003152), (0.549131, 0.510707), (0.350898, 0.510707), (0.367884, 0.507379), (0.514801, 0.705612), (0.367884, 0.705612), (0.367884, 0.507379), (0.514801, 0.507379), (0.514801, 0.705612), (-0.000133, 0.512662), (0.013935, 0.00896), (0.013935, 0.498594), (-0.000133, 0.512662), (-0.000133, -0.005108), (0.013935, 0.00896), (-0.000133, -0.005108), (0.133834, 0.00896), (0.013935, 0.00896), (-0.000133, -0.005108), (0.147902, -0.005108), (0.133834, 0.00896), (0.147902, -0.005108), (0.133834, 0.498594), (0.133834, 0.00896), (0.147902, -0.005108), (0.147902, 0.512662), (0.133834, 0.498594), (0.147902, 0.512662), (0.013935, 0.498594), (0.133834, 0.498594), (0.147902, 0.512662), (-0.000133, 0.512662), (0.013935, 0.498594), (0.013935, 0.498594), (0.013935, 0.00896), (0.065348, 0.223555), (0.013935, 0.498594), (0.065348, 0.223555), (0.065348, 0.307212), (0.133834, 0.498594), (0.013935, 0.498594), (0.065348, 0.307212), (0.013935, 0.00896), (0.082421, 0.223555), (0.065348, 0.223555), (0.013935, 0.00896), (0.133834, 0.00896), (0.082421, 0.223555), (0.133834, 0.00896), (0.082421, 0.307212), (0.082421, 0.223555), (0.133834, 0.00896), (0.133834, 0.498594), (0.082421, 0.307212), (0.133834, 0.498594), (0.065348, 0.307212), (0.082421, 0.307212), (0.698786, -0.003152), (0.698786, 0.510707), (0.551869, 0.510707), (0.551869, -0.003152), (0.348674, -0.003152), (0.348674, 0.510706), (0.341058, 0.503091), (0.341058, 0.004464), (0.348674, 0.510706), (0.150441, 0.510706), (0.158057, 0.503091), (0.341058, 0.503091), (0.150441, 0.510706), (0.150441, -0.003152), (0.158057, 0.004464), (0.158057, 0.503091), (0.150441, -0.003152), (0.348674, -0.003152), (0.341058, 0.004464), (0.158057, 0.004464), (0.808209, 0.504372), (0.808209, 1.003), (0.667583, 1.003), (0.667583, 0.504372), (0.36492, 0.507532), (0.36492, 0.690534), (0.224295, 0.690534), (0.224295, 0.507532), (0.811236, 0.988074), (0.811236, 0.489446), (0.951861, 0.489446), (0.951861, 0.988074), (0.221267, 0.507532), (0.221267, 0.690534), (0.080642, 0.690534), (0.080642, 0.507532), (1.484884, 0.436015), (1.564151, 0.399684), (1.564151, 0.436015), (1.484884, 0.436015), (1.484884, 0.399684), (1.564151, 0.399684), (1.476958, 0.784787), (1.397691, 0.748456), (1.476958, 0.748456), (1.476958, 0.784787), (1.397691, 0.784787), (1.397691, 0.748456), (-0.259306, 1.438734), (-0.222975, 1.402404), (-0.222975, 1.438734), (-0.259306, 1.438734), (-0.259306, 1.402404), (-0.222975, 1.402404), (1.564151, 0.392418), (1.484884, 0.356088), (1.564151, 0.356088), (1.564151, 0.392418), (1.484884, 0.392418), (1.484884, 0.356088), (-0.135782, 1.402404), (-0.172113, 1.438734), (-0.172113, 1.402404), (-0.135782, 1.402404), (-0.135782, 1.438734), (-0.172113, 1.438734)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_SideTableDrawer_216_1_2_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]
                rel material:binding = </root/_materials/M_SideTableDrawer_216_1_2_0>
            }

            def GeomSubset "M_SideTableDrawer_216_1_2_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [32, 33, 34, 35, 36, 37, 38, 39, 40, 41]
                rel material:binding = </root/_materials/M_SideTableDrawer_216_1_2_1>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_SideTableDrawer_216_1_2_0"
        {
            token outputs:surface.connect = </root/_materials/M_SideTableDrawer_216_1_2_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_SideTableDrawer_216_1_2_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_SideTableDrawer_216_1_2_0/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/TexturesCom_WoodFine0038_1_seamless_albedo_S.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_216_1_2_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/TexturesCom_Medieval Metal_normalmap_S.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_216_1_2_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_SideTableDrawer_216_1_2_1"
        {
            token outputs:surface.connect = </root/_materials/M_SideTableDrawer_216_1_2_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.75735295, 0.63906455, 0.14478807)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_SideTableDrawer_216_1_2_1/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Copper_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_216_1_2_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

