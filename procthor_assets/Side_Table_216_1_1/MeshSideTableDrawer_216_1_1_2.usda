#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.0"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "SideTableDrawer_216_1_1"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "SideTableDrawer_216_1_1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(0.027, -0.194201, 0.122849), (0.8367, 0.148659, 0.354349)]
            int[] faceVertexCounts = [3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [16, 1, 0, 16, 17, 1, 24, 25, 26, 27, 18, 3, 2, 18, 19, 3, 19, 0, 3, 19, 16, 0, 0, 5, 4, 0, 1, 5, 1, 6, 5, 1, 2, 6, 2, 7, 6, 2, 3, 7, 3, 4, 7, 3, 0, 4, 4, 5, 8, 4, 8, 9, 7, 4, 9, 5, 10, 8, 5, 6, 10, 6, 11, 10, 6, 7, 11, 7, 9, 11, 18, 17, 16, 19, 2, 1, 21, 20, 1, 17, 22, 21, 17, 18, 23, 22, 18, 2, 20, 23, 20, 21, 25, 24, 21, 22, 26, 25, 22, 23, 27, 26, 23, 20, 24, 27, 12, 14, 13, 12, 15, 14, 9, 12, 13, 9, 8, 12, 8, 15, 12, 8, 10, 15, 10, 14, 15, 10, 11, 14, 11, 13, 14, 11, 9, 13]
            rel material:binding = </root/_materials/M_SideTableDrawer_216_1_1_0>
            normal3f[] normals = [(1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0.06709813, -0.9573564, -0.2810098), (0.028583176, -0.9950438, 0.09524026), (0.023539837, -0.994574, -0.10133369), (0.06709813, -0.9573564, -0.2810098), (0.08091671, -0.9599723, 0.2681523), (0.028583176, -0.9950438, 0.09524026), (0.08091671, -0.9599723, 0.2681523), (-0.02500847, -0.9938568, 0.107811205), (0.028583176, -0.9950438, 0.09524026), (0.08091671, -0.9599723, 0.2681523), (-0.06719709, -0.9573845, 0.28089046), (-0.02500847, -0.9938568, 0.107811205), (-0.06719709, -0.9573845, 0.28089046), (-0.03050971, -0.9943371, -0.101798914), (-0.02500847, -0.9938568, 0.107811205), (-0.06719709, -0.9573845, 0.28089046), (-0.08094103, -0.9599837, -0.2681042), (-0.03050971, -0.9943371, -0.101798914), (-0.08094103, -0.9599837, -0.2681042), (0.023539837, -0.994574, -0.10133369), (-0.03050971, -0.9943371, -0.101798914), (-0.08094103, -0.9599837, -0.2681042), (0.06709813, -0.9573564, -0.2810098), (0.023539837, -0.994574, -0.10133369), (0.023539837, -0.994574, -0.10133369), (0.028583176, -0.9950438, 0.09524026), (0, -1, 2.5341498e-7), (0.023539837, -0.994574, -0.10133369), (0, -1, 2.5341498e-7), (0, -1, -5.3543143e-8), (-0.03050971, -0.9943371, -0.101798914), (0.023539837, -0.994574, -0.10133369), (0, -1, -5.3543143e-8), (0.028583176, -0.9950438, 0.09524026), (0, -1, 1.5133656e-8), (0, -1, 2.5341498e-7), (0.028583176, -0.9950438, 0.09524026), (-0.02500847, -0.9938568, 0.107811205), (0, -1, 1.5133656e-8), (-0.02500847, -0.9938568, 0.107811205), (0, -1, 2.511603e-7), (0, -1, 1.5133656e-8), (-0.02500847, -0.9938568, 0.107811205), (-0.03050971, -0.9943371, -0.101798914), (0, -1, 2.511603e-7), (-0.03050971, -0.9943371, -0.101798914), (0, -1, -5.3543143e-8), (0, -1, 2.511603e-7), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -0.99999994, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (0.99999994, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.99999994, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.8367, -0.163701, 0.122849), (0.8367, -0.163701, 0.354349), (0.027, -0.163701, 0.354349), (0.027, -0.163701, 0.122849), (0.8147, -0.171701, 0.144849), (0.8147, -0.171701, 0.332349), (0.049, -0.171701, 0.332349), (0.049, -0.171701, 0.144849), (0.470199, -0.171701, 0.251949), (0.470199, -0.171701, 0.225249), (0.3572, -0.171701, 0.251949), (0.3572, -0.171701, 0.225249), (0.470199, -0.194201, 0.251949), (0.470199, -0.194201, 0.225249), (0.3572, -0.194201, 0.225249), (0.3572, -0.194201, 0.251949), (0.8367, 0.148659, 0.122849), (0.8367, 0.148659, 0.354349), (0.027, 0.148659, 0.354349), (0.027, 0.148659, 0.122849), (0.039, -0.151701, 0.354349), (0.8247, -0.151701, 0.354349), (0.8247, 0.136659, 0.354349), (0.039, 0.136659, 0.354349), (0.039, -0.151701, 0.132762), (0.8247, -0.151701, 0.132762), (0.8247, 0.136659, 0.132762), (0.039, 0.136659, 0.132762)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(0.517702, 0.507379), (0.664619, 0.705612), (0.517702, 0.705612), (0.517702, 0.507379), (0.664619, 0.507379), (0.664619, 0.705612), (0.884853, -0.003), (0.884853, 0.495628), (0.701851, 0.495628), (0.701851, -0.003), (0.514801, 0.705612), (0.367885, 0.507379), (0.514801, 0.507379), (0.514801, 0.705612), (0.367885, 0.705612), (0.367885, 0.507379), (0.198145, -0.003152), (-0.000087, 0.510707), (-0.000087, -0.003152), (0.198145, -0.003152), (0.198145, 0.510707), (-0.000087, 0.510707), (0.699344, 0.512657), (0.565379, 0.498589), (0.685276, 0.498589), (0.699344, 0.512657), (0.551312, 0.512657), (0.565379, 0.498589), (0.551312, 0.512657), (0.565379, 0.008965), (0.565379, 0.498589), (0.551312, 0.512657), (0.551312, -0.005103), (0.565379, 0.008965), (0.551312, -0.005103), (0.685276, 0.008965), (0.565379, 0.008965), (0.551312, -0.005103), (0.699344, -0.005103), (0.685276, 0.008965), (0.699344, -0.005103), (0.685276, 0.498589), (0.685276, 0.008965), (0.699344, -0.005103), (0.699344, 0.512657), (0.685276, 0.498589), (0.685276, 0.498589), (0.565379, 0.498589), (0.616791, 0.2783), (0.685276, 0.498589), (0.616791, 0.2783), (0.633864, 0.2783), (0.685276, 0.008965), (0.685276, 0.498589), (0.633864, 0.2783), (0.565379, 0.498589), (0.616791, 0.206042), (0.616791, 0.2783), (0.565379, 0.498589), (0.565379, 0.008965), (0.616791, 0.206042), (0.565379, 0.008965), (0.633864, 0.206043), (0.616791, 0.206042), (0.565379, 0.008965), (0.685276, 0.008965), (0.633864, 0.206043), (0.685276, 0.008965), (0.633864, 0.2783), (0.633864, 0.206043), (0.347986, -0.003152), (0.347986, 0.510707), (0.201069, 0.510707), (0.201069, -0.003152), (0.549131, -0.003152), (0.549131, 0.510707), (0.541516, 0.503091), (0.541516, 0.004463), (0.549131, 0.510707), (0.350898, 0.510707), (0.358514, 0.503091), (0.541516, 0.503091), (0.350898, 0.510707), (0.350898, -0.003152), (0.358514, 0.004463), (0.358514, 0.503091), (0.350898, -0.003152), (0.549131, -0.003152), (0.541516, 0.004463), (0.358514, 0.004463), (0.808209, 0.504372), (0.808209, 1.003), (0.667583, 1.003), (0.667583, 0.504372), (0.36492, 0.507532), (0.36492, 0.690533), (0.224295, 0.690533), (0.224295, 0.507532), (0.811236, 0.988074), (0.811236, 0.489446), (0.951861, 0.489446), (0.951861, 0.988074), (0.221268, 0.507532), (0.221268, 0.690533), (0.080642, 0.690533), (0.080642, 0.507532), (1.476958, 0.871979), (1.397691, 0.835649), (1.476958, 0.835649), (1.476958, 0.871979), (1.397691, 0.871979), (1.397691, 0.835649), (-0.179379, 1.402404), (-0.215709, 1.438734), (-0.215709, 1.402404), (-0.179379, 1.402404), (-0.179379, 1.438734), (-0.215709, 1.438734), (1.476958, 0.915576), (1.397691, 0.879246), (1.476958, 0.879246), (1.476958, 0.915576), (1.397691, 0.915576), (1.397691, 0.879246), (1.476958, 0.828383), (1.476958, 0.792053), (1.476958, 0.792053), (1.476958, 0.828383), (1.443252, 0.828383), (1.476958, 0.792053), (1.443252, 0.828383), (1.397691, 0.792053), (1.476958, 0.792053), (1.443252, 0.828383), (1.397691, 0.828383), (1.397691, 0.792053)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_SideTableDrawer_216_1_1_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]
                rel material:binding = </root/_materials/M_SideTableDrawer_216_1_1_0>
            }

            def GeomSubset "M_SideTableDrawer_216_1_1_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [32, 33, 34, 35, 36, 37, 38, 39, 40, 41]
                rel material:binding = </root/_materials/M_SideTableDrawer_216_1_1_1>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_SideTableDrawer_216_1_1_0"
        {
            token outputs:surface.connect = </root/_materials/M_SideTableDrawer_216_1_1_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_SideTableDrawer_216_1_1_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_SideTableDrawer_216_1_1_0/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/TexturesCom_WoodFine0038_1_seamless_albedo_S.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_216_1_1_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/TexturesCom_Medieval Metal_normalmap_S.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_216_1_1_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_SideTableDrawer_216_1_1_1"
        {
            token outputs:surface.connect = </root/_materials/M_SideTableDrawer_216_1_1_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.75735295, 0.63906455, 0.14478807)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_SideTableDrawer_216_1_1_1/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Copper_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_216_1_1_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

