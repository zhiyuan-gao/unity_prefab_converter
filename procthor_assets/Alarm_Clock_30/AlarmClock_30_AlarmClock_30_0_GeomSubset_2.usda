#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "AlarmClock_30_AlarmClock_30_0_GeomSubset_2"
    {
        def Mesh "AlarmClock_30_AlarmClock_30_0_GeomSubset_2"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [8, 9, 11, 10, 84, 86, 102, 104, 85, 84, 89, 88, 86, 85, 94, 93, 87, 89, 98, 97, 88, 87, 92, 91, 90, 92, 100, 99, 91, 90, 95, 94, 93, 95, 105, 107, 96, 98, 104, 103, 97, 96, 101, 100, 99, 101, 106, 105, 103, 102, 107, 106, 85, 88, 91, 94, 87, 97, 100, 92, 96, 103, 106, 101, 102, 86, 93, 107, 72, 75, 89, 84, 75, 78, 98, 89, 95, 90, 99, 105, 78, 81, 104, 98, 81, 72, 84, 104, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107]
            rel material:binding = </root/_materials/M_AlarmClock_30_2>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.28248414, -0.3842882, -0.87893414), (-0.6407935, -0.5644535, -0.52036154), (-0.7031465, 0.42098236, -0.5730261), (-0.38649106, 0.14920509, -0.91014427), (-0.45945597, -0.7031224, -0.5426962), (-0.28248414, -0.3842882, -0.87893414), (0.28388876, -0.3814071, -0.8797362), (0.46070415, -0.7043761, -0.5400058), (-0.6407935, -0.5644535, -0.52036154), (-0.45945597, -0.7031224, -0.5426962), (-0.47399628, -0.7672261, 0.43207824), (-0.69481915, -0.5883526, 0.4136031), (0.6383315, -0.56857705, -0.5188961), (0.28388876, -0.3814071, -0.8797362), (0.37955862, 0.15380171, -0.912294), (0.68371516, 0.43995154, -0.58221674), (0.46070415, -0.7043761, -0.5400058), (0.6383315, -0.56857705, -0.5188961), (0.6802387, -0.6048995, 0.41397083), (0.45508263, -0.78464514, 0.42098904), (0.46389118, -0.5660345, 0.6814763), (0.6802387, -0.6048995, 0.41397083), (0.8046454, 0.41645712, 0.42321298), (0.5397763, 0.42298904, 0.72782), (0.45508263, -0.78464514, 0.42098904), (0.46389118, -0.5660345, 0.6814763), (-0.4707862, -0.55127406, 0.6888085), (-0.47399628, -0.7672261, 0.43207824), (-0.69481915, -0.5883526, 0.4136031), (-0.4707862, -0.55127406, 0.6888085), (-0.5397785, 0.42298, 0.7278236), (-0.8083443, 0.41058773, 0.4218973), (0.5338861, 0.6567346, -0.5326023), (0.37955862, 0.15380171, -0.912294), (-0.38649106, 0.14920509, -0.91014427), (-0.5491638, 0.64243245, -0.5345089), (0.68371516, 0.43995154, -0.58221674), (0.5338861, 0.6567346, -0.5326023), (0.5770764, 0.69923604, 0.42196184), (0.8046454, 0.41645712, 0.42321298), (0.5397763, 0.42298904, 0.72782), (0.5770764, 0.69923604, 0.42196184), (-0.58209455, 0.6944813, 0.4229203), (-0.5397785, 0.42298, 0.7278236), (-0.5491638, 0.64243245, -0.5345089), (-0.7031465, 0.42098236, -0.5730261), (-0.8083443, 0.41058773, 0.4218973), (-0.58209455, 0.6944813, 0.4229203), (-0.45945597, -0.7031224, -0.5426962), (0.46070415, -0.7043761, -0.5400058), (0.45508263, -0.78464514, 0.42098904), (-0.47399628, -0.7672261, 0.43207824), (0.6383315, -0.56857705, -0.5188961), (0.68371516, 0.43995154, -0.58221674), (0.8046454, 0.41645712, 0.42321298), (0.6802387, -0.6048995, 0.41397083), (0.5338861, 0.6567346, -0.5326023), (-0.5491638, 0.64243245, -0.5345089), (-0.58209455, 0.6944813, 0.4229203), (0.5770764, 0.69923604, 0.42196184), (-0.7031465, 0.42098236, -0.5730261), (-0.6407935, -0.5644535, -0.52036154), (-0.69481915, -0.5883526, 0.4136031), (-0.8083443, 0.41058773, 0.4218973), (-0.30901626, -0.28877416, -0.9061559), (0.30959567, -0.28789207, -0.90623873), (0.28388876, -0.3814071, -0.8797362), (-0.28248414, -0.3842882, -0.87893414), (0.30959567, -0.28789207, -0.90623873), (0.3000852, 0.30389243, -0.9042113), (0.37955862, 0.15380171, -0.912294), (0.28388876, -0.3814071, -0.8797362), (-0.4707862, -0.55127406, 0.6888085), (0.46389118, -0.5660345, 0.6814763), (0.5397763, 0.42298904, 0.72782), (-0.5397785, 0.42298, 0.7278236), (0.3000852, 0.30389243, -0.9042113), (-0.3012723, 0.30336583, -0.90399337), (-0.38649106, 0.14920509, -0.91014427), (0.37955862, 0.15380171, -0.912294), (-0.3012723, 0.30336583, -0.90399337), (-0.30901626, -0.28877416, -0.9061559), (-0.28248414, -0.3842882, -0.87893414), (-0.38649106, 0.14920509, -0.91014427), (-0.28248414, -0.3842882, -0.87893414), (-0.45945597, -0.7031224, -0.5426962), (-0.6407935, -0.5644535, -0.52036154), (0.6383315, -0.56857705, -0.5188961), (0.46070415, -0.7043761, -0.5400058), (0.28388876, -0.3814071, -0.8797362), (0.46389118, -0.5660345, 0.6814763), (0.45508263, -0.78464514, 0.42098904), (0.6802387, -0.6048995, 0.41397083), (-0.69481915, -0.5883526, 0.4136031), (-0.47399628, -0.7672261, 0.43207824), (-0.4707862, -0.55127406, 0.6888085), (0.5338861, 0.6567346, -0.5326023), (0.68371516, 0.43995154, -0.58221674), (0.37955862, 0.15380171, -0.912294), (0.5397763, 0.42298904, 0.72782), (0.8046454, 0.41645712, 0.42321298), (0.5770764, 0.69923604, 0.42196184), (-0.7031465, 0.42098236, -0.5730261), (-0.5491638, 0.64243245, -0.5345089), (-0.38649106, 0.14920509, -0.91014427), (-0.5397785, 0.42298, 0.7278236), (-0.58209455, 0.6944813, 0.4229203), (-0.8083443, 0.41058773, 0.4218973)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.0005, 0.003293, -0.328682), (-0.0005, 0.003293, -0.328682), (0.0005, 0.004293, -0.328682), (-0.0005, 0.004293, -0.328682), (0.0005, 0.003293, -0.328682), (-0.0005, 0.003293, -0.328682), (0.0005, 0.004293, -0.328682), (-0.0005, 0.004293, -0.328682), (0.0005, 0.003293, -0.328682), (-0.0005, 0.003293, -0.328682), (0.0005, 0.004293, -0.328682), (-0.0005, 0.004293, -0.328682), (0.0005, 0.003293, -0.328682), (-0.0005, 0.003293, -0.328682), (0.0005, 0.004293, -0.328682), (-0.0005, 0.004293, -0.328682), (0.0005, 0.003293, -0.328682), (-0.0005, 0.003293, -0.328682), (0.0005, 0.004293, -0.328682), (-0.0005, 0.004293, -0.328682), (0.097968, -0.038451, -0.045456), (0.098022, -0.039624, -0.042944), (0.0999, -0.037817, -0.043627), (-0.0999, -0.037817, -0.043627), (-0.097968, -0.039607, -0.042894), (-0.097968, -0.038451, -0.045456), (0.0999, 0.002793, 0.073889), (0.097968, 0.001005, 0.074629), (0.097968, 0.003425, 0.07572), (-0.097968, 0.003425, 0.07572), (-0.09791, 0.000987, 0.074574), (-0.0999, 0.002793, 0.073889), (0.096843, 0.015957, 0.067805), (0.0999, 0.014449, 0.069497), (0.098065, 0.015122, 0.071266), (-0.096843, 0.015957, 0.067804), (-0.09803, 0.015091, 0.071279), (-0.0999, 0.014497, 0.069519), (0.096371, -0.024198, -0.048059), (0.097983, -0.026828, -0.049878), (0.0999, -0.026166, -0.048145), (-0.096366, -0.024198, -0.048061), (-0.0999, -0.02619, -0.048094), (-0.098026, -0.026788, -0.049895), (0.03185, -0.002764, 0.007708), (0.033107, -0.003839, 0.010685), (0.029922, -0.001773, 0.009617), (-0.02992, -0.001773, 0.009617), (-0.033082, -0.003848, 0.010658), (-0.031847, -0.002764, 0.007707), (-0.031869, -0.005491, 0.000148), (-0.032805, -0.008394, -0.002462), (-0.029989, -0.006519, -0.00173), (0.030007, -0.006482, -0.001647), (0.032849, -0.008359, -0.002359), (0.031883, -0.005462, 0.00023), (0.03184, 0.01766, 0.000424), (0.03184, 0.010467, 0.007613), (0.029946, 0.01253, 0.009617), (0.029946, 0.019629, 0.002519), (-0.029946, 0.019629, 0.002519), (-0.029985, 0.012569, 0.009617), (-0.03184, 0.010536, 0.007649), (-0.03184, 0.01766, 0.000424), (-0.03184, 0.010592, -0.006749), (-0.03184, 0.00342, 0.000409), (-0.029926, 0.001518, -0.001583), (-0.029921, 0.008642, -0.008685), (0.029924, 0.008642, -0.008682), (0.029952, 0.001542, -0.001571), (0.031847, 0.003416, 0.000389), (0.03184, 0.010592, -0.006749), (0.032875, 0.020563, -0.067206), (0.03184, 0.017719, -0.065296), (0.029941, 0.019629, -0.065308), (-0.032875, 0.020563, -0.067206), (-0.029924, 0.019629, -0.065291), (-0.03184, 0.01774, -0.065318), (-0.032739, 0.007569, -0.067207), (-0.03184, 0.01056, -0.065289), (-0.029954, 0.008642, -0.065321), (0.032739, 0.007569, -0.067207), (0.029931, 0.008642, -0.065297), (0.03184, 0.010545, -0.065304), (0.050259, 0.036435, -0.067206), (0.051278, 0.038991, -0.069012), (0.053463, 0.037226, -0.069012), (-0.053463, 0.037226, -0.069012), (-0.051317, 0.038991, -0.068973), (-0.050297, 0.036453, -0.067206), (-0.051522, 0.037059, -0.078682), (-0.051151, 0.038991, -0.07675), (-0.05349, 0.037103, -0.07675), (0.05349, 0.037103, -0.07675), (0.051327, 0.038991, -0.076925), (0.051523, 0.037059, -0.078682), (-0.066888, -0.035018, -0.069084), (-0.06857, -0.033014, -0.069028), (-0.06557, -0.030987, -0.067207), (-0.066554, -0.033041, -0.078682), (-0.068547, -0.032909, -0.076765), (-0.066844, -0.035018, -0.076765), (0.068557, -0.032953, -0.069083), (0.06695, -0.035018, -0.069029), (0.06557, -0.030987, -0.067207), (0.066554, -0.033041, -0.078682), (0.066844, -0.035018, -0.076765), (0.068547, -0.032909, -0.076765), (-0.088017, -0.030978, -0.017925), (0.088072, -0.03099, -0.017956), (-0.087976, -0.002259, 0.065183), (0.088034, -0.002242, 0.065233), (-0.085093, -0.026366, -0.015238), (0.085148, -0.026377, -0.015268), (-0.085056, -0.000434, 0.059799), (0.085114, -0.000421, 0.059847), (-0.03184, 0.01514, 0.004888), (-0.03184, 0.008049, -0.002318), (-0.029923, 0.006122, -0.004282), (0.029938, 0.006133, -0.004275), (0.031843, 0.008045, -0.002328), (0.03184, 0.015104, 0.00487), (0.029946, 0.017119, 0.00692), (-0.029966, 0.01714, 0.00692)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-7.129726, -5.425685), (-7.124946, -5.425685), (-7.124946, -5.420897), (-7.129726, -5.420897), (-7.027957, 0.858647), (-7.029924, 0.859509), (-7.030001, 0.783062), (-7.027957, 0.785204), (-7.549312, 0.380181), (-7.551827, 0.379178), (-7.551809, 0.280264), (-7.549312, 0.279262), (-7.029924, 0.859509), (-7.029924, 0.861432), (-7.038545, 0.861432), (-7.038352, 0.859375), (-7.089704, 0.782725), (-7.087736, 0.783567), (-7.087736, 0.857051), (-7.089721, 0.859261), (-7.08966, 0.780801), (-7.089704, 0.782725), (-7.098134, 0.782859), (-7.098134, 0.780801), (-7.10024, 0.782907), (-7.098134, 0.782859), (-7.098151, 0.859146), (-7.10024, 0.85929), (-7.220383, 0.271051), (-7.218476, 0.270685), (-7.218476, 0.372343), (-7.220383, 0.37215), (-7.038352, 0.859375), (-7.040458, 0.859327), (-7.040458, 0.782966), (-7.038369, 0.78311), (-7.622113, 0.263945), (-7.618147, 0.265241), (-7.618147, 0.39424), (-7.622113, 0.395597), (-7.089721, 0.859261), (-7.089782, 0.861444), (-7.098151, 0.861444), (-7.098151, 0.859146), (-7.14932, 0.255856), (-7.147369, 0.25557), (-7.147369, 0.387458), (-7.14932, 0.387172), (-7.029943, 0.780813), (-7.030001, 0.783062), (-7.038369, 0.78311), (-7.038369, 0.780813), (-6.986697, 0.297387), (-6.986735, 0.197196), (-6.979141, 0.197358), (-6.978969, 0.297435), (-7.089704, 0.782725), (-7.089721, 0.859261), (-7.098151, 0.859146), (-7.098134, 0.782859), (-7.380749, 0.25652), (-7.380695, 0.387222), (-7.38825, 0.387118), (-7.38825, 0.256564), (-7.030001, 0.783062), (-7.029924, 0.859509), (-7.038352, 0.859375), (-7.038369, 0.78311), (-7.56744, 0.362079), (-7.56744, 0.297402), (-7.551809, 0.280264), (-7.551827, 0.379178), (-7.56744, 0.297402), (-7.580221, 0.297536), (-7.618147, 0.265241), (-7.551809, 0.280264), (-7.218476, 0.372343), (-7.218476, 0.270685), (-7.14932, 0.255856), (-7.14932, 0.387172), (-7.580221, 0.297536), (-7.580221, 0.361944), (-7.618147, 0.39424), (-7.618147, 0.265241), (-7.580221, 0.361944), (-7.56744, 0.362079), (-7.551827, 0.379178), (-7.618147, 0.39424), (-7.551827, 0.379178), (-7.549312, 0.380181), (-7.551049, 0.38233), (-7.551049, 0.277151), (-7.549312, 0.279262), (-7.551809, 0.280264), (-7.10024, 0.782907), (-7.098134, 0.780801), (-7.098134, 0.782859), (-7.038352, 0.859375), (-7.038545, 0.861432), (-7.040458, 0.859327), (-7.622113, 0.263945), (-7.620142, 0.26229), (-7.618147, 0.265241), (-7.10024, 0.85929), (-7.098151, 0.859146), (-7.098151, 0.861444), (-7.620082, 0.397178), (-7.622113, 0.395597), (-7.618147, 0.39424), (-7.040458, 0.782966), (-7.038369, 0.780813), (-7.038369, 0.78311)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_AlarmClock_30_2"
        {
            token outputs:surface.connect = </root/_materials/M_AlarmClock_30_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_AlarmClock_30_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_AlarmClock_30_2/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_AlarmClock_30_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_AlarmClock_30_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

