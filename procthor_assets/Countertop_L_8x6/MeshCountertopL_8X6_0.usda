#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "CountertopL_8X6"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "CountertopL_8X6" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-1.219046, -0.915051, -0.517404), (1.219356, 0.913751, 0.418626)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [5, 13, 17, 4, 8, 15, 14, 9, 1, 5, 4, 0, 0, 4, 17, 16, 2, 6, 7, 3, 0, 8, 9, 1, 3, 10, 11, 2, 15, 8, 0, 16, 7, 13, 12, 3, 3, 12, 14, 10, 15, 11, 10, 14, 2, 11, 15, 16, 17, 6, 2, 16, 13, 7, 6, 17, 13, 19, 18, 12, 12, 18, 20, 14, 20, 28, 9, 14, 5, 22, 19, 13, 22, 24, 23, 21, 25, 24, 22, 5, 1, 26, 25, 5, 9, 27, 26, 1, 28, 29, 27, 9, 21, 23, 29, 28, 19, 22, 21, 18, 18, 21, 28, 20, 24, 25, 26, 23, 23, 26, 27, 29]
            rel material:binding = </root/_materials/M_CountertopL_8X6_0>
            normal3f[] normals = [(0.0000014210826, 1, -0.000007125154), (-7.8945766e-7, 1, -0.0000039884985), (4.2965e-7, 1, -0.000008424506), (8.593e-7, 1, -0.000016849011), (1, 0, 0), (1, 0, 0), (1, -0.0000011049515, 7.9108077e-7), (1, -4.135382e-8, 5.4464135e-7), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-2.7055917e-8, 0, -1), (-6.5902235e-8, 0, -1), (6.2987203e-7, 0, -1), (1.483916e-7, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1.7682972e-8, 0, -1), (1.1790135e-8, 0, -1), (-2.7055917e-8, 0, -1), (1.483916e-7, 0, -1), (3.0300487e-7, 0, 1), (3.0300487e-7, 0, 1), (1.5152203e-7, 0, 1), (1.5149593e-7, 0, 1), (1.5149593e-7, 0, 1), (1.5152203e-7, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, -0.0000011049515, 7.9108077e-7), (6.745831e-7, 0, -1), (2.3575804e-8, 0, -1), (1.7682972e-8, 0, -1), (1.483916e-7, 0, -1), (6.2987203e-7, 0, -1), (0.0000013256463, 0, -1), (6.745831e-7, 0, -1), (1.483916e-7, 0, -1), (-7.8945766e-7, 1, -0.0000039884985), (0, 1, 0), (0, 1, 0), (4.2965e-7, 1, -0.000008424506), (0.99999964, 0.00042140903, -0.000632225), (0.99999964, 0.00042140903, -0.000632225), (0.99999964, 0.00042140903, -0.000632225), (0.99999964, 0.00042140903, -0.000632225), (0.00028188544, 0.9999997, -0.00063093397), (0.00028188544, 0.9999997, -0.00063093397), (0.00028188544, 0.9999997, -0.00063093397), (0.00028188544, 0.9999997, -0.00063093397), (1, -0.000003314856, 0.0000023732437), (1, 0.0000012074064, 5.767743e-7), (1, -4.135382e-8, 5.4464135e-7), (1, -0.0000011049515, 7.9108077e-7), (0.0000014210826, 1, -0.000007125154), (0.0000040626883, 1, 0.0000016864348), (-0.0000032276728, 1, 0.0000048835177), (-7.8945766e-7, 1, -0.0000039884985), (0.99997866, 0.00041086838, 0.0065150918), (0.99997866, 0.00041086838, 0.0065150918), (0.99997866, 0.00041086838, 0.0065150918), (0.99997866, 0.00041086838, 0.0065150918), (0.000010328308, 0.99999994, -0.0000010612631), (0.000010328308, 0.99999994, -0.0000010612631), (0.0000040626883, 1, 0.0000016864348), (0.0000014210826, 1, -0.000007125154), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0.0000012074064, 5.767743e-7), (1, 0.0000050940266, -9.67186e-7), (1, 0.0000050940266, -9.67186e-7), (1, -4.135382e-8, 5.4464135e-7), (0.00027518623, 0.9999787, 0.006514532), (0.00027518623, 0.9999787, 0.006514532), (0.00027518623, 0.9999787, 0.006514532), (0.00027518623, 0.9999787, 0.006514532), (-0.009768717, -0.00006022487, 0.9999523), (-0.009768717, -0.00006022487, 0.9999523), (-0.005806735, -0.0039927443, 0.99997514), (-0.005771689, -0.0040289764, 0.9999753), (-0.005771689, -0.0040289764, 0.9999753), (-0.005806735, -0.0039927443, 0.99997514), (-0.00004046284, -0.009778577, 0.9999522), (-0.00004046284, -0.009778577, 0.9999522), (0.00036520322, -0.000042097996, 1), (0.00036520322, -0.000042097996, 1), (0.00016752633, 0.00015855672, 0.99999994), (0.00016752662, 0.00015855648, 1), (0.00016752662, 0.00015855648, 1), (0.00016752633, 0.00015855672, 0.99999994), (-0.00003015009, 0.000359211, 0.99999994), (-0.00003015009, 0.000359211, 0.99999994)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(1.219356, 0.913751, 0.418626), (1.219356, 0.913751, 0.388626), (0.609756, 0.304152, 0.418626), (0.609756, 0.304152, 0.388626), (1.219356, -0.915049, 0.418626), (1.219356, -0.91505, 0.388626), (0.609756, -0.915049, 0.418626), (0.609756, -0.915049, 0.388626), (-1.219045, 0.913751, 0.418626), (-1.219045, 0.913751, 0.388626), (-1.219045, 0.304152, 0.388626), (-1.219045, 0.304152, 0.418626), (0.62976, 0.324152, 0.388626), (0.62976, -0.915049, 0.388626), (-1.219045, 0.324151, 0.388626), (-1.219045, 0.324151, 0.418626), (0.62976, 0.324152, 0.418626), (0.62976, -0.915049, 0.418626), (0.628716, 0.323109, -0.437404), (0.62976, -0.915048, -0.437404), (-1.219045, 0.324152, -0.437404), (0.648721, 0.343115, -0.437143), (0.64976, -0.915045, -0.437273), (0.649763, 0.344157, -0.517143), (0.64976, -0.915045, -0.517273), (1.219356, -0.915051, -0.517404), (1.219356, 0.913751, -0.517404), (-1.219046, 0.913751, -0.517404), (-1.219043, 0.344151, -0.437273), (-1.219043, 0.344151, -0.517273)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-9.805606, 1.191249), (-8.884355, 1.191249), (-8.884355, 1.238123), (-9.805606, 1.238123), (-9.037208, 1.240858), (-9.95849, 1.240858), (-9.95849, 1.193985), (-9.037208, 1.193985), (-10.938238, 1.144474), (-8.080727, 1.144474), (-8.080729, 1.191348), (-10.938238, 1.191348), (-11.504547, 1.924782), (-11.504548, -0.932719), (-10.583305, -0.932719), (-10.583305, 1.003531), (-8.466888, 1.22253), (-10.371947, 1.22253), (-10.371947, 1.175657), (-8.466888, 1.175657), (-11.504602, 0.754684), (-7.694492, 0.754683), (-7.694492, 0.801557), (-11.504601, 0.801558), (-10.9382, 1.160066), (-8.080765, 1.160066), (-8.080765, 1.206942), (-10.9382, 1.206942), (-7.694548, 1.003531), (-7.694548, 1.924783), (-11.504547, 1.924782), (-10.583305, 1.003531), (-10.925577, 1.940501), (-10.956833, 1.940501), (-10.956833, 0.004228), (-10.925578, 0.035477), (-10.925578, 0.035477), (-10.956833, 0.004228), (-8.068043, 0.004228), (-8.068043, 0.035477), (-9.95849, 1.240858), (-9.989739, 1.240858), (-9.989739, 1.193985), (-9.95849, 1.193985), (-10.552049, 0.972283), (-7.694548, 0.972283), (-7.694548, 1.003531), (-10.583305, 1.003531), (-10.583305, -0.932719), (-10.552049, -0.932719), (-10.552049, 0.972283), (-10.583305, 1.003531), (-8.884355, 1.191249), (-8.8531, 1.191249), (-8.8531, 1.238123), (-8.884355, 1.238123), (-20.203783, 0.72368), (-20.203783, 0.078344), (-19.23647, 0.078344), (-19.235655, 0.72368), (-20.380344, 1.162952), (-20.37953, 0.517616), (-18.935965, 0.517616), (-18.935965, 1.162952), (-19.38957, 0.000156), (-19.389671, 0.015781), (-20.034906, 0.460779), (-20.034906, 0.000156), (-20.034904, -0.142906), (-19.389671, 0.302092), (-19.38957, 0.317717), (-20.034904, 0.317717), (-20.213923, 0.543533), (-20.213923, 0.481031), (-19.230165, 0.481133), (-19.230978, 0.543634), (-19.327068, -0.142906), (-19.327171, 0.302092), (-19.389671, 0.302092), (-20.034904, -0.142906), (-20.502636, 0.986872), (-20.502636, 0.279036), (-19.073885, 0.279036), (-19.073885, 0.986872), (-18.335812, -0.28298), (-18.335808, 0.424856), (-20.240807, 0.424856), (-20.240807, -0.28298), (-19.389671, 0.015781), (-19.327171, 0.015781), (-19.32707, 0.460779), (-20.034906, 0.460779), (-19.951294, 0.656019), (-19.952106, 0.593517), (-18.492077, 0.593412), (-18.492077, 0.655914), (-19.936462, 1.278345), (-19.95209, 1.278343), (-19.951277, 0.295412), (-19.935648, 0.311041), (-19.935648, 0.311041), (-19.951277, 0.295412), (-18.492094, 0.294603), (-18.492094, 0.310228), (-19.795813, 1.109304), (-20.240808, 1.10931), (-20.240808, -0.319443), (-19.795815, 0.125553), (-19.795815, 0.125553), (-20.240808, -0.319443), (-18.335806, -0.319443), (-18.335808, 0.125559)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_CountertopL_8X6_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                rel material:binding = </root/_materials/M_CountertopL_8X6_0>
            }

            def GeomSubset "M_CountertopL_8X6_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27]
                rel material:binding = </root/_materials/M_CountertopL_8X6_1>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_CountertopL_8X6_0"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopL_8X6_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopL_8X6_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/marbleBase2.jpg@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopL_8X6_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_CountertopL_8X6_1"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopL_8X6_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopL_8X6_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_CountertopL_8X6_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/DarkWood2.tif@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopL_8X6_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopL_8X6_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

