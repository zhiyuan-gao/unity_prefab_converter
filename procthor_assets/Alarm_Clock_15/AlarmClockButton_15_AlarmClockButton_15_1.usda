#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "AlarmClockButton_15"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "AlarmClockButton_15" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.052265, -0.035769, -0.341191), (0.052265, 0.035605, 0.092022)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 4, 5, 7, 6, 8, 9, 11, 10, 20, 22, 27, 26, 21, 20, 33, 32, 67, 68, 24, 23, 23, 25, 31, 30, 25, 24, 35, 34, 26, 28, 37, 36, 65, 66, 30, 29, 29, 31, 39, 38, 68, 69, 35, 24, 67, 23, 30, 66, 65, 29, 38, 64, 25, 34, 39, 31, 26, 36, 33, 20, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 28, 41, 40, 37, 28, 27, 42, 41, 22, 43, 42, 27, 22, 21, 44, 43, 21, 32, 45, 44, 41, 47, 46, 40, 41, 42, 48, 47, 43, 49, 48, 42, 43, 44, 50, 49, 44, 45, 51, 50, 47, 53, 52, 46, 47, 48, 54, 53, 49, 55, 54, 48, 49, 50, 56, 55, 50, 51, 57, 56, 53, 59, 58, 52, 53, 54, 60, 59, 55, 61, 60, 54, 55, 56, 62, 61, 56, 57, 63, 62, 59, 65, 64, 58, 59, 60, 66, 65, 61, 67, 66, 60, 61, 62, 68, 67, 62, 63, 69, 68, 12, 13, 15, 14, 16, 17, 19, 18]
            rel material:binding = </root/_materials/M_AlarmClockButton_15_0>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.66522557, 0.6040471, -0.43886447), (-0.40859175, 0.59168637, -0.69495326), (-0.40861386, -0.59146744, -0.6951266), (-0.6652129, -0.60396135, -0.43900165), (-0.42985046, 0.80281734, -0.41317412), (-0.66522557, 0.6040471, -0.43886447), (-0.692633, 0.72129035, -2.6003585e-8), (-0.43605116, 0.8999219, 0), (0.18612407, 0.63527036, -0.7495261), (0.1415917, 0.82911557, -0.5408504), (0.42996904, 0.80277234, -0.41313824), (0.40861106, 0.5916811, -0.6949464), (0.40861106, 0.5916811, -0.6949464), (0.6652426, 0.60407555, -0.43879947), (0.6652175, -0.6039691, -0.438984), (0.4085082, -0.5914956, -0.69516474), (0.6652426, 0.60407555, -0.43879947), (0.42996904, 0.80277234, -0.41313824), (0.43605113, 0.89992195, 0.00009700716), (0.6926329, 0.72129035, 0), (-0.6652129, -0.60396135, -0.43900165), (-0.42987466, -0.80269784, -0.41338092), (-0.43605116, -0.8999219, -1.4743377e-8), (-0.6926329, -0.72129035, 0), (0.14155827, -0.8290684, -0.54093134), (0.18602818, -0.6351744, -0.7496313), (0.4085082, -0.5914956, -0.69516474), (0.42987314, -0.80269784, -0.4133826), (0.42987314, -0.80269784, -0.4133826), (0.6652175, -0.6039691, -0.438984), (0.692633, -0.72129035, -2.6003585e-8), (0.43605116, -0.8999219, 0), (0.1415917, 0.82911557, -0.5408504), (0, 1, 0), (0.43605113, 0.89992195, 0.00009700716), (0.42996904, 0.80277234, -0.41313824), (0.18612407, 0.63527036, -0.7495261), (0.40861106, 0.5916811, -0.6949464), (0.4085082, -0.5914956, -0.69516474), (0.18602818, -0.6351744, -0.7496313), (0.14155827, -0.8290684, -0.54093134), (0.42987314, -0.80269784, -0.4133826), (0.43605116, -0.8999219, 0), (0, -1, 0), (0.6652426, 0.60407555, -0.43879947), (0.6926329, 0.72129035, 0), (0.692633, -0.72129035, -2.6003585e-8), (0.6652175, -0.6039691, -0.438984), (-0.6652129, -0.60396135, -0.43900165), (-0.6926329, -0.72129035, 0), (-0.692633, 0.72129035, -2.6003585e-8), (-0.66522557, 0.6040471, -0.43886447), (-0.66522557, 0.6040471, -0.43886447), (-0.42985046, 0.80281734, -0.41317412), (-0.40859175, 0.59168637, -0.69495326), (0.40861106, 0.5916811, -0.6949464), (0.42996904, 0.80277234, -0.41313824), (0.6652426, 0.60407555, -0.43879947), (-0.6652129, -0.60396135, -0.43900165), (-0.40861386, -0.59146744, -0.6951266), (-0.42987466, -0.80269784, -0.41338092), (0.42987314, -0.80269784, -0.4133826), (0.4085082, -0.5914956, -0.69516474), (0.6652175, -0.6039691, -0.438984), (-0.42987466, -0.80269784, -0.41338092), (-0.14159346, -0.82911545, -0.54085016), (0, -1, 0), (-0.43605116, -0.8999219, -1.4743377e-8), (-0.42987466, -0.80269784, -0.41338092), (-0.40861386, -0.59146744, -0.6951266), (-0.18612398, -0.6352702, -0.7495262), (-0.14159346, -0.82911545, -0.54085016), (-0.40859175, 0.59168637, -0.69495326), (-0.18843487, 0.6352482, -0.74896735), (-0.18612398, -0.6352702, -0.7495262), (-0.40861386, -0.59146744, -0.6951266), (-0.40859175, 0.59168637, -0.69495326), (-0.42985046, 0.80281734, -0.41317412), (-0.14157848, 0.8291156, -0.54085374), (-0.18843487, 0.6352482, -0.74896735), (-0.42985046, 0.80281734, -0.41317412), (-0.43605116, 0.8999219, 0), (0, 1, 0), (-0.14157848, 0.8291156, -0.54085374), (-0.14159346, -0.82911545, -0.54085016), (-0.076606244, -0.8248269, -0.5601715), (0, -1, 0), (0, -1, 0), (-0.14159346, -0.82911545, -0.54085016), (-0.18612398, -0.6352702, -0.7495262), (-0.09879047, -0.6403385, -0.76171327), (-0.076606244, -0.8248269, -0.5601715), (-0.18843487, 0.6352482, -0.74896735), (-0.10008649, 0.64024746, -0.76162064), (-0.09879047, -0.6403385, -0.76171327), (-0.18612398, -0.6352702, -0.7495262), (-0.18843487, 0.6352482, -0.74896735), (-0.14157848, 0.8291156, -0.54085374), (-0.07658188, 0.8247796, -0.56024456), (-0.10008649, 0.64024746, -0.76162064), (-0.14157848, 0.8291156, -0.54085374), (0, 1, 0), (0, 1, 0), (-0.07658188, 0.8247796, -0.56024456), (-0.076606244, -0.8248269, -0.5601715), (0, -0.82263315, -0.5685725), (0, -1, 0), (0, -1, 0), (-0.076606244, -0.8248269, -0.5601715), (-0.09879047, -0.6403385, -0.76171327), (-0.000026733787, -0.6390146, -0.7691946), (0, -0.82263315, -0.5685725), (-0.10008649, 0.64024746, -0.76162064), (-1.1098823e-9, 0.6389835, -0.7692205), (-0.000026733787, -0.6390146, -0.7691946), (-0.09879047, -0.6403385, -0.76171327), (-0.10008649, 0.64024746, -0.76162064), (-0.07658188, 0.8247796, -0.56024456), (-0.000021155538, 0.8225855, -0.5686415), (-1.1098823e-9, 0.6389835, -0.7692205), (-0.07658188, 0.8247796, -0.56024456), (0, 1, 0), (0, 1, 0), (-0.000021155538, 0.8225855, -0.5686415), (0, -0.82263315, -0.5685725), (0.076606266, -0.8248269, -0.5601715), (0, -1, 0), (0, -1, 0), (0, -0.82263315, -0.5685725), (-0.000026733787, -0.6390146, -0.7691946), (0.09874059, -0.6403069, -0.7617461), (0.076606266, -0.8248269, -0.5601715), (-1.1098823e-9, 0.6389835, -0.7692205), (0.10008648, 0.6402474, -0.76162064), (0.09874059, -0.6403069, -0.7617461), (-0.000026733787, -0.6390146, -0.7691946), (-1.1098823e-9, 0.6389835, -0.7692205), (-0.000021155538, 0.8225855, -0.5686415), (0.07657243, 0.82482713, -0.56017596), (0.10008648, 0.6402474, -0.76162064), (-0.000021155538, 0.8225855, -0.5686415), (0, 1, 0), (0, 1, 0), (0.07657243, 0.82482713, -0.56017596), (0.076606266, -0.8248269, -0.5601715), (0.14155827, -0.8290684, -0.54093134), (0, -1, 0), (0, -1, 0), (0.076606266, -0.8248269, -0.5601715), (0.09874059, -0.6403069, -0.7617461), (0.18602818, -0.6351744, -0.7496313), (0.14155827, -0.8290684, -0.54093134), (0.10008648, 0.6402474, -0.76162064), (0.18612407, 0.63527036, -0.7495261), (0.18602818, -0.6351744, -0.7496313), (0.09874059, -0.6403069, -0.7617461), (0.10008648, 0.6402474, -0.76162064), (0.07657243, 0.82482713, -0.56017596), (0.1415917, 0.82911557, -0.5408504), (0.18612407, 0.63527036, -0.7495261), (0.07657243, 0.82482713, -0.56017596), (0, 1, 0), (0, 1, 0), (0.1415917, 0.82911557, -0.5408504), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.0005, -0.000501, -0.341191), (-0.0005, -0.000501, -0.341191), (0.0005, 0.0005, -0.341191), (-0.0005, 0.0005, -0.341191), (0.0005, -0.000501, -0.341191), (-0.0005, -0.000501, -0.341191), (0.0005, 0.0005, -0.341191), (-0.0005, 0.0005, -0.341191), (0.0005, -0.000501, -0.341191), (-0.0005, -0.000501, -0.341191), (0.0005, 0.0005, -0.341191), (-0.0005, 0.0005, -0.341191), (0.0005, -0.000501, -0.341191), (-0.0005, -0.000501, -0.341191), (0.0005, 0.0005, -0.341191), (-0.0005, 0.0005, -0.341191), (0.0005, -0.000501, -0.341191), (-0.0005, -0.000501, -0.341191), (0.0005, 0.0005, -0.341191), (-0.0005, 0.0005, -0.341191), (0.052265, -0.034118, 0.080539), (0.049652, -0.035769, 0.080539), (0.049652, -0.034118, 0.082368), (-0.049652, -0.034118, 0.082368), (-0.049652, -0.035769, 0.080539), (-0.052265, -0.034118, 0.080539), (0.052265, 0.033954, 0.080539), (0.049652, 0.033954, 0.082368), (0.049652, 0.035605, 0.080539), (-0.049652, 0.035605, 0.080539), (-0.049652, 0.033954, 0.082368), (-0.052265, 0.033954, 0.080539), (0.049652, -0.035769, 0.073029), (0.052265, -0.034118, 0.073029), (-0.052265, -0.034118, 0.073029), (-0.049652, -0.035769, 0.073029), (0.052265, 0.033954, 0.073029), (0.049652, 0.035605, 0.073029), (-0.049652, 0.035605, 0.073029), (-0.052265, 0.033954, 0.073029), (0.033101, 0.035605, 0.073029), (0.033101, 0.035605, 0.08578), (0.033101, 0.033954, 0.087609), (0.033101, -0.034118, 0.087609), (0.033101, -0.035769, 0.08578), (0.033101, -0.035769, 0.073029), (0.016551, 0.035605, 0.073029), (0.016551, 0.035605, 0.088988), (0.016551, 0.033954, 0.090817), (0.016551, -0.034118, 0.090817), (0.016551, -0.035769, 0.088988), (0.016551, -0.035769, 0.073029), (0, 0.035605, 0.073029), (0, 0.035605, 0.090193), (0, 0.033954, 0.092022), (0, -0.034118, 0.092022), (0, -0.035769, 0.090193), (0, -0.035769, 0.073029), (-0.016551, 0.035605, 0.073029), (-0.016551, 0.035605, 0.088988), (-0.016551, 0.033954, 0.090817), (-0.016551, -0.034118, 0.090817), (-0.016551, -0.035769, 0.088988), (-0.016551, -0.035769, 0.073029), (-0.033101, 0.035605, 0.073029), (-0.033101, 0.035605, 0.08578), (-0.033101, 0.033954, 0.087609), (-0.033101, -0.034118, 0.087609), (-0.033101, -0.035769, 0.08578), (-0.033101, -0.035769, 0.073029)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-20.43686, -6.067932), (-19.44145, -6.067932), (-19.44145, -5.071917), (-20.43686, -5.071917), (-14.606206, -6.067932), (-13.610876, -6.067932), (-13.610876, -5.071917), (-14.606206, -5.071917), (-6.990243, -5.568224), (-6.983289, -5.568224), (-6.983289, -5.561259), (-6.990243, -5.561259), (-6.971895, 0.214148), (-6.969961, 0.214148), (-6.969961, 0.286148), (-6.971895, 0.286148), (-6.971895, 0.212403), (-6.971895, 0.214148), (-6.979837, 0.214148), (-6.979837, 0.212403), (-7.54835, 0.332362), (-7.549999, 0.332362), (-7.549999, 0.315827), (-7.54835, 0.315827), (-6.942054, 0.785855), (-6.943987, 0.785855), (-6.943987, 0.713855), (-6.942054, 0.713855), (-6.943987, 0.785855), (-6.943987, 0.7876), (-6.95193, 0.7876), (-6.95193, 0.785855), (-6.971895, 0.286148), (-6.971895, 0.287894), (-6.979837, 0.287894), (-6.979837, 0.286148), (-7.478693, 0.332362), (-7.480343, 0.332362), (-7.480343, 0.315827), (-7.478693, 0.315827), (-6.943987, 0.712109), (-6.943987, 0.713855), (-6.95193, 0.713855), (-6.95193, 0.712109), (-7.195827, 0.314935), (-7.208281, 0.314935), (-7.208281, 0.298772), (-7.200946, 0.298772), (-7.54835, 0.332362), (-7.54835, 0.315827), (-7.480343, 0.315827), (-7.480343, 0.332362), (-7.077866, 0.314935), (-7.072747, 0.298772), (-7.065413, 0.298772), (-7.065413, 0.314935), (-6.943987, 0.785855), (-6.95193, 0.785855), (-6.95193, 0.713855), (-6.943987, 0.713855), (-6.971895, 0.286148), (-6.979837, 0.286148), (-6.979837, 0.214148), (-6.971895, 0.214148), (-7.54835, 0.417648), (-7.549999, 0.415036), (-7.54835, 0.415036), (-7.54835, 0.315827), (-7.549999, 0.315827), (-7.54835, 0.313216), (-7.480343, 0.417648), (-7.480343, 0.415036), (-7.478693, 0.415036), (-7.478693, 0.315827), (-7.480343, 0.315827), (-7.480343, 0.313216), (-7.072747, 0.395749), (-7.077866, 0.379586), (-7.065413, 0.379586), (-7.065413, 0.395749), (-7.478693, 0.415036), (-7.480343, 0.415036), (-7.480343, 0.398501), (-7.478693, 0.398501), (-7.54835, 0.415036), (-7.54835, 0.398501), (-7.480343, 0.398501), (-7.480343, 0.415036), (-7.54835, 0.415036), (-7.549999, 0.415036), (-7.549999, 0.398501), (-7.54835, 0.398501), (-7.200946, 0.395749), (-7.208281, 0.395749), (-7.208281, 0.379586), (-7.195827, 0.379586), (-7.077866, 0.379586), (-7.080998, 0.363423), (-7.065413, 0.363423), (-7.065413, 0.379586), (-7.478693, 0.398501), (-7.480343, 0.398501), (-7.480343, 0.381967), (-7.478693, 0.381967), (-7.54835, 0.398501), (-7.54835, 0.381967), (-7.480343, 0.381967), (-7.480343, 0.398501), (-7.54835, 0.398501), (-7.549999, 0.398501), (-7.549999, 0.381967), (-7.54835, 0.381967), (-7.195827, 0.379586), (-7.208281, 0.379586), (-7.208281, 0.363423), (-7.192696, 0.363423), (-7.080998, 0.363423), (-7.082175, 0.347261), (-7.065413, 0.347261), (-7.065413, 0.363423), (-7.478693, 0.381967), (-7.480343, 0.381967), (-7.480343, 0.365432), (-7.478693, 0.365432), (-7.54835, 0.381967), (-7.54835, 0.365432), (-7.480343, 0.365432), (-7.480343, 0.381967), (-7.54835, 0.381967), (-7.549999, 0.381967), (-7.549999, 0.365432), (-7.54835, 0.365432), (-7.192696, 0.363423), (-7.208281, 0.363423), (-7.208281, 0.347261), (-7.191518, 0.347261), (-7.082175, 0.347261), (-7.080998, 0.331098), (-7.065413, 0.331098), (-7.065413, 0.347261), (-7.478693, 0.365432), (-7.480343, 0.365432), (-7.480343, 0.348897), (-7.478693, 0.348897), (-7.54835, 0.365432), (-7.54835, 0.348897), (-7.480343, 0.348897), (-7.480343, 0.365432), (-7.54835, 0.365432), (-7.549999, 0.365432), (-7.549999, 0.348897), (-7.54835, 0.348897), (-7.191518, 0.347261), (-7.208281, 0.347261), (-7.208281, 0.331098), (-7.192696, 0.331098), (-7.080998, 0.331098), (-7.077866, 0.314935), (-7.065413, 0.314935), (-7.065413, 0.331098), (-7.478693, 0.348897), (-7.480343, 0.348897), (-7.480343, 0.332362), (-7.478693, 0.332362), (-7.54835, 0.348897), (-7.54835, 0.332362), (-7.480343, 0.332362), (-7.480343, 0.348897), (-7.54835, 0.348897), (-7.549999, 0.348897), (-7.549999, 0.332362), (-7.54835, 0.332362), (-7.192696, 0.331098), (-7.208281, 0.331098), (-7.208281, 0.314935), (-7.195827, 0.314935), (0.001992, -4.560472), (0.997975, -4.560472), (0.997975, -3.564456), (0.001992, -3.564456), (0.723845, -9.081764), (0.730799, -9.081764), (0.730799, -9.074806), (0.723845, -9.074806)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_AlarmClockButton_15_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0]
                rel material:binding = </root/_materials/M_AlarmClockButton_15_0>
            }

            def GeomSubset "M_AlarmClockButton_15_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [1]
                rel material:binding = </root/_materials/M_AlarmClockButton_15_1>
            }

            def GeomSubset "M_AlarmClockButton_15_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44]
                rel material:binding = </root/_materials/M_AlarmClockButton_15_2>
            }

            def GeomSubset "M_AlarmClockButton_15_3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [45]
                rel material:binding = </root/_materials/M_AlarmClockButton_15_3>
            }

            def GeomSubset "M_AlarmClockButton_15_4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [46]
                rel material:binding = </root/_materials/M_AlarmClockButton_15_4>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_AlarmClockButton_15_0"
        {
            token outputs:surface.connect = </root/_materials/M_AlarmClockButton_15_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.53676474, 0.53676474, 0.53676474)
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }

        def Material "M_AlarmClockButton_15_1"
        {
            token outputs:surface.connect = </root/_materials/M_AlarmClockButton_15_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.1397059, 0.1397059, 0.1397059)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_AlarmClockButton_15_1/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Copper_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_AlarmClockButton_15_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_AlarmClockButton_15_2"
        {
            token outputs:surface.connect = </root/_materials/M_AlarmClockButton_15_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_AlarmClockButton_15_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_AlarmClockButton_15_2/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_AlarmClockButton_15_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_AlarmClockButton_15_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_AlarmClockButton_15_3"
        {
            token outputs:surface.connect = </root/_materials/M_AlarmClockButton_15_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_AlarmClockButton_15_3/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Alarm_Clock_Readout3_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_AlarmClockButton_15_3/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_AlarmClockButton_15_4"
        {
            token outputs:surface.connect = </root/_materials/M_AlarmClockButton_15_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.8, 0.8, 0.8)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 1
                float inputs:specular = 0
                token outputs:surface
            }
        }
    }
}

