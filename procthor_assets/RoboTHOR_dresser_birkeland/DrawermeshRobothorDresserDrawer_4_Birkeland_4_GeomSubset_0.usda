#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "DrawermeshRobothorDresserDrawer_4_Birkeland_4_GeomSubset_0"
    {
        def Mesh "DrawermeshRobothorDresserDrawer_4_Birkeland_4_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 2, 2, 3, 0, 4, 5, 1, 1, 0, 4, 6, 7, 3, 3, 2, 6, 8, 9, 5, 5, 4, 8, 9, 10, 1, 1, 5, 9, 10, 11, 2, 2, 1, 10, 11, 12, 6, 6, 2, 11, 12, 13, 7, 7, 6, 12, 13, 14, 3, 3, 7, 13, 14, 15, 0, 0, 3, 14, 15, 8, 4, 4, 0, 15, 11, 10, 15, 14, 10, 9, 8, 15, 12, 11, 14, 13, 340, 341, 342, 343, 332, 333, 335, 334, 334, 335, 329, 328, 329, 335, 333, 331, 334, 328, 330, 332, 331, 333, 338, 337, 333, 332, 339, 338, 332, 330, 336, 339, 337, 338, 342, 341, 338, 339, 343, 342, 339, 336, 340, 343]
            rel material:binding = </root/_materials/M_RobothorDresserDrawer_4_Birkeland_0>
            normal3f[] normals = [(0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.99999994, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -0.99999994), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (0.99999994, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 0.99999994), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.99999994, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.170036, -0.267007, 0.200695), (-0.170036, -0.267007, -0.053195), (0.170036, -0.267007, -0.053195), (0.170036, -0.267007, 0.200695), (-0.487602, -0.267007, 0.200695), (-0.487602, -0.267007, -0.053195), (0.487602, -0.267007, -0.053195), (0.487602, -0.267007, 0.200695), (-0.487602, -0.252004, 0.200695), (-0.487602, -0.252004, -0.053195), (-0.170036, -0.252004, -0.053195), (0.170036, -0.252004, -0.053195), (0.487602, -0.252004, -0.053195), (0.487602, -0.252004, 0.200695), (0.170036, -0.252004, 0.200695), (-0.170036, -0.252004, 0.200695), (-0.290381, -0.272575, 0.067043), (-0.289435, -0.267007, 0.068571), (-0.290777, -0.272518, 0.068571), (-0.291857, -0.272361, 0.06969), (-0.290554, -0.267007, 0.06969), (-0.293333, -0.272148, 0.070099), (-0.292082, -0.267007, 0.070099), (-0.29361, -0.267007, 0.06969), (-0.294809, -0.271933, 0.06969), (-0.29589, -0.271777, 0.068571), (-0.294728, -0.267007, 0.068571), (-0.295138, -0.267007, 0.067043), (-0.296285, -0.27172, 0.067043), (-0.29589, -0.271777, 0.065515), (-0.294728, -0.267007, 0.065515), (-0.29361, -0.267007, 0.064396), (-0.294809, -0.271933, 0.064396), (-0.293333, -0.272148, 0.063987), (-0.292082, -0.267007, 0.063987), (-0.290554, -0.267007, 0.064396), (-0.291857, -0.272361, 0.064396), (-0.289435, -0.267007, 0.065515), (-0.290777, -0.272518, 0.065515), (-0.289025, -0.267007, 0.067043), (-0.294711, -0.277652, 0.068571), (-0.29568, -0.27735, 0.06969), (-0.297003, -0.276936, 0.070099), (-0.298327, -0.276524, 0.06969), (-0.299295, -0.276222, 0.068571), (-0.29965, -0.276111, 0.067043), (-0.299295, -0.276222, 0.065515), (-0.298327, -0.276524, 0.064396), (-0.297003, -0.276936, 0.063987), (-0.29568, -0.27735, 0.064396), (-0.294711, -0.277652, 0.065515), (-0.294357, -0.277763, 0.067043), (-0.30097, -0.282061, 0.068571), (-0.301761, -0.281634, 0.06969), (-0.302842, -0.28105, 0.070099), (-0.303922, -0.280465, 0.06969), (-0.304713, -0.280038, 0.068571), (-0.305003, -0.279881, 0.067043), (-0.304713, -0.280038, 0.065515), (-0.303922, -0.280465, 0.064396), (-0.302842, -0.28105, 0.063987), (-0.301761, -0.281634, 0.064396), (-0.30097, -0.282061, 0.065515), (-0.300681, -0.282218, 0.067043), (-0.308922, -0.285636, 0.067043), (-0.309127, -0.285444, 0.068571), (-0.309686, -0.284921, 0.06969), (-0.31045, -0.284206, 0.070099), (-0.311214, -0.28349, 0.06969), (-0.311774, -0.282966, 0.068571), (-0.311978, -0.282775, 0.067043), (-0.311774, -0.282966, 0.065515), (-0.311214, -0.28349, 0.064396), (-0.31045, -0.284206, 0.063987), (-0.309686, -0.284921, 0.064396), (-0.309127, -0.285444, 0.065515), (-0.318519, -0.287785, 0.067043), (-0.318625, -0.287571, 0.068571), (-0.318915, -0.286987, 0.06969), (-0.31931, -0.286189, 0.070099), (-0.319706, -0.285392, 0.06969), (-0.319995, -0.284808, 0.068571), (-0.320101, -0.284593, 0.067043), (-0.319995, -0.284808, 0.065515), (-0.319706, -0.285392, 0.064396), (-0.31931, -0.286189, 0.063987), (-0.318915, -0.286987, 0.064396), (-0.318625, -0.287571, 0.065515), (-0.328819, -0.288296, 0.068571), (-0.328819, -0.287692, 0.06969), (-0.328819, -0.286866, 0.070099), (-0.328819, -0.28604, 0.06969), (-0.328819, -0.285436, 0.068571), (-0.328819, -0.285214, 0.067043), (-0.328819, -0.285436, 0.065515), (-0.328819, -0.28604, 0.064396), (-0.328819, -0.286866, 0.063987), (-0.328819, -0.287692, 0.064396), (-0.328819, -0.288296, 0.065515), (-0.328819, -0.288518, 0.067043), (-0.339118, -0.287785, 0.067043), (-0.339012, -0.287571, 0.068571), (-0.338722, -0.286987, 0.06969), (-0.338327, -0.286189, 0.070099), (-0.337931, -0.285392, 0.06969), (-0.337642, -0.284808, 0.068571), (-0.337536, -0.284593, 0.067043), (-0.337642, -0.284808, 0.065515), (-0.337931, -0.285392, 0.064396), (-0.338327, -0.286189, 0.063987), (-0.338722, -0.286987, 0.064396), (-0.339012, -0.287571, 0.065515), (-0.34851, -0.285444, 0.068571), (-0.347951, -0.284921, 0.06969), (-0.347187, -0.284206, 0.070099), (-0.346423, -0.28349, 0.06969), (-0.345864, -0.282966, 0.068571), (-0.345659, -0.282775, 0.067043), (-0.345864, -0.282966, 0.065515), (-0.346423, -0.28349, 0.064396), (-0.347187, -0.284206, 0.063987), (-0.347951, -0.284921, 0.064396), (-0.34851, -0.285444, 0.065515), (-0.348715, -0.285636, 0.067043), (-0.356667, -0.282061, 0.068571), (-0.355876, -0.281634, 0.06969), (-0.354796, -0.28105, 0.070099), (-0.353715, -0.280465, 0.06969), (-0.352924, -0.280038, 0.068571), (-0.352634, -0.279881, 0.067043), (-0.352924, -0.280038, 0.065515), (-0.353715, -0.280465, 0.064396), (-0.354796, -0.28105, 0.063987), (-0.355876, -0.281634, 0.064396), (-0.356667, -0.282061, 0.065515), (-0.356956, -0.282218, 0.067043), (-0.36328, -0.277763, 0.067043), (-0.362926, -0.277652, 0.068571), (-0.361957, -0.27735, 0.06969), (-0.360634, -0.276936, 0.070099), (-0.35931, -0.276524, 0.06969), (-0.358342, -0.276222, 0.068571), (-0.357987, -0.276111, 0.067043), (-0.358342, -0.276222, 0.065515), (-0.35931, -0.276524, 0.064396), (-0.360634, -0.276936, 0.063987), (-0.361957, -0.27735, 0.064396), (-0.362926, -0.277652, 0.065515), (-0.36686, -0.272518, 0.068571), (-0.36578, -0.272361, 0.06969), (-0.364304, -0.272148, 0.070099), (-0.362828, -0.271933, 0.06969), (-0.361747, -0.271777, 0.068571), (-0.361352, -0.27172, 0.067043), (-0.361747, -0.271777, 0.065515), (-0.362828, -0.271933, 0.064396), (-0.364304, -0.272148, 0.063987), (-0.36578, -0.272361, 0.064396), (-0.36686, -0.272518, 0.065515), (-0.367256, -0.272575, 0.067043), (-0.368612, -0.267007, 0.067043), (-0.368202, -0.267007, 0.068571), (-0.367084, -0.267007, 0.06969), (-0.365556, -0.267007, 0.070099), (-0.364028, -0.267007, 0.06969), (-0.362909, -0.267007, 0.068571), (-0.3625, -0.267007, 0.067043), (-0.362909, -0.267007, 0.065515), (-0.364028, -0.267007, 0.064396), (-0.365556, -0.267007, 0.063987), (-0.367084, -0.267007, 0.064396), (-0.368202, -0.267007, 0.065515), (0.367256, -0.272575, 0.067043), (0.368202, -0.267007, 0.068571), (0.36686, -0.272518, 0.068571), (0.36578, -0.272361, 0.06969), (0.367084, -0.267007, 0.06969), (0.364304, -0.272148, 0.070099), (0.365556, -0.267007, 0.070099), (0.364028, -0.267007, 0.06969), (0.362828, -0.271933, 0.06969), (0.361748, -0.271777, 0.068571), (0.362909, -0.267007, 0.068571), (0.3625, -0.267007, 0.067043), (0.361352, -0.27172, 0.067043), (0.361748, -0.271777, 0.065515), (0.362909, -0.267007, 0.065515), (0.364028, -0.267007, 0.064396), (0.362828, -0.271933, 0.064396), (0.364304, -0.272148, 0.063987), (0.365556, -0.267007, 0.063987), (0.367084, -0.267007, 0.064396), (0.36578, -0.272361, 0.064396), (0.368202, -0.267007, 0.065515), (0.36686, -0.272518, 0.065515), (0.368612, -0.267007, 0.067043), (0.362926, -0.277652, 0.068571), (0.361957, -0.27735, 0.06969), (0.360634, -0.276936, 0.070099), (0.359311, -0.276524, 0.06969), (0.358342, -0.276222, 0.068571), (0.357987, -0.276111, 0.067043), (0.358342, -0.276222, 0.065515), (0.359311, -0.276524, 0.064396), (0.360634, -0.276936, 0.063987), (0.361957, -0.27735, 0.064396), (0.362926, -0.277652, 0.065515), (0.36328, -0.277763, 0.067043), (0.356667, -0.282061, 0.068571), (0.355876, -0.281634, 0.06969), (0.354796, -0.28105, 0.070099), (0.353715, -0.280465, 0.06969), (0.352924, -0.280038, 0.068571), (0.352635, -0.279881, 0.067043), (0.352924, -0.280038, 0.065515), (0.353715, -0.280465, 0.064396), (0.354796, -0.28105, 0.063987), (0.355876, -0.281634, 0.064396), (0.356667, -0.282061, 0.065515), (0.356957, -0.282218, 0.067043), (0.348715, -0.285636, 0.067043), (0.348511, -0.285444, 0.068571), (0.347951, -0.284921, 0.06969), (0.347187, -0.284206, 0.070099), (0.346423, -0.28349, 0.06969), (0.345864, -0.282966, 0.068571), (0.345659, -0.282775, 0.067043), (0.345864, -0.282966, 0.065515), (0.346423, -0.28349, 0.064396), (0.347187, -0.284206, 0.063987), (0.347951, -0.284921, 0.064396), (0.348511, -0.285444, 0.065515), (0.339118, -0.287785, 0.067043), (0.339012, -0.287571, 0.068571), (0.338722, -0.286987, 0.06969), (0.338327, -0.286189, 0.070099), (0.337932, -0.285392, 0.06969), (0.337642, -0.284808, 0.068571), (0.337536, -0.284593, 0.067043), (0.337642, -0.284808, 0.065515), (0.337932, -0.285392, 0.064396), (0.338327, -0.286189, 0.063987), (0.338722, -0.286987, 0.064396), (0.339012, -0.287571, 0.065515), (0.328819, -0.288296, 0.068571), (0.328819, -0.287692, 0.06969), (0.328819, -0.286866, 0.070099), (0.328819, -0.28604, 0.06969), (0.328819, -0.285436, 0.068571), (0.328819, -0.285214, 0.067043), (0.328819, -0.285436, 0.065515), (0.328819, -0.28604, 0.064396), (0.328819, -0.286866, 0.063987), (0.328819, -0.287692, 0.064396), (0.328819, -0.288296, 0.065515), (0.328819, -0.288518, 0.067043), (0.31852, -0.287785, 0.067043), (0.318625, -0.287571, 0.068571), (0.318915, -0.286987, 0.06969), (0.319311, -0.286189, 0.070099), (0.319706, -0.285392, 0.06969), (0.319996, -0.284808, 0.068571), (0.320102, -0.284593, 0.067043), (0.319996, -0.284808, 0.065515), (0.319706, -0.285392, 0.064396), (0.319311, -0.286189, 0.063987), (0.318915, -0.286987, 0.064396), (0.318625, -0.287571, 0.065515), (0.309127, -0.285444, 0.068571), (0.309686, -0.284921, 0.06969), (0.31045, -0.284206, 0.070099), (0.311214, -0.28349, 0.06969), (0.311774, -0.282966, 0.068571), (0.311978, -0.282775, 0.067043), (0.311774, -0.282966, 0.065515), (0.311214, -0.28349, 0.064396), (0.31045, -0.284206, 0.063987), (0.309686, -0.284921, 0.064396), (0.309127, -0.285444, 0.065515), (0.308922, -0.285636, 0.067043), (0.30097, -0.282061, 0.068571), (0.301761, -0.281634, 0.06969), (0.302842, -0.28105, 0.070099), (0.303922, -0.280465, 0.06969), (0.304713, -0.280038, 0.068571), (0.305003, -0.279881, 0.067043), (0.304713, -0.280038, 0.065515), (0.303922, -0.280465, 0.064396), (0.302842, -0.28105, 0.063987), (0.301761, -0.281634, 0.064396), (0.30097, -0.282061, 0.065515), (0.300681, -0.282218, 0.067043), (0.294357, -0.277763, 0.067043), (0.294712, -0.277652, 0.068571), (0.29568, -0.27735, 0.06969), (0.297003, -0.276936, 0.070099), (0.298327, -0.276524, 0.06969), (0.299296, -0.276222, 0.068571), (0.29965, -0.276111, 0.067043), (0.299296, -0.276222, 0.065515), (0.298327, -0.276524, 0.064396), (0.297003, -0.276936, 0.063987), (0.29568, -0.27735, 0.064396), (0.294712, -0.277652, 0.065515), (0.290777, -0.272518, 0.068571), (0.291858, -0.272361, 0.06969), (0.293333, -0.272148, 0.070099), (0.294809, -0.271933, 0.06969), (0.29589, -0.271777, 0.068571), (0.296285, -0.27172, 0.067043), (0.29589, -0.271777, 0.065515), (0.294809, -0.271933, 0.064396), (0.293333, -0.272148, 0.063987), (0.291858, -0.272361, 0.064396), (0.290777, -0.272518, 0.065515), (0.290382, -0.272575, 0.067043), (0.289026, -0.267007, 0.067043), (0.289435, -0.267007, 0.068571), (0.290554, -0.267007, 0.06969), (0.292082, -0.267007, 0.070099), (0.29361, -0.267007, 0.06969), (0.294728, -0.267007, 0.068571), (0.295138, -0.267007, 0.067043), (0.294728, -0.267007, 0.065515), (0.29361, -0.267007, 0.064396), (0.292082, -0.267007, 0.063987), (0.290554, -0.267007, 0.064396), (0.289435, -0.267007, 0.065515), (-0.472009, -0.252004, -0.042748), (0.472009, -0.252004, -0.042748), (-0.472009, -0.252004, 0.171575), (0.472009, -0.252004, 0.171575), (-0.472009, 0.128746, 0.171575), (0.472009, 0.128746, 0.171575), (-0.472009, 0.128746, -0.042748), (0.472009, 0.128746, -0.042748), (-0.460836, -0.252004, 0.171575), (0.460836, -0.252004, 0.171575), (0.460836, 0.1201, 0.171575), (-0.460836, 0.1201, 0.171575), (-0.460836, -0.252004, -0.033469), (0.460836, -0.252004, -0.033469), (0.460836, 0.1201, -0.033469), (-0.460836, 0.1201, -0.033469)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(0.073287, 0.135007), (0.073287, -0.360873), (0.737488, -0.360873), (0.737488, -0.360873), (0.737488, 0.135007), (0.073287, 0.135007), (-0.54696, 0.135007), (-0.54696, -0.360873), (0.073287, -0.360873), (0.073287, -0.360873), (0.073287, 0.135007), (-0.54696, 0.135007), (1.357735, -0.360873), (1.357735, 0.135007), (0.737488, 0.135007), (0.737488, 0.135007), (0.737488, -0.360873), (1.357735, -0.360873), (-0.173065, -0.082134), (0.322822, -0.082134), (0.322822, -0.052831), (0.322822, -0.052831), (-0.173065, -0.052831), (-0.173065, -0.082134), (-0.546965, 0.091923), (0.073285, 0.091923), (0.073285, 0.121225), (0.073285, 0.121225), (-0.546965, 0.121225), (-0.546965, 0.091923), (0.073285, 0.091923), (0.73749, 0.091923), (0.73749, 0.121225), (0.73749, 0.121225), (0.073285, 0.121225), (0.073285, 0.091923), (0.73749, 0.091923), (1.35774, 0.091923), (1.35774, 0.121225), (1.35774, 0.121225), (0.73749, 0.121225), (0.73749, 0.091923), (0.322821, -0.066377), (-0.173065, -0.066377), (-0.173065, -0.09568), (-0.173065, -0.09568), (0.322821, -0.09568), (0.322821, -0.066377), (1.357744, 0.135369), (0.737491, 0.135369), (0.737491, 0.106066), (0.737491, 0.106066), (1.357744, 0.106066), (1.357744, 0.135369), (0.737491, 0.135369), (0.073284, 0.135369), (0.073284, 0.106066), (0.073284, 0.106066), (0.737491, 0.106066), (0.737491, 0.135369), (0.073284, 0.135369), (-0.546969, 0.135369), (-0.546969, 0.106066), (-0.546969, 0.106066), (0.073284, 0.106066), (0.073284, 0.135369), (0.737488, 0.276616), (0.073287, 0.276616), (0.073287, -0.219264), (0.737488, -0.219264), (0.073287, 0.276616), (-0.54696, 0.276616), (-0.54696, -0.219264), (0.073287, -0.219264), (1.357735, 0.276616), (0.737488, 0.276616), (0.737488, -0.219264), (1.357735, -0.219264), (-0.68829, -1.129599), (1.111853, -1.129599), (1.111853, -0.402833), (-0.68829, -0.402833), (-0.210293, -1.411714), (1.633492, -1.411714), (1.633493, -0.993113), (-0.210293, -0.993114), (-0.210293, -1.40976), (1.633492, -1.40976), (1.633492, -0.666107), (-0.210293, -0.666107), (-0.016182, -1.251679), (0.727471, -1.251679), (0.727471, -0.833079), (-0.016182, -0.833079), (-0.016182, -1.371247), (0.727471, -1.371247), (0.727471, -0.952647), (-0.016182, -0.952647), (1.63349, -1.201146), (1.633491, -0.457495), (1.611669, -0.474381), (1.611669, -1.201146), (1.633491, -0.457495), (-0.210291, -0.457495), (-0.18847, -0.474381), (1.611669, -0.474381), (-0.210291, -0.457495), (-0.210291, -1.201146), (-0.18847, -1.201146), (-0.18847, -0.474381), (0.70474, -1.078809), (-0.022027, -1.078809), (-0.022027, -1.479285), (0.70474, -1.479285), (1.111853, -0.725041), (-0.68829, -0.725041), (-0.68829, -1.125518), (1.111853, -1.125518), (0.70474, -1.193441), (-0.022027, -1.193441), (-0.022027, -1.593917), (0.70474, -1.593917)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_RobothorDresserDrawer_4_Birkeland_0"
        {
            token outputs:surface.connect = </root/_materials/M_RobothorDresserDrawer_4_Birkeland_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_RobothorDresserDrawer_4_Birkeland_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/WoodGrains2.jpg@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_RobothorDresserDrawer_4_Birkeland_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

