#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshWindowSlider_36X36_0_GeomSubset_1"
    {
        def Mesh "MeshWindowSlider_36X36_0_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [88, 89, 90, 91, 92, 93, 94, 95, 89, 88, 95, 94, 88, 91, 92, 95, 91, 90, 93, 92, 90, 89, 94, 93, 96, 97, 98, 99, 100, 101, 102, 103, 97, 96, 103, 102, 96, 99, 100, 103, 99, 98, 101, 100, 98, 97, 102, 101]
            rel material:binding = </root/_materials/M_WindowSlider_36X36_1>
            normal3f[] normals = [(0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.4572, -0.040625, 0.458245), (-0.4572, -0.040625, -0.456155), (0.4572, -0.040624, -0.456155), (0.426381, -0.040625, -0.424836), (-0.426381, -0.040625, -0.424836), (-0.426381, -0.040625, 0.426927), (-0.426381, 0.040625, 0.426927), (-0.426381, 0.040625, -0.424836), (0.426381, 0.040626, -0.424836), (0.4572, 0.040626, -0.456155), (-0.4572, 0.040625, -0.456155), (-0.4572, 0.040625, 0.458245), (0.426381, 0.040626, 0.426927), (0.426381, -0.040625, 0.426927), (0.4572, 0.040626, 0.458245), (0.4572, -0.040624, 0.458245), (0.426381, 0.031626, 0.426927), (0.426381, -0.031624, 0.426927), (-0.426381, -0.031625, 0.426927), (-0.426381, 0.031625, 0.426927), (-0.426381, 0.031625, -0.424836), (-0.426381, -0.031625, -0.424836), (0.426381, -0.031624, -0.424836), (0.426381, 0.031626, -0.424836), (0.426381, 0.035123, 0.426927), (0.426381, -0.035122, 0.426927), (-0.426381, -0.035123, 0.426927), (-0.426381, 0.035122, 0.426927), (-0.426381, 0.035122, -0.424836), (-0.426381, -0.035123, -0.424836), (0.426381, -0.035122, -0.424836), (0.426381, 0.035123, -0.424836), (0.390674, 0.035123, 0.390542), (0.390674, -0.035122, 0.390542), (-0.390674, -0.035123, 0.390542), (-0.390674, 0.035122, 0.390542), (-0.390674, 0.035122, -0.388451), (-0.390674, -0.035123, -0.388451), (0.390674, -0.035122, -0.388451), (0.390674, 0.035123, -0.388451), (0.390674, 0.021625, 0.390542), (0.390674, -0.021624, 0.390542), (-0.390674, -0.021625, 0.390542), (-0.390674, 0.021625, 0.390542), (-0.390674, 0.021625, -0.388451), (-0.390674, -0.021625, -0.388451), (0.390674, -0.021624, -0.388451), (0.390674, 0.021625, -0.388451), (0.426381, 0.021625, 0.426927), (0.426381, -0.021624, 0.426927), (-0.426381, -0.021625, 0.426927), (-0.426381, 0.021625, 0.426927), (-0.426381, 0.021625, -0.424836), (-0.426381, -0.021625, -0.424836), (0.426381, -0.021624, -0.424836), (0.426381, 0.021625, -0.424836), (0.425512, 0.021585, -0.425358), (-0, 0.021584, -0.425358), (0.425512, 0.021585, 0.427448), (-0, 0.021584, 0.427448), (0.425512, 0, 0.427448), (0, -0, 0.427448), (0.425512, 0, -0.425358), (0, -0, -0.425358), (0.365512, 0.021585, -0.365358), (0.06, 0.021584, -0.365358), (0.06, 0.021584, 0.367448), (0.365512, 0.021585, 0.367448), (0.365512, 0, 0.367448), (0.06, 0, 0.367448), (0.06, 0, -0.365358), (0.365512, 0, -0.365358), (0, -0, -0.425358), (-0.424395, -0, -0.425358), (0, -0, 0.427448), (-0.424395, -0, 0.427448), (0, -0.021292, 0.427448), (-0.424395, -0.021292, 0.427448), (0, -0.021292, -0.425358), (-0.424395, -0.021292, -0.425358), (-0.06, -0, -0.365358), (-0.364395, -0, -0.365358), (-0.364395, -0, 0.367448), (-0.06, -0, 0.367448), (-0.06, -0.021292, 0.367448), (-0.364395, -0.021292, 0.367448), (-0.364395, -0.021292, -0.365358), (-0.06, -0.021292, -0.365358), (0.365512, 0.016752, -0.365358), (0.06, 0.016752, -0.365358), (0.06, 0.016752, 0.367448), (0.365512, 0.016752, 0.367448), (0.365512, 0.005302, 0.367448), (0.06, 0.005302, 0.367448), (0.06, 0.005302, -0.365358), (0.365512, 0.005302, -0.365358), (-0.06, -0.015021, 0.367448), (-0.364395, -0.015021, 0.367448), (-0.364395, -0.015021, -0.365358), (-0.06, -0.015021, -0.365358), (-0.06, -0.005297, -0.365358), (-0.364395, -0.005297, -0.365358), (-0.364395, -0.005297, 0.367448), (-0.06, -0.005297, 0.367448), (-0, 0.021427, -0.045446), (-0.007429, 0.021427, -0.045446), (-0, 0.021427, 0.048211), (-0.007429, 0.021427, 0.048211), (0, 0.000965, 0.054385), (-0.007429, 0.000965, 0.054385), (0, 0.000965, -0.05162), (-0.007429, 0.000965, -0.05162), (-0.007429, 0.021427, 0.029847), (-0, 0.021427, 0.029847), (0, 0.000965, 0.035495), (-0.007429, 0.000965, 0.035495), (-0.007429, 0.021427, -0.027082), (-0, 0.021427, -0.027082), (0, 0.000965, -0.03273), (-0.007429, 0.000965, -0.03273), (-0.013191, 0.000965, -0.03273), (-0.013191, 0.021427, -0.027082), (-0.013191, 0.000965, 0.035495), (-0.013191, 0.021427, 0.029847), (-0.019876, 0.005384, 0.010462), (-0.019876, 0.001547, 0.006624), (-0.019876, 0.000142, 0.001382), (-0.019876, 0.001729, -0.00386), (-0.019876, 0.010626, -0.00386), (-0.019876, 0.019524, -0.00386), (-0.019876, 0.02111, 0.001382), (-0.019876, 0.019706, 0.006624), (-0.019876, 0.015868, 0.010462), (-0.019876, 0.010626, 0.011866), (-0.013191, 0.005384, 0.010462), (-0.013191, 0.001547, 0.006624), (-0.013191, 0.000142, 0.001382), (-0.013191, 0.001729, -0.00386), (-0.013191, 0.010626, -0.00386), (-0.013191, 0.019524, -0.00386), (-0.013191, 0.02111, 0.001382), (-0.013191, 0.019706, 0.006624), (-0.013191, 0.015868, 0.010462), (-0.013191, 0.010626, 0.011866), (-0.019876, 0.010626, 0.001382), (-0.013191, 0.010626, 0.001382), (-0.02096, 0.007221, -0.058794), (-0.016529, 0.007221, -0.058794), (-0.02096, 0.010626, -0.058794), (-0.016529, 0.010626, -0.058794), (-0.02096, 0.014032, -0.058794), (-0.016529, 0.014032, -0.058794), (-0.019424, 0.008327, -0.080907), (-0.016529, 0.008327, -0.080907), (-0.019424, 0.010626, -0.080907), (-0.016529, 0.010626, -0.080907), (-0.019424, 0.012926, -0.080907), (-0.016529, 0.012926, -0.080907), (-0.006115, 0.007221, -0.061227), (-0.006115, 0.010626, -0.061227), (-0.006115, 0.008327, -0.078369), (-0.006115, 0.010626, -0.078369), (-0.006115, 0.014032, -0.061227), (-0.006115, 0.012926, -0.078369), (-0.016529, 0.015225, -0.045328), (-0.020712, 0.015225, -0.045328), (-0.020712, 0.010626, -0.045328), (-0.020712, 0.006027, -0.045328), (-0.016529, 0.006027, -0.045328), (-0.016529, 0.010626, -0.045328)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-17.38314, 1.041893), (-17.144459, 1.041893), (-17.144459, 1.614398), (-17.38314, 1.614398), (-16.699808, 1.041894), (-16.461126, 1.041894), (-16.461126, 1.614398), (-16.699808, 1.614398), (-18.003082, 2.400293), (-18.003082, 2.638938), (-18.012028, 2.638938), (-18.012028, 2.400293), (-16.195278, 1.041876), (-16.195278, 1.614415), (-16.204224, 1.614415), (-16.204224, 1.041876), (-18.078613, 2.638953), (-18.078613, 2.400278), (-18.069668, 2.400278), (-18.069668, 2.638953), (-16.135891, 1.614405), (-16.135891, 1.041887), (-16.126945, 1.041887), (-16.126945, 1.614405), (-16.439342, 2.578116), (-16.201534, 2.578116), (-16.201534, 3.150621), (-16.439342, 3.150621), (-17.10886, 2.578116), (-16.871052, 2.578116), (-16.871052, 3.15062), (-17.10886, 3.15062), (-18.308842, 2.53116), (-18.308842, 2.769007), (-18.31644, 2.769007), (-18.31644, 2.53116), (-17.36003, 3.150651), (-17.36003, 2.578084), (-17.352434, 2.578084), (-17.352434, 3.150651), (-18.379475, 2.768976), (-18.379475, 2.531191), (-18.37188, 2.531191), (-18.37188, 2.768976), (-17.41547, 2.578084), (-17.41547, 3.150651), (-17.423065, 3.150651), (-17.423065, 2.578084)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_WindowSlider_36X36_1"
        {
            token outputs:surface.connect = </root/_materials/M_WindowSlider_36X36_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }
    }
}

