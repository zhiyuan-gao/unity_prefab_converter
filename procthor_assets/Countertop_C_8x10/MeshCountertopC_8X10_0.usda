#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.0"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "CountertopC_8X10"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "CountertopC_8X10" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-1.220527, -1.532032, -0.517404), (1.217872, 1.535968, 0.418626)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 3, 3, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [44, 45, 9, 10, 0, 15, 16, 4, 2, 3, 6, 5, 0, 1, 8, 7, 3, 2, 10, 9, 14, 15, 0, 7, 6, 3, 11, 12, 3, 9, 13, 11, 2, 15, 14, 10, 16, 15, 2, 5, 46, 30, 29, 47, 26, 1, 0, 4, 4, 27, 28, 26, 6, 29, 30, 5, 32, 27, 4, 16, 6, 12, 31, 29, 5, 30, 32, 16, 7, 8, 45, 44, 8, 13, 9, 45, 14, 7, 44, 10, 27, 32, 30, 46, 31, 28, 47, 29, 28, 27, 46, 47, 12, 11, 17, 18, 11, 13, 19, 17, 19, 13, 8, 21, 20, 22, 23, 36, 37, 38, 39, 18, 17, 20, 21, 23, 22, 25, 24, 12, 18, 33, 31, 33, 28, 31, 33, 35, 28, 26, 24, 25, 1, 19, 8, 34, 40, 41, 42, 43, 19, 34, 37, 36, 35, 33, 40, 43, 18, 21, 40, 33, 21, 23, 41, 40, 23, 24, 42, 41, 24, 26, 43, 42, 26, 28, 35, 43, 8, 1, 37, 34, 1, 25, 38, 37, 25, 22, 39, 38, 22, 20, 36, 39, 20, 17, 19, 36]
            rel material:binding = </root/_materials/M_CountertopC_8X10_0>
            normal3f[] normals = [(0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (-8.286381e-8, 0, 1), (1.0326854e-8, 0, 1), (1.3769498e-8, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, -2.2854287e-8, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-2.486078e-7, 0, 1), (-8.286381e-8, 0, 1), (0, 0, 1), (0, 0, 1), (7.578069e-8, 0, -1), (0, 0, -1), (0, 0, -1), (7.5761534e-8, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-3.3149266e-7, 0, 1), (-8.286381e-8, 0, 1), (-2.486078e-7, 0, 1), (-3.3147862e-7, 0, 1), (1.0326854e-8, 0, 1), (-8.286381e-8, 0, 1), (-3.3149266e-7, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 1.10016405e-8, 0), (1, 1.3194199e-8, 0), (-1, -4.0408807e-7, 0), (-1, -4.0408807e-7, 0), (-1, -4.0408807e-7, 0), (-1, -4.0408807e-7, 0), (6.884809e-9, 0, 1), (1.3769423e-8, 0, 1), (1.3769498e-8, 0, 1), (1.0326854e-8, 0, 1), (7.578069e-8, 0, -1), (7.5761534e-8, 0, -1), (7.5778296e-8, 0, -1), (7.576873e-8, 0, -1), (0, 0, 1), (0, 0, 1), (6.884809e-9, 0, 1), (1.0326854e-8, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-2.486078e-7, 0, 1), (0, 0, 1), (0, 0, 1), (-3.3147862e-7, 0, 1), (1.3769423e-8, 0, 1), (6.884809e-9, 0, 1), (0, 0, 1), (0, 0, 1), (7.5778296e-8, 0, -1), (0, 0, -1), (0, 0, -1), (7.576873e-8, 0, -1), (1, 1.10016405e-8, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0.0000016742842, -1, 0), (0.0000016742842, -1, 0), (0.0000016742842, -1, 0), (0.0000016742842, -1, 0), (0.006612313, 0.004682383, -0.9999671), (-0.0065888558, 0.004715071, -0.9999671), (-0.006589613, 0.004713751, -0.9999671), (0.006585512, 0.004719531, -0.9999672), (-0.0001773661, -0.00021677045, -1), (0.00017736483, -0.00021677089, -1), (0.00017738217, -0.0002167474, -0.99999994), (-0.0001773823, -0.00021674842, -0.99999994), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -0.99999994, 0), (0, -1, 0), (0, -0.99999994, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-0.0000016742899, -1, 0), (-0.0000016742899, -1, 0), (-0.0000016742899, -1, 0), (-0.0000016742899, -1, 0), (-0.0063002096, 0.00079992815, -0.99997985), (-0.00011302374, 0.002145793, -0.9999976), (-0.00011302374, 0.002145793, -0.9999976), (-0.0076782033, 0.0005046838, -0.9999704), (0.000113024085, 0.0021120172, -0.99999774), (0.006248583, 0.00081100024, -0.9999802), (0.0076213786, 0.0005171367, -0.9999709), (0.000113024085, 0.0021120172, -0.99999774), (0.006612313, 0.004682383, -0.9999671), (0.006585512, 0.004719531, -0.9999672), (0.0076213786, 0.0005171367, -0.9999709), (0.006248583, 0.00081100024, -0.9999802), (-0.99999994, -0.0004233134, 0), (-0.99999994, -0.0004233134, 0), (-0.99999994, -0.0004233134, 0), (-0.99999994, -0.0004233134, 0), (-0.0001773661, -0.00021677045, -1), (-0.0001773823, -0.00021674842, -0.99999994), (-0.0003547642, 0.000023903862, -0.99999994), (-0.0003547642, 0.000023903862, -0.99999994), (1, 2.503361e-8, 0), (1, 1.3194199e-8, 0), (1, 2.989595e-8, 0), (1, 2.503361e-8, 0), (1, 1.3194199e-8, 0), (1, 1.10016405e-8, 0), (1, 3.300492e-8, 0), (1, 2.989595e-8, 0), (-1, 0, 0), (-1, -2.2854287e-8, 0), (-1, -2.1479755e-8, 0), (-0.99999994, 0, 0), (-1, -2.2854287e-8, 0), (-0.99999994, -5.5073883e-8, 0), (-0.99999994, -5.5073883e-8, 0), (-1, -2.1479755e-8, 0), (0.00017738217, -0.0002167474, -0.99999994), (0.00017736483, -0.00021677089, -1), (0.00035476225, 0.000023903733, -0.9999999), (0.00035476225, 0.000023903733, -0.9999999), (0.99999994, -0.00042414802, 0), (0.99999994, -0.00042414802, 0), (0.99999994, -0.00042414802, 0), (0.99999994, -0.00042414802, 0), (-0.006589613, 0.004713751, -0.9999671), (-0.0065888558, 0.004715071, -0.9999671), (-0.0063002096, 0.00079992815, -0.99997985), (-0.0076782033, 0.0005046838, -0.9999704)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-1.220527, 1.535968, 0.418626), (-1.220527, 1.535968, 0.388626), (-0.610925, 0.926369, 0.418626), (-0.610925, 0.926369, 0.388626), (1.217872, 1.535968, 0.418626), (0.608274, 0.926369, 0.418626), (0.608274, 0.926369, 0.388626), (-1.220527, -1.512032, 0.418626), (-1.220527, -1.512032, 0.388626), (-0.610925, -1.532032, 0.388626), (-0.610925, -1.532032, 0.418626), (-0.630925, 0.946373, 0.388626), (0.628272, 0.946373, 0.388626), (-0.630925, -1.512032, 0.388626), (-0.630925, -1.512032, 0.418626), (-0.630925, 0.946373, 0.418626), (0.628272, 0.946373, 0.418626), (-0.630925, 0.946373, -0.437404), (0.628272, 0.946373, -0.437404), (-0.630925, -1.512032, -0.437404), (-0.649888, 0.965334, -0.437143), (0.647237, 0.965334, -0.437143), (-0.649888, 0.965334, -0.517143), (0.647237, 0.965334, -0.517143), (1.217872, 1.535968, -0.517404), (-1.220527, 1.535968, -0.517404), (1.217872, 1.535968, 0.388626), (1.217872, -1.512032, 0.418626), (1.217872, -1.512032, 0.388626), (0.608275, -1.532032, 0.388626), (0.608275, -1.532032, 0.418626), (0.628272, -1.512032, 0.388626), (0.628272, -1.512032, 0.418626), (0.628272, -1.512032, -0.437404), (-1.220527, -1.512032, -0.437273), (1.217872, -1.512032, -0.437273), (-0.650926, -1.482031, -0.437273), (-1.220527, -1.482032, -0.437273), (-1.220527, -1.482032, -0.517404), (-0.650926, -1.482031, -0.517274), (0.648273, -1.482031, -0.437274), (0.648273, -1.482031, -0.517274), (1.217872, -1.482032, -0.517404), (1.217872, -1.482032, -0.437274), (-1.220527, -1.532032, 0.418626), (-1.220527, -1.532032, 0.388626), (1.217872, -1.532032, 0.418626), (1.217872, -1.532032, 0.388626)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-9.561075, 1.085365), (-9.607949, 1.085365), (-9.607949, 0.13282), (-9.561075, 0.13282), (-11.685048, 2.673348), (-10.763792, 1.752102), (-8.796296, 1.752102), (-7.87505, 2.673345), (-9.550151, 1.616112), (-9.597027, 1.616112), (-9.597027, -0.288854), (-9.550151, -0.288854), (-9.528929, 2.673354), (-9.575803, 2.673355), (-9.575803, -2.089172), (-9.528929, -2.089171), (-9.564256, -1.146099), (-9.51738, -1.146099), (-9.51738, 2.695083), (-9.564256, 2.695083), (-10.763792, -2.089163), (-10.763792, 1.752102), (-11.685048, 2.673348), (-11.68505, -2.089163), (-8.361922, -1.128727), (-10.266929, -1.128727), (-10.298177, -1.159981), (-8.330673, -1.159982), (-10.266929, -1.128727), (-10.266929, 2.712546), (-10.298177, 2.681296), (-10.298177, -1.159981), (-10.732544, 1.720845), (-10.763792, 1.752102), (-10.763792, -2.089163), (-10.732544, -2.12041), (-8.796296, 1.752102), (-10.763792, 1.752102), (-10.732544, 1.720845), (-8.827545, 1.720845), (-9.571999, 0.132844), (-9.571999, 1.085339), (-9.618874, 1.085339), (-9.618874, 0.132844), (-9.539227, -1.132338), (-9.539228, 2.677742), (-9.586101, 2.677743), (-9.586102, -1.132338), (-9.516577, -2.120476), (-9.516577, 2.642161), (-9.563449, 2.642161), (-9.563449, -2.120477), (-9.575179, 2.695131), (-9.575179, -1.146147), (-9.528303, -1.146147), (-9.528303, 2.695131), (-8.796296, -2.089161), (-7.87505, -2.089163), (-7.87505, 2.673345), (-8.796296, 1.752102), (-8.361922, -1.128727), (-8.330673, -1.159982), (-8.330673, 2.681297), (-8.361922, 2.712546), (-8.827545, 1.720845), (-8.827545, -2.12041), (-8.796296, -2.089161), (-8.796296, 1.752102), (-9.528929, -2.089171), (-9.575803, -2.089172), (-9.575803, -2.120422), (-9.528929, -2.120421), (-11.219438, 2.681295), (-10.298177, 2.681296), (-10.266929, 2.712546), (-11.219438, 2.712546), (-10.763792, -2.089163), (-11.68505, -2.089163), (-11.68505, -2.120409), (-10.732544, -2.12041), (-7.87505, -2.089163), (-8.796296, -2.089161), (-8.827545, -2.12041), (-7.87505, -2.12041), (-8.330673, 2.681297), (-7.409423, 2.681296), (-7.409423, 2.712546), (-8.361922, 2.712546), (-9.563449, 2.642161), (-9.516577, 2.642161), (-9.516577, 2.67341), (-9.563449, 2.67341), (-19.13347, 0.505421), (-20.117216, 0.505421), (-20.117216, -0.139915), (-19.13347, -0.139915), (-18.669888, 1.215094), (-20.590513, 1.215094), (-20.590513, 0.569757), (-18.669888, 0.569758), (-19.26636, 0.288244), (-19.911694, 0.288244), (-19.911694, -0.172382), (-19.12183, 0.296101), (-20.135216, 0.296101), (-20.135216, 0.233599), (-19.12183, 0.233599), (-19.487524, 0.109119), (-19.932531, 0.109119), (-19.932531, 0.046518), (-19.487524, 0.046619), (-18.259474, 1.186443), (-18.259474, 0.202677), (-18.24466, 0.187862), (-18.24466, 1.20126), (-19.121832, 0.808313), (-20.13521, 0.808313), (-20.58102, 0.362503), (-18.676025, 0.362503), (-20.590515, 1.07045), (-20.590515, 0.425114), (-18.669886, 0.425114), (-18.669886, 1.07045), (-19.408857, -0.215221), (-20.054193, 0.245407), (-20.054193, -0.215221), (-19.408857, -0.215221), (-19.408958, 0.245407), (-20.054193, 0.245407), (-18.771708, -0.000267), (-18.771708, 0.707571), (-20.676704, 0.707571), (-20.676704, -0.000267), (-19.26636, 0.288244), (-19.911694, -0.172382), (-19.26646, -0.172382), (-19.93253, 0.130558), (-19.93253, 0.068058), (-19.487524, 0.067957), (-19.487524, 0.130558), (-20.180138, 0.202677), (-20.180138, -0.257959), (-20.1567, -0.257961), (-20.156698, 0.187054), (-20.180136, 1.647076), (-20.180138, 1.186443), (-20.156698, 1.202068), (-20.156698, 1.647076), (-18.259474, 1.186443), (-18.24466, 1.20126), (-20.156698, 1.202068), (-20.180138, 1.186443), (-20.585283, 0.696974), (-20.585283, 0.634478), (-18.673267, 0.634375), (-18.673267, 0.696873), (-18.524626, 0.108475), (-18.078815, 0.554281), (-20.436634, 0.554281), (-20.436632, 0.109283), (-18.069616, -0.312296), (-18.069616, 0.395542), (-20.427425, -0.249693), (-20.427427, -0.312296), (-18.069616, 0.395542), (-20.450865, 0.395542), (-20.450865, -0.249693), (-20.427425, -0.249693), (-18.069614, 0.553602), (-20.450865, 0.553602), (-18.093052, -0.091633), (-18.069614, -0.091633), (-20.450865, 0.553602), (-20.450865, -0.154236), (-18.093052, -0.154236), (-18.093052, -0.091633), (-18.07882, 0.211767), (-18.524628, 0.657579), (-20.436628, 0.656769), (-20.43663, 0.211767), (-18.673265, 0.614906), (-18.673265, 0.677402), (-20.585283, 0.677301), (-20.585283, 0.614803), (-18.24466, 0.187862), (-18.259474, 0.202677), (-20.180138, 0.202677), (-20.156698, 0.187054)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_CountertopC_8X10_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
                rel material:binding = </root/_materials/M_CountertopC_8X10_0>
            }

            def GeomSubset "M_CountertopC_8X10_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47]
                rel material:binding = </root/_materials/M_CountertopC_8X10_1>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_CountertopC_8X10_0"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopC_8X10_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopC_8X10_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/marbleBase2.jpg@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopC_8X10_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_CountertopC_8X10_1"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopC_8X10_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopC_8X10_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_CountertopC_8X10_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/DarkWood2.tif@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopC_8X10_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopC_8X10_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

