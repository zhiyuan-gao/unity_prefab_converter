#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "DrawermeshCoffeeTableDrawer_315_3_3_GeomSubset_0"
    {
        def Mesh "DrawermeshCoffeeTableDrawer_315_3_3_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [0, 2, 1, 0, 3, 2, 3, 4, 2, 3, 5, 4, 5, 6, 4, 5, 7, 6, 7, 1, 6, 7, 0, 1, 5, 9, 8, 5, 3, 9, 8, 11, 10, 8, 9, 11, 10, 0, 7, 10, 11, 0, 5, 10, 7, 5, 8, 10, 9, 0, 11, 9, 3, 0, 2, 13, 12, 2, 4, 13, 14, 16, 15, 14, 12, 16, 1, 12, 14, 1, 2, 12, 16, 12, 17, 16, 17, 18, 19, 18, 17, 19, 20, 18, 21, 19, 17, 21, 17, 22, 6, 14, 23, 6, 1, 14, 23, 14, 15, 23, 15, 24, 4, 23, 13, 4, 6, 23, 13, 23, 24, 13, 24, 25, 13, 25, 26, 13, 26, 27, 27, 26, 28, 27, 28, 29, 30, 27, 29, 30, 29, 31, 24, 16, 25, 24, 15, 16, 25, 16, 18, 25, 18, 26, 28, 26, 18, 28, 18, 20, 17, 26, 18, 17, 27, 26, 12, 27, 17, 12, 13, 27, 32, 22, 33, 32, 21, 22, 33, 22, 30, 33, 30, 34, 34, 30, 31, 34, 31, 35, 35, 21, 32, 35, 31, 21, 34, 36, 33, 34, 37, 36, 37, 38, 36, 37, 39, 38, 39, 32, 38, 39, 35, 32, 34, 39, 37, 34, 35, 39, 36, 32, 33, 36, 38, 32, 22, 27, 30, 22, 17, 27, 31, 19, 21, 31, 29, 19, 29, 20, 19, 29, 28, 20]
            rel material:binding = </root/_materials/M_CoffeeTableDrawer_315_3_0>
            normal3f[] normals = [(0.00005706855, -0.9999999, -0.00047247947), (0.00017797953, -0.9999999, -0.00024929031), (0.00010539589, -1, -0.00017926298), (0.00005706855, -0.9999999, -0.00047247947), (-0.00013011998, -1, -0.00021322416), (0.00017797953, -0.9999999, -0.00024929031), (-0.00013011998, -1, -0.00021322416), (-0.000042087464, -1, -0.000322476), (0.00017797953, -0.9999999, -0.00024929031), (-0.00013011998, -1, -0.00021322416), (0.000011913083, -1, -0.0002986459), (-0.000042087464, -1, -0.000322476), (0.000011913083, -1, -0.0002986459), (-0.00015241619, -0.9999999, -0.00043443198), (-0.000042087464, -1, -0.000322476), (0.000011913083, -1, -0.0002986459), (0.000013934186, -0.99999994, -0.00035913978), (-0.00015241619, -0.9999999, -0.00043443198), (0.000013934186, -0.99999994, -0.00035913978), (0.00010539589, -1, -0.00017926298), (-0.00015241619, -0.9999999, -0.00043443198), (0.000013934186, -0.99999994, -0.00035913978), (0.00005706855, -0.9999999, -0.00047247947), (0.00010539589, -1, -0.00017926298), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0.99999994, 0.00026573607), (0, 0.99999994, 0.0002657687), (0, 0.9999999, 0.00026481308), (0, 0.99999994, 0.00026573607), (0, 1, 0.0002666917), (0, 0.99999994, 0.0002657687), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, -4.1681275e-7, 0), (-1, -9.862954e-8, 0), (-1, 0, 0), (-1, -4.1681275e-7, 0), (-0.99999994, -5.154203e-7, 0), (-1, -9.862954e-8, 0), (0, -0.00040788625, 0.99999994), (0, -0.00049047865, 0.99999994), (0, -0.0004904829, 0.9999999), (0, -0.00040788625, 0.99999994), (0, -0.0004354185, 0.9999999), (0, -0.00049047865, 0.99999994), (0, -0.00032529648, 0.99999994), (0, -0.0004354185, 0.9999999), (0, -0.00040788625, 0.99999994), (0, -0.00032529648, 0.99999994), (0, -0.00032529698, 1), (0, -0.0004354185, 0.9999999), (0, -0.00049047865, 0.99999994), (0, -0.0004354185, 0.9999999), (0, -0.0004904791, 0.99999994), (0, -0.00049047865, 0.99999994), (0, -0.0004904791, 0.99999994), (0, -0.0004904791, 0.99999994), (0, -0.00049048144, 0.99999994), (0, -0.0004904793, 0.99999994), (0, -0.00049047783, 0.9999999), (0, -0.00049048144, 0.99999994), (0, -0.0004904829, 0.9999999), (0, -0.0004904793, 0.99999994), (0, -0.00032527302, 1), (0, -0.0003252714, 0.99999994), (0, -0.0003252718, 1), (0, -0.00032527302, 1), (0, -0.0003252718, 1), (0, -0.00032527337, 0.99999994), (1, 5.7023726e-7, 0), (1, -6.275875e-8, 0), (1, -3.6743582e-8, 0), (1, 5.7023726e-7, 0), (1, 7.0518786e-7, 0), (1, -6.275875e-8, 0), (1, -3.6743582e-8, 0), (1, -6.275875e-8, 0), (1, -1.8699208e-7, 0), (1, -3.6743582e-8, 0), (1, -1.8699208e-7, 0), (1, 0, 0), (0, 0.0003252605, -0.99999994), (0, 0.0004115348, -0.99999994), (0, 0.00044028787, -0.9999999), (0, 0.0003252605, -0.99999994), (0, 0.00032526025, -0.99999994), (0, 0.0004115348, -0.99999994), (0, 0.00044028787, -0.9999999), (0, 0.0004115348, -0.99999994), (0, 0.000497804, -0.9999998), (0, 0.00044028787, -0.9999999), (0, 0.000497804, -0.9999998), (0, 0.0004978018, -0.9999998), (0, 0.00044028787, -0.9999999), (0, 0.0004978018, -0.9999998), (0, 0.0004978078, -0.9999998), (0, 0.00044028787, -0.9999999), (0, 0.0004978078, -0.9999998), (0, 0.00049780787, -0.9999999), (0, 0.00041153133, -0.99999994), (0, 0.000497804, -0.9999999), (0, 0.000497804, -0.9999998), (0, 0.00041153133, -0.99999994), (0, 0.000497804, -0.9999998), (0, 0.0004115348, -0.99999994), (0, 0.0003252605, -0.99999994), (0, 0.00041153133, -0.99999994), (0, 0.0004115348, -0.99999994), (0, 0.0003252605, -0.99999994), (0, 0.0004115348, -0.99999994), (0, 0.00032526025, -0.99999994), (0, -0.99999994, -0.00023738045), (0, -0.99999994, -0.00023868248), (0, -0.99999994, -0.00023698098), (0, -0.99999994, -0.00023738045), (0, -0.9999999, -0.00024068952), (0, -0.99999994, -0.00023868248), (0, -0.99999994, -0.00023698098), (0, -0.99999994, -0.00023868248), (0, -1, -0.00023222783), (0, -0.99999994, -0.00023698098), (0, -1, -0.00023222783), (0, -1, -0.00023213378), (0, -0.9999999, -0.0002341844), (0, -0.9999999, -0.0002341844), (0, -0.9999999, -0.0002341844), (3.9566658e-8, -0.99999964, -0.00072007504), (1.0737905e-8, -0.99999964, -0.0007200734), (0, -0.99999964, -0.0007200732), (-1, 6.907941e-7, 0), (-1, 0.0000017576536, 0), (-1, 0, 0), (-1, 6.907941e-7, 0), (-1, 0.0000024484552, 0), (-1, 0.0000017576536, 0), (0, 0.99999994, 0.0002321346), (0, 0.99999994, 0.0002321346), (0, 1, 0.0002321346), (0, 0.99999994, 0.0002321346), (0, 1, 0.0002321346), (0, 0.99999994, 0.0002321346), (-0.000011936273, -0.99999994, -0.0002959557), (0.00003213586, -1, -0.00031618975), (0.000008263522, -0.99999994, -0.00030545413), (-0.000011936273, -0.99999994, -0.0002959557), (-0.0000045080783, -1, -0.00029899427), (0.00003213586, -1, -0.00031618975), (0.000008263522, -0.99999994, -0.00030545413), (0.00003213586, -1, -0.00031618975), (-0.0000044839694, -1, -0.00030693976), (0.000008263522, -0.99999994, -0.00030545413), (-0.0000044839694, -1, -0.00030693976), (-0.000011913774, -0.99999994, -0.00029886287), (-0.000011913774, -0.99999994, -0.00029886287), (-0.0000044839694, -1, -0.00030693976), (0.00003211055, -1, -0.00031644505), (-0.000011913774, -0.99999994, -0.00029886287), (0.00003211055, -1, -0.00031644505), (0.000008241425, -0.99999994, -0.00030393625), (0.000008241425, -0.99999994, -0.00030393625), (-0.0000045080783, -1, -0.00029899427), (-0.000011936273, -0.99999994, -0.0002959557), (0.000008241425, -0.99999994, -0.00030393625), (0.00003211055, -1, -0.00031644505), (-0.0000045080783, -1, -0.00029899427), (0.99999994, 0.00033556853, 0), (0.99999994, 0.00033556853, -4.989694e-9), (0.9999999, 0.0004793836, 1.6254376e-10), (0.99999994, 0.00033556853, 0), (1, 0, 0), (0.99999994, 0.00033556853, -4.989694e-9), (0, 0.99999994, 0.00026479288), (0, 0.99999994, 0.00026485816), (0, 1, 0.00026670372), (0, 0.99999994, 0.00026479288), (0, 1, 0.00026294735), (0, 0.99999994, 0.00026485816), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, -3.5830476e-7, 0), (1, -3.5830476e-7, 0), (1, -3.5830476e-7, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (-1, -9.606916e-8, 0), (-1, -0.0000017449846, 0), (-1, -1.1880043e-7, 0), (-1, -9.606916e-8, 0), (-1, -4.8914893e-7, 0), (-1, -0.0000017449846, 0), (-1, -4.8914893e-7, 0), (-1, -0.000002489332, 0), (-1, -0.0000017449846, 0), (-1, -4.8914893e-7, 0), (-1, 0, 0), (-1, -0.000002489332, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.248179, -0.346229, -0.23807), (0.241369, -0.346229, -0.245069), (0.233023, -0.346229, -0.245069), (0.226212, -0.346229, -0.23807), (0.233023, -0.346224, -0.253646), (0.226212, -0.346222, -0.260644), (0.241369, -0.346224, -0.253646), (0.248179, -0.346222, -0.260644), (0.226212, -0.345434, -0.260644), (0.226212, -0.34544, -0.23807), (0.248179, -0.345434, -0.260644), (0.248179, -0.34544, -0.23807), (0.233023, -0.373897, -0.245078), (0.233023, -0.373895, -0.253655), (0.241369, -0.373897, -0.245078), (0.241369, -0.377968, -0.24508), (0.233023, -0.377968, -0.24508), (-0.216029, -0.373897, -0.245078), (-0.216029, -0.377968, -0.24508), (-0.224375, -0.373897, -0.245078), (-0.224375, -0.377968, -0.24508), (-0.224375, -0.346227, -0.245069), (-0.216029, -0.346227, -0.245069), (0.241369, -0.373895, -0.253655), (0.241369, -0.377966, -0.253657), (0.233023, -0.377966, -0.253657), (-0.216029, -0.377966, -0.253657), (-0.216029, -0.373895, -0.253655), (-0.224375, -0.377966, -0.253657), (-0.224375, -0.373895, -0.253655), (-0.216029, -0.346224, -0.253646), (-0.224375, -0.346224, -0.253646), (-0.231185, -0.346229, -0.23807), (-0.209219, -0.346229, -0.23807), (-0.209219, -0.346222, -0.260644), (-0.231185, -0.346222, -0.260644), (-0.209219, -0.34544, -0.23807), (-0.209219, -0.345434, -0.260644), (-0.231185, -0.34544, -0.23807), (-0.231185, -0.345434, -0.260644), (0.323788, -0.341079, -0.330555), (0.323788, -0.332977, -0.330553), (-0.323789, -0.332977, -0.330553), (-0.323789, -0.341079, -0.330555), (-0.323789, -0.341131, -0.179521), (-0.323789, -0.33303, -0.179518), (0.323788, -0.33303, -0.179518), (0.323788, -0.341131, -0.179521), (0.323788, -0.345243, -0.326396), (-0.323789, -0.345243, -0.326396), (-0.323789, -0.345291, -0.183683), (0.323788, -0.345291, -0.183683), (0.32628, -0.341131, -0.183681), (0.32628, -0.333028, -0.183679), (0.32628, -0.332979, -0.326392), (0.32628, -0.341079, -0.326394), (-0.32628, -0.341079, -0.326394), (-0.32628, -0.332979, -0.326392), (-0.32628, -0.333028, -0.183679), (-0.32628, -0.341131, -0.183681), (0.323788, -0.328817, -0.32639), (-0.323789, -0.328817, -0.32639), (-0.323789, -0.328869, -0.183677), (0.323788, -0.328869, -0.183677), (-0.318743, -0.328821, -0.317959), (0.318742, -0.328821, -0.317959), (-0.318743, -0.328863, -0.192108), (0.318742, -0.328863, -0.192108), (0.318742, -0.036445, -0.317858), (0.318742, -0.036491, -0.192007), (-0.318743, -0.036491, -0.192007), (-0.318743, -0.036445, -0.317858), (-0.308276, -0.053974, -0.192013), (-0.308276, -0.053934, -0.310845), (-0.308276, -0.311338, -0.310933), (-0.308276, -0.31138, -0.192102), (0.308276, -0.31138, -0.192102), (0.308276, -0.053974, -0.192013), (0.308276, -0.053934, -0.310845), (0.308276, -0.311338, -0.310933)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_CoffeeTableDrawer_315_3_0"
        {
            token outputs:surface.connect = </root/_materials/M_CoffeeTableDrawer_315_3_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CoffeeTableDrawer_315_3_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_CoffeeTableDrawer_315_3_0/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CoffeeTableDrawer_315_3_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CoffeeTableDrawer_315_3_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

