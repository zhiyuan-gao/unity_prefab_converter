#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "AlarmClock_10_AlarmClock_10_0_GeomSubset_1"
    {
        def Mesh "AlarmClock_10_AlarmClock_10_0_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [4, 5, 7, 6, 25, 26, 51, 52, 31, 25, 52, 53, 31, 33, 26, 25, 26, 33, 50, 51, 35, 29, 24, 27, 29, 35, 38, 37, 41, 31, 53, 54, 33, 31, 41, 43, 33, 43, 49, 50, 50, 49, 38, 35, 27, 51, 50, 35, 52, 51, 27, 24, 29, 53, 52, 24, 37, 54, 53, 29, 114, 115, 117, 116]
            rel material:binding = </root/_materials/M_AlarmClock_10_1>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -1), (0, 0, -1), (0, -0.9617813, 0.27381864), (0, -0.9617813, 0.27381864), (0, -0.9617814, 0.27381864), (0, -0.9617814, 0.27381864), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0.9531528, 0.30248928), (0, 0.9531528, 0.30248928), (0, 0.9531528, 0.30248928), (0, 0.9531528, 0.30248928), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-6.124068e-7, 0, 1), (-8.881192e-7, 0, 1), (-5.483276e-7, 0, 1), (-6.4022885e-7, 0, 1), (6.4022885e-7, 0, 1), (6.124068e-7, 0, 1), (0, 0, 1), (0, 0, 1), (8.881191e-7, 0, 1), (6.124068e-7, 0, 1), (6.4022885e-7, 0, 1), (5.483276e-7, 0, 1), (8.881191e-7, 0, 1), (5.483276e-7, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-5.483276e-7, 0, 1), (-8.881192e-7, 0, 1), (0, 0.9531528, 0.30248928), (0, 0.9531528, 0.30248928), (0, 0.9531528, 0.30248928), (0, 0.9531528, 0.30248928), (0, 0, -1), (0, 0, -1), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, -0.9617813, 0.27381864), (0, -0.9617814, 0.27381864), (0, -0.9617814, 0.27381864), (0, -0.9617813, 0.27381864), (-6.4022885e-7, 0, 1), (0, 0, 1), (0, 0, 1), (-6.124068e-7, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.0005, -0.008607, -0.352385), (0.0005, -0.008607, -0.352385), (-0.0005, -0.007607, -0.352385), (0.0005, -0.007607, -0.352385), (-0.0005, -0.008607, -0.352385), (0.0005, -0.008607, -0.352385), (-0.0005, -0.007607, -0.352385), (0.0005, -0.007607, -0.352385), (-0.0005, -0.008607, -0.352385), (0.0005, -0.008607, -0.352385), (-0.0005, -0.007607, -0.352385), (0.0005, -0.007607, -0.352385), (-0.0005, -0.008607, -0.352385), (0.0005, -0.008607, -0.352385), (-0.0005, -0.007607, -0.352385), (0.0005, -0.007607, -0.352385), (-0.0005, -0.008607, -0.352385), (0.0005, -0.008607, -0.352385), (-0.0005, -0.007607, -0.352385), (0.0005, -0.007607, -0.352385), (-0.102395, -0.020724, 0.091252), (0.102395, -0.020724, 0.091252), (0.102395, 0.079232, 0.056848), (-0.102395, 0.079232, 0.056848), (0.102395, -0.078484, -0.102385), (-0.102395, -0.078484, -0.102385), (-0.102395, 0.055854, -0.102385), (0.102395, 0.055854, -0.102385), (0.102395, -0.066644, -0.062157), (0.102395, -0.067822, -0.064935), (-0.102395, -0.066644, -0.062157), (-0.102395, -0.067822, -0.064935), (-0.102395, 0.044526, -0.062157), (-0.102395, 0.043969, -0.064935), (0.102395, 0.044526, -0.062157), (0.102395, 0.043969, -0.064935), (0.099027, -0.064275, -0.062157), (0.099027, -0.064275, -0.064935), (0.099027, 0.042261, -0.064935), (0.099027, 0.042261, -0.062157), (-0.099027, -0.064275, -0.062157), (-0.099027, -0.064275, -0.064935), (-0.099027, 0.042261, -0.062157), (-0.099027, 0.042261, -0.064935), (-0, 0.079232, 0.056848), (-0, -0.020724, 0.091252), (-0, -0.066644, -0.062157), (-0, 0.044526, -0.062157), (-0, 0.042261, -0.062157), (-0, 0.042261, -0.064935), (-0, 0.043969, -0.064935), (-0, 0.055854, -0.102385), (-0, -0.078484, -0.102385), (-0, -0.067822, -0.064935), (-0, -0.064275, -0.064935), (-0, -0.064275, -0.062157), (0.102395, -0.043685, 0.014547), (-0.102395, -0.043685, 0.014547), (-0.102395, 0.061878, -0.002655), (-0, 0.061879, -0.002655), (0.102395, 0.061878, -0.002655), (0.050207, -0.017558, 0.05783), (0.027181, -0.013058, 0.072864), (0.000016, -0.011405, 0.078386), (-0.027152, -0.012851, 0.073555), (-0.050186, -0.017175, 0.059107), (0.06559, -0.02422, 0.035575), (-0.065579, -0.02372, 0.037243), (0.070988, -0.03203, 0.009486), (-0.070989, -0.031489, 0.011291), (0.065579, -0.039798, -0.016466), (-0.065591, -0.039298, -0.014798), (0.050185, -0.046342, -0.03833), (0.027152, -0.050667, -0.052777), (-0.000015, -0.052113, -0.057608), (-0.027181, -0.050459, -0.052086), (-0.050207, -0.04596, -0.037053), (-0, -0.031758, 0.010389), (0.051411, -0.029303, 0.062586), (0.050207, -0.028053, 0.060971), (0.027845, -0.024697, 0.07797), (0.02718, -0.023552, 0.076004), (0.000037, -0.023005, 0.083622), (0.000015, -0.0219, 0.081525), (-0.027782, -0.024486, 0.078676), (-0.027152, -0.023346, 0.076695), (-0.051374, -0.028915, 0.063879), (-0.050185, -0.02767, 0.062248), (0.067155, -0.036121, 0.039809), (0.06559, -0.034716, 0.038716), (-0.067141, -0.035619, 0.041485), (-0.065578, -0.034215, 0.040385), (0.07268, -0.044115, 0.013102), (0.070988, -0.042525, 0.012627), (-0.07268, -0.043574, 0.01491), (-0.070988, -0.041984, 0.014433), (0.067141, -0.05207, -0.013473), (0.065578, -0.050293, -0.013324), (-0.067155, -0.051568, -0.011797), (-0.06559, -0.049793, -0.011656), (0.051374, -0.058773, -0.035867), (0.050185, -0.056836, -0.035188), (0.027782, -0.063202, -0.050664), (0.027152, -0.061161, -0.049635), (-0.000037, -0.064683, -0.055609), (-0.000016, -0.062608, -0.054465), (-0.027845, -0.062989, -0.049958), (-0.027181, -0.060954, -0.048943), (-0.051411, -0.058386, -0.034573), (-0.050207, -0.056456, -0.033911), (-0.0005, -0.008607, -0.352385), (0.0005, -0.008607, -0.352385), (-0.0005, -0.007607, -0.352385), (0.0005, -0.007607, -0.352385), (-0.0005, -0.008607, -0.352385), (0.0005, -0.008607, -0.352385), (-0.0005, -0.007607, -0.352385), (0.0005, -0.007607, -0.352385), (-0.0005, -0.008607, -0.352385), (0.0005, -0.008607, -0.352385), (-0.0005, -0.007607, -0.352385), (0.0005, -0.007607, -0.352385), (-0.0005, -0.008607, -0.352385), (0.0005, -0.008607, -0.352385), (-0.0005, -0.007607, -0.352385), (0.0005, -0.007607, -0.352385), (-0.0005, -0.008607, -0.352385), (0.0005, -0.008607, -0.352385), (-0.0005, -0.007607, -0.352385), (0.0005, -0.007607, -0.352385), (0.006772, -0.029913, 0.015924), (0.00391, -0.029069, 0.01866), (0, -0.028761, 0.019661), (-0.00391, -0.029069, 0.01866), (-0.006772, -0.029913, 0.015924), (-0.00782, -0.031065, 0.012188), (-0.006772, -0.032216, 0.008451), (-0.00391, -0.033059, 0.005716), (0, -0.033369, 0.004715), (0.00391, -0.033059, 0.005716), (0.006772, -0.032216, 0.008451), (0.00782, -0.031065, 0.012188), (0, -0.035297, 0.013492), (0.006772, -0.033307, 0.016971), (0.006177, -0.034, 0.016825), (0.004741, -0.034491, 0.016108), (0.002737, -0.0339, 0.018023), (0.003566, -0.033232, 0.01932), (0.00391, -0.032463, 0.019706), (0, -0.032155, 0.020707), (0, -0.032949, 0.020233), (0, -0.033685, 0.018724), (-0.002737, -0.0339, 0.018023), (-0.003566, -0.033232, 0.01932), (-0.00391, -0.032463, 0.019706), (-0.006772, -0.033307, 0.016971), (-0.006177, -0.034, 0.016825), (-0.004741, -0.034491, 0.016108), (-0.005474, -0.035297, 0.013492), (-0.007133, -0.035051, 0.013417), (-0.00782, -0.034458, 0.013234), (-0.006772, -0.03561, 0.009498), (-0.006177, -0.036101, 0.010009), (-0.004741, -0.036103, 0.010877), (-0.002737, -0.036694, 0.008962), (-0.003566, -0.036871, 0.007514), (-0.00391, -0.036453, 0.006762), (0, -0.036762, 0.005761), (0, -0.037152, 0.006601), (0, -0.03691, 0.008261), (0.002737, -0.036694, 0.008962), (0.003566, -0.036871, 0.007514), (0.00391, -0.036453, 0.006762), (0.006772, -0.03561, 0.009498), (0.006177, -0.036101, 0.010009), (0.004741, -0.036103, 0.010877), (0.005474, -0.035297, 0.013492), (0.007133, -0.035051, 0.013417), (0.00782, -0.034458, 0.013234)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-13.857183, -5.461981), (-13.857183, -5.464905), (-13.854259, -5.464905), (-13.854259, -5.461981), (-14.344946, 0.501526), (-14.607325, 0.501526), (-14.607325, 0.301536), (-14.344946, 0.301536), (-14.180209, 0.505461), (-14.25479, 0.505461), (-14.25479, 0.301537), (-14.180209, 0.301537), (-13.707646, 0.691147), (-13.707646, 0.909491), (-13.780793, 0.932703), (-13.780793, 0.670324), (-14.062684, 0.506386), (-14.137605, 0.506386), (-14.137605, 0.301537), (-14.062684, 0.301537), (-13.823258, 0.693535), (-13.823258, 0.91188), (-13.896401, 0.932702), (-13.896401, 0.670324), (-13.983222, 0.101544), (-13.764878, 0.101544), (-13.768214, 0.10812), (-13.976295, 0.10812), (-13.976295, 0.494951), (-13.983222, 0.501528), (-13.983222, 0.301536), (-13.976295, 0.301536), (-13.764878, 0.501528), (-13.983222, 0.501528), (-13.976295, 0.494951), (-13.768214, 0.494951), (-13.764878, 0.501528), (-13.768214, 0.494951), (-13.768214, 0.301536), (-13.764878, 0.301536), (-13.764878, 0.301536), (-13.768214, 0.301536), (-13.768214, 0.10812), (-13.764878, 0.101544), (-14.062684, 0.096688), (-14.062684, 0.301537), (-14.137605, 0.301537), (-14.137605, 0.096688), (-14.344946, 0.301536), (-14.607325, 0.301536), (-14.607325, 0.101547), (-14.344946, 0.101547), (-14.180209, 0.097613), (-14.180209, 0.301537), (-14.25479, 0.301537), (-14.25479, 0.097613), (-13.976295, 0.10812), (-13.976295, 0.301536), (-13.983222, 0.301536), (-13.983222, 0.101544), (-14.23949, -5.528214), (-14.23949, -5.535559), (-14.232143, -5.535559), (-14.232143, -5.528214)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_AlarmClock_10_1"
        {
            token outputs:surface.connect = </root/_materials/M_AlarmClock_10_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.1397059, 0.1397059, 0.1397059)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_AlarmClock_10_1/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Copper_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_AlarmClock_10_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

