#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "AlarmClockButton_10"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "AlarmClockButton_10" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.038207, -0.009034, -0.352385), (0.038207, 0.068155, 0.100403)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 4, 5, 7, 6, 35, 34, 37, 36, 34, 33, 38, 37, 41, 40, 43, 42, 40, 39, 44, 43, 47, 46, 49, 48, 46, 45, 50, 49, 53, 52, 55, 54, 52, 51, 56, 55, 59, 58, 61, 60, 58, 57, 62, 61, 65, 64, 67, 66, 64, 63, 68, 67, 20, 21, 38, 33, 21, 22, 39, 38, 22, 23, 44, 39, 23, 24, 45, 44, 24, 25, 50, 45, 25, 26, 51, 50, 26, 27, 56, 51, 27, 28, 57, 56, 28, 29, 62, 57, 29, 30, 63, 62, 30, 31, 68, 63, 31, 20, 33, 68, 32, 35, 36, 41, 32, 41, 42, 47, 32, 47, 48, 53, 32, 53, 54, 59, 32, 59, 60, 65, 32, 65, 66, 35, 36, 37, 40, 41, 37, 38, 39, 40, 42, 43, 46, 47, 43, 44, 45, 46, 48, 49, 52, 53, 49, 50, 51, 52, 54, 55, 58, 59, 55, 56, 57, 58, 60, 61, 64, 65, 61, 62, 63, 64, 33, 34, 67, 68, 34, 35, 66, 67, 8, 9, 11, 10, 12, 13, 15, 14, 16, 17, 19, 18]
            rel material:binding = </root/_materials/M_AlarmClockButton_10_0>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0.16316125, -0.41128471, -0.89678496), (0.5107871, -0.5436041, -0.66602635), (0.2948917, -0.747493, -0.59522516), (0.094980225, -0.47758794, -0.8734349), (0.5107871, -0.5436041, -0.66602635), (0.7705136, -0.56997705, -0.28536832), (0.44483227, -0.8776303, -0.1785757), (0.2948917, -0.747493, -0.59522516), (-0.000033209042, -0.50024426, -0.8658843), (0.000002087094, -0.8221471, -0.5692749), (-0.29489133, -0.7474929, -0.5952255), (-0.0948915, -0.47758925, -0.87344384), (0.000002087094, -0.8221471, -0.5692749), (-0.0000069132075, -0.99022853, -0.139454), (-0.44478315, -0.877657, -0.17856662), (-0.29489133, -0.7474929, -0.5952255), (-0.16317442, -0.4112629, -0.89679253), (-0.5107867, -0.5436043, -0.6660264), (-0.58988625, -0.26495382, -0.76278025), (-0.1898642, -0.32221544, -0.9274312), (-0.5107867, -0.5436043, -0.6660264), (-0.7704237, -0.5701017, -0.28536183), (-0.88963884, -0.14990523, -0.43135986), (-0.58988625, -0.26495382, -0.76278025), (-0.16317245, -0.23329043, -0.95861894), (-0.5109106, 0.01360005, -0.85952634), (-0.29494178, 0.2175729, -0.93041456), (-0.09499524, -0.16680269, -0.98140347), (-0.5109106, 0.01360005, -0.85952634), (-0.77050406, 0.2703135, -0.5772818), (-0.444841, 0.57793015, -0.68418795), (-0.29494178, 0.2175729, -0.93041456), (0.0000066517437, -0.14434603, -0.9895273), (-0.0000019129366, 0.2921634, -0.9563684), (0.29494172, 0.21757296, -0.9304147), (0.09499545, -0.16680276, -0.9814034), (-0.0000019129366, 0.2921634, -0.9563684), (-0.00001577288, 0.6905379, -0.7232962), (0.4448164, 0.5779435, -0.6841927), (0.29494172, 0.21757296, -0.9304147), (0.1631791, -0.23330128, -0.9586151), (0.5108693, 0.013597818, -0.8595509), (0.5898535, -0.2649617, -0.7628029), (0.1898642, -0.32221687, -0.92743075), (0.5108693, 0.013597818, -0.8595509), (0.7704877, 0.2704298, -0.57724893), (0.8896387, -0.14990519, -0.43135995), (0.5898535, -0.2649617, -0.7628029), (0.8660304, -0.47230312, 0.16407643), (0.50001353, -0.81806225, 0.28418425), (0.44483227, -0.8776303, -0.1785757), (0.7705136, -0.56997705, -0.28536832), (0.50001353, -0.81806225, 0.28418425), (0, -0.94462544, 0.32815063), (-0.0000069132075, -0.99022853, -0.139454), (0.44483227, -0.8776303, -0.1785757), (0, -0.94462544, 0.32815063), (-0.50001353, -0.81806225, 0.28418425), (-0.44478315, -0.877657, -0.17856662), (-0.0000069132075, -0.99022853, -0.139454), (-0.50001353, -0.81806225, 0.28418425), (-0.8660304, -0.47230315, 0.16407645), (-0.7704237, -0.5701017, -0.28536183), (-0.44478315, -0.877657, -0.17856662), (-0.8660304, -0.47230315, 0.16407645), (-1, -0.000009732746, 0.0000062707954), (-0.88963884, -0.14990523, -0.43135986), (-0.7704237, -0.5701017, -0.28536183), (-1, -0.000009732746, 0.0000062707954), (-0.8660323, 0.47230217, -0.16406953), (-0.77050406, 0.2703135, -0.5772818), (-0.88963884, -0.14990523, -0.43135986), (-0.8660323, 0.47230217, -0.16406953), (-0.50000954, 0.818062, -0.2841919), (-0.444841, 0.57793015, -0.68418795), (-0.77050406, 0.2703135, -0.5772818), (-0.50000954, 0.818062, -0.2841919), (4.9105537e-8, 0.9446184, -0.32817096), (-0.00001577288, 0.6905379, -0.7232962), (-0.444841, 0.57793015, -0.68418795), (4.9105537e-8, 0.9446184, -0.32817096), (0.50000954, 0.81806195, -0.28419188), (0.4448164, 0.5779435, -0.6841927), (-0.00001577288, 0.6905379, -0.7232962), (0.50000954, 0.81806195, -0.28419188), (0.8660323, 0.47230217, -0.16406953), (0.7704877, 0.2704298, -0.57724893), (0.4448164, 0.5779435, -0.6841927), (0.8660323, 0.47230217, -0.16406953), (1, -0.000009732746, 0.0000062707954), (0.8896387, -0.14990519, -0.43135995), (0.7704877, 0.2704298, -0.57724893), (1, -0.000009732746, 0.0000062707954), (0.8660304, -0.47230312, 0.16407643), (0.7705136, -0.56997705, -0.28536832), (0.8896387, -0.14990519, -0.43135995), (-2.8498254e-13, -0.32816556, -0.9446202), (0.16316125, -0.41128471, -0.89678496), (0.094980225, -0.47758794, -0.8734349), (-0.000033209042, -0.50024426, -0.8658843), (-2.8498254e-13, -0.32816556, -0.9446202), (-0.000033209042, -0.50024426, -0.8658843), (-0.0948915, -0.47758925, -0.87344384), (-0.16317442, -0.4112629, -0.89679253), (-2.8498254e-13, -0.32816556, -0.9446202), (-0.16317442, -0.4112629, -0.89679253), (-0.1898642, -0.32221544, -0.9274312), (-0.16317245, -0.23329043, -0.95861894), (-2.8498254e-13, -0.32816556, -0.9446202), (-0.16317245, -0.23329043, -0.95861894), (-0.09499524, -0.16680269, -0.98140347), (0.0000066517437, -0.14434603, -0.9895273), (-2.8498254e-13, -0.32816556, -0.9446202), (0.0000066517437, -0.14434603, -0.9895273), (0.09499545, -0.16680276, -0.9814034), (0.1631791, -0.23330128, -0.9586151), (-2.8498254e-13, -0.32816556, -0.9446202), (0.1631791, -0.23330128, -0.9586151), (0.1898642, -0.32221687, -0.92743075), (0.16316125, -0.41128471, -0.89678496), (0.094980225, -0.47758794, -0.8734349), (0.2948917, -0.747493, -0.59522516), (0.000002087094, -0.8221471, -0.5692749), (-0.000033209042, -0.50024426, -0.8658843), (0.2948917, -0.747493, -0.59522516), (0.44483227, -0.8776303, -0.1785757), (-0.0000069132075, -0.99022853, -0.139454), (0.000002087094, -0.8221471, -0.5692749), (-0.0948915, -0.47758925, -0.87344384), (-0.29489133, -0.7474929, -0.5952255), (-0.5107867, -0.5436043, -0.6660264), (-0.16317442, -0.4112629, -0.89679253), (-0.29489133, -0.7474929, -0.5952255), (-0.44478315, -0.877657, -0.17856662), (-0.7704237, -0.5701017, -0.28536183), (-0.5107867, -0.5436043, -0.6660264), (-0.1898642, -0.32221544, -0.9274312), (-0.58988625, -0.26495382, -0.76278025), (-0.5109106, 0.01360005, -0.85952634), (-0.16317245, -0.23329043, -0.95861894), (-0.58988625, -0.26495382, -0.76278025), (-0.88963884, -0.14990523, -0.43135986), (-0.77050406, 0.2703135, -0.5772818), (-0.5109106, 0.01360005, -0.85952634), (-0.09499524, -0.16680269, -0.98140347), (-0.29494178, 0.2175729, -0.93041456), (-0.0000019129366, 0.2921634, -0.9563684), (0.0000066517437, -0.14434603, -0.9895273), (-0.29494178, 0.2175729, -0.93041456), (-0.444841, 0.57793015, -0.68418795), (-0.00001577288, 0.6905379, -0.7232962), (-0.0000019129366, 0.2921634, -0.9563684), (0.09499545, -0.16680276, -0.9814034), (0.29494172, 0.21757296, -0.9304147), (0.5108693, 0.013597818, -0.8595509), (0.1631791, -0.23330128, -0.9586151), (0.29494172, 0.21757296, -0.9304147), (0.4448164, 0.5779435, -0.6841927), (0.7704877, 0.2704298, -0.57724893), (0.5108693, 0.013597818, -0.8595509), (0.7705136, -0.56997705, -0.28536832), (0.5107871, -0.5436041, -0.66602635), (0.5898535, -0.2649617, -0.7628029), (0.8896387, -0.14990519, -0.43135995), (0.5107871, -0.5436041, -0.66602635), (0.16316125, -0.41128471, -0.89678496), (0.1898642, -0.32221687, -0.92743075), (0.5898535, -0.2649617, -0.7628029), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.0005, -0.008607, -0.352385), (-0.0005, -0.008607, -0.352385), (0.0005, -0.007607, -0.352385), (-0.0005, -0.007607, -0.352385), (0.0005, -0.008607, -0.352385), (-0.0005, -0.008607, -0.352385), (0.0005, -0.007607, -0.352385), (-0.0005, -0.007607, -0.352385), (0.0005, -0.008607, -0.352385), (-0.0005, -0.008607, -0.352385), (0.0005, -0.007607, -0.352385), (-0.0005, -0.007607, -0.352385), (0.0005, -0.008607, -0.352385), (-0.0005, -0.008607, -0.352385), (0.0005, -0.007607, -0.352385), (-0.0005, -0.007607, -0.352385), (0.0005, -0.008607, -0.352385), (-0.0005, -0.008607, -0.352385), (0.0005, -0.007607, -0.352385), (-0.0005, -0.007607, -0.352385), (-0.033088, 0.045103, 0.065347), (-0.019104, 0.058314, 0.060758), (0, 0.063149, 0.059078), (0.019104, 0.058314, 0.060758), (0.033088, 0.045103, 0.065347), (0.038207, 0.027058, 0.071616), (0.033088, 0.009012, 0.077886), (0.019104, -0.004198, 0.082475), (0, -0.009034, 0.084155), (-0.019104, -0.004198, 0.082475), (-0.033088, 0.009012, 0.077886), (-0.038207, 0.027058, 0.071616), (0, 0.033328, 0.089665), (-0.033088, 0.050109, 0.079756), (-0.031151, 0.049947, 0.082697), (-0.026471, 0.047765, 0.08465), (-0.015283, 0.058334, 0.080978), (-0.017985, 0.062383, 0.078376), (-0.019104, 0.063319, 0.075167), (0, 0.068155, 0.073487), (0, 0.066935, 0.076795), (0, 0.062202, 0.079634), (0.015283, 0.058334, 0.080978), (0.017985, 0.062383, 0.078376), (0.019104, 0.063319, 0.075167), (0.033088, 0.050109, 0.079756), (0.031151, 0.049947, 0.082697), (0.026471, 0.047765, 0.08465), (0.030567, 0.033328, 0.089665), (0.035969, 0.032957, 0.088599), (0.038207, 0.032064, 0.086025), (0.033088, 0.014017, 0.092294), (0.031151, 0.015969, 0.094501), (0.026471, 0.018891, 0.094681), (0.015283, 0.008323, 0.098352), (0.017985, 0.003532, 0.098821), (0.019104, 0.000807, 0.096883), (0, -0.004028, 0.098563), (0, -0.00102, 0.100403), (0, 0.004454, 0.099696), (-0.015283, 0.008323, 0.098352), (-0.017985, 0.003532, 0.098821), (-0.019104, 0.000807, 0.096883), (-0.033088, 0.014017, 0.092294), (-0.031151, 0.015969, 0.094501), (-0.026471, 0.018891, 0.094681), (-0.030567, 0.033328, 0.089665), (-0.035969, 0.032957, 0.088599), (-0.038207, 0.032064, 0.086025)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-20.43686, -5.071917), (-20.43686, -6.067932), (-19.440842, -6.067932), (-19.440842, -5.071917), (-14.23949, -5.528214), (-14.23949, -5.535559), (-14.232143, -5.535559), (-14.232143, -5.528214), (-14.379063, 0.212849), (-14.374655, 0.203399), (-14.34954, 0.22999), (-14.357718, 0.235446), (-13.998001, 0.20565), (-14.004408, 0.205296), (-14.014408, 0.176516), (-14.007414, 0.178557), (-14.349906, 0.266312), (-14.340346, 0.266312), (-14.34954, 0.302634), (-14.357718, 0.297178), (-14.114442, 0.674742), (-14.107686, 0.674742), (-14.111117, 0.71376), (-14.117673, 0.711475), (-14.379063, 0.319774), (-14.374655, 0.329225), (-14.408968, 0.338958), (-14.40822, 0.328045), (-13.875137, 0.794359), (-13.881546, 0.794713), (-13.867886, 0.755391), (-13.862279, 0.757339), (-14.437378, 0.319774), (-14.443279, 0.329225), (-14.468398, 0.302634), (-14.458724, 0.297178), (-13.849418, 0.720321), (-13.854225, 0.716068), (-13.844225, 0.687282), (-13.840004, 0.693218), (-14.466535, 0.266312), (-14.47759, 0.266312), (-14.468398, 0.22999), (-14.458724, 0.235446), (-14.47759, 0.266312), (-14.483666, 0.266312), (-14.473901, 0.22773), (-14.468398, 0.22999), (-14.437378, 0.212849), (-14.443279, 0.203399), (-14.408968, 0.193666), (-14.40822, 0.204578), (-13.972286, 0.279673), (-13.977093, 0.283925), (-13.990749, 0.244611), (-13.985144, 0.242663), (-14.035801, 0.216201), (-14.045796, 0.187421), (-14.014408, 0.176516), (-14.004408, 0.205296), (-14.081689, 0.635725), (-14.078259, 0.674742), (-14.107686, 0.674742), (-14.111117, 0.635725), (-14.078259, 0.674742), (-14.081689, 0.71376), (-14.111117, 0.71376), (-14.107686, 0.674742), (-13.922943, 0.812592), (-13.912946, 0.783806), (-13.881546, 0.794713), (-13.891549, 0.8235), (-13.912946, 0.783806), (-13.899283, 0.744483), (-13.867886, 0.755391), (-13.881546, 0.794713), (-13.899283, 0.744483), (-13.885623, 0.70516), (-13.854225, 0.716068), (-13.867886, 0.755391), (-13.885623, 0.70516), (-13.875622, 0.676374), (-13.844225, 0.687282), (-13.854225, 0.716068), (-14.250162, 0.713795), (-14.246727, 0.674742), (-14.217274, 0.674742), (-14.220707, 0.713795), (-14.246727, 0.674742), (-14.250162, 0.63569), (-14.220707, 0.63569), (-14.217274, 0.674742), (-13.998486, 0.323611), (-14.008484, 0.294831), (-13.977093, 0.283925), (-13.967095, 0.312706), (-14.008484, 0.294831), (-14.022142, 0.255516), (-13.990749, 0.244611), (-13.977093, 0.283925), (-14.022142, 0.255516), (-14.035801, 0.216201), (-14.004408, 0.205296), (-13.990749, 0.244611), (-14.40822, 0.266312), (-14.379063, 0.212849), (-14.357718, 0.235446), (-14.349906, 0.266312), (-14.40822, 0.266312), (-14.349906, 0.266312), (-14.357718, 0.297178), (-14.379063, 0.319774), (-14.40822, 0.266312), (-14.379063, 0.319774), (-14.40822, 0.328045), (-14.437378, 0.319774), (-14.40822, 0.266312), (-14.437378, 0.319774), (-14.458724, 0.297178), (-14.466535, 0.266312), (-14.40822, 0.266312), (-14.466535, 0.266312), (-14.458724, 0.235446), (-14.437378, 0.212849), (-14.40822, 0.266312), (-14.437378, 0.212849), (-14.40822, 0.204578), (-14.379063, 0.212849), (-14.357718, 0.235446), (-14.34954, 0.22999), (-14.340346, 0.266312), (-14.349906, 0.266312), (-14.117673, 0.63801), (-14.111117, 0.635725), (-14.107686, 0.674742), (-14.114442, 0.674742), (-14.357718, 0.297178), (-14.34954, 0.302634), (-14.374655, 0.329225), (-14.379063, 0.319774), (-13.884553, 0.821458), (-13.891549, 0.8235), (-13.881546, 0.794713), (-13.875137, 0.794359), (-14.40822, 0.328045), (-14.408968, 0.338958), (-14.443279, 0.329225), (-14.437378, 0.319774), (-13.862279, 0.757339), (-13.867886, 0.755391), (-13.854225, 0.716068), (-13.849418, 0.720321), (-14.458724, 0.297178), (-14.468398, 0.302634), (-14.47759, 0.266312), (-14.466535, 0.266312), (-14.468398, 0.302634), (-14.473901, 0.304894), (-14.483666, 0.266312), (-14.47759, 0.266312), (-14.458724, 0.235446), (-14.468398, 0.22999), (-14.443279, 0.203399), (-14.437378, 0.212849), (-13.962874, 0.306771), (-13.967095, 0.312706), (-13.977093, 0.283925), (-13.972286, 0.279673), (-14.004408, 0.205296), (-13.998001, 0.20565), (-13.985144, 0.242663), (-13.990749, 0.244611), (-14.374655, 0.203399), (-14.379063, 0.212849), (-14.40822, 0.204578), (-14.408968, 0.193666), (-7.760818, -5.071917), (-7.760818, -6.067932), (-6.764802, -6.067932), (-6.764802, -5.071917), (0.001992, -4.560472), (0.997975, -4.560472), (0.997975, -3.564456), (0.001992, -3.564456), (0.31646, -9.23597), (0.31646, -9.243316), (0.323806, -9.243316), (0.323806, -9.23597)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_AlarmClockButton_10_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0]
                rel material:binding = </root/_materials/M_AlarmClockButton_10_0>
            }

            def GeomSubset "M_AlarmClockButton_10_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43]
                rel material:binding = </root/_materials/M_AlarmClockButton_10_1>
            }

            def GeomSubset "M_AlarmClockButton_10_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [44]
                rel material:binding = </root/_materials/M_AlarmClockButton_10_2>
            }

            def GeomSubset "M_AlarmClockButton_10_3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [45]
                rel material:binding = </root/_materials/M_AlarmClockButton_10_3>
            }

            def GeomSubset "M_AlarmClockButton_10_4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [46]
                rel material:binding = </root/_materials/M_AlarmClockButton_10_4>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_AlarmClockButton_10_0"
        {
            token outputs:surface.connect = </root/_materials/M_AlarmClockButton_10_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.53676474, 0.53676474, 0.53676474)
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }

        def Material "M_AlarmClockButton_10_1"
        {
            token outputs:surface.connect = </root/_materials/M_AlarmClockButton_10_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.1397059, 0.1397059, 0.1397059)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_AlarmClockButton_10_1/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Copper_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_AlarmClockButton_10_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_AlarmClockButton_10_2"
        {
            token outputs:surface.connect = </root/_materials/M_AlarmClockButton_10_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_AlarmClockButton_10_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_AlarmClockButton_10_2/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_AlarmClockButton_10_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_AlarmClockButton_10_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_AlarmClockButton_10_3"
        {
            token outputs:surface.connect = </root/_materials/M_AlarmClockButton_10_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_AlarmClockButton_10_3/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Alarm_Clock_Readout1_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_AlarmClockButton_10_3/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_AlarmClockButton_10_4"
        {
            token outputs:surface.connect = </root/_materials/M_AlarmClockButton_10_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.8, 0.8, 0.8)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 1
                float inputs:specular = 0
                token outputs:surface
            }
        }
    }
}

