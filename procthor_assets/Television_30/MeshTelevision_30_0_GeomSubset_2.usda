#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshTelevision_30_0_GeomSubset_2"
    {
        def Mesh "MeshTelevision_30_0_GeomSubset_2"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4]
            int[] faceVertexIndices = [8, 9, 11, 10, 45, 44, 96, 97, 97, 96, 46, 47]
            rel material:binding = </root/_materials/M_Television_30_2>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.0008, -0.048889, 0.036887), (0.0008, -0.048889, 0.036887), (-0.0008, -0.047291, 0.036887), (0.0008, -0.047291, 0.036887), (-0.0008, -0.048889, 0.036887), (0.0008, -0.048889, 0.036887), (-0.0008, -0.047291, 0.036887), (0.0008, -0.047291, 0.036887), (-0.0008, -0.048889, 0.036887), (0.0008, -0.048889, 0.036887), (-0.0008, -0.047291, 0.036887), (0.0008, -0.047291, 0.036887), (-0.0008, -0.048889, 0.036887), (0.0008, -0.048889, 0.036887), (-0.0008, -0.047291, 0.036887), (0.0008, -0.047291, 0.036887), (-0.0008, -0.048889, 0.036887), (0.0008, -0.048889, 0.036887), (-0.0008, -0.047291, 0.036887), (0.0008, -0.047291, 0.036887), (-0.55618, -0.04809, 0.422726), (0.55618, -0.04809, -0.299067), (-0.55618, -0.094341, 0.422726), (0.556181, -0.094341, 0.422726), (0.556181, -0.04809, 0.422726), (-0.55618, -0.04809, -0.299067), (0.556181, -0.094341, -0.299067), (-0.55618, -0.094341, -0.299067), (-0.548934, -0.094341, 0.415482), (-0.548934, -0.094341, -0.291823), (0.548937, -0.094341, -0.291823), (0.548937, -0.094341, 0.415482), (-0.548934, -0.083801, 0.415482), (-0.548934, -0.083801, -0.291823), (0.548937, -0.083801, -0.291823), (0.548937, -0.083801, 0.415482), (0.54568, -0.083801, 0.411074), (0.54568, -0.083801, -0.287415), (-0.545677, -0.083801, -0.287415), (-0.545677, -0.083801, 0.411074), (-0.532503, -0.094341, 0.395086), (0.532504, -0.094341, 0.395086), (-0.532503, -0.094341, -0.271427), (0.532504, -0.094341, -0.271427), (-0.523803, -0.081406, -0.252809), (-0.523803, -0.081406, 0.376468), (0.523804, -0.081406, -0.252809), (0.523804, -0.081406, 0.376468), (0.54568, -0.094341, 0.411074), (0.54568, -0.094341, -0.287415), (-0.545677, -0.094341, -0.287415), (-0.545677, -0.094341, 0.411074), (0.552041, -0.05209, -0.372731), (-0.552041, -0.05209, -0.372731), (0.552042, -0.090373, -0.372731), (-0.552041, -0.090373, -0.372731), (0.552041, -0.05209, -0.358869), (-0.552041, -0.05209, -0.358869), (0.552042, -0.090373, -0.358869), (-0.552041, -0.090373, -0.358869), (0.55618, -0.04809, -0.358869), (-0.55618, -0.04809, -0.358869), (0.556181, -0.094341, -0.358869), (-0.55618, -0.094341, -0.358869), (0.55618, -0.04809, -0.346908), (-0.55618, -0.04809, -0.346908), (0.55618, -0.04809, -0.334948), (-0.55618, -0.04809, -0.334948), (0.55618, -0.04809, -0.322987), (-0.55618, -0.04809, -0.322987), (0.55618, -0.04809, -0.311027), (-0.55618, -0.04809, -0.311027), (0, -0.094341, 0.395086), (0.000001, -0.094341, 0.411074), (0.000001, -0.083801, 0.411074), (0.000002, -0.083801, 0.415482), (0.000002, -0.094341, 0.415482), (0, -0.094341, 0.422726), (0, -0.04809, 0.422726), (0, -0.04809, -0.299067), (0, -0.04809, -0.311027), (0, -0.04809, -0.322987), (0, -0.04809, -0.334948), (0, -0.04809, -0.346908), (0, -0.04809, -0.358869), (0, -0.05209, -0.358869), (0, -0.05209, -0.372731), (0, -0.090373, -0.372731), (0, -0.090373, -0.358869), (0, -0.094341, -0.358869), (0, -0.094341, -0.299067), (0.000002, -0.094341, -0.291823), (0.000002, -0.083801, -0.291823), (0.000001, -0.083801, -0.287415), (0.000001, -0.094341, -0.287415), (0, -0.094341, -0.271427), (0, -0.081406, -0.252809), (0, -0.081406, 0.376468), (-0.55618, -0.094341, -0.311027), (-0.55618, -0.094341, -0.322987), (-0.55618, -0.094341, -0.334948), (-0.55618, -0.094341, -0.346908), (0.556181, -0.094341, -0.311027), (0.556181, -0.094341, -0.322987), (0.556181, -0.094341, -0.334948), (0.556181, -0.094341, -0.346908), (-0.55618, -0.100829, -0.300318), (0, -0.100829, -0.300318), (-0.55618, -0.1109, -0.311778), (0, -0.1109, -0.311778), (-0.55618, -0.100829, -0.311778), (-0.55618, -0.100829, -0.346158), (-0.55618, -0.1109, -0.346158), (-0.55618, -0.100829, -0.357617), (0, -0.1109, -0.346158), (0, -0.100829, -0.357617), (-0.55618, -0.100829, -0.334698), (-0.55618, -0.113949, -0.334698), (0, -0.113949, -0.334698), (-0.55618, -0.100829, -0.323238), (-0.55618, -0.113949, -0.323238), (0, -0.113949, -0.323238), (0.556181, -0.1109, -0.346158), (0.556181, -0.100829, -0.357617), (0.556181, -0.113949, -0.334698), (0.556181, -0.113949, -0.323238), (0.556181, -0.1109, -0.311778), (0.556181, -0.100829, -0.300318), (0.556181, -0.100829, -0.311778), (0.556181, -0.100829, -0.323238), (0.556181, -0.100829, -0.334698), (0.556181, -0.100829, -0.346158)]
            bool[] primvars:sharp_face = [0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-19.304422, -17.671627), (-19.303703, -17.671627), (-19.303703, -17.67091), (-19.304422, -17.67091), (0, 0.689012), (0, 0.088331), (0.5, 0.088331), (0.5, 0.689012), (0.5, 0.689012), (0.5, 0.088331), (1, 0.088331), (1, 0.689012)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_Television_30_2"
        {
            token outputs:surface.connect = </root/_materials/M_Television_30_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0, 0, 0)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }
    }
}

