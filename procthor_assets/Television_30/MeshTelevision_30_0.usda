#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.0"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "Television_30"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Television_30" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.55618, -0.113949, -0.372731), (0.556181, -0.047291, 0.422726)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 53, 86, 87, 55, 22, 20, 25, 27, 21, 24, 23, 26, 22, 27, 29, 28, 27, 90, 91, 29, 26, 23, 31, 30, 77, 22, 28, 76, 25, 20, 78, 79, 28, 29, 33, 32, 29, 91, 92, 33, 30, 31, 35, 34, 76, 28, 32, 75, 57, 85, 86, 53, 56, 58, 54, 52, 88, 59, 55, 87, 59, 57, 53, 55, 32, 33, 38, 39, 33, 92, 93, 38, 34, 35, 36, 37, 75, 32, 39, 74, 20, 22, 77, 78, 61, 84, 85, 57, 60, 62, 58, 56, 89, 63, 59, 88, 63, 61, 57, 59, 25, 79, 80, 71, 21, 26, 102, 70, 64, 105, 62, 60, 65, 83, 84, 61, 66, 104, 105, 64, 67, 82, 83, 65, 68, 103, 104, 66, 69, 81, 82, 67, 70, 102, 103, 68, 71, 80, 81, 69, 35, 75, 74, 36, 31, 76, 75, 35, 23, 77, 76, 31, 78, 77, 23, 24, 79, 78, 24, 21, 80, 79, 21, 70, 81, 80, 70, 68, 82, 81, 68, 66, 83, 82, 66, 64, 84, 83, 64, 60, 85, 84, 60, 56, 86, 85, 56, 52, 87, 86, 52, 54, 58, 88, 87, 54, 62, 89, 88, 58, 91, 90, 26, 30, 92, 91, 30, 34, 93, 92, 34, 37, 27, 25, 71, 98, 99, 98, 71, 69, 100, 99, 69, 67, 101, 100, 67, 65, 63, 101, 65, 61, 4, 5, 7, 6, 40, 72, 73, 51, 42, 40, 51, 50, 95, 42, 50, 94, 41, 43, 49, 48, 45, 97, 72, 40, 44, 45, 40, 42, 96, 44, 42, 95, 47, 46, 43, 41, 37, 36, 48, 49, 38, 93, 94, 50, 39, 38, 50, 51, 74, 39, 51, 73, 107, 106, 108, 109, 106, 110, 108, 112, 111, 113, 114, 112, 113, 115, 117, 116, 111, 112, 118, 117, 112, 114, 120, 119, 116, 117, 121, 120, 117, 118, 108, 110, 119, 120, 109, 108, 120, 121, 72, 41, 48, 73, 36, 74, 73, 48, 122, 114, 115, 123, 124, 118, 114, 122, 125, 121, 118, 124, 126, 109, 121, 125, 127, 107, 109, 126, 94, 93, 37, 49, 43, 95, 94, 49, 46, 96, 95, 43, 72, 97, 47, 41, 128, 127, 126, 129, 128, 126, 125, 130, 129, 125, 124, 131, 130, 124, 122, 123, 131, 122, 90, 27, 106, 107, 27, 98, 110, 106, 101, 63, 113, 111, 63, 89, 115, 113, 100, 101, 111, 116, 99, 100, 116, 119, 98, 99, 119, 110, 89, 62, 123, 115, 26, 90, 107, 127, 102, 26, 127, 128, 103, 102, 128, 129, 104, 103, 129, 130, 105, 104, 130, 131, 62, 105, 131, 123, 8, 9, 11, 10, 45, 44, 96, 97, 97, 96, 46, 47, 12, 13, 15, 14, 16, 17, 19, 18]
            rel material:binding = </root/_materials/M_Television_30_0>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -0.99999994), (0, 0, -1), (0, 0, -1), (0, 0, -0.99999994), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0.00001674632, -3.5095897e-7), (1, 0.000011605386, -7.01918e-7), (1, 0.000011605386, -7.01918e-7), (1, 0.000011634477, -2.4382814e-7), (0, -1, 4.6526134e-7), (0, -1, -4.6526134e-7), (0, -1, -4.6537184e-7), (0, -1, 4.6537184e-7), (0, -1, -4.6526134e-7), (0, -1, -5.744718e-7), (0, -1, -5.7434676e-7), (0, -1, -4.6537184e-7), (0, -1, -1.09065056e-7), (0, -1, 0), (0, -1, 0), (0, -1, -1.0906505e-7), (0, -1, 4.6542593e-7), (0, -1, 4.6526134e-7), (0, -1, 4.6537184e-7), (0, -1, 4.6526253e-7), (0, 1, 0), (0, 1, 0), (0, 1, -3.7341147e-10), (0, 1, -1.8670573e-10), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0.000026324427, 0), (1, 0.000026324427, 0), (1, 0.000026324427, 0), (1, 0.000026324427, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, -9.1858465e-7), (0, -1, 9.1858465e-7), (0, -1, 7.232314e-7), (0, -1, -7.232314e-7), (0, -1, 9.1858465e-7), (0, -1, 3.4967252e-7), (0, -1, 3.5001713e-7), (0, -1, 7.232314e-7), (0, -1, -5.0234627e-7), (0, -1, 9.1857606e-7), (0, -1, 7.232342e-7), (0, -1, -3.9551873e-7), (0, -1, 2.2269876e-10), (0, -1, -9.1858465e-7), (0, -1, -7.232314e-7), (0, -1, -2.2284351e-10), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.0000027196534, 0, -1), (0, 0, -1), (0, 0, -1), (-0.000002642491, 0, -1), (0.0000027196895, 0, -1), (0.000002733217, 0, -1), (0.0000026379723, 0, -1), (0.0000026424757, 0, -1), (0, 0, -1), (-0.0000027332533, 0, -1), (-0.000002637957, 0, -1), (0, 0, -1), (-0.0000027332533, 0, -1), (-0.0000027196534, 0, -1), (-0.000002642491, 0, -1), (-0.000002637957, 0, -1), (0, 1, 0), (0, 1, -1.8670573e-10), (0, 1, 0), (0, 1, 0), (1, 0.00001674632, -3.5095897e-7), (1, 0.000011634477, -2.4382814e-7), (1, 0.000010943628, 0), (1, 0.000021887256, 0), (1, 0.00002188637, 0), (1, 0.000010943185, 0), (1, 0.000011649576, 0), (1, 0.00002188545, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0.000021886333, 0), (1, 0.000010943167, 0), (1, 0.000010943185, 0), (1, 0.00002188637, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0.000021886315, 0), (1, 0.000010943158, 0), (1, 0.000010943167, 0), (1, 0.000021886333, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0.000021887256, 0), (1, 0.000010943628, 0), (1, 0.000010943158, 0), (1, 0.000021886315, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 9.1857606e-7), (0, -1, 2.2269876e-10), (0, -1, -2.2284351e-10), (0, -1, 7.232342e-7), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 4.6542593e-7), (0, -1, 4.6526253e-7), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 1, -1.8670573e-10), (0, 1, -3.7341147e-10), (0, 1, -7.4682294e-10), (0, 1, -3.7341163e-10), (0, 1, 0), (0, 1, -1.8670573e-10), (0, 1, -3.7341163e-10), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0.0000027196895, 0, -1), (0.0000026424757, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0.000002733217, 0, -1), (0, 0, -1), (0, 0, -1), (0.0000026379723, 0, -1), (0, -1, -5.7434676e-7), (0, -1, -5.744718e-7), (0, -1, -1.09065056e-7), (0, -1, -1.0906505e-7), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, 3.5001713e-7), (0, -1, 3.4967252e-7), (0, -1, -5.0234627e-7), (0, -1, -3.9551873e-7), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, -4.1457267e-7), (0, -1, -4.32236e-7), (0, -1, -4.3220163e-7), (0, -1, -4.85154e-7), (0, -1, 2.072868e-7), (0, -1, -4.1457267e-7), (0, -1, -4.85154e-7), (0, -1, 2.4257716e-7), (0, -1, 2.161184e-7), (0, -1, 2.072868e-7), (0, -1, 2.4257716e-7), (0, -1, 2.1610121e-7), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.8212492, -0.57056975), (0, -0.8212491, -0.57056975), (0, -0.8212491, -0.57056975), (0, -0.8212492, -0.57056975), (0.8297746, -0.5580986, 0), (0.8297746, -0.5580986, 0), (0.8297746, -0.5580986, 0), (0.8297746, -0.5580986, 0), (0, -0.82124954, 0.57056916), (0, -0.8212496, 0.57056916), (0, -0.8212496, 0.57056916), (0, -0.82124954, 0.57056916), (-0.82977325, -0.55810064, 0), (-0.82977325, -0.55810064, 0), (-0.82977325, -0.55810064, 0), (-0.82977325, -0.55810064, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -0.75116205, 0.66011775), (0, -0.75116205, 0.6601179), (0.000011254158, -0.86788344, 0.4967679), (0, -0.8678762, 0.4967805), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0.000001406624, -0.8678909, -0.4967548), (0, -0.86787254, -0.4967868), (0, -0.7511331, -0.6601508), (0, -0.75113314, -0.6601507), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1.0775422e-7, -0.9912661, -0.13187732), (0, -0.9912621, -0.13190693), (0, -0.86787254, -0.4967868), (0.000001406624, -0.8678909, -0.4967548), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1.0709365e-7, -0.991266, 0.13187765), (-1.9899432e-10, -0.9912621, 0.13190725), (0, -0.9912621, -0.13190693), (1.0775422e-7, -0.9912661, -0.13187732), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -0.8678762, 0.4967805), (0.000011254158, -0.86788344, 0.4967679), (-1.9899432e-10, -0.9912621, 0.13190725), (1.0709365e-7, -0.991266, 0.13187765), (0, -1, -4.32236e-7), (0, -1, 0), (0, -1, 0), (0, -1, -4.3220163e-7), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (2.5669313e-9, -0.8678727, -0.49678653), (0.000001406624, -0.8678909, -0.4967548), (0, -0.75113314, -0.6601507), (0, -0.75113326, -0.66015065), (1.9899428e-10, -0.99126214, -0.13190672), (1.0775422e-7, -0.9912661, -0.13187732), (0.000001406624, -0.8678909, -0.4967548), (2.5669313e-9, -0.8678727, -0.49678653), (0, -0.9912621, 0.13190702), (1.0709365e-7, -0.991266, 0.13187765), (1.0775422e-7, -0.9912661, -0.13187732), (1.9899428e-10, -0.99126214, -0.13190672), (0, -0.8678836, 0.49676755), (0, -0.8678762, 0.4967805), (1.0709365e-7, -0.991266, 0.13187765), (0, -0.9912621, 0.13190702), (0, -0.7511622, 0.6601177), (0, -0.75116205, 0.66011775), (0, -0.8678762, 0.4967805), (0, -0.8678836, 0.49676755), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 2.161184e-7), (0, -1, 2.1610121e-7), (0, -1, 0), (0, -0.8212495, 0.5705692), (0, -0.82124954, 0.57056916), (0, -0.82124954, 0.57056916), (0, -0.8212495, 0.5705692), (0, -0.8212491, -0.57056975), (0, -0.8212491, -0.57056975), (0, -0.8212491, -0.5705699), (0, -0.8212491, -0.5705699), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -0.18933201, 0.98191315), (0, -0.18933211, 0.9819131), (0, -0.18933211, 0.9819131), (0, -0.18933201, 0.98191315), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -0.1894756, -0.9818854), (0, -0.18947549, -0.98188543), (0, -0.18947549, -0.98188543), (0, -0.1894756, -0.9818854), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -0.18947549, -0.98188543), (0, -0.18947537, -0.98188543), (0, -0.18947537, -0.98188543), (0, -0.18947549, -0.98188543), (0, -0.18933189, 0.9819132), (0, -0.18933201, 0.98191315), (0, -0.18933201, 0.98191315), (0, -0.18933189, 0.9819132), (1, 0.000010943628, 0), (1, 0.000011634477, -2.4382814e-7), (1, 0, 0), (1, 0, 0), (1, 0.000010943158, 0), (1, 0.000010943628, 0), (1, 0, 0), (1, 0, 0), (1, 0.000010943167, 0), (1, 0.000010943158, 0), (1, 0, 0), (1, 0, 0), (1, 0.000010943185, 0), (1, 0.000010943167, 0), (1, 0, 0), (1, 0, 0), (1, 0.000011649576, 0), (1, 0.000010943185, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.0008, -0.048889, 0.036887), (0.0008, -0.048889, 0.036887), (-0.0008, -0.047291, 0.036887), (0.0008, -0.047291, 0.036887), (-0.0008, -0.048889, 0.036887), (0.0008, -0.048889, 0.036887), (-0.0008, -0.047291, 0.036887), (0.0008, -0.047291, 0.036887), (-0.0008, -0.048889, 0.036887), (0.0008, -0.048889, 0.036887), (-0.0008, -0.047291, 0.036887), (0.0008, -0.047291, 0.036887), (-0.0008, -0.048889, 0.036887), (0.0008, -0.048889, 0.036887), (-0.0008, -0.047291, 0.036887), (0.0008, -0.047291, 0.036887), (-0.0008, -0.048889, 0.036887), (0.0008, -0.048889, 0.036887), (-0.0008, -0.047291, 0.036887), (0.0008, -0.047291, 0.036887), (-0.55618, -0.04809, 0.422726), (0.55618, -0.04809, -0.299067), (-0.55618, -0.094341, 0.422726), (0.556181, -0.094341, 0.422726), (0.556181, -0.04809, 0.422726), (-0.55618, -0.04809, -0.299067), (0.556181, -0.094341, -0.299067), (-0.55618, -0.094341, -0.299067), (-0.548934, -0.094341, 0.415482), (-0.548934, -0.094341, -0.291823), (0.548937, -0.094341, -0.291823), (0.548937, -0.094341, 0.415482), (-0.548934, -0.083801, 0.415482), (-0.548934, -0.083801, -0.291823), (0.548937, -0.083801, -0.291823), (0.548937, -0.083801, 0.415482), (0.54568, -0.083801, 0.411074), (0.54568, -0.083801, -0.287415), (-0.545677, -0.083801, -0.287415), (-0.545677, -0.083801, 0.411074), (-0.532503, -0.094341, 0.395086), (0.532504, -0.094341, 0.395086), (-0.532503, -0.094341, -0.271427), (0.532504, -0.094341, -0.271427), (-0.523803, -0.081406, -0.252809), (-0.523803, -0.081406, 0.376468), (0.523804, -0.081406, -0.252809), (0.523804, -0.081406, 0.376468), (0.54568, -0.094341, 0.411074), (0.54568, -0.094341, -0.287415), (-0.545677, -0.094341, -0.287415), (-0.545677, -0.094341, 0.411074), (0.552041, -0.05209, -0.372731), (-0.552041, -0.05209, -0.372731), (0.552042, -0.090373, -0.372731), (-0.552041, -0.090373, -0.372731), (0.552041, -0.05209, -0.358869), (-0.552041, -0.05209, -0.358869), (0.552042, -0.090373, -0.358869), (-0.552041, -0.090373, -0.358869), (0.55618, -0.04809, -0.358869), (-0.55618, -0.04809, -0.358869), (0.556181, -0.094341, -0.358869), (-0.55618, -0.094341, -0.358869), (0.55618, -0.04809, -0.346908), (-0.55618, -0.04809, -0.346908), (0.55618, -0.04809, -0.334948), (-0.55618, -0.04809, -0.334948), (0.55618, -0.04809, -0.322987), (-0.55618, -0.04809, -0.322987), (0.55618, -0.04809, -0.311027), (-0.55618, -0.04809, -0.311027), (0, -0.094341, 0.395086), (0.000001, -0.094341, 0.411074), (0.000001, -0.083801, 0.411074), (0.000002, -0.083801, 0.415482), (0.000002, -0.094341, 0.415482), (0, -0.094341, 0.422726), (0, -0.04809, 0.422726), (0, -0.04809, -0.299067), (0, -0.04809, -0.311027), (0, -0.04809, -0.322987), (0, -0.04809, -0.334948), (0, -0.04809, -0.346908), (0, -0.04809, -0.358869), (0, -0.05209, -0.358869), (0, -0.05209, -0.372731), (0, -0.090373, -0.372731), (0, -0.090373, -0.358869), (0, -0.094341, -0.358869), (0, -0.094341, -0.299067), (0.000002, -0.094341, -0.291823), (0.000002, -0.083801, -0.291823), (0.000001, -0.083801, -0.287415), (0.000001, -0.094341, -0.287415), (0, -0.094341, -0.271427), (0, -0.081406, -0.252809), (0, -0.081406, 0.376468), (-0.55618, -0.094341, -0.311027), (-0.55618, -0.094341, -0.322987), (-0.55618, -0.094341, -0.334948), (-0.55618, -0.094341, -0.346908), (0.556181, -0.094341, -0.311027), (0.556181, -0.094341, -0.322987), (0.556181, -0.094341, -0.334948), (0.556181, -0.094341, -0.346908), (-0.55618, -0.100829, -0.300318), (0, -0.100829, -0.300318), (-0.55618, -0.1109, -0.311778), (0, -0.1109, -0.311778), (-0.55618, -0.100829, -0.311778), (-0.55618, -0.100829, -0.346158), (-0.55618, -0.1109, -0.346158), (-0.55618, -0.100829, -0.357617), (0, -0.1109, -0.346158), (0, -0.100829, -0.357617), (-0.55618, -0.100829, -0.334698), (-0.55618, -0.113949, -0.334698), (0, -0.113949, -0.334698), (-0.55618, -0.100829, -0.323238), (-0.55618, -0.113949, -0.323238), (0, -0.113949, -0.323238), (0.556181, -0.1109, -0.346158), (0.556181, -0.100829, -0.357617), (0.556181, -0.113949, -0.334698), (0.556181, -0.113949, -0.323238), (0.556181, -0.1109, -0.311778), (0.556181, -0.100829, -0.300318), (0.556181, -0.100829, -0.311778), (0.556181, -0.100829, -0.323238), (0.556181, -0.100829, -0.334698), (0.556181, -0.100829, -0.346158)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-44.11856, -17.671623), (-44.117844, -17.671623), (-44.117844, -17.670904), (-44.11856, -17.670904), (-45.151478, 0.690543), (-44.07316, 0.690547), (-44.073162, 0.765309), (-45.15148, 0.765313), (-45.26718, 0.594805), (-45.26718, 0.504458), (-43.857388, 0.504458), (-43.85739, 0.59481), (-43.857475, 0.568311), (-45.267082, 0.568313), (-45.26709, 0.477999), (-43.85748, 0.478), (-45.161217, 0.844529), (-45.161217, -0.565095), (-45.147064, -0.550962), (-45.147064, 0.830383), (-45.161217, -0.565095), (-44.075024, -0.565095), (-44.07502, -0.550959), (-45.147064, -0.550962), (-42.988815, -0.565098), (-42.98882, 0.844535), (-43.002964, 0.830383), (-43.002968, -0.550958), (-44.075016, 0.844532), (-45.161217, 0.844529), (-45.147064, 0.830383), (-44.075016, 0.830383), (-45.1613, 1.129728), (-45.16131, -0.280013), (-44.075024, -0.280012), (-44.075016, 1.129729), (-45.17785, 0.494405), (-43.79657, 0.494401), (-43.79657, 0.514998), (-45.17785, 0.514997), (-45.647377, 0.568224), (-44.574886, 0.568225), (-44.574886, 0.588823), (-45.647377, 0.588822), (-43.79614, 0.504563), (-45.178288, 0.50456), (-45.178288, 0.483968), (-43.796135, 0.483972), (-44.574886, 0.578378), (-45.646935, 0.57838), (-45.646935, 0.557803), (-44.574886, 0.557802), (-45.150993, 0.745157), (-44.073162, 0.745161), (-44.073162, 0.772238), (-45.150993, 0.772233), (-44.299614, 0.49663), (-44.374435, 0.49663), (-44.374443, 0.469533), (-44.299614, 0.469535), (-44.073162, 0.759538), (-45.151657, 0.759535), (-45.15166, 0.732467), (-44.07316, 0.732463), (-44.29928, 0.484811), (-44.374775, 0.484809), (-44.374783, 0.45748), (-44.29928, 0.457481), (-45.64615, 1.435543), (-45.646152, 0.055212), (-45.639797, 0.063817), (-45.639793, 1.426939), (-45.646152, 0.055212), (-44.574886, 0.055212), (-44.574886, 0.063817), (-45.639797, 0.063817), (-43.50362, 0.055212), (-43.50362, 1.435546), (-43.50997, 1.426939), (-43.509975, 0.063817), (-44.574886, 1.435546), (-45.64615, 1.435543), (-45.639793, 1.426939), (-44.57488, 1.426936), (-45.161354, 0.720498), (-45.161346, 0.630162), (-44.075016, 0.630164), (-44.075016, 0.720495), (-45.160892, 0.657366), (-44.075024, 0.657366), (-44.075016, 0.665178), (-45.152817, 0.665178), (-42.989147, 0.657365), (-42.989147, 0.747674), (-42.997227, 0.739924), (-42.997227, 0.665174), (-44.075024, 0.747675), (-45.160892, 0.747671), (-45.152813, 0.739924), (-44.075024, 0.739928), (-45.160892, 0.747671), (-45.160892, 0.657366), (-45.152817, 0.665178), (-45.152813, 0.739924), (-45.1613, 1.129728), (-44.075016, 1.129729), (-44.075016, 1.153093), (-45.1613, 1.153093), (-43.857475, 0.568311), (-43.85748, 0.478), (-43.834114, 0.477996), (-43.83412, 0.568316), (-43.76404, 0.568313), (-43.76404, 0.477996), (-43.740685, 0.478), (-43.740685, 0.568313), (-45.1613, 1.223175), (-44.075024, 1.223177), (-44.075016, 1.246542), (-45.1613, 1.246542), (-43.787403, 0.568311), (-43.7874, 0.478), (-43.76404, 0.477996), (-43.76404, 0.568313), (-45.1613, 1.199807), (-44.075024, 1.199812), (-44.075024, 1.223177), (-45.1613, 1.223175), (-43.810757, 0.568313), (-43.810757, 0.477994), (-43.7874, 0.478), (-43.787403, 0.568311), (-45.1613, 1.176458), (-44.075016, 1.176458), (-44.075024, 1.199812), (-45.1613, 1.199807), (-43.83412, 0.568316), (-43.834114, 0.477996), (-43.810757, 0.477994), (-43.810757, 0.568313), (-45.1613, 1.153093), (-44.075016, 1.153093), (-44.075016, 1.176458), (-45.1613, 1.176458), (-43.50362, 1.435546), (-44.574886, 1.435546), (-44.57488, 1.426936), (-43.50997, 1.426939), (-43.502827, 0.578375), (-44.574886, 0.578378), (-44.574886, 0.557802), (-43.502834, 0.557798), (-42.98882, 0.844535), (-44.075016, 0.844532), (-44.075016, 0.830383), (-43.002964, 0.830383), (-44.075016, 0.720495), (-44.075016, 0.630164), (-42.988686, 0.630168), (-42.988686, 0.720495), (-44.075016, 1.129729), (-44.075024, -0.280012), (-42.988735, -0.280016), (-42.988735, 1.129734), (-44.075016, 1.153093), (-44.075016, 1.129729), (-42.988735, 1.129734), (-42.988735, 1.153099), (-44.075016, 1.176458), (-44.075016, 1.153093), (-42.988735, 1.153099), (-42.988735, 1.176464), (-44.075024, 1.199812), (-44.075016, 1.176458), (-42.988735, 1.176464), (-42.98874, 1.199813), (-44.075024, 1.223177), (-44.075024, 1.199812), (-42.98874, 1.199813), (-42.98874, 1.223178), (-44.075016, 1.246542), (-44.075024, 1.223177), (-42.98874, 1.223178), (-42.988735, 1.246547), (-44.075016, 0.665178), (-44.075024, 0.657366), (-42.989147, 0.657365), (-42.997227, 0.665174), (-44.073162, 0.772238), (-44.073162, 0.745161), (-42.99533, 0.745161), (-42.99533, 0.772238), (-44.073162, 0.765309), (-44.07316, 0.690547), (-42.994843, 0.690543), (-42.994843, 0.765316), (-42.99466, 0.759535), (-44.073162, 0.759538), (-44.07316, 0.732463), (-42.99466, 0.732467), (-42.989147, 0.747674), (-44.075024, 0.747675), (-44.075024, 0.739928), (-42.997227, 0.739924), (-44.07502, -0.550959), (-44.075024, -0.565095), (-42.988815, -0.565098), (-43.002968, -0.550958), (-44.574886, 0.588823), (-44.574886, 0.568225), (-43.502396, 0.568225), (-43.502396, 0.588823), (-44.574886, 0.063817), (-44.574886, 0.055212), (-43.50362, 0.055212), (-43.509975, 0.063817), (-43.85739, 0.59481), (-43.857388, 0.504458), (-43.834034, 0.504462), (-43.83403, 0.594804), (-43.810673, 0.594808), (-43.83403, 0.594804), (-43.834034, 0.504462), (-43.810673, 0.504461), (-43.787308, 0.59481), (-43.810673, 0.594808), (-43.810673, 0.504461), (-43.78731, 0.50446), (-43.763943, 0.594805), (-43.787308, 0.59481), (-43.78731, 0.50446), (-43.76395, 0.504462), (-43.74059, 0.594808), (-43.763943, 0.594805), (-43.76395, 0.504462), (-43.74059, 0.504461), (-30.730785, -18.173307), (-30.730785, -18.17474), (-30.729355, -18.17474), (-30.729355, -18.173307), (-30.456219, 1.615412), (-30.456219, 0.490598), (-30.422445, 0.490596), (-30.422445, 1.64324), (-31.864103, 1.615412), (-30.456219, 1.615412), (-30.422445, 1.64324), (-31.897877, 1.64324), (-31.864103, 0.490598), (-31.864103, 1.615412), (-31.897877, 1.64324), (-31.897877, 0.490596), (-30.456219, -0.634216), (-31.864103, -0.634216), (-31.897877, -0.662048), (-30.422445, -0.662048), (-30.495546, 1.597035), (-30.495546, 0.490598), (-30.456219, 0.490598), (-30.456219, 1.615412), (-31.824778, 1.597035), (-30.495546, 1.597035), (-30.456219, 1.615412), (-31.864103, 1.615412), (-31.824778, 0.490598), (-31.824778, 1.597035), (-31.864103, 1.615412), (-31.864103, 0.490598), (-30.495546, -0.61584), (-31.824778, -0.61584), (-31.864103, -0.634216), (-30.456219, -0.634216), (-30.794455, -0.367402), (-30.794455, 0.996818), (-30.815039, 0.996818), (-30.815039, -0.367402), (-30.847225, 1.556377), (-30.847225, 0.490596), (-30.826641, 0.490596), (-30.826641, 1.556377), (-30.798946, 0.996881), (-30.798946, -0.367465), (-30.778358, -0.367465), (-30.778358, 0.996881), (-30.810549, 0.490596), (-30.810549, 1.556369), (-30.831133, 1.556369), (-30.831133, 0.490596), (-31.542091, 0.500001), (-31.542091, 1.748233), (-31.564695, 1.748233), (-31.564695, 0.500001), (-30.774975, 0.084725), (-30.774975, 0.062341), (-30.755304, 0.062341), (-30.755304, -0.00481), (-30.774975, -0.00481), (-30.774975, -0.027193), (-31.46834, 0.5), (-31.46834, 1.74823), (-31.490944, 1.74823), (-31.490944, 0.5), (-30.74935, 0.017574), (-30.774975, 0.017574), (-30.774975, -0.00481), (-30.755304, -0.00481), (-31.527817, 0.5), (-31.527817, 1.598804), (-31.550459, 1.598804), (-31.550459, 0.5), (-30.74935, 0.039958), (-30.774975, 0.039958), (-30.774975, 0.017574), (-30.74935, 0.017574), (-31.505177, 0.5), (-31.505177, 1.598804), (-31.527817, 1.598804), (-31.527817, 0.5), (-30.755304, 0.062341), (-30.774975, 0.062341), (-30.774975, 0.039958), (-30.74935, 0.039958), (-31.482534, 0.5), (-31.482534, 1.598804), (-31.505177, 1.598804), (-31.505177, 0.5), (-30.456219, 0.490598), (-30.456219, -0.634216), (-30.422445, -0.662048), (-30.422445, 0.490596), (-30.810549, -0.575177), (-30.810549, 0.490596), (-30.831133, 0.490596), (-30.831133, -0.575177), (-31.46834, -0.748231), (-31.46834, 0.5), (-31.490944, 0.5), (-31.490944, -0.748231), (-31.527817, -0.598804), (-31.527817, 0.5), (-31.550459, 0.5), (-31.550459, -0.598804), (-31.505177, -0.598804), (-31.505177, 0.5), (-31.527817, 0.5), (-31.527817, -0.598804), (-31.482534, -0.598804), (-31.482534, 0.5), (-31.505177, 0.5), (-31.505177, -0.598804), (-31.542091, -0.748233), (-31.542091, 0.500001), (-31.564695, 0.500001), (-31.564695, -0.748233), (-30.826641, 0.490596), (-30.847225, 0.490596), (-30.847225, -0.575185), (-30.826641, -0.575185), (-31.864103, -0.634216), (-31.864103, 0.490598), (-31.897877, 0.490596), (-31.897877, -0.662048), (-31.824778, -0.61584), (-31.824778, 0.490598), (-31.864103, 0.490598), (-31.864103, -0.634216), (-30.456219, 0.490598), (-30.495546, 0.490598), (-30.495546, -0.61584), (-30.456219, -0.634216), (-30.738771, 0.062342), (-30.738771, 0.084725), (-30.758444, 0.062342), (-30.738771, 0.039958), (-30.738771, 0.062342), (-30.758444, 0.062342), (-30.764402, 0.039958), (-30.738771, 0.017574), (-30.738771, 0.039958), (-30.764402, 0.039958), (-30.764402, 0.017574), (-30.738771, -0.00481), (-30.738771, 0.017574), (-30.764402, 0.017574), (-30.758444, -0.00481), (-30.738771, -0.027194), (-30.738771, -0.00481), (-30.758444, -0.00481), (-31.527529, 0.500001), (-31.527529, 1.748233), (-31.542091, 1.748233), (-31.542091, 0.500001), (-30.78765, 0.087169), (-30.78765, 0.063808), (-30.774975, 0.062341), (-30.774975, 0.084725), (-30.78765, -0.006276), (-30.78765, -0.029638), (-30.774975, -0.027193), (-30.774975, -0.00481), (-31.505507, 1.74823), (-31.505507, 0.5), (-31.490944, 0.5), (-31.490944, 1.74823), (-30.78765, 0.017085), (-30.78765, -0.006276), (-30.774975, -0.00481), (-30.774975, 0.017574), (-30.78765, 0.040446), (-30.78765, 0.017085), (-30.774975, 0.017574), (-30.774975, 0.039958), (-30.78765, 0.063808), (-30.78765, 0.040446), (-30.774975, 0.039958), (-30.774975, 0.062341), (-31.505507, 0.5), (-31.505507, -0.748231), (-31.490944, -0.748231), (-31.490944, 0.5), (-31.527529, -0.748233), (-31.527529, 0.500001), (-31.542091, 0.500001), (-31.542091, -0.748233), (-30.726103, 0.063808), (-30.726103, 0.08717), (-30.738771, 0.084725), (-30.738771, 0.062342), (-30.726103, 0.040447), (-30.726103, 0.063808), (-30.738771, 0.062342), (-30.738771, 0.039958), (-30.726103, 0.017085), (-30.726103, 0.040447), (-30.738771, 0.039958), (-30.738771, 0.017574), (-30.726103, -0.006277), (-30.726103, 0.017085), (-30.738771, 0.017574), (-30.738771, -0.00481), (-30.726103, -0.029638), (-30.726103, -0.006277), (-30.738771, -0.00481), (-30.738771, -0.027194), (-19.304422, -17.671627), (-19.303703, -17.671627), (-19.303703, -17.67091), (-19.304422, -17.67091), (0, 0.689012), (0, 0.088331), (0.5, 0.088331), (0.5, 0.689012), (0.5, 0.689012), (0.5, 0.088331), (1, 0.088331), (1, 0.689012), (-7.902802, -17.671627), (-7.902084, -17.671627), (-7.902084, -17.67091), (-7.902802, -17.67091), (-7.909212, -17.671627), (-7.908494, -17.671627), (-7.908494, -17.67091), (-7.909212, -17.67091)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_Television_30_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58]
                rel material:binding = </root/_materials/M_Television_30_0>
            }

            def GeomSubset "M_Television_30_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111]
                rel material:binding = </root/_materials/M_Television_30_1>
            }

            def GeomSubset "M_Television_30_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [112, 113, 114]
                rel material:binding = </root/_materials/M_Television_30_2>
            }

            def GeomSubset "M_Television_30_3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [115]
                rel material:binding = </root/_materials/M_Television_30_3>
            }

            def GeomSubset "M_Television_30_4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [116]
                rel material:binding = </root/_materials/M_Television_30_4>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_Television_30_0"
        {
            token outputs:surface.connect = </root/_materials/M_Television_30_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.5709343, 0.61240906, 0.64705884)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_Television_30_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Television_30_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_Television_30_1"
        {
            token outputs:surface.connect = </root/_materials/M_Television_30_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_Television_30_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_Television_30_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/MetalBumpy_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Television_30_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/MetalBumpy_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Television_30_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_Television_30_2"
        {
            token outputs:surface.connect = </root/_materials/M_Television_30_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0, 0, 0)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }

        def Material "M_Television_30_3"
        {
            token outputs:surface.connect = </root/_materials/M_Television_30_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.5661765, 0.5661765, 0.5661765)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }

        def Material "M_Television_30_4"
        {
            token outputs:surface.connect = </root/_materials/M_Television_30_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.8, 0.8, 0.8)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 1
                float inputs:specular = 0
                token outputs:surface
            }
        }
    }
}

