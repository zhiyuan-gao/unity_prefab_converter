#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshTelevision_30_0_GeomSubset_1"
    {
        def Mesh "MeshTelevision_30_0_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [4, 5, 7, 6, 40, 72, 73, 51, 42, 40, 51, 50, 95, 42, 50, 94, 41, 43, 49, 48, 45, 97, 72, 40, 44, 45, 40, 42, 96, 44, 42, 95, 47, 46, 43, 41, 37, 36, 48, 49, 38, 93, 94, 50, 39, 38, 50, 51, 74, 39, 51, 73, 107, 106, 108, 109, 106, 110, 108, 112, 111, 113, 114, 112, 113, 115, 117, 116, 111, 112, 118, 117, 112, 114, 120, 119, 116, 117, 121, 120, 117, 118, 108, 110, 119, 120, 109, 108, 120, 121, 72, 41, 48, 73, 36, 74, 73, 48, 122, 114, 115, 123, 124, 118, 114, 122, 125, 121, 118, 124, 126, 109, 121, 125, 127, 107, 109, 126, 94, 93, 37, 49, 43, 95, 94, 49, 46, 96, 95, 43, 72, 97, 47, 41, 128, 127, 126, 129, 128, 126, 125, 130, 129, 125, 124, 131, 130, 124, 122, 123, 131, 122, 90, 27, 106, 107, 27, 98, 110, 106, 101, 63, 113, 111, 63, 89, 115, 113, 100, 101, 111, 116, 99, 100, 116, 119, 98, 99, 119, 110, 89, 62, 123, 115, 26, 90, 107, 127, 102, 26, 127, 128, 103, 102, 128, 129, 104, 103, 129, 130, 105, 104, 130, 131, 62, 105, 131, 123]
            rel material:binding = </root/_materials/M_Television_30_1>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, -4.1457267e-7), (0, -1, -4.32236e-7), (0, -1, -4.3220163e-7), (0, -1, -4.85154e-7), (0, -1, 2.072868e-7), (0, -1, -4.1457267e-7), (0, -1, -4.85154e-7), (0, -1, 2.4257716e-7), (0, -1, 2.161184e-7), (0, -1, 2.072868e-7), (0, -1, 2.4257716e-7), (0, -1, 2.1610121e-7), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.8212492, -0.57056975), (0, -0.8212491, -0.57056975), (0, -0.8212491, -0.57056975), (0, -0.8212492, -0.57056975), (0.8297746, -0.5580986, 0), (0.8297746, -0.5580986, 0), (0.8297746, -0.5580986, 0), (0.8297746, -0.5580986, 0), (0, -0.82124954, 0.57056916), (0, -0.8212496, 0.57056916), (0, -0.8212496, 0.57056916), (0, -0.82124954, 0.57056916), (-0.82977325, -0.55810064, 0), (-0.82977325, -0.55810064, 0), (-0.82977325, -0.55810064, 0), (-0.82977325, -0.55810064, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -0.75116205, 0.66011775), (0, -0.75116205, 0.6601179), (0.000011254158, -0.86788344, 0.4967679), (0, -0.8678762, 0.4967805), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0.000001406624, -0.8678909, -0.4967548), (0, -0.86787254, -0.4967868), (0, -0.7511331, -0.6601508), (0, -0.75113314, -0.6601507), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1.0775422e-7, -0.9912661, -0.13187732), (0, -0.9912621, -0.13190693), (0, -0.86787254, -0.4967868), (0.000001406624, -0.8678909, -0.4967548), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1.0709365e-7, -0.991266, 0.13187765), (-1.9899432e-10, -0.9912621, 0.13190725), (0, -0.9912621, -0.13190693), (1.0775422e-7, -0.9912661, -0.13187732), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -0.8678762, 0.4967805), (0.000011254158, -0.86788344, 0.4967679), (-1.9899432e-10, -0.9912621, 0.13190725), (1.0709365e-7, -0.991266, 0.13187765), (0, -1, -4.32236e-7), (0, -1, 0), (0, -1, 0), (0, -1, -4.3220163e-7), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (2.5669313e-9, -0.8678727, -0.49678653), (0.000001406624, -0.8678909, -0.4967548), (0, -0.75113314, -0.6601507), (0, -0.75113326, -0.66015065), (1.9899428e-10, -0.99126214, -0.13190672), (1.0775422e-7, -0.9912661, -0.13187732), (0.000001406624, -0.8678909, -0.4967548), (2.5669313e-9, -0.8678727, -0.49678653), (0, -0.9912621, 0.13190702), (1.0709365e-7, -0.991266, 0.13187765), (1.0775422e-7, -0.9912661, -0.13187732), (1.9899428e-10, -0.99126214, -0.13190672), (0, -0.8678836, 0.49676755), (0, -0.8678762, 0.4967805), (1.0709365e-7, -0.991266, 0.13187765), (0, -0.9912621, 0.13190702), (0, -0.7511622, 0.6601177), (0, -0.75116205, 0.66011775), (0, -0.8678762, 0.4967805), (0, -0.8678836, 0.49676755), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 2.161184e-7), (0, -1, 2.1610121e-7), (0, -1, 0), (0, -0.8212495, 0.5705692), (0, -0.82124954, 0.57056916), (0, -0.82124954, 0.57056916), (0, -0.8212495, 0.5705692), (0, -0.8212491, -0.57056975), (0, -0.8212491, -0.57056975), (0, -0.8212491, -0.5705699), (0, -0.8212491, -0.5705699), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -0.18933201, 0.98191315), (0, -0.18933211, 0.9819131), (0, -0.18933211, 0.9819131), (0, -0.18933201, 0.98191315), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -0.1894756, -0.9818854), (0, -0.18947549, -0.98188543), (0, -0.18947549, -0.98188543), (0, -0.1894756, -0.9818854), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -0.18947549, -0.98188543), (0, -0.18947537, -0.98188543), (0, -0.18947537, -0.98188543), (0, -0.18947549, -0.98188543), (0, -0.18933189, 0.9819132), (0, -0.18933201, 0.98191315), (0, -0.18933201, 0.98191315), (0, -0.18933189, 0.9819132), (1, 0.000010943628, 0), (1, 0.000011634477, -2.4382814e-7), (1, 0, 0), (1, 0, 0), (1, 0.000010943158, 0), (1, 0.000010943628, 0), (1, 0, 0), (1, 0, 0), (1, 0.000010943167, 0), (1, 0.000010943158, 0), (1, 0, 0), (1, 0, 0), (1, 0.000010943185, 0), (1, 0.000010943167, 0), (1, 0, 0), (1, 0, 0), (1, 0.000011649576, 0), (1, 0.000010943185, 0), (1, 0, 0), (1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.0008, -0.048889, 0.036887), (0.0008, -0.048889, 0.036887), (-0.0008, -0.047291, 0.036887), (0.0008, -0.047291, 0.036887), (-0.0008, -0.048889, 0.036887), (0.0008, -0.048889, 0.036887), (-0.0008, -0.047291, 0.036887), (0.0008, -0.047291, 0.036887), (-0.0008, -0.048889, 0.036887), (0.0008, -0.048889, 0.036887), (-0.0008, -0.047291, 0.036887), (0.0008, -0.047291, 0.036887), (-0.0008, -0.048889, 0.036887), (0.0008, -0.048889, 0.036887), (-0.0008, -0.047291, 0.036887), (0.0008, -0.047291, 0.036887), (-0.0008, -0.048889, 0.036887), (0.0008, -0.048889, 0.036887), (-0.0008, -0.047291, 0.036887), (0.0008, -0.047291, 0.036887), (-0.55618, -0.04809, 0.422726), (0.55618, -0.04809, -0.299067), (-0.55618, -0.094341, 0.422726), (0.556181, -0.094341, 0.422726), (0.556181, -0.04809, 0.422726), (-0.55618, -0.04809, -0.299067), (0.556181, -0.094341, -0.299067), (-0.55618, -0.094341, -0.299067), (-0.548934, -0.094341, 0.415482), (-0.548934, -0.094341, -0.291823), (0.548937, -0.094341, -0.291823), (0.548937, -0.094341, 0.415482), (-0.548934, -0.083801, 0.415482), (-0.548934, -0.083801, -0.291823), (0.548937, -0.083801, -0.291823), (0.548937, -0.083801, 0.415482), (0.54568, -0.083801, 0.411074), (0.54568, -0.083801, -0.287415), (-0.545677, -0.083801, -0.287415), (-0.545677, -0.083801, 0.411074), (-0.532503, -0.094341, 0.395086), (0.532504, -0.094341, 0.395086), (-0.532503, -0.094341, -0.271427), (0.532504, -0.094341, -0.271427), (-0.523803, -0.081406, -0.252809), (-0.523803, -0.081406, 0.376468), (0.523804, -0.081406, -0.252809), (0.523804, -0.081406, 0.376468), (0.54568, -0.094341, 0.411074), (0.54568, -0.094341, -0.287415), (-0.545677, -0.094341, -0.287415), (-0.545677, -0.094341, 0.411074), (0.552041, -0.05209, -0.372731), (-0.552041, -0.05209, -0.372731), (0.552042, -0.090373, -0.372731), (-0.552041, -0.090373, -0.372731), (0.552041, -0.05209, -0.358869), (-0.552041, -0.05209, -0.358869), (0.552042, -0.090373, -0.358869), (-0.552041, -0.090373, -0.358869), (0.55618, -0.04809, -0.358869), (-0.55618, -0.04809, -0.358869), (0.556181, -0.094341, -0.358869), (-0.55618, -0.094341, -0.358869), (0.55618, -0.04809, -0.346908), (-0.55618, -0.04809, -0.346908), (0.55618, -0.04809, -0.334948), (-0.55618, -0.04809, -0.334948), (0.55618, -0.04809, -0.322987), (-0.55618, -0.04809, -0.322987), (0.55618, -0.04809, -0.311027), (-0.55618, -0.04809, -0.311027), (0, -0.094341, 0.395086), (0.000001, -0.094341, 0.411074), (0.000001, -0.083801, 0.411074), (0.000002, -0.083801, 0.415482), (0.000002, -0.094341, 0.415482), (0, -0.094341, 0.422726), (0, -0.04809, 0.422726), (0, -0.04809, -0.299067), (0, -0.04809, -0.311027), (0, -0.04809, -0.322987), (0, -0.04809, -0.334948), (0, -0.04809, -0.346908), (0, -0.04809, -0.358869), (0, -0.05209, -0.358869), (0, -0.05209, -0.372731), (0, -0.090373, -0.372731), (0, -0.090373, -0.358869), (0, -0.094341, -0.358869), (0, -0.094341, -0.299067), (0.000002, -0.094341, -0.291823), (0.000002, -0.083801, -0.291823), (0.000001, -0.083801, -0.287415), (0.000001, -0.094341, -0.287415), (0, -0.094341, -0.271427), (0, -0.081406, -0.252809), (0, -0.081406, 0.376468), (-0.55618, -0.094341, -0.311027), (-0.55618, -0.094341, -0.322987), (-0.55618, -0.094341, -0.334948), (-0.55618, -0.094341, -0.346908), (0.556181, -0.094341, -0.311027), (0.556181, -0.094341, -0.322987), (0.556181, -0.094341, -0.334948), (0.556181, -0.094341, -0.346908), (-0.55618, -0.100829, -0.300318), (0, -0.100829, -0.300318), (-0.55618, -0.1109, -0.311778), (0, -0.1109, -0.311778), (-0.55618, -0.100829, -0.311778), (-0.55618, -0.100829, -0.346158), (-0.55618, -0.1109, -0.346158), (-0.55618, -0.100829, -0.357617), (0, -0.1109, -0.346158), (0, -0.100829, -0.357617), (-0.55618, -0.100829, -0.334698), (-0.55618, -0.113949, -0.334698), (0, -0.113949, -0.334698), (-0.55618, -0.100829, -0.323238), (-0.55618, -0.113949, -0.323238), (0, -0.113949, -0.323238), (0.556181, -0.1109, -0.346158), (0.556181, -0.100829, -0.357617), (0.556181, -0.113949, -0.334698), (0.556181, -0.113949, -0.323238), (0.556181, -0.1109, -0.311778), (0.556181, -0.100829, -0.300318), (0.556181, -0.100829, -0.311778), (0.556181, -0.100829, -0.323238), (0.556181, -0.100829, -0.334698), (0.556181, -0.100829, -0.346158)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-30.730785, -18.173307), (-30.730785, -18.17474), (-30.729355, -18.17474), (-30.729355, -18.173307), (-30.456219, 1.615412), (-30.456219, 0.490598), (-30.422445, 0.490596), (-30.422445, 1.64324), (-31.864103, 1.615412), (-30.456219, 1.615412), (-30.422445, 1.64324), (-31.897877, 1.64324), (-31.864103, 0.490598), (-31.864103, 1.615412), (-31.897877, 1.64324), (-31.897877, 0.490596), (-30.456219, -0.634216), (-31.864103, -0.634216), (-31.897877, -0.662048), (-30.422445, -0.662048), (-30.495546, 1.597035), (-30.495546, 0.490598), (-30.456219, 0.490598), (-30.456219, 1.615412), (-31.824778, 1.597035), (-30.495546, 1.597035), (-30.456219, 1.615412), (-31.864103, 1.615412), (-31.824778, 0.490598), (-31.824778, 1.597035), (-31.864103, 1.615412), (-31.864103, 0.490598), (-30.495546, -0.61584), (-31.824778, -0.61584), (-31.864103, -0.634216), (-30.456219, -0.634216), (-30.794455, -0.367402), (-30.794455, 0.996818), (-30.815039, 0.996818), (-30.815039, -0.367402), (-30.847225, 1.556377), (-30.847225, 0.490596), (-30.826641, 0.490596), (-30.826641, 1.556377), (-30.798946, 0.996881), (-30.798946, -0.367465), (-30.778358, -0.367465), (-30.778358, 0.996881), (-30.810549, 0.490596), (-30.810549, 1.556369), (-30.831133, 1.556369), (-30.831133, 0.490596), (-31.542091, 0.500001), (-31.542091, 1.748233), (-31.564695, 1.748233), (-31.564695, 0.500001), (-30.774975, 0.084725), (-30.774975, 0.062341), (-30.755304, 0.062341), (-30.755304, -0.00481), (-30.774975, -0.00481), (-30.774975, -0.027193), (-31.46834, 0.5), (-31.46834, 1.74823), (-31.490944, 1.74823), (-31.490944, 0.5), (-30.74935, 0.017574), (-30.774975, 0.017574), (-30.774975, -0.00481), (-30.755304, -0.00481), (-31.527817, 0.5), (-31.527817, 1.598804), (-31.550459, 1.598804), (-31.550459, 0.5), (-30.74935, 0.039958), (-30.774975, 0.039958), (-30.774975, 0.017574), (-30.74935, 0.017574), (-31.505177, 0.5), (-31.505177, 1.598804), (-31.527817, 1.598804), (-31.527817, 0.5), (-30.755304, 0.062341), (-30.774975, 0.062341), (-30.774975, 0.039958), (-30.74935, 0.039958), (-31.482534, 0.5), (-31.482534, 1.598804), (-31.505177, 1.598804), (-31.505177, 0.5), (-30.456219, 0.490598), (-30.456219, -0.634216), (-30.422445, -0.662048), (-30.422445, 0.490596), (-30.810549, -0.575177), (-30.810549, 0.490596), (-30.831133, 0.490596), (-30.831133, -0.575177), (-31.46834, -0.748231), (-31.46834, 0.5), (-31.490944, 0.5), (-31.490944, -0.748231), (-31.527817, -0.598804), (-31.527817, 0.5), (-31.550459, 0.5), (-31.550459, -0.598804), (-31.505177, -0.598804), (-31.505177, 0.5), (-31.527817, 0.5), (-31.527817, -0.598804), (-31.482534, -0.598804), (-31.482534, 0.5), (-31.505177, 0.5), (-31.505177, -0.598804), (-31.542091, -0.748233), (-31.542091, 0.500001), (-31.564695, 0.500001), (-31.564695, -0.748233), (-30.826641, 0.490596), (-30.847225, 0.490596), (-30.847225, -0.575185), (-30.826641, -0.575185), (-31.864103, -0.634216), (-31.864103, 0.490598), (-31.897877, 0.490596), (-31.897877, -0.662048), (-31.824778, -0.61584), (-31.824778, 0.490598), (-31.864103, 0.490598), (-31.864103, -0.634216), (-30.456219, 0.490598), (-30.495546, 0.490598), (-30.495546, -0.61584), (-30.456219, -0.634216), (-30.738771, 0.062342), (-30.738771, 0.084725), (-30.758444, 0.062342), (-30.738771, 0.039958), (-30.738771, 0.062342), (-30.758444, 0.062342), (-30.764402, 0.039958), (-30.738771, 0.017574), (-30.738771, 0.039958), (-30.764402, 0.039958), (-30.764402, 0.017574), (-30.738771, -0.00481), (-30.738771, 0.017574), (-30.764402, 0.017574), (-30.758444, -0.00481), (-30.738771, -0.027194), (-30.738771, -0.00481), (-30.758444, -0.00481), (-31.527529, 0.500001), (-31.527529, 1.748233), (-31.542091, 1.748233), (-31.542091, 0.500001), (-30.78765, 0.087169), (-30.78765, 0.063808), (-30.774975, 0.062341), (-30.774975, 0.084725), (-30.78765, -0.006276), (-30.78765, -0.029638), (-30.774975, -0.027193), (-30.774975, -0.00481), (-31.505507, 1.74823), (-31.505507, 0.5), (-31.490944, 0.5), (-31.490944, 1.74823), (-30.78765, 0.017085), (-30.78765, -0.006276), (-30.774975, -0.00481), (-30.774975, 0.017574), (-30.78765, 0.040446), (-30.78765, 0.017085), (-30.774975, 0.017574), (-30.774975, 0.039958), (-30.78765, 0.063808), (-30.78765, 0.040446), (-30.774975, 0.039958), (-30.774975, 0.062341), (-31.505507, 0.5), (-31.505507, -0.748231), (-31.490944, -0.748231), (-31.490944, 0.5), (-31.527529, -0.748233), (-31.527529, 0.500001), (-31.542091, 0.500001), (-31.542091, -0.748233), (-30.726103, 0.063808), (-30.726103, 0.08717), (-30.738771, 0.084725), (-30.738771, 0.062342), (-30.726103, 0.040447), (-30.726103, 0.063808), (-30.738771, 0.062342), (-30.738771, 0.039958), (-30.726103, 0.017085), (-30.726103, 0.040447), (-30.738771, 0.039958), (-30.738771, 0.017574), (-30.726103, -0.006277), (-30.726103, 0.017085), (-30.738771, 0.017574), (-30.738771, -0.00481), (-30.726103, -0.029638), (-30.726103, -0.006277), (-30.738771, -0.00481), (-30.738771, -0.027194)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_Television_30_1"
        {
            token outputs:surface.connect = </root/_materials/M_Television_30_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_Television_30_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_Television_30_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/MetalBumpy_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Television_30_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/MetalBumpy_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Television_30_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

