#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "FridgeDrawer2_26_FridgeDrawer2E2_3_GeomSubset_2"
    {
        def Mesh "FridgeDrawer2_26_FridgeDrawer2E2_3_GeomSubset_2"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4]
            int[] faceVertexIndices = [8, 9, 11, 10]
            rel material:binding = </root/_materials/M_FridgeDrawer2E2_2>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.006235, 0.097857, -0.940399), (0.006227, 0.097857, -0.940399), (0.006235, 0.097865, -0.940399), (0.006227, 0.097865, -0.940399), (0.006235, 0.097857, -0.940399), (0.006227, 0.097857, -0.940399), (0.006235, 0.097865, -0.940399), (0.006227, 0.097865, -0.940399), (0.006235, 0.097857, -0.940399), (0.006227, 0.097857, -0.940399), (0.006235, 0.097865, -0.940399), (0.006227, 0.097865, -0.940399), (0.006235, 0.097857, -0.940399), (0.006227, 0.097857, -0.940399), (0.006235, 0.097865, -0.940399), (0.006227, 0.097865, -0.940399), (0.006235, 0.097857, -0.940399), (0.006227, 0.097857, -0.940399), (0.006235, 0.097865, -0.940399), (0.006227, 0.097865, -0.940399), (0.006235, 0.097857, -0.940399), (0.006227, 0.097857, -0.940399), (0.006235, 0.097865, -0.940399), (0.006227, 0.097865, -0.940399), (0.006235, 0.097857, -0.940399), (0.006227, 0.097857, -0.940399), (0.006235, 0.097865, -0.940399), (0.006227, 0.097865, -0.940399), (0.348246, -0.092032, -0.778853), (0.352738, -0.08801, -0.784332), (0.348582, -0.088092, -0.788733), (0.34425, -0.092032, -0.784074), (-0.342792, -0.092032, -0.784074), (-0.347037, -0.088009, -0.788733), (-0.351281, -0.088092, -0.784423), (-0.346788, -0.092032, -0.778853), (0.342814, 0.102858, -0.458374), (0.348495, 0.107117, -0.462775), (0.352738, 0.103177, -0.462686), (0.348247, 0.099368, -0.458374), (-0.346789, 0.099368, -0.458374), (-0.351281, 0.103094, -0.462776), (-0.347125, 0.107117, -0.462685), (-0.341355, 0.102858, -0.458374), (0.352738, 0.103012, -0.784241), (0.348408, 0.107117, -0.784241), (0.348408, 0.103012, -0.788733), (-0.34695, 0.103012, -0.788733), (-0.34695, 0.107117, -0.784241), (-0.351281, 0.103012, -0.784241), (0.348408, -0.087927, -0.458374), (0.352738, -0.087927, -0.462866), (0.348408, -0.092032, -0.462866), (-0.34695, -0.092032, -0.462866), (-0.351281, -0.087927, -0.462866), (-0.34695, -0.087927, -0.458374), (0.332119, -0.092032, -0.770422), (0.328003, -0.087972, -0.765826), (0.332286, -0.088, -0.761415), (0.336683, -0.092032, -0.766005), (-0.335225, -0.092032, -0.766005), (-0.330828, -0.087964, -0.761375), (-0.326593, -0.088017, -0.765826), (-0.330661, -0.092032, -0.770422), (-0.330828, -0.087927, -0.462866), (-0.335159, -0.092032, -0.462866), (-0.335159, -0.087927, -0.458374), (0.336617, -0.087927, -0.458374), (0.336617, -0.092032, -0.462866), (0.332286, -0.087927, -0.462866), (0.332286, 0.086022, -0.462814), (0.328026, 0.09008, -0.462793), (0.332576, 0.09419, -0.458374), (0.336694, 0.089818, -0.458374), (-0.335236, 0.089818, -0.458374), (-0.331121, 0.094236, -0.458374), (-0.326533, 0.09008, -0.46283), (-0.330828, 0.086022, -0.462814), (-0.330828, 0.085974, -0.761334), (-0.326497, 0.09008, -0.761334), (-0.326497, 0.085974, -0.765826), (0.327955, 0.085974, -0.765826), (0.327955, 0.09008, -0.761334), (0.332286, 0.085974, -0.761334), (0.332589, -0.084689, -0.767611), (-0.331131, -0.084689, -0.767611), (0.332589, -0.084689, -0.465898), (-0.331131, -0.084689, -0.465898), (0.332589, -0.070153, -0.465898), (-0.331131, -0.070153, -0.465898), (0.332589, -0.070153, -0.767611), (-0.331131, -0.070153, -0.767611), (-0.339164, -0.090634, -0.505395), (-0.338747, -0.093452, -0.505477), (-0.336541, -0.091664, -0.507637), (-0.267862, -0.111698, -0.507637), (-0.268452, -0.113747, -0.505313), (-0.336541, -0.091664, -0.477022), (-0.338629, -0.093486, -0.479264), (-0.339164, -0.090634, -0.479264), (-0.267862, -0.111698, -0.477022), (-0.268452, -0.113747, -0.479346), (-0.332026, -0.087194, -0.479406), (-0.333302, -0.088988, -0.477022), (-0.335211, -0.087803, -0.479406), (-0.266384, -0.105232, -0.477022), (-0.265899, -0.103158, -0.479346), (-0.333302, -0.088988, -0.507637), (-0.332047, -0.087189, -0.505283), (-0.335193, -0.08779, -0.505283), (-0.265899, -0.103158, -0.505313), (-0.266384, -0.105232, -0.507637), (0.006231, -0.147172, -0.479346), (0.006231, -0.145043, -0.477022), (-0.125626, -0.140407, -0.477022), (-0.125905, -0.142517, -0.479346), (0.006231, -0.129381, -0.477022), (0.006231, -0.127255, -0.479346), (-0.125905, -0.124057, -0.479346), (-0.126098, -0.126174, -0.477022), (0.006231, -0.127255, -0.505313), (0.006231, -0.129381, -0.507637), (-0.126098, -0.126174, -0.507637), (-0.125905, -0.124057, -0.505313), (0.006231, -0.145043, -0.507637), (0.006231, -0.147172, -0.505313), (-0.125905, -0.142517, -0.505313), (-0.125626, -0.140407, -0.507637), (-0.196075, -0.1282, -0.477022), (-0.196541, -0.130278, -0.479346), (-0.196541, -0.115631, -0.479346), (-0.196889, -0.11773, -0.477022), (-0.196889, -0.11773, -0.507637), (-0.196541, -0.115631, -0.505313), (-0.196541, -0.130278, -0.505313), (-0.196075, -0.1282, -0.507637), (0.337999, -0.091664, -0.507637), (0.340087, -0.093486, -0.505395), (0.340622, -0.090634, -0.505395), (0.26932, -0.111698, -0.507637), (0.26991, -0.113747, -0.505313), (0.340622, -0.090634, -0.479264), (0.340205, -0.093452, -0.479181), (0.337999, -0.091664, -0.477022), (0.26932, -0.111698, -0.477022), (0.26991, -0.113747, -0.479346), (0.336669, -0.087803, -0.479406), (0.33476, -0.088988, -0.477022), (0.333483, -0.087194, -0.479406), (0.267843, -0.105232, -0.477022), (0.267357, -0.103158, -0.479346), (0.336651, -0.08779, -0.505283), (0.333483, -0.087194, -0.505253), (0.33476, -0.088988, -0.507637), (0.267357, -0.103158, -0.505313), (0.267843, -0.105232, -0.507637), (0.127364, -0.142517, -0.479346), (0.127083, -0.140407, -0.477022), (0.127557, -0.126174, -0.477022), (0.127364, -0.124057, -0.479346), (0.127364, -0.124057, -0.505313), (0.127557, -0.126174, -0.507637), (0.127083, -0.140407, -0.507637), (0.127364, -0.142517, -0.505313), (0.197999, -0.130278, -0.479346), (0.197533, -0.1282, -0.477022), (0.198347, -0.11773, -0.477022), (0.197999, -0.115631, -0.479346), (0.197999, -0.115631, -0.505313), (0.198347, -0.11773, -0.507637), (0.197533, -0.1282, -0.507637), (0.197999, -0.130278, -0.505313)]
            bool[] primvars:sharp_face = [0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-118.53865, -109.61047), (-118.53865, -113.51364), (-114.667404, -113.51364), (-114.667404, -109.61047)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer2E2_2"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2E2_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer2E2_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2E2_2/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2E2_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2E2_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

