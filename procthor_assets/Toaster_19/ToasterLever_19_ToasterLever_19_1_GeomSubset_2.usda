#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "ToasterLever_19_ToasterLever_19_1_GeomSubset_2"
    {
        def Mesh "ToasterLever_19_ToasterLever_19_1_GeomSubset_2"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4]
            int[] faceVertexIndices = [8, 9, 11, 10]
            rel material:binding = </root/_materials/M_ToasterLever_19_2>
            normal3f[] normals = [(-0.84722114, -3.703321e-8, 0.53124034), (3.703321e-8, -0.84722114, 0.53124034), (0.84722114, 3.703321e-8, 0.53124034), (-3.703321e-8, 0.84722114, 0.53124034)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.002036, -0.211193, 0.040835), (0.002036, -0.207123, 0.040835), (-0.002036, -0.211193, 0.040835), (-0.002036, -0.207123, 0.040835), (0.002036, -0.211193, 0.040835), (0.002036, -0.207123, 0.040835), (-0.002036, -0.211193, 0.040835), (-0.002036, -0.207123, 0.040835), (0.002036, -0.211193, 0.040835), (0.002036, -0.207123, 0.040835), (-0.002036, -0.211193, 0.040835), (-0.002036, -0.207123, 0.040835), (0.002036, -0.211193, 0.040835), (0.002036, -0.207123, 0.040835), (-0.002036, -0.211193, 0.040835), (-0.002036, -0.207123, 0.040835), (0.002036, -0.211193, 0.040835), (0.002036, -0.207123, 0.040835), (-0.002036, -0.211193, 0.040835), (-0.002036, -0.207123, 0.040835), (0.002036, -0.211193, 0.040835), (0.002036, -0.207123, 0.040835), (-0.002036, -0.211193, 0.040835), (-0.002036, -0.207123, 0.040835), (0.024494, -0.217878, 0.039255), (0.024494, -0.217878, 0.042953), (0, -0.217878, 0.042953), (0, -0.217878, 0.039255), (-0.024494, -0.217878, 0.039255), (-0.024494, -0.217878, 0.042953), (-0.003163, -0.201084, 0.040049), (-0.003163, -0.192364, 0.040049), (0, -0.192364, 0.040049), (0, -0.201084, 0.040049), (-0.003163, -0.201084, 0.042204), (-0.003163, -0.192364, 0.042204), (0, -0.192364, 0.042204), (0, -0.201084, 0.042204), (0.003163, -0.201084, 0.040049), (0.003163, -0.192364, 0.040049), (0.003163, -0.201084, 0.042204), (0.003163, -0.192364, 0.042204), (0.024421, -0.225787, 0.039255), (0.024473, -0.22631, 0.039472), (0.024494, -0.226526, 0.039994), (0.027803, -0.225868, 0.039994), (0.027719, -0.225664, 0.039472), (0.027515, -0.225171, 0.039255), (0.027515, -0.225171, 0.042953), (0.027719, -0.225664, 0.042736), (0.027803, -0.225868, 0.042213), (0.024494, -0.226526, 0.042213), (0.024473, -0.22631, 0.042736), (0.024421, -0.225787, 0.042953), (0.030609, -0.223993, 0.039994), (0.030453, -0.223837, 0.039472), (0.030076, -0.22346, 0.039255), (0.030609, -0.223993, 0.042213), (0.030453, -0.223837, 0.042736), (0.030076, -0.22346, 0.042953), (0.032484, -0.221187, 0.039994), (0.03228, -0.221103, 0.039472), (0.031788, -0.220899, 0.039255), (0.031788, -0.220899, 0.042953), (0.03228, -0.221103, 0.042736), (0.032484, -0.221187, 0.042213), (0.033143, -0.217878, 0.039994), (0.032926, -0.217856, 0.039472), (0.032403, -0.217805, 0.039255), (0.032403, -0.217805, 0.042953), (0.032926, -0.217856, 0.042736), (0.033143, -0.217878, 0.042213), (0, -0.226526, 0.042213), (0, -0.22631, 0.042736), (0, -0.225787, 0.042953), (0, -0.225787, 0.039255), (0, -0.22631, 0.039472), (0, -0.226526, 0.039994), (0.032403, -0.200268, 0.039472), (0.032403, -0.200051, 0.039994), (0.032926, -0.200268, 0.039994), (0.033143, -0.200791, 0.039994), (0.032926, -0.200791, 0.039472), (0.032403, -0.200791, 0.039255), (0.032403, -0.200268, 0.042736), (0.032403, -0.200791, 0.042953), (0.032926, -0.200791, 0.042736), (0.033143, -0.200791, 0.042213), (0.032926, -0.200268, 0.042213), (0.032403, -0.200051, 0.042213), (0.024494, -0.200791, 0.039255), (0.024494, -0.200268, 0.039472), (0.024494, -0.200051, 0.039994), (0.024494, -0.200791, 0.042953), (0.024494, -0.200268, 0.042736), (0.024494, -0.200051, 0.042213), (0, -0.200791, 0.042953), (0, -0.200268, 0.042736), (0, -0.200051, 0.042213), (0, -0.200051, 0.039994), (0, -0.200268, 0.039472), (0, -0.200791, 0.039255), (-0.024494, -0.226526, 0.039994), (-0.024473, -0.22631, 0.039472), (-0.024421, -0.225787, 0.039255), (-0.027515, -0.225171, 0.039255), (-0.027719, -0.225664, 0.039472), (-0.027803, -0.225868, 0.039994), (-0.027803, -0.225868, 0.042213), (-0.027719, -0.225664, 0.042736), (-0.027515, -0.225171, 0.042953), (-0.024421, -0.225787, 0.042953), (-0.024473, -0.22631, 0.042736), (-0.024494, -0.226526, 0.042213), (-0.030609, -0.223993, 0.039994), (-0.030453, -0.223837, 0.039472), (-0.030076, -0.22346, 0.039255), (-0.030609, -0.223993, 0.042213), (-0.030453, -0.223837, 0.042736), (-0.030076, -0.22346, 0.042953), (-0.031788, -0.220899, 0.039255), (-0.03228, -0.221103, 0.039472), (-0.032484, -0.221187, 0.039994), (-0.032484, -0.221187, 0.042213), (-0.03228, -0.221103, 0.042736), (-0.031788, -0.220899, 0.042953), (-0.032403, -0.217805, 0.039255), (-0.032926, -0.217856, 0.039472), (-0.033143, -0.217878, 0.039994), (-0.033143, -0.217878, 0.042213), (-0.032926, -0.217856, 0.042736), (-0.032403, -0.217805, 0.042953), (-0.032403, -0.200268, 0.039472), (-0.032403, -0.200791, 0.039255), (-0.032926, -0.200791, 0.039472), (-0.033143, -0.200791, 0.039994), (-0.032926, -0.200268, 0.039994), (-0.032403, -0.200051, 0.039994), (-0.032403, -0.200268, 0.042736), (-0.032403, -0.200051, 0.042213), (-0.032926, -0.200268, 0.042213), (-0.033143, -0.200791, 0.042213), (-0.032926, -0.200791, 0.042736), (-0.032403, -0.200791, 0.042953), (-0.024494, -0.200791, 0.039255), (-0.024494, -0.200268, 0.039472), (-0.024494, -0.200051, 0.039994), (-0.024494, -0.200791, 0.042953), (-0.024494, -0.200268, 0.042736), (-0.024494, -0.200051, 0.042213), (0.03283, -0.200364, 0.039568), (0.03283, -0.200364, 0.04264), (-0.03283, -0.200364, 0.039568), (-0.03283, -0.200364, 0.04264)]
            bool[] primvars:sharp_face = [0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-46.771282, -17.689342), (-46.707825, -17.689342), (-46.707825, -17.625893), (-46.771282, -17.625893)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_ToasterLever_19_2"
        {
            token outputs:surface.connect = </root/_materials/M_ToasterLever_19_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_ToasterLever_19_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_ToasterLever_19_2/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_ToasterLever_19_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_ToasterLever_19_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

