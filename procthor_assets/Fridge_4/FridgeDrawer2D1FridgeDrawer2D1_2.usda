#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.0"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "FridgeDrawer2D1"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "FridgeDrawer2D1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.058588, -0.311834, -0.96071), (0.519632, 0.235336, -0.526671)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 8, 8, 4, 4, 4, 4, 4, 4, 8, 4, 4, 8, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 4, 5, 7, 6, 33, 28, 46, 51, 28, 30, 48, 46, 30, 37, 55, 48, 37, 36, 54, 55, 36, 39, 57, 54, 39, 38, 56, 57, 38, 31, 49, 56, 31, 29, 47, 49, 29, 34, 52, 47, 34, 35, 53, 52, 35, 32, 50, 53, 32, 33, 51, 50, 107, 111, 95, 94, 108, 105, 98, 99, 103, 109, 96, 97, 110, 101, 93, 92, 111, 110, 92, 95, 109, 108, 99, 96, 106, 107, 94, 89, 104, 106, 89, 91, 105, 104, 91, 98, 102, 103, 97, 90, 100, 102, 90, 88, 101, 100, 88, 93, 77, 76, 57, 56, 77, 56, 49, 78, 79, 78, 49, 47, 80, 79, 47, 52, 81, 80, 52, 53, 82, 81, 53, 50, 83, 82, 50, 51, 84, 83, 51, 46, 85, 84, 46, 48, 86, 85, 48, 55, 87, 86, 55, 54, 76, 87, 54, 57, 28, 33, 93, 88, 33, 32, 92, 93, 32, 35, 95, 92, 35, 34, 94, 95, 34, 29, 89, 94, 29, 31, 91, 89, 31, 38, 98, 91, 38, 39, 99, 98, 39, 36, 96, 99, 36, 37, 97, 96, 37, 30, 90, 97, 30, 28, 88, 90, 65, 64, 100, 101, 64, 66, 102, 100, 66, 67, 103, 102, 67, 73, 109, 103, 73, 72, 108, 109, 72, 69, 105, 108, 69, 68, 104, 105, 68, 70, 106, 104, 70, 71, 107, 106, 71, 75, 111, 107, 75, 74, 110, 111, 74, 65, 101, 110, 8, 9, 11, 10, 12, 13, 15, 14, 16, 17, 19, 18, 135, 129, 87, 76, 130, 86, 87, 129, 130, 125, 85, 86, 125, 158, 156, 154, 124, 58, 84, 85, 59, 127, 161, 163, 165, 126, 78, 79, 133, 77, 78, 126, 133, 135, 76, 77, 122, 117, 69, 72, 73, 67, 112, 121, 121, 122, 72, 73, 65, 40, 41, 64, 119, 150, 149, 148, 118, 43, 70, 68, 117, 119, 68, 69, 114, 112, 67, 66, 41, 115, 151, 152, 153, 114, 66, 64, 70, 43, 42, 71, 134, 132, 62, 63, 75, 44, 45, 74, 74, 45, 40, 65, 61, 131, 128, 60, 60, 128, 134, 63, 71, 42, 44, 75, 127, 59, 62, 132, 61, 58, 124, 131, 115, 41, 40, 113, 80, 62, 59, 79, 81, 63, 62, 80, 82, 60, 63, 81, 83, 61, 60, 82, 84, 58, 61, 83, 43, 118, 116, 42, 45, 44, 123, 120, 120, 113, 40, 45, 44, 42, 116, 123, 123, 116, 136, 137, 137, 136, 138, 139, 139, 138, 140, 141, 141, 140, 117, 122, 113, 120, 142, 143, 143, 142, 144, 145, 145, 144, 146, 147, 147, 146, 121, 112, 120, 123, 137, 142, 142, 137, 139, 144, 144, 139, 141, 146, 146, 141, 122, 121, 116, 118, 148, 136, 136, 148, 149, 138, 138, 149, 150, 140, 140, 150, 119, 117, 115, 113, 143, 151, 151, 143, 145, 152, 152, 145, 147, 153, 153, 147, 112, 114, 131, 124, 154, 155, 155, 154, 156, 157, 157, 156, 158, 159, 159, 158, 125, 130, 127, 132, 160, 161, 161, 160, 162, 163, 163, 162, 164, 165, 165, 164, 133, 126, 134, 128, 166, 167, 167, 166, 168, 169, 169, 168, 170, 171, 171, 170, 129, 135, 128, 131, 155, 166, 166, 155, 157, 168, 168, 157, 159, 170, 170, 159, 130, 129, 132, 134, 167, 160, 160, 167, 169, 162, 162, 169, 171, 164, 164, 171, 135, 133, 20, 21, 23, 22, 24, 25, 27, 26]
            rel material:binding = </root/_materials/M_FridgeDrawer2D1_0>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (3.1315696e-7, 0, 1), (3.1316313e-7, 0, 1), (0, 0, 1), (3.1315696e-7, 0, 1), (4.5448286e-7, 0, 1), (4.5448868e-7, 0, 1), (3.1316313e-7, 0, 1), (4.5448286e-7, 0, 1), (1.413197e-7, 0, 1), (1.4132861e-7, 0, 1), (4.5448868e-7, 0, 1), (1.413197e-7, 0, 1), (-1.4131976e-7, 0, 1), (-1.413292e-7, 0, 1), (1.4132861e-7, 0, 1), (-1.4131976e-7, 0, 1), (-4.5448394e-7, 0, 1), (-4.544897e-7, 0, 1), (-1.413292e-7, 0, 1), (-4.5448394e-7, 0, 1), (-3.131758e-7, 0, 1), (-3.1315727e-7, 0, 1), (-4.544897e-7, 0, 1), (-3.131758e-7, 0, 1), (0, 0, 1), (0, 0, 1), (-3.1315727e-7, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0.000006299989, 0.98187494, -0.1895298), (0, 0.9817951, -0.18994349), (-0.000006274614, 0.9817992, 0.18992202), (0, 0.9818791, 0.18950835), (0.026313948, -0.9817596, -0.1882968), (0.10138772, -0.97691685, -0.18802719), (0.10140008, -0.97691894, 0.18800911), (0.026289, -0.9817537, 0.18833092), (-0.10138258, -0.97691876, -0.1880191), (-0.026310228, -0.98175, -0.18834746), (-0.026293237, -0.98175395, 0.1883289), (-0.101400755, -0.9769102, 0.18805398), (0.000006279881, 0.98179483, -0.18994495), (0, 0.9818743, -0.18953294), (-0.000006294722, 0.9818785, 0.1895116), (0, 0.9817989, 0.18992347), (0, 0.9817951, -0.18994349), (0.000006279881, 0.98179483, -0.18994495), (0, 0.9817989, 0.18992347), (-0.000006274614, 0.9817992, 0.18992202), (-0.026310228, -0.98175, -0.18834746), (0.026313948, -0.9817596, -0.1882968), (0.026289, -0.9817537, 0.18833092), (-0.026293237, -0.98175395, 0.1883289), (-0.0000017993152, 0.9905271, -0.13731691), (0.000006299989, 0.98187494, -0.1895298), (0, 0.9818791, 0.18950835), (0, 0.9905225, 0.13735086), (0.9896898, 1.8626451e-8, -0.1432271), (0.99050134, 0, -0.13750309), (0.99048275, -0.0000017434359, 0.13763654), (0.98968685, 0, 0.14324811), (0.10138772, -0.97691685, -0.18802719), (0.12363065, -0.98196304, -0.1430524), (0.123594165, -0.98197126, 0.14302747), (0.10140008, -0.97691894, 0.18800911), (-0.1235944, -0.98197, -0.14303578), (-0.10138258, -0.97691876, -0.1880191), (-0.101400755, -0.9769102, 0.18805398), (-0.123632334, -0.9819689, 0.14301077), (-0.99049866, -0.0000017881393, -0.13752262), (-0.9896873, 0, -0.14324431), (-0.98969203, 0, 0.14321187), (-0.9904875, 0, 0.13760272), (0, 0.9818743, -0.18953294), (0, 0.99052775, -0.1373128), (0.0000017657876, 0.99052304, 0.13734663), (-0.000006294722, 0.9818785, 0.1895116), (-0.10229172, 0.99475443, 0), (-0.026795441, 0.9996409, -2.1626786e-7), (-0.026810553, 0.9996405, 0), (-0.102404244, 0.9947429, 7.567436e-10), (-0.10229172, 0.99475443, 0), (-0.102404244, 0.9947429, 7.567436e-10), (-0.12491357, 0.9921676, 0), (-0.124913886, 0.9921676, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.10229215, 0.99475443, -8.195325e-7), (0.124914736, 0.9921675, 0), (0.12491445, 0.99216753, 0), (0.102404684, 0.9947428, 0), (0.026795441, 0.9996409, 0), (0.10229215, 0.99475443, -8.195325e-7), (0.102404684, 0.9947428, 0), (0.02681056, 0.9996405, 3.9284961e-10), (-0.026795441, 0.9996409, -2.1626786e-7), (0.026795441, 0.9996409, 0), (0.02681056, 0.9996405, 3.9284961e-10), (-0.026810553, 0.9996405, 0), (0, 0.7993656, 0.60084504), (0, 0.79936695, 0.6008432), (-0.000006294722, 0.9818785, 0.1895116), (0.0000017657876, 0.99052304, 0.13734663), (0, 0.79936695, 0.6008432), (-1.6095827e-8, 0.79916924, 0.601106), (0, 0.9817989, 0.18992347), (-0.000006294722, 0.9818785, 0.1895116), (-1.6095827e-8, 0.79916924, 0.601106), (-1.6095816e-8, 0.79917103, 0.6011036), (-0.000006274614, 0.9817992, 0.18992202), (0, 0.9817989, 0.18992347), (-1.6095816e-8, 0.79917103, 0.6011036), (-1.6095827e-8, 0.7991692, 0.60110605), (0, 0.9818791, 0.18950835), (-0.000006274614, 0.9817992, 0.18992202), (-1.6095827e-8, 0.7991692, 0.60110605), (6.6211214e-9, 0.79916805, 0.60110754), (0, 0.9905225, 0.13735086), (0, 0.9818791, 0.18950835), (0.7993774, -1.0506054e-8, 0.6008291), (0.79937744, -8.425559e-9, 0.6008291), (0.98968685, 0, 0.14324811), (0.99048275, -0.0000017434359, 0.13763654), (0.09984887, -0.79307353, 0.6008866), (0.08237712, -0.79491156, 0.60110694), (0.10140008, -0.97691894, 0.18800911), (0.123594165, -0.98197126, 0.14302747), (0.08237712, -0.79491156, 0.60110694), (0.021428375, -0.79888374, 0.60110366), (0.026289, -0.9817537, 0.18833092), (0.10140008, -0.97691894, 0.18800911), (0.021428375, -0.79888374, 0.60110366), (-0.021428132, -0.7988913, 0.6010936), (-0.026293237, -0.98175395, 0.1883289), (0.026289, -0.9817537, 0.18833092), (-0.021428132, -0.7988913, 0.6010936), (-0.08237187, -0.7948708, 0.60116154), (-0.101400755, -0.9769102, 0.18805398), (-0.026293237, -0.98175395, 0.1883289), (-0.08237187, -0.7948708, 0.60116154), (-0.09985099, -0.7930877, 0.6008675), (-0.123632334, -0.9819689, 0.14301077), (-0.101400755, -0.9769102, 0.18805398), (-0.7993815, 0, 0.60082394), (-0.7993815, 0, 0.60082394), (-0.9904875, 0, 0.13760272), (-0.98969203, 0, 0.14321187), (0.000014928266, 0.9999824, -0.005926341), (0.000022694468, 0.99996847, -0.007946923), (0, 0.99052775, -0.1373128), (0, 0.9818743, -0.18953294), (-0.99996847, -0.000016923554, -0.007942557), (-0.99996996, 0.0000037699938, -0.0077544153), (-0.9896873, 0, -0.14324431), (-0.99049866, -0.0000017881393, -0.13752262), (-0.12492163, -0.99212354, -0.009235978), (-0.103089124, -0.9946466, -0.0071273064), (-0.10138258, -0.97691876, -0.1880191), (-0.1235944, -0.98197, -0.14303578), (-0.103089124, -0.9946466, -0.0071273064), (-0.02680458, -0.99961525, -0.007137483), (-0.026310228, -0.98175, -0.18834746), (-0.10138258, -0.97691876, -0.1880191), (-0.02680458, -0.99961525, -0.007137483), (0.026808586, -0.999615, -0.00713936), (0.026313948, -0.9817596, -0.1882968), (-0.026310228, -0.98175, -0.18834746), (0.026808586, -0.999615, -0.00713936), (0.1030889, -0.9946466, -0.007135205), (0.10138772, -0.97691685, -0.18802719), (0.026313948, -0.9817596, -0.1882968), (0.1030889, -0.9946466, -0.007135205), (0.12490466, -0.9921258, -0.009233333), (0.12363065, -0.98196304, -0.1430524), (0.10138772, -0.97691685, -0.18802719), (0.99997026, 0.00018930367, -0.0077217817), (0.99996835, -0.000009715557, -0.007953651), (0.99050134, 0, -0.13750309), (0.9896898, 1.8626451e-8, -0.1432271), (-0.0000032754572, 0.99996865, -0.007921636), (0, 0.99998254, -0.005923152), (0.000006299989, 0.98187494, -0.1895298), (-0.0000017993152, 0.9905271, -0.13731691), (0, 0.99998254, -0.005923152), (0, 0.9999825, -0.005921662), (0, 0.9817951, -0.18994349), (0.000006299989, 0.98187494, -0.1895298), (0, 0.9999825, -0.005921662), (0, 0.99998254, -0.0059230924), (0.000006279881, 0.98179483, -0.18994495), (0, 0.9817951, -0.18994349), (0, 0.99998254, -0.0059230924), (0.000014928266, 0.9999824, -0.005926341), (0, 0.9818743, -0.18953294), (0.000006279881, 0.98179483, -0.18994495), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.026799155, 0.9995382, 0.0143252015), (0.026810063, 0.9995379, 0.014324263), (0.026795441, 0.9996409, 0), (-0.026795441, 0.9996409, -2.1626786e-7), (0.10229822, 0.9946524, 0.014199458), (0.10229215, 0.99475443, -8.195325e-7), (0.026795441, 0.9996409, 0), (0.026810063, 0.9995379, 0.014324263), (0.10229822, 0.9946524, 0.014199458), (0.12490069, 0.992063, 0.01452601), (0.124914736, 0.9921675, 0), (0.10229215, 0.99475443, -8.195325e-7), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.10229789, 0.99465245, 0.014200345), (-0.10229172, 0.99475443, 0), (-0.124913886, 0.9921676, 0), (-0.12489126, 0.99206406, 0.014527071), (-0.10229789, 0.99465245, 0.014200345), (-0.026799155, 0.9995382, 0.0143252015), (-0.026795441, 0.9996409, -2.1626786e-7), (-0.10229172, 0.99475443, 0), (0.026802482, -0.9995464, -0.013729848), (0.10309516, -0.99457794, -0.013639316), (0.1030889, -0.9946466, -0.007135205), (0.026808586, -0.999615, -0.00713936), (-0.02680458, -0.99961525, -0.007137483), (-0.103089124, -0.9946466, -0.0071273064), (-0.103086255, -0.9945789, -0.01363831), (-0.026806537, -0.9995463, -0.013729654), (-0.026806537, -0.9995463, -0.013729654), (0.026802482, -0.9995464, -0.013729848), (0.026808586, -0.999615, -0.00713936), (-0.02680458, -0.99961525, -0.007137483), (0.000014928266, 0.9999824, -0.005926341), (0, 1, 0), (0, 1, 0), (0.000022694468, 0.99996847, -0.007946923), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.99996835, -0.000009715557, -0.007953651), (0.99997026, 0.00018930367, -0.0077217817), (0.10309516, -0.99457794, -0.013639316), (0.12490124, -0.99207276, -0.013833433), (0.12490466, -0.9921258, -0.009233333), (0.1030889, -0.9946466, -0.007135205), (-0.124892734, -0.99207383, -0.013833437), (-0.103086255, -0.9945789, -0.01363831), (-0.103089124, -0.9946466, -0.0071273064), (-0.12492163, -0.99212354, -0.009235978), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.99996996, 0.0000037699938, -0.0077544153), (-0.99996847, -0.000016923554, -0.007942557), (-0.0000032754572, 0.99996865, -0.007921636), (0, 1, 0), (0, 1, 0), (0, 0.99998254, -0.005923152), (-0.00019736122, 0.0060074106, 0.99998194), (-0.0006979229, 0.006342881, 0.9999797), (-3.7595822e-7, 0, 1), (-3.766866e-7, 0, 1), (0, 0.9999825, -0.005921662), (0, 1, 0), (0, 1, 0), (0, 0.99998254, -0.0059230924), (0, 0.99998254, -0.0059230924), (0, 1, 0), (0, 1, 0), (0.000014928266, 0.9999824, -0.005926341), (3.8994867e-7, 0, 1), (0.00071235467, 0.006341636, 0.99997956), (0.00020997343, 0.006006992, 0.99998194), (3.7668894e-7, 0, 1), (3.7668894e-7, 0, 1), (0.00020997343, 0.006006992, 0.99998194), (-0.00019736122, 0.0060074106, 0.99998194), (-3.766866e-7, 0, 1), (0, 0.99998254, -0.005923152), (0, 1, 0), (0, 1, 0), (0, 0.9999825, -0.005921662), (-0.0006052805, 0.005138755, 0.99998665), (0, 0, 1), (-3.7595822e-7, 0, 1), (-0.0006979229, 0.006342881, 0.9999797), (3.8994867e-7, 0, 1), (2.7931838e-8, 0, 1), (0.00060521904, 0.0051389034, 0.99998665), (0.00071235467, 0.006341636, 0.99997956), (-0.0005997354, -0.0049047247, -0.9999878), (0, 0, -1), (0, 0, -1), (-0.0006057974, -0.0060997084, -0.99998116), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0.00060408935, -0.004904343, -0.99998784), (0.00070712995, -0.006139844, -0.99998087), (9.564294e-8, 0, -1), (0, 0, -1), (9.5679354e-8, 0, -1), (0.00020008604, -0.0057216883, -0.99998367), (-0.0002075457, -0.005721472, -0.9999836), (-0.0002075457, -0.005721472, -0.9999836), (-0.0006057974, -0.0060997084, -0.99998116), (0, 0, -1), (0, 0, -1), (9.5679354e-8, 0, -1), (9.564294e-8, 0, -1), (0.00070712995, -0.006139844, -0.99998087), (0.00020008604, -0.0057216883, -0.99998367), (0.00020008604, -0.0057216883, -0.99998367), (0.00070712995, -0.006139844, -0.99998087), (0.0404974, -0.38868934, -0.92047834), (0.010409682, -0.3854846, -0.9226555), (0.010409682, -0.3854846, -0.9226555), (0.0404974, -0.38868934, -0.92047834), (0.07347873, -0.70887965, -0.7014917), (0.019054422, -0.70863104, -0.70532197), (0.019054422, -0.70863104, -0.70532197), (0.07347873, -0.70887965, -0.7014917), (0.09518069, -0.920779, -0.37829438), (0.024705017, -0.92408323, -0.3813922), (0.024705017, -0.92408323, -0.3813922), (0.09518069, -0.920779, -0.37829438), (0.10309516, -0.99457794, -0.013639316), (0.026802482, -0.9995464, -0.013729848), (-0.0006057974, -0.0060997084, -0.99998116), (-0.0002075457, -0.005721472, -0.9999836), (-0.010409557, -0.38548467, -0.92265546), (-0.04049738, -0.3886892, -0.92047846), (-0.04049738, -0.3886892, -0.92047846), (-0.010409557, -0.38548467, -0.92265546), (-0.01890023, -0.7086288, -0.7053283), (-0.07347841, -0.7088802, -0.7014912), (-0.07347841, -0.7088802, -0.7014912), (-0.01890023, -0.7086288, -0.7053283), (-0.024704967, -0.924083, -0.38139257), (-0.09518092, -0.92077863, -0.37829524), (-0.09518092, -0.92077863, -0.37829524), (-0.024704967, -0.924083, -0.38139257), (-0.026806537, -0.9995463, -0.013729654), (-0.103086255, -0.9945789, -0.01363831), (-0.0002075457, -0.005721472, -0.9999836), (0.00020008604, -0.0057216883, -0.99998367), (0.010409682, -0.3854846, -0.9226555), (-0.010409557, -0.38548467, -0.92265546), (-0.010409557, -0.38548467, -0.92265546), (0.010409682, -0.3854846, -0.9226555), (0.019054422, -0.70863104, -0.70532197), (-0.01890023, -0.7086288, -0.7053283), (-0.01890023, -0.7086288, -0.7053283), (0.019054422, -0.70863104, -0.70532197), (0.024705017, -0.92408323, -0.3813922), (-0.024704967, -0.924083, -0.38139257), (-0.024704967, -0.924083, -0.38139257), (0.024705017, -0.92408323, -0.3813922), (0.026802482, -0.9995464, -0.013729848), (-0.026806537, -0.9995463, -0.013729654), (0.00070712995, -0.006139844, -0.99998087), (0.00060408935, -0.004904343, -0.99998784), (0.04644222, -0.36885428, -0.9283262), (0.0404974, -0.38868934, -0.92047834), (0.0404974, -0.38868934, -0.92047834), (0.04644222, -0.36885428, -0.9283262), (0.08770017, -0.6968255, -0.7118588), (0.07347873, -0.70887965, -0.7014917), (0.07347873, -0.70887965, -0.7014917), (0.08770017, -0.6968255, -0.7118588), (0.11525132, -0.9154121, -0.3856652), (0.09518069, -0.920779, -0.37829438), (0.09518069, -0.920779, -0.37829438), (0.11525132, -0.9154121, -0.3856652), (0.12490124, -0.99207276, -0.013833433), (0.10309516, -0.99457794, -0.013639316), (-0.0005997354, -0.0049047247, -0.9999878), (-0.0006057974, -0.0060997084, -0.99998116), (-0.04049738, -0.3886892, -0.92047846), (-0.046442203, -0.3688542, -0.92832625), (-0.046442203, -0.3688542, -0.92832625), (-0.04049738, -0.3886892, -0.92047846), (-0.07347841, -0.7088802, -0.7014912), (-0.08769165, -0.6964926, -0.71218556), (-0.08769165, -0.6964926, -0.71218556), (-0.07347841, -0.7088802, -0.7014912), (-0.09518092, -0.92077863, -0.37829524), (-0.115251556, -0.9154124, -0.38566458), (-0.115251556, -0.9154124, -0.38566458), (-0.09518092, -0.92077863, -0.37829524), (-0.103086255, -0.9945789, -0.01363831), (-0.124892734, -0.99207383, -0.013833437), (0.00071235467, 0.006341636, 0.99997956), (0.00060521904, 0.0051389034, 0.99998665), (0.046459932, 0.36888608, 0.9283128), (0.04018773, 0.38848108, 0.9205799), (0.04018773, 0.38848108, 0.9205799), (0.046459932, 0.36888608, 0.9283128), (0.08779706, 0.6968818, 0.71179175), (0.072881676, 0.70881164, 0.70162266), (0.072881676, 0.70881164, 0.70162266), (0.08779706, 0.6968818, 0.71179175), (0.11526149, 0.91542447, 0.38563308), (0.094503395, 0.9208046, 0.37840188), (0.094503395, 0.9208046, 0.37840188), (0.11526149, 0.91542447, 0.38563308), (0.12490069, 0.992063, 0.01452601), (0.10229822, 0.9946524, 0.014199458), (-0.0006052805, 0.005138755, 0.99998665), (-0.0006979229, 0.006342881, 0.9999797), (-0.04018782, 0.3884807, 0.92058015), (-0.046459768, 0.3688856, 0.9283129), (-0.046459768, 0.3688856, 0.9283129), (-0.04018782, 0.3884807, 0.92058015), (-0.07288146, 0.7088117, 0.7016225), (-0.08779712, 0.696882, 0.7117915), (-0.08779712, 0.696882, 0.7117915), (-0.07288146, 0.7088117, 0.7016225), (-0.09450269, 0.92080474, 0.37840155), (-0.11526046, 0.9154246, 0.3856332), (-0.11526046, 0.9154246, 0.3856332), (-0.09450269, 0.92080474, 0.37840155), (-0.10229789, 0.99465245, 0.014200345), (-0.12489126, 0.99206406, 0.014527071), (-0.00019736122, 0.0060074106, 0.99998194), (0.00020997343, 0.006006992, 0.99998194), (0.010372488, 0.38547486, 0.92265993), (-0.010372478, 0.3854748, 0.92266), (-0.010372478, 0.3854748, 0.92266), (0.010372488, 0.38547486, 0.92265993), (0.018977623, 0.7086255, 0.7053294), (-0.018977603, 0.7086254, 0.7053296), (-0.018977603, 0.7086254, 0.7053296), (0.018977623, 0.7086255, 0.7053294), (0.024636587, 0.92408526, 0.3813914), (-0.024725644, 0.92408293, 0.38139147), (-0.024725644, 0.92408293, 0.38139147), (0.024636587, 0.92408526, 0.3813914), (0.026810063, 0.9995379, 0.014324263), (-0.026799155, 0.9995382, 0.0143252015), (0.00020997343, 0.006006992, 0.99998194), (0.00071235467, 0.006341636, 0.99997956), (0.04018773, 0.38848108, 0.9205799), (0.010372488, 0.38547486, 0.92265993), (0.010372488, 0.38547486, 0.92265993), (0.04018773, 0.38848108, 0.9205799), (0.072881676, 0.70881164, 0.70162266), (0.018977623, 0.7086255, 0.7053294), (0.018977623, 0.7086255, 0.7053294), (0.072881676, 0.70881164, 0.70162266), (0.094503395, 0.9208046, 0.37840188), (0.024636587, 0.92408526, 0.3813914), (0.024636587, 0.92408526, 0.3813914), (0.094503395, 0.9208046, 0.37840188), (0.10229822, 0.9946524, 0.014199458), (0.026810063, 0.9995379, 0.014324263), (-0.0006979229, 0.006342881, 0.9999797), (-0.00019736122, 0.0060074106, 0.99998194), (-0.010372478, 0.3854748, 0.92266), (-0.04018782, 0.3884807, 0.92058015), (-0.04018782, 0.3884807, 0.92058015), (-0.010372478, 0.3854748, 0.92266), (-0.018977603, 0.7086254, 0.7053296), (-0.07288146, 0.7088117, 0.7016225), (-0.07288146, 0.7088117, 0.7016225), (-0.018977603, 0.7086254, 0.7053296), (-0.024725644, 0.92408293, 0.38139147), (-0.09450269, 0.92080474, 0.37840155), (-0.09450269, 0.92080474, 0.37840155), (-0.024725644, 0.92408293, 0.38139147), (-0.026799155, 0.9995382, 0.0143252015), (-0.10229789, 0.99465245, 0.014200345), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.043033, 0.037125, -0.96071), (-0.043023, 0.037125, -0.96071), (-0.043033, 0.037135, -0.96071), (-0.043023, 0.037135, -0.96071), (-0.043033, 0.037125, -0.96071), (-0.043023, 0.037125, -0.96071), (-0.043033, 0.037135, -0.96071), (-0.043023, 0.037135, -0.96071), (-0.043033, 0.037125, -0.96071), (-0.043023, 0.037125, -0.96071), (-0.043033, 0.037135, -0.96071), (-0.043023, 0.037135, -0.96071), (-0.043033, 0.037125, -0.96071), (-0.043023, 0.037125, -0.96071), (-0.043033, 0.037135, -0.96071), (-0.043023, 0.037135, -0.96071), (-0.043033, 0.037125, -0.96071), (-0.043023, 0.037125, -0.96071), (-0.043033, 0.037135, -0.96071), (-0.043023, 0.037135, -0.96071), (-0.043033, 0.037125, -0.96071), (-0.043023, 0.037125, -0.96071), (-0.043033, 0.037135, -0.96071), (-0.043023, 0.037135, -0.96071), (-0.043033, 0.037125, -0.96071), (-0.043023, 0.037125, -0.96071), (-0.043033, 0.037135, -0.96071), (-0.043023, 0.037135, -0.96071), (-0.057208, 0.233956, -0.526671), (0.518251, 0.233956, -0.526671), (-0.057208, -0.286304, -0.526671), (0.518251, -0.286304, -0.526671), (0.175736, 0.233956, -0.526671), (0.093488, 0.233956, -0.526671), (0.367556, 0.233956, -0.526671), (0.285307, 0.233956, -0.526671), (0.175736, -0.310454, -0.526671), (0.09381, -0.305317, -0.526671), (0.367233, -0.305317, -0.526671), (0.285307, -0.310454, -0.526671), (0.093488, 0.233956, -0.769551), (-0.057208, 0.233956, -0.769551), (0.367556, 0.233956, -0.769551), (0.518251, 0.233956, -0.769551), (0.285307, 0.233956, -0.769551), (0.175736, 0.233956, -0.769551), (-0.047134, 0.223882, -0.526671), (0.508178, 0.223882, -0.526671), (-0.047134, -0.277419, -0.526671), (0.508178, -0.277419, -0.526671), (0.175736, 0.223882, -0.526671), (0.093488, 0.223882, -0.526671), (0.367556, 0.223882, -0.526671), (0.285307, 0.223882, -0.526671), (0.176051, -0.30038, -0.526671), (0.094755, -0.295283, -0.526671), (0.366288, -0.295283, -0.526671), (0.284992, -0.30038, -0.526671), (-0.047134, 0.223882, -0.760029), (0.508178, 0.223882, -0.760029), (0.175736, 0.223882, -0.760029), (0.093488, 0.223882, -0.760029), (0.367556, 0.223882, -0.760029), (0.285307, 0.223882, -0.760029), (-0.057208, 0.233956, -0.535641), (0.093488, 0.233956, -0.535641), (-0.057208, -0.286304, -0.535641), (0.09381, -0.305317, -0.535641), (0.518251, -0.286304, -0.535641), (0.367233, -0.305317, -0.535641), (0.518251, 0.233956, -0.535641), (0.367556, 0.233956, -0.535641), (0.285307, -0.310454, -0.535641), (0.175736, -0.310454, -0.535641), (0.175736, 0.233956, -0.535641), (0.285307, 0.233956, -0.535641), (0.284992, -0.30038, -0.535641), (0.366288, -0.295283, -0.535641), (0.508178, -0.277419, -0.535641), (0.508178, 0.223882, -0.535641), (0.367556, 0.223882, -0.535641), (0.285307, 0.223882, -0.535641), (0.175736, 0.223882, -0.535641), (0.093488, 0.223882, -0.535641), (-0.047134, 0.223882, -0.535641), (-0.047134, -0.277419, -0.535641), (0.094755, -0.295283, -0.535641), (0.176051, -0.30038, -0.535641), (-0.058588, 0.235336, -0.528507), (0.519632, 0.235336, -0.528507), (-0.058588, -0.287521, -0.528507), (0.519632, -0.287521, -0.528507), (0.175736, 0.235336, -0.528507), (0.093488, 0.235336, -0.528507), (0.367556, 0.235336, -0.528507), (0.285307, 0.235336, -0.528507), (0.175692, -0.311834, -0.528507), (0.09368, -0.306692, -0.528507), (0.367363, -0.306692, -0.528507), (0.285351, -0.311834, -0.528507), (-0.058588, 0.235336, -0.533806), (0.093488, 0.235336, -0.533806), (-0.058588, -0.287521, -0.533806), (0.09368, -0.306692, -0.533806), (0.519632, -0.287521, -0.533806), (0.367363, -0.306692, -0.533806), (0.519632, 0.235336, -0.533806), (0.367556, 0.235336, -0.533806), (0.285351, -0.311834, -0.533806), (0.175692, -0.311834, -0.533806), (0.175736, 0.235336, -0.533806), (0.285307, 0.235336, -0.533806), (0.09381, -0.305317, -0.731601), (0.093787, -0.267367, -0.769551), (-0.057208, -0.286304, -0.731601), (-0.057208, -0.248354, -0.769551), (0.367256, -0.267367, -0.769551), (0.367233, -0.305317, -0.731601), (0.518251, -0.248354, -0.769551), (0.518251, -0.286304, -0.731601), (0.175736, -0.272504, -0.769551), (0.175736, -0.310454, -0.731601), (0.285307, -0.310454, -0.731601), (0.285307, -0.272504, -0.769551), (-0.047134, -0.239469, -0.760029), (-0.047134, -0.277419, -0.722079), (0.508178, -0.277419, -0.722079), (0.508178, -0.239469, -0.760029), (0.176028, -0.26243, -0.760029), (0.176051, -0.30038, -0.722079), (0.094755, -0.295283, -0.722079), (0.094662, -0.257333, -0.760029), (0.366381, -0.257333, -0.760029), (0.366288, -0.295283, -0.722079), (0.285015, -0.26243, -0.760029), (0.284992, -0.30038, -0.722079), (0.367247, -0.28189, -0.766663), (0.285307, -0.287027, -0.766663), (0.36724, -0.294202, -0.758436), (0.285307, -0.299339, -0.758436), (0.367235, -0.302429, -0.746124), (0.285307, -0.307566, -0.746124), (0.175736, -0.287027, -0.766663), (0.093796, -0.28189, -0.766663), (0.175736, -0.299339, -0.758436), (0.093803, -0.294202, -0.758436), (0.175736, -0.307566, -0.746124), (0.093808, -0.302429, -0.746124), (0.518251, -0.262877, -0.766663), (0.518251, -0.275189, -0.758436), (0.518251, -0.283416, -0.746124), (-0.057208, -0.262877, -0.766663), (-0.057208, -0.275189, -0.758436), (-0.057208, -0.283416, -0.746124), (-0.047134, -0.253992, -0.757141), (0.094698, -0.271856, -0.757141), (-0.047134, -0.266304, -0.748914), (0.094728, -0.284168, -0.748914), (-0.047134, -0.27453, -0.736602), (0.094748, -0.292394, -0.736602), (0.366345, -0.271856, -0.757141), (0.508178, -0.253992, -0.757141), (0.366315, -0.284168, -0.748914), (0.508178, -0.266304, -0.748914), (0.366295, -0.292394, -0.736602), (0.508178, -0.27453, -0.736602), (0.176037, -0.276953, -0.757141), (0.285006, -0.276953, -0.757141), (0.176044, -0.289265, -0.748914), (0.284999, -0.289265, -0.748914), (0.176049, -0.297492, -0.736602), (0.284994, -0.297492, -0.736602)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-172.10272, -111.271255), (-172.10272, -111.271286), (-172.10269, -111.271286), (-172.10269, -111.271255), (-137.53873, -114.56585), (-137.53873, -114.565956), (-137.53847, -114.565956), (-137.53847, -114.56585), (-142.85094, 0.790012), (-142.85094, 1.17125), (-142.87642, 1.145764), (-142.87642, 0.790012), (-142.85094, 1.17125), (-144.16711, 1.17125), (-144.14464, 1.145764), (-142.87642, 1.145764), (-144.16711, 1.17125), (-144.21521, 0.789198), (-144.18983, 0.786806), (-144.14464, 1.145764), (-144.21521, 0.789198), (-144.22821, 0.581938), (-144.20273, 0.58114), (-144.18983, 0.786806), (-144.22821, 0.581938), (-144.22821, 0.304739), (-144.20273, 0.305536), (-144.20273, 0.58114), (-144.22821, 0.304739), (-144.21521, 0.097479), (-144.18983, 0.09987), (-144.20273, 0.305536), (-144.21521, 0.097479), (-144.16711, -0.284573), (-144.14464, -0.259088), (-144.18983, 0.09987), (-144.16711, -0.284573), (-142.85094, -0.284573), (-142.87642, -0.259088), (-144.14464, -0.259088), (-142.85094, -0.284573), (-142.85094, 0.096664), (-142.87642, 0.096664), (-142.87642, -0.259088), (-142.85094, 0.096664), (-142.85094, 0.304739), (-142.87642, 0.304739), (-142.87642, 0.096664), (-142.85094, 0.304739), (-142.85094, 0.581938), (-142.87642, 0.581938), (-142.87642, 0.304739), (-142.85094, 0.581938), (-142.85094, 0.790012), (-142.87642, 0.790012), (-142.87642, 0.581938), (-143.1041, 0.093524), (-143.1041, 0.303484), (-143.11761, 0.303484), (-143.11761, 0.093524), (-143.09457, 0.303044), (-143.09457, 0.093195), (-143.08101, 0.093195), (-143.08101, 0.303044), (-143.09457, 0.793481), (-143.09457, 0.583633), (-143.08101, 0.583633), (-143.08101, 0.793481), (-143.1041, 0.583194), (-143.1041, 0.793153), (-143.11761, 0.793153), (-143.11761, 0.583194), (-143.1041, 0.303484), (-143.1041, 0.583194), (-143.11761, 0.583194), (-143.11761, 0.303484), (-143.09457, 0.583633), (-143.09457, 0.303044), (-143.08101, 0.303044), (-143.08101, 0.583633), (-143.1041, -0.294689), (-143.1041, 0.093524), (-143.11761, 0.093524), (-143.11761, -0.294689), (-143.0364, 1.080281), (-143.0364, -0.278163), (-143.02264, -0.278163), (-143.02264, 1.080281), (-143.09457, 0.093195), (-143.09457, -0.296422), (-143.08101, -0.296422), (-143.08101, 0.093195), (-143.09457, 1.183099), (-143.09457, 0.793481), (-143.08101, 0.793481), (-143.08101, 1.183099), (-143.01599, 1.080282), (-143.01599, -0.278163), (-143.00223, -0.278163), (-143.00223, 1.080282), (-143.1041, 0.793153), (-143.1041, 1.181366), (-143.11761, 1.181366), (-143.11761, 0.793153), (-143.05923, 0.089156), (-143.05923, 0.290762), (-143.08148, 0.290762), (-143.08148, 0.089156), (-143.05923, 0.089156), (-143.08148, 0.089156), (-143.08148, -0.262717), (-143.05923, -0.262717), (-142.99979, 1.004761), (-142.99979, -0.235567), (-142.97758, -0.235567), (-142.97758, 1.004761), (-143.06104, 0.086793), (-143.06104, -0.261137), (-143.03885, -0.261137), (-143.03885, 0.086793), (-143.06104, 0.290293), (-143.06104, 0.086793), (-143.03885, 0.086793), (-143.03885, 0.290293), (-143.06104, 0.561397), (-143.06104, 0.290293), (-143.03885, 0.290293), (-143.03885, 0.561397), (-143.06104, 0.764896), (-143.06104, 0.561397), (-143.03885, 0.561397), (-143.03885, 0.764896), (-143.06104, 1.112825), (-143.06104, 0.764896), (-143.03885, 0.764896), (-143.03885, 1.112825), (-142.97937, 1.004761), (-142.97937, -0.235567), (-142.95717, -0.235567), (-142.95717, 1.004761), (-143.05923, 0.762533), (-143.05923, 1.114406), (-143.08148, 1.114406), (-143.08148, 0.762533), (-143.05923, 0.560926), (-143.05923, 0.762533), (-143.08148, 0.762533), (-143.08148, 0.560926), (-143.05923, 0.290762), (-143.05923, 0.560926), (-143.08148, 0.560926), (-143.08148, 0.290762), (-142.85094, 1.17125), (-142.85094, 0.790012), (-142.84744, 0.790012), (-142.84744, 1.174741), (-142.85094, 0.790012), (-142.85094, 0.581938), (-142.84744, 0.581938), (-142.84744, 0.790012), (-142.85094, 0.581938), (-142.85094, 0.304739), (-142.84744, 0.304739), (-142.84744, 0.581938), (-142.85094, 0.304739), (-142.85094, 0.096664), (-142.84744, 0.096664), (-142.84744, 0.304739), (-142.85094, 0.096664), (-142.85094, -0.284573), (-142.84744, -0.288064), (-142.84744, 0.096664), (-143.01787, -0.274578), (-143.01787, 1.077119), (-143.02264, 1.080281), (-143.02264, -0.278163), (-144.16711, -0.284573), (-144.21521, 0.097479), (-144.21869, 0.097151), (-144.1702, -0.288064), (-144.21521, 0.097479), (-144.22821, 0.304739), (-144.2317, 0.304629), (-144.21869, 0.097151), (-144.22821, 0.304739), (-144.22821, 0.581938), (-144.2317, 0.582048), (-144.2317, 0.304629), (-144.22821, 0.581938), (-144.21521, 0.789198), (-144.21869, 0.789525), (-144.2317, 0.582048), (-144.21521, 0.789198), (-144.16711, 1.17125), (-144.1702, 1.174741), (-144.21869, 0.789525), (-142.99745, -0.275001), (-142.99745, 1.076696), (-143.00223, 1.080282), (-143.00223, -0.278163), (-143.09941, 0.793153), (-143.09941, 1.177843), (-143.1041, 1.181366), (-143.1041, 0.793153), (-143.02075, 1.076696), (-143.02075, -0.275001), (-143.01599, -0.278163), (-143.01599, 1.080282), (-143.09926, 1.179568), (-143.09926, 0.793151), (-143.09457, 0.793481), (-143.09457, 1.183099), (-143.09926, 0.793151), (-143.09926, 0.583522), (-143.09457, 0.583633), (-143.09457, 0.793481), (-143.09926, 0.583522), (-143.09926, 0.303155), (-143.09457, 0.303044), (-143.09457, 0.583633), (-143.09926, 0.303155), (-143.09926, 0.093527), (-143.09457, 0.093195), (-143.09457, 0.303044), (-143.09926, 0.093527), (-143.09926, -0.292891), (-143.09457, -0.296422), (-143.09457, 0.093195), (-143.04118, 1.077119), (-143.04118, -0.274578), (-143.0364, -0.278163), (-143.0364, 1.080281), (-143.09941, -0.291166), (-143.09941, 0.093524), (-143.1041, 0.093524), (-143.1041, -0.294689), (-143.09941, 0.093524), (-143.09941, 0.303484), (-143.1041, 0.303484), (-143.1041, 0.093524), (-143.09941, 0.303484), (-143.09941, 0.583194), (-143.1041, 0.583194), (-143.1041, 0.303484), (-143.09941, 0.583194), (-143.09941, 0.793153), (-143.1041, 0.793153), (-143.1041, 0.583194), (-118.53865, -109.61047), (-118.53865, -113.51364), (-114.65679, -113.51364), (-114.65679, -109.61047), (-88.71441, -110.74826), (-88.71441, -113.93459), (-85.54558, -113.93459), (-85.54558, -110.74826), (-69.16569, -112.12139), (-69.16569, -112.1214), (-69.16568, -112.1214), (-69.16568, -112.12139), (-71.06999, -0.633151), (-71.06999, -0.362797), (-71.53266, -0.362797), (-71.53266, -0.633151), (-71.06999, -0.161049), (-71.53266, -0.161049), (-71.53266, -0.362797), (-71.06999, -0.362797), (-71.06999, -0.161049), (-71.06999, 0.191071), (-71.53266, 0.191071), (-71.53266, -0.161049), (-72.07639, 0.469511), (-72.11232, 0.462364), (-72.142784, 0.442009), (-72.16314, 0.411547), (-72.17029, 0.375614), (-72.17029, -0.770817), (-71.615105, -0.770817), (-71.615105, 0.469511), (-72.19254, 0.787297), (-72.19254, -0.359135), (-72.185394, -0.395067), (-72.16505, -0.425529), (-72.13458, -0.445884), (-72.09865, -0.453031), (-71.63736, -0.453031), (-71.63736, 0.787297), (-71.06999, -0.834899), (-71.53266, -0.834899), (-71.53266, -1.187019), (-71.06999, -1.187019), (-71.06999, -0.834899), (-71.06999, -0.633151), (-71.53266, -0.633151), (-71.53266, -0.834899), (-72.14444, -0.627625), (-72.14444, -0.830941), (-71.658134, -0.830941), (-71.658134, -0.627625), (-71.658134, -0.355702), (-71.658134, -0.152387), (-72.14444, -0.152387), (-72.14444, -0.355702), (-72.14444, -0.355702), (-72.14444, -0.627625), (-71.658134, -0.627625), (-71.658134, -0.355702), (-72.06229, -0.152612), (-71.48354, -0.152612), (-71.48354, 0.220243), (-72.06229, 0.220243), (-71.78647, 0.498903), (-71.8224, 0.491755), (-71.85287, 0.471401), (-71.87322, 0.440939), (-71.88036, 0.405006), (-71.88036, -0.788334), (-71.30162, -0.788334), (-71.30162, 0.498903), (-72.14444, -0.830941), (-72.14444, -1.205721), (-71.658134, -1.205721), (-71.658134, -0.830941), (-72.14444, 0.222393), (-72.14444, -0.152387), (-71.658134, -0.152387), (-71.658134, 0.222393), (-72.03271, 0.498904), (-72.03271, -0.694438), (-72.02556, -0.730371), (-72.0052, -0.760833), (-71.97475, -0.781188), (-71.93881, -0.788335), (-71.453964, -0.788335), (-71.453964, 0.498904), (-72.06229, -1.203571), (-71.48354, -1.203571), (-71.48354, -0.830716), (-72.06229, -0.830716), (-71.7656, -0.269799), (-71.75288, -0.472957), (-70.55136, -0.47589), (-70.55136, -0.270529), (-72.06229, -0.627216), (-71.48354, -0.627216), (-71.48354, -0.356112), (-72.06229, -0.356112), (-72.06229, -0.356112), (-71.48354, -0.356112), (-71.48354, -0.152612), (-72.06229, -0.152612), (-70.55136, 0.208414), (-71.75288, 0.205481), (-71.7656, 0.002324), (-70.55136, 0.003054), (-70.55136, 0.003054), (-71.7656, 0.002324), (-71.7656, -0.269799), (-70.55136, -0.270529), (-72.06229, -0.830716), (-71.48354, -0.830716), (-71.48354, -0.627216), (-72.06229, -0.627216), (-71.708275, -0.827001), (-70.55136, -0.827001), (-70.55136, -0.47589), (-71.75288, -0.472957), (-70.55136, 0.208414), (-70.55136, 0.559525), (-71.708275, 0.559525), (-71.75288, 0.205481), (-70.994865, 0.226514), (-72.198715, 0.226514), (-72.198715, -0.149626), (-70.94741, -0.150373), (-71.16405, -0.47279), (-71.71923, -0.47279), (-71.71923, -0.82072), (-71.16405, -0.82072), (-71.16405, -0.26929), (-71.71923, -0.26929), (-71.71923, -0.47279), (-71.16405, -0.47279), (-71.16405, 0.001815), (-71.71923, 0.001815), (-71.71923, -0.26929), (-71.16405, -0.26929), (-71.16405, 0.205314), (-71.71923, 0.205314), (-71.71923, 0.001815), (-71.16405, 0.001815), (-71.16405, 0.553244), (-71.71923, 0.553244), (-71.71923, 0.205314), (-71.16405, 0.205314), (-72.198715, -1.209842), (-70.994865, -1.209842), (-70.94741, -0.832955), (-72.198715, -0.833703), (-72.198715, -0.354918), (-72.198715, -0.62841), (-70.934586, -0.62841), (-70.934586, -0.354918), (-70.934586, -0.354918), (-70.94741, -0.150373), (-72.198715, -0.149626), (-72.198715, -0.354918), (-72.198715, -0.62841), (-72.198715, -0.833703), (-70.94741, -0.832955), (-70.934586, -0.62841), (-70.934586, -0.62841), (-70.94741, -0.832955), (-70.91116, -0.832934), (-70.89834, -0.62841), (-70.89834, -0.62841), (-70.91116, -0.832934), (-70.88043, -0.832916), (-70.86761, -0.62841), (-70.86761, -0.62841), (-70.88043, -0.832916), (-70.85989, -0.832904), (-70.84708, -0.62841), (-72.18048, -0.627625), (-72.18048, -0.830946), (-72.14444, -0.830941), (-72.14444, -0.627625), (-70.94741, -0.150373), (-70.934586, -0.354918), (-70.89834, -0.354918), (-70.91116, -0.150395), (-70.91116, -0.150395), (-70.89834, -0.354918), (-70.86761, -0.354918), (-70.88043, -0.150412), (-70.88043, -0.150412), (-70.86761, -0.354918), (-70.84708, -0.354918), (-70.85989, -0.150425), (-72.18048, -0.152383), (-72.18048, -0.355702), (-72.14444, -0.355702), (-72.14444, -0.152387), (-70.934586, -0.354918), (-70.934586, -0.62841), (-70.89834, -0.62841), (-70.89834, -0.354918), (-70.89834, -0.354918), (-70.89834, -0.62841), (-70.86761, -0.62841), (-70.86761, -0.354918), (-70.86761, -0.354918), (-70.86761, -0.62841), (-70.84708, -0.62841), (-70.84708, -0.354918), (-72.18048, -0.355702), (-72.18048, -0.627625), (-72.14444, -0.627625), (-72.14444, -0.355702), (-70.94741, -0.832955), (-70.994865, -1.209842), (-70.95862, -1.209842), (-70.91116, -0.832934), (-70.91116, -0.832934), (-70.95862, -1.209842), (-70.92789, -1.209842), (-70.88043, -0.832916), (-70.88043, -0.832916), (-70.92789, -1.209842), (-70.90736, -1.209842), (-70.85989, -0.832904), (-72.18048, -0.830946), (-72.18048, -1.205721), (-72.14444, -1.205721), (-72.14444, -0.830941), (-70.994865, 0.226514), (-70.94741, -0.150373), (-70.91116, -0.150395), (-70.95862, 0.226514), (-70.95862, 0.226514), (-70.91116, -0.150395), (-70.88043, -0.150412), (-70.92789, 0.226514), (-70.92789, 0.226514), (-70.88043, -0.150412), (-70.85989, -0.150425), (-70.90736, 0.226514), (-72.18048, 0.222393), (-72.18048, -0.152383), (-72.14444, -0.152387), (-72.14444, 0.222393), (-71.75288, 0.205481), (-71.708275, 0.559525), (-71.74453, 0.559525), (-71.78914, 0.205393), (-71.78914, 0.205393), (-71.74453, 0.559525), (-71.775276, 0.559525), (-71.81988, 0.205317), (-71.81988, 0.205317), (-71.775276, 0.559525), (-71.795815, 0.559525), (-71.840416, 0.205267), (-71.03395, -0.161031), (-71.03395, 0.191071), (-71.06999, 0.191071), (-71.06999, -0.161049), (-71.708275, -0.827001), (-71.75288, -0.472957), (-71.78914, -0.472868), (-71.74453, -0.827001), (-71.74453, -0.827001), (-71.78914, -0.472868), (-71.81988, -0.472793), (-71.775276, -0.827001), (-71.775276, -0.827001), (-71.81988, -0.472793), (-71.840416, -0.472743), (-71.795815, -0.827001), (-71.03395, -1.187019), (-71.03395, -0.834917), (-71.06999, -0.834899), (-71.06999, -1.187019), (-71.7656, -0.269799), (-71.7656, 0.002324), (-71.801865, 0.002302), (-71.801865, -0.269777), (-71.801865, -0.269777), (-71.801865, 0.002302), (-71.8326, 0.002283), (-71.8326, -0.269758), (-71.8326, -0.269758), (-71.8326, 0.002283), (-71.85314, 0.00227), (-71.85314, -0.269747), (-71.03395, -0.633155), (-71.03395, -0.362793), (-71.06999, -0.362797), (-71.06999, -0.633151), (-71.7656, 0.002324), (-71.75288, 0.205481), (-71.78914, 0.205393), (-71.801865, 0.002302), (-71.801865, 0.002302), (-71.78914, 0.205393), (-71.81988, 0.205317), (-71.8326, 0.002283), (-71.8326, 0.002283), (-71.81988, 0.205317), (-71.840416, 0.205267), (-71.85314, 0.00227), (-71.03395, -0.362793), (-71.03395, -0.161031), (-71.06999, -0.161049), (-71.06999, -0.362797), (-71.75288, -0.472957), (-71.7656, -0.269799), (-71.801865, -0.269777), (-71.78914, -0.472868), (-71.78914, -0.472868), (-71.801865, -0.269777), (-71.8326, -0.269758), (-71.81988, -0.472793), (-71.81988, -0.472793), (-71.8326, -0.269758), (-71.85314, -0.269747), (-71.840416, -0.472743), (-71.03395, -0.834917), (-71.03395, -0.633155), (-71.06999, -0.633151), (-71.06999, -0.834899), (5.646933, -121.22408), (7.358486, -121.22408), (7.358486, -119.51253), (5.646933, -119.51253), (-5.253075, -117.71076), (-3.54152, -117.71076), (-3.54152, -115.99921), (-5.253075, -115.99921)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_FridgeDrawer2D1_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0]
                rel material:binding = </root/_materials/M_FridgeDrawer2D1_0>
            }

            def GeomSubset "M_FridgeDrawer2D1_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
                rel material:binding = </root/_materials/M_FridgeDrawer2D1_1>
            }

            def GeomSubset "M_FridgeDrawer2D1_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [62]
                rel material:binding = </root/_materials/M_FridgeDrawer2D1_2>
            }

            def GeomSubset "M_FridgeDrawer2D1_3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [63]
                rel material:binding = </root/_materials/M_FridgeDrawer2D1_3>
            }

            def GeomSubset "M_FridgeDrawer2D1_4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138]
                rel material:binding = </root/_materials/M_FridgeDrawer2D1_4>
            }

            def GeomSubset "M_FridgeDrawer2D1_5" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [139]
                rel material:binding = </root/_materials/M_FridgeDrawer2D1_5>
            }

            def GeomSubset "M_FridgeDrawer2D1_6" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [140]
                rel material:binding = </root/_materials/M_FridgeDrawer2D1_6>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer2D1_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2D1_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.36764705, 0.36764705, 0.36764705)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2D1_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Copper_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2D1_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer2D1_1"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2D1_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer2D1_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2D1_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2D1_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2D1_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer2D1_2"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2D1_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer2D1_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2D1_2/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2D1_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2D1_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer2D1_3"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2D1_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.8014706, 0.8014706, 0.8014706)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2D1_3/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2D1_3/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer2D1_4"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2D1_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.39705884, 0.39705884, 0.39705884)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }

        def Material "M_FridgeDrawer2D1_5"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2D1_5/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer2D1_5/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2D1_5/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Decal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2D1_5/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Decal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2D1_5/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer2D1_6"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2D1_6/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer2D1_6/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2D1_6/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Readout_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2D1_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2D1_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

