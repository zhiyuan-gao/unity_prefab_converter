#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "FridgeDrawer1D1"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "FridgeDrawer1D1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.519632, -0.311834, -0.96071), (0.058588, 0.235336, -0.247911)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 8, 8, 4, 4, 4, 4, 4, 4, 8, 4, 4, 8, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 4, 5, 7, 6, 33, 28, 46, 51, 28, 30, 48, 46, 30, 37, 55, 48, 37, 36, 54, 55, 36, 39, 57, 54, 39, 38, 56, 57, 38, 31, 49, 56, 31, 29, 47, 49, 29, 34, 52, 47, 34, 35, 53, 52, 35, 32, 50, 53, 32, 33, 51, 50, 107, 111, 95, 94, 108, 105, 98, 99, 103, 109, 96, 97, 110, 101, 93, 92, 111, 110, 92, 95, 109, 108, 99, 96, 106, 107, 94, 89, 104, 106, 89, 91, 105, 104, 91, 98, 102, 103, 97, 90, 100, 102, 90, 88, 101, 100, 88, 93, 77, 76, 57, 56, 77, 56, 49, 78, 79, 78, 49, 47, 80, 79, 47, 52, 81, 80, 52, 53, 82, 81, 53, 50, 83, 82, 50, 51, 84, 83, 51, 46, 85, 84, 46, 48, 86, 85, 48, 55, 87, 86, 55, 54, 76, 87, 54, 57, 28, 33, 93, 88, 33, 32, 92, 93, 32, 35, 95, 92, 35, 34, 94, 95, 34, 29, 89, 94, 29, 31, 91, 89, 31, 38, 98, 91, 38, 39, 99, 98, 39, 36, 96, 99, 36, 37, 97, 96, 37, 30, 90, 97, 30, 28, 88, 90, 65, 64, 100, 101, 64, 66, 102, 100, 66, 67, 103, 102, 67, 73, 109, 103, 73, 72, 108, 109, 72, 69, 105, 108, 69, 68, 104, 105, 68, 70, 106, 104, 70, 71, 107, 106, 71, 75, 111, 107, 75, 74, 110, 111, 74, 65, 101, 110, 8, 9, 11, 10, 12, 13, 15, 14, 16, 17, 19, 18, 135, 129, 87, 76, 130, 86, 87, 129, 130, 125, 85, 86, 125, 158, 156, 154, 124, 58, 84, 85, 59, 127, 161, 163, 165, 126, 78, 79, 133, 77, 78, 126, 133, 135, 76, 77, 122, 117, 69, 72, 73, 67, 112, 121, 121, 122, 72, 73, 65, 40, 41, 64, 119, 150, 149, 148, 118, 43, 70, 68, 117, 119, 68, 69, 114, 112, 67, 66, 41, 115, 151, 152, 153, 114, 66, 64, 70, 43, 42, 71, 134, 132, 62, 63, 75, 44, 45, 74, 74, 45, 40, 65, 61, 131, 128, 60, 60, 128, 134, 63, 71, 42, 44, 75, 127, 59, 62, 132, 61, 58, 124, 131, 115, 41, 40, 113, 80, 62, 59, 79, 81, 63, 62, 80, 82, 60, 63, 81, 83, 61, 60, 82, 84, 58, 61, 83, 43, 118, 116, 42, 45, 44, 123, 120, 120, 113, 40, 45, 44, 42, 116, 123, 123, 116, 136, 137, 137, 136, 138, 139, 139, 138, 140, 141, 141, 140, 117, 122, 113, 120, 142, 143, 143, 142, 144, 145, 145, 144, 146, 147, 147, 146, 121, 112, 120, 123, 137, 142, 142, 137, 139, 144, 144, 139, 141, 146, 146, 141, 122, 121, 116, 118, 148, 136, 136, 148, 149, 138, 138, 149, 150, 140, 140, 150, 119, 117, 115, 113, 143, 151, 151, 143, 145, 152, 152, 145, 147, 153, 153, 147, 112, 114, 131, 124, 154, 155, 155, 154, 156, 157, 157, 156, 158, 159, 159, 158, 125, 130, 127, 132, 160, 161, 161, 160, 162, 163, 163, 162, 164, 165, 165, 164, 133, 126, 134, 128, 166, 167, 167, 166, 168, 169, 169, 168, 170, 171, 171, 170, 129, 135, 128, 131, 155, 166, 166, 155, 157, 168, 168, 157, 159, 170, 170, 159, 130, 129, 132, 134, 167, 160, 160, 167, 169, 162, 162, 169, 171, 164, 164, 171, 135, 133, 20, 21, 23, 22, 24, 25, 27, 26]
            rel material:binding = </root/_materials/M_FridgeDrawer1D1_0>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-7.239759e-7, 0, -1), (-7.2397523e-7, 0, -1), (0, 0, -1), (-7.239759e-7, 0, -1), (-5.674076e-7, 0, -1), (-5.6739026e-7, 0, -1), (-7.2397523e-7, 0, -1), (-5.674076e-7, 0, -1), (1.5657798e-7, 0, -1), (1.565833e-7, 0, -1), (-5.6739026e-7, 0, -1), (1.5657798e-7, 0, -1), (0, 0, -1), (0, 0, -1), (1.565833e-7, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1.5657835e-7, 0, -1), (-1.5658364e-7, 0, -1), (0, 0, -1), (-1.5657835e-7, 0, -1), (5.6742783e-7, 0, -1), (5.6747996e-7, 0, -1), (-1.5658364e-7, 0, -1), (5.6742783e-7, 0, -1), (7.240019e-7, 0, -1), (7.2406186e-7, 0, -1), (5.6747996e-7, 0, -1), (7.240019e-7, 0, -1), (0, 0, -1), (0, 0, -1), (7.2406186e-7, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.0000051239376, -0.9092008, 0.41635808), (0, -0.90932673, 0.41608286), (0.0000051159673, -0.9093253, -0.41608602), (0, -0.90919936, -0.41636115), (0.03199625, 0.9104449, 0.41239095), (0.07801804, 0.90756834, 0.41259295), (0.078097574, 0.90757513, -0.41256273), (0.03200487, 0.9104433, -0.41239387), (-0.078023195, 0.90757096, 0.41258606), (-0.032000333, 0.91044563, 0.41238904), (-0.032001108, 0.9104441, -0.41239226), (-0.07799445, 0.90759057, -0.41254848), (-0.000005109576, -0.9093262, 0.41608423), (0, -0.90919936, 0.41636097), (0.0000051303286, -0.9091979, -0.41636407), (0, -0.9093247, -0.41608727), (0, -0.90932673, 0.41608286), (-0.000005109576, -0.9093262, 0.41608423), (0, -0.9093247, -0.41608727), (0.0000051159673, -0.9093253, -0.41608602), (-0.032000333, 0.91044563, 0.41238904), (0.03199625, 0.9104449, 0.41239095), (0.03200487, 0.9104433, -0.41239387), (-0.032001108, 0.9104441, -0.41239226), (0.0000014044344, -0.9418707, 0.3359755), (-0.0000051239376, -0.9092008, 0.41635808), (0, -0.90919936, -0.41636115), (0, -0.941881, -0.33594674), (0.9386812, -7.450581e-9, 0.34478655), (0.9419355, 0, 0.3357941), (0.94193166, -0.0000013895333, -0.33580458), (0.93869376, 0, -0.3447523), (0.07801804, 0.90756834, 0.41259295), (0.11725228, 0.9313023, 0.34485936), (0.11720222, 0.93130666, -0.3448646), (0.078097574, 0.90757513, -0.41256273), (-0.117200926, 0.9312958, 0.34489426), (-0.078023195, 0.90757096, 0.41258606), (-0.07799445, 0.90759057, -0.41254848), (-0.11725343, 0.9313018, -0.3448602), (-0.9419408, -0.0000013783574, 0.3357789), (-0.93868774, 0, 0.34476858), (-0.93868583, -1.4901161e-8, -0.34477365), (-0.9419371, 0, -0.3357895), (0, -0.90919936, 0.41636097), (0, -0.9418682, 0.3359828), (-0.0000014007092, -0.9418784, -0.335954), (0.0000051303286, -0.9091979, -0.41636407), (-0.085110135, -0.99637157, 0), (-0.035899192, -0.99935544, -2.2061741e-7), (-0.03591428, -0.99935484, 0), (-0.084984735, -0.99638224, 7.728615e-10), (-0.085110135, -0.99637157, 0), (-0.084984735, -0.99638224, 7.728615e-10), (-0.124914005, -0.9921676, 0), (-0.12491411, -0.9921676, 0), (-1, 0, 0), (-1, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (0, 1, 0), (0, 1, 0), (0, 0.99999994, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.08511055, -0.99637157, -8.3601793e-7), (0.12491494, -0.9921675, 0), (0.12491486, -0.99216753, 0), (0.08498516, -0.99638224, 0), (0.035899192, -0.99935544, 0), (0.08511055, -0.99637157, -8.3601793e-7), (0.08498516, -0.99638224, 0), (0.035914276, -0.99935484, 4.0341955e-10), (-0.035899192, -0.99935544, -2.2061741e-7), (0.035899192, -0.99935544, 0), (0.035914276, -0.99935484, 4.0341955e-10), (-0.03591428, -0.99935484, 0), (-4.82567e-9, -0.7991615, -0.6011163), (1.609581e-8, -0.79916286, -0.6011144), (0.0000051303286, -0.9091979, -0.41636407), (-0.0000014007092, -0.9418784, -0.335954), (1.609581e-8, -0.79916286, -0.6011144), (0, -0.7993686, -0.600841), (0, -0.9093247, -0.41608727), (0.0000051303286, -0.9091979, -0.41636407), (0, -0.7993686, -0.600841), (0, -0.79937035, -0.6008386), (0.0000051159673, -0.9093253, -0.41608602), (0, -0.9093247, -0.41608727), (0, -0.79937035, -0.6008386), (0, -0.7993685, -0.60084105), (0, -0.90919936, -0.41636115), (0.0000051159673, -0.9093253, -0.41608602), (0, -0.7993685, -0.60084105), (0, -0.7993675, -0.6008425), (0, -0.941881, -0.33594674), (0, -0.90919936, -0.41636115), (0.7994548, 1.825085e-8, -0.6007262), (0.79945475, 3.085006e-8, -0.6007262), (0.93869376, 0, -0.3447523), (0.94193166, -0.0000013895333, -0.33580458), (0.09984938, 0.79307115, -0.6008896), (0.06758376, 0.7963073, -0.6011049), (0.078097574, 0.90757513, -0.41256273), (0.11720222, 0.93130666, -0.3448646), (0.06758376, 0.7963073, -0.6011049), (0.028516995, 0.79864097, -0.6011316), (0.03200487, 0.9104433, -0.41239387), (0.078097574, 0.90757513, -0.41256273), (0.028516995, 0.79864097, -0.6011316), (-0.02851716, 0.7986409, -0.6011319), (-0.032001108, 0.9104441, -0.41239226), (0.03200487, 0.9104433, -0.41239387), (-0.02851716, 0.7986409, -0.6011319), (-0.06758423, 0.7963077, -0.6011044), (-0.07799445, 0.90759057, -0.41254848), (-0.032001108, 0.9104441, -0.41239226), (-0.06758423, 0.7963077, -0.6011044), (-0.0998515, 0.7930853, -0.60087055), (-0.11725343, 0.9313018, -0.3448602), (-0.07799445, 0.90759057, -0.41254848), (-0.79937243, 0, -0.60083586), (-0.79937243, 0, -0.60083586), (-0.9419371, 0, -0.3357895), (-0.93868583, -1.4901161e-8, -0.34477365), (-0.000018179377, -0.75762284, 0.65269256), (-0.000028938055, -0.6660377, 0.7459181), (0, -0.9418682, 0.3359828), (0, -0.90919936, 0.41636097), (-0.6660845, -0.000021356269, 0.7458763), (-0.6719872, 0.000004604459, 0.7405628), (-0.93868774, 0, 0.34476858), (-0.9419408, -0.0000013783574, 0.3357789), (-0.08409652, 0.66809857, 0.73930514), (-0.060105618, 0.75793654, 0.6495534), (-0.078023195, 0.90757096, 0.41258606), (-0.117200926, 0.9312958, 0.34489426), (-0.060105618, 0.75793654, 0.6495534), (-0.0291738, 0.75973034, 0.6495835), (-0.032000333, 0.91044563, 0.41238904), (-0.078023195, 0.90757096, 0.41258606), (-0.0291738, 0.75973034, 0.6495835), (0.029168654, 0.7597291, 0.64958507), (0.03199625, 0.9104449, 0.41239095), (-0.032000333, 0.91044563, 0.41238904), (0.029168654, 0.7597291, 0.64958507), (0.060176216, 0.7579241, 0.6495614), (0.07801804, 0.90756834, 0.41259295), (0.03199625, 0.9104449, 0.41239095), (0.060176216, 0.7579241, 0.6495614), (0.084119216, 0.6681071, 0.7392949), (0.11725228, 0.9313023, 0.34485936), (0.07801804, 0.90756834, 0.41259295), (0.67198646, -0.0002585636, 0.74056333), (0.6660415, -0.00001218915, 0.7459147), (0.9419355, 0, 0.3357941), (0.9386812, -7.450581e-9, 0.34478655), (0.000004175138, -0.6660253, 0.7459292), (0, -0.75762504, 0.6526901), (-0.0000051239376, -0.9092008, 0.41635808), (0.0000014044344, -0.9418707, 0.3359755), (0, -0.75762504, 0.6526901), (0, -0.757626, 0.6526889), (0, -0.90932673, 0.41608286), (-0.0000051239376, -0.9092008, 0.41635808), (0, -0.757626, 0.6526889), (0, -0.75762504, 0.65269005), (-0.000005109576, -0.9093262, 0.41608423), (0, -0.90932673, 0.41608286), (0, -0.75762504, 0.65269005), (-0.000018179377, -0.75762284, 0.65269256), (0, -0.90919936, 0.41636097), (-0.000005109576, -0.9093262, 0.41608423), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.035488088, -0.9816084, -0.1875782), (0.03549349, -0.9816082, -0.18757793), (0.035899192, -0.99935544, 0), (-0.035899192, -0.99935544, -2.2061741e-7), (0.08249848, -0.97891307, -0.18687713), (0.08511055, -0.99637157, -8.3601793e-7), (0.035899192, -0.99935544, 0), (0.03549349, -0.9816082, -0.18757793), (0.08249848, -0.97891307, -0.18687713), (0.12269496, -0.9744948, -0.18789876), (0.12491494, -0.9921675, 0), (0.08511055, -0.99637157, -8.3601793e-7), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.08249802, -0.97891307, -0.18687761), (-0.085110135, -0.99637157, 0), (-0.12491411, -0.9921676, 0), (-0.12270342, -0.9744935, -0.18789981), (-0.08249802, -0.97891307, -0.18687761), (-0.035488088, -0.9816084, -0.1875782), (-0.035899192, -0.99935544, -2.2061741e-7), (-0.085110135, -0.99637157, 0), (0.034794323, 0.9840301, 0.17456825), (0.08341133, 0.9812096, 0.17398353), (0.060176216, 0.7579241, 0.6495614), (0.029168654, 0.7597291, 0.64958507), (-0.0291738, 0.75973034, 0.6495835), (-0.060105618, 0.75793654, 0.6495534), (-0.08340488, 0.98121023, 0.17398319), (-0.03489456, 0.9840275, 0.17456335), (-0.03489456, 0.9840275, 0.17456335), (0.034794323, 0.9840301, 0.17456825), (0.029168654, 0.7597291, 0.64958507), (-0.0291738, 0.75973034, 0.6495835), (-0.000018179377, -0.75762284, 0.65269256), (0, -1, 0), (0, -1, 0), (-0.000028938055, -0.6660377, 0.7459181), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.6660415, -0.00001218915, 0.7459147), (0.67198646, -0.0002585636, 0.74056333), (0.08341133, 0.9812096, 0.17398353), (0.122988686, 0.97688055, 0.17486617), (0.084119216, 0.6681071, 0.7392949), (0.060176216, 0.7579241, 0.6495614), (-0.12299636, 0.9768796, 0.17486617), (-0.08340488, 0.98121023, 0.17398319), (-0.060105618, 0.75793654, 0.6495534), (-0.08409652, 0.66809857, 0.73930514), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.6719872, 0.000004604459, 0.7405628), (-0.6660845, -0.000021356269, 0.7458763), (0.000004175138, -0.6660253, 0.7459292), (0, -1, 0), (0, -1, 0), (0, -0.75762504, 0.6526901), (-0.0063949116, -0.19919635, -0.97993875), (-0.019102711, -0.19879115, -0.9798557), (-1.8797911e-7, 0, -1), (-1.883433e-7, 0, -1), (0, -0.757626, 0.6526889), (0, -1, 0), (0, -1, 0), (0, -0.75762504, 0.65269005), (0, -0.75762504, 0.65269005), (0, -1, 0), (0, -1, 0), (-0.000018179377, -0.75762284, 0.65269256), (1.6699917e-7, 0, -1), (0.019087676, -0.19879273, -0.97985566), (0.0064007565, -0.19919616, -0.9799386), (1.8834447e-7, 0, -1), (1.8834447e-7, 0, -1), (0.0064007565, -0.19919616, -0.9799386), (-0.0063949116, -0.19919635, -0.97993875), (-1.883433e-7, 0, -1), (0, -0.75762504, 0.6526901), (0, -1, 0), (0, -1, 0), (0, -0.757626, 0.6526889), (-0.02289859, -0.18208233, -0.9830166), (0, 0, -1), (-1.8797911e-7, 0, -1), (-0.019102711, -0.19879115, -0.9798557), (1.6699917e-7, 0, -1), (-4.1897756e-8, 0, -1), (0.022892572, -0.1820832, -0.9830166), (0.019087676, -0.19879273, -0.97985566), (-0.021192307, 0.16817707, 0.98552895), (2.0085976e-7, 0, 1), (-2.5960222e-7, 0, 1), (-0.017897962, 0.18708499, 0.98218066), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-2.0086044e-7, 0, 1), (0.021197833, 0.16817655, 0.98552895), (0.017891724, 0.18708569, 0.98218066), (2.0333854e-7, 0, 1), (-3.602068e-7, 0, 1), (3.0392263e-7, 0, 1), (0.0059887078, 0.18744619, 0.98225665), (-0.0059986385, 0.18744588, 0.98225665), (-0.0059986385, 0.18744588, 0.98225665), (-0.017897962, 0.18708499, 0.98218066), (-2.5960222e-7, 0, 1), (-3.602068e-7, 0, 1), (3.0392263e-7, 0, 1), (2.0333854e-7, 0, 1), (0.017891724, 0.18708569, 0.98218066), (0.0059887078, 0.18744619, 0.98225665), (0.0059887078, 0.18744619, 0.98225665), (0.017891724, 0.18708569, 0.98218066), (0.033204015, 0.38298678, 0.92315686), (0.013654751, 0.3862794, 0.9222808), (0.013654751, 0.3862794, 0.9222808), (0.033204015, 0.38298678, 0.92315686), (0.060718585, 0.7060075, 0.7055968), (0.025002021, 0.7090327, 0.7047323), (0.025002021, 0.7090327, 0.7047323), (0.060718585, 0.7060075, 0.7055968), (0.07889623, 0.92103124, 0.38141418), (0.032502078, 0.92400295, 0.3810015), (0.032502078, 0.92400295, 0.3810015), (0.07889623, 0.92103124, 0.38141418), (0.08341133, 0.9812096, 0.17398353), (0.034794323, 0.9840301, 0.17456825), (-0.017897962, 0.18708499, 0.98218066), (-0.0059986385, 0.18744588, 0.98225665), (-0.013605091, 0.3862917, 0.9222764), (-0.03320355, 0.38298735, 0.9231567), (-0.03320355, 0.38298735, 0.9231567), (-0.013605091, 0.3862917, 0.9222764), (-0.024957728, 0.70903015, 0.70473653), (-0.060718928, 0.7060071, 0.7055971), (-0.060718928, 0.7060071, 0.7055971), (-0.024957728, 0.70903015, 0.70473653), (-0.032502044, 0.9240031, 0.38100117), (-0.078896105, 0.9210316, 0.38141352), (-0.078896105, 0.9210316, 0.38141352), (-0.032502044, 0.9240031, 0.38100117), (-0.03489456, 0.9840275, 0.17456335), (-0.08340488, 0.98121023, 0.17398319), (-0.0059986385, 0.18744588, 0.98225665), (0.0059887078, 0.18744619, 0.98225665), (0.013654751, 0.3862794, 0.9222808), (-0.013605091, 0.3862917, 0.9222764), (-0.013605091, 0.3862917, 0.9222764), (0.013654751, 0.3862794, 0.9222808), (0.025002021, 0.7090327, 0.7047323), (-0.024957728, 0.70903015, 0.70473653), (-0.024957728, 0.70903015, 0.70473653), (0.025002021, 0.7090327, 0.7047323), (0.032502078, 0.92400295, 0.3810015), (-0.032502044, 0.9240031, 0.38100117), (-0.032502044, 0.9240031, 0.38100117), (0.032502078, 0.92400295, 0.3810015), (0.034794323, 0.9840301, 0.17456825), (-0.03489456, 0.9840275, 0.17456335), (0.017891724, 0.18708569, 0.98218066), (0.021197833, 0.16817655, 0.98552895), (0.04644263, 0.36885533, 0.92832583), (0.033204015, 0.38298678, 0.92315686), (0.033204015, 0.38298678, 0.92315686), (0.04644263, 0.36885533, 0.92832583), (0.08769181, 0.6964921, 0.71218604), (0.060718585, 0.7060075, 0.7055968), (0.060718585, 0.7060075, 0.7055968), (0.08769181, 0.6964921, 0.71218604), (0.11525142, 0.91541207, 0.3856654), (0.07889623, 0.92103124, 0.38141418), (0.07889623, 0.92103124, 0.38141418), (0.11525142, 0.91541207, 0.3856654), (0.122988686, 0.97688055, 0.17486617), (0.08341133, 0.9812096, 0.17398353), (-0.021192307, 0.16817707, 0.98552895), (-0.017897962, 0.18708499, 0.98218066), (-0.03320355, 0.38298735, 0.9231567), (-0.04638832, 0.36853328, 0.9284564), (-0.04638832, 0.36853328, 0.9284564), (-0.03320355, 0.38298735, 0.9231567), (-0.060718928, 0.7060071, 0.7055971), (-0.087697014, 0.6962408, 0.7124311), (-0.087697014, 0.6962408, 0.7124311), (-0.060718928, 0.7060071, 0.7055971), (-0.078896105, 0.9210316, 0.38141352), (-0.11525148, 0.91541237, 0.38566476), (-0.11525148, 0.91541237, 0.38566476), (-0.078896105, 0.9210316, 0.38141352), (-0.08340488, 0.98121023, 0.17398319), (-0.12299636, 0.9768796, 0.17486617), (0.019087676, -0.19879273, -0.97985566), (0.022892572, -0.1820832, -0.9830166), (0.046460807, -0.36889425, -0.92830944), (0.032495417, -0.3824054, -0.92342305), (0.032495417, -0.3824054, -0.92342305), (0.046460807, -0.36889425, -0.92830944), (0.087697454, -0.6960636, -0.7126041), (0.059490606, -0.7056007, -0.70610803), (0.059490606, -0.7056007, -0.70610803), (0.087697454, -0.6960636, -0.7126041), (0.115259066, -0.9154188, -0.38564736), (0.07728667, -0.921006, -0.3818048), (0.07728667, -0.921006, -0.3818048), (0.115259066, -0.9154188, -0.38564736), (0.12269496, -0.9744948, -0.18789876), (0.08249848, -0.97891307, -0.18687713), (-0.02289859, -0.18208233, -0.9830166), (-0.019102711, -0.19879115, -0.9798557), (-0.032495294, -0.38240477, -0.9234234), (-0.04639028, -0.36831954, -0.9285411), (-0.04639028, -0.36831954, -0.9285411), (-0.032495294, -0.38240477, -0.9234234), (-0.059490006, -0.7056012, -0.7061076), (-0.087710135, -0.6965458, -0.71213126), (-0.087710135, -0.6965458, -0.71213126), (-0.059490006, -0.7056012, -0.7061076), (-0.07728612, -0.92100626, -0.38180414), (-0.11525826, -0.9154188, -0.38564745), (-0.11525826, -0.9154188, -0.38564745), (-0.07728612, -0.92100626, -0.38180414), (-0.08249802, -0.97891307, -0.18687761), (-0.12270342, -0.9744935, -0.18789981), (-0.0063949116, -0.19919635, -0.97993875), (0.0064007565, -0.19919616, -0.9799386), (0.014238419, -0.38650322, -0.9221781), (-0.014083111, -0.38648894, -0.9221866), (-0.014083111, -0.38648894, -0.9221866), (0.014238419, -0.38650322, -0.9221781), (0.025874788, -0.7091146, -0.7046184), (-0.025925715, -0.7091175, -0.7046135), (-0.025925715, -0.7091175, -0.7046135), (0.025874788, -0.7091146, -0.7046184), (0.033677183, -0.92400205, -0.38090158), (-0.033677172, -0.924002, -0.3809018), (-0.033677172, -0.924002, -0.3809018), (0.033677183, -0.92400205, -0.38090158), (0.03549349, -0.9816082, -0.18757793), (-0.035488088, -0.9816084, -0.1875782), (0.0064007565, -0.19919616, -0.9799386), (0.019087676, -0.19879273, -0.97985566), (0.032495417, -0.3824054, -0.92342305), (0.014238419, -0.38650322, -0.9221781), (0.014238419, -0.38650322, -0.9221781), (0.032495417, -0.3824054, -0.92342305), (0.059490606, -0.7056007, -0.70610803), (0.025874788, -0.7091146, -0.7046184), (0.025874788, -0.7091146, -0.7046184), (0.059490606, -0.7056007, -0.70610803), (0.07728667, -0.921006, -0.3818048), (0.033677183, -0.92400205, -0.38090158), (0.033677183, -0.92400205, -0.38090158), (0.07728667, -0.921006, -0.3818048), (0.08249848, -0.97891307, -0.18687713), (0.03549349, -0.9816082, -0.18757793), (-0.019102711, -0.19879115, -0.9798557), (-0.0063949116, -0.19919635, -0.97993875), (-0.014083111, -0.38648894, -0.9221866), (-0.032495294, -0.38240477, -0.9234234), (-0.032495294, -0.38240477, -0.9234234), (-0.014083111, -0.38648894, -0.9221866), (-0.025925715, -0.7091175, -0.7046135), (-0.059490006, -0.7056012, -0.7061076), (-0.059490006, -0.7056012, -0.7061076), (-0.025925715, -0.7091175, -0.7046135), (-0.033677172, -0.924002, -0.3809018), (-0.07728612, -0.92100626, -0.38180414), (-0.07728612, -0.92100626, -0.38180414), (-0.033677172, -0.924002, -0.3809018), (-0.035488088, -0.9816084, -0.1875782), (-0.08249802, -0.97891307, -0.18687761), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.043033, 0.037125, -0.96071), (0.043023, 0.037125, -0.96071), (0.043033, 0.037135, -0.96071), (0.043023, 0.037135, -0.96071), (0.043033, 0.037125, -0.96071), (0.043023, 0.037125, -0.96071), (0.043033, 0.037135, -0.96071), (0.043023, 0.037135, -0.96071), (0.043033, 0.037125, -0.96071), (0.043023, 0.037125, -0.96071), (0.043033, 0.037135, -0.96071), (0.043023, 0.037135, -0.96071), (0.043033, 0.037125, -0.96071), (0.043023, 0.037125, -0.96071), (0.043033, 0.037135, -0.96071), (0.043023, 0.037135, -0.96071), (0.043033, 0.037125, -0.96071), (0.043023, 0.037125, -0.96071), (0.043033, 0.037135, -0.96071), (0.043023, 0.037135, -0.96071), (0.043033, 0.037125, -0.96071), (0.043023, 0.037125, -0.96071), (0.043033, 0.037135, -0.96071), (0.043023, 0.037135, -0.96071), (0.043033, 0.037125, -0.96071), (0.043023, 0.037125, -0.96071), (0.043033, 0.037135, -0.96071), (0.043023, 0.037135, -0.96071), (0.057208, 0.233956, -0.247911), (-0.518251, 0.233956, -0.247911), (0.057208, -0.286304, -0.247911), (-0.518251, -0.286304, -0.247911), (-0.175736, 0.233956, -0.247911), (-0.093488, 0.233956, -0.247911), (-0.367556, 0.233956, -0.247911), (-0.285307, 0.233956, -0.247911), (-0.175736, -0.310454, -0.247911), (-0.09381, -0.305317, -0.247911), (-0.367233, -0.305317, -0.247911), (-0.285307, -0.310454, -0.247911), (-0.093488, 0.233956, -0.490791), (0.057208, 0.233956, -0.490791), (-0.367556, 0.233956, -0.490791), (-0.518251, 0.233956, -0.490791), (-0.285307, 0.233956, -0.490791), (-0.175736, 0.233956, -0.490791), (0.047134, 0.223882, -0.247911), (-0.508178, 0.223882, -0.247911), (0.047134, -0.277419, -0.247911), (-0.508178, -0.277419, -0.247911), (-0.175736, 0.223882, -0.247911), (-0.093488, 0.223882, -0.247911), (-0.367556, 0.223882, -0.247911), (-0.285307, 0.223882, -0.247911), (-0.176051, -0.30038, -0.247911), (-0.094755, -0.295283, -0.247911), (-0.366288, -0.295283, -0.247911), (-0.284992, -0.30038, -0.247911), (0.047134, 0.223882, -0.481269), (-0.508178, 0.223882, -0.481269), (-0.175736, 0.223882, -0.481269), (-0.093488, 0.223882, -0.481269), (-0.367556, 0.223882, -0.481269), (-0.285307, 0.223882, -0.481269), (0.057208, 0.233956, -0.256881), (-0.093488, 0.233956, -0.256881), (0.057208, -0.286304, -0.256881), (-0.09381, -0.305317, -0.256881), (-0.518251, -0.286304, -0.256881), (-0.367233, -0.305317, -0.256881), (-0.518251, 0.233956, -0.256881), (-0.367556, 0.233956, -0.256881), (-0.285307, -0.310454, -0.256881), (-0.175736, -0.310454, -0.256881), (-0.175736, 0.233956, -0.256881), (-0.285307, 0.233956, -0.256881), (-0.284992, -0.30038, -0.256881), (-0.366288, -0.295283, -0.256881), (-0.508178, -0.277419, -0.256881), (-0.508178, 0.223882, -0.256881), (-0.367556, 0.223882, -0.256881), (-0.285307, 0.223882, -0.256881), (-0.175736, 0.223882, -0.256881), (-0.093488, 0.223882, -0.256881), (0.047134, 0.223882, -0.256881), (0.047134, -0.277419, -0.256881), (-0.094755, -0.295283, -0.256881), (-0.176051, -0.30038, -0.256881), (0.058588, 0.235336, -0.249747), (-0.519632, 0.235336, -0.249747), (0.058588, -0.287521, -0.249747), (-0.519632, -0.287521, -0.249747), (-0.175736, 0.235336, -0.249747), (-0.093488, 0.235336, -0.249747), (-0.367556, 0.235336, -0.249747), (-0.285307, 0.235336, -0.249747), (-0.175692, -0.311834, -0.249747), (-0.09368, -0.306692, -0.249747), (-0.367363, -0.306692, -0.249747), (-0.285351, -0.311834, -0.249747), (0.058588, 0.235336, -0.255046), (-0.093488, 0.235336, -0.255046), (0.058588, -0.287521, -0.255046), (-0.09368, -0.306692, -0.255046), (-0.519632, -0.287521, -0.255046), (-0.367363, -0.306692, -0.255046), (-0.519632, 0.235336, -0.255046), (-0.367556, 0.235336, -0.255046), (-0.285351, -0.311834, -0.255046), (-0.175692, -0.311834, -0.255046), (-0.175736, 0.235336, -0.255046), (-0.285307, 0.235336, -0.255046), (-0.09381, -0.305317, -0.452841), (-0.093787, -0.267367, -0.490791), (0.057208, -0.286304, -0.452841), (0.057208, -0.248354, -0.490791), (-0.367256, -0.267367, -0.490791), (-0.367233, -0.305317, -0.452841), (-0.518251, -0.248354, -0.490791), (-0.518251, -0.286304, -0.452841), (-0.175736, -0.272504, -0.490791), (-0.175736, -0.310454, -0.452841), (-0.285307, -0.310454, -0.452841), (-0.285307, -0.272504, -0.490791), (0.047134, -0.239469, -0.481269), (0.047134, -0.277419, -0.443319), (-0.508178, -0.277419, -0.443319), (-0.508178, -0.239469, -0.481269), (-0.176028, -0.26243, -0.481269), (-0.176051, -0.30038, -0.443319), (-0.094755, -0.295283, -0.443319), (-0.094662, -0.257333, -0.481269), (-0.366381, -0.257333, -0.481269), (-0.366288, -0.295283, -0.443319), (-0.285015, -0.26243, -0.481269), (-0.284992, -0.30038, -0.443319), (-0.367247, -0.28189, -0.487903), (-0.285307, -0.287027, -0.487903), (-0.36724, -0.294202, -0.479676), (-0.285307, -0.299339, -0.479676), (-0.367235, -0.302429, -0.467364), (-0.285307, -0.307565, -0.467364), (-0.175736, -0.287027, -0.487903), (-0.093796, -0.28189, -0.487903), (-0.175736, -0.299339, -0.479676), (-0.093803, -0.294202, -0.479676), (-0.175736, -0.307565, -0.467364), (-0.093808, -0.302429, -0.467364), (-0.518251, -0.262877, -0.487903), (-0.518251, -0.275189, -0.479676), (-0.518251, -0.283416, -0.467364), (0.057208, -0.262877, -0.487903), (0.057208, -0.275189, -0.479676), (0.057208, -0.283416, -0.467364), (0.047134, -0.253992, -0.478381), (-0.094698, -0.271856, -0.478381), (0.047134, -0.266304, -0.470154), (-0.094728, -0.284167, -0.470154), (0.047134, -0.27453, -0.457842), (-0.094748, -0.292394, -0.457842), (-0.366345, -0.271856, -0.478381), (-0.508178, -0.253992, -0.478381), (-0.366315, -0.284167, -0.470154), (-0.508178, -0.266304, -0.470154), (-0.366295, -0.292394, -0.457842), (-0.508178, -0.27453, -0.457842), (-0.176037, -0.276953, -0.478381), (-0.285006, -0.276953, -0.478381), (-0.176044, -0.289265, -0.470154), (-0.284999, -0.289265, -0.470154), (-0.176049, -0.297491, -0.457842), (-0.284994, -0.297491, -0.457842)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-172.10272, -111.271255), (-172.10272, -111.271286), (-172.10269, -111.271286), (-172.10269, -111.271255), (-137.53873, -114.56585), (-137.53873, -114.565956), (-137.53847, -114.565956), (-137.53847, -114.56585), (-142.85094, 0.790012), (-142.85094, 1.17125), (-142.87642, 1.145764), (-142.87642, 0.790012), (-142.85094, 1.17125), (-144.16711, 1.17125), (-144.14464, 1.145764), (-142.87642, 1.145764), (-144.16711, 1.17125), (-144.21521, 0.789198), (-144.18983, 0.786806), (-144.14464, 1.145764), (-144.21521, 0.789198), (-144.22821, 0.581938), (-144.20273, 0.58114), (-144.18983, 0.786806), (-144.22821, 0.581938), (-144.22821, 0.304739), (-144.20273, 0.305536), (-144.20273, 0.58114), (-144.22821, 0.304739), (-144.21521, 0.097479), (-144.18983, 0.09987), (-144.20273, 0.305536), (-144.21521, 0.097479), (-144.16711, -0.284573), (-144.14464, -0.259087), (-144.18983, 0.09987), (-144.16711, -0.284573), (-142.85094, -0.284573), (-142.87642, -0.259087), (-144.14464, -0.259087), (-142.85094, -0.284573), (-142.85094, 0.096664), (-142.87642, 0.096664), (-142.87642, -0.259087), (-142.85094, 0.096664), (-142.85094, 0.304739), (-142.87642, 0.304739), (-142.87642, 0.096664), (-142.85094, 0.304739), (-142.85094, 0.581938), (-142.87642, 0.581938), (-142.87642, 0.304739), (-142.85094, 0.581938), (-142.85094, 0.790012), (-142.87642, 0.790012), (-142.87642, 0.581938), (-143.1041, 0.093525), (-143.1041, 0.303484), (-143.11761, 0.303484), (-143.11761, 0.093525), (-143.09457, 0.303044), (-143.09457, 0.093194), (-143.08101, 0.093194), (-143.08101, 0.303044), (-143.09457, 0.793482), (-143.09457, 0.583633), (-143.08101, 0.583633), (-143.08101, 0.793482), (-143.1041, 0.583193), (-143.1041, 0.793151), (-143.11761, 0.793151), (-143.11761, 0.583193), (-143.1041, 0.303484), (-143.1041, 0.583193), (-143.11761, 0.583193), (-143.11761, 0.303484), (-143.09457, 0.583633), (-143.09457, 0.303044), (-143.08101, 0.303044), (-143.08101, 0.583633), (-143.1041, -0.294687), (-143.1041, 0.093525), (-143.11761, 0.093525), (-143.11761, -0.294687), (-143.0364, 1.080285), (-143.0364, -0.278167), (-143.02264, -0.278167), (-143.02264, 1.080285), (-143.09457, 0.093194), (-143.09457, -0.296424), (-143.08101, -0.296424), (-143.08101, 0.093194), (-143.09457, 1.183101), (-143.09457, 0.793482), (-143.08101, 0.793482), (-143.08101, 1.183101), (-143.01599, 1.080283), (-143.01599, -0.278164), (-143.00223, -0.278164), (-143.00223, 1.080283), (-143.1041, 0.793151), (-143.1041, 1.181364), (-143.11761, 1.181364), (-143.11761, 0.793151), (-143.05923, 0.089155), (-143.05923, 0.290762), (-143.08148, 0.290762), (-143.08148, 0.089155), (-143.05923, 0.089155), (-143.08148, 0.089155), (-143.08148, -0.262718), (-143.05923, -0.262718), (-142.99979, 1.004762), (-142.99979, -0.235567), (-142.97758, -0.235567), (-142.97758, 1.004762), (-143.06104, 0.086791), (-143.06104, -0.261139), (-143.03885, -0.261139), (-143.03885, 0.086791), (-143.06104, 0.290292), (-143.06104, 0.086791), (-143.03885, 0.086791), (-143.03885, 0.290292), (-143.06104, 0.561397), (-143.06104, 0.290292), (-143.03885, 0.290292), (-143.03885, 0.561397), (-143.06104, 0.764897), (-143.06104, 0.561397), (-143.03885, 0.561397), (-143.03885, 0.764897), (-143.06104, 1.112828), (-143.06104, 0.764897), (-143.03885, 0.764897), (-143.03885, 1.112828), (-142.97937, 1.004764), (-142.97937, -0.235569), (-142.95717, -0.235569), (-142.95717, 1.004764), (-143.05923, 0.762533), (-143.05923, 1.114407), (-143.08148, 1.114407), (-143.08148, 0.762533), (-143.05923, 0.560927), (-143.05923, 0.762533), (-143.08148, 0.762533), (-143.08148, 0.560927), (-143.05923, 0.290762), (-143.05923, 0.560927), (-143.08148, 0.560927), (-143.08148, 0.290762), (-142.85094, 1.17125), (-142.85094, 0.790012), (-142.84744, 0.790012), (-142.84744, 1.174741), (-142.85094, 0.790012), (-142.85094, 0.581938), (-142.84744, 0.581938), (-142.84744, 0.790012), (-142.85094, 0.581938), (-142.85094, 0.304739), (-142.84744, 0.304739), (-142.84744, 0.581938), (-142.85094, 0.304739), (-142.85094, 0.096664), (-142.84744, 0.096664), (-142.84744, 0.304739), (-142.85094, 0.096664), (-142.85094, -0.284573), (-142.84744, -0.288064), (-142.84744, 0.096664), (-143.01787, -0.274582), (-143.01787, 1.077123), (-143.02264, 1.080285), (-143.02264, -0.278167), (-144.16711, -0.284573), (-144.21521, 0.097479), (-144.21869, 0.097151), (-144.1702, -0.288064), (-144.21521, 0.097479), (-144.22821, 0.304739), (-144.2317, 0.304629), (-144.21869, 0.097151), (-144.22821, 0.304739), (-144.22821, 0.581938), (-144.2317, 0.582048), (-144.2317, 0.304629), (-144.22821, 0.581938), (-144.21521, 0.789198), (-144.21869, 0.789525), (-144.2317, 0.582048), (-144.21521, 0.789198), (-144.16711, 1.17125), (-144.1702, 1.174741), (-144.21869, 0.789525), (-142.99745, -0.275002), (-142.99745, 1.076698), (-143.00223, 1.080283), (-143.00223, -0.278164), (-143.09941, 0.793151), (-143.09941, 1.177841), (-143.1041, 1.181364), (-143.1041, 0.793151), (-143.02075, 1.076698), (-143.02075, -0.275002), (-143.01599, -0.278164), (-143.01599, 1.080283), (-143.09926, 1.17957), (-143.09926, 0.793151), (-143.09457, 0.793482), (-143.09457, 1.183101), (-143.09926, 0.793151), (-143.09926, 0.583522), (-143.09457, 0.583633), (-143.09457, 0.793482), (-143.09926, 0.583522), (-143.09926, 0.303155), (-143.09457, 0.303044), (-143.09457, 0.583633), (-143.09926, 0.303155), (-143.09926, 0.093526), (-143.09457, 0.093194), (-143.09457, 0.303044), (-143.09926, 0.093526), (-143.09926, -0.292893), (-143.09457, -0.296424), (-143.09457, 0.093194), (-143.04118, 1.077123), (-143.04118, -0.274582), (-143.0364, -0.278167), (-143.0364, 1.080285), (-143.09941, -0.291164), (-143.09941, 0.093525), (-143.1041, 0.093525), (-143.1041, -0.294687), (-143.09941, 0.093525), (-143.09941, 0.303484), (-143.1041, 0.303484), (-143.1041, 0.093525), (-143.09941, 0.303484), (-143.09941, 0.583193), (-143.1041, 0.583193), (-143.1041, 0.303484), (-143.09941, 0.583193), (-143.09941, 0.793151), (-143.1041, 0.793151), (-143.1041, 0.583193), (-118.53865, -109.61047), (-118.53865, -113.51364), (-114.65679, -113.51364), (-114.65679, -109.61047), (-88.71441, -110.74826), (-88.71441, -113.93459), (-85.54558, -113.93459), (-85.54558, -110.74826), (-69.16569, -112.12139), (-69.16569, -112.1214), (-69.16568, -112.1214), (-69.16568, -112.12139), (-71.06999, -0.633151), (-71.06999, -0.362797), (-71.53266, -0.362797), (-71.53266, -0.633151), (-71.06999, -0.161049), (-71.53266, -0.161049), (-71.53266, -0.362797), (-71.06999, -0.362797), (-71.06999, -0.161049), (-71.06999, 0.191072), (-71.53266, 0.191072), (-71.53266, -0.161049), (-72.07639, 0.469511), (-72.11232, 0.462364), (-72.142784, 0.442009), (-72.16314, 0.411547), (-72.17029, 0.375614), (-72.17029, -0.770817), (-71.615105, -0.770817), (-71.615105, 0.469511), (-72.19254, 0.787297), (-72.19254, -0.359134), (-72.185394, -0.395067), (-72.16505, -0.425529), (-72.13458, -0.445883), (-72.09865, -0.453031), (-71.63736, -0.453031), (-71.63736, 0.787297), (-71.06999, -0.834899), (-71.53266, -0.834899), (-71.53266, -1.18702), (-71.06999, -1.18702), (-71.06999, -0.834899), (-71.06999, -0.633151), (-71.53266, -0.633151), (-71.53266, -0.834899), (-72.14444, -0.627625), (-72.14444, -0.830941), (-71.65813, -0.830941), (-71.65813, -0.627625), (-71.65813, -0.355702), (-71.65813, -0.152387), (-72.14444, -0.152387), (-72.14444, -0.355702), (-72.14444, -0.355702), (-72.14444, -0.627625), (-71.65813, -0.627625), (-71.65813, -0.355702), (-72.06229, -0.152612), (-71.48354, -0.152612), (-71.48354, 0.220243), (-72.06229, 0.220243), (-71.78647, 0.498903), (-71.8224, 0.491756), (-71.85287, 0.471401), (-71.87322, 0.440939), (-71.88036, 0.405006), (-71.88036, -0.788334), (-71.30162, -0.788334), (-71.30162, 0.498903), (-72.14444, -0.830941), (-72.14444, -1.20572), (-71.65813, -1.20572), (-71.65813, -0.830941), (-72.14444, 0.222392), (-72.14444, -0.152387), (-71.65813, -0.152387), (-71.65813, 0.222392), (-72.03271, 0.498904), (-72.03271, -0.694438), (-72.02556, -0.730371), (-72.0052, -0.760833), (-71.97475, -0.781187), (-71.93881, -0.788335), (-71.453964, -0.788335), (-71.453964, 0.498904), (-72.06229, -1.203571), (-71.48354, -1.203571), (-71.48354, -0.830716), (-72.06229, -0.830716), (-71.7656, -0.269799), (-71.75288, -0.472957), (-70.55136, -0.47589), (-70.55136, -0.270529), (-72.06229, -0.627216), (-71.48354, -0.627216), (-71.48354, -0.356112), (-72.06229, -0.356112), (-72.06229, -0.356112), (-71.48354, -0.356112), (-71.48354, -0.152612), (-72.06229, -0.152612), (-70.55136, 0.208414), (-71.75288, 0.205481), (-71.7656, 0.002324), (-70.55136, 0.003054), (-70.55136, 0.003054), (-71.7656, 0.002324), (-71.7656, -0.269799), (-70.55136, -0.270529), (-72.06229, -0.830716), (-71.48354, -0.830716), (-71.48354, -0.627216), (-72.06229, -0.627216), (-71.708275, -0.827001), (-70.55136, -0.827001), (-70.55136, -0.47589), (-71.75288, -0.472957), (-70.55136, 0.208414), (-70.55136, 0.559525), (-71.708275, 0.559525), (-71.75288, 0.205481), (-70.994865, 0.226513), (-72.198715, 0.226513), (-72.198715, -0.149626), (-70.94741, -0.150373), (-71.16405, -0.47279), (-71.71923, -0.47279), (-71.71923, -0.82072), (-71.16405, -0.82072), (-71.16405, -0.26929), (-71.71923, -0.26929), (-71.71923, -0.47279), (-71.16405, -0.47279), (-71.16405, 0.001815), (-71.71923, 0.001815), (-71.71923, -0.26929), (-71.16405, -0.26929), (-71.16405, 0.205314), (-71.71923, 0.205314), (-71.71923, 0.001815), (-71.16405, 0.001815), (-71.16405, 0.553244), (-71.71923, 0.553244), (-71.71923, 0.205314), (-71.16405, 0.205314), (-72.198715, -1.209842), (-70.994865, -1.209842), (-70.94741, -0.832955), (-72.198715, -0.833703), (-72.198715, -0.354918), (-72.198715, -0.62841), (-70.934586, -0.62841), (-70.934586, -0.354918), (-70.934586, -0.354918), (-70.94741, -0.150373), (-72.198715, -0.149626), (-72.198715, -0.354918), (-72.198715, -0.62841), (-72.198715, -0.833703), (-70.94741, -0.832955), (-70.934586, -0.62841), (-70.934586, -0.62841), (-70.94741, -0.832955), (-70.91116, -0.832934), (-70.89834, -0.62841), (-70.89834, -0.62841), (-70.91116, -0.832934), (-70.88043, -0.832916), (-70.86761, -0.62841), (-70.86761, -0.62841), (-70.88043, -0.832916), (-70.85989, -0.832904), (-70.84708, -0.62841), (-72.18048, -0.627625), (-72.18048, -0.830945), (-72.14444, -0.830941), (-72.14444, -0.627625), (-70.94741, -0.150373), (-70.934586, -0.354918), (-70.89834, -0.354918), (-70.91116, -0.150395), (-70.91116, -0.150395), (-70.89834, -0.354918), (-70.86761, -0.354918), (-70.88043, -0.150412), (-70.88043, -0.150412), (-70.86761, -0.354918), (-70.84708, -0.354918), (-70.85989, -0.150425), (-72.18048, -0.152383), (-72.18048, -0.355702), (-72.14444, -0.355702), (-72.14444, -0.152387), (-70.934586, -0.354918), (-70.934586, -0.62841), (-70.89834, -0.62841), (-70.89834, -0.354918), (-70.89834, -0.354918), (-70.89834, -0.62841), (-70.86761, -0.62841), (-70.86761, -0.354918), (-70.86761, -0.354918), (-70.86761, -0.62841), (-70.84708, -0.62841), (-70.84708, -0.354918), (-72.18048, -0.355702), (-72.18048, -0.627625), (-72.14444, -0.627625), (-72.14444, -0.355702), (-70.94741, -0.832955), (-70.994865, -1.209842), (-70.95862, -1.209842), (-70.91116, -0.832934), (-70.91116, -0.832934), (-70.95862, -1.209842), (-70.92789, -1.209842), (-70.88043, -0.832916), (-70.88043, -0.832916), (-70.92789, -1.209842), (-70.90736, -1.209842), (-70.85989, -0.832904), (-72.18048, -0.830945), (-72.18048, -1.20572), (-72.14444, -1.20572), (-72.14444, -0.830941), (-70.994865, 0.226513), (-70.94741, -0.150373), (-70.91116, -0.150395), (-70.95862, 0.226513), (-70.95862, 0.226513), (-70.91116, -0.150395), (-70.88043, -0.150412), (-70.92789, 0.226513), (-70.92789, 0.226513), (-70.88043, -0.150412), (-70.85989, -0.150425), (-70.90736, 0.226513), (-72.18048, 0.222392), (-72.18048, -0.152383), (-72.14444, -0.152387), (-72.14444, 0.222392), (-71.75288, 0.205481), (-71.708275, 0.559525), (-71.74453, 0.559525), (-71.78914, 0.205393), (-71.78914, 0.205393), (-71.74453, 0.559525), (-71.775276, 0.559525), (-71.81988, 0.205317), (-71.81988, 0.205317), (-71.775276, 0.559525), (-71.795815, 0.559525), (-71.840416, 0.205267), (-71.03395, -0.161031), (-71.03395, 0.191072), (-71.06999, 0.191072), (-71.06999, -0.161049), (-71.708275, -0.827001), (-71.75288, -0.472957), (-71.78914, -0.472868), (-71.74453, -0.827001), (-71.74453, -0.827001), (-71.78914, -0.472868), (-71.81988, -0.472793), (-71.775276, -0.827001), (-71.775276, -0.827001), (-71.81988, -0.472793), (-71.840416, -0.472743), (-71.795815, -0.827001), (-71.03395, -1.18702), (-71.03395, -0.834917), (-71.06999, -0.834899), (-71.06999, -1.18702), (-71.7656, -0.269799), (-71.7656, 0.002324), (-71.801865, 0.002301), (-71.801865, -0.269777), (-71.801865, -0.269777), (-71.801865, 0.002301), (-71.8326, 0.002283), (-71.8326, -0.269759), (-71.8326, -0.269759), (-71.8326, 0.002283), (-71.85314, 0.00227), (-71.85314, -0.269747), (-71.03395, -0.633155), (-71.03395, -0.362793), (-71.06999, -0.362797), (-71.06999, -0.633151), (-71.7656, 0.002324), (-71.75288, 0.205481), (-71.78914, 0.205393), (-71.801865, 0.002301), (-71.801865, 0.002301), (-71.78914, 0.205393), (-71.81988, 0.205317), (-71.8326, 0.002283), (-71.8326, 0.002283), (-71.81988, 0.205317), (-71.840416, 0.205267), (-71.85314, 0.00227), (-71.03395, -0.362793), (-71.03395, -0.161031), (-71.06999, -0.161049), (-71.06999, -0.362797), (-71.75288, -0.472957), (-71.7656, -0.269799), (-71.801865, -0.269777), (-71.78914, -0.472868), (-71.78914, -0.472868), (-71.801865, -0.269777), (-71.8326, -0.269759), (-71.81988, -0.472793), (-71.81988, -0.472793), (-71.8326, -0.269759), (-71.85314, -0.269747), (-71.840416, -0.472743), (-71.03395, -0.834917), (-71.03395, -0.633155), (-71.06999, -0.633151), (-71.06999, -0.834899), (5.646933, -121.22408), (7.358486, -121.22408), (7.358486, -119.51253), (5.646933, -119.51253), (-5.253075, -117.71076), (-3.54152, -117.71076), (-3.54152, -115.99921), (-5.253075, -115.99921)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_FridgeDrawer1D1_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0]
                rel material:binding = </root/_materials/M_FridgeDrawer1D1_0>
            }

            def GeomSubset "M_FridgeDrawer1D1_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
                rel material:binding = </root/_materials/M_FridgeDrawer1D1_1>
            }

            def GeomSubset "M_FridgeDrawer1D1_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [62]
                rel material:binding = </root/_materials/M_FridgeDrawer1D1_2>
            }

            def GeomSubset "M_FridgeDrawer1D1_3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [63]
                rel material:binding = </root/_materials/M_FridgeDrawer1D1_3>
            }

            def GeomSubset "M_FridgeDrawer1D1_4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138]
                rel material:binding = </root/_materials/M_FridgeDrawer1D1_4>
            }

            def GeomSubset "M_FridgeDrawer1D1_5" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [139]
                rel material:binding = </root/_materials/M_FridgeDrawer1D1_5>
            }

            def GeomSubset "M_FridgeDrawer1D1_6" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [140]
                rel material:binding = </root/_materials/M_FridgeDrawer1D1_6>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer1D1_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1D1_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.36764705, 0.36764705, 0.36764705)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1D1_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Copper_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D1_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer1D1_1"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1D1_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1D1_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1D1_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D1_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D1_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer1D1_2"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1D1_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1D1_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1D1_2/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D1_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D1_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer1D1_3"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1D1_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.8014706, 0.8014706, 0.8014706)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1D1_3/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D1_3/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer1D1_4"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1D1_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.39705884, 0.39705884, 0.39705884)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }

        def Material "M_FridgeDrawer1D1_5"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1D1_5/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1D1_5/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1D1_5/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Decal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D1_5/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Decal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D1_5/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer1D1_6"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1D1_6/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1D1_6/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1D1_6/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Readout_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D1_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D1_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

