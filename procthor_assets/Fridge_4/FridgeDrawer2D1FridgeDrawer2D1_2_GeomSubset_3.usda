#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "FridgeDrawer2D1FridgeDrawer2D1_2_GeomSubset_3"
    {
        def Mesh "FridgeDrawer2D1FridgeDrawer2D1_2_GeomSubset_3"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4]
            int[] faceVertexIndices = [12, 13, 15, 14]
            rel material:binding = </root/_materials/M_FridgeDrawer2D1_3>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.043033, 0.037125, -0.96071), (-0.043023, 0.037125, -0.96071), (-0.043033, 0.037135, -0.96071), (-0.043023, 0.037135, -0.96071), (-0.043033, 0.037125, -0.96071), (-0.043023, 0.037125, -0.96071), (-0.043033, 0.037135, -0.96071), (-0.043023, 0.037135, -0.96071), (-0.043033, 0.037125, -0.96071), (-0.043023, 0.037125, -0.96071), (-0.043033, 0.037135, -0.96071), (-0.043023, 0.037135, -0.96071), (-0.043033, 0.037125, -0.96071), (-0.043023, 0.037125, -0.96071), (-0.043033, 0.037135, -0.96071), (-0.043023, 0.037135, -0.96071), (-0.043033, 0.037125, -0.96071), (-0.043023, 0.037125, -0.96071), (-0.043033, 0.037135, -0.96071), (-0.043023, 0.037135, -0.96071), (-0.043033, 0.037125, -0.96071), (-0.043023, 0.037125, -0.96071), (-0.043033, 0.037135, -0.96071), (-0.043023, 0.037135, -0.96071), (-0.043033, 0.037125, -0.96071), (-0.043023, 0.037125, -0.96071), (-0.043033, 0.037135, -0.96071), (-0.043023, 0.037135, -0.96071), (-0.057208, 0.233956, -0.526671), (0.518251, 0.233956, -0.526671), (-0.057208, -0.286304, -0.526671), (0.518251, -0.286304, -0.526671), (0.175736, 0.233956, -0.526671), (0.093488, 0.233956, -0.526671), (0.367556, 0.233956, -0.526671), (0.285307, 0.233956, -0.526671), (0.175736, -0.310454, -0.526671), (0.09381, -0.305317, -0.526671), (0.367233, -0.305317, -0.526671), (0.285307, -0.310454, -0.526671), (0.093488, 0.233956, -0.769551), (-0.057208, 0.233956, -0.769551), (0.367556, 0.233956, -0.769551), (0.518251, 0.233956, -0.769551), (0.285307, 0.233956, -0.769551), (0.175736, 0.233956, -0.769551), (-0.047134, 0.223882, -0.526671), (0.508178, 0.223882, -0.526671), (-0.047134, -0.277419, -0.526671), (0.508178, -0.277419, -0.526671), (0.175736, 0.223882, -0.526671), (0.093488, 0.223882, -0.526671), (0.367556, 0.223882, -0.526671), (0.285307, 0.223882, -0.526671), (0.176051, -0.30038, -0.526671), (0.094755, -0.295283, -0.526671), (0.366288, -0.295283, -0.526671), (0.284992, -0.30038, -0.526671), (-0.047134, 0.223882, -0.760029), (0.508178, 0.223882, -0.760029), (0.175736, 0.223882, -0.760029), (0.093488, 0.223882, -0.760029), (0.367556, 0.223882, -0.760029), (0.285307, 0.223882, -0.760029), (-0.057208, 0.233956, -0.535641), (0.093488, 0.233956, -0.535641), (-0.057208, -0.286304, -0.535641), (0.09381, -0.305317, -0.535641), (0.518251, -0.286304, -0.535641), (0.367233, -0.305317, -0.535641), (0.518251, 0.233956, -0.535641), (0.367556, 0.233956, -0.535641), (0.285307, -0.310454, -0.535641), (0.175736, -0.310454, -0.535641), (0.175736, 0.233956, -0.535641), (0.285307, 0.233956, -0.535641), (0.284992, -0.30038, -0.535641), (0.366288, -0.295283, -0.535641), (0.508178, -0.277419, -0.535641), (0.508178, 0.223882, -0.535641), (0.367556, 0.223882, -0.535641), (0.285307, 0.223882, -0.535641), (0.175736, 0.223882, -0.535641), (0.093488, 0.223882, -0.535641), (-0.047134, 0.223882, -0.535641), (-0.047134, -0.277419, -0.535641), (0.094755, -0.295283, -0.535641), (0.176051, -0.30038, -0.535641), (-0.058588, 0.235336, -0.528507), (0.519632, 0.235336, -0.528507), (-0.058588, -0.287521, -0.528507), (0.519632, -0.287521, -0.528507), (0.175736, 0.235336, -0.528507), (0.093488, 0.235336, -0.528507), (0.367556, 0.235336, -0.528507), (0.285307, 0.235336, -0.528507), (0.175692, -0.311834, -0.528507), (0.09368, -0.306692, -0.528507), (0.367363, -0.306692, -0.528507), (0.285351, -0.311834, -0.528507), (-0.058588, 0.235336, -0.533806), (0.093488, 0.235336, -0.533806), (-0.058588, -0.287521, -0.533806), (0.09368, -0.306692, -0.533806), (0.519632, -0.287521, -0.533806), (0.367363, -0.306692, -0.533806), (0.519632, 0.235336, -0.533806), (0.367556, 0.235336, -0.533806), (0.285351, -0.311834, -0.533806), (0.175692, -0.311834, -0.533806), (0.175736, 0.235336, -0.533806), (0.285307, 0.235336, -0.533806), (0.09381, -0.305317, -0.731601), (0.093787, -0.267367, -0.769551), (-0.057208, -0.286304, -0.731601), (-0.057208, -0.248354, -0.769551), (0.367256, -0.267367, -0.769551), (0.367233, -0.305317, -0.731601), (0.518251, -0.248354, -0.769551), (0.518251, -0.286304, -0.731601), (0.175736, -0.272504, -0.769551), (0.175736, -0.310454, -0.731601), (0.285307, -0.310454, -0.731601), (0.285307, -0.272504, -0.769551), (-0.047134, -0.239469, -0.760029), (-0.047134, -0.277419, -0.722079), (0.508178, -0.277419, -0.722079), (0.508178, -0.239469, -0.760029), (0.176028, -0.26243, -0.760029), (0.176051, -0.30038, -0.722079), (0.094755, -0.295283, -0.722079), (0.094662, -0.257333, -0.760029), (0.366381, -0.257333, -0.760029), (0.366288, -0.295283, -0.722079), (0.285015, -0.26243, -0.760029), (0.284992, -0.30038, -0.722079), (0.367247, -0.28189, -0.766663), (0.285307, -0.287027, -0.766663), (0.36724, -0.294202, -0.758436), (0.285307, -0.299339, -0.758436), (0.367235, -0.302429, -0.746124), (0.285307, -0.307566, -0.746124), (0.175736, -0.287027, -0.766663), (0.093796, -0.28189, -0.766663), (0.175736, -0.299339, -0.758436), (0.093803, -0.294202, -0.758436), (0.175736, -0.307566, -0.746124), (0.093808, -0.302429, -0.746124), (0.518251, -0.262877, -0.766663), (0.518251, -0.275189, -0.758436), (0.518251, -0.283416, -0.746124), (-0.057208, -0.262877, -0.766663), (-0.057208, -0.275189, -0.758436), (-0.057208, -0.283416, -0.746124), (-0.047134, -0.253992, -0.757141), (0.094698, -0.271856, -0.757141), (-0.047134, -0.266304, -0.748914), (0.094728, -0.284168, -0.748914), (-0.047134, -0.27453, -0.736602), (0.094748, -0.292394, -0.736602), (0.366345, -0.271856, -0.757141), (0.508178, -0.253992, -0.757141), (0.366315, -0.284168, -0.748914), (0.508178, -0.266304, -0.748914), (0.366295, -0.292394, -0.736602), (0.508178, -0.27453, -0.736602), (0.176037, -0.276953, -0.757141), (0.285006, -0.276953, -0.757141), (0.176044, -0.289265, -0.748914), (0.284999, -0.289265, -0.748914), (0.176049, -0.297492, -0.736602), (0.284994, -0.297492, -0.736602)]
            bool[] primvars:sharp_face = [0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-88.71441, -110.74826), (-88.71441, -113.93459), (-85.54558, -113.93459), (-85.54558, -110.74826)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer2D1_3"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2D1_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.8014706, 0.8014706, 0.8014706)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2D1_3/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2D1_3/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

