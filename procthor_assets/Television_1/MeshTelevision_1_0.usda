#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "Television_1"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "Television_1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.528617, -0.059257, -0.203823), (0.528617, -0.014405, 0.372387)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 55, 54, 56, 57, 59, 58, 60, 61, 61, 60, 62, 63, 63, 62, 64, 65, 51, 53, 60, 58, 60, 53, 52, 62, 62, 52, 50, 64, 55, 68, 69, 54, 59, 70, 71, 58, 70, 72, 73, 71, 72, 65, 64, 73, 51, 58, 71, 66, 71, 73, 67, 66, 73, 64, 50, 67, 63, 65, 55, 57, 65, 72, 68, 55, 4, 5, 7, 6, 21, 20, 22, 23, 20, 24, 25, 22, 26, 27, 28, 29, 27, 21, 23, 28, 84, 49, 76, 57, 74, 90, 44, 31, 30, 24, 20, 32, 31, 20, 21, 33, 32, 21, 27, 34, 33, 27, 26, 35, 34, 26, 29, 36, 35, 29, 28, 37, 36, 28, 23, 38, 37, 23, 22, 39, 38, 22, 25, 30, 39, 25, 24, 41, 40, 30, 31, 42, 41, 31, 32, 43, 42, 32, 33, 44, 43, 33, 34, 45, 44, 34, 35, 46, 45, 35, 36, 47, 46, 36, 37, 48, 47, 37, 38, 49, 48, 38, 39, 40, 49, 39, 30, 45, 75, 74, 44, 75, 68, 72, 74, 76, 77, 63, 57, 40, 77, 76, 49, 83, 77, 40, 91, 68, 75, 45, 78, 79, 82, 83, 79, 78, 80, 81, 81, 80, 87, 88, 84, 57, 56, 85, 85, 56, 54, 86, 86, 54, 69, 92, 88, 87, 90, 89, 68, 91, 92, 69, 80, 78, 41, 42, 85, 86, 47, 48, 78, 83, 40, 41, 84, 85, 48, 49, 90, 87, 43, 44, 92, 91, 45, 46, 87, 80, 42, 43, 86, 92, 46, 47, 79, 81, 59, 61, 82, 79, 61, 63, 81, 88, 70, 59, 88, 89, 72, 70, 83, 82, 63, 77, 74, 72, 89, 90, 50, 52, 95, 93, 52, 53, 96, 95, 53, 51, 94, 96, 51, 66, 97, 94, 66, 67, 98, 97, 67, 50, 93, 98, 93, 95, 101, 99, 95, 96, 102, 101, 96, 94, 100, 102, 94, 97, 103, 100, 97, 98, 104, 103, 98, 93, 99, 104, 8, 9, 11, 10, 100, 99, 101, 102, 100, 103, 104, 99, 12, 13, 15, 14, 16, 17, 19, 18]
            rel material:binding = </root/_materials/M_Television_1_0>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 2.2948203e-8), (0, 1, 2.2948203e-8), (0, 1, 2.258064e-8), (0, 1, 2.4050818e-8), (0, 1, 2.4050818e-8), (0, 1, 2.258064e-8), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 2.2948203e-8), (0, 1, 0), (0, 1, 0), (0, 1, 2.2948203e-8), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0.000002122849, 0, -1), (0, 0, -1), (0, 0, -1), (-1.5994459e-7, 0, -1), (0, 0, -1), (-0.0000032626128, 0, -1), (0.0000014681583, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.0000033055817, 0, -1), (-0.0000015096374, 0, -1), (0.0000012511639, 0, -1), (-1.5994459e-7, 0, -1), (-0.00000326814, 0, -1), (-0.0000027436274, 0, -1), (-0.0000011062729, 0, -1), (-0.6370978, 0.77078295, 2.5331974e-7), (-0.5919477, 0.80597645, 1.5529126e-9), (-0.6649479, 0.7468897, 0), (-0.6649479, 0.7468897, 0), (-0.000002674483, 0.8242963, 0.5661588), (2.6635826e-7, 0.78263175, 0.62248504), (0, 0.74180025, 0.67062086), (0, 0.74180025, 0.6706209), (-0.0000012312084, 0.78263175, 0.62248504), (-0.000002674483, 0.8242963, 0.5661588), (0, 0.74180025, 0.6706209), (0, 0.74180025, 0.67062086), (0.5919477, 0.80597645, 0), (0.6370978, 0.77078295, -3.883615e-7), (0.6649479, 0.7468897, 0), (0.6649479, 0.7468897, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0.63707834, -0.77079904, -2.8871e-8), (0.5919714, -0.805959, 0.000008124547), (0.6650232, -0.7468227, 0), (0.6650232, -0.7468227, 0), (0.0000026722928, -0.82429373, 0.56616247), (-3.017485e-7, -0.7826177, 0.6225026), (0, -0.7417326, 0.67069566), (0, -0.7417326, 0.6706957), (0.0000013001263, -0.7826177, 0.62250257), (0.0000026722928, -0.82429373, 0.56616247), (0, -0.7417326, 0.6706957), (0, -0.7417326, 0.67069566), (-0.5919714, -0.805959, -3.8876115e-7), (-0.6370784, -0.77079904, -6.6543e-7), (-0.6650232, -0.7468227, 0), (-0.6650232, -0.7468227, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.41508147, 0.90978426, -5.243346e-7), (-0.2655163, 0.9641063, 4.5905406e-7), (-0.5919477, 0.80597645, 1.5529126e-9), (-0.6370978, 0.77078295, 2.5331974e-7), (-1.5757283e-7, 0.9797567, 0.20019148), (1.4202669e-8, 0.9693368, 0.24573597), (2.6635826e-7, 0.78263175, 0.62248504), (-0.000002674483, 0.8242963, 0.5661588), (7.764902e-8, 0.9693368, 0.24573597), (-1.5757283e-7, 0.9797567, 0.20019148), (-0.000002674483, 0.8242963, 0.5661588), (-0.0000012312084, 0.78263175, 0.62248504), (0.2655163, 0.9641063, 4.7009462e-7), (0.4150815, 0.9097842, 3.2875687e-7), (0.6370978, 0.77078295, -3.883615e-7), (0.5919477, 0.80597645, 0), (0.0000020341724, 0, -1), (-0.0000011062729, 0, -1), (0, 0, -1), (0, 0, -1), (0.41509223, -0.9097793, -0.0000014430843), (0.2654972, -0.9641117, -8.471161e-7), (0.5919714, -0.805959, 0.000008124547), (0.63707834, -0.77079904, -2.8871e-8), (1.5757283e-7, -0.9797567, 0.20019157), (-1.4202669e-8, -0.9693368, 0.24573609), (-3.017485e-7, -0.7826177, 0.6225026), (0.0000026722928, -0.82429373, 0.56616247), (-7.764902e-8, -0.9693368, 0.24573609), (1.5757283e-7, -0.9797567, 0.20019157), (0.0000026722928, -0.82429373, 0.56616247), (0.0000013001263, -0.7826177, 0.62250257), (-0.2654972, -0.9641117, -8.5730335e-7), (-0.41509223, -0.9097793, 0.0000010821968), (-0.6370784, -0.77079904, -6.6543e-7), (-0.5919714, -0.805959, -3.8876115e-7), (-3.7013663e-7, 0, -1), (-0.0000015096374, 0, -1), (0, 0, -1), (0, 0, -1), (0.0000020341724, 0, -1), (-0.0000015833597, 0, -1), (-0.00000326814, 0, -1), (-0.0000011062729, 0, -1), (-0.0000015833597, 0, -1), (0.0000014681583, 0, -1), (-0.0000032626128, 0, -1), (-0.00000326814, 0, -1), (0.0000012511639, 0, -1), (0.0000011575847, 0, -1), (0.000002122849, 0, -1), (-1.5994459e-7, 0, -1), (-3.7013663e-7, 0, -1), (0.0000011575847, 0, -1), (0.0000012511639, 0, -1), (-0.0000015096374, 0, -1), (0, 0, -1), (0.0000011575847, 0, -1), (-3.7013663e-7, 0, -1), (0.0000065750487, 0, -1), (0.0000014681583, 0, -1), (-0.0000015833597, 0, -1), (0.0000020341724, 0, -1), (0.0024022236, 0.99999714, 1.1967495e-7), (0.6651921, 0.7466723, 6.9314325e-7), (0.6651921, 0.7466723, 6.9314325e-7), (0.38681847, 0.9221558, 8.3847567e-7), (0, 0.97434974, -0.22503938), (5.3597614e-7, 0.99725145, -0.07409182), (0.000005107786, 0.9945336, -0.10441715), (0, 0.9743497, -0.22503935), (0, 0.9743497, -0.22503935), (0.000005107786, 0.9945336, -0.10441715), (-0.000001525972, 0.99725145, -0.07409181), (0, 0.97434974, -0.22503933), (0.3868121, -0.9221585, -5.0495e-7), (0.6651173, -0.746739, 0), (0.6651173, -0.746739, 0), (0.0023917817, -0.9999971, -3.2875687e-7), (0.0000015264377, -0.99725145, -0.07409172), (0, -0.97434974, -0.22503921), (0, -0.9743497, -0.22503918), (-8.4710797e-7, -0.9945336, -0.10441705), (-8.4710797e-7, -0.9945336, -0.10441705), (0, -0.9743497, -0.22503918), (0, -0.97434974, -0.22503923), (-5.3597614e-7, -0.99725145, -0.07409173), (-0.6651921, 0.7466723, 6.9314325e-7), (-0.0024022236, 0.99999714, -0.0000015161932), (-0.38681847, 0.9221558, -0.00003392005), (-0.6651921, 0.7466723, 6.9314325e-7), (-0.6651173, -0.746739, 0), (-0.3868121, -0.9221585, -4.7255358e-7), (-0.002391776, -0.9999971, -0.0000016475096), (-0.6651173, -0.746739, 0), (0.000005107786, 0.9945336, -0.10441715), (5.3597614e-7, 0.99725145, -0.07409182), (1.4202669e-8, 0.9693368, 0.24573597), (-1.5757283e-7, 0.9797567, 0.20019148), (0.0000015264377, -0.99725145, -0.07409172), (-8.4710797e-7, -0.9945336, -0.10441705), (1.5757283e-7, -0.9797567, 0.20019157), (-7.764902e-8, -0.9693368, 0.24573609), (0.0024022236, 0.99999714, 1.1967495e-7), (0.38681847, 0.9221558, 8.3847567e-7), (-0.2655163, 0.9641063, 4.5905406e-7), (-0.41508147, 0.90978426, -5.243346e-7), (0.3868121, -0.9221585, -5.0495e-7), (0.0023917817, -0.9999971, -3.2875687e-7), (-0.41509223, -0.9097793, 0.0000010821968), (-0.2654972, -0.9641117, -8.5730335e-7), (-0.38681847, 0.9221558, -0.00003392005), (-0.0024022236, 0.99999714, -0.0000015161932), (0.4150815, 0.9097842, 3.2875687e-7), (0.2655163, 0.9641063, 4.7009462e-7), (-0.002391776, -0.9999971, -0.0000016475096), (-0.3868121, -0.9221585, -4.7255358e-7), (0.2654972, -0.9641117, -8.471161e-7), (0.41509223, -0.9097793, -0.0000014430843), (-0.000001525972, 0.99725145, -0.07409181), (0.000005107786, 0.9945336, -0.10441715), (-1.5757283e-7, 0.9797567, 0.20019148), (7.764902e-8, 0.9693368, 0.24573597), (-8.4710797e-7, -0.9945336, -0.10441705), (-5.3597614e-7, -0.99725145, -0.07409173), (-1.4202669e-8, -0.9693368, 0.24573609), (1.5757283e-7, -0.9797567, 0.20019157), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0.000002122849, 0, -1), (0.0000011575847, 0, -1), (-0.00000326814, 0, -1), (-0.0000032626128, 0, -1), (-0.0000037450868, 0, -1), (-0.0000027436274, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.000743, -0.017617, 0.09051), (-0.000743, -0.017617, 0.09051), (0.000743, -0.01613, 0.09051), (-0.000743, -0.01613, 0.09051), (0.000743, -0.017617, 0.09051), (-0.000743, -0.017617, 0.09051), (0.000743, -0.01613, 0.09051), (-0.000743, -0.01613, 0.09051), (0.000743, -0.017617, 0.09051), (-0.000743, -0.017617, 0.09051), (0.000743, -0.01613, 0.09051), (-0.000743, -0.01613, 0.09051), (0.000743, -0.017617, 0.09051), (-0.000743, -0.017617, 0.09051), (0.000743, -0.01613, 0.09051), (-0.000743, -0.01613, 0.09051), (0.000743, -0.017617, 0.09051), (-0.000743, -0.017617, 0.09051), (0.000743, -0.01613, 0.09051), (-0.000743, -0.01613, 0.09051), (0.528617, -0.048407, -0.203823), (0, -0.048407, -0.203823), (0.528617, -0.025255, -0.203823), (0, -0.025255, -0.203823), (0.528617, -0.048407, 0.372387), (0.528617, -0.025255, 0.372387), (-0.528617, -0.048407, 0.372387), (-0.528617, -0.048407, -0.203823), (-0.528617, -0.025255, -0.203823), (-0.528617, -0.025255, 0.372387), (0.523093, -0.053325, 0.372387), (0.523093, -0.053325, -0.198383), (0, -0.053325, -0.198383), (-0.523093, -0.053325, -0.198383), (-0.523093, -0.053325, 0.372387), (-0.523093, -0.020336, 0.372387), (-0.523093, -0.020336, -0.198383), (0, -0.020336, -0.198383), (0.523093, -0.020336, -0.198383), (0.523093, -0.020336, 0.372387), (0.513724, -0.058492, 0.372387), (0.513724, -0.058492, -0.184503), (0, -0.058492, -0.184503), (-0.513724, -0.058492, -0.184503), (-0.513724, -0.058492, 0.372387), (-0.513724, -0.01517, 0.372387), (-0.513724, -0.015169, -0.184503), (0, -0.015169, -0.184503), (0.513724, -0.015169, -0.184503), (0.513724, -0.01517, 0.372387), (0, -0.04621, 0.362147), (0, -0.04621, -0.138992), (0.485345, -0.04621, 0.362147), (0.485345, -0.04621, -0.138992), (0, -0.016874, -0.159495), (0, -0.016874, 0.372387), (0.504356, -0.016874, -0.159495), (0.504356, -0.016874, 0.372387), (0, -0.053996, -0.138992), (0, -0.053996, -0.159495), (0.485345, -0.053996, -0.138992), (0.504356, -0.053996, -0.159495), (0.485345, -0.053996, 0.362147), (0.504356, -0.053996, 0.372387), (0, -0.053996, 0.362147), (0, -0.053996, 0.372387), (-0.485345, -0.04621, -0.138992), (-0.485345, -0.04621, 0.362147), (-0.504356, -0.016874, 0.372387), (-0.504356, -0.016874, -0.159495), (-0.504356, -0.053996, -0.159495), (-0.485345, -0.053996, -0.138992), (-0.504356, -0.053996, 0.372387), (-0.485345, -0.053996, 0.362147), (-0.508794, -0.053996, 0.372387), (-0.508794, -0.021662, 0.372387), (0.508567, -0.021662, 0.372387), (0.508567, -0.053996, 0.372387), (0.507128, -0.059256, -0.170185), (0.504356, -0.056787, -0.159495), (0, -0.059256, -0.170185), (0, -0.056787, -0.159495), (0.504356, -0.056787, 0.372387), (0.507128, -0.059257, 0.372387), (0.507128, -0.014405, 0.372387), (0.507128, -0.014405, -0.170185), (0, -0.014405, -0.170185), (-0.507128, -0.059256, -0.170185), (-0.504356, -0.056787, -0.159495), (-0.504356, -0.056787, 0.372387), (-0.507128, -0.059257, 0.372387), (-0.507128, -0.014405, 0.372387), (-0.507128, -0.014405, -0.170185), (0, -0.04621, 0.338067), (0, -0.04621, -0.114911), (0.459001, -0.04621, 0.338067), (0.459001, -0.04621, -0.114911), (-0.459001, -0.04621, -0.114911), (-0.459001, -0.04621, 0.338067), (0, -0.035121, 0.338067), (0, -0.035121, -0.114911), (0.459001, -0.035121, 0.338067), (0.459001, -0.035121, -0.114911), (-0.459001, -0.035121, -0.114911), (-0.459001, -0.035121, 0.338067)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-43.607567, -18.175053), (-43.606327, -18.175053), (-43.606327, -18.173815), (-43.607567, -18.173815), (-44.244965, -0.320143), (-44.244965, 0.71869), (-45.23004, 0.718696), (-45.230034, -0.320142), (-44.24497, 0.130692), (-44.24497, 0.170748), (-45.19291, 0.170748), (-45.23004, 0.130697), (-45.23004, 0.130697), (-45.19291, 0.170748), (-45.19291, 1.14953), (-45.23004, 1.169535), (-45.23004, 1.169535), (-45.19291, 1.14953), (-44.244965, 1.14953), (-44.24497, 1.169535), (-44.229134, 0.927875), (-45.17732, 0.927874), (-45.177315, 0.912665), (-44.229134, 0.912663), (-43.544098, 0.940463), (-43.5441, 0.955668), (-44.52319, 0.955665), (-44.523197, 0.940463), (-45.177296, 0.941766), (-45.177288, 0.926557), (-44.22914, 0.926561), (-44.229134, 0.941763), (-44.244965, -0.320143), (-43.25989, -0.320142), (-43.25989, 0.718691), (-44.244965, 0.71869), (-44.24497, 0.130692), (-43.259895, 0.130697), (-43.297028, 0.170743), (-44.24497, 0.170748), (-43.259895, 0.130697), (-43.259895, 1.169531), (-43.297028, 1.149533), (-43.297028, 0.170743), (-43.259895, 1.169531), (-44.24497, 1.169535), (-44.244965, 1.14953), (-43.297028, 1.149533), (-44.229134, 0.927875), (-44.229134, 0.912663), (-43.280956, 0.91267), (-43.28096, 0.927874), (-43.54421, 0.969566), (-44.523087, 0.969565), (-44.523087, 0.954352), (-43.54421, 0.954353), (-43.280987, 0.941766), (-44.229134, 0.941763), (-44.22914, 0.926561), (-43.28098, 0.926557), (-45.23007, 0.858514), (-44.244965, 0.858513), (-44.244965, 0.931019), (-45.23007, 0.93102), (-44.244965, 0.858513), (-43.259865, 0.858514), (-43.259865, 0.93102), (-44.244965, 0.931019), (-30.687363, -17.640726), (-30.687363, -17.641537), (-30.68655, -17.641537), (-30.68655, -17.640726), (-31.519989, 0.290038), (-31.519989, 1.395224), (-31.568394, 1.395224), (-31.568394, 0.290038), (-30.541922, -0.444499), (-30.541922, 0.762159), (-30.590406, 0.762159), (-30.590406, -0.444499), (-30.614534, 1.267022), (-30.614534, 0.060226), (-30.566044, 0.060226), (-30.566044, 1.267022), (-31.519989, -0.815149), (-31.519989, 0.290038), (-31.568394, 0.290038), (-31.568394, -0.815149), (-30.636143, 0.591257), (-30.649029, 0.589762), (-30.63895, 0.577073), (-30.630724, 0.586431), (-30.688856, 0.513824), (-30.692122, 0.503525), (-30.679205, 0.505023), (-30.53162, -0.433106), (-30.53162, 0.762159), (-30.541922, 0.762159), (-30.541922, -0.444499), (-31.509697, 0.290038), (-31.509697, 1.383675), (-31.519989, 1.395224), (-31.519989, 0.290038), (-31.509697, -0.803599), (-31.509697, 0.290038), (-31.519989, 0.290038), (-31.519989, -0.815149), (-30.624838, 1.267022), (-30.624838, 0.07162), (-30.614534, 0.060226), (-30.614534, 1.267022), (-30.660868, 0.579722), (-30.660868, 0.515137), (-30.650053, 0.524767), (-30.650053, 0.570092), (-30.55575, 0.07162), (-30.55575, 1.267022), (-30.566044, 1.267022), (-30.566044, 0.060226), (-31.57867, 0.290038), (-31.57867, -0.803599), (-31.568394, -0.815149), (-31.568394, 0.290038), (-31.57867, 1.383675), (-31.57867, 0.290038), (-31.568394, 0.290038), (-31.568394, 1.395224), (-30.600708, 0.762159), (-30.600708, -0.433106), (-30.590406, -0.444499), (-30.590406, 0.762159), (-30.667341, 0.515193), (-30.667341, 0.579665), (-30.678137, 0.570052), (-30.678137, 0.524806), (-31.914991, 1.314507), (-30.801174, 1.314507), (-30.801174, 1.333244), (-31.942753, 1.333244), (-31.914991, 0.287024), (-31.914991, 1.314507), (-31.942753, 1.333244), (-31.942753, 0.287024), (-31.914991, -0.740459), (-31.914991, 0.287024), (-31.942753, 0.287024), (-31.942753, -0.759196), (-30.801174, -0.740459), (-31.914991, -0.740459), (-31.942753, -0.759196), (-30.801174, -0.759196), (-30.679205, 0.589836), (-30.679205, 0.505023), (-30.660868, 0.515137), (-30.660868, 0.579722), (-30.507559, -0.747453), (-31.628958, -0.747453), (-31.628958, -0.766317), (-30.479609, -0.766317), (-30.507559, 0.287024), (-30.507559, -0.747453), (-30.479609, -0.766317), (-30.479609, 0.287024), (-30.507559, 1.321501), (-30.507559, 0.287024), (-30.479609, 0.287024), (-30.479609, 1.340365), (-31.628958, 1.321501), (-30.507559, 1.321501), (-30.479609, 1.340365), (-31.628958, 1.340365), (-30.649029, 0.505097), (-30.649029, 0.589762), (-30.667341, 0.579665), (-30.667341, 0.515193), (-30.679205, 0.589836), (-30.688856, 0.577125), (-30.688856, 0.513824), (-30.679205, 0.505023), (-30.688856, 0.577125), (-30.69755, 0.586499), (-30.69755, 0.513824), (-30.688856, 0.513824), (-30.63895, 0.577073), (-30.63895, 0.513882), (-30.630724, 0.513882), (-30.630724, 0.586431), (-30.649029, 0.505097), (-30.63895, 0.513882), (-30.63895, 0.577073), (-30.649029, 0.589762), (-30.636143, 0.503602), (-30.63895, 0.513882), (-30.649029, 0.505097), (-30.692122, 0.591333), (-30.69755, 0.586499), (-30.688856, 0.577125), (-30.679205, 0.589836), (-30.612581, 0.093331), (-30.607214, 0.116574), (-30.607214, 1.273051), (-30.612581, 1.273051), (-31.864964, 1.29577), (-31.886362, 1.301314), (-31.886362, 0.287024), (-31.864964, 0.287024), (-31.864964, 0.287024), (-31.886362, 0.287024), (-31.886362, -0.727266), (-31.864964, -0.721722), (-31.628958, 1.308219), (-31.628958, 1.302637), (-30.557919, 1.302637), (-30.536388, 1.308219), (-30.536388, 1.308219), (-30.557919, 1.302637), (-30.557919, 0.287024), (-30.536388, 0.287024), (-30.536388, 0.287024), (-30.557919, 0.287024), (-30.557919, -0.728589), (-30.536388, -0.734171), (-30.615515, 0.11722), (-30.610153, 0.094003), (-30.610153, 1.272379), (-30.615515, 1.272379), (-31.628958, -0.728589), (-31.628958, -0.734171), (-30.536388, -0.734171), (-30.557919, -0.728589), (-31.886362, 0.287024), (-31.886362, 1.301314), (-31.914991, 1.314507), (-31.914991, 0.287024), (-30.536388, 1.308219), (-30.536388, 0.287024), (-30.507559, 0.287024), (-30.507559, 1.321501), (-31.886362, 1.301314), (-30.801174, 1.301314), (-30.801174, 1.314507), (-31.914991, 1.314507), (-31.628958, 1.308219), (-30.536388, 1.308219), (-30.507559, 1.321501), (-31.628958, 1.321501), (-30.801174, -0.727266), (-31.886362, -0.727266), (-31.914991, -0.740459), (-30.801174, -0.740459), (-30.536388, -0.734171), (-31.628958, -0.734171), (-31.628958, -0.747453), (-30.507559, -0.747453), (-31.886362, -0.727266), (-31.886362, 0.287024), (-31.914991, 0.287024), (-31.914991, -0.740459), (-30.536388, 0.287024), (-30.536388, -0.734171), (-30.507559, -0.747453), (-30.507559, 0.287024), (-30.894255, 1.261376), (-30.894255, 0.276803), (-30.888807, 0.276803), (-30.888807, 1.261376), (-30.607214, 1.273051), (-30.607214, 0.116574), (-30.601149, 0.116574), (-30.601149, 1.273051), (-30.894255, 0.276803), (-30.894255, -0.70777), (-30.888807, -0.70777), (-30.888807, 0.276803), (-30.615515, 0.11722), (-30.615515, 1.272379), (-30.621582, 1.272379), (-30.621582, 0.11722), (-30.636143, 0.503602), (-30.630724, 0.508427), (-30.630724, 0.513882), (-30.63895, 0.513882), (-30.688856, 0.513824), (-30.69755, 0.513824), (-30.69755, 0.508359), (-30.692122, 0.503525), (-30.25842, 0.266431), (-30.25842, 1.214335), (-30.305456, 1.162885), (-30.305456, 0.266431), (-30.25842, 1.214335), (-31.237177, 1.214335), (-31.190142, 1.162885), (-30.305456, 1.162885), (-31.237177, 1.214335), (-31.237177, 0.266431), (-31.190142, 0.266431), (-31.190142, 1.162885), (-31.237177, 0.266431), (-31.237177, -0.681472), (-31.190142, -0.630022), (-31.190142, 0.266431), (-31.237177, -0.681472), (-30.25842, -0.681472), (-30.305456, -0.630022), (-31.190142, -0.630022), (-30.25842, -0.681472), (-30.25842, 0.266431), (-30.305456, 0.266431), (-30.305456, -0.630022), (-30.589993, 0.25206), (-30.589993, 1.148448), (-30.611652, 1.148448), (-30.611652, 0.25206), (-30.6373, 1.101332), (-30.6373, 0.216173), (-30.61563, 0.216173), (-30.61563, 1.101332), (-30.59801, 1.148446), (-30.59801, 0.25206), (-30.57635, 0.25206), (-30.57635, 1.148446), (-30.59801, 0.25206), (-30.59801, -0.644326), (-30.57635, -0.644326), (-30.57635, 0.25206), (-30.627821, 0.216173), (-30.627821, 1.101332), (-30.649485, 1.101332), (-30.649485, 0.216173), (-30.589993, -0.644328), (-30.589993, 0.25206), (-30.611652, 0.25206), (-30.611652, -0.644328), (-19.015854, -17.660728), (-19.01513, -17.660728), (-19.01513, -17.660002), (-19.015854, -17.660002), (0.5, 0.141952), (0.5, 0.635391), (0, 0.635391), (0, 0.141952), (0.5, 0.141952), (1, 0.141953), (1, 0.635391), (0.5, 0.635391), (-7.614684, -17.660728), (-7.613959, -17.660728), (-7.613959, -17.660002), (-7.614684, -17.660002), (-7.621544, -17.660728), (-7.620819, -17.660728), (-7.620819, -17.660002), (-7.621544, -17.660002)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_Television_1_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]
                rel material:binding = </root/_materials/M_Television_1_0>
            }

            def GeomSubset "M_Television_1_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83]
                rel material:binding = </root/_materials/M_Television_1_1>
            }

            def GeomSubset "M_Television_1_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [84, 85, 86]
                rel material:binding = </root/_materials/M_Television_1_2>
            }

            def GeomSubset "M_Television_1_3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [87]
                rel material:binding = </root/_materials/M_Television_1_3>
            }

            def GeomSubset "M_Television_1_4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [88]
                rel material:binding = </root/_materials/M_Television_1_4>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_Television_1_0"
        {
            token outputs:surface.connect = </root/_materials/M_Television_1_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.19852942, 0.19852942, 0.19852942)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_Television_1_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Television_1_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_Television_1_1"
        {
            token outputs:surface.connect = </root/_materials/M_Television_1_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_Television_1_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_Television_1_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Television_1_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Television_1_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_Television_1_2"
        {
            token outputs:surface.connect = </root/_materials/M_Television_1_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0, 0, 0)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }

        def Material "M_Television_1_3"
        {
            token outputs:surface.connect = </root/_materials/M_Television_1_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.5661765, 0.5661765, 0.5661765)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }

        def Material "M_Television_1_4"
        {
            token outputs:surface.connect = </root/_materials/M_Television_1_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.8, 0.8, 0.8)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 1
                float inputs:specular = 0
                token outputs:surface
            }
        }
    }
}

