#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshTelevision_1_0_GeomSubset_4"
    {
        def Mesh "MeshTelevision_1_0_GeomSubset_4"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4]
            int[] faceVertexIndices = [16, 17, 19, 18]
            rel material:binding = </root/_materials/M_Television_1_4>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.000743, -0.017617, 0.09051), (-0.000743, -0.017617, 0.09051), (0.000743, -0.01613, 0.09051), (-0.000743, -0.01613, 0.09051), (0.000743, -0.017617, 0.09051), (-0.000743, -0.017617, 0.09051), (0.000743, -0.01613, 0.09051), (-0.000743, -0.01613, 0.09051), (0.000743, -0.017617, 0.09051), (-0.000743, -0.017617, 0.09051), (0.000743, -0.01613, 0.09051), (-0.000743, -0.01613, 0.09051), (0.000743, -0.017617, 0.09051), (-0.000743, -0.017617, 0.09051), (0.000743, -0.01613, 0.09051), (-0.000743, -0.01613, 0.09051), (0.000743, -0.017617, 0.09051), (-0.000743, -0.017617, 0.09051), (0.000743, -0.01613, 0.09051), (-0.000743, -0.01613, 0.09051), (0.528617, -0.048407, -0.203823), (0, -0.048407, -0.203823), (0.528617, -0.025255, -0.203823), (0, -0.025255, -0.203823), (0.528617, -0.048407, 0.372387), (0.528617, -0.025255, 0.372387), (-0.528617, -0.048407, 0.372387), (-0.528617, -0.048407, -0.203823), (-0.528617, -0.025255, -0.203823), (-0.528617, -0.025255, 0.372387), (0.523093, -0.053325, 0.372387), (0.523093, -0.053325, -0.198383), (0, -0.053325, -0.198383), (-0.523093, -0.053325, -0.198383), (-0.523093, -0.053325, 0.372387), (-0.523093, -0.020336, 0.372387), (-0.523093, -0.020336, -0.198383), (0, -0.020336, -0.198383), (0.523093, -0.020336, -0.198383), (0.523093, -0.020336, 0.372387), (0.513724, -0.058492, 0.372387), (0.513724, -0.058492, -0.184503), (0, -0.058492, -0.184503), (-0.513724, -0.058492, -0.184503), (-0.513724, -0.058492, 0.372387), (-0.513724, -0.01517, 0.372387), (-0.513724, -0.015169, -0.184503), (0, -0.015169, -0.184503), (0.513724, -0.015169, -0.184503), (0.513724, -0.01517, 0.372387), (0, -0.04621, 0.362147), (0, -0.04621, -0.138992), (0.485345, -0.04621, 0.362147), (0.485345, -0.04621, -0.138992), (0, -0.016874, -0.159495), (0, -0.016874, 0.372387), (0.504356, -0.016874, -0.159495), (0.504356, -0.016874, 0.372387), (0, -0.053996, -0.138992), (0, -0.053996, -0.159495), (0.485345, -0.053996, -0.138992), (0.504356, -0.053996, -0.159495), (0.485345, -0.053996, 0.362147), (0.504356, -0.053996, 0.372387), (0, -0.053996, 0.362147), (0, -0.053996, 0.372387), (-0.485345, -0.04621, -0.138992), (-0.485345, -0.04621, 0.362147), (-0.504356, -0.016874, 0.372387), (-0.504356, -0.016874, -0.159495), (-0.504356, -0.053996, -0.159495), (-0.485345, -0.053996, -0.138992), (-0.504356, -0.053996, 0.372387), (-0.485345, -0.053996, 0.362147), (-0.508794, -0.053996, 0.372387), (-0.508794, -0.021662, 0.372387), (0.508567, -0.021662, 0.372387), (0.508567, -0.053996, 0.372387), (0.507128, -0.059256, -0.170185), (0.504356, -0.056787, -0.159495), (0, -0.059256, -0.170185), (0, -0.056787, -0.159495), (0.504356, -0.056787, 0.372387), (0.507128, -0.059257, 0.372387), (0.507128, -0.014405, 0.372387), (0.507128, -0.014405, -0.170185), (0, -0.014405, -0.170185), (-0.507128, -0.059256, -0.170185), (-0.504356, -0.056787, -0.159495), (-0.504356, -0.056787, 0.372387), (-0.507128, -0.059257, 0.372387), (-0.507128, -0.014405, 0.372387), (-0.507128, -0.014405, -0.170185), (0, -0.04621, 0.338067), (0, -0.04621, -0.114911), (0.459001, -0.04621, 0.338067), (0.459001, -0.04621, -0.114911), (-0.459001, -0.04621, -0.114911), (-0.459001, -0.04621, 0.338067), (0, -0.035121, 0.338067), (0, -0.035121, -0.114911), (0.459001, -0.035121, 0.338067), (0.459001, -0.035121, -0.114911), (-0.459001, -0.035121, -0.114911), (-0.459001, -0.035121, 0.338067)]
            bool[] primvars:sharp_face = [0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-7.621544, -17.660728), (-7.620819, -17.660728), (-7.620819, -17.660002), (-7.621544, -17.660002)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_Television_1_4"
        {
            token outputs:surface.connect = </root/_materials/M_Television_1_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.8, 0.8, 0.8)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 1
                float inputs:specular = 0
                token outputs:surface
            }
        }
    }
}

