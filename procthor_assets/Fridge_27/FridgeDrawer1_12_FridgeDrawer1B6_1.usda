#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.0"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "FridgeDrawer1B6"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "FridgeDrawer1B6" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.341988, -0.202922, -0.895309), (0.011348, 0.238296, -0.57811)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 8, 4, 3, 8, 4, 3, 4, 4, 4, 4, 3, 4, 8, 3, 4, 8]
            int[] faceVertexIndices = [0, 1, 3, 2, 68, 61, 81, 78, 56, 37, 41, 55, 61, 34, 35, 60, 60, 35, 36, 62, 55, 41, 40, 67, 69, 38, 39, 68, 67, 40, 38, 69, 62, 36, 37, 56, 68, 39, 34, 61, 28, 34, 39, 29, 56, 75, 74, 62, 69, 77, 76, 67, 69, 68, 78, 77, 55, 67, 76, 79, 60, 62, 74, 80, 60, 80, 81, 61, 75, 56, 55, 79, 83, 82, 28, 29, 93, 92, 91, 90, 35, 34, 28, 82, 86, 87, 36, 35, 86, 40, 41, 84, 88, 38, 89, 83, 29, 39, 89, 38, 40, 88, 37, 36, 87, 85, 41, 37, 90, 91, 37, 85, 93, 90, 85, 84, 92, 93, 84, 41, 91, 92, 4, 5, 7, 6, 8, 9, 11, 10, 12, 13, 15, 14, 16, 17, 19, 18, 20, 21, 23, 22, 24, 25, 27, 26, 65, 66, 70, 71, 64, 65, 71, 72, 63, 64, 72, 73, 54, 63, 73, 57, 59, 70, 66, 58, 52, 53, 59, 58, 33, 32, 31, 30, 31, 32, 42, 45, 43, 44, 46, 47, 47, 46, 48, 49, 49, 48, 50, 51, 51, 50, 45, 42, 74, 75, 57, 73, 72, 71, 70, 59, 76, 77, 52, 58, 77, 78, 52, 76, 58, 66, 65, 64, 63, 54, 79, 74, 59, 53, 80, 80, 53, 81, 54, 57, 75, 79, 78, 81, 53, 52, 83, 33, 30, 82, 85, 44, 43, 84, 86, 82, 30, 87, 86, 30, 31, 88, 84, 43, 47, 49, 51, 42, 32, 83, 89, 33, 88, 32, 33, 89, 87, 31, 45, 50, 48, 46, 44, 85]
            rel material:binding = </root/_materials/M_FridgeDrawer1B6_0>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -0.86558455, 0.50076276), (0, -0.86558455, 0.50076276), (-5.965994e-7, -0.8424392, 0.5387916), (1.6926788e-7, -0.8424392, 0.53879154), (-0.037996825, -0.066913314, 0.9970351), (-0.015003821, -0.0236241, 0.99960834), (0.015004374, -0.023624081, 0.99960834), (0.03799797, -0.06691337, 0.997035), (0.0000030608549, 0, 1), (0.00000316957, 0, 1), (0.0000030643155, 0, 1), (0.0000030162223, 0, 1), (0.0000030162223, 0, 1), (0.0000030643155, 0, 1), (-0.06360286, 0.0018994445, 0.99797344), (-0.06358253, 0.0018984212, 0.99797475), (0.03799797, -0.06691337, 0.997035), (0.015004374, -0.023624081, 0.99960834), (0.063603915, 0.0018994401, 0.9979734), (0.06358357, 0.0018985152, 0.99797475), (-0.0000015081118, 0, 1), (-0.0000015321583, 0, 1), (-0.0000015847858, 0, 1), (-0.0000015304277, 0, 1), (0.06358357, 0.0018985152, 0.99797475), (0.063603915, 0.0018994401, 0.9979734), (-0.0000015321583, 0, 1), (-0.0000015081118, 0, 1), (-0.06358253, 0.0018984212, 0.99797475), (-0.06360286, 0.0018994445, 0.99797344), (-0.015003821, -0.0236241, 0.99960834), (-0.037996825, -0.066913314, 0.9970351), (-0.0000015304277, 0, 1), (-0.0000015847858, 0, 1), (0.00000316957, 0, 1), (0.0000030608549, 0, 1), (0.000049353464, 0.91060114, -0.41328645), (0, 1, 0), (0, 1, 0), (0, 0.91060114, -0.41328648), (0.9995283, -0.009270547, -0.029277569), (0.99956137, -0.0095942365, -0.028020052), (0.99956566, -0.009488711, -0.027899504), (0.99953246, -0.009076236, -0.029197171), (-0.9949789, 0.061587606, -0.07889241), (-0.9961727, 0.07330795, -0.047600795), (-0.99956566, -0.00948886, -0.027899362), (-0.9995325, -0.009076124, -0.029197479), (-0.9949789, 0.061587606, -0.07889241), (-0.99435645, 0.06631051, -0.08281368), (-0.99529445, 0.07640189, -0.059595432), (-0.9961727, 0.07330795, -0.047600795), (-0.9995284, -0.009270481, -0.029277265), (-0.9995325, -0.009076124, -0.029197479), (-0.99956566, -0.00948886, -0.027899362), (-0.9995494, -0.009475736, -0.028484264), (0.99497896, 0.06158951, -0.07889058), (0.99953246, -0.009076236, -0.029197171), (0.99956566, -0.009488711, -0.027899504), (0.9961726, 0.07330815, -0.047601778), (0.99497896, 0.06158951, -0.07889058), (0.9961726, 0.07330815, -0.047601778), (0.9952946, 0.07640157, -0.059595175), (0.99435645, 0.066311084, -0.08281365), (0, 0.98116887, 0.19315176), (0, 0.981168, 0.19315644), (0, 0.981168, 0.19315644), (0, 0.9811688, 0.19315177), (0, 0.828772, -0.5595865), (0, 0.828772, -0.5595865), (0.000049353464, 0.91060114, -0.41328645), (0, 0.91060114, -0.41328648), (0, -0.9847549, -0.17394787), (0, -0.9847549, -0.17394787), (0, -0.9847549, -0.17394787), (0, -0.9847549, -0.17394787), (-1, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-1, 0, 0), (-1, 6.565195e-7, 0), (-1, 6.5651955e-7, 0), (-1, 0, 0), (-1, 0, 0), (-1, 6.565195e-7, 0), (1, 0, 0), (1, 0, 0), (1, -7.459564e-10, 0), (1, -6.0617555e-10, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, -6.0617555e-10, 0), (-1, 0, 0), (-1, 0, 0), (-1, 6.5651955e-7, 0), (-1, 0, 0), (0.015004374, -0.023624081, 0.99960834), (-0.015003821, -0.0236241, 0.99960834), (0, 0, 0.99999994), (0, 0, 0.99999994), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, -7.459564e-10, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-4.4092303e-9, 0.34210318, 0.93966246), (-0.0000017377897, 0.009498197, 0.999955), (0.0007643565, 0.009502076, 0.99995464), (0, 0.34210318, 0.93966246), (9.604927e-11, 0.69565415, 0.7183768), (-4.4092303e-9, 0.34210318, 0.93966246), (0, 0.34210318, 0.93966246), (0, 0.69565415, 0.7183768), (0, 0.9381108, 0.3463354), (9.604927e-11, 0.69565415, 0.7183768), (0, 0.69565415, 0.7183768), (8.117058e-8, 0.9381108, 0.3463354), (2.7283386e-7, 0.9815552, 0.19117899), (0, 0.9381108, 0.3463354), (8.117058e-8, 0.9381108, 0.3463354), (-1.451117e-7, 0.9815552, 0.19117898), (0.000003391644, 0.003237511, 0.9999947), (0.0007643565, 0.009502076, 0.99995464), (-0.0000017377897, 0.009498197, 0.999955), (0, 0.0032375008, 0.9999948), (-0.0000011627562, -0.8307548, 0.55663836), (0, -0.8307548, 0.5566384), (0.000003391644, 0.003237511, 0.9999947), (0, 0.0032375008, 0.9999948), (1.9369889e-8, 0.8152262, -0.5791427), (0, 0.008458257, -0.99996436), (0.00011058851, 0.008458272, -0.99996436), (0, 0.8152262, -0.5791427), (0.00011058851, 0.008458272, -0.99996436), (0, 0.008458257, -0.99996436), (7.885344e-9, -0.0048271343, -0.9999883), (0, -0.0048271343, -0.9999883), (0, -0.984283, -0.17659864), (0.000003861083, -0.984283, -0.17659864), (0, -0.9194125, -0.39329445), (7.276834e-11, -0.9194125, -0.39329445), (7.276834e-11, -0.9194125, -0.39329445), (0, -0.9194125, -0.39329445), (0, -0.69558007, -0.7184486), (-5.725615e-7, -0.69558007, -0.7184486), (-5.725615e-7, -0.69558007, -0.7184486), (0, -0.69558007, -0.7184486), (0, -0.3722404, -0.92813635), (-3.179383e-7, -0.3722404, -0.92813635), (-3.179383e-7, -0.3722404, -0.92813635), (0, -0.3722404, -0.92813635), (0, -0.0048271343, -0.9999883), (7.885344e-9, -0.0048271343, -0.9999883), (0.99956566, -0.009488711, -0.027899504), (0.99956137, -0.0095942365, -0.028020052), (0.99957526, -0.0097388495, -0.027467728), (0.99957526, -0.0097388495, -0.027467728), (0.99957526, -0.0097388495, -0.027467728), (0.99957526, -0.0097388495, -0.027467728), (0.99957526, -0.0097388495, -0.027467728), (0.99957585, -0.009588265, -0.027499551), (-0.99956566, -0.00948886, -0.027899362), (-0.9961727, 0.07330795, -0.047600795), (-0.9976446, 0.06149003, -0.030402299), (-0.9995759, -0.00958852, -0.027499462), (-0.9961727, 0.07330795, -0.047600795), (-0.99529445, 0.07640189, -0.059595432), (-0.9976446, 0.06149003, -0.030402299), (-0.99956566, -0.00948886, -0.027899362), (-0.9995759, -0.00958852, -0.027499462), (-0.99957526, -0.009738824, -0.027467748), (-0.99957526, -0.009738824, -0.027467748), (-0.99957526, -0.009738824, -0.027467748), (-0.99957526, -0.009738824, -0.027467748), (-0.99957526, -0.009738824, -0.027467748), (-0.9995494, -0.009475736, -0.028484264), (0.99956566, -0.009488711, -0.027899504), (0.99957585, -0.009588265, -0.027499551), (0.9976445, 0.061490584, -0.030402318), (0.9961726, 0.07330815, -0.047601778), (0.9961726, 0.07330815, -0.047601778), (0.9976445, 0.061490584, -0.030402318), (0.9952946, 0.07640157, -0.059595175), (2.7283386e-7, 0.9815552, 0.19117899), (-1.451117e-7, 0.9815552, 0.19117898), (0, 0.98116887, 0.19315176), (0, 0.9811688, 0.19315177), (1.6926788e-7, -0.8424392, 0.53879154), (-5.965994e-7, -0.8424392, 0.5387916), (0, -0.8307548, 0.5566384), (-0.0000011627562, -0.8307548, 0.55663836), (0, 0.828772, -0.5595865), (1.9369889e-8, 0.8152262, -0.5791427), (0, 0.8152262, -0.5791427), (0, 0.828772, -0.5595865), (0, -0.9847553, -0.17394553), (0.000003861083, -0.984283, -0.17659864), (0, -0.984283, -0.17659864), (0, -0.9847553, -0.17394553), (-1, 6.565195e-7, 0), (-1, 0, 0), (-1, 0.0000020369102, 0), (-1, 6.5651955e-7, 0), (-1, 6.565195e-7, 0), (-1, 0.0000020369102, 0), (-1, 0.0000010747674, 0), (1, -6.0617555e-10, 0), (1, -7.459564e-10, 0), (1, -2.4247022e-9, 0), (1, -2.4247022e-9, 0), (1, -2.4247022e-9, 0), (1, -2.4247022e-9, 0), (1, -2.4247022e-9, 0), (1, -1.4323513e-9, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, -6.0617555e-10, 0), (1, -1.4323513e-9, 0), (1, 0, 0), (1, 0, 0), (-1, 6.5651955e-7, 0), (-1, 0.0000010747674, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.011338, 0.067322, -0.895309), (0.011348, 0.067322, -0.895309), (0.011338, 0.067332, -0.895309), (0.011348, 0.067332, -0.895309), (0.011338, 0.067322, -0.895309), (0.011348, 0.067322, -0.895309), (0.011338, 0.067332, -0.895309), (0.011348, 0.067332, -0.895309), (0.011338, 0.067322, -0.895309), (0.011348, 0.067322, -0.895309), (0.011338, 0.067332, -0.895309), (0.011348, 0.067332, -0.895309), (0.011338, 0.067322, -0.895309), (0.011348, 0.067322, -0.895309), (0.011338, 0.067332, -0.895309), (0.011348, 0.067332, -0.895309), (0.011338, 0.067322, -0.895309), (0.011348, 0.067322, -0.895309), (0.011338, 0.067332, -0.895309), (0.011348, 0.067332, -0.895309), (0.011338, 0.067322, -0.895309), (0.011348, 0.067322, -0.895309), (0.011338, 0.067332, -0.895309), (0.011348, 0.067332, -0.895309), (0.011338, 0.067322, -0.895309), (0.011348, 0.067322, -0.895309), (0.011338, 0.067332, -0.895309), (0.011348, 0.067332, -0.895309), (-0.341988, 0.238296, -0.586502), (-0.027805, 0.238296, -0.586502), (-0.341988, 0.167129, -0.691902), (-0.341988, 0.162064, -0.694555), (-0.027805, 0.162064, -0.694555), (-0.027805, 0.167129, -0.691902), (-0.341988, 0.238296, -0.579273), (-0.341988, 0.167129, -0.579273), (-0.341988, 0.162064, -0.579273), (-0.341988, -0.188718, -0.579273), (-0.027805, 0.167129, -0.579273), (-0.027805, 0.238296, -0.579273), (-0.027805, 0.162064, -0.579273), (-0.027805, -0.188718, -0.579273), (-0.027805, -0.151014, -0.694555), (-0.027805, -0.171932, -0.674303), (-0.341988, -0.171932, -0.674303), (-0.341988, -0.151014, -0.694555), (-0.341988, -0.17034, -0.682053), (-0.027805, -0.17034, -0.682053), (-0.341988, -0.165805, -0.688623), (-0.027805, -0.165805, -0.688623), (-0.341988, -0.159019, -0.693013), (-0.027805, -0.159019, -0.693013), (-0.035437, 0.162382, -0.686908), (-0.334356, 0.162382, -0.686908), (-0.032559, -0.163074, -0.672717), (-0.035321, -0.181698, -0.57811), (-0.334472, -0.181698, -0.57811), (-0.337234, -0.163074, -0.672717), (-0.035437, 0.160344, -0.687976), (-0.334356, 0.160344, -0.687976), (-0.331358, 0.167129, -0.579273), (-0.334472, 0.231175, -0.579273), (-0.331358, 0.162064, -0.579273), (-0.032633, -0.16205, -0.678729), (-0.032633, -0.15946, -0.682481), (-0.032633, -0.155585, -0.684988), (-0.032577, -0.150132, -0.685884), (-0.038435, 0.162064, -0.579273), (-0.035321, 0.231175, -0.579273), (-0.038435, 0.167129, -0.579273), (-0.337216, -0.150132, -0.685884), (-0.33716, -0.155585, -0.684988), (-0.33716, -0.15946, -0.682481), (-0.33716, -0.16205, -0.678729), (-0.331967, 0.161715, -0.601329), (-0.33515, -0.177127, -0.601329), (-0.037826, 0.161715, -0.601329), (-0.03782, 0.166156, -0.601329), (-0.033178, 0.218415, -0.601329), (-0.034643, -0.177127, -0.601329), (-0.331973, 0.166156, -0.601329), (-0.336615, 0.218415, -0.601329), (-0.341988, 0.228285, -0.601329), (-0.027805, 0.228285, -0.601329), (-0.027805, -0.184822, -0.601329), (-0.341988, -0.184822, -0.601329), (-0.341988, 0.167129, -0.601329), (-0.341988, 0.162064, -0.601329), (-0.027805, 0.162064, -0.601329), (-0.027805, 0.167129, -0.601329), (-0.341988, -0.202922, -0.579273), (-0.027805, -0.202922, -0.579273), (-0.027805, -0.199026, -0.601329), (-0.341988, -0.199026, -0.601329)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-170.80801, -111.20583), (-170.80801, -111.20592), (-170.8079, -111.20592), (-170.8079, -111.20583), (-170.1056, -0.631703), (-170.1056, 0.488635), (-170.15338, 0.496661), (-170.15338, -0.639729), (-171.11623, -0.481328), (-171.13618, -0.499951), (-170.30269, -0.499951), (-170.32265, -0.481328), (-171.11623, 0.613959), (-171.13618, 0.632852), (-171.13618, 0.444055), (-171.10797, 0.444055), (-171.10797, 0.444055), (-171.13618, 0.444055), (-171.13618, 0.43062), (-171.10797, 0.43062), (-170.32265, -0.481328), (-170.30269, -0.499951), (-170.30269, 0.43062), (-170.33089, 0.43062), (-170.33089, 0.444055), (-170.30269, 0.444055), (-170.30269, 0.632852), (-170.32265, 0.613959), (-170.33089, 0.43062), (-170.30269, 0.43062), (-170.30269, 0.444055), (-170.33089, 0.444055), (-171.10797, 0.43062), (-171.13618, 0.43062), (-171.13618, -0.499951), (-171.11623, -0.481328), (-170.32265, 0.613959), (-170.30269, 0.632852), (-171.13618, 0.632852), (-171.11623, 0.613959), (-170.25175, 0.381841), (-170.27222, 0.381841), (-170.27222, -0.506323), (-170.25175, -0.506323), (-170.30145, 0.570341), (-170.36302, 0.558224), (-170.36302, -0.340011), (-170.30453, -0.340937), (-170.25845, 0.400662), (-170.3169, 0.398083), (-170.3169, 0.386308), (-170.25845, 0.387234), (-170.25845, 0.400662), (-170.25845, 0.570488), (-170.3169, 0.536653), (-170.3169, 0.398083), (-170.25536, -0.524289), (-170.25845, 0.387234), (-170.3169, 0.386308), (-170.3169, -0.512169), (-170.30453, -0.354362), (-170.30453, -0.340937), (-170.36302, -0.340011), (-170.36302, -0.351784), (-170.30453, -0.354362), (-170.36302, -0.351784), (-170.36302, -0.490316), (-170.30453, -0.524142), (-170.13493, 0.874725), (-170.19702, 0.872911), (-170.19702, 0.072692), (-170.13493, 0.070878), (-170.20985, -0.506323), (-170.20985, 0.381841), (-170.25175, 0.381841), (-170.25175, -0.506323), (-170.22607, 0.357207), (-170.22607, -0.481689), (-170.16719, -0.481689), (-170.16719, 0.357207), (-170.3928, 0.443508), (-170.3928, 0.632045), (-170.41199, 0.632045), (-170.45126, 0.605523), (-170.45126, 0.443508), (-170.45126, 0.430092), (-170.3928, 0.430092), (-170.3928, 0.443508), (-170.45126, 0.443508), (-170.34842, -0.334867), (-170.34842, 0.594413), (-170.40686, 0.584092), (-170.40686, -0.334867), (-170.34842, -0.348284), (-170.40686, -0.348284), (-170.40686, -0.510297), (-170.36757, -0.536819), (-170.34842, -0.536819), (-170.40686, -0.348284), (-170.34842, -0.348284), (-170.34842, -0.334867), (-170.40686, -0.334867), (-170.3928, -0.499196), (-170.3928, 0.430092), (-170.45126, 0.430092), (-170.45126, -0.488875), (-170.30269, -0.499951), (-171.13618, -0.499951), (-171.13618, -0.537631), (-170.30269, -0.537631), (-170.3928, -0.499196), (-170.45126, -0.488875), (-170.45126, -0.526502), (-170.3928, -0.536824), (-170.17784, 0.353932), (-170.17784, -0.478414), (-170.14021, -0.478414), (-170.14021, 0.353932), (-170.40686, 0.584092), (-170.34842, 0.594413), (-170.34842, 0.632041), (-170.40686, 0.621719), (-141.89792, -110.22088), (-141.89792, -111.91363), (-140.32143, -111.91363), (-140.32143, -110.22088), (-116.72093, -111.562), (-116.72093, -111.56212), (-116.720825, -111.56212), (-116.720825, -111.562), (-87.230804, -112.34138), (-87.230804, -112.34148), (-87.23071, -112.34148), (-87.23071, -112.34138), (-68.99693, -112.291985), (-68.99693, -112.292), (-68.996925, -112.292), (-68.996925, -112.291985), (-69.002625, -112.291985), (-69.002625, -112.292), (-69.00261, -112.292), (-69.00261, -112.291985), (-69.008316, -112.291985), (-69.008316, -112.292), (-69.0083, -112.292), (-69.0083, -112.291985), (-70.857185, -0.401379), (-70.85703, -0.38704), (-71.65807, -0.38704), (-71.65793, -0.401379), (-70.857185, -0.411569), (-70.857185, -0.401379), (-71.65793, -0.401379), (-71.65793, -0.411569), (-70.857185, -0.418378), (-70.857185, -0.411569), (-71.65793, -0.411569), (-71.65793, -0.418378), (-71.533394, -0.34688), (-71.51838, -0.346696), (-71.51838, 0.413827), (-71.533394, 0.414011), (-71.65056, 0.429346), (-71.65807, -0.38704), (-70.85703, -0.38704), (-70.864555, 0.429346), (-70.864555, 0.434704), (-71.65056, 0.434704), (-71.65056, 0.429346), (-70.864555, 0.429346), (-71.12209, -0.782138), (-71.12209, -0.76879), (-71.950134, -0.76879), (-71.950134, -0.782138), (-71.950134, -0.76879), (-71.12209, -0.76879), (-71.12209, 0.056338), (-71.950134, 0.056338), (-71.58998, -0.352155), (-71.58998, 0.431397), (-71.609314, 0.431397), (-71.609314, -0.352155), (-71.12209, 0.107272), (-71.950134, 0.107272), (-71.950134, 0.095321), (-71.12209, 0.095321), (-71.12209, 0.095321), (-71.950134, 0.095321), (-71.950134, 0.077435), (-71.12209, 0.077435), (-71.12209, 0.077435), (-71.950134, 0.077435), (-71.950134, 0.056338), (-71.12209, 0.056338), (-71.166176, -0.769152), (-71.166176, 0.069517), (-71.34287, 0.034734), (-71.35775, 0.032199), (-71.367035, 0.02579), (-71.37324, 0.016198), (-71.37546, 0.002701), (-71.38064, -0.765758), (-71.04894, -0.070821), (-71.04894, -0.059829), (-71.260765, -0.069171), (-71.263405, -0.074215), (-71.04894, -0.059829), (-71.04894, 0.069517), (-71.260765, -0.069171), (-71.04894, -0.070821), (-71.263405, -0.074215), (-71.258224, -0.842672), (-71.256004, -0.856169), (-71.2498, -0.865761), (-71.24052, -0.87217), (-71.22564, -0.874705), (-71.04894, -0.909489), (-71.166176, -0.769152), (-71.38064, -0.765758), (-71.378, -0.770802), (-71.166176, -0.780144), (-71.166176, -0.780144), (-71.378, -0.770802), (-71.166176, -0.90949), (-71.533394, -0.34688), (-71.533394, 0.414011), (-71.71168, 0.408806), (-71.71168, -0.341676), (-70.85862, 0.582041), (-71.656494, 0.582041), (-71.65056, 0.434704), (-70.864555, 0.434704), (-71.12209, -0.943318), (-71.12209, -0.782138), (-71.950134, -0.782138), (-71.950134, -0.943318), (-71.40799, 0.431397), (-71.58998, 0.431397), (-71.58998, -0.352155), (-71.40799, -0.352155), (-71.81058, -0.049056), (-71.81058, 0.102259), (-72.034676, -0.049056), (-71.81058, -0.061586), (-71.81058, -0.049056), (-72.034676, -0.049056), (-72.04124, -0.061586), (-71.68594, -0.756012), (-71.68594, 0.102257), (-71.8665, 0.070364), (-71.88567, 0.066425), (-71.90193, 0.055205), (-71.912796, 0.038414), (-71.9166, 0.018608), (-71.9166, -0.756012), (-71.68594, -0.919857), (-71.68594, -0.768543), (-71.91004, -0.768543), (-71.68594, -0.756012), (-71.9166, -0.756012), (-71.91004, -0.768543), (-71.68594, -0.768543), (-71.81058, -0.061586), (-72.04124, -0.061586), (-72.04124, -0.83621), (-72.03742, -0.856016), (-72.02656, -0.872807), (-72.0103, -0.884026), (-71.99113, -0.887966), (-71.81058, -0.919859)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_FridgeDrawer1B6_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]
                rel material:binding = </root/_materials/M_FridgeDrawer1B6_0>
            }

            def GeomSubset "M_FridgeDrawer1B6_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [30]
                rel material:binding = </root/_materials/M_FridgeDrawer1B6_1>
            }

            def GeomSubset "M_FridgeDrawer1B6_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [31]
                rel material:binding = </root/_materials/M_FridgeDrawer1B6_2>
            }

            def GeomSubset "M_FridgeDrawer1B6_3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [32]
                rel material:binding = </root/_materials/M_FridgeDrawer1B6_3>
            }

            def GeomSubset "M_FridgeDrawer1B6_4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]
                rel material:binding = </root/_materials/M_FridgeDrawer1B6_4>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer1B6_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1B6_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.03676468, 0.03676468, 0.03676468)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1B6_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge.tga@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1B6_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer1B6_1"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1B6_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1B6_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1B6_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1B6_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1B6_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer1B6_2"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1B6_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1B6_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1B6_2/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1B6_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1B6_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer1B6_3"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1B6_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.5735294, 0.5735294, 0.5735294)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1B6_3/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1B6_3/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer1B6_4"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1B6_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.39705884, 0.39705884, 0.39705884)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }
    }
}

