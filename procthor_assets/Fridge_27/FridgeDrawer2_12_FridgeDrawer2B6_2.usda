#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "FridgeDrawer2B6"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "FridgeDrawer2B6" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.329976, -0.200147, -0.895309), (0.016557, 0.241071, -0.578111)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 8, 4, 3, 8, 4, 3, 4, 4, 4, 4, 3, 4, 8, 3, 4, 8]
            int[] faceVertexIndices = [0, 1, 3, 2, 68, 61, 81, 78, 56, 37, 41, 55, 61, 34, 35, 60, 60, 35, 36, 62, 55, 41, 40, 67, 69, 38, 39, 68, 67, 40, 38, 69, 62, 36, 37, 56, 68, 39, 34, 61, 28, 34, 39, 29, 56, 75, 74, 62, 69, 77, 76, 67, 69, 68, 78, 77, 55, 67, 76, 79, 60, 62, 74, 80, 60, 80, 81, 61, 75, 56, 55, 79, 83, 82, 28, 29, 93, 92, 91, 90, 35, 34, 28, 82, 86, 87, 36, 35, 86, 40, 41, 84, 88, 38, 89, 83, 29, 39, 89, 38, 40, 88, 37, 36, 87, 85, 41, 37, 90, 91, 37, 85, 93, 90, 85, 84, 92, 93, 84, 41, 91, 92, 4, 5, 7, 6, 8, 9, 11, 10, 12, 13, 15, 14, 16, 17, 19, 18, 20, 21, 23, 22, 24, 25, 27, 26, 65, 66, 70, 71, 64, 65, 71, 72, 63, 64, 72, 73, 54, 63, 73, 57, 59, 70, 66, 58, 52, 53, 59, 58, 33, 32, 31, 30, 31, 32, 42, 45, 43, 44, 46, 47, 47, 46, 48, 49, 49, 48, 50, 51, 51, 50, 45, 42, 74, 75, 57, 73, 72, 71, 70, 59, 76, 77, 52, 58, 77, 78, 52, 76, 58, 66, 65, 64, 63, 54, 79, 74, 59, 53, 80, 80, 53, 81, 54, 57, 75, 79, 78, 81, 53, 52, 83, 33, 30, 82, 85, 44, 43, 84, 86, 82, 30, 87, 86, 30, 31, 88, 84, 43, 47, 49, 51, 42, 32, 83, 89, 33, 88, 32, 33, 89, 87, 31, 45, 50, 48, 46, 44, 85]
            rel material:binding = </root/_materials/M_FridgeDrawer2B6_0>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0.86559415, -0.5007463), (0, 0.86559415, -0.5007463), (6.4767664e-7, 0.8598005, -0.5106303), (-2.1979213e-7, 0.8598005, -0.5106302), (-0.026495928, 0.09621302, -0.995008), (-0.019001542, 0.054412078, -0.9983378), (0.019002497, 0.05441531, -0.99833757), (0.026495825, 0.096209764, -0.99500847), (0.0000030606532, 0, -1), (0.0000031693542, 0, -1), (0.0000030641195, 0, -1), (0.0000030160454, 0, -1), (0.0000030160454, 0, -1), (0.0000030641195, 0, -1), (-0.0015134048, -0.0000024373876, -0.9999988), (-0.00039016455, -0.0000011454686, -0.9999999), (0.026495825, 0.096209764, -0.99500847), (0.019002497, 0.05441531, -0.99833757), (0.0015145075, -0.0000024985056, -0.9999988), (0.00039122254, -9.976793e-7, -0.9999999), (-0.000002262157, 0, -1), (-0.0000022982265, 0, -1), (-0.0000023769621, 0, -1), (-0.000002295698, 0, -1), (0.00039122254, -9.976793e-7, -0.9999999), (0.0015145075, -0.0000024985056, -0.9999988), (-0.0000022982265, 0, -1), (-0.000002262157, 0, -1), (-0.00039016455, -0.0000011454686, -0.9999999), (-0.0015134048, -0.0000024373876, -0.9999988), (-0.019001542, 0.054412078, -0.9983378), (-0.026495928, 0.09621302, -0.995008), (-0.000002295698, 0, -1), (-0.0000023769621, 0, -1), (0.0000031693542, 0, -1), (0.0000030606532, 0, -1), (8.742741e-9, -0.9806992, 0.19552273), (0, -1, 0), (0, -1, 0), (0, -0.9806992, 0.19552273), (0.999529, 0.009268934, 0.029254276), (0.9995406, 0.009416884, 0.028807022), (0.9995948, -0.003064559, 0.028297933), (0.9996161, -0.0004966711, 0.027701287), (-0.9994145, -0.0074037383, 0.03340347), (-0.99928427, -0.008306109, 0.03690413), (-0.99959475, -0.0030662573, 0.028299237), (-0.999616, -0.0005898527, 0.027702538), (-0.9994145, -0.0074037383, 0.03340347), (-0.99435675, -0.06631045, 0.08280999), (-0.9948225, -0.070408404, 0.07328547), (-0.99928427, -0.008306109, 0.03690413), (-0.9995284, 0.009270419, 0.029276153), (-0.999616, -0.0005898527, 0.027702538), (-0.99959475, -0.0030662573, 0.028299237), (-0.99953395, 0.0093735205, 0.02904976), (0.99941397, -0.0074207373, 0.033414774), (0.9996161, -0.0004966711, 0.027701287), (0.9995948, -0.003064559, 0.028297933), (0.9992844, -0.008300781, 0.03690377), (0.99941397, -0.0074207373, 0.033414774), (0.9992844, -0.008300781, 0.03690377), (0.9948229, -0.07041202, 0.07327637), (0.9943594, -0.06630223, 0.082785085), (0, -0.9811686, -0.19315329), (0, -0.9811679, -0.19315706), (0, -0.9811679, -0.19315706), (0, -0.98116857, -0.19315328), (0, -0.8287585, 0.55960655), (0, -0.8287585, 0.55960655), (8.742741e-9, -0.9806992, 0.19552273), (0, -0.9806992, 0.19552273), (0, 0.98475605, 0.17394085), (0, 0.98475605, 0.17394085), (0, 0.98475605, 0.17394085), (0, 0.98475605, 0.17394085), (-1, -4.8651283e-9, 0), (-1, -9.730256e-9, 0), (-1, -9.730256e-9, 0), (-1, -6.704577e-9, 0), (-1, -2.1975785e-8, 0), (-1, -1.954322e-8, 0), (-1, 0, 0), (-1, -4.8651283e-9, 0), (-1, -2.1975785e-8, 0), (1, 0, 0), (1, 0, 0), (1, 1.3640434e-8, 0), (1, 1.1084437e-8, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 1.1084437e-8, 0), (-1, 0, 0), (-1, 0, 0), (-1, -1.954322e-8, 0), (-1, 0, 0), (0.019002497, 0.05441531, -0.99833757), (-0.019001542, 0.054412078, -0.9983378), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 1.3640434e-8, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-4.0061423e-8, -0.38039848, -0.92482275), (0.0000026007183, -0.16448557, -0.98637944), (-0.0008169435, -0.16448158, -0.9863798), (0, -0.38039878, -0.9248226), (-4.9721777e-8, -0.69743913, -0.71664405), (-4.0061423e-8, -0.38039848, -0.92482275), (0, -0.38039878, -0.9248226), (0, -0.69743913, -0.71664405), (0, -0.91144055, -0.41143188), (-4.9721777e-8, -0.69743913, -0.71664405), (0, -0.69743913, -0.71664405), (-2.499728e-7, -0.9114406, -0.41143185), (-2.8280192e-7, -0.985461, -0.16990179), (0, -0.91144055, -0.41143188), (-2.499728e-7, -0.9114406, -0.41143185), (-8.876668e-9, -0.985461, -0.16990171), (0.0000013627578, 0.5082614, -0.86120296), (-0.0008169435, -0.16448158, -0.9863798), (0.0000026007183, -0.16448557, -0.98637944), (0, 0.5082614, -0.86120296), (0.0000021727756, 0.42436305, -0.9054921), (0, 0.42436242, -0.9054924), (0.0000013627578, 0.5082614, -0.86120296), (0, 0.5082614, -0.86120296), (0.000068959234, -0.52163225, 0.8531704), (0, -0.41756228, 0.90864825), (-0.00011920624, -0.41756228, 0.90864825), (0, -0.52163225, 0.85317045), (-0.00011920624, -0.41756228, 0.90864825), (0, -0.41756228, 0.90864825), (-7.279162e-9, 0.17750165, 0.98412055), (0, 0.17750166, 0.98412055), (0, 0.98009914, 0.19850871), (-0.0000038158064, 0.98009914, 0.1985087), (0, 0.92012805, 0.3916176), (-8.434917e-11, 0.92012805, 0.3916176), (-8.434917e-11, 0.92012805, 0.3916176), (0, 0.92012805, 0.3916176), (0, 0.69719404, 0.7168824), (-8.4518635e-11, 0.69719404, 0.7168824), (-8.4518635e-11, 0.69719404, 0.7168824), (0, 0.69719404, 0.7168824), (0, 0.37381113, 0.92750484), (-3.5412903e-8, 0.37381113, 0.92750484), (-3.5412903e-8, 0.37381113, 0.92750484), (0, 0.37381113, 0.92750484), (0, 0.17750166, 0.98412055), (-7.279162e-9, 0.17750165, 0.98412055), (0.9995948, -0.003064559, 0.028297933), (0.9995406, 0.009416884, 0.028807022), (0.9995749, 0.0097391065, 0.027479835), (0.9995749, 0.0097391065, 0.027479835), (0.9995749, 0.0097391065, 0.027479835), (0.9995749, 0.0097391065, 0.027479835), (0.9995749, 0.0097391065, 0.027479835), (0.9996107, -0.0023925407, 0.027800031), (-0.99959475, -0.0030662573, 0.028299237), (-0.99928427, -0.008306109, 0.03690413), (-0.99951005, 0.015998257, 0.026898894), (-0.9996106, -0.0023932543, 0.02780015), (-0.99928427, -0.008306109, 0.03690413), (-0.9948225, -0.070408404, 0.07328547), (-0.99951005, 0.015998257, 0.026898894), (-0.99959475, -0.0030662573, 0.028299237), (-0.9996106, -0.0023932543, 0.02780015), (-0.9995752, 0.0097388, 0.027468268), (-0.9995752, 0.0097388, 0.027468268), (-0.9995752, 0.0097388, 0.027468268), (-0.9995752, 0.0097388, 0.027468268), (-0.9995752, 0.0097388, 0.027468268), (-0.99953395, 0.0093735205, 0.02904976), (0.9995948, -0.003064559, 0.028297933), (0.9996107, -0.0023925407, 0.027800031), (0.99951005, 0.01599962, 0.026901951), (0.9992844, -0.008300781, 0.03690377), (0.9992844, -0.008300781, 0.03690377), (0.99951005, 0.01599962, 0.026901951), (0.9948229, -0.07041202, 0.07327637), (-2.8280192e-7, -0.985461, -0.16990179), (-8.876668e-9, -0.985461, -0.16990171), (0, -0.9811686, -0.19315329), (0, -0.98116857, -0.19315328), (-2.1979213e-7, 0.8598005, -0.5106302), (6.4767664e-7, 0.8598005, -0.5106303), (0, 0.42436242, -0.9054924), (0.0000021727756, 0.42436305, -0.9054921), (0, -0.8287585, 0.55960655), (0.000068959234, -0.52163225, 0.8531704), (0, -0.52163225, 0.85317045), (0, -0.8287585, 0.55960655), (0, 0.98475486, 0.17394766), (-0.0000038158064, 0.98009914, 0.1985087), (0, 0.98009914, 0.19850871), (0, 0.98475486, 0.17394766), (-1, -2.1975785e-8, 0), (-1, -6.704577e-9, 0), (-1, -6.063408e-8, 0), (-1, -1.954322e-8, 0), (-1, -2.1975785e-8, 0), (-1, -6.063408e-8, 0), (-1, -3.1994908e-8, 0), (1, 1.1084437e-8, 0), (1, 1.3640434e-8, 0), (1, 4.433775e-8, 0), (1, 4.433775e-8, 0), (1, 4.433775e-8, 0), (1, 4.433775e-8, 0), (1, 4.433775e-8, 0), (1, 2.6191017e-8, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 1.1084437e-8, 0), (1, 2.6191017e-8, 0), (1, 0, 0), (1, 0, 0), (-1, -1.954322e-8, 0), (-1, -3.1994908e-8, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.016557, 0.067322, -0.895309), (0.016547, 0.067322, -0.895309), (0.016557, 0.067332, -0.895309), (0.016547, 0.067332, -0.895309), (0.016557, 0.067322, -0.895309), (0.016547, 0.067322, -0.895309), (0.016557, 0.067332, -0.895309), (0.016547, 0.067332, -0.895309), (0.016557, 0.067322, -0.895309), (0.016547, 0.067322, -0.895309), (0.016557, 0.067332, -0.895309), (0.016547, 0.067332, -0.895309), (0.016557, 0.067322, -0.895309), (0.016547, 0.067322, -0.895309), (0.016557, 0.067332, -0.895309), (0.016547, 0.067332, -0.895309), (0.016557, 0.067322, -0.895309), (0.016547, 0.067322, -0.895309), (0.016557, 0.067332, -0.895309), (0.016547, 0.067332, -0.895309), (0.016557, 0.067322, -0.895309), (0.016547, 0.067322, -0.895309), (0.016557, 0.067332, -0.895309), (0.016547, 0.067332, -0.895309), (0.016557, 0.067322, -0.895309), (0.016547, 0.067322, -0.895309), (0.016557, 0.067332, -0.895309), (0.016547, 0.067332, -0.895309), (-0.015783, 0.241071, -0.586503), (-0.329976, 0.241071, -0.586503), (-0.015783, 0.169903, -0.691903), (-0.015783, 0.164839, -0.694555), (-0.329976, 0.164839, -0.694555), (-0.329976, 0.169903, -0.691903), (-0.015783, 0.241071, -0.579273), (-0.015783, 0.169903, -0.579273), (-0.015783, 0.164839, -0.579273), (-0.015783, -0.185944, -0.579273), (-0.329976, 0.169903, -0.579273), (-0.329976, 0.241071, -0.579273), (-0.329976, 0.164839, -0.579273), (-0.329976, -0.185944, -0.579273), (-0.329976, -0.14824, -0.694555), (-0.329976, -0.169158, -0.674303), (-0.015783, -0.169158, -0.674303), (-0.015783, -0.14824, -0.694555), (-0.015783, -0.167565, -0.682053), (-0.329976, -0.167565, -0.682053), (-0.015783, -0.163031, -0.688624), (-0.329976, -0.163031, -0.688624), (-0.015783, -0.156245, -0.693014), (-0.329976, -0.156245, -0.693014), (-0.322344, 0.165156, -0.686908), (-0.023415, 0.165156, -0.686908), (-0.325222, -0.1603, -0.672717), (-0.32246, -0.178924, -0.578111), (-0.0233, -0.178924, -0.578111), (-0.020537, -0.1603, -0.672717), (-0.322344, 0.163118, -0.687976), (-0.023415, 0.163118, -0.687976), (-0.026413, 0.169903, -0.579273), (-0.0233, 0.233949, -0.579273), (-0.026413, 0.164839, -0.579273), (-0.325148, -0.159275, -0.678729), (-0.325148, -0.156686, -0.682481), (-0.325148, -0.152811, -0.684988), (-0.325204, -0.147357, -0.685884), (-0.319346, 0.164839, -0.579273), (-0.32246, 0.233949, -0.579273), (-0.319346, 0.169903, -0.579273), (-0.020555, -0.147357, -0.685884), (-0.020611, -0.152811, -0.684988), (-0.020611, -0.156686, -0.682481), (-0.020611, -0.159275, -0.678729), (-0.025805, 0.164489, -0.60133), (-0.022622, -0.174353, -0.60133), (-0.319955, 0.164489, -0.60133), (-0.319961, 0.16893, -0.60133), (-0.324603, 0.221189, -0.60133), (-0.323138, -0.174353, -0.60133), (-0.025799, 0.16893, -0.60133), (-0.021157, 0.221189, -0.60133), (-0.015783, 0.231059, -0.60133), (-0.329976, 0.231059, -0.60133), (-0.329976, -0.182048, -0.60133), (-0.015783, -0.182048, -0.60133), (-0.015783, 0.169903, -0.60133), (-0.015783, 0.164839, -0.60133), (-0.329976, 0.164839, -0.60133), (-0.329976, 0.169903, -0.60133), (-0.015783, -0.200147, -0.579273), (-0.329976, -0.200147, -0.579273), (-0.329976, -0.196251, -0.60133), (-0.015783, -0.196251, -0.60133)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-170.80804, -111.20583), (-170.80804, -111.20592), (-170.80797, -111.20592), (-170.80797, -111.20583), (-170.10564, -0.631522), (-170.10564, 0.488454), (-170.15341, 0.496477), (-170.15341, -0.639545), (-171.11624, -0.481353), (-171.1362, -0.499976), (-170.30266, -0.499976), (-170.32262, -0.481353), (-171.11624, 0.613961), (-171.1362, 0.632854), (-171.1362, 0.444052), (-171.108, 0.444052), (-171.108, 0.444052), (-171.1362, 0.444052), (-171.1362, 0.430617), (-171.108, 0.430617), (-170.32262, -0.481353), (-170.30266, -0.499976), (-170.30266, 0.430617), (-170.33087, 0.430617), (-170.33087, 0.444052), (-170.30266, 0.444052), (-170.30266, 0.632854), (-170.32262, 0.613961), (-170.33087, 0.430617), (-170.30266, 0.430617), (-170.30266, 0.444052), (-170.33087, 0.444052), (-171.108, 0.430617), (-171.1362, 0.430617), (-171.1362, -0.499976), (-171.11624, -0.481353), (-170.32262, 0.613961), (-170.30266, 0.632854), (-171.1362, 0.632854), (-171.11624, 0.613961), (-170.25179, 0.38192), (-170.27223, 0.38192), (-170.27223, -0.506402), (-170.25179, -0.506402), (-170.30147, 0.570294), (-170.36304, 0.558178), (-170.36304, -0.339999), (-170.30457, -0.340924), (-170.25847, 0.400649), (-170.31693, 0.39807), (-170.31693, 0.386294), (-170.25847, 0.38722), (-170.25847, 0.400649), (-170.25847, 0.570473), (-170.31693, 0.536639), (-170.31693, 0.39807), (-170.25537, -0.524296), (-170.25847, 0.38722), (-170.31693, 0.386294), (-170.31693, -0.512176), (-170.30457, -0.354349), (-170.30457, -0.340924), (-170.36304, -0.339999), (-170.36304, -0.35177), (-170.30457, -0.354349), (-170.36304, -0.35177), (-170.36304, -0.490294), (-170.30457, -0.524117), (-170.13495, 0.874743), (-170.19705, 0.872929), (-170.19705, 0.072673), (-170.13495, 0.070859), (-170.20987, -0.506402), (-170.20987, 0.38192), (-170.25179, 0.38192), (-170.25179, -0.506402), (-170.2261, 0.357106), (-170.2261, -0.481587), (-170.1672, -0.481587), (-170.1672, 0.357106), (-170.39282, 0.443481), (-170.39282, 0.63201), (-170.41197, 0.63201), (-170.45128, 0.605489), (-170.45128, 0.443481), (-170.45128, 0.430065), (-170.39282, 0.430065), (-170.39282, 0.443481), (-170.45128, 0.443481), (-170.34843, -0.334868), (-170.34843, 0.594386), (-170.40688, 0.584065), (-170.40688, -0.334868), (-170.34843, -0.348284), (-170.40688, -0.348284), (-170.40688, -0.510293), (-170.36758, -0.536815), (-170.34843, -0.536815), (-170.40688, -0.348284), (-170.34843, -0.348284), (-170.34843, -0.334868), (-170.40688, -0.334868), (-170.39282, -0.499186), (-170.39282, 0.430065), (-170.45128, 0.430065), (-170.45128, -0.488865), (-170.30266, -0.499976), (-171.1362, -0.499976), (-171.1362, -0.537657), (-170.30266, -0.537657), (-170.39282, -0.499186), (-170.45128, -0.488865), (-170.45128, -0.526492), (-170.39282, -0.536813), (-170.17787, 0.353899), (-170.17787, -0.47838), (-170.14023, -0.47838), (-170.14023, 0.353899), (-170.40688, 0.584065), (-170.34843, 0.594386), (-170.34843, 0.632012), (-170.40688, 0.621691), (-141.89792, -110.22088), (-141.89792, -111.91363), (-140.29944, -111.91363), (-140.29944, -110.22088), (-118.53904, -109.61047), (-118.53904, -113.51364), (-114.85214, -113.51364), (-114.85214, -109.61047), (-88.71473, -110.74826), (-88.71473, -113.93459), (-85.70542, -113.93459), (-85.70542, -110.74826), (-68.99694, -112.291985), (-68.99694, -112.292), (-68.996925, -112.292), (-68.996925, -112.291985), (-69.00263, -112.291985), (-69.00263, -112.292), (-69.00262, -112.292), (-69.00262, -112.291985), (-69.00832, -112.291985), (-69.00832, -112.292), (-69.00831, -112.292), (-69.00831, -112.291985), (-70.85717, -0.401378), (-70.857025, -0.387039), (-71.65809, -0.387039), (-71.65794, -0.401378), (-70.85717, -0.411568), (-70.85717, -0.401378), (-71.65794, -0.401378), (-71.65794, -0.411568), (-70.85717, -0.418377), (-70.85717, -0.411568), (-71.65794, -0.411568), (-71.65794, -0.418377), (-71.5334, -0.346887), (-71.51839, -0.346703), (-71.51839, 0.413847), (-71.5334, 0.414031), (-71.650566, 0.429345), (-71.65809, -0.387039), (-70.857025, -0.387039), (-70.86455, 0.429345), (-70.86455, 0.434704), (-71.650566, 0.434704), (-71.650566, 0.429345), (-70.86455, 0.429345), (-71.12207, -0.782138), (-71.12207, -0.768791), (-71.95014, -0.768791), (-71.95014, -0.782138), (-71.95014, -0.768791), (-71.12207, -0.768791), (-71.12207, 0.056338), (-71.95014, 0.056338), (-71.58999, -0.352161), (-71.58999, 0.431415), (-71.609314, 0.431415), (-71.609314, -0.352161), (-71.12207, 0.107272), (-71.95014, 0.107272), (-71.95014, 0.095321), (-71.12207, 0.095321), (-71.12207, 0.095321), (-71.95014, 0.095321), (-71.95014, 0.077436), (-71.12207, 0.077436), (-71.12207, 0.077436), (-71.95014, 0.077436), (-71.95014, 0.056338), (-71.12207, 0.056338), (-71.166176, -0.769152), (-71.166176, 0.069517), (-71.342865, 0.034733), (-71.35775, 0.032199), (-71.367035, 0.02579), (-71.37324, 0.016198), (-71.37546, 0.0027), (-71.38063, -0.765758), (-71.04894, -0.07082), (-71.04894, -0.059828), (-71.26076, -0.06917), (-71.2634, -0.074214), (-71.04894, -0.059828), (-71.04894, 0.069518), (-71.26076, -0.06917), (-71.04894, -0.07082), (-71.2634, -0.074214), (-71.258224, -0.842673), (-71.256004, -0.85617), (-71.2498, -0.865762), (-71.24051, -0.872171), (-71.22563, -0.874706), (-71.04894, -0.90949), (-71.166176, -0.769152), (-71.38063, -0.765758), (-71.37799, -0.770802), (-71.166176, -0.780144), (-71.166176, -0.780144), (-71.37799, -0.770802), (-71.166176, -0.909489), (-71.5334, -0.346887), (-71.5334, 0.414031), (-71.711685, 0.408826), (-71.711685, -0.341682), (-70.858604, 0.582041), (-71.65651, 0.582041), (-71.650566, 0.434704), (-70.86455, 0.434704), (-71.12207, -0.943318), (-71.12207, -0.782138), (-71.95014, -0.782138), (-71.95014, -0.943318), (-71.408, 0.431415), (-71.58999, 0.431415), (-71.58999, -0.352161), (-71.408, -0.352161), (-71.81058, -0.049055), (-71.81058, 0.10226), (-72.034676, -0.049055), (-71.81058, -0.061585), (-71.81058, -0.049055), (-72.034676, -0.049055), (-72.04124, -0.061585), (-71.68594, -0.756013), (-71.68594, 0.102258), (-71.8665, 0.070365), (-71.88567, 0.066426), (-71.90193, 0.055206), (-71.912796, 0.038415), (-71.9166, 0.018609), (-71.9166, -0.756013), (-71.68594, -0.919858), (-71.68594, -0.768544), (-71.91004, -0.768544), (-71.68594, -0.756013), (-71.9166, -0.756013), (-71.91004, -0.768544), (-71.68594, -0.768544), (-71.81058, -0.061585), (-72.04124, -0.061585), (-72.04124, -0.836211), (-72.03742, -0.856017), (-72.02656, -0.872808), (-72.0103, -0.884027), (-71.99113, -0.887967), (-71.81058, -0.91986)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_FridgeDrawer2B6_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]
                rel material:binding = </root/_materials/M_FridgeDrawer2B6_0>
            }

            def GeomSubset "M_FridgeDrawer2B6_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [30]
                rel material:binding = </root/_materials/M_FridgeDrawer2B6_1>
            }

            def GeomSubset "M_FridgeDrawer2B6_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [31]
                rel material:binding = </root/_materials/M_FridgeDrawer2B6_2>
            }

            def GeomSubset "M_FridgeDrawer2B6_3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [32]
                rel material:binding = </root/_materials/M_FridgeDrawer2B6_3>
            }

            def GeomSubset "M_FridgeDrawer2B6_4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]
                rel material:binding = </root/_materials/M_FridgeDrawer2B6_4>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer2B6_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2B6_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.03676468, 0.03676468, 0.03676468)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2B6_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge.tga@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2B6_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer2B6_1"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2B6_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer2B6_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2B6_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2B6_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2B6_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer2B6_2"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2B6_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer2B6_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2B6_2/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2B6_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2B6_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer2B6_3"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2B6_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.5735294, 0.5735294, 0.5735294)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2B6_3/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2B6_3/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer2B6_4"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2B6_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.39705884, 0.39705884, 0.39705884)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }
    }
}

