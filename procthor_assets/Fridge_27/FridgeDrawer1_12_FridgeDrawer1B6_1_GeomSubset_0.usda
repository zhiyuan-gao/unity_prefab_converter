#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "FridgeDrawer1_12_FridgeDrawer1B6_1_GeomSubset_0"
    {
        def Mesh "FridgeDrawer1_12_FridgeDrawer1B6_1_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 68, 61, 81, 78, 56, 37, 41, 55, 61, 34, 35, 60, 60, 35, 36, 62, 55, 41, 40, 67, 69, 38, 39, 68, 67, 40, 38, 69, 62, 36, 37, 56, 68, 39, 34, 61, 28, 34, 39, 29, 56, 75, 74, 62, 69, 77, 76, 67, 69, 68, 78, 77, 55, 67, 76, 79, 60, 62, 74, 80, 60, 80, 81, 61, 75, 56, 55, 79, 83, 82, 28, 29, 93, 92, 91, 90, 35, 34, 28, 82, 86, 87, 36, 35, 86, 40, 41, 84, 88, 38, 89, 83, 29, 39, 89, 38, 40, 88, 37, 36, 87, 85, 41, 37, 90, 91, 37, 85, 93, 90, 85, 84, 92, 93, 84, 41, 91, 92]
            rel material:binding = </root/_materials/M_FridgeDrawer1B6_0>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -0.86558455, 0.50076276), (0, -0.86558455, 0.50076276), (-5.965994e-7, -0.8424392, 0.5387916), (1.6926788e-7, -0.8424392, 0.53879154), (-0.037996825, -0.066913314, 0.9970351), (-0.015003821, -0.0236241, 0.99960834), (0.015004374, -0.023624081, 0.99960834), (0.03799797, -0.06691337, 0.997035), (0.0000030608549, 0, 1), (0.00000316957, 0, 1), (0.0000030643155, 0, 1), (0.0000030162223, 0, 1), (0.0000030162223, 0, 1), (0.0000030643155, 0, 1), (-0.06360286, 0.0018994445, 0.99797344), (-0.06358253, 0.0018984212, 0.99797475), (0.03799797, -0.06691337, 0.997035), (0.015004374, -0.023624081, 0.99960834), (0.063603915, 0.0018994401, 0.9979734), (0.06358357, 0.0018985152, 0.99797475), (-0.0000015081118, 0, 1), (-0.0000015321583, 0, 1), (-0.0000015847858, 0, 1), (-0.0000015304277, 0, 1), (0.06358357, 0.0018985152, 0.99797475), (0.063603915, 0.0018994401, 0.9979734), (-0.0000015321583, 0, 1), (-0.0000015081118, 0, 1), (-0.06358253, 0.0018984212, 0.99797475), (-0.06360286, 0.0018994445, 0.99797344), (-0.015003821, -0.0236241, 0.99960834), (-0.037996825, -0.066913314, 0.9970351), (-0.0000015304277, 0, 1), (-0.0000015847858, 0, 1), (0.00000316957, 0, 1), (0.0000030608549, 0, 1), (0.000049353464, 0.91060114, -0.41328645), (0, 1, 0), (0, 1, 0), (0, 0.91060114, -0.41328648), (0.9995283, -0.009270547, -0.029277569), (0.99956137, -0.0095942365, -0.028020052), (0.99956566, -0.009488711, -0.027899504), (0.99953246, -0.009076236, -0.029197171), (-0.9949789, 0.061587606, -0.07889241), (-0.9961727, 0.07330795, -0.047600795), (-0.99956566, -0.00948886, -0.027899362), (-0.9995325, -0.009076124, -0.029197479), (-0.9949789, 0.061587606, -0.07889241), (-0.99435645, 0.06631051, -0.08281368), (-0.99529445, 0.07640189, -0.059595432), (-0.9961727, 0.07330795, -0.047600795), (-0.9995284, -0.009270481, -0.029277265), (-0.9995325, -0.009076124, -0.029197479), (-0.99956566, -0.00948886, -0.027899362), (-0.9995494, -0.009475736, -0.028484264), (0.99497896, 0.06158951, -0.07889058), (0.99953246, -0.009076236, -0.029197171), (0.99956566, -0.009488711, -0.027899504), (0.9961726, 0.07330815, -0.047601778), (0.99497896, 0.06158951, -0.07889058), (0.9961726, 0.07330815, -0.047601778), (0.9952946, 0.07640157, -0.059595175), (0.99435645, 0.066311084, -0.08281365), (0, 0.98116887, 0.19315176), (0, 0.981168, 0.19315644), (0, 0.981168, 0.19315644), (0, 0.9811688, 0.19315177), (0, 0.828772, -0.5595865), (0, 0.828772, -0.5595865), (0.000049353464, 0.91060114, -0.41328645), (0, 0.91060114, -0.41328648), (0, -0.9847549, -0.17394787), (0, -0.9847549, -0.17394787), (0, -0.9847549, -0.17394787), (0, -0.9847549, -0.17394787), (-1, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-1, 0, 0), (-1, 6.565195e-7, 0), (-1, 6.5651955e-7, 0), (-1, 0, 0), (-1, 0, 0), (-1, 6.565195e-7, 0), (1, 0, 0), (1, 0, 0), (1, -7.459564e-10, 0), (1, -6.0617555e-10, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, -6.0617555e-10, 0), (-1, 0, 0), (-1, 0, 0), (-1, 6.5651955e-7, 0), (-1, 0, 0), (0.015004374, -0.023624081, 0.99960834), (-0.015003821, -0.0236241, 0.99960834), (0, 0, 0.99999994), (0, 0, 0.99999994), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, -7.459564e-10, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.011338, 0.067322, -0.895309), (0.011348, 0.067322, -0.895309), (0.011338, 0.067332, -0.895309), (0.011348, 0.067332, -0.895309), (0.011338, 0.067322, -0.895309), (0.011348, 0.067322, -0.895309), (0.011338, 0.067332, -0.895309), (0.011348, 0.067332, -0.895309), (0.011338, 0.067322, -0.895309), (0.011348, 0.067322, -0.895309), (0.011338, 0.067332, -0.895309), (0.011348, 0.067332, -0.895309), (0.011338, 0.067322, -0.895309), (0.011348, 0.067322, -0.895309), (0.011338, 0.067332, -0.895309), (0.011348, 0.067332, -0.895309), (0.011338, 0.067322, -0.895309), (0.011348, 0.067322, -0.895309), (0.011338, 0.067332, -0.895309), (0.011348, 0.067332, -0.895309), (0.011338, 0.067322, -0.895309), (0.011348, 0.067322, -0.895309), (0.011338, 0.067332, -0.895309), (0.011348, 0.067332, -0.895309), (0.011338, 0.067322, -0.895309), (0.011348, 0.067322, -0.895309), (0.011338, 0.067332, -0.895309), (0.011348, 0.067332, -0.895309), (-0.341988, 0.238296, -0.586502), (-0.027805, 0.238296, -0.586502), (-0.341988, 0.167129, -0.691902), (-0.341988, 0.162064, -0.694555), (-0.027805, 0.162064, -0.694555), (-0.027805, 0.167129, -0.691902), (-0.341988, 0.238296, -0.579273), (-0.341988, 0.167129, -0.579273), (-0.341988, 0.162064, -0.579273), (-0.341988, -0.188718, -0.579273), (-0.027805, 0.167129, -0.579273), (-0.027805, 0.238296, -0.579273), (-0.027805, 0.162064, -0.579273), (-0.027805, -0.188718, -0.579273), (-0.027805, -0.151014, -0.694555), (-0.027805, -0.171932, -0.674303), (-0.341988, -0.171932, -0.674303), (-0.341988, -0.151014, -0.694555), (-0.341988, -0.17034, -0.682053), (-0.027805, -0.17034, -0.682053), (-0.341988, -0.165805, -0.688623), (-0.027805, -0.165805, -0.688623), (-0.341988, -0.159019, -0.693013), (-0.027805, -0.159019, -0.693013), (-0.035437, 0.162382, -0.686908), (-0.334356, 0.162382, -0.686908), (-0.032559, -0.163074, -0.672717), (-0.035321, -0.181698, -0.57811), (-0.334472, -0.181698, -0.57811), (-0.337234, -0.163074, -0.672717), (-0.035437, 0.160344, -0.687976), (-0.334356, 0.160344, -0.687976), (-0.331358, 0.167129, -0.579273), (-0.334472, 0.231175, -0.579273), (-0.331358, 0.162064, -0.579273), (-0.032633, -0.16205, -0.678729), (-0.032633, -0.15946, -0.682481), (-0.032633, -0.155585, -0.684988), (-0.032577, -0.150132, -0.685884), (-0.038435, 0.162064, -0.579273), (-0.035321, 0.231175, -0.579273), (-0.038435, 0.167129, -0.579273), (-0.337216, -0.150132, -0.685884), (-0.33716, -0.155585, -0.684988), (-0.33716, -0.15946, -0.682481), (-0.33716, -0.16205, -0.678729), (-0.331967, 0.161715, -0.601329), (-0.33515, -0.177127, -0.601329), (-0.037826, 0.161715, -0.601329), (-0.03782, 0.166156, -0.601329), (-0.033178, 0.218415, -0.601329), (-0.034643, -0.177127, -0.601329), (-0.331973, 0.166156, -0.601329), (-0.336615, 0.218415, -0.601329), (-0.341988, 0.228285, -0.601329), (-0.027805, 0.228285, -0.601329), (-0.027805, -0.184822, -0.601329), (-0.341988, -0.184822, -0.601329), (-0.341988, 0.167129, -0.601329), (-0.341988, 0.162064, -0.601329), (-0.027805, 0.162064, -0.601329), (-0.027805, 0.167129, -0.601329), (-0.341988, -0.202922, -0.579273), (-0.027805, -0.202922, -0.579273), (-0.027805, -0.199026, -0.601329), (-0.341988, -0.199026, -0.601329)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-170.80801, -111.20583), (-170.80801, -111.20592), (-170.8079, -111.20592), (-170.8079, -111.20583), (-170.1056, -0.631703), (-170.1056, 0.488635), (-170.15338, 0.496661), (-170.15338, -0.639729), (-171.11623, -0.481328), (-171.13618, -0.499951), (-170.30269, -0.499951), (-170.32265, -0.481328), (-171.11623, 0.613959), (-171.13618, 0.632852), (-171.13618, 0.444055), (-171.10797, 0.444055), (-171.10797, 0.444055), (-171.13618, 0.444055), (-171.13618, 0.43062), (-171.10797, 0.43062), (-170.32265, -0.481328), (-170.30269, -0.499951), (-170.30269, 0.43062), (-170.33089, 0.43062), (-170.33089, 0.444055), (-170.30269, 0.444055), (-170.30269, 0.632852), (-170.32265, 0.613959), (-170.33089, 0.43062), (-170.30269, 0.43062), (-170.30269, 0.444055), (-170.33089, 0.444055), (-171.10797, 0.43062), (-171.13618, 0.43062), (-171.13618, -0.499951), (-171.11623, -0.481328), (-170.32265, 0.613959), (-170.30269, 0.632852), (-171.13618, 0.632852), (-171.11623, 0.613959), (-170.25175, 0.381841), (-170.27222, 0.381841), (-170.27222, -0.506323), (-170.25175, -0.506323), (-170.30145, 0.570341), (-170.36302, 0.558224), (-170.36302, -0.340011), (-170.30453, -0.340937), (-170.25845, 0.400662), (-170.3169, 0.398083), (-170.3169, 0.386308), (-170.25845, 0.387234), (-170.25845, 0.400662), (-170.25845, 0.570488), (-170.3169, 0.536653), (-170.3169, 0.398083), (-170.25536, -0.524289), (-170.25845, 0.387234), (-170.3169, 0.386308), (-170.3169, -0.512169), (-170.30453, -0.354362), (-170.30453, -0.340937), (-170.36302, -0.340011), (-170.36302, -0.351784), (-170.30453, -0.354362), (-170.36302, -0.351784), (-170.36302, -0.490316), (-170.30453, -0.524142), (-170.13493, 0.874725), (-170.19702, 0.872911), (-170.19702, 0.072692), (-170.13493, 0.070878), (-170.20985, -0.506323), (-170.20985, 0.381841), (-170.25175, 0.381841), (-170.25175, -0.506323), (-170.22607, 0.357207), (-170.22607, -0.481689), (-170.16719, -0.481689), (-170.16719, 0.357207), (-170.3928, 0.443508), (-170.3928, 0.632045), (-170.41199, 0.632045), (-170.45126, 0.605523), (-170.45126, 0.443508), (-170.45126, 0.430092), (-170.3928, 0.430092), (-170.3928, 0.443508), (-170.45126, 0.443508), (-170.34842, -0.334867), (-170.34842, 0.594413), (-170.40686, 0.584092), (-170.40686, -0.334867), (-170.34842, -0.348284), (-170.40686, -0.348284), (-170.40686, -0.510297), (-170.36757, -0.536819), (-170.34842, -0.536819), (-170.40686, -0.348284), (-170.34842, -0.348284), (-170.34842, -0.334867), (-170.40686, -0.334867), (-170.3928, -0.499196), (-170.3928, 0.430092), (-170.45126, 0.430092), (-170.45126, -0.488875), (-170.30269, -0.499951), (-171.13618, -0.499951), (-171.13618, -0.537631), (-170.30269, -0.537631), (-170.3928, -0.499196), (-170.45126, -0.488875), (-170.45126, -0.526502), (-170.3928, -0.536824), (-170.17784, 0.353932), (-170.17784, -0.478414), (-170.14021, -0.478414), (-170.14021, 0.353932), (-170.40686, 0.584092), (-170.34842, 0.594413), (-170.34842, 0.632041), (-170.40686, 0.621719)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer1B6_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1B6_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.03676468, 0.03676468, 0.03676468)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1B6_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge.tga@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1B6_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

