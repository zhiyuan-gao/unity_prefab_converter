#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshBook_9_0_GeomSubset_0"
    {
        def Mesh "MeshBook_9_0_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [1, 0, 3, 2, 4, 5, 6, 7, 7, 6, 10, 11, 8, 9, 11, 10, 6, 2, 3, 10, 7, 11, 24, 25, 6, 5, 1, 2, 0, 8, 10, 3, 11, 9, 27, 24, 25, 26, 4, 7, 17, 16, 20, 21, 21, 22, 18, 17, 16, 19, 23, 20, 21, 20, 13, 14, 14, 15, 22, 21, 20, 23, 12, 13, 25, 24, 16, 17, 17, 18, 26, 25, 24, 27, 19, 16, 135, 134, 132, 133, 13, 12, 132, 134, 15, 14, 135, 133, 132, 12, 15, 133, 13, 134, 135, 14]
            rel material:binding = </root/_materials/M_Book_9_0>
            normal3f[] normals = [(1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, -0.000004869969), (0, -1, -0.0000045585352), (0, -1, -0.000011920773), (0, -1, -0.000005897157), (-0.8301728, 0, 0.55750614), (-0.5133744, 0, 0.8581647), (-0.5133744, -2.003669e-8, 0.8581647), (-0.8301728, -6.29539e-10, 0.55750614), (0, 1, -0.0000022792676), (0, 1, -0.0000012452072), (0, 1, -0.0000018781077), (0, 1, -0.0000059603867), (-0.5133744, 0, 0.8581647), (0, 0, 1), (0, 0, 1), (-0.5133744, -2.003669e-8, 0.8581647), (-0.8301728, 0, 0.55750614), (-0.8301728, -6.29539e-10, 0.55750614), (-0.96856177, 0, 0.24877311), (-0.96856177, 0, 0.24877311), (0, -1, -0.000011920773), (0, -1, -0.0000045585352), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, -0.0000022792676), (0, 1, -0.0000059603867), (0, 1, 0), (0, 1, -0.0000018781077), (0, 1, -0.0000012452072), (0, 1, 0.0000018689681), (0, 1, 0.0000026368439), (0, -1, 8.7618474e-7), (0, -1, -5.898953e-7), (0, -1, -0.000004869969), (0, -1, -0.000005897157), (-0.9859658, 0, 0.16694772), (-0.9859658, -4.76409e-8, 0.16694772), (-0.9970011, 0, 0.077387154), (-0.9970011, 0, 0.077387154), (0, -1, 0.0000019848144), (0, -1, 0.0000021720248), (0, -1, -0.0000018894247), (0, -1, -0.000002249815), (0, 1, 0.0000018925059), (0, 1, 0.0000022498875), (0, 1, 0.0000019723855), (0, 1, 0.0000021577964), (-0.9970011, 0, 0.077387154), (-0.9970011, 0, 0.077387154), (-0.90763086, -0.000004723668, -0.41976935), (-0.90763086, 0, -0.41976935), (8.7171793e-7, -0.95684475, -0.29059944), (-0.0000021196902, -0.9617381, -0.27397057), (0, -1, 0.0000021720248), (0, -1, 0.0000019848144), (0, 1, 0.0000021577964), (0, 1, 0.0000019723855), (6.537881e-7, 0.9993709, 0.03546695), (3.8254075e-7, 0.99926656, 0.038293384), (-0.96856177, 0, 0.24877311), (-0.96856177, 0, 0.24877311), (-0.9859658, -4.76409e-8, 0.16694772), (-0.9859658, 0, 0.16694772), (0, -1, -0.000002249815), (0, -1, -0.0000018894247), (0, -1, -5.898953e-7), (0, -1, 8.7618474e-7), (0, 1, 0.0000026368439), (0, 1, 0.0000018689681), (0, 1, 0.0000022498875), (0, 1, 0.0000018925059), (-0.4387176, 4.1956082e-7, -0.8986251), (-0.4387176, -4.3453234e-8, -0.898625), (0.43907413, -4.0512532e-7, -0.8984509), (0.43907413, 3.9266826e-8, -0.8984509), (-0.000025161313, 0.6111976, -0.79147804), (0.000083222985, 0.6089946, -0.7931744), (-1.7782812e-8, 0.8892839, -0.4573556), (-3.9930455e-8, 0.88928396, -0.4573556), (-0.0000021196902, -0.9617381, -0.27397057), (8.7171793e-7, -0.95684475, -0.29059944), (1.6128599e-8, -0.8891962, -0.45752612), (3.8126018e-8, -0.88924015, -0.45744085), (0.43907413, -4.0512532e-7, -0.8984509), (0.74507576, 7.298694e-8, -0.66697973), (0.74507576, 9.371433e-9, -0.66697973), (0.43907413, 3.9266826e-8, -0.8984509), (-0.90763086, -0.000004723668, -0.41976935), (-0.4387176, -4.3453234e-8, -0.898625), (-0.4387176, 4.1956082e-7, -0.8986251), (-0.90763086, 0, -0.41976935)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.076634, -0.111848, -0.010628), (-0.076634, 0.111848, -0.010628), (-0.076634, 0.111848, -0.011152), (-0.076634, -0.111848, -0.011152), (0.084995, 0.111848, -0.0094), (0.083172, 0.111848, -0.010628), (0.084059, 0.111848, -0.011152), (0.085717, 0.111848, -0.009979), (0.083172, -0.111848, -0.010628), (0.084995, -0.111848, -0.0094), (0.084059, -0.111848, -0.011152), (0.085717, -0.111848, -0.009979), (0.085998, -0.111848, -0.002481), (0.086971, -0.111848, -0.002481), (0.086971, 0.111848, -0.002481), (0.085998, 0.111848, -0.002481), (0.08668, -0.111848, -0.00623), (0.08668, 0.111848, -0.00623), (0.085713, 0.111848, -0.005941), (0.085713, -0.111848, -0.005941), (0.086825, -0.111848, -0.004356), (0.086825, 0.111848, -0.004356), (0.08587, 0.111848, -0.004211), (0.08587, -0.111848, -0.004211), (0.08618, -0.111848, -0.008104), (0.08618, 0.111848, -0.008104), (0.085373, 0.111848, -0.00767), (0.085373, -0.111848, -0.00767), (0.08471, 0.111848, -0.002481), (-0.076634, 0.111848, -0.002481), (-0.076634, -0.111848, -0.002481), (0.08471, -0.111848, -0.002481), (0.084403, 0.111848, -0.006555), (-0.076634, 0.111848, -0.006555), (-0.076634, -0.111848, -0.006555), (0.084403, -0.111848, -0.006555), (0.08471, -0.110626, -0.000432), (0.085998, -0.111848, -0.002481), (0.08471, 0.110626, -0.000432), (0.085998, 0.111848, -0.002481), (-0.075613, -0.110626, -0.001962), (-0.075613, 0.110626, -0.001962), (-0.076634, -0.111848, -0.010628), (-0.076634, 0.111848, -0.010628), (0.083172, 0.111848, -0.010628), (0.084995, 0.111848, -0.0094), (0.084995, -0.111848, -0.0094), (0.083172, -0.111848, -0.010628), (0.085713, 0.111848, -0.005941), (0.085713, -0.111848, -0.005941), (0.028413, 0.111848, -0.010628), (0.029234, 0.111848, -0.006555), (0.029439, 0.111848, -0.002481), (0.029724, 0.110626, 0.005891), (0.029724, -0.110626, 0.005891), (0.029439, -0.111848, -0.002481), (0.029234, -0.111848, -0.006555), (0.028413, -0.111848, -0.010628), (-0.021379, 0.111848, -0.010628), (-0.020968, 0.111848, -0.006555), (-0.020866, 0.111848, -0.002481), (-0.020295, 0.110626, 0.003406), (-0.020295, -0.110626, 0.003406), (-0.020866, -0.111848, -0.002481), (-0.020968, -0.111848, -0.006555), (-0.021379, -0.111848, -0.010628), (0.014134, 0.111848, -0.010628), (0.014818, 0.111848, -0.006555), (0.014989, 0.111848, -0.002481), (0.015369, 0.110626, 0.00553), (0.015369, -0.110626, 0.00553), (0.014989, -0.111848, -0.002481), (0.014818, -0.111848, -0.006555), (0.014134, -0.111848, -0.010628), (-0.003622, 0.111848, -0.010628), (-0.003075, 0.111848, -0.006555), (-0.002938, 0.111848, -0.002481), (-0.002463, 0.110626, 0.004678), (-0.002463, -0.110626, 0.004678), (-0.002938, -0.111848, -0.002481), (-0.003075, -0.111848, -0.006555), (-0.003622, -0.111848, -0.010628), (0.071595, 0.111848, -0.010628), (0.072744, 0.111848, -0.006555), (0.073031, 0.111848, -0.002481), (0.073088, 0.110626, 0.003664), (0.073088, -0.110626, 0.003664), (0.073031, -0.111848, -0.002481), (0.072744, -0.111848, -0.006555), (0.071595, -0.111848, -0.010628), (0.061864, 0.111848, -0.010628), (0.062931, 0.111848, -0.006555), (0.063198, 0.111848, -0.002481), (0.063312, 0.110626, 0.005315), (0.063312, -0.110626, 0.005315), (0.063198, -0.111848, -0.002481), (0.062931, -0.111848, -0.006555), (0.061864, -0.111848, -0.010628), (0.051211, 0.111848, -0.010628), (0.052195, 0.111848, -0.006555), (0.052441, 0.111848, -0.002481), (0.052613, 0.110626, 0.00598), (0.052613, -0.110626, 0.00598), (0.052441, -0.111848, -0.002481), (0.052195, -0.111848, -0.006555), (0.051211, -0.111848, -0.010628), (0.040557, 0.111848, -0.010628), (0.041459, 0.111848, -0.006555), (0.041685, 0.111848, -0.002481), (0.041914, 0.110626, 0.00602), (0.041914, -0.110626, 0.00602), (0.041685, -0.111848, -0.002481), (0.041459, -0.111848, -0.006555), (0.040557, -0.111848, -0.010628), (-0.039117, 0.111848, -0.010628), (-0.038912, 0.111848, -0.006555), (-0.038861, 0.111848, -0.002481), (-0.038148, 0.110626, 0.002019), (-0.038148, -0.110626, 0.002019), (-0.038861, -0.111848, -0.002481), (-0.038912, -0.111848, -0.006555), (-0.039117, -0.111848, -0.010628), (-0.056882, 0.111848, -0.010628), (-0.05678, 0.111848, -0.006555), (-0.056754, 0.111848, -0.002481), (-0.055969, 0.110626, 0.000394), (-0.055969, -0.110626, 0.000394), (-0.056754, -0.111848, -0.002481), (-0.05678, -0.111848, -0.006555), (-0.056882, -0.111848, -0.010628), (0.085844, -0.110783, -0.001328), (0.085844, 0.110783, -0.001328), (0.08629, -0.11168, -0.002156), (0.08629, 0.11168, -0.002156), (0.086679, -0.11168, -0.002156), (0.086679, 0.11168, -0.002156), (0.078905, 0.111848, -0.010628), (0.080095, 0.111848, -0.006555), (0.080392, 0.111848, -0.002481), (0.080421, 0.110626, 0.001675), (0.080421, -0.110626, 0.001675), (0.080392, -0.111848, -0.002481), (0.080095, -0.111848, -0.006555), (0.078905, -0.111848, -0.010628), (0.086521, -0.110857, -0.00208), (0.086521, -0.111848, -0.002481), (0.086521, 0.110858, -0.00208), (0.086521, 0.111848, -0.002481), (-0.07092, 0.111848, -0.010628), (-0.070893, 0.111848, -0.006555), (-0.070887, 0.111848, -0.002481), (-0.070049, 0.110626, -0.001087), (-0.070049, -0.110626, -0.001087), (-0.070887, -0.111848, -0.002481), (-0.070893, -0.111848, -0.006555), (-0.07092, -0.111848, -0.010628)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(0.351924, 0.830795), (0.351949, 0.668207), (0.353164, 0.668196), (0.35314, 0.830806), (0.357122, 0.83237), (0.356403, 0.83237), (0.356405, 0.830806), (0.357081, 0.830806), (0.357081, 0.830806), (0.356405, 0.830806), (0.356405, 0.668196), (0.357081, 0.668196), (0.356403, 0.666891), (0.357122, 0.666891), (0.357081, 0.668196), (0.356405, 0.668196), (0.356405, 0.830806), (0.35314, 0.830806), (0.353164, 0.668196), (0.356405, 0.668196), (0.357081, 0.830806), (0.357081, 0.668196), (0.358592, 0.668196), (0.358592, 0.830806), (0.356405, 0.830806), (0.356403, 0.83237), (0.353157, 0.832388), (0.35314, 0.830806), (0.353186, 0.666876), (0.356403, 0.666891), (0.356405, 0.668196), (0.353164, 0.668196), (0.357081, 0.668196), (0.357122, 0.666891), (0.358666, 0.666891), (0.358592, 0.668196), (0.358592, 0.830806), (0.358623, 0.83237), (0.357122, 0.83237), (0.357081, 0.830806), (0.360103, 0.830806), (0.360103, 0.668196), (0.361614, 0.668196), (0.361614, 0.830806), (0.361614, 0.830806), (0.361626, 0.83237), (0.360125, 0.83237), (0.360103, 0.830806), (0.360103, 0.668196), (0.360209, 0.666891), (0.361753, 0.666891), (0.361614, 0.668196), (0.361614, 0.830806), (0.361614, 0.668196), (0.363068, 0.668137), (0.363065, 0.830806), (0.363065, 0.830806), (0.363059, 0.83237), (0.361626, 0.83237), (0.361614, 0.830806), (0.361614, 0.668196), (0.361753, 0.666891), (0.363068, 0.666891), (0.363068, 0.668137), (0.358592, 0.830806), (0.358592, 0.668196), (0.360103, 0.668196), (0.360103, 0.830806), (0.360103, 0.830806), (0.360125, 0.83237), (0.358623, 0.83237), (0.358592, 0.830806), (0.358592, 0.668196), (0.358666, 0.666891), (0.360209, 0.666891), (0.360103, 0.668196), (0.363421, 0.831275), (0.363421, 0.667848), (0.363891, 0.667848), (0.363891, 0.831275), (0.363068, 0.668137), (0.363068, 0.666891), (0.363421, 0.667249), (0.363421, 0.667848), (0.363059, 0.83237), (0.363065, 0.830806), (0.363421, 0.831275), (0.363421, 0.831927), (0.363891, 0.667848), (0.364437, 0.667848), (0.364428, 0.831275), (0.363891, 0.831275), (0.363068, 0.668137), (0.363421, 0.667848), (0.363421, 0.831275), (0.363065, 0.830806)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_Book_9_0"
        {
            token outputs:surface.connect = </root/_materials/M_Book_9_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_Book_9_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Book_Cover_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Book_9_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

