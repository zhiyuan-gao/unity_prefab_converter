#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshTelevision_27_0_GeomSubset_1"
    {
        def Mesh "MeshTelevision_27_0_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [4, 5, 7, 6, 148, 48, 50, 147, 146, 52, 54, 145, 147, 50, 52, 146, 149, 31, 48, 148, 31, 43, 50, 48, 40, 30, 49, 51, 35, 39, 54, 52, 39, 144, 145, 54, 38, 34, 53, 55, 43, 35, 52, 50, 34, 40, 51, 53, 64, 65, 69, 68, 65, 154, 155, 69, 66, 67, 71, 70, 161, 64, 68, 160, 68, 69, 73, 72, 69, 155, 156, 73, 70, 71, 75, 74, 160, 68, 72, 159, 72, 73, 77, 76, 73, 156, 157, 77, 74, 75, 79, 78, 159, 72, 76, 158, 145, 144, 38, 55, 53, 146, 145, 55, 51, 147, 146, 53, 49, 148, 147, 51, 30, 149, 148, 49, 155, 154, 66, 70, 156, 155, 70, 74, 157, 156, 74, 78, 75, 159, 158, 79, 71, 160, 159, 75, 67, 161, 160, 71]
            rel material:binding = </root/_materials/M_Television_27_1>
            normal3f[] normals = [(0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, -0.9952472, -0.09738122), (0, -0.9952472, -0.09738122), (0.0000010781695, -0.9865591, -0.16340546), (0, -0.9865798, -0.1632803), (4.084974e-7, -0.9174822, -0.3977768), (0.000003284754, -0.91748255, -0.39777595), (0, -0.8259281, -0.5637755), (0, -0.8259281, -0.5637755), (0, -0.9865798, -0.1632803), (0.0000010781695, -0.9865591, -0.16340546), (0.000003284754, -0.91748255, -0.39777595), (4.084974e-7, -0.9174822, -0.3977768), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 5.542046e-9), (0, -1, 5.5419935e-9), (0, -1, 0), (0, -1, 7.88288e-9), (0, -1, 0), (0, -1, 0), (0, -1, 4.761769e-9), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0.4349068, -0.9004755, 0), (0.4349068, -0.9004755, 0), (0.4349068, -0.9004755, 0), (0.4349068, -0.9004755, 0), (0, -0.7197023, 0.69428295), (0, -0.71970224, 0.6942828), (0, -0.71970224, 0.6942828), (0, -0.7197023, 0.69428295), (-0.4349068, -0.9004755, 0), (-0.4349068, -0.9004755, 0), (-0.4349068, -0.9004755, 0), (-0.4349068, -0.9004755, 0), (0, -0.71966535, -0.69432116), (0, -0.7196652, -0.69432116), (0, -0.7196652, -0.69432116), (0, -0.71966535, -0.69432116), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -0.91748255, -0.39777595), (4.084974e-7, -0.9174822, -0.3977768), (0, -0.8259281, -0.5637755), (0, -0.8259281, -0.5637755), (0, -0.9865591, -0.16340546), (0, -0.9865798, -0.1632803), (4.084974e-7, -0.9174822, -0.3977768), (0, -0.91748255, -0.39777595), (0, -0.9952472, -0.09738122), (0, -0.9952472, -0.09738122), (0, -0.9865798, -0.1632803), (0, -0.9865591, -0.16340546), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, -1, 5.5419935e-9), (0, -1, 5.542046e-9), (0, -1, 7.88288e-9), (0, -1, 4.761769e-9), (0, -0.71970224, 0.6942828), (0, -0.71970224, 0.6942828), (0, -0.71970224, 0.69428277), (0, -0.71970224, 0.69428277), (0, -0.71966535, -0.69432104), (0, -0.71966535, -0.69432116), (0, -0.71966535, -0.69432116), (0, -0.71966535, -0.69432104), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 0.99999994), (0, 0, 1), (0, 0, 1), (0, 0, 0.99999994)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.001248, 0.04392, 0.028301), (0.001248, 0.04392, 0.028301), (-0.001248, 0.046416, 0.028301), (0.001248, 0.046416, 0.028301), (-0.001248, 0.04392, 0.028301), (0.001248, 0.04392, 0.028301), (-0.001248, 0.046416, 0.028301), (0.001248, 0.046416, 0.028301), (-0.001248, 0.04392, 0.028301), (0.001248, 0.04392, 0.028301), (-0.001248, 0.046416, 0.028301), (0.001248, 0.046416, 0.028301), (-0.001248, 0.04392, 0.028301), (0.001248, 0.04392, 0.028301), (-0.001248, 0.046416, 0.028301), (0.001248, 0.046416, 0.028301), (-0.001248, 0.04392, 0.028301), (0.001248, 0.04392, 0.028301), (-0.001248, 0.046416, 0.028301), (0.001248, 0.046416, 0.028301), (-0.838897, 0.045168, 0.589002), (0.838897, 0.045168, -0.461546), (-0.838897, -0.030395, 0.589002), (0.838897, -0.030395, 0.589002), (0.838897, 0.045168, 0.589002), (-0.838897, 0.045168, -0.461546), (0.838897, -0.030395, -0.461546), (-0.838897, -0.030395, -0.461546), (0.838897, 0.045168, -0.476807), (-0.838897, 0.045168, -0.476807), (0.838897, -0.030327, -0.476807), (-0.838897, -0.030327, -0.476807), (0.838897, 0.045168, -0.570919), (-0.838897, 0.045168, -0.570919), (0.838897, -0.015985, -0.570919), (-0.838897, -0.015985, -0.570919), (0.838897, 0.045168, -0.605384), (-0.838897, 0.045168, -0.605384), (0.838897, 0.011182, -0.605384), (-0.838897, 0.011182, -0.605384), (0.838897, -0.025628, -0.526395), (0.838897, 0.045168, -0.526395), (-0.838897, 0.045168, -0.526395), (-0.838897, -0.025628, -0.526395), (-0.829295, -0.030395, 0.579391), (-0.829295, -0.030395, -0.451935), (0.829295, -0.030395, -0.451935), (0.829295, -0.030395, 0.579391), (-0.838897, -0.045835, -0.476807), (0.838897, -0.045835, -0.476807), (-0.838897, -0.040983, -0.526395), (0.838897, -0.040983, -0.526395), (-0.838897, -0.030258, -0.57092), (0.838897, -0.030258, -0.57092), (-0.838897, -0.006733, -0.605384), (0.838897, -0.006733, -0.605384), (-0.838899, -0.046004, 0.589002), (-0.838897, -0.046004, -0.461546), (-0.829296, -0.046004, -0.451935), (-0.829295, -0.046004, 0.579391), (0.838899, -0.046004, -0.461546), (0.829295, -0.046004, -0.451935), (0.838897, -0.046004, 0.589002), (0.829296, -0.046004, 0.579391), (-0.821487, -0.030395, 0.572107), (-0.821487, -0.030395, -0.444652), (0.821491, -0.030395, -0.444652), (0.821491, -0.030395, 0.572107), (-0.821487, -0.046004, 0.572107), (-0.821487, -0.046004, -0.444652), (0.821491, -0.046004, -0.444652), (0.821491, -0.046004, 0.572107), (-0.756588, -0.046004, 0.446005), (-0.756588, -0.046004, -0.311541), (0.756589, -0.046004, -0.311541), (0.756589, -0.046004, 0.446005), (-0.737587, -0.036827, 0.436493), (-0.737587, -0.036827, -0.302028), (0.737588, -0.036827, -0.302028), (0.737588, -0.036827, 0.436493), (-0.838897, 0.030508, 0.589002), (-0.838897, 0.018048, 0.589002), (-0.838897, 0.018048, -0.461546), (-0.838897, 0.030508, -0.461546), (-0.838897, 0.018048, -0.476807), (-0.838897, 0.030508, -0.476807), (-0.838897, 0.018048, -0.526395), (-0.838897, 0.030508, -0.526395), (-0.838897, 0.018048, -0.570919), (-0.838897, 0.030508, -0.570919), (-0.838897, 0.018048, -0.605384), (-0.838897, 0.030508, -0.605384), (0.838897, 0.018048, -0.605384), (0.838897, 0.030508, -0.605384), (0.838897, 0.018048, -0.570919), (0.838897, 0.030508, -0.570919), (0.838897, 0.018048, -0.526395), (0.838897, 0.030508, -0.526395), (0.838897, 0.018048, -0.476807), (0.838897, 0.030508, -0.476807), (0.838897, 0.018048, -0.461546), (0.838897, 0.030508, -0.461546), (0.838897, 0.018048, 0.589002), (0.838897, 0.030508, 0.589002), (-0.83002, 0.030508, 0.580716), (-0.83002, 0.018048, 0.580716), (0.83002, 0.018048, 0.580716), (0.83002, 0.030508, 0.580716), (-0.821141, 0.030508, -0.461546), (-0.821141, 0.018048, -0.461546), (-0.821141, 0.030508, -0.476807), (-0.821141, 0.018048, -0.476807), (-0.821141, 0.030508, -0.526395), (-0.821141, 0.018048, -0.526395), (-0.821141, 0.030508, -0.570919), (-0.821141, 0.018048, -0.570919), (-0.83002, 0.030508, -0.597098), (-0.83002, 0.018048, -0.597098), (0.830019, 0.030508, -0.597099), (0.83002, 0.018048, -0.597099), (0.821141, 0.030508, -0.57092), (0.821141, 0.018048, -0.57092), (0.821141, 0.030508, -0.526395), (0.821141, 0.018048, -0.526395), (0.821141, 0.030508, -0.476807), (0.821141, 0.018048, -0.476807), (0.821141, 0.030508, -0.461546), (0.821141, 0.018048, -0.461546), (-0.000001, -0.046004, 0.589002), (0, -0.030395, 0.589002), (0, 0.018048, 0.589002), (0, 0.018048, 0.580716), (0, 0.030508, 0.580716), (0, 0.030508, 0.589002), (0, 0.045168, 0.589002), (0, 0.045168, -0.461546), (0, 0.045168, -0.476807), (0, 0.045168, -0.526395), (0, 0.045168, -0.570919), (0, 0.045168, -0.605384), (0, 0.030508, -0.605384), (0, 0.030508, -0.597098), (0, 0.018048, -0.597098), (0, 0.018048, -0.605384), (0, 0.011182, -0.605384), (0, -0.006733, -0.605384), (0, -0.030258, -0.57092), (0, -0.040983, -0.526395), (0, -0.045835, -0.476807), (0, -0.030327, -0.476807), (0, -0.030395, -0.461546), (0.000001, -0.046004, -0.461546), (-0.000001, -0.046004, -0.451935), (0, -0.030395, -0.451935), (0.000002, -0.030395, -0.444652), (0.000002, -0.046004, -0.444652), (0.000001, -0.046004, -0.311541), (0.000001, -0.036827, -0.302028), (0.000001, -0.036827, 0.436493), (0.000001, -0.046004, 0.446005), (0.000002, -0.046004, 0.572107), (0.000002, -0.030395, 0.572107), (0, -0.030395, 0.579391), (0.000001, -0.046004, 0.579391)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-30.686825, -18.173258), (-30.686825, -18.17474), (-30.685343, -18.17474), (-30.685343, -18.173258), (-31.466148, 0.5), (-31.466148, 1.558138), (-31.528696, 1.558138), (-31.528696, 0.5), (-31.430923, 0.5), (-31.430923, 1.759365), (-31.46624, 1.759365), (-31.46624, 0.5), (-31.528696, 0.5), (-31.528696, 1.558138), (-31.584858, 1.558138), (-31.584858, 0.5), (-31.476164, 0.500001), (-31.476164, 1.549648), (-31.495573, 1.549648), (-31.495573, 0.500001), (-30.736149, 0.120608), (-30.742031, 0.058553), (-30.722816, 0.058553), (-30.716742, 0.120608), (-30.721548, 0.058552), (-30.727425, 0.120602), (-30.746832, 0.120602), (-30.74076, 0.058552), (-30.754097, 0.002835), (-30.78809, -0.040295), (-30.765676, -0.040295), (-30.736237, 0.002835), (-31.493134, 1.759365), (-31.493134, 0.5), (-31.46624, 0.5), (-31.46624, 1.759365), (-30.675486, -0.040289), (-30.709478, 0.002838), (-30.72734, 0.002838), (-30.697903, -0.040289), (-30.742031, 0.058553), (-30.754097, 0.002835), (-30.736237, 0.002835), (-30.722816, 0.058553), (-30.709478, 0.002838), (-30.721548, 0.058552), (-30.74076, 0.058552), (-30.72734, 0.002838), (-30.806763, 0.939906), (-30.806763, -0.332328), (-30.787235, -0.332328), (-30.787235, 0.939906), (-31.448963, 1.517807), (-31.448963, 0.489665), (-31.429436, 0.489665), (-31.429436, 1.517807), (-30.771088, -0.332365), (-30.771088, 0.939943), (-30.790619, 0.939943), (-30.790619, -0.332365), (-30.803377, 0.489665), (-30.803377, 1.517598), (-30.822908, 1.517598), (-30.822908, 0.489665), (-30.482006, 1.530118), (-31.76978, 1.530118), (-31.60118, 1.44792), (-30.64172, 1.44792), (-31.76978, 1.530118), (-31.76978, 0.489665), (-31.60118, 0.489667), (-31.60118, 1.44792), (-31.76978, -0.550787), (-30.482006, -0.550787), (-30.64172, -0.468586), (-31.60118, -0.468586), (-30.482006, 0.489665), (-30.482006, 1.530118), (-30.64172, 1.44792), (-30.64172, 0.489667), (-30.64172, 1.44792), (-31.60118, 1.44792), (-31.589142, 1.423855), (-30.653765, 1.423855), (-31.60118, 1.44792), (-31.60118, 0.489667), (-31.589142, 0.489667), (-31.589142, 1.423855), (-31.60118, -0.468586), (-30.64172, -0.468586), (-30.653765, -0.444521), (-31.589142, -0.444521), (-30.64172, 0.489667), (-30.64172, 1.44792), (-30.653765, 1.423855), (-30.653765, 0.489667), (-31.46624, 0.5), (-31.493134, 0.5), (-31.493134, -0.759365), (-31.46624, -0.759365), (-31.430923, -0.759365), (-31.430923, 0.5), (-31.46624, 0.5), (-31.46624, -0.759365), (-31.528696, -0.558137), (-31.528696, 0.5), (-31.584858, 0.5), (-31.584858, -0.558137), (-31.466148, -0.558137), (-31.466148, 0.5), (-31.528696, 0.5), (-31.528696, -0.558137), (-31.476164, -0.549648), (-31.476164, 0.500001), (-31.495573, 0.500001), (-31.495573, -0.549648), (-31.429436, 0.489665), (-31.448963, 0.489665), (-31.448963, -0.538475), (-31.429436, -0.538475), (-31.60118, 0.489667), (-31.76978, 0.489665), (-31.76978, -0.550787), (-31.60118, -0.468586), (-31.589142, 0.489667), (-31.60118, 0.489667), (-31.60118, -0.468586), (-31.589142, -0.444521), (-30.64172, -0.468586), (-30.64172, 0.489667), (-30.653765, 0.489667), (-30.653765, -0.444521), (-30.482006, -0.550787), (-30.482006, 0.489665), (-30.64172, 0.489667), (-30.64172, -0.468586), (-30.803377, -0.538268), (-30.803377, 0.489665), (-30.822908, 0.489665), (-30.822908, -0.538268)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_Television_27_1"
        {
            token outputs:surface.connect = </root/_materials/M_Television_27_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_Television_27_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_Television_27_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/MetalBumpy_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Television_27_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/MetalBumpy_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Television_27_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

