#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.0"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "RobothorWallDecor_3_4"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "RobothorWallDecor_3_4" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.270584, -0.001652, -0.533252), (0.273086, 0.019121, 0.358831)]
            int[] faceVertexCounts = [4, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 28, 30, 29, 28, 31, 30, 4, 5, 7, 6, 12, 14, 13, 12, 15, 14, 13, 17, 16, 13, 14, 17, 16, 19, 18, 16, 17, 19, 20, 22, 21, 20, 23, 22, 13, 18, 12, 13, 16, 18, 17, 15, 19, 17, 14, 15, 24, 15, 12, 24, 23, 15, 20, 18, 19, 20, 25, 18, 25, 12, 18, 25, 24, 12, 23, 19, 15, 23, 20, 19, 25, 21, 26, 25, 20, 21, 24, 26, 27, 24, 25, 26, 23, 27, 22, 23, 24, 27, 29, 22, 27, 29, 30, 22, 31, 26, 21, 31, 28, 26, 28, 27, 26, 28, 29, 27, 30, 21, 22, 30, 31, 21, 8, 9, 11, 10]
            rel material:binding = </root/_materials/M_RobothorWallDecor_3_4_0>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.0003497736, -0.99999994, 0.0000027664137), (-0.00034977295, -1, 0.0000027051972), (-0.00034973197, -0.99999994, -0.000002757041), (-0.0003497736, -0.99999994, 0.0000027664137), (-0.0003497328, -0.99999994, -0.000002605952), (-0.00034977295, -1, 0.0000027051972), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1.0151753e-8, 0, 1), (-2.5054914e-10, 0, 1), (-1.0402302e-8, 0, 1), (-1.0151753e-8, 0, 1), (0, 0, 1), (-2.5054914e-10, 0, 1), (0.00034580336, 1, 0), (0.00034580336, 1, 0), (0.00034580333, 0.99999994, 0), (0.00034580336, 1, 0), (0.00034580333, 1, 0), (0.00034580336, 1, 0), (3.733375e-8, 0, -1), (-8.024325e-8, 0, -1), (4.0308922e-8, 0, -1), (3.733375e-8, 0, -1), (-8.321841e-8, 0, -1), (-8.024325e-8, 0, -1), (-0.99999994, 0.0003813194, 0), (-0.99999994, 0.00037310942, 0), (-0.99999994, 0.00038135966, 0), (-0.99999994, 0.0003813194, 0), (-0.9999999, 0.00037306917, 0), (-0.99999994, 0.00037310942, 0), (-0.99999994, 0.00033898462, 0), (-0.99999994, 0.00033898462, 0), (-0.99999994, 0.00033898462, 0), (-0.99999994, 0.00033898462, 0), (-0.9999999, 0.0003389846, 0), (-0.99999994, 0.00033898462, 0), (0.99999994, -0.0003390592, 0), (0.99999994, -0.00034296978, 0), (0.9999999, -0.0003389846, 0), (0.99999994, -0.0003390592, 0), (0.99999994, -0.00034304432, 0), (0.99999994, -0.00034296978, 0), (-0.00027519692, -1, -0.000079712525), (-0.00027280202, -0.99999994, 0.000073718336), (-0.00026903205, -1, -0.00007472292), (-0.00027519692, -1, -0.000079712525), (-0.00027941758, -1, 0.000086205895), (-0.00027280202, -0.99999994, 0.000073718336), (-0.0002751903, -1, -0.00007970562), (-0.00027281244, -0.99999994, 0.00007372532), (-0.00026902082, -0.99999994, -0.00007471211), (-0.0002751903, -1, -0.00007970562), (-0.00027942308, -0.9999999, 0.00008620813), (-0.00027281244, -0.99999994, 0.00007372532), (-0.00027942308, -0.9999999, 0.00008620813), (-0.00026903205, -1, -0.00007472292), (-0.00027281244, -0.99999994, 0.00007372532), (-0.00027942308, -0.9999999, 0.00008620813), (-0.00027519692, -1, -0.000079712525), (-0.00026903205, -1, -0.00007472292), (-0.00027941758, -1, 0.000086205895), (-0.00026902082, -0.99999994, -0.00007471211), (-0.00027280202, -0.99999994, 0.000073718336), (-0.00027941758, -1, 0.000086205895), (-0.0002751903, -1, -0.00007970562), (-0.00026902082, -0.99999994, -0.00007471211), (2.6855759e-8, 0, 1), (1.7550796e-10, 0, 1), (2.7031264e-8, 0, 1), (2.6855759e-8, 0, 1), (0, 0, 1), (1.7550796e-10, 0, 1), (0.99999994, -0.00037314967, 0), (0.99999994, -0.00038956958, 0), (0.9999999, -0.00037306917, 0), (0.99999994, -0.00037314967, 0), (0.99999994, -0.0003896501, 0), (0.99999994, -0.00038956958, 0), (4.2407613e-8, 0, -1), (-8.5657625e-8, 0, -1), (4.3250022e-8, 0, -1), (4.2407613e-8, 0, -1), (-8.650003e-8, 0, -1), (-8.5657625e-8, 0, -1), (-0.00034973197, -0.99999994, -0.000002757041), (-0.00034990528, -1, 0.0000046610835), (-0.00034983177, -1, -0.0000048689453), (-0.00034973197, -0.99999994, -0.000002757041), (-0.00034977295, -1, 0.0000027051972), (-0.00034990528, -1, 0.0000046610835), (-0.0003497328, -0.99999994, -0.000002605952), (-0.0003499037, -0.99999994, 0.000004768956), (-0.00034983034, -0.99999994, -0.0000046027917), (-0.0003497328, -0.99999994, -0.000002605952), (-0.0003497736, -0.99999994, 0.0000027664137), (-0.0003499037, -0.99999994, 0.000004768956), (-0.0003497736, -0.99999994, 0.0000027664137), (-0.00034983177, -1, -0.0000048689453), (-0.0003499037, -0.99999994, 0.000004768956), (-0.0003497736, -0.99999994, 0.0000027664137), (-0.00034973197, -0.99999994, -0.000002757041), (-0.00034983177, -1, -0.0000048689453), (-0.00034977295, -1, 0.0000027051972), (-0.00034983034, -0.99999994, -0.0000046027917), (-0.00034990528, -1, 0.0000046610835), (-0.00034977295, -1, 0.0000027051972), (-0.0003497328, -0.99999994, -0.000002605952), (-0.00034983034, -0.99999994, -0.0000046027917), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.000716, 0.014515, -0.533252), (0.001259, 0.014515, -0.533252), (0.000716, 0.015059, -0.533252), (0.001259, 0.015059, -0.533252), (0.000716, 0.014515, -0.533252), (0.001259, 0.014515, -0.533252), (0.000716, 0.015059, -0.533252), (0.001259, 0.015059, -0.533252), (0.000716, 0.014515, -0.533252), (0.001259, 0.014515, -0.533252), (0.000716, 0.015059, -0.533252), (0.001259, 0.015059, -0.533252), (-0.270584, -0.001464, 0.358831), (-0.270577, 0.019121, 0.358831), (0.273086, 0.018933, 0.358831), (0.273079, -0.001652, 0.358831), (-0.270577, 0.019121, -0.354409), (0.273086, 0.018933, -0.354409), (-0.270584, -0.001464, -0.354409), (0.273079, -0.001652, -0.354409), (0.258185, -0.001649, -0.340934), (0.258187, 0.003589, -0.340934), (0.258187, 0.003589, 0.345356), (0.258185, -0.001649, 0.345356), (-0.255691, -0.001467, 0.345356), (-0.255691, -0.001467, -0.340934), (-0.255689, 0.003771, -0.340934), (-0.255689, 0.003771, 0.345356), (-0.252774, 0.00377, -0.336795), (-0.252774, 0.00377, 0.341216), (0.255272, 0.00359, 0.341216), (0.255272, 0.00359, -0.336795)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-9.379675, -9.755537), (-9.379675, -9.75594), (-9.379271, -9.75594), (-9.379271, -9.755537), (-10, 0), (-9, 1), (-10, 1), (-10, 0), (-9, 0), (-9, 1), (-19.367811, -9.606503), (-19.367811, -9.606655), (-19.36766, -9.606655), (-19.36766, -9.606503), (-19.399242, 1.655747), (-19.326004, -0.296396), (-19.325327, 1.655722), (-19.399242, 1.655747), (-19.399921, -0.29637), (-19.326004, -0.296396), (-18.254433, 1.653423), (-20.206722, -0.948468), (-18.254433, -0.948468), (-18.254433, 1.653423), (-20.206722, 1.653423), (-20.206722, -0.948468), (-19.420115, 1.655813), (-19.345512, -0.296461), (-19.346191, 1.655838), (-19.420115, 1.655813), (-19.419436, -0.296487), (-19.345512, -0.296461), (-19.19536, -1.013786), (-19.214174, 1.489076), (-19.214174, -1.013786), (-19.19536, -1.013786), (-19.19536, 1.489076), (-19.214174, 1.489076), (-19.653618, 1.547942), (-19.579699, -1.054139), (-19.579699, 1.547941), (-19.653618, 1.547942), (-19.653618, -1.054139), (-19.579699, -1.054139), (-19.55826, -1.054136), (-19.63218, 1.547939), (-19.63218, -1.054136), (-19.55826, -1.054136), (-19.55826, 1.547939), (-19.63218, 1.547939), (-20.3196, 1.498694), (-18.420782, 1.547853), (-20.373081, 1.547853), (-20.3196, 1.498694), (-18.474264, 1.498694), (-18.420782, 1.547853), (-18.474264, -1.00489), (-20.373081, -1.05405), (-18.420782, -1.05405), (-18.474264, -1.00489), (-20.3196, -1.00489), (-20.373081, -1.05405), (-20.3196, -1.00489), (-20.373081, 1.547853), (-20.373081, -1.05405), (-20.3196, -1.00489), (-20.3196, 1.498694), (-20.373081, 1.547853), (-18.474264, 1.498694), (-18.420782, -1.05405), (-18.420782, 1.547853), (-18.474264, 1.498694), (-18.474264, -1.00489), (-18.420782, -1.05405), (-19.406876, 1.592117), (-19.388725, -0.252911), (-19.388067, 1.592111), (-19.406876, 1.592117), (-19.407534, -0.252906), (-19.388725, -0.252911), (-19.204422, 1.489431), (-19.185612, -1.014141), (-19.185612, 1.489431), (-19.204422, 1.489431), (-19.204422, -1.014141), (-19.185612, -1.014141), (-19.39787, -0.252727), (-19.417332, 1.591933), (-19.416674, -0.252732), (-19.39787, -0.252727), (-19.398527, 1.591938), (-19.417332, 1.591933), (-20.087671, 1.967932), (-18.253311, 1.983028), (-20.098143, 1.983028), (-20.087671, 1.967932), (-18.263783, 1.967932), (-18.253311, 1.983028), (-18.263783, -0.504777), (-20.098143, -0.519872), (-18.253311, -0.519872), (-18.263783, -0.504777), (-20.087671, -0.504777), (-20.098143, -0.519872), (-20.087671, -0.504777), (-20.098143, 1.983028), (-20.098143, -0.519872), (-20.087671, -0.504777), (-20.087671, 1.967932), (-20.098143, 1.983028), (-18.263783, 1.967932), (-18.253311, -0.519872), (-18.253311, 1.983028), (-18.263783, 1.967932), (-18.263783, -0.504777), (-18.253311, -0.519872), (-29.683226, -9.316775), (-29.683226, -9.683225), (-29.317055, -9.683225), (-29.317055, -9.316775)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_RobothorWallDecor_3_4_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2]
                rel material:binding = </root/_materials/M_RobothorWallDecor_3_4_0>
            }

            def GeomSubset "M_RobothorWallDecor_3_4_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]
                rel material:binding = </root/_materials/M_RobothorWallDecor_3_4_1>
            }

            def GeomSubset "M_RobothorWallDecor_3_4_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [38]
                rel material:binding = </root/_materials/M_RobothorWallDecor_3_4_2>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_RobothorWallDecor_3_4_0"
        {
            token outputs:surface.connect = </root/_materials/M_RobothorWallDecor_3_4_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_RobothorWallDecor_3_4_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Wall_Decor_Photo_2V_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_RobothorWallDecor_3_4_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_RobothorWallDecor_3_4_1"
        {
            token outputs:surface.connect = </root/_materials/M_RobothorWallDecor_3_4_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.14705884, 0.14705884, 0.14705884)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }

        def Material "M_RobothorWallDecor_3_4_2"
        {
            token outputs:surface.connect = </root/_materials/M_RobothorWallDecor_3_4_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (1, 0.97794116, 0.97794116)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_RobothorWallDecor_3_4_2/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_RobothorWallDecor_3_4_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

