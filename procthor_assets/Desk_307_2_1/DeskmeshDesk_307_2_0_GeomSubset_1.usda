#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "DeskmeshDesk_307_2_0_GeomSubset_1"
    {
        def Mesh "DeskmeshDesk_307_2_0_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [3, 3, 4, 4, 4, 4]
            int[] faceVertexIndices = [89, 91, 88, 89, 90, 91, 89, 88, 93, 92, 94, 93, 88, 91, 90, 95, 94, 91, 90, 89, 92, 95]
            rel material:binding = </root/_materials/M_Desk_307_2_1>
            normal3f[] normals = [(-1, 0.000004472585, 0), (-1, 6.0509956e-7, 0), (-0.99999994, 1.4481861e-7, 0), (-1, 0.000004472585, 0), (-1, 0.000004932866, 0), (-1, 6.0509956e-7, 0), (0, 0.99999994, 0.00034084372), (0, 0.99999994, 0.00034084372), (0.00004777114, 0.00034085568, -1), (-4.371139e-8, 0.00034085565, -0.99999994), (0, -0.0003738842, 1), (0, -0.0003738842, 1), (0, -0.0003738842, 1), (0, -0.0003738842, 1), (0, -0.9999999, -0.00034084372), (1.1221369e-7, 0.9999999, 0.00038861472), (-2.0881428e-12, 0.9999999, 0.00038861486), (0, -0.9999999, -0.00034084372), (0, 0.0003731892, -1), (0, 0.0003731892, -1), (1.9466206e-7, -0.00042095993, 1), (-2.0881428e-12, -0.00042096034, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.382438, -0.25064, -0.453332), (0.397129, -0.25064, -0.453332), (0.397129, -0.250915, 0.342392), (0.382438, -0.250915, 0.342392), (0.382438, 0.273129, -0.455493), (0.397129, 0.273129, -0.455493), (0.397129, -0.24817, -0.455673), (0.382438, -0.24817, -0.455673), (0.382438, 0.275322, 0.342574), (0.397129, 0.275322, 0.342574), (0.397129, 0.275597, -0.45315), (0.382438, 0.275597, -0.45315), (0.382438, -0.248447, 0.344736), (0.397129, -0.248447, 0.344736), (0.397129, 0.272852, 0.344916), (0.382438, 0.272852, 0.344916), (0.399819, -0.248171, -0.453331), (0.399819, 0.273128, -0.453151), (0.399819, 0.272853, 0.342574), (0.399819, -0.248446, 0.342393), (0.379747, -0.248171, -0.453331), (0.379747, -0.248446, 0.342393), (0.379747, 0.273128, -0.453151), (0.379747, 0.272853, 0.342574), (0.384242, -0.246006, 0.260136), (0.384242, 0.259276, 0.260311), (0.384242, 0.25925, 0.339027), (0.384242, -0.246033, 0.338852), (-0.404273, 0.259276, 0.260311), (-0.404273, 0.25925, 0.339027), (-0.404273, -0.246006, 0.260136), (-0.404273, -0.246033, 0.338852), (0.379605, -0.246007, 0.264274), (0.379605, -0.256723, 0.26427), (-0.399637, -0.256723, 0.26427), (-0.399637, -0.246007, 0.264274), (-0.419224, -0.269724, 0.34231), (0.409545, -0.269724, 0.34231), (0.409545, -0.269727, 0.352085), (-0.419224, -0.269727, 0.352085), (-0.422078, 0.265353, 0.342495), (-0.422078, -0.267317, 0.342311), (-0.422078, -0.26732, 0.352086), (-0.422078, 0.265349, 0.35227), (-0.419224, 0.265349, 0.354817), (-0.419224, -0.267321, 0.354633), (0.409545, -0.267321, 0.354633), (0.409545, 0.265349, 0.354817), (0.412399, -0.267317, 0.342311), (0.412399, 0.265353, 0.342495), (0.412399, 0.265349, 0.35227), (0.412399, -0.26732, 0.352086), (0.409545, 0.26776, 0.342496), (-0.419224, 0.26776, 0.342496), (-0.419224, 0.267756, 0.352271), (0.409545, 0.267756, 0.352271), (0.379605, -0.246031, 0.334715), (-0.399637, -0.246031, 0.334715), (0.379605, -0.256747, 0.334711), (-0.399637, -0.256747, 0.334711), (0.409545, -0.267316, 0.339764), (0.409545, 0.265354, 0.339948), (-0.419224, -0.267316, 0.339764), (-0.419224, 0.265354, 0.339948), (-0.417241, -0.25064, -0.453332), (-0.40255, -0.25064, -0.453332), (-0.40255, -0.250915, 0.342392), (-0.417241, -0.250915, 0.342392), (-0.417241, 0.273129, -0.455493), (-0.40255, 0.273129, -0.455493), (-0.40255, -0.24817, -0.455673), (-0.417241, -0.24817, -0.455673), (-0.417241, 0.275322, 0.342574), (-0.40255, 0.275322, 0.342574), (-0.40255, 0.275597, -0.45315), (-0.417241, 0.275597, -0.45315), (-0.417241, -0.248447, 0.344736), (-0.40255, -0.248447, 0.344736), (-0.40255, 0.272852, 0.344916), (-0.417241, 0.272852, 0.344916), (-0.399859, -0.248171, -0.453331), (-0.399859, 0.273128, -0.453151), (-0.399859, 0.272853, 0.342574), (-0.399859, -0.248446, 0.342393), (-0.419931, -0.248171, -0.453331), (-0.419931, -0.248446, 0.342393), (-0.419931, 0.273128, -0.453151), (-0.419931, 0.272853, 0.342574), (0.384772, 0.239021, -0.141918), (0.384772, 0.238997, -0.071477), (0.384772, 0.249718, -0.071473), (0.384772, 0.249742, -0.141914), (-0.410267, 0.238997, -0.071477), (-0.410267, 0.239021, -0.141918), (-0.410267, 0.249742, -0.141914), (-0.410267, 0.249718, -0.071473)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(0.816118, 0.715807), (0.822484, 0.675357), (0.816118, 0.675357), (0.816118, 0.715807), (0.822484, 0.715807), (0.822484, 0.675357), (-0.812998, 0.715807), (-0.812998, 0.675357), (-0.401989, 0.675357), (-0.401989, 0.715807), (0.598011, 0.822484), (0.598011, 0.816118), (0.187002, 0.816118), (0.187002, 0.822484), (-0.812998, 0.715807), (-0.401989, 0.715807), (-0.401989, 0.675357), (-0.812998, 0.675357), (-0.812998, 0.822484), (-0.812998, 0.816118), (-0.401989, 0.816118), (-0.401989, 0.822484)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_Desk_307_2_1"
        {
            token outputs:surface.connect = </root/_materials/M_Desk_307_2_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_Desk_307_2_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_Desk_307_2_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/LightWoodCounters.jpg@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Desk_307_2_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Desk_307_2_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

