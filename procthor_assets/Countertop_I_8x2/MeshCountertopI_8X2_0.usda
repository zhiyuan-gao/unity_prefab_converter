#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "CountertopI_8X2"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "CountertopI_8X2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-1.219162, -0.302853, -0.518111), (1.219238, 0.306747, 0.417919)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [12, 13, 1, 5, 1, 3, 6, 5, 2, 0, 4, 7, 5, 6, 9, 12, 1, 13, 8, 3, 6, 3, 8, 9, 12, 9, 7, 4, 0, 13, 12, 4, 8, 13, 0, 2, 10, 2, 7, 11, 9, 8, 14, 15, 17, 16, 18, 19, 15, 14, 16, 17, 8, 2, 16, 14, 2, 10, 18, 16, 10, 11, 19, 18, 11, 7, 17, 19, 7, 9, 15, 17]
            rel material:binding = </root/_materials/M_CountertopI_8X2_0>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 1.5782615e-7, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 1.578258e-7, 0), (-1, 0, 0), (-1.0670692e-9, 0, 1), (-1.0670692e-9, 0, 1), (-1.0670692e-9, 0, 1), (-1.0670692e-9, 0, 1), (1, 0, 0), (1, 1.5782615e-7, 0), (1, 1.0496816e-7, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 1.578258e-7, 0), (-1, 0, 0), (-1, 0, 0), (-1, 9.986952e-8, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (2.0777537e-7, 1, -6.214384e-7), (2.0777537e-7, 1, -6.214384e-7), (2.0777537e-7, 1, -6.214384e-7), (2.0777537e-7, 1, -6.214384e-7), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 1.578258e-7, 0), (-1, 9.986952e-8, 0), (-1, 8.988301e-8, 0), (-1, 4.734769e-7, 0), (-1, 9.986952e-8, 0), (-1, -2.3878252e-7, 0), (-1, -2.3878252e-7, 0), (-1, 8.988301e-8, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, -2.1225114e-7, 0), (1, 1.0496816e-7, 0), (1, 1.04172095e-7, 0), (1, -2.1225114e-7, 0), (1, 1.0496816e-7, 0), (1, 1.5782615e-7, 0), (1, 4.7347768e-7, 0), (1, 1.04172095e-7, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(1.219238, 0.306747, 0.417919), (1.219238, -0.302853, 0.417919), (1.219238, 0.306747, 0.38792), (1.219238, -0.302853, 0.387919), (-1.219162, 0.306747, 0.417919), (-1.219162, -0.302853, 0.417919), (-1.219162, -0.302853, 0.387919), (-1.219162, 0.306747, 0.38792), (1.219238, -0.282853, 0.387919), (-1.219162, -0.282852, 0.387919), (1.219238, 0.306747, -0.518111), (-1.219162, 0.306747, -0.518111), (-1.219162, -0.282852, 0.417919), (1.219238, -0.282852, 0.417919), (1.219238, -0.282853, -0.438112), (-1.219162, -0.282853, -0.438112), (1.219238, -0.262853, -0.438112), (-1.219162, -0.262853, -0.438112), (1.219238, -0.262853, -0.518111), (-1.219162, -0.262853, -0.518111)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-7.832847, -0.095979), (-11.642849, -0.09598), (-11.642849, -0.127231), (-7.832847, -0.127231), (-11.642853, 0.508766), (-11.642855, 0.461893), (-7.832841, 0.461892), (-7.832842, 0.508767), (-11.642898, 0.526816), (-11.642898, 0.479943), (-7.832795, 0.479942), (-7.832796, 0.526816), (-9.840604, 0.559307), (-9.840604, 0.512433), (-9.809351, 0.512433), (-9.809351, 0.559307), (-8.88809, 0.577357), (-8.919341, 0.577357), (-8.919341, 0.530483), (-8.88809, 0.530483), (-7.832844, 0.535012), (-11.642851, 0.535012), (-11.642851, 0.503762), (-7.832844, 0.503762), (-9.809351, 0.559307), (-9.809351, 0.512433), (-8.88808, 0.512433), (-8.88808, 0.559307), (-11.642849, 0.825268), (-11.642849, -0.09598), (-7.832847, -0.095979), (-7.832847, 0.825268), (-8.919341, 0.530483), (-8.919341, 0.577357), (-9.840593, 0.577357), (-9.840593, 0.530483), (-20.391285, 0.41513), (-20.391285, -0.29271), (-18.486288, -0.29271), (-18.486288, 0.41513), (-18.486286, 0.647285), (-20.391287, 0.647285), (-20.391287, 0.001949), (-18.486286, 0.001949), (-18.48629, 0.497209), (-20.391285, 0.497209), (-20.391285, 0.434709), (-18.48629, 0.434709), (-18.486319, 0.495041), (-20.391256, 0.495041), (-20.391256, 0.479418), (-18.486319, 0.479418), (-20.29253, 0.976656), (-20.29253, 0.516031), (-19.647194, 0.961029), (-19.647194, 0.976656), (-20.29253, 0.516031), (-19.584694, 0.516031), (-19.584694, 0.961029), (-19.647194, 0.961029), (-20.391289, 0.358692), (-18.486286, 0.358692), (-18.486286, 0.803694), (-20.391289, 0.803693), (-19.584696, 0.796118), (-20.29253, 0.796117), (-19.647194, 0.351116), (-19.584696, 0.351116), (-20.29253, 0.796117), (-20.29253, 0.335493), (-19.647194, 0.335493), (-19.647194, 0.351116)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_CountertopI_8X2_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8]
                rel material:binding = </root/_materials/M_CountertopI_8X2_0>
            }

            def GeomSubset "M_CountertopI_8X2_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [9, 10, 11, 12, 13, 14, 15, 16, 17]
                rel material:binding = </root/_materials/M_CountertopI_8X2_1>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_CountertopI_8X2_0"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopI_8X2_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopI_8X2_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/marbleBase2.jpg@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopI_8X2_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_CountertopI_8X2_1"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopI_8X2_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopI_8X2_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_CountertopI_8X2_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/DarkWood2.tif@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopI_8X2_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopI_8X2_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

