#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "FridgeDrawer1_22_FridgeDrawer1D4_1_GeomSubset_6"
    {
        def Mesh "FridgeDrawer1_22_FridgeDrawer1D4_1_GeomSubset_6"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4]
            int[] faceVertexIndices = [24, 25, 27, 26]
            rel material:binding = </root/_materials/M_FridgeDrawer1D4_6>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.044441, 0.042273, -0.89557), (0.04443, 0.042273, -0.89557), (0.044441, 0.042282, -0.89557), (0.04443, 0.042282, -0.89557), (0.044441, 0.042273, -0.89557), (0.04443, 0.042273, -0.89557), (0.044441, 0.042282, -0.89557), (0.04443, 0.042282, -0.89557), (0.044441, 0.042273, -0.89557), (0.04443, 0.042273, -0.89557), (0.044441, 0.042282, -0.89557), (0.04443, 0.042282, -0.89557), (0.044441, 0.042273, -0.89557), (0.04443, 0.042273, -0.89557), (0.044441, 0.042282, -0.89557), (0.04443, 0.042282, -0.89557), (0.044441, 0.042273, -0.89557), (0.04443, 0.042273, -0.89557), (0.044441, 0.042282, -0.89557), (0.04443, 0.042282, -0.89557), (0.044441, 0.042273, -0.89557), (0.04443, 0.042273, -0.89557), (0.044441, 0.042282, -0.89557), (0.04443, 0.042282, -0.89557), (0.044441, 0.042273, -0.89557), (0.04443, 0.042273, -0.89557), (0.044441, 0.042282, -0.89557), (0.04443, 0.042282, -0.89557), (0.059047, 0.219421, -0.262002), (-0.533911, 0.219423, -0.262002), (0.059046, -0.248813, -0.262002), (-0.533912, -0.248811, -0.262002), (-0.18098, 0.219422, -0.262002), (-0.096231, 0.219422, -0.262002), (-0.378633, 0.219423, -0.262002), (-0.293884, 0.219422, -0.262002), (-0.180981, -0.270547, -0.262002), (-0.096564, -0.265924, -0.262002), (-0.378302, -0.265923, -0.262002), (-0.293885, -0.270547, -0.262002), (-0.096231, 0.219422, -0.487788), (0.059047, 0.219421, -0.487788), (-0.378633, 0.219423, -0.487788), (-0.533911, 0.219423, -0.487788), (-0.293884, 0.219422, -0.487788), (-0.18098, 0.219422, -0.487788), (0.048667, 0.210355, -0.262002), (-0.523531, 0.210357, -0.262002), (0.048666, -0.240816, -0.262002), (-0.523532, -0.240814, -0.262002), (-0.18098, 0.210356, -0.262002), (-0.096231, 0.210355, -0.262002), (-0.378633, 0.210356, -0.262002), (-0.293884, 0.210356, -0.262002), (-0.181306, -0.26148, -0.262002), (-0.097538, -0.256893, -0.262002), (-0.377328, -0.256892, -0.262002), (-0.29356, -0.26148, -0.262002), (0.048667, 0.210355, -0.478936), (-0.523531, 0.210357, -0.478936), (-0.18098, 0.210356, -0.478936), (-0.096231, 0.210355, -0.478936), (-0.378633, 0.210356, -0.478936), (-0.293884, 0.210356, -0.478936), (0.059047, 0.219421, -0.27034), (-0.096231, 0.219422, -0.27034), (0.059046, -0.248813, -0.270341), (-0.096564, -0.265924, -0.270341), (-0.533912, -0.248811, -0.270341), (-0.378302, -0.265923, -0.270341), (-0.533911, 0.219423, -0.27034), (-0.378633, 0.219423, -0.27034), (-0.293885, -0.270547, -0.270341), (-0.180981, -0.270547, -0.270341), (-0.18098, 0.219422, -0.27034), (-0.293884, 0.219422, -0.27034), (-0.29356, -0.26148, -0.270341), (-0.377328, -0.256892, -0.270341), (-0.523532, -0.240814, -0.270341), (-0.523531, 0.210357, -0.27034), (-0.378633, 0.210356, -0.27034), (-0.293884, 0.210356, -0.27034), (-0.18098, 0.210356, -0.27034), (-0.096231, 0.210355, -0.27034), (0.048667, 0.210355, -0.27034), (0.048666, -0.240816, -0.270341), (-0.097538, -0.256893, -0.270341), (-0.181306, -0.26148, -0.270341), (0.060469, 0.220663, -0.263708), (-0.535333, 0.220665, -0.263708), (0.060468, -0.249908, -0.263708), (-0.535334, -0.249906, -0.263708), (-0.18098, 0.220664, -0.263708), (-0.096231, 0.220664, -0.263708), (-0.378633, 0.220665, -0.263708), (-0.293884, 0.220664, -0.263708), (-0.180937, -0.271789, -0.263708), (-0.096431, -0.267161, -0.263708), (-0.378436, -0.26716, -0.263708), (-0.29393, -0.271789, -0.263708), (0.060469, 0.220663, -0.268634), (-0.096231, 0.220664, -0.268634), (0.060468, -0.249908, -0.268634), (-0.096431, -0.267161, -0.268634), (-0.535334, -0.249906, -0.268634), (-0.378436, -0.26716, -0.268634), (-0.535333, 0.220665, -0.268634), (-0.378633, 0.220665, -0.268634), (-0.29393, -0.271789, -0.268634), (-0.180937, -0.271789, -0.268634), (-0.18098, 0.220664, -0.268634), (-0.293884, 0.220664, -0.268634), (-0.096564, -0.265924, -0.452509), (-0.096541, -0.231769, -0.487788), (0.059046, -0.248813, -0.452509), (0.059046, -0.214658, -0.487788), (-0.378326, -0.231768, -0.487788), (-0.378302, -0.265923, -0.452509), (-0.533912, -0.214656, -0.487788), (-0.533912, -0.248811, -0.452509), (-0.180981, -0.236392, -0.487788), (-0.180981, -0.270547, -0.452509), (-0.293885, -0.270547, -0.452509), (-0.293885, -0.236392, -0.487788), (0.048666, -0.206661, -0.478936), (0.048666, -0.240816, -0.443657), (-0.523532, -0.240814, -0.443657), (-0.523532, -0.206659, -0.478936), (-0.181283, -0.227325, -0.478936), (-0.181306, -0.26148, -0.443657), (-0.097538, -0.256893, -0.443657), (-0.097443, -0.222738, -0.478936), (-0.377424, -0.222737, -0.478936), (-0.377328, -0.256892, -0.443657), (-0.293583, -0.227325, -0.478936), (-0.29356, -0.26148, -0.443657), (-0.378317, -0.244839, -0.485103), (-0.293885, -0.249462, -0.485103), (-0.378309, -0.255919, -0.477455), (-0.293885, -0.260543, -0.477455), (-0.378304, -0.263323, -0.46601), (-0.293885, -0.267947, -0.46601), (-0.180981, -0.249463, -0.485103), (-0.09655, -0.244839, -0.485103), (-0.180981, -0.260543, -0.477455), (-0.096557, -0.25592, -0.477455), (-0.180981, -0.267947, -0.46601), (-0.096562, -0.263324, -0.46601), (-0.533912, -0.227727, -0.485103), (-0.533912, -0.238807, -0.477455), (-0.533912, -0.246211, -0.46601), (0.059046, -0.227728, -0.485103), (0.059046, -0.238809, -0.477455), (0.059046, -0.246213, -0.46601), (0.048666, -0.219732, -0.476251), (-0.097479, -0.235808, -0.476251), (0.048666, -0.230812, -0.468603), (-0.09751, -0.246889, -0.468603), (0.048666, -0.238216, -0.457158), (-0.097531, -0.254293, -0.457158), (-0.377387, -0.235808, -0.476251), (-0.523532, -0.21973, -0.476251), (-0.377356, -0.246888, -0.468603), (-0.523532, -0.23081, -0.468603), (-0.377336, -0.254292, -0.457158), (-0.523532, -0.238214, -0.457158), (-0.181292, -0.240396, -0.476251), (-0.293574, -0.240396, -0.476251), (-0.1813, -0.251477, -0.468603), (-0.293567, -0.251476, -0.468603), (-0.181305, -0.25888, -0.457158), (-0.293562, -0.25888, -0.457158)]
            bool[] primvars:sharp_face = [0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-5.253075, -117.71076), (-3.54152, -117.71076), (-3.54152, -115.99921), (-5.253075, -115.99921)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer1D4_6"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1D4_6/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1D4_6/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1D4_6/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Readout_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D4_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D4_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

