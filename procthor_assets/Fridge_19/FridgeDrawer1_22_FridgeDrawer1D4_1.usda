#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "FridgeDrawer1D4"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "FridgeDrawer1D4" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.535334, -0.271789, -0.89557), (0.060469, 0.220665, -0.262002)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 8, 8, 4, 4, 4, 4, 4, 4, 8, 4, 4, 8, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 4, 5, 7, 6, 33, 28, 46, 51, 28, 30, 48, 46, 30, 37, 55, 48, 37, 36, 54, 55, 36, 39, 57, 54, 39, 38, 56, 57, 38, 31, 49, 56, 31, 29, 47, 49, 29, 34, 52, 47, 34, 35, 53, 52, 35, 32, 50, 53, 32, 33, 51, 50, 107, 111, 95, 94, 108, 105, 98, 99, 103, 109, 96, 97, 110, 101, 93, 92, 111, 110, 92, 95, 109, 108, 99, 96, 106, 107, 94, 89, 104, 106, 89, 91, 105, 104, 91, 98, 102, 103, 97, 90, 100, 102, 90, 88, 101, 100, 88, 93, 77, 76, 57, 56, 77, 56, 49, 78, 79, 78, 49, 47, 80, 79, 47, 52, 81, 80, 52, 53, 82, 81, 53, 50, 83, 82, 50, 51, 84, 83, 51, 46, 85, 84, 46, 48, 86, 85, 48, 55, 87, 86, 55, 54, 76, 87, 54, 57, 28, 33, 93, 88, 33, 32, 92, 93, 32, 35, 95, 92, 35, 34, 94, 95, 34, 29, 89, 94, 29, 31, 91, 89, 31, 38, 98, 91, 38, 39, 99, 98, 39, 36, 96, 99, 36, 37, 97, 96, 37, 30, 90, 97, 30, 28, 88, 90, 65, 64, 100, 101, 64, 66, 102, 100, 66, 67, 103, 102, 67, 73, 109, 103, 73, 72, 108, 109, 72, 69, 105, 108, 69, 68, 104, 105, 68, 70, 106, 104, 70, 71, 107, 106, 71, 75, 111, 107, 75, 74, 110, 111, 74, 65, 101, 110, 8, 9, 11, 10, 12, 13, 15, 14, 16, 17, 19, 18, 135, 129, 87, 76, 130, 86, 87, 129, 130, 125, 85, 86, 125, 158, 156, 154, 124, 58, 84, 85, 59, 127, 161, 163, 165, 126, 78, 79, 133, 77, 78, 126, 133, 135, 76, 77, 122, 117, 69, 72, 73, 67, 112, 121, 121, 122, 72, 73, 65, 40, 41, 64, 119, 150, 149, 148, 118, 43, 70, 68, 117, 119, 68, 69, 114, 112, 67, 66, 41, 115, 151, 152, 153, 114, 66, 64, 70, 43, 42, 71, 134, 132, 62, 63, 75, 44, 45, 74, 74, 45, 40, 65, 61, 131, 128, 60, 60, 128, 134, 63, 71, 42, 44, 75, 127, 59, 62, 132, 61, 58, 124, 131, 115, 41, 40, 113, 80, 62, 59, 79, 81, 63, 62, 80, 82, 60, 63, 81, 83, 61, 60, 82, 84, 58, 61, 83, 43, 118, 116, 42, 45, 44, 123, 120, 120, 113, 40, 45, 44, 42, 116, 123, 123, 116, 136, 137, 137, 136, 138, 139, 139, 138, 140, 141, 141, 140, 117, 122, 113, 120, 142, 143, 143, 142, 144, 145, 145, 144, 146, 147, 147, 146, 121, 112, 120, 123, 137, 142, 142, 137, 139, 144, 144, 139, 141, 146, 146, 141, 122, 121, 116, 118, 148, 136, 136, 148, 149, 138, 138, 149, 150, 140, 140, 150, 119, 117, 115, 113, 143, 151, 151, 143, 145, 152, 152, 145, 147, 153, 153, 147, 112, 114, 131, 124, 154, 155, 155, 154, 156, 157, 157, 156, 158, 159, 159, 158, 125, 130, 127, 132, 160, 161, 161, 160, 162, 163, 163, 162, 164, 165, 165, 164, 133, 126, 134, 128, 166, 167, 167, 166, 168, 169, 169, 168, 170, 171, 171, 170, 129, 135, 128, 131, 155, 166, 166, 155, 157, 168, 168, 157, 159, 170, 170, 159, 130, 129, 132, 134, 167, 160, 160, 167, 169, 162, 162, 169, 171, 164, 164, 171, 135, 133, 20, 21, 23, 22, 24, 25, 27, 26]
            rel material:binding = </root/_materials/M_FridgeDrawer1D4_0>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (7.039078e-8, 0, -1), (-8.477585e-7, 0, -1), (-7.583488e-7, 0, -1), (7.039038e-8, 0, -1), (-8.477585e-7, 0, -1), (-8.496336e-7, 0, -1), (-7.5553845e-7, 0, -1), (-7.583488e-7, 0, -1), (-8.496336e-7, 0, -1), (0, 0, -1), (0, 0, -1), (-7.5553845e-7, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-7.66112e-8, 0, -1), (-7.578995e-8, 0, -1), (0, 0, -1), (-7.66112e-8, 0, -1), (-7.494489e-8, 0, -1), (-7.7399385e-8, 0, -1), (-7.578995e-8, 0, -1), (-7.494489e-8, 0, -1), (8.4962966e-7, 0, -1), (7.555396e-7, 0, -1), (-7.7399385e-8, 0, -1), (8.4962966e-7, 0, -1), (8.840951e-7, 0, -1), (7.9923245e-7, 0, -1), (7.555396e-7, 0, -1), (8.840951e-7, 0, -1), (3.9747132e-8, 0, -1), (3.9746894e-8, 0, -1), (7.9923245e-7, 0, -1), (3.9747132e-8, 0, -1), (0, 0, -1), (0, 0, -1), (3.9746894e-8, 0, -1), (0, 0, -1), (7.039064e-8, 0, -1), (7.0390904e-8, 0, -1), (0, 0, -1), (7.039064e-8, 0, -1), (7.039078e-8, 0, -1), (7.039038e-8, 0, -1), (7.0390904e-8, 0, -1), (0.000010028343, -0.9127802, 0.40845078), (-0.000005387731, -0.9129028, 0.40817717), (-1.066002e-7, -0.9129028, -0.40817714), (-0.000005364814, -0.9127802, -0.40845078), (0.02820437, 0.91383487, 0.4051056), (0.06860782, 0.91166645, 0.4051634), (0.06859526, 0.9116651, -0.40516832), (0.028191956, 0.9138498, -0.4050727), (-0.06861143, 0.9116527, 0.40519372), (-0.028208103, 0.91383624, 0.40510213), (-0.028191254, 0.913834, -0.40510845), (-0.06860014, 0.91165125, -0.40519866), (-0.0000050659946, -0.912903, 0.40817663), (-0.00000291944, -0.9127812, 0.40844896), (0.0000020685952, -0.9127812, -0.40844893), (0, -0.912903, -0.40817663), (-0.000005387731, -0.9129028, 0.40817717), (-0.0000050659946, -0.912903, 0.40817663), (0, -0.912903, -0.40817663), (-1.066002e-7, -0.9129028, -0.40817714), (-0.028208103, 0.91383624, 0.40510213), (0.02820437, 0.91383487, 0.4051056), (0.028191956, 0.9138498, -0.4050727), (-0.028191254, 0.913834, -0.40510845), (0.0000024922192, -0.9471557, 0.32077417), (0.000010028343, -0.9127802, 0.40845078), (-0.000005364814, -0.9127802, -0.40845078), (0, -0.9471557, -0.32077414), (0.9290826, -0.000003054738, 0.36987242), (0.93257785, -0.000002336839, 0.3609689), (0.9325722, -0.0000027939677, -0.36098343), (0.9290861, -0.0000020306638, -0.3698636), (0.06860782, 0.91166645, 0.4051634), (0.103241555, 0.9388208, 0.3285676), (0.10320544, 0.9388548, -0.32848173), (0.06859526, 0.9116651, -0.40516832), (-0.1032055, 0.93881476, 0.32859612), (-0.06861143, 0.9116527, 0.40519372), (-0.06860014, 0.91165125, -0.40519866), (-0.10323395, 0.93881387, -0.3285898), (-0.93257725, 9.49949e-7, 0.36097032), (-0.9290817, 0.0000016781078, 0.36987448), (-0.9290852, 0.0000013038516, -0.3698657), (-0.93257165, 0.0000019801337, -0.3609848), (-0.00000291944, -0.9127812, 0.40844896), (-0.0000060526972, -0.94715697, 0.32077068), (0.0000015087426, -0.94715697, -0.32077068), (0.0000020685952, -0.9127812, -0.40844893), (-0.07441346, -0.9972275, 0), (-0.031414542, -0.9995065, -1.9482972e-7), (-0.031377718, -0.9995076, 0), (-0.07439151, -0.99722916, 6.6985084e-10), (-0.07441346, -0.9972275, 0), (-0.07439151, -0.99722916, 6.6985084e-10), (-0.1093106, -0.99400765, 0), (-0.10931061, -0.99400765, 0), (-1, 0.0000021320316, 8.6786926e-8), (-1, 0.0000021320316, 8.678717e-8), (-1, 0.0000021042104, 0), (-1, 0.0000021042104, 0), (0.0000034451016, 1, 0), (0.000006890203, 1, 0), (0.0000068901973, 1, 0), (0.0000034450986, 1, 0), (0, 1, 0), (0.0000034451016, 1, 0), (0.0000034450986, 1, 0), (0, 1, 0), (0.000005890199, 1, 0), (0, 1, 0), (0, 1, 0), (0.0000058901937, 1, 0), (0.000005890199, 1, 0), (0.000005890199, 1, 0), (0.0000058901937, 1, 0), (0.0000058901937, 1, 0), (0, 1, 0), (0.000005890199, 1, 0), (0.0000058901937, 1, 0), (0, 1, 0), (1, -0.000002218187, -9.0855295e-8), (1, -0.000002218187, -9.085503e-8), (1, -0.0000022125155, 0), (1, -0.0000022125155, 0), (0.0744042, -0.9972282, 0.0000021961414), (0.10930411, -0.9940084, 0), (0.10930417, -0.99400836, 0), (0.074430674, -0.99722624, 0), (0.031408526, -0.9995066, 0), (0.0744042, -0.9972282, 0.0000021961414), (0.074430674, -0.99722624, 0), (0.0314202, -0.99950624, -0.0000015613342), (-0.031414542, -0.9995065, -1.9482972e-7), (0.031408526, -0.9995066, 0), (0.0314202, -0.99950624, -0.0000015613342), (-0.031377718, -0.9995076, 0), (-0.0000051493043, -0.8084565, -0.588556), (-0.0000025746554, -0.8084533, -0.5885603), (0.0000020685952, -0.9127812, -0.40844893), (0.0000015087426, -0.94715697, -0.32077068), (-0.0000025746554, -0.8084533, -0.5885603), (0, -0.8084494, -0.5885657), (0, -0.912903, -0.40817663), (0.0000020685952, -0.9127812, -0.40844893), (0, -0.8084494, -0.5885657), (-0.000004738858, -0.80844945, -0.5885657), (-1.066002e-7, -0.9129028, -0.40817714), (0, -0.912903, -0.40817663), (-0.000004738858, -0.80844945, -0.5885657), (-0.000004738879, -0.8084506, -0.58856404), (-0.000005364814, -0.9127802, -0.40845078), (-1.066002e-7, -0.9129028, -0.40817714), (-0.000004738879, -0.8084506, -0.58856404), (0, -0.80845094, -0.5885635), (0, -0.9471557, -0.32077414), (-0.000005364814, -0.9127802, -0.40845078), (0.7681511, -0.0000017866971, -0.64026856), (0.7681511, -0.0000017866971, -0.64026856), (0.9290861, -0.0000020306638, -0.3698636), (0.9325722, -0.0000027939677, -0.36098343), (0.08831946, 0.8031468, -0.5891985), (0.059499558, 0.8059606, -0.5889713), (0.06859526, 0.9116651, -0.40516832), (0.10320544, 0.9388548, -0.32848173), (0.059499558, 0.8059606, -0.5889713), (0.025124375, 0.80792445, -0.5887502), (0.028191956, 0.9138498, -0.4050727), (0.06859526, 0.9116651, -0.40516832), (0.025124375, 0.80792445, -0.5887502), (-0.025126684, 0.80793995, -0.5887288), (-0.028191254, 0.913834, -0.40510845), (0.028191956, 0.9138498, -0.4050727), (-0.025126684, 0.80793995, -0.5887288), (-0.059497416, 0.805948, -0.58898866), (-0.06860014, 0.91165125, -0.40519866), (-0.028191254, 0.913834, -0.40510845), (-0.059497416, 0.805948, -0.58898866), (-0.08831686, 0.8031638, -0.58917564), (-0.10323395, 0.93881387, -0.3285898), (-0.06860014, 0.91165125, -0.40519866), (-0.7681483, 0.0000016331469, -0.64027196), (-0.7681483, 0.0000016331469, -0.64027196), (-0.93257165, 0.0000019801337, -0.3609848), (-0.9290852, 0.0000013038516, -0.3698657), (-0.00001979312, -0.76980686, 0.6382768), (-0.00002463162, -0.677953, 0.7351053), (-0.0000060526972, -0.94715697, 0.32077068), (-0.00000291944, -0.9127812, 0.40844896), (-0.6113001, -0.000011032091, 0.7913989), (-0.6180941, 0.000005558133, 0.7861041), (-0.9290817, 0.0000016781078, 0.36987448), (-0.93257725, 9.49949e-7, 0.36097032), (-0.074612215, 0.6786206, 0.7306894), (-0.05756525, 0.7695667, 0.6359665), (-0.06861143, 0.9116527, 0.40519372), (-0.1032055, 0.93881476, 0.32859612), (-0.05756525, 0.7695667, 0.6359665), (-0.025685824, 0.771708, 0.63545805), (-0.028208103, 0.91383624, 0.40510213), (-0.06861143, 0.9116527, 0.40519372), (-0.025685824, 0.771708, 0.63545805), (0.025713982, 0.7717045, 0.6354611), (0.02820437, 0.91383487, 0.4051056), (-0.028208103, 0.91383624, 0.40510213), (0.025713982, 0.7717045, 0.6354611), (0.057392053, 0.76957357, 0.6359738), (0.06860782, 0.91166645, 0.4051634), (0.02820437, 0.91383487, 0.4051056), (0.057392053, 0.76957357, 0.6359738), (0.07472363, 0.6785964, 0.73070055), (0.103241555, 0.9388208, 0.3285676), (0.06860782, 0.91166645, 0.4051634), (0.61809635, 0.000006906288, 0.7861024), (0.61130255, -0.0000154078, 0.791397), (0.93257785, -0.000002336839, 0.3609689), (0.9290826, -0.000003054738, 0.36987242), (0.000010324836, -0.67794913, 0.73510885), (-0.0000058900505, -0.76980543, 0.6382785), (0.000010028343, -0.9127802, 0.40845078), (0.0000024922192, -0.9471557, 0.32077417), (-0.0000058900505, -0.76980543, 0.6382785), (-0.0000058900414, -0.7698046, 0.6382797), (-0.000005387731, -0.9129028, 0.40817717), (0.000010028343, -0.9127802, 0.40845078), (-0.0000058900414, -0.7698046, 0.6382797), (0, -0.7698047, 0.63827944), (-0.0000050659946, -0.912903, 0.40817663), (-0.000005387731, -0.9129028, 0.40817717), (0, -0.7698047, 0.63827944), (-0.00001979312, -0.76980686, 0.6382768), (-0.00000291944, -0.9127812, 0.40844896), (-0.0000050659946, -0.912903, 0.40817663), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.031094417, -0.98290503, -0.18146846), (0.031101655, -0.9829047, -0.18146934), (0.031408526, -0.9995066, 0), (-0.031414542, -0.9995065, -1.9482972e-7), (0.072309434, -0.98082155, -0.1809982), (0.0744042, -0.9972282, 0.0000021961414), (0.031408526, -0.9995066, 0), (0.031101655, -0.9829047, -0.18146934), (0.072309434, -0.98082155, -0.1809982), (0.107512765, -0.97739255, -0.18205754), (0.10930411, -0.9940084, 0), (0.0744042, -0.9972282, 0.0000021961414), (1, -0.0000022238587, -1.8171033e-7), (1, -0.0000022238587, -1.8171033e-7), (1, -0.0000022238587, -1.8171033e-7), (1, -0.0000022238587, -1.8171033e-7), (1, -0.0000022238587, -1.8171033e-7), (1, -0.0000022238587, -1.8171033e-7), (1, -0.000002218187, -9.085503e-8), (1, -0.000002218187, -9.0855295e-8), (-0.99999994, 0.0000021598526, 1.7357408e-7), (-0.99999994, 0.0000021598526, 1.7357408e-7), (-0.99999994, 0.0000021598526, 1.7357408e-7), (-0.99999994, 0.0000021598526, 1.7357408e-7), (-0.99999994, 0.0000021598526, 1.7357408e-7), (-0.99999994, 0.0000021598526, 1.7357408e-7), (-1, 0.0000021320316, 8.678717e-8), (-1, 0.0000021320316, 8.6786926e-8), (-0.072301455, -0.980823, -0.18099368), (-0.07441346, -0.9972275, 0), (-0.10931061, -0.99400765, 0), (-0.107503355, -0.977394, -0.18205513), (-0.072301455, -0.980823, -0.18099368), (-0.031094417, -0.98290503, -0.18146846), (-0.031414542, -0.9995065, -1.9482972e-7), (-0.07441346, -0.9972275, 0), (0.030503595, 0.98502827, 0.16967338), (0.07310578, 0.98286724, 0.16919675), (0.057392053, 0.76957357, 0.6359738), (0.025713982, 0.7717045, 0.6354611), (-0.025685824, 0.771708, 0.63545805), (-0.05756525, 0.7695667, 0.6359665), (-0.07310495, 0.9828748, 0.169153), (-0.030502103, 0.9850281, 0.16967414), (-0.030502103, 0.9850281, 0.16967414), (0.030503595, 0.98502827, 0.16967338), (0.025713982, 0.7717045, 0.6354611), (-0.025685824, 0.771708, 0.63545805), (-0.00001979312, -0.76980686, 0.6382768), (-0.0000032148077, -1, 0), (-0.0000064296155, -1, 0), (-0.00002463162, -0.677953, 0.7351053), (1, -0.000002172939, -1.7042908e-7), (1, -0.000002172939, -1.7042908e-7), (1, -0.000002172939, -1.7042908e-7), (1, -0.000002172939, -1.7042908e-7), (1, -0.000002172939, -1.7042908e-7), (1, -0.000002172939, -1.7042908e-7), (0.61130255, -0.0000154078, 0.791397), (0.61809635, 0.000006906288, 0.7861024), (0.07310578, 0.98286724, 0.16919675), (0.1077215, 0.9795775, 0.16977644), (0.07472363, 0.6785964, 0.73070055), (0.057392053, 0.76957357, 0.6359738), (-0.107701376, 0.9795795, 0.16977732), (-0.07310495, 0.9828748, 0.169153), (-0.05756525, 0.7695667, 0.6359665), (-0.074612215, 0.6786206, 0.7306894), (-1, 0.0000021349808, 1.6792272e-7), (-1, 0.0000021349808, 1.6792272e-7), (-1, 0.0000021349808, 1.6792272e-7), (-1, 0.0000021349808, 1.6792272e-7), (-1, 0.0000021349808, 1.6792272e-7), (-1, 0.0000021349808, 1.6792272e-7), (-0.6180941, 0.000005558133, 0.7861041), (-0.6113001, -0.000011032091, 0.7913989), (0.000010324836, -0.67794913, 0.73510885), (0, -1, 0), (-0.000005890206, -1, 0), (-0.0000058900505, -0.76980543, 0.6382785), (-0.0057102023, -0.20515215, -0.97871345), (-0.01709068, -0.2047464, -0.9786659), (-1.2069208e-7, 0, -1), (0, 0, -1), (-0.0000058900414, -0.7698046, 0.6382797), (-0.0000058902065, -1, 0), (0, -1, 0), (0, -0.7698047, 0.63827944), (0, -0.7698047, 0.63827944), (0, -1, 0), (-0.0000032148077, -1, 0), (-0.00001979312, -0.76980686, 0.6382768), (7.9203815e-8, 0, -1), (0.017101033, -0.20474926, -0.97866505), (0.005690093, -0.20515409, -0.9787131), (0, 0, -1), (0, 0, -1), (0.005690093, -0.20515409, -0.9787131), (-0.0057102023, -0.20515215, -0.97871345), (0, 0, -1), (-0.0000058900505, -0.76980543, 0.6382785), (-0.000005890206, -1, 0), (-0.0000058902065, -1, 0), (-0.0000058900414, -0.7698046, 0.6382797), (-0.020896165, -0.18997237, -0.981567), (-2.4095596e-7, 0, -1), (-1.2069208e-7, 0, -1), (-0.01709068, -0.2047464, -0.9786659), (7.9203815e-8, 0, -1), (1.5812687e-7, 0, -1), (0.020892903, -0.1899761, -0.98156637), (0.017101033, -0.20474926, -0.97866505), (-0.019295597, 0.17508395, 0.9843644), (-2.1659126e-7, 0, 1), (8.578322e-8, 0, 1), (-0.016102672, 0.19245926, 0.9811728), (0.0000034451016, 1, 0), (0.0000034451045, 1, 0), (0.000006890209, 1, 0), (0.000006890203, 1, 0), (0, 1, 0), (0, 1, 0), (0.0000034451045, 1, 0), (0.0000034451016, 1, 0), (0.000005890199, 1, 0), (0.000005890204, 1, 0), (0, 1, 0), (0, 1, 0), (0.000005890199, 1, 0), (0.000005890204, 1, 0), (0.000005890204, 1, 0), (0.000005890199, 1, 0), (0, 1, 0), (0, 1, 0), (0.000005890204, 1, 0), (0.000005890199, 1, 0), (0, 0, 1), (0.01929393, 0.17507724, 0.9843656), (0.016091213, 0.19245638, 0.9811736), (-9.099583e-8, 0, 1), (1.9421066e-7, 0, 1), (-9.103579e-8, 0, 1), (0.0053908406, 0.19278635, 0.9812259), (-0.00540259, 0.19278589, 0.9812259), (-0.00540259, 0.19278589, 0.9812259), (-0.016102672, 0.19245926, 0.9811728), (8.578322e-8, 0, 1), (1.9421066e-7, 0, 1), (-9.103579e-8, 0, 1), (-9.099583e-8, 0, 1), (0.016091213, 0.19245638, 0.9811736), (0.0053908406, 0.19278635, 0.9812259), (0.0053908406, 0.19278635, 0.9812259), (0.016091213, 0.19245638, 0.9811736), (0.029614648, 0.39209592, 0.91944754), (0.0122126965, 0.3950254, 0.9185891), (0.0122126965, 0.3950254, 0.9185891), (0.029614648, 0.39209592, 0.91944754), (0.053798147, 0.71601075, 0.6960132), (0.022089338, 0.71849054, 0.6951858), (0.022089338, 0.71849054, 0.6951858), (0.053798147, 0.71601075, 0.6960132), (0.06928213, 0.925366, 0.3726898), (0.028542668, 0.92770904, 0.37221116), (0.028542668, 0.92770904, 0.37221116), (0.06928213, 0.925366, 0.3726898), (0.07310578, 0.98286724, 0.16919675), (0.030503595, 0.98502827, 0.16967338), (-0.016102672, 0.19245926, 0.9811728), (-0.00540259, 0.19278589, 0.9812259), (-0.01225352, 0.39501342, 0.91859365), (-0.029608116, 0.3920907, 0.91945), (-0.029608116, 0.3920907, 0.91945), (-0.01225352, 0.39501342, 0.91859365), (-0.02208594, 0.7184915, 0.695185), (-0.05378983, 0.71600777, 0.69601685), (-0.05378983, 0.71600777, 0.69601685), (-0.02208594, 0.7184915, 0.695185), (-0.028493403, 0.9277135, 0.37220398), (-0.069317326, 0.92536676, 0.37268174), (-0.069317326, 0.92536676, 0.37268174), (-0.028493403, 0.9277135, 0.37220398), (-0.030502103, 0.9850281, 0.16967414), (-0.07310495, 0.9828748, 0.169153), (-0.00540259, 0.19278589, 0.9812259), (0.0053908406, 0.19278635, 0.9812259), (0.0122126965, 0.3950254, 0.9185891), (-0.01225352, 0.39501342, 0.91859365), (-0.01225352, 0.39501342, 0.91859365), (0.0122126965, 0.3950254, 0.9185891), (0.022089338, 0.71849054, 0.6951858), (-0.02208594, 0.7184915, 0.695185), (-0.02208594, 0.7184915, 0.695185), (0.022089338, 0.71849054, 0.6951858), (0.028542668, 0.92770904, 0.37221116), (-0.028493403, 0.9277135, 0.37220398), (-0.028493403, 0.9277135, 0.37220398), (0.028542668, 0.92770904, 0.37221116), (0.030503595, 0.98502827, 0.16967338), (-0.030502103, 0.9850281, 0.16967414), (0.016091213, 0.19245638, 0.9811736), (0.01929393, 0.17507724, 0.9843656), (0.041708793, 0.3795619, 0.9242256), (0.029614648, 0.39209592, 0.91944754), (0.029614648, 0.39209592, 0.91944754), (0.041708793, 0.3795619, 0.9242256), (0.077794656, 0.7078709, 0.70204455), (0.053798147, 0.71601075, 0.6960132), (0.053798147, 0.71601075, 0.6960132), (0.077794656, 0.7078709, 0.70204455), (0.10128512, 0.9208703, 0.37648258), (0.06928213, 0.925366, 0.3726898), (0.06928213, 0.925366, 0.3726898), (0.10128512, 0.9208703, 0.37648258), (0.1077215, 0.9795775, 0.16977644), (0.07310578, 0.98286724, 0.16919675), (-0.019295597, 0.17508395, 0.9843644), (-0.016102672, 0.19245926, 0.9811728), (-0.029608116, 0.3920907, 0.91945), (-0.04171238, 0.37967294, 0.9241799), (-0.04171238, 0.37967294, 0.9241799), (-0.029608116, 0.3920907, 0.91945), (-0.05378983, 0.71600777, 0.69601685), (-0.077798516, 0.70779127, 0.70212454), (-0.077798516, 0.70779127, 0.70212454), (-0.05378983, 0.71600777, 0.69601685), (-0.069317326, 0.92536676, 0.37268174), (-0.10129647, 0.9208354, 0.3765651), (-0.10129647, 0.9208354, 0.3765651), (-0.069317326, 0.92536676, 0.37268174), (-0.07310495, 0.9828748, 0.169153), (-0.107701376, 0.9795795, 0.16977732), (0.017101033, -0.20474926, -0.97866505), (0.020892903, -0.1899761, -0.98156637), (0.041705996, -0.37915415, -0.9243932), (0.02900504, -0.39130744, -0.9198027), (0.02900504, -0.39130744, -0.9198027), (0.041705996, -0.37915415, -0.9243932), (0.077806346, -0.7075528, -0.702364), (0.0527017, -0.7155107, -0.6966111), (0.0527017, -0.7155107, -0.6966111), (0.077806346, -0.7075528, -0.702364), (0.101298235, -0.9207886, -0.376679), (0.06789903, -0.92530274, -0.37310126), (0.06789903, -0.92530274, -0.37310126), (0.101298235, -0.9207886, -0.376679), (0.107512765, -0.97739255, -0.18205754), (0.072309434, -0.98082155, -0.1809982), (-0.020896165, -0.18997237, -0.981567), (-0.01709068, -0.2047464, -0.9786659), (-0.02901263, -0.39131582, -0.91979903), (-0.041695785, -0.37906328, -0.9244308), (-0.041695785, -0.37906328, -0.9244308), (-0.02901263, -0.39131582, -0.91979903), (-0.05270726, -0.7155132, -0.696608), (-0.077797145, -0.70766985, -0.702247), (-0.077797145, -0.70766985, -0.702247), (-0.05270726, -0.7155132, -0.696608), (-0.067904964, -0.92530316, -0.37309918), (-0.101298295, -0.9207881, -0.37668005), (-0.101298295, -0.9207881, -0.37668005), (-0.067904964, -0.92530316, -0.37309918), (-0.072301455, -0.980823, -0.18099368), (-0.107503355, -0.977394, -0.18205513), (-0.0057102023, -0.20515215, -0.97871345), (0.005690093, -0.20515409, -0.9787131), (0.012570698, -0.3950054, -0.9185928), (-0.01257005, -0.39500567, -0.91859275), (-0.01257005, -0.39500567, -0.91859275), (0.012570698, -0.3950054, -0.9185928), (0.022904525, -0.7183756, -0.6952782), (-0.02299565, -0.7183275, -0.69532484), (-0.02299565, -0.7183275, -0.69532484), (0.022904525, -0.7183756, -0.6952782), (0.029500237, -0.92760295, -0.37240103), (-0.0295077, -0.92760205, -0.37240258), (-0.0295077, -0.92760205, -0.37240258), (0.029500237, -0.92760295, -0.37240103), (0.031101655, -0.9829047, -0.18146934), (-0.031094417, -0.98290503, -0.18146846), (0.005690093, -0.20515409, -0.9787131), (0.017101033, -0.20474926, -0.97866505), (0.02900504, -0.39130744, -0.9198027), (0.012570698, -0.3950054, -0.9185928), (0.012570698, -0.3950054, -0.9185928), (0.02900504, -0.39130744, -0.9198027), (0.0527017, -0.7155107, -0.6966111), (0.022904525, -0.7183756, -0.6952782), (0.022904525, -0.7183756, -0.6952782), (0.0527017, -0.7155107, -0.6966111), (0.06789903, -0.92530274, -0.37310126), (0.029500237, -0.92760295, -0.37240103), (0.029500237, -0.92760295, -0.37240103), (0.06789903, -0.92530274, -0.37310126), (0.072309434, -0.98082155, -0.1809982), (0.031101655, -0.9829047, -0.18146934), (-0.01709068, -0.2047464, -0.9786659), (-0.0057102023, -0.20515215, -0.97871345), (-0.01257005, -0.39500567, -0.91859275), (-0.02901263, -0.39131582, -0.91979903), (-0.02901263, -0.39131582, -0.91979903), (-0.01257005, -0.39500567, -0.91859275), (-0.02299565, -0.7183275, -0.69532484), (-0.05270726, -0.7155132, -0.696608), (-0.05270726, -0.7155132, -0.696608), (-0.02299565, -0.7183275, -0.69532484), (-0.0295077, -0.92760205, -0.37240258), (-0.067904964, -0.92530316, -0.37309918), (-0.067904964, -0.92530316, -0.37309918), (-0.0295077, -0.92760205, -0.37240258), (-0.031094417, -0.98290503, -0.18146846), (-0.072301455, -0.980823, -0.18099368), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.044441, 0.042273, -0.89557), (0.04443, 0.042273, -0.89557), (0.044441, 0.042282, -0.89557), (0.04443, 0.042282, -0.89557), (0.044441, 0.042273, -0.89557), (0.04443, 0.042273, -0.89557), (0.044441, 0.042282, -0.89557), (0.04443, 0.042282, -0.89557), (0.044441, 0.042273, -0.89557), (0.04443, 0.042273, -0.89557), (0.044441, 0.042282, -0.89557), (0.04443, 0.042282, -0.89557), (0.044441, 0.042273, -0.89557), (0.04443, 0.042273, -0.89557), (0.044441, 0.042282, -0.89557), (0.04443, 0.042282, -0.89557), (0.044441, 0.042273, -0.89557), (0.04443, 0.042273, -0.89557), (0.044441, 0.042282, -0.89557), (0.04443, 0.042282, -0.89557), (0.044441, 0.042273, -0.89557), (0.04443, 0.042273, -0.89557), (0.044441, 0.042282, -0.89557), (0.04443, 0.042282, -0.89557), (0.044441, 0.042273, -0.89557), (0.04443, 0.042273, -0.89557), (0.044441, 0.042282, -0.89557), (0.04443, 0.042282, -0.89557), (0.059047, 0.219421, -0.262002), (-0.533911, 0.219423, -0.262002), (0.059046, -0.248813, -0.262002), (-0.533912, -0.248811, -0.262002), (-0.18098, 0.219422, -0.262002), (-0.096231, 0.219422, -0.262002), (-0.378633, 0.219423, -0.262002), (-0.293884, 0.219422, -0.262002), (-0.180981, -0.270547, -0.262002), (-0.096564, -0.265924, -0.262002), (-0.378302, -0.265923, -0.262002), (-0.293885, -0.270547, -0.262002), (-0.096231, 0.219422, -0.487788), (0.059047, 0.219421, -0.487788), (-0.378633, 0.219423, -0.487788), (-0.533911, 0.219423, -0.487788), (-0.293884, 0.219422, -0.487788), (-0.18098, 0.219422, -0.487788), (0.048667, 0.210355, -0.262002), (-0.523531, 0.210357, -0.262002), (0.048666, -0.240816, -0.262002), (-0.523532, -0.240814, -0.262002), (-0.18098, 0.210356, -0.262002), (-0.096231, 0.210355, -0.262002), (-0.378633, 0.210356, -0.262002), (-0.293884, 0.210356, -0.262002), (-0.181306, -0.26148, -0.262002), (-0.097538, -0.256893, -0.262002), (-0.377328, -0.256892, -0.262002), (-0.29356, -0.26148, -0.262002), (0.048667, 0.210355, -0.478936), (-0.523531, 0.210357, -0.478936), (-0.18098, 0.210356, -0.478936), (-0.096231, 0.210355, -0.478936), (-0.378633, 0.210356, -0.478936), (-0.293884, 0.210356, -0.478936), (0.059047, 0.219421, -0.27034), (-0.096231, 0.219422, -0.27034), (0.059046, -0.248813, -0.270341), (-0.096564, -0.265924, -0.270341), (-0.533912, -0.248811, -0.270341), (-0.378302, -0.265923, -0.270341), (-0.533911, 0.219423, -0.27034), (-0.378633, 0.219423, -0.27034), (-0.293885, -0.270547, -0.270341), (-0.180981, -0.270547, -0.270341), (-0.18098, 0.219422, -0.27034), (-0.293884, 0.219422, -0.27034), (-0.29356, -0.26148, -0.270341), (-0.377328, -0.256892, -0.270341), (-0.523532, -0.240814, -0.270341), (-0.523531, 0.210357, -0.27034), (-0.378633, 0.210356, -0.27034), (-0.293884, 0.210356, -0.27034), (-0.18098, 0.210356, -0.27034), (-0.096231, 0.210355, -0.27034), (0.048667, 0.210355, -0.27034), (0.048666, -0.240816, -0.270341), (-0.097538, -0.256893, -0.270341), (-0.181306, -0.26148, -0.270341), (0.060469, 0.220663, -0.263708), (-0.535333, 0.220665, -0.263708), (0.060468, -0.249908, -0.263708), (-0.535334, -0.249906, -0.263708), (-0.18098, 0.220664, -0.263708), (-0.096231, 0.220664, -0.263708), (-0.378633, 0.220665, -0.263708), (-0.293884, 0.220664, -0.263708), (-0.180937, -0.271789, -0.263708), (-0.096431, -0.267161, -0.263708), (-0.378436, -0.26716, -0.263708), (-0.29393, -0.271789, -0.263708), (0.060469, 0.220663, -0.268634), (-0.096231, 0.220664, -0.268634), (0.060468, -0.249908, -0.268634), (-0.096431, -0.267161, -0.268634), (-0.535334, -0.249906, -0.268634), (-0.378436, -0.26716, -0.268634), (-0.535333, 0.220665, -0.268634), (-0.378633, 0.220665, -0.268634), (-0.29393, -0.271789, -0.268634), (-0.180937, -0.271789, -0.268634), (-0.18098, 0.220664, -0.268634), (-0.293884, 0.220664, -0.268634), (-0.096564, -0.265924, -0.452509), (-0.096541, -0.231769, -0.487788), (0.059046, -0.248813, -0.452509), (0.059046, -0.214658, -0.487788), (-0.378326, -0.231768, -0.487788), (-0.378302, -0.265923, -0.452509), (-0.533912, -0.214656, -0.487788), (-0.533912, -0.248811, -0.452509), (-0.180981, -0.236392, -0.487788), (-0.180981, -0.270547, -0.452509), (-0.293885, -0.270547, -0.452509), (-0.293885, -0.236392, -0.487788), (0.048666, -0.206661, -0.478936), (0.048666, -0.240816, -0.443657), (-0.523532, -0.240814, -0.443657), (-0.523532, -0.206659, -0.478936), (-0.181283, -0.227325, -0.478936), (-0.181306, -0.26148, -0.443657), (-0.097538, -0.256893, -0.443657), (-0.097443, -0.222738, -0.478936), (-0.377424, -0.222737, -0.478936), (-0.377328, -0.256892, -0.443657), (-0.293583, -0.227325, -0.478936), (-0.29356, -0.26148, -0.443657), (-0.378317, -0.244839, -0.485103), (-0.293885, -0.249462, -0.485103), (-0.378309, -0.255919, -0.477455), (-0.293885, -0.260543, -0.477455), (-0.378304, -0.263323, -0.46601), (-0.293885, -0.267947, -0.46601), (-0.180981, -0.249463, -0.485103), (-0.09655, -0.244839, -0.485103), (-0.180981, -0.260543, -0.477455), (-0.096557, -0.25592, -0.477455), (-0.180981, -0.267947, -0.46601), (-0.096562, -0.263324, -0.46601), (-0.533912, -0.227727, -0.485103), (-0.533912, -0.238807, -0.477455), (-0.533912, -0.246211, -0.46601), (0.059046, -0.227728, -0.485103), (0.059046, -0.238809, -0.477455), (0.059046, -0.246213, -0.46601), (0.048666, -0.219732, -0.476251), (-0.097479, -0.235808, -0.476251), (0.048666, -0.230812, -0.468603), (-0.09751, -0.246889, -0.468603), (0.048666, -0.238216, -0.457158), (-0.097531, -0.254293, -0.457158), (-0.377387, -0.235808, -0.476251), (-0.523532, -0.21973, -0.476251), (-0.377356, -0.246888, -0.468603), (-0.523532, -0.23081, -0.468603), (-0.377336, -0.254292, -0.457158), (-0.523532, -0.238214, -0.457158), (-0.181292, -0.240396, -0.476251), (-0.293574, -0.240396, -0.476251), (-0.1813, -0.251477, -0.468603), (-0.293567, -0.251476, -0.468603), (-0.181305, -0.25888, -0.457158), (-0.293562, -0.25888, -0.457158)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-172.43921, -111.271255), (-172.43921, -111.27129), (-172.43918, -111.27129), (-172.43918, -111.271255), (-137.53853, -114.56422), (-137.53853, -114.56434), (-137.53847, -114.56434), (-137.53847, -114.56422), (-142.8564, 0.897355), (-142.8564, 1.334325), (-142.88193, 1.305114), (-142.88193, 0.897355), (-142.8564, 1.334325), (-144.17407, 1.334325), (-144.15157, 1.305114), (-142.88193, 1.305114), (-144.17407, 1.334325), (-144.22223, 0.896421), (-144.19681, 0.893679), (-144.15157, 1.305114), (-144.22223, 0.896421), (-144.23523, 0.658862), (-144.20972, 0.657947), (-144.19681, 0.893679), (-144.23523, 0.658862), (-144.23523, 0.341138), (-144.20972, 0.342052), (-144.20972, 0.657947), (-144.23523, 0.341138), (-144.22223, 0.103579), (-144.19681, 0.10632), (-144.20972, 0.342052), (-144.22223, 0.103579), (-144.17407, -0.334325), (-144.15157, -0.305114), (-144.19681, 0.10632), (-144.17407, -0.334325), (-142.8564, -0.334325), (-142.88193, -0.305114), (-144.15157, -0.305114), (-142.8564, -0.334325), (-142.8564, 0.102645), (-142.88193, 0.102645), (-142.88193, -0.305114), (-142.8564, 0.102645), (-142.8564, 0.341138), (-142.88193, 0.341138), (-142.88193, 0.102645), (-142.8564, 0.341138), (-142.8564, 0.658862), (-142.88193, 0.658862), (-142.88193, 0.341138), (-142.8564, 0.658862), (-142.8564, 0.897355), (-142.88193, 0.897355), (-142.88193, 0.658862), (-143.11542, 0.100178), (-143.11542, 0.340152), (-143.12936, 0.340152), (-143.12936, 0.100178), (-143.10515, 0.339732), (-143.10515, 0.100006), (-143.09119, 0.100006), (-143.09119, 0.339732), (-143.10515, 0.899994), (-143.10515, 0.660268), (-143.09119, 0.660268), (-143.09119, 0.899994), (-143.11542, 0.659848), (-143.11542, 0.899822), (-143.12936, 0.899822), (-143.12936, 0.659848), (-143.11542, 0.340152), (-143.11542, 0.659848), (-143.12936, 0.659848), (-143.12936, 0.340152), (-143.10515, 0.660268), (-143.10515, 0.339732), (-143.09119, 0.339732), (-143.09119, 0.660268), (-143.11542, -0.343531), (-143.11542, 0.100178), (-143.12936, 0.100178), (-143.12936, -0.343531), (-143.04385, 1.08086), (-143.04385, -0.290211), (-143.0295, -0.290211), (-143.0295, 1.08086), (-143.10515, 0.100006), (-143.10515, -0.345083), (-143.09119, -0.345083), (-143.09119, 0.100006), (-143.10515, 1.345083), (-143.10515, 0.899994), (-143.09119, 0.899994), (-143.09119, 1.345083), (-143.02231, 1.080878), (-143.02231, -0.290229), (-143.00795, -0.290229), (-143.00795, 1.080878), (-143.11542, 0.899822), (-143.11542, 1.343531), (-143.12936, 1.343531), (-143.12936, 0.899822), (-143.06828, 0.095005), (-143.06828, 0.325699), (-143.09125, 0.325699), (-143.09125, 0.095005), (-143.06828, 0.095005), (-143.09125, 0.095005), (-143.09125, -0.307636), (-143.06828, -0.307636), (-143.00505, 0.999275), (-143.00505, -0.241059), (-142.98212, -0.241059), (-142.98212, 0.999275), (-143.06969, 0.092091), (-143.06969, -0.306253), (-143.04675, -0.306253), (-143.04675, 0.092091), (-143.06969, 0.325077), (-143.06969, 0.092091), (-143.04675, 0.092091), (-143.04675, 0.325077), (-143.06969, 0.635464), (-143.06969, 0.325077), (-143.04675, 0.325077), (-143.04675, 0.635464), (-143.06969, 0.86845), (-143.06969, 0.635464), (-143.04675, 0.635464), (-143.04675, 0.86845), (-143.06969, 1.266793), (-143.06969, 0.86845), (-143.04675, 0.86845), (-143.04675, 1.266793), (-142.98349, 0.999274), (-142.98349, -0.241057), (-142.96057, -0.241057), (-142.96057, 0.999274), (-143.06828, 0.865535), (-143.06828, 1.268176), (-143.09125, 1.268176), (-143.09125, 0.865535), (-143.06828, 0.634841), (-143.06828, 0.865535), (-143.09125, 0.865535), (-143.09125, 0.634841), (-143.06828, 0.325699), (-143.06828, 0.634841), (-143.09125, 0.634841), (-143.09125, 0.325699), (-142.8564, 1.334325), (-142.8564, 0.897355), (-142.8529, 0.897355), (-142.8529, 1.338326), (-142.8564, 0.897355), (-142.8564, 0.658862), (-142.8529, 0.658862), (-142.8529, 0.897355), (-142.8564, 0.658862), (-142.8564, 0.341138), (-142.8529, 0.341138), (-142.8529, 0.658862), (-142.8564, 0.341138), (-142.8564, 0.102645), (-142.8529, 0.102645), (-142.8529, 0.341138), (-142.8564, 0.102645), (-142.8564, -0.334325), (-142.8529, -0.338326), (-142.8529, 0.102645), (-143.02452, -0.286592), (-143.02452, 1.077668), (-143.0295, 1.08086), (-143.0295, -0.290211), (-144.17407, -0.334325), (-144.22223, 0.103579), (-144.22571, 0.103204), (-144.17715, -0.338326), (-144.22223, 0.103579), (-144.23523, 0.341138), (-144.23872, 0.341013), (-144.22571, 0.103204), (-144.23523, 0.341138), (-144.23523, 0.658862), (-144.23872, 0.658987), (-144.23872, 0.341013), (-144.23523, 0.658862), (-144.22223, 0.896421), (-144.22571, 0.896797), (-144.23872, 0.658987), (-144.22223, 0.896421), (-144.17407, 1.334325), (-144.17715, 1.338326), (-144.22571, 0.896797), (-143.00298, -0.287038), (-143.00298, 1.07726), (-143.00795, 1.080878), (-143.00795, -0.290229), (-143.1106, 0.899822), (-143.1106, 1.339505), (-143.11542, 1.343531), (-143.11542, 0.899822), (-143.02728, 1.07726), (-143.02728, -0.287038), (-143.02231, -0.290229), (-143.02231, 1.080878), (-143.11, 1.341049), (-143.11, 0.899616), (-143.10515, 0.899994), (-143.10515, 1.345083), (-143.11, 0.899616), (-143.11, 0.660142), (-143.10515, 0.660268), (-143.10515, 0.899994), (-143.11, 0.660142), (-143.11, 0.339858), (-143.10515, 0.339732), (-143.10515, 0.660268), (-143.11, 0.339858), (-143.11, 0.100385), (-143.10515, 0.100006), (-143.10515, 0.339732), (-143.11, 0.100385), (-143.11, -0.341049), (-143.10515, -0.345083), (-143.10515, 0.100006), (-143.04883, 1.077668), (-143.04883, -0.286592), (-143.04385, -0.290211), (-143.04385, 1.08086), (-143.1106, -0.339505), (-143.1106, 0.100178), (-143.11542, 0.100178), (-143.11542, -0.343531), (-143.1106, 0.100178), (-143.1106, 0.340152), (-143.11542, 0.340152), (-143.11542, 0.100178), (-143.1106, 0.340152), (-143.1106, 0.659848), (-143.11542, 0.659848), (-143.11542, 0.340152), (-143.1106, 0.659848), (-143.1106, 0.899822), (-143.11542, 0.899822), (-143.11542, 0.659848), (-118.539665, -109.61047), (-118.539665, -113.51364), (-115.174225, -113.51364), (-115.174225, -109.61047), (-88.71527, -110.74826), (-88.71527, -113.93459), (-85.97549, -113.93459), (-85.97549, -110.74826), (-69.16736, -112.10563), (-69.16736, -112.10564), (-69.16736, -112.10564), (-69.16736, -112.10563), (-71.089455, -0.637443), (-71.089455, -0.328096), (-71.56708, -0.328096), (-71.56708, -0.637443), (-71.089455, -0.09725), (-71.56708, -0.09725), (-71.56708, -0.328096), (-71.089455, -0.328096), (-71.089455, -0.09725), (-71.089455, 0.305657), (-71.56708, 0.305657), (-71.56708, -0.09725), (-72.05537, 0.493148), (-72.09248, 0.486001), (-72.12395, 0.465647), (-72.14497, 0.435184), (-72.15235, 0.399252), (-72.15235, -0.747181), (-71.578896, -0.747181), (-71.578896, 0.493148), (-72.20301, 0.795178), (-72.20301, -0.351255), (-72.195625, -0.387188), (-72.17461, -0.41765), (-72.143135, -0.438004), (-72.106026, -0.445152), (-71.629555, -0.445152), (-71.629555, 0.795178), (-71.089455, -0.868289), (-71.56708, -0.868289), (-71.56708, -1.271195), (-71.089455, -1.271195), (-71.089455, -0.868289), (-71.089455, -0.637443), (-71.56708, -0.637443), (-71.56708, -0.868289), (-72.15296, -0.631477), (-72.15296, -0.864113), (-71.65094, -0.864113), (-71.65094, -0.631477), (-71.65094, -0.320338), (-71.65094, -0.087702), (-72.15296, -0.087702), (-72.15296, -0.320338), (-72.15296, -0.320338), (-72.15296, -0.631477), (-71.65094, -0.631477), (-71.65094, -0.320338), (-72.07674, -0.087728), (-71.47894, -0.087728), (-71.47894, 0.339153), (-72.07674, 0.339153), (-71.77132, 0.522242), (-71.808426, 0.515095), (-71.83989, 0.49474), (-71.860916, 0.464278), (-71.8683, 0.428345), (-71.8683, -0.764995), (-71.27051, -0.764995), (-71.27051, 0.522242), (-72.15296, -0.864113), (-72.15296, -1.292943), (-71.65094, -1.292943), (-71.65094, -0.864113), (-72.15296, 0.341128), (-72.15296, -0.087702), (-71.65094, -0.087702), (-71.65094, 0.341128), (-72.017876, 0.522242), (-72.017876, -0.671098), (-72.01049, -0.707031), (-71.98946, -0.737493), (-71.958, -0.757847), (-71.92088, -0.764995), (-71.42008, -0.764995), (-71.42008, 0.522242), (-72.07674, -1.290968), (-71.47894, -1.290968), (-71.47894, -0.864088), (-72.07674, -0.864088), (-71.75651, -0.256588), (-71.743774, -0.489293), (-70.54169, -0.492653), (-70.54169, -0.257425), (-72.07674, -0.631101), (-71.47894, -0.631101), (-71.47894, -0.320714), (-72.07674, -0.320714), (-72.07674, -0.320714), (-71.47894, -0.320714), (-71.47894, -0.087728), (-72.07674, -0.087728), (-70.54169, 0.291176), (-71.743774, 0.287817), (-71.75651, 0.055112), (-70.54169, 0.055948), (-70.54169, 0.055948), (-71.75651, 0.055112), (-71.75651, -0.256588), (-70.54169, -0.257425), (-72.07674, -0.864088), (-71.47894, -0.864088), (-71.47894, -0.631101), (-72.07674, -0.631101), (-71.69915, -0.89483), (-70.54169, -0.89483), (-70.54169, -0.492653), (-71.743774, -0.489293), (-70.54169, 0.291176), (-70.54169, 0.693353), (-71.69915, 0.693353), (-71.743774, 0.287817), (-71.01019, 0.346708), (-72.21459, 0.346708), (-72.21459, -0.08413), (-70.962715, -0.084986), (-71.136024, -0.475195), (-71.70949, -0.475195), (-71.70949, -0.873539), (-71.136024, -0.873539), (-71.136024, -0.242209), (-71.70949, -0.242209), (-71.70949, -0.475195), (-71.136024, -0.475195), (-71.136024, 0.068178), (-71.70949, 0.068178), (-71.70949, -0.242209), (-71.136024, -0.242209), (-71.136024, 0.301164), (-71.70949, 0.301164), (-71.70949, 0.068178), (-71.136024, 0.068178), (-71.136024, 0.699508), (-71.70949, 0.699508), (-71.70949, 0.301164), (-71.136024, 0.301164), (-72.21459, -1.298523), (-71.01019, -1.298523), (-70.962715, -0.86683), (-72.21459, -0.867685), (-72.21459, -0.319276), (-72.21459, -0.63254), (-70.94988, -0.63254), (-70.94988, -0.319276), (-70.94988, -0.319276), (-70.962715, -0.084986), (-72.21459, -0.08413), (-72.21459, -0.319276), (-72.21459, -0.63254), (-72.21459, -0.867685), (-70.962715, -0.86683), (-70.94988, -0.63254), (-70.94988, -0.63254), (-70.962715, -0.86683), (-70.926445, -0.866804), (-70.91362, -0.63254), (-70.91362, -0.63254), (-70.926445, -0.866804), (-70.895706, -0.866784), (-70.88287, -0.63254), (-70.88287, -0.63254), (-70.895706, -0.866784), (-70.87516, -0.86677), (-70.862335, -0.63254), (-72.19016, -0.631477), (-72.19016, -0.864119), (-72.15296, -0.864113), (-72.15296, -0.631477), (-70.962715, -0.084986), (-70.94988, -0.319276), (-70.91362, -0.319276), (-70.926445, -0.085011), (-70.926445, -0.085011), (-70.91362, -0.319276), (-70.88287, -0.319276), (-70.895706, -0.085031), (-70.895706, -0.085031), (-70.88287, -0.319276), (-70.862335, -0.319276), (-70.87516, -0.085045), (-72.19016, -0.087696), (-72.19016, -0.320338), (-72.15296, -0.320338), (-72.15296, -0.087702), (-70.94988, -0.319276), (-70.94988, -0.63254), (-70.91362, -0.63254), (-70.91362, -0.319276), (-70.91362, -0.319276), (-70.91362, -0.63254), (-70.88287, -0.63254), (-70.88287, -0.319276), (-70.88287, -0.319276), (-70.88287, -0.63254), (-70.862335, -0.63254), (-70.862335, -0.319276), (-72.19016, -0.320338), (-72.19016, -0.631477), (-72.15296, -0.631477), (-72.15296, -0.320338), (-70.962715, -0.86683), (-71.01019, -1.298523), (-70.97393, -1.298523), (-70.926445, -0.866804), (-70.926445, -0.866804), (-70.97393, -1.298523), (-70.943184, -1.298523), (-70.895706, -0.866784), (-70.895706, -0.866784), (-70.943184, -1.298523), (-70.92264, -1.298523), (-70.87516, -0.86677), (-72.19016, -0.864119), (-72.19016, -1.292943), (-72.15296, -1.292943), (-72.15296, -0.864113), (-71.01019, 0.346708), (-70.962715, -0.084986), (-70.926445, -0.085011), (-70.97393, 0.346708), (-70.97393, 0.346708), (-70.926445, -0.085011), (-70.895706, -0.085031), (-70.943184, 0.346708), (-70.943184, 0.346708), (-70.895706, -0.085031), (-70.87516, -0.085045), (-70.92264, 0.346708), (-72.19016, 0.341128), (-72.19016, -0.087696), (-72.15296, -0.087702), (-72.15296, 0.341128), (-71.743774, 0.287817), (-71.69915, 0.693353), (-71.73543, 0.693353), (-71.78005, 0.287715), (-71.78005, 0.287715), (-71.73543, 0.693353), (-71.76618, 0.693353), (-71.81081, 0.287629), (-71.81081, 0.287629), (-71.76618, 0.693353), (-71.786736, 0.693353), (-71.83136, 0.287572), (-71.05225, -0.097229), (-71.05225, 0.305657), (-71.089455, 0.305657), (-71.089455, -0.09725), (-71.69915, -0.89483), (-71.743774, -0.489293), (-71.78005, -0.489192), (-71.73543, -0.89483), (-71.73543, -0.89483), (-71.78005, -0.489192), (-71.81081, -0.489106), (-71.76618, -0.89483), (-71.76618, -0.89483), (-71.81081, -0.489106), (-71.83136, -0.489049), (-71.786736, -0.89483), (-71.05225, -1.271195), (-71.05225, -0.868309), (-71.089455, -0.868289), (-71.089455, -1.271195), (-71.75651, -0.256588), (-71.75651, 0.055112), (-71.792786, 0.055086), (-71.792786, -0.256563), (-71.792786, -0.256563), (-71.792786, 0.055086), (-71.82354, 0.055065), (-71.82354, -0.256542), (-71.82354, -0.256542), (-71.82354, 0.055065), (-71.84409, 0.055051), (-71.84409, -0.256528), (-71.05225, -0.637447), (-71.05225, -0.328091), (-71.089455, -0.328096), (-71.089455, -0.637443), (-71.75651, 0.055112), (-71.743774, 0.287817), (-71.78005, 0.287715), (-71.792786, 0.055086), (-71.792786, 0.055086), (-71.78005, 0.287715), (-71.81081, 0.287629), (-71.82354, 0.055065), (-71.82354, 0.055065), (-71.81081, 0.287629), (-71.83136, 0.287572), (-71.84409, 0.055051), (-71.05225, -0.328091), (-71.05225, -0.097229), (-71.089455, -0.09725), (-71.089455, -0.328096), (-71.743774, -0.489293), (-71.75651, -0.256588), (-71.792786, -0.256563), (-71.78005, -0.489192), (-71.78005, -0.489192), (-71.792786, -0.256563), (-71.82354, -0.256542), (-71.81081, -0.489106), (-71.81081, -0.489106), (-71.82354, -0.256542), (-71.84409, -0.256528), (-71.83136, -0.489049), (-71.05225, -0.868309), (-71.05225, -0.637447), (-71.089455, -0.637443), (-71.089455, -0.868289), (5.646933, -121.22408), (7.358486, -121.22408), (7.358486, -119.51253), (5.646933, -119.51253), (-5.253075, -117.71076), (-3.54152, -117.71076), (-3.54152, -115.99921), (-5.253075, -115.99921)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_FridgeDrawer1D4_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0]
                rel material:binding = </root/_materials/M_FridgeDrawer1D4_0>
            }

            def GeomSubset "M_FridgeDrawer1D4_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
                rel material:binding = </root/_materials/M_FridgeDrawer1D4_1>
            }

            def GeomSubset "M_FridgeDrawer1D4_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [62]
                rel material:binding = </root/_materials/M_FridgeDrawer1D4_2>
            }

            def GeomSubset "M_FridgeDrawer1D4_3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [63]
                rel material:binding = </root/_materials/M_FridgeDrawer1D4_3>
            }

            def GeomSubset "M_FridgeDrawer1D4_4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138]
                rel material:binding = </root/_materials/M_FridgeDrawer1D4_4>
            }

            def GeomSubset "M_FridgeDrawer1D4_5" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [139]
                rel material:binding = </root/_materials/M_FridgeDrawer1D4_5>
            }

            def GeomSubset "M_FridgeDrawer1D4_6" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [140]
                rel material:binding = </root/_materials/M_FridgeDrawer1D4_6>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer1D4_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1D4_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.03676468, 0.03676468, 0.03676468)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1D4_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge.tga@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D4_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer1D4_1"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1D4_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1D4_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1D4_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D4_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D4_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer1D4_2"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1D4_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1D4_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1D4_2/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D4_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D4_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer1D4_3"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1D4_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.8014706, 0.8014706, 0.8014706)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1D4_3/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D4_3/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer1D4_4"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1D4_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.39705884, 0.39705884, 0.39705884)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }

        def Material "M_FridgeDrawer1D4_5"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1D4_5/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1D4_5/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1D4_5/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Decal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D4_5/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Decal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D4_5/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer1D4_6"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1D4_6/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1D4_6/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1D4_6/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Readout_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D4_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D4_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

