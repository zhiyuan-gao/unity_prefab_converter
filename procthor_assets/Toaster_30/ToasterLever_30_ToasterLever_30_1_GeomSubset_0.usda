#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "ToasterLever_30_ToasterLever_30_1_GeomSubset_0"
    {
        def Mesh "ToasterLever_30_ToasterLever_30_1_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4]
            int[] faceVertexIndices = [0, 1, 3, 2]
            rel material:binding = </root/_materials/M_ToasterLever_30_0>
            normal3f[] normals = [(4.3711292e-8, 0.9999978, -0.002109244), (0.9999978, -4.3711292e-8, -0.002109244), (-4.3711292e-8, -0.9999978, -0.002109244), (-0.9999978, 4.3711292e-8, -0.002109244)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.001876, -0.174218, 0.04648), (0.00162, -0.174218, 0.04648), (0.001876, -0.173963, 0.04648), (0.00162, -0.173963, 0.04648), (0.001876, -0.174218, 0.04648), (0.00162, -0.174218, 0.04648), (0.001876, -0.173963, 0.04648), (0.00162, -0.173963, 0.04648), (0.001876, -0.174218, 0.04648), (0.00162, -0.174218, 0.04648), (0.001876, -0.173963, 0.04648), (0.00162, -0.173963, 0.04648), (0.001876, -0.174218, 0.04648), (0.00162, -0.174218, 0.04648), (0.001876, -0.173963, 0.04648), (0.00162, -0.173963, 0.04648), (0.001876, -0.174218, 0.04648), (0.00162, -0.174218, 0.04648), (0.001876, -0.173963, 0.04648), (0.00162, -0.173963, 0.04648), (0.001876, -0.174218, 0.04648), (0.00162, -0.174218, 0.04648), (0.001876, -0.173963, 0.04648), (0.00162, -0.173963, 0.04648), (0.065821, -0.154602, 0.046483), (0.064712, -0.160694, 0.046483), (0.066962, -0.154602, 0.049094), (0.06571, -0.161107, 0.049094), (0.061261, -0.165858, 0.046483), (0.062025, -0.166623, 0.049094), (0.056096, -0.16931, 0.046483), (0.05651, -0.170308, 0.049094), (0.050004, -0.170419, 0.046483), (0.050004, -0.171489, 0.049064), (-0.046508, -0.170419, 0.046483), (-0.0526, -0.16931, 0.046483), (-0.046508, -0.17156, 0.049094), (-0.053014, -0.170308, 0.049094), (-0.057765, -0.165858, 0.046483), (-0.058529, -0.166623, 0.049094), (-0.061215, -0.160694, 0.046483), (-0.062214, -0.161107, 0.049094), (-0.062325, -0.154602, 0.046483), (-0.063394, -0.154602, 0.049064), (0.069514, -0.154602, 0.050116), (0.067989, -0.162052, 0.050116), (0.06377, -0.168367, 0.050116), (0.057454, -0.172587, 0.050116), (0.050004, -0.174069, 0.050133), (-0.046508, -0.174112, 0.050116), (-0.053958, -0.172587, 0.050116), (-0.060273, -0.168367, 0.050116), (-0.064493, -0.162052, 0.050116), (-0.065975, -0.154602, 0.050133), (0.07204, -0.154602, 0.049094), (0.070268, -0.162996, 0.049094), (0.065514, -0.170112, 0.049094), (0.058398, -0.174866, 0.049094), (0.050004, -0.17665, 0.049064), (-0.046508, -0.176638, 0.049094), (-0.054902, -0.174866, 0.049094), (-0.062018, -0.170112, 0.049094), (-0.066772, -0.162996, 0.049094), (-0.068556, -0.154602, 0.049064), (0.073121, -0.154602, 0.046483), (0.071267, -0.16341, 0.046483), (0.066278, -0.170876, 0.046483), (0.058812, -0.175865, 0.046483), (0.050004, -0.177719, 0.046483), (-0.046508, -0.177719, 0.046483), (-0.055315, -0.175865, 0.046483), (-0.062782, -0.170876, 0.046483), (-0.067771, -0.163409, 0.046483), (-0.069625, -0.154602, 0.046483), (0.07198, -0.154602, 0.043873), (0.070268, -0.162996, 0.043873), (0.065514, -0.170112, 0.043873), (0.058398, -0.174866, 0.043873), (0.050004, -0.17665, 0.043903), (-0.046508, -0.176578, 0.043873), (-0.054902, -0.174866, 0.043873), (-0.062018, -0.170112, 0.043873), (-0.066772, -0.162996, 0.043873), (-0.068556, -0.154602, 0.043903), (0.069429, -0.154602, 0.042851), (0.067989, -0.162052, 0.042851), (0.06377, -0.168367, 0.042851), (0.057454, -0.172587, 0.042851), (0.050004, -0.174069, 0.042833), (-0.046508, -0.174027, 0.042851), (-0.053958, -0.172587, 0.042851), (-0.060273, -0.168367, 0.042851), (-0.064493, -0.162052, 0.042851), (-0.065975, -0.154602, 0.042834), (0.066903, -0.154602, 0.043873), (0.065711, -0.161107, 0.043873), (0.062025, -0.166623, 0.043873), (0.05651, -0.170308, 0.043873), (0.050004, -0.171489, 0.043903), (-0.046508, -0.171501, 0.043873), (-0.053014, -0.170308, 0.043873), (-0.058529, -0.166623, 0.043873), (-0.062214, -0.161107, 0.043873), (-0.063394, -0.154602, 0.043903), (0.065821, -0.140092, 0.046483), (0.066891, -0.140092, 0.049064), (0.069471, -0.140092, 0.050133), (0.072052, -0.140092, 0.049064), (0.073121, -0.140092, 0.046483), (0.072052, -0.140092, 0.043903), (0.069471, -0.140092, 0.042834), (0.066891, -0.140092, 0.043903), (-0.063394, -0.140092, 0.049064), (-0.062325, -0.140092, 0.046483), (-0.065975, -0.140092, 0.050133), (-0.068556, -0.140092, 0.049064), (-0.069625, -0.140092, 0.046483), (-0.068556, -0.140092, 0.043903), (-0.065975, -0.140092, 0.042834), (-0.063394, -0.140092, 0.043903), (0.065169, -0.154602, 0.046486), (0.066506, -0.154603, 0.049557), (0.065169, -0.140092, 0.046486), (0.066434, -0.140092, 0.049528), (0.069514, -0.154602, 0.050765), (0.069472, -0.140092, 0.050783), (0.072499, -0.154602, 0.049555), (0.072512, -0.140091, 0.049526), (0.073773, -0.154602, 0.04648), (0.073773, -0.140092, 0.04648), (0.072437, -0.154603, 0.043409), (0.072508, -0.140092, 0.043439), (0.069428, -0.154602, 0.042202), (0.069471, -0.140092, 0.042184), (0.066443, -0.154602, 0.043411), (0.066431, -0.140091, 0.043441), (-0.061675, -0.154602, 0.046483), (-0.062934, -0.154602, 0.049524), (-0.062934, -0.140092, 0.049524), (-0.061675, -0.140092, 0.046483), (-0.065975, -0.154602, 0.050784), (-0.065975, -0.140092, 0.050784), (-0.069016, -0.154602, 0.049524), (-0.069016, -0.140092, 0.049524), (-0.070276, -0.154602, 0.046483), (-0.070276, -0.140092, 0.046483), (-0.069016, -0.154602, 0.043442), (-0.069016, -0.140092, 0.043442), (-0.065975, -0.154602, 0.042183), (-0.065975, -0.140092, 0.042183), (-0.062934, -0.154602, 0.043442), (-0.062934, -0.140092, 0.043442), (0.001748, -0.176644, 0.049079), (0.001748, -0.17409, 0.050124), (0.001748, -0.171525, 0.049079), (0.001748, -0.170419, 0.046483), (0.001748, -0.171495, 0.043888), (0.001748, -0.174048, 0.042842), (0.001748, -0.176614, 0.043888), (0.001748, -0.177719, 0.046483)]
            bool[] primvars:sharp_face = [0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-66.35115, -17.57539), (-66.29256, -17.57539), (-66.29256, -17.516796), (-66.35115, -17.516796)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_ToasterLever_30_0"
        {
            token outputs:surface.connect = </root/_materials/M_ToasterLever_30_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_ToasterLever_30_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0.203
                float3 inputs:normal.connect = </root/_materials/M_ToasterLever_30_0/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/MetalBumpy_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_ToasterLever_30_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_ToasterLever_30_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

