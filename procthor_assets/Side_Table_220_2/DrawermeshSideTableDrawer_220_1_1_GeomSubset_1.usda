#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "DrawermeshSideTableDrawer_220_1_1_GeomSubset_1"
    {
        def Mesh "DrawermeshSideTableDrawer_220_1_1_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [52, 54, 53, 52, 55, 54, 56, 55, 52, 56, 57, 55, 55, 58, 54, 55, 59, 58, 57, 59, 55, 57, 60, 59, 59, 61, 58, 59, 62, 61, 60, 62, 59, 60, 63, 62, 64, 66, 65, 64, 67, 66, 63, 52, 62, 63, 56, 52, 62, 52, 53, 62, 53, 61, 66, 61, 53, 66, 67, 61, 65, 53, 54, 65, 66, 53, 64, 54, 58, 64, 65, 54, 67, 58, 61, 67, 64, 58]
            rel material:binding = </root/_materials/M_SideTableDrawer_220_1_1>
            normal3f[] normals = [(-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-5.819269e-9, 0, 1), (-1.613518e-10, 0, 1), (-1.1799931e-8, 0, 1), (-5.819269e-9, 0, 1), (0, 0, 1), (-1.613518e-10, 0, 1), (0, 0, 1), (0, 0, 1), (-5.819269e-9, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 0.99999994, 0), (0, 1, 0), (0, 0.99999994, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (2.8186635e-9, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (2.8186635e-9, 0, -1), (0, 0, -1), (7.819187e-11, 0, -1), (2.8186635e-9, 0, -1), (7.819187e-11, 0, -1), (5.7154437e-9, 0, -1), (0.000032122447, 0.59883195, -0.8008747), (3.6562363e-7, 0.598955, -0.80078274), (-9.906944e-8, 0.59852153, -0.80110675), (0.000032122447, 0.59883195, -0.8008747), (3.4080585e-8, 0.60107124, -0.7991954), (3.6562363e-7, 0.598955, -0.80078274), (-0.7076806, 0.7065324, 0), (-0.7076808, 0.7065323, 0), (-0.70768064, 0.7065325, 0), (-0.7076806, 0.7065324, 0), (-0.7076809, 0.7065323, 0), (-0.7076808, 0.7065323, 0), (-0.000008369878, 0.60030997, 0.79976743), (-2.0806381e-7, 0.6000069, 0.7999948), (-0.0000012133096, 0.6000446, 0.79996645), (-0.000008369878, 0.60030997, 0.79976743), (4.5474735e-8, 0.5996156, 0.8002882), (-2.0806381e-7, 0.6000069, 0.7999948), (0.70739424, 0.70681924, 0), (0.70739466, 0.7068188, 0), (0.7073942, 0.70681924, 0), (0.70739424, 0.70681924, 0), (0.70739466, 0.7068188, 0), (0.70739466, 0.7068188, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.215553, -0.147135, 0.198959), (0.215553, -0.157817, 0.198959), (0.215553, -0.157817, -0.038581), (0.215553, -0.147135, -0.038581), (-0.224462, -0.147136, -0.038581), (-0.224462, -0.157818, -0.038581), (-0.224462, -0.157818, 0.198959), (-0.224462, -0.147136, 0.198959), (-0.200708, -0.159611, -0.019571), (0.191799, -0.159611, -0.019571), (0.191799, -0.159611, 0.179949), (-0.200708, -0.159611, 0.179949), (-0.219719, -0.147136, 0.203703), (-0.219718, -0.157818, 0.203703), (0.210809, -0.157817, 0.203703), (0.210809, -0.147135, 0.203703), (-0.197312, 0.031245, 0.190884), (-0.197312, 0.031245, -0.016429), (0.188402, 0.031246, -0.016429), (0.188402, 0.031246, 0.190884), (0.210809, -0.147135, -0.043325), (0.210809, -0.157817, -0.043325), (-0.219718, -0.157818, -0.043325), (-0.219719, -0.147136, -0.043325), (0.210809, -0.14239, 0.198959), (-0.219719, -0.142392, 0.198959), (0.210809, -0.14239, -0.038581), (-0.219719, -0.142392, -0.038581), (-0.219718, -0.162561, 0.198959), (0.210809, -0.16256, 0.198959), (0.210809, -0.16256, -0.038581), (-0.219718, -0.162561, -0.038581), (-0.211643, -0.142392, 0.190884), (0.202734, -0.14239, 0.190884), (-0.211643, -0.142392, -0.030506), (0.202734, -0.14239, -0.030506), (-0.211644, 0.045578, -0.030506), (-0.211644, 0.045578, 0.190884), (0.202734, 0.045578, 0.190884), (0.202734, 0.045578, -0.030506), (0.188402, -0.128059, -0.016429), (0.188402, -0.128059, 0.190884), (-0.197311, -0.128059, 0.190884), (-0.197311, -0.128059, -0.016429), (0.197713, -0.16256, 0.185863), (-0.206622, -0.162561, 0.185863), (0.197713, -0.16256, -0.025485), (-0.206622, -0.162561, -0.025485), (0.194756, -0.16256, 0.182906), (-0.203665, -0.162561, 0.182906), (0.194756, -0.16256, -0.022528), (-0.203665, -0.162561, -0.022528), (0.031007, -0.161589, 0.015035), (0.031007, -0.163113, 0.015035), (0.031007, -0.163113, -0.014349), (0.031007, -0.161589, -0.014349), (0.031007, -0.158834, 0.015035), (0.031007, -0.158834, -0.014349), (-0.039916, -0.163114, -0.014349), (-0.039916, -0.161589, -0.014349), (-0.039916, -0.158834, -0.014349), (-0.039916, -0.163114, 0.015035), (-0.039916, -0.161589, 0.015035), (-0.039916, -0.158834, 0.015035), (-0.038686, -0.164345, -0.013425), (0.029777, -0.164345, -0.013425), (0.029777, -0.164345, 0.014111), (-0.038686, -0.164345, 0.014111)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.818362), (0.092088, 0.675906), (-0.165236, 0.813735), (-0.165236, 0.675906), (0.092088, 0.675906), (0.092088, 0.813735), (-0.165236, 0.813735), (0.096714, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.165236, 0.813735), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.165236, 0.813735), (0.092088, 0.813735), (0.096714, 0.818362), (-0.165236, 0.675906), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.165236, 0.675906), (-0.165236, 0.813735), (-0.169862, 0.818362), (0.092088, 0.675906), (-0.169862, 0.67128), (0.096714, 0.67128), (0.092088, 0.675906), (-0.165236, 0.675906), (-0.169862, 0.67128), (0.092088, 0.813735), (0.096714, 0.67128), (0.096714, 0.818362), (0.092088, 0.813735), (0.092088, 0.675906), (0.096714, 0.67128)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_SideTableDrawer_220_1_1"
        {
            token outputs:surface.connect = </root/_materials/M_SideTableDrawer_220_1_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_SideTableDrawer_220_1_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_SideTableDrawer_220_1_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/WoodGrains1.jpg@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_220_1_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_220_1_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

