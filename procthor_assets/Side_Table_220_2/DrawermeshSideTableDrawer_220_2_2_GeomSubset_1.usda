#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "DrawermeshSideTableDrawer_220_2_2_GeomSubset_1"
    {
        def Mesh "DrawermeshSideTableDrawer_220_2_2_GeomSubset_1"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
            int[] faceVertexIndices = [52, 54, 53, 52, 55, 54, 56, 55, 52, 56, 57, 55, 55, 58, 54, 55, 59, 58, 57, 59, 55, 57, 60, 59, 59, 61, 58, 59, 62, 61, 60, 62, 59, 60, 63, 62, 64, 66, 65, 64, 67, 66, 63, 52, 62, 63, 56, 52, 62, 52, 53, 62, 53, 61, 66, 61, 53, 66, 67, 61, 65, 53, 54, 65, 66, 53, 64, 54, 58, 64, 65, 54, 67, 58, 61, 67, 64, 58]
            rel material:binding = </root/_materials/M_SideTableDrawer_220_2_1>
            normal3f[] normals = [(-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1.343457e-7, 0, -1), (-3.7250245e-9, 0, -1), (-2.7241734e-7, 0, -1), (-1.343457e-7, 0, -1), (0, 0, -1), (-3.7250245e-9, 0, -1), (0, 0, -1), (0, 0, -1), (-1.343457e-7, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (1.2220688e-7, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1.2220688e-7, 0, 1), (0, 0, 1), (3.390112e-9, 0, 1), (1.2220688e-7, 0, 1), (3.390112e-9, 0, 1), (2.478006e-7, 0, 1), (0.0000063924863, -0.601129, 0.79915196), (3.1195785e-7, -0.6011758, 0.7991169), (1.2759119e-7, -0.6016241, 0.79877925), (0.0000063924863, -0.601129, 0.79915196), (-1.6516424e-8, -0.5999179, 0.8000616), (3.1195785e-7, -0.6011758, 0.7991169), (-0.707343, -0.7068706, 3.0649814e-9), (-0.7072061, -0.7070074, 3.2314325e-8), (-0.70734304, -0.70687056, -3.092282e-8), (-0.707343, -0.7068706, 3.0649814e-9), (-0.7076804, -0.70653284, 0), (-0.7072061, -0.7070074, 3.2314325e-8), (0.0000146281645, -0.60070163, -0.79947317), (9.3440946e-8, -0.60055256, -0.7995853), (5.005277e-7, -0.6010117, -0.7992402), (0.0000146281645, -0.60070163, -0.79947317), (0, -0.6000081, -0.799994), (9.3440946e-8, -0.60055256, -0.7995853), (0.70705473, -0.70715886, -3.0609826e-8), (0.70739466, -0.70681876, 0), (0.70739365, -0.7068199, 0), (0.70705473, -0.70715886, -3.0609826e-8), (0.7073947, -0.70681876, 0), (0.70739466, -0.70681876, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.215553, -0.147135, -0.052448), (-0.215553, -0.157817, -0.052448), (-0.215553, -0.157817, -0.289989), (-0.215553, -0.147135, -0.289989), (0.224462, -0.147136, -0.289989), (0.224462, -0.157818, -0.289989), (0.224462, -0.157818, -0.052448), (0.224462, -0.147136, -0.052448), (0.200708, -0.159611, -0.270978), (-0.191799, -0.159611, -0.270978), (-0.191799, -0.159611, -0.071459), (0.200708, -0.159611, -0.071459), (0.219719, -0.147136, -0.047704), (0.219718, -0.157818, -0.047704), (-0.210809, -0.157817, -0.047704), (-0.210809, -0.147135, -0.047704), (0.197312, 0.031245, -0.060523), (0.197312, 0.031245, -0.267836), (-0.188402, 0.031246, -0.267836), (-0.188402, 0.031246, -0.060523), (-0.210809, -0.147135, -0.294733), (-0.210809, -0.157817, -0.294733), (0.219718, -0.157818, -0.294733), (0.219719, -0.147136, -0.294733), (-0.210809, -0.14239, -0.052448), (0.219719, -0.142392, -0.052448), (-0.210809, -0.14239, -0.289989), (0.219719, -0.142392, -0.289989), (0.219718, -0.162561, -0.052448), (-0.210809, -0.16256, -0.052448), (-0.210809, -0.16256, -0.289989), (0.219718, -0.162561, -0.289989), (0.211643, -0.142392, -0.060523), (-0.202734, -0.14239, -0.060523), (0.211643, -0.142392, -0.281914), (-0.202734, -0.14239, -0.281914), (0.211644, 0.045578, -0.281914), (0.211644, 0.045578, -0.060523), (-0.202734, 0.045578, -0.060523), (-0.202734, 0.045578, -0.281914), (-0.188402, -0.128059, -0.267836), (-0.188402, -0.128059, -0.060523), (0.197311, -0.128059, -0.060523), (0.197311, -0.128059, -0.267836), (-0.197713, -0.16256, -0.065545), (0.206622, -0.162561, -0.065545), (-0.197713, -0.16256, -0.276892), (0.206622, -0.162561, -0.276892), (-0.194756, -0.16256, -0.068502), (0.203665, -0.162561, -0.068502), (-0.194756, -0.16256, -0.273935), (0.203665, -0.162561, -0.273935), (-0.031007, -0.161589, -0.236373), (-0.031007, -0.163113, -0.236373), (-0.031007, -0.163113, -0.265756), (-0.031007, -0.161589, -0.265756), (-0.031007, -0.158834, -0.236373), (-0.031007, -0.158834, -0.265756), (0.039916, -0.163114, -0.265756), (0.039916, -0.161589, -0.265756), (0.039916, -0.158834, -0.265756), (0.039916, -0.163114, -0.236373), (0.039916, -0.161589, -0.236373), (0.039916, -0.158834, -0.236373), (0.038686, -0.164345, -0.264832), (-0.029777, -0.164345, -0.264832), (-0.029777, -0.164345, -0.237297), (0.038686, -0.164345, -0.237297)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (-0.169862, 0.67128), (-0.169862, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.67128), (0.096714, 0.67128), (0.096714, 0.818362), (0.096714, 0.818362), (0.092088, 0.675906), (-0.165236, 0.813735), (-0.165236, 0.675906), (0.092088, 0.675906), (0.092088, 0.813735), (-0.165236, 0.813735), (0.096714, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.169862, 0.818362), (0.096714, 0.818362), (-0.165236, 0.813735), (0.096714, 0.818362), (-0.169862, 0.818362), (-0.165236, 0.813735), (0.092088, 0.813735), (0.096714, 0.818362), (-0.165236, 0.675906), (-0.169862, 0.818362), (-0.169862, 0.67128), (-0.165236, 0.675906), (-0.165236, 0.813735), (-0.169862, 0.818362), (0.092088, 0.675906), (-0.169862, 0.67128), (0.096714, 0.67128), (0.092088, 0.675906), (-0.165236, 0.675906), (-0.169862, 0.67128), (0.092088, 0.813735), (0.096714, 0.67128), (0.096714, 0.818362), (0.092088, 0.813735), (0.092088, 0.675906), (0.096714, 0.67128)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_SideTableDrawer_220_2_1"
        {
            token outputs:surface.connect = </root/_materials/M_SideTableDrawer_220_2_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_SideTableDrawer_220_2_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_SideTableDrawer_220_2_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/WoodGrains1.jpg@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_220_2_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_SideTableDrawer_220_2_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

