#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "FridgeDrawer2_17_FridgeDrawer2C5_2_GeomSubset_0"
    {
        def Mesh "FridgeDrawer2_17_FridgeDrawer2C5_2_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 52, 53, 70, 63, 58, 37, 41, 57, 63, 34, 35, 62, 62, 35, 36, 64, 57, 41, 40, 69, 71, 38, 39, 70, 69, 40, 38, 71, 64, 36, 37, 58, 70, 39, 34, 63, 28, 34, 39, 29, 58, 77, 76, 64, 71, 79, 78, 69, 71, 70, 53, 80, 79, 57, 69, 78, 81, 62, 64, 76, 82, 62, 82, 83, 52, 63, 77, 58, 57, 81, 53, 52, 83, 80, 85, 84, 28, 29, 95, 94, 93, 92, 35, 34, 28, 84, 88, 89, 36, 35, 88, 40, 41, 86, 90, 38, 91, 85, 29, 39, 91, 38, 40, 90, 37, 36, 89, 87, 41, 37, 92, 93, 37, 87, 95, 92, 87, 86, 94, 95, 86, 41, 93, 94]
            rel material:binding = </root/_materials/M_FridgeDrawer2C5_0>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.0000018882565, -0.8671866, 0.49798334), (-5.569309e-7, -0.86718667, 0.49798328), (0, -0.9599153, 0.28029025), (0, -0.9599153, 0.28029025), (-0.03871543, -0.093068935, 0.99490666), (-0.009697438, -0.032397702, 0.999428), (0.009697405, -0.03239769, 0.999428), (0.038692832, -0.09311309, 0.9949034), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.08489819, 0.002696727, 0.996386), (-0.08486412, 0.002698936, 0.9963889), (0.038692832, -0.09311309, 0.9949034), (0.009697405, -0.03239769, 0.999428), (0.0848981, 0.0026967367, 0.996386), (0.08486402, 0.0026988427, 0.9963889), (-5.3743058e-8, 0, 1), (-5.4398594e-8, 0, 1), (-4.7288335e-8, 0, 1), (-5.717902e-8, 0, 1), (0.08486402, 0.0026988427, 0.9963889), (0.0848981, 0.0026967367, 0.996386), (-5.4398594e-8, 0, 1), (-5.3743058e-8, 0, 1), (-0.08486412, 0.002698936, 0.9963889), (-0.08489819, 0.002696727, 0.996386), (-0.009697438, -0.032397702, 0.999428), (-0.03871543, -0.093068935, 0.99490666), (-5.717902e-8, 0, 1), (-4.7288335e-8, 0, 1), (0, 0, 1), (0, 0, 1), (-1.0856583e-8, 0.91552013, -0.4022721), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.91552013, -0.4022721), (0.99970806, -0.009800144, -0.022086723), (0.99971646, -0.01007956, -0.021573195), (0.99972636, -0.010101834, -0.021100594), (0.9997123, -0.009568191, -0.021995999), (-0.9959937, 0.0600023, -0.06630418), (-0.99741966, 0.06078704, -0.038197674), (-0.9997242, -0.010100465, -0.021200782), (-0.99971235, -0.009563722, -0.021995345), (-0.9959937, 0.0600023, -0.06630418), (-0.99547553, 0.06451428, -0.06975977), (-0.99547553, 0.06451428, -0.06975977), (-0.9965983, 0.066201195, -0.04908411), (-0.99741966, 0.06078704, -0.038197674), (-0.9997085, -0.009798194, -0.022066513), (-0.99971235, -0.009563722, -0.021995345), (-0.9997242, -0.010100465, -0.021200782), (-0.9997238, -0.010286081, -0.021129968), (0.99599385, 0.060002133, -0.06630138), (0.9997123, -0.009568191, -0.021995999), (0.99972636, -0.010101834, -0.021100594), (0.9974194, 0.06078766, -0.03819809), (0.99599385, 0.060002133, -0.06630138), (0.9974194, 0.06078766, -0.03819809), (0.9965981, 0.06620081, -0.049087413), (0.99547553, 0.064514525, -0.0697598), (0.99547553, 0.064514525, -0.0697598), (0, 0.9823155, 0.18723343), (0, 0.98231214, 0.1872505), (0, 0.98231214, 0.1872505), (0, 0.9823155, 0.18723345), (-5.569309e-7, -0.86718667, 0.49798328), (-0.0000018882565, -0.8671866, 0.49798334), (0, -0.8446047, 0.5353903), (0, -0.8446047, 0.5353904), (0, 0.83701885, -0.54717416), (0, 0.83701885, -0.54717416), (-1.0856583e-8, 0.91552013, -0.4022721), (0, 0.91552013, -0.4022721), (0, -0.98569036, -0.16856624), (0, -0.98569036, -0.16856624), (0, -0.98569036, -0.16856624), (0, -0.98569036, -0.16856624), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, -5.300946e-8, 0), (-1, -5.300946e-8, 0), (-1, 0, 0), (-1, 0, 0), (-1, -5.300946e-8, 0), (1, 0, 0), (1, 0, 0), (1, -5.3195253e-9, 0), (1, -4.3110626e-9, 0), (1, -6.597861e-8, 0), (1, -3.2989306e-8, 0), (1, -9.029789e-8, 0), (1, -1.3195722e-7, 0), (1, -1.3195722e-7, 0), (1, -3.2989306e-8, 0), (1, -6.597861e-8, 0), (1, 0, 0), (1, -4.3110626e-9, 0), (-1, 0, 0), (-1, 0, 0), (-1, -5.300946e-8, 0), (-1, 0, 0), (0.009697405, -0.03239769, 0.999428), (-0.009697438, -0.032397702, 0.999428), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, -5.3195253e-9, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.000189, 0.040386, -1.019143), (0.000198, 0.040386, -1.019143), (0.000189, 0.040396, -1.019143), (0.000198, 0.040396, -1.019143), (0.000189, 0.040386, -1.019143), (0.000198, 0.040386, -1.019143), (0.000189, 0.040396, -1.019143), (0.000198, 0.040396, -1.019143), (0.000189, 0.040386, -1.019143), (0.000198, 0.040386, -1.019143), (0.000189, 0.040396, -1.019143), (0.000198, 0.040396, -1.019143), (0.000189, 0.040386, -1.019143), (0.000198, 0.040386, -1.019143), (0.000189, 0.040396, -1.019143), (0.000198, 0.040396, -1.019143), (0.000189, 0.040386, -1.019143), (0.000198, 0.040386, -1.019143), (0.000189, 0.040396, -1.019143), (0.000198, 0.040396, -1.019143), (0.000189, 0.040386, -1.019143), (0.000198, 0.040386, -1.019143), (0.000189, 0.040396, -1.019143), (0.000198, 0.040396, -1.019143), (0.000189, 0.040386, -1.019143), (0.000198, 0.040386, -1.019143), (0.000189, 0.040396, -1.019143), (0.000198, 0.040396, -1.019143), (0.024848, 0.167817, 0.018727), (0.397509, 0.167817, 0.018727), (0.024848, 0.091756, -0.097624), (0.024848, 0.086344, -0.100552), (0.397509, 0.086344, -0.100552), (0.397509, 0.091756, -0.097624), (0.024848, 0.167817, 0.026708), (0.024848, 0.091756, 0.026708), (0.024848, 0.086344, 0.026708), (0.024848, -0.189744, 0.026708), (0.397509, 0.091756, 0.026708), (0.397509, 0.167817, 0.026708), (0.397509, 0.086344, 0.026708), (0.397509, -0.189744, 0.026708), (0.397509, -0.149448, -0.100552), (0.397509, -0.171804, -0.078196), (0.024848, -0.171804, -0.078196), (0.024848, -0.149448, -0.100552), (0.024848, -0.170102, -0.086751), (0.397509, -0.170102, -0.086751), (0.024848, -0.165256, -0.094004), (0.397509, -0.165256, -0.094004), (0.024848, -0.158003, -0.09885), (0.397509, -0.158003, -0.09885), (0.028897, 0.15867, 0.021451), (0.39346, 0.15867, 0.021451), (0.391223, 0.086683, -0.09211), (0.031133, 0.086683, -0.09211), (0.393594, -0.162337, -0.076445), (0.391319, -0.182242, 0.027991), (0.031038, -0.182242, 0.027991), (0.028763, -0.162337, -0.076445), (0.391223, 0.084505, -0.093289), (0.031133, 0.084505, -0.093289), (0.033602, 0.091756, 0.026708), (0.031038, 0.160205, 0.026708), (0.033602, 0.086344, 0.026708), (0.393533, -0.161243, -0.083081), (0.393533, -0.158475, -0.087223), (0.393533, -0.154333, -0.08999), (0.393579, -0.148505, -0.09098), (0.388755, 0.086344, 0.026708), (0.391319, 0.160205, 0.026708), (0.388755, 0.091756, 0.026708), (0.028778, -0.148505, -0.09098), (0.028824, -0.154333, -0.08999), (0.028824, -0.158475, -0.087223), (0.028824, -0.161243, -0.083081), (0.033101, 0.085971, 0.002359), (0.030479, -0.177356, 0.002359), (0.389256, 0.085971, 0.002359), (0.389261, 0.090717, 0.002359), (0.393084, 0.146568, 0.002359), (0.391877, -0.177356, 0.002359), (0.033096, 0.090717, 0.002359), (0.029273, 0.146568, 0.002359), (0.024848, 0.157117, 0.002359), (0.397509, 0.157117, 0.002359), (0.397509, -0.18558, 0.002359), (0.024848, -0.18558, 0.002359), (0.024848, 0.091756, 0.002359), (0.024848, 0.086344, 0.002359), (0.397509, 0.086344, 0.002359), (0.397509, 0.091756, 0.002359), (0.024848, -0.204924, 0.026708), (0.397509, -0.204924, 0.026708), (0.397509, -0.20076, 0.002359), (0.024848, -0.20076, 0.002359)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-170.34332, -111.26219), (-170.34323, -111.26219), (-170.34323, -111.262115), (-170.34332, -111.262115), (-170.16176, 0.467683), (-170.16176, -0.569811), (-170.14682, -0.563719), (-170.14682, 0.461591), (-171.17992, -0.479131), (-171.19635, -0.499042), (-170.20735, -0.499042), (-170.22377, -0.479131), (-171.17992, 0.429692), (-171.19635, 0.449892), (-171.19635, 0.248035), (-171.17313, 0.248035), (-171.17313, 0.248035), (-171.19635, 0.248035), (-171.19635, 0.23367), (-171.17313, 0.23367), (-170.22377, -0.479131), (-170.20735, -0.499042), (-170.20735, 0.23367), (-170.23056, 0.23367), (-170.23056, 0.248035), (-170.20735, 0.248035), (-170.20735, 0.449892), (-170.22377, 0.429692), (-170.23056, 0.23367), (-170.20735, 0.23367), (-170.20735, 0.248035), (-170.23056, 0.248035), (-171.17313, 0.23367), (-171.19635, 0.23367), (-171.19635, -0.499042), (-171.17992, -0.479131), (-170.22377, 0.429692), (-170.20735, 0.449892), (-171.19635, 0.449892), (-171.17992, 0.429692), (-170.31119, 0.480121), (-170.33368, 0.480121), (-170.33368, -0.569682), (-170.31119, -0.569682), (-170.0562, 0.385702), (-170.12413, 0.372751), (-170.12413, -0.325348), (-170.05959, -0.326337), (-170.03864, 0.739387), (-170.1032, 0.736631), (-170.1032, 0.724051), (-170.03864, 0.72504), (-170.03864, 0.739387), (-170.03864, 0.920828), (-170.0526, 0.91676), (-170.1032, 0.884679), (-170.1032, 0.736631), (-170.03526, 0.013086), (-170.03864, 0.72504), (-170.1032, 0.724051), (-170.1032, 0.026035), (-170.05959, -0.340686), (-170.05959, -0.326337), (-170.12413, -0.325348), (-170.12413, -0.33793), (-170.05959, -0.340686), (-170.12413, -0.33793), (-170.12413, -0.485995), (-170.07353, -0.51808), (-170.05959, -0.522149), (-170.10196, 0.429498), (-170.17049, 0.428005), (-170.17049, -0.535045), (-170.10196, -0.536537), (-170.16176, -0.569811), (-170.16176, 0.467683), (-170.2161, 0.466614), (-170.2161, -0.568741), (-170.26505, -0.569682), (-170.26505, 0.480121), (-170.31119, 0.480121), (-170.31119, -0.569682), (-170.28763, 0.452494), (-170.28763, -0.542055), (-170.22266, -0.542055), (-170.22266, 0.452494), (-170.35556, 0.247587), (-170.35556, 0.449137), (-170.3767, 0.449137), (-170.42006, 0.420784), (-170.42006, 0.247587), (-170.42006, 0.233245), (-170.35556, 0.233245), (-170.35556, 0.247587), (-170.42006, 0.247587), (-170.31134, -0.32267), (-170.31134, 0.408892), (-170.37585, 0.397859), (-170.37585, -0.32267), (-170.31134, -0.337011), (-170.37585, -0.337011), (-170.37585, -0.5102), (-170.33249, -0.538552), (-170.31134, -0.538552), (-170.37585, -0.337011), (-170.31134, -0.337011), (-170.31134, -0.32267), (-170.37585, -0.32267), (-170.35556, -0.498348), (-170.35556, 0.233245), (-170.42006, 0.233245), (-170.42006, -0.487315), (-170.20735, -0.499042), (-171.19635, -0.499042), (-171.19635, -0.539329), (-170.20735, -0.539329), (-170.35556, -0.498348), (-170.42006, -0.487315), (-170.42006, -0.527539), (-170.35556, -0.538573), (-170.23816, 0.448746), (-170.23816, -0.538306), (-170.19792, -0.538306), (-170.19792, 0.448746), (-170.37585, 0.397859), (-170.31134, 0.408892), (-170.31134, 0.449115), (-170.37585, 0.438081)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer2C5_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2C5_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.03676468, 0.03676468, 0.03676468)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2C5_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge.tga@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2C5_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

