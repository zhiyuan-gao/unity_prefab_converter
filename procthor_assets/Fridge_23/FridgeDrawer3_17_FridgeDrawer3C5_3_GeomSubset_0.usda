#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "FridgeDrawer3_17_FridgeDrawer3C5_3_GeomSubset_0"
    {
        def Mesh "FridgeDrawer3_17_FridgeDrawer3C5_3_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 52, 53, 70, 63, 58, 37, 41, 57, 63, 34, 35, 62, 62, 35, 36, 64, 57, 41, 40, 69, 71, 38, 39, 70, 69, 40, 38, 71, 64, 36, 37, 58, 70, 39, 34, 63, 28, 34, 39, 29, 58, 77, 76, 64, 71, 79, 78, 69, 71, 70, 53, 80, 79, 57, 69, 78, 81, 62, 64, 76, 82, 62, 82, 83, 52, 63, 77, 58, 57, 81, 53, 52, 83, 80, 85, 84, 28, 29, 95, 94, 93, 92, 35, 34, 28, 84, 88, 89, 36, 35, 88, 40, 41, 86, 90, 38, 91, 85, 29, 39, 91, 38, 40, 90, 37, 36, 89, 87, 41, 37, 92, 93, 37, 87, 95, 92, 87, 86, 94, 95, 86, 41, 93, 94]
            rel material:binding = </root/_materials/M_FridgeDrawer3C5_0>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0.0000021478627, -0.8671963, 0.49796665), (-0.000004630536, -0.8671962, 0.49796668), (0, -0.95990115, 0.28033876), (0, -0.95990115, 0.28033876), (-0.03871651, -0.09306899, 0.99490666), (-0.009697082, -0.032397162, 0.999428), (0.00969711, -0.03239718, 0.999428), (0.0387165, -0.09306895, 0.99490666), (-9.1486436e-7, 0, 1), (-7.566134e-7, 0, 1), (-8.703776e-7, 0, 1), (-8.5988904e-7, 0, 1), (-8.5988904e-7, 0, 1), (-8.703776e-7, 0, 1), (-0.084897384, 0.0026967262, 0.9963861), (-0.08486333, 0.0026989356, 0.9963889), (0.0387165, -0.09306895, 0.99490666), (0.00969711, -0.03239718, 0.999428), (0.084897466, 0.0026967106, 0.9963861), (0.0848634, 0.0026988154, 0.996389), (4.2994498e-7, 0, 1), (4.3518926e-7, 0, 1), (3.7830705e-7, 0, 1), (4.5743266e-7, 0, 1), (0.0848634, 0.0026988154, 0.996389), (0.084897466, 0.0026967106, 0.9963861), (4.3518926e-7, 0, 1), (4.2994498e-7, 0, 1), (-0.08486333, 0.0026989356, 0.9963889), (-0.084897384, 0.0026967262, 0.9963861), (-0.009697082, -0.032397162, 0.999428), (-0.03871651, -0.09306899, 0.99490666), (4.5743266e-7, 0, 1), (3.7830705e-7, 0, 1), (-7.566134e-7, 0, 1), (-9.1486436e-7, 0, 1), (-1.0856583e-8, 0.91552013, -0.4022721), (0, 0.99999994, 0), (0, 0.99999994, 0), (0, 0.91552013, -0.4022721), (0.999708, -0.009800129, -0.022087842), (0.99971646, -0.010079529, -0.021573804), (0.99972636, -0.010100286, -0.021099979), (0.99971235, -0.009565977, -0.021995785), (-0.9959938, 0.06000268, -0.0663035), (-0.9974196, 0.060786445, -0.038198505), (-0.9997242, -0.01010138, -0.02119987), (-0.9997123, -0.009565858, -0.021996034), (-0.9959938, 0.06000268, -0.0663035), (-0.9954753, 0.06451513, -0.069762975), (-0.9954753, 0.06451513, -0.069762975), (-0.9965982, 0.06620078, -0.04908618), (-0.9974196, 0.060786445, -0.038198505), (-0.9997084, -0.009798222, -0.022067478), (-0.9997123, -0.009565858, -0.021996034), (-0.9997242, -0.01010138, -0.02119987), (-0.9997167, -0.010078608, -0.021562554), (0.9959936, 0.06000322, -0.06630541), (0.99971235, -0.009565977, -0.021995785), (0.99972636, -0.010100286, -0.021099979), (0.99741346, 0.060888328, -0.038195953), (0.9959936, 0.06000322, -0.06630541), (0.99741346, 0.060888328, -0.038195953), (0.9965981, 0.066200726, -0.049089372), (0.9954753, 0.06451482, -0.06976281), (0.9954753, 0.06451482, -0.06976281), (0, 0.98231494, 0.18723638), (0, 0.98231107, 0.18725626), (0, 0.98231107, 0.18725626), (0, 0.98231494, 0.1872364), (-0.000004630536, -0.8671962, 0.49796668), (0.0000021478627, -0.8671963, 0.49796665), (0, -0.8446049, 0.53539014), (0, -0.84460485, 0.5353902), (0, 0.8370188, -0.54717416), (0, 0.8370188, -0.54717416), (-1.0856583e-8, 0.91552013, -0.4022721), (0, 0.91552013, -0.4022721), (0, -0.9856891, -0.16857292), (0, -0.9856891, -0.16857292), (0, -0.9856891, -0.16857292), (0, -0.9856891, -0.16857292), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, -1.060189e-7, 0), (-1, -3.7041918e-8, 0), (-1, 0, 0), (-1, 0, 0), (-1, -1.060189e-7, 0), (1, 0, 0), (1, 0, 0), (1, -4.1558781e-10, 0), (1, -3.3680167e-10, 0), (1, -4.1238413e-9, 0), (1, -2.0619206e-9, 0), (1, -5.643862e-9, 0), (1, -8.2476825e-9, 0), (1, -8.2476825e-9, 0), (1, -2.0619206e-9, 0), (1, -4.1238413e-9, 0), (1, 0, 0), (1, -3.3680167e-10, 0), (-1, 0, 0), (-1, 0, 0), (-1, -3.7041918e-8, 0), (-1, 8.51124e-8, 0), (0.00969711, -0.03239718, 0.999428), (-0.009697082, -0.032397162, 0.999428), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 8.51124e-8, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, -4.1558781e-10, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.000189, 0.040386, -1.019143), (0.000198, 0.040386, -1.019143), (0.000189, 0.040396, -1.019143), (0.000198, 0.040396, -1.019143), (0.000189, 0.040386, -1.019143), (0.000198, 0.040386, -1.019143), (0.000189, 0.040396, -1.019143), (0.000198, 0.040396, -1.019143), (0.000189, 0.040386, -1.019143), (0.000198, 0.040386, -1.019143), (0.000189, 0.040396, -1.019143), (0.000198, 0.040396, -1.019143), (0.000189, 0.040386, -1.019143), (0.000198, 0.040386, -1.019143), (0.000189, 0.040396, -1.019143), (0.000198, 0.040396, -1.019143), (0.000189, 0.040386, -1.019143), (0.000198, 0.040386, -1.019143), (0.000189, 0.040396, -1.019143), (0.000198, 0.040396, -1.019143), (0.000189, 0.040386, -1.019143), (0.000198, 0.040386, -1.019143), (0.000189, 0.040396, -1.019143), (0.000198, 0.040396, -1.019143), (0.000189, 0.040386, -1.019143), (0.000198, 0.040386, -1.019143), (0.000189, 0.040396, -1.019143), (0.000198, 0.040396, -1.019143), (-0.397143, 0.167817, -0.152393), (-0.024482, 0.167817, -0.152393), (-0.397143, 0.091756, -0.268744), (-0.397143, 0.086344, -0.271672), (-0.024482, 0.086344, -0.271672), (-0.024482, 0.091756, -0.268744), (-0.397143, 0.167817, -0.144413), (-0.397143, 0.091756, -0.144413), (-0.397143, 0.086344, -0.144413), (-0.397143, -0.189744, -0.144413), (-0.024482, 0.091756, -0.144413), (-0.024482, 0.167817, -0.144413), (-0.024482, 0.086344, -0.144413), (-0.024482, -0.189744, -0.144413), (-0.024482, -0.149448, -0.271672), (-0.024482, -0.171804, -0.249316), (-0.397143, -0.171804, -0.249316), (-0.397143, -0.149448, -0.271672), (-0.397143, -0.170102, -0.257871), (-0.024482, -0.170102, -0.257871), (-0.397143, -0.165256, -0.265124), (-0.024482, -0.165256, -0.265124), (-0.397143, -0.158003, -0.269971), (-0.024482, -0.158003, -0.269971), (-0.393094, 0.15867, -0.149669), (-0.028531, 0.15867, -0.149669), (-0.030768, 0.086683, -0.26323), (-0.390858, 0.086683, -0.26323), (-0.028397, -0.162337, -0.247565), (-0.030672, -0.182242, -0.14313), (-0.390953, -0.182242, -0.14313), (-0.393228, -0.162337, -0.247565), (-0.030768, 0.084505, -0.264409), (-0.390858, 0.084505, -0.264409), (-0.388389, 0.091756, -0.144413), (-0.390953, 0.160205, -0.144413), (-0.388389, 0.086344, -0.144413), (-0.028458, -0.161243, -0.254201), (-0.028458, -0.158475, -0.258343), (-0.028458, -0.154333, -0.26111), (-0.028412, -0.148505, -0.2621), (-0.033236, 0.086344, -0.144413), (-0.030672, 0.160205, -0.144413), (-0.033236, 0.091756, -0.144413), (-0.393213, -0.148505, -0.2621), (-0.393167, -0.154333, -0.26111), (-0.393167, -0.158475, -0.258343), (-0.393167, -0.161243, -0.254201), (-0.38889, 0.085971, -0.168761), (-0.391512, -0.177356, -0.168761), (-0.032735, 0.085971, -0.168761), (-0.03273, 0.090717, -0.168761), (-0.028907, 0.146568, -0.168761), (-0.030114, -0.177356, -0.168761), (-0.388895, 0.090717, -0.168761), (-0.392718, 0.146568, -0.168761), (-0.397143, 0.157117, -0.168761), (-0.024482, 0.157117, -0.168761), (-0.024482, -0.18558, -0.168761), (-0.397143, -0.18558, -0.168761), (-0.397143, 0.091756, -0.168761), (-0.397143, 0.086344, -0.168761), (-0.024482, 0.086344, -0.168761), (-0.024482, 0.091756, -0.168761), (-0.397143, -0.204924, -0.144413), (-0.024482, -0.204924, -0.144413), (-0.024482, -0.20076, -0.168761), (-0.397143, -0.20076, -0.168761)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-170.34326, -111.26219), (-170.34323, -111.26219), (-170.34323, -111.262115), (-170.34326, -111.262115), (-170.16176, 0.46768), (-170.16176, -0.569807), (-170.14682, -0.563714), (-170.14682, 0.461587), (-171.17989, -0.479112), (-171.19632, -0.499021), (-170.20737, -0.499021), (-170.2238, -0.479112), (-171.17989, 0.42967), (-171.19632, 0.449869), (-171.19632, 0.248021), (-171.1731, 0.248021), (-171.1731, 0.248021), (-171.19632, 0.248021), (-171.19632, 0.233658), (-171.1731, 0.233658), (-170.2238, -0.479112), (-170.20737, -0.499021), (-170.20737, 0.233658), (-170.2306, 0.233658), (-170.2306, 0.248021), (-170.20737, 0.248021), (-170.20737, 0.449869), (-170.2238, 0.42967), (-170.2306, 0.233658), (-170.20737, 0.233658), (-170.20737, 0.248021), (-170.2306, 0.248021), (-171.1731, 0.233658), (-171.19632, 0.233658), (-171.19632, -0.499021), (-171.17989, -0.479112), (-170.2238, 0.42967), (-170.20737, 0.449869), (-171.19632, 0.449869), (-171.17989, 0.42967), (-170.31119, 0.480206), (-170.33368, 0.480206), (-170.33368, -0.569766), (-170.31119, -0.569766), (-170.0562, 0.385702), (-170.12413, 0.372751), (-170.12413, -0.325348), (-170.05959, -0.326337), (-170.03864, 0.739407), (-170.1032, 0.736651), (-170.1032, 0.72407), (-170.03864, 0.725058), (-170.03864, 0.739407), (-170.03864, 0.920861), (-170.0526, 0.916792), (-170.1032, 0.88471), (-170.1032, 0.736651), (-170.03526, 0.013053), (-170.03864, 0.725058), (-170.1032, 0.72407), (-170.1032, 0.026003), (-170.05959, -0.340686), (-170.05959, -0.326337), (-170.12413, -0.325348), (-170.12413, -0.33793), (-170.05959, -0.340686), (-170.12413, -0.33793), (-170.12413, -0.485995), (-170.07353, -0.51808), (-170.05959, -0.522149), (-170.10196, 0.429495), (-170.17049, 0.428002), (-170.17049, -0.535041), (-170.10196, -0.536533), (-170.16176, -0.569807), (-170.16176, 0.46768), (-170.2161, 0.46661), (-170.2161, -0.568737), (-170.26506, -0.569766), (-170.26506, 0.480206), (-170.31119, 0.480206), (-170.31119, -0.569766), (-170.28763, 0.452509), (-170.28763, -0.542069), (-170.22266, -0.542069), (-170.22266, 0.452509), (-170.35556, 0.247571), (-170.35556, 0.449109), (-170.3767, 0.449109), (-170.42006, 0.420758), (-170.42006, 0.247571), (-170.42006, 0.233229), (-170.35556, 0.233229), (-170.35556, 0.247571), (-170.42006, 0.247571), (-170.31134, -0.322668), (-170.31134, 0.408889), (-170.37585, 0.397856), (-170.37585, -0.322668), (-170.31134, -0.33701), (-170.37585, -0.33701), (-170.37585, -0.510198), (-170.33249, -0.538549), (-170.31134, -0.538549), (-170.37585, -0.33701), (-170.31134, -0.33701), (-170.31134, -0.322668), (-170.37585, -0.322668), (-170.35556, -0.498323), (-170.35556, 0.233229), (-170.42006, 0.233229), (-170.42006, -0.48729), (-170.20737, -0.499021), (-171.19632, -0.499021), (-171.19632, -0.539306), (-170.20737, -0.539306), (-170.35556, -0.498323), (-170.42006, -0.48729), (-170.42006, -0.527512), (-170.35556, -0.538546), (-170.23816, 0.448903), (-170.23816, -0.538463), (-170.19792, -0.538463), (-170.19792, 0.448903), (-170.37585, 0.397856), (-170.31134, 0.408889), (-170.31134, 0.449112), (-170.37585, 0.438079)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer3C5_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer3C5_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.03676468, 0.03676468, 0.03676468)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer3C5_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge.tga@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer3C5_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

