#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "FridgeDrawer2_17_FridgeDrawer2C5_2_GeomSubset_5"
    {
        def Mesh "FridgeDrawer2_17_FridgeDrawer2C5_2_GeomSubset_5"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4]
            int[] faceVertexIndices = [20, 21, 23, 22]
            rel material:binding = </root/_materials/M_FridgeDrawer2C5_5>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.000189, 0.040386, -1.019143), (0.000198, 0.040386, -1.019143), (0.000189, 0.040396, -1.019143), (0.000198, 0.040396, -1.019143), (0.000189, 0.040386, -1.019143), (0.000198, 0.040386, -1.019143), (0.000189, 0.040396, -1.019143), (0.000198, 0.040396, -1.019143), (0.000189, 0.040386, -1.019143), (0.000198, 0.040386, -1.019143), (0.000189, 0.040396, -1.019143), (0.000198, 0.040396, -1.019143), (0.000189, 0.040386, -1.019143), (0.000198, 0.040386, -1.019143), (0.000189, 0.040396, -1.019143), (0.000198, 0.040396, -1.019143), (0.000189, 0.040386, -1.019143), (0.000198, 0.040386, -1.019143), (0.000189, 0.040396, -1.019143), (0.000198, 0.040396, -1.019143), (0.000189, 0.040386, -1.019143), (0.000198, 0.040386, -1.019143), (0.000189, 0.040396, -1.019143), (0.000198, 0.040396, -1.019143), (0.000189, 0.040386, -1.019143), (0.000198, 0.040386, -1.019143), (0.000189, 0.040396, -1.019143), (0.000198, 0.040396, -1.019143), (0.024848, 0.167817, 0.018727), (0.397509, 0.167817, 0.018727), (0.024848, 0.091756, -0.097624), (0.024848, 0.086344, -0.100552), (0.397509, 0.086344, -0.100552), (0.397509, 0.091756, -0.097624), (0.024848, 0.167817, 0.026708), (0.024848, 0.091756, 0.026708), (0.024848, 0.086344, 0.026708), (0.024848, -0.189744, 0.026708), (0.397509, 0.091756, 0.026708), (0.397509, 0.167817, 0.026708), (0.397509, 0.086344, 0.026708), (0.397509, -0.189744, 0.026708), (0.397509, -0.149448, -0.100552), (0.397509, -0.171804, -0.078196), (0.024848, -0.171804, -0.078196), (0.024848, -0.149448, -0.100552), (0.024848, -0.170102, -0.086751), (0.397509, -0.170102, -0.086751), (0.024848, -0.165256, -0.094004), (0.397509, -0.165256, -0.094004), (0.024848, -0.158003, -0.09885), (0.397509, -0.158003, -0.09885), (0.028897, 0.15867, 0.021451), (0.39346, 0.15867, 0.021451), (0.391223, 0.086683, -0.09211), (0.031133, 0.086683, -0.09211), (0.393594, -0.162337, -0.076445), (0.391319, -0.182242, 0.027991), (0.031038, -0.182242, 0.027991), (0.028763, -0.162337, -0.076445), (0.391223, 0.084505, -0.093289), (0.031133, 0.084505, -0.093289), (0.033602, 0.091756, 0.026708), (0.031038, 0.160205, 0.026708), (0.033602, 0.086344, 0.026708), (0.393533, -0.161243, -0.083081), (0.393533, -0.158475, -0.087223), (0.393533, -0.154333, -0.08999), (0.393579, -0.148505, -0.09098), (0.388755, 0.086344, 0.026708), (0.391319, 0.160205, 0.026708), (0.388755, 0.091756, 0.026708), (0.028778, -0.148505, -0.09098), (0.028824, -0.154333, -0.08999), (0.028824, -0.158475, -0.087223), (0.028824, -0.161243, -0.083081), (0.033101, 0.085971, 0.002359), (0.030479, -0.177356, 0.002359), (0.389256, 0.085971, 0.002359), (0.389261, 0.090717, 0.002359), (0.393084, 0.146568, 0.002359), (0.391877, -0.177356, 0.002359), (0.033096, 0.090717, 0.002359), (0.029273, 0.146568, 0.002359), (0.024848, 0.157117, 0.002359), (0.397509, 0.157117, 0.002359), (0.397509, -0.18558, 0.002359), (0.024848, -0.18558, 0.002359), (0.024848, 0.091756, 0.002359), (0.024848, 0.086344, 0.002359), (0.397509, 0.086344, 0.002359), (0.397509, 0.091756, 0.002359), (0.024848, -0.204924, 0.026708), (0.397509, -0.204924, 0.026708), (0.397509, -0.20076, 0.002359), (0.024848, -0.20076, 0.002359)]
            bool[] primvars:sharp_face = [0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(5.646933, -121.22408), (7.358486, -121.22408), (7.358486, -119.51253), (5.646933, -119.51253)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer2C5_5"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2C5_5/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer2C5_5/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2C5_5/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Decal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2C5_5/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Decal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2C5_5/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

