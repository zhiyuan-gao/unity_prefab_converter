#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "FridgeDrawer1_17_FridgeDrawer1C5_1_GeomSubset_0"
    {
        def Mesh "FridgeDrawer1_17_FridgeDrawer1C5_1_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 52, 53, 70, 63, 58, 37, 41, 57, 63, 34, 35, 62, 62, 35, 36, 64, 57, 41, 40, 69, 71, 38, 39, 70, 69, 40, 38, 71, 64, 36, 37, 58, 70, 39, 34, 63, 28, 34, 39, 29, 58, 77, 76, 64, 71, 79, 78, 69, 71, 70, 53, 80, 79, 57, 69, 78, 81, 62, 64, 76, 82, 62, 82, 83, 52, 63, 77, 58, 57, 81, 53, 52, 83, 80, 85, 84, 28, 29, 95, 94, 93, 92, 35, 34, 28, 84, 88, 89, 36, 35, 88, 40, 41, 86, 90, 38, 91, 85, 29, 39, 91, 38, 40, 90, 37, 36, 89, 87, 41, 37, 92, 93, 37, 87, 95, 92, 87, 86, 94, 95, 86, 41, 93, 94]
            rel material:binding = </root/_materials/M_FridgeDrawer1C5_0>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0.0000021409942, 0.9377059, -0.3474302), (6.556511e-7, 0.9377058, -0.34743026), (0, 0.9599153, -0.28029022), (0, 0.9599153, -0.28029022), (-0.051787294, 0.06722468, -0.9963929), (-0.029098108, 0.061696663, -0.9976706), (0.029098108, 0.061696675, -0.9976706), (0.051787384, 0.067224726, -0.9963929), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.0027318709, -0.000101427664, -0.9999963), (-0.00092588365, -7.590277e-7, -0.9999996), (0.051787384, 0.067224726, -0.9963929), (0.029098108, 0.061696675, -0.9976706), (0.0027318671, -0.00010143046, -0.99999624), (0.00092588365, -8.593197e-7, -0.9999996), (-5.3743122e-8, 0, -1), (-5.4398658e-8, 0, -1), (-4.728838e-8, 0, -1), (-5.7179083e-8, 0, -1), (0.00092588365, -8.593197e-7, -0.9999996), (0.0027318671, -0.00010143046, -0.99999624), (-5.4398658e-8, 0, -1), (-5.3743122e-8, 0, -1), (-0.00092588365, -7.590277e-7, -0.9999996), (-0.0027318709, -0.000101427664, -0.9999963), (-0.029098108, 0.061696663, -0.9976706), (-0.051787294, 0.06722468, -0.9963929), (-5.7179083e-8, 0, -1), (-4.728838e-8, 0, -1), (0, 0, -1), (0, 0, -1), (8.481727e-9, -0.9815637, 0.19113517), (0, -0.99999994, 0), (0, -0.99999994, 0), (0, -0.9815637, 0.19113517), (0.99970806, 0.009800152, 0.022086948), (0.9997122, 0.009895787, 0.021854045), (0.9997746, -0.0023633908, 0.021099715), (0.99978554, -0.00036900482, 0.020703962), (-0.9996484, -0.006899905, 0.025601512), (-0.999549, -0.008509776, 0.028801724), (-0.99977446, -0.0024097052, 0.021100108), (-0.99978566, -0.00041665556, 0.020697717), (-0.9996484, -0.006899905, 0.025601512), (-0.99547553, -0.064514466, 0.06975992), (-0.99547553, -0.064514466, 0.06975992), (-0.99600697, -0.065302245, 0.06087579), (-0.999549, -0.008509776, 0.028801724), (-0.9997085, 0.009798212, 0.022066588), (-0.99978566, -0.00041665556, 0.020697717), (-0.99977446, -0.0024097052, 0.021100108), (-0.9997118, 0.0099220155, 0.021858795), (0.9996484, -0.0069012884, 0.025602393), (0.99978554, -0.00036900482, 0.020703962), (0.9997746, -0.0023633908, 0.021099715), (0.99955213, -0.008483099, 0.028698865), (0.9996484, -0.0069012884, 0.025602393), (0.99955213, -0.008483099, 0.028698865), (0.99600667, -0.0653021, 0.060879022), (0.99547553, -0.06451428, 0.06975977), (0.99547553, -0.06451428, 0.06975977), (0, -0.98231554, -0.18723291), (0, -0.98231244, -0.18724918), (0, -0.98231244, -0.18724918), (0, -0.98231554, -0.18723288), (6.556511e-7, 0.9377058, -0.34743026), (0.0000021409942, 0.9377059, -0.3474302), (0, 0.8446049, -0.5353901), (0, 0.8446049, -0.5353901), (0, -0.83701885, 0.54717416), (0, -0.83701885, 0.54717416), (8.481727e-9, -0.9815637, 0.19113517), (0, -0.9815637, 0.19113517), (0, 0.98569036, 0.16856624), (0, 0.98569036, 0.16856624), (0, 0.98569036, 0.16856624), (0, 0.98569036, 0.16856624), (-1, 1.3195722e-7, 0), (-1, 2.6391444e-7, 0), (-1, 2.6391444e-7, 0), (-1, 1.8059578e-7, 0), (-1, 8.611205e-7, 0), (-1, 7.951419e-7, 0), (-1, 0, 0), (-1, 1.3195722e-7, 0), (-1, 8.611205e-7, 0), (1, 0, 0), (1, 0, 0), (1, 2.4935273e-10, 0), (1, -1.0581684e-7, 0), (1, 0, 0), (1, -1.0601892e-7, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, -1.0601892e-7, 0), (1, 0, 0), (1, 0, 0), (1, -1.0581684e-7, 0), (-1, 0, 0), (-1, 0, 0), (-1, 7.951419e-7, 0), (-1, 0, 0), (0.029098108, 0.061696675, -0.9976706), (-0.029098108, 0.061696663, -0.9976706), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 2.4935273e-10, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.000189, 0.040386, -1.019143), (-0.000198, 0.040386, -1.019143), (-0.000189, 0.040396, -1.019143), (-0.000198, 0.040396, -1.019143), (-0.000189, 0.040386, -1.019143), (-0.000198, 0.040386, -1.019143), (-0.000189, 0.040396, -1.019143), (-0.000198, 0.040396, -1.019143), (-0.000189, 0.040386, -1.019143), (-0.000198, 0.040386, -1.019143), (-0.000189, 0.040396, -1.019143), (-0.000198, 0.040396, -1.019143), (-0.000189, 0.040386, -1.019143), (-0.000198, 0.040386, -1.019143), (-0.000189, 0.040396, -1.019143), (-0.000198, 0.040396, -1.019143), (-0.000189, 0.040386, -1.019143), (-0.000198, 0.040386, -1.019143), (-0.000189, 0.040396, -1.019143), (-0.000198, 0.040396, -1.019143), (-0.000189, 0.040386, -1.019143), (-0.000198, 0.040386, -1.019143), (-0.000189, 0.040396, -1.019143), (-0.000198, 0.040396, -1.019143), (-0.000189, 0.040386, -1.019143), (-0.000198, 0.040386, -1.019143), (-0.000189, 0.040396, -1.019143), (-0.000198, 0.040396, -1.019143), (0.397143, 0.167817, 0.018727), (0.024482, 0.167817, 0.018727), (0.397143, 0.091756, -0.097624), (0.397143, 0.086344, -0.100552), (0.024482, 0.086344, -0.100552), (0.024482, 0.091756, -0.097624), (0.397143, 0.167817, 0.026708), (0.397143, 0.091756, 0.026708), (0.397143, 0.086344, 0.026708), (0.397143, -0.189744, 0.026708), (0.024482, 0.091756, 0.026708), (0.024482, 0.167817, 0.026708), (0.024482, 0.086344, 0.026708), (0.024482, -0.189744, 0.026708), (0.024482, -0.149448, -0.100552), (0.024482, -0.171804, -0.078196), (0.397143, -0.171804, -0.078196), (0.397143, -0.149448, -0.100552), (0.397143, -0.170102, -0.086751), (0.024482, -0.170102, -0.086751), (0.397143, -0.165256, -0.094004), (0.024482, -0.165256, -0.094004), (0.397143, -0.158003, -0.09885), (0.024482, -0.158003, -0.09885), (0.393094, 0.15867, 0.021451), (0.028531, 0.15867, 0.021451), (0.030768, 0.086683, -0.09211), (0.390858, 0.086683, -0.09211), (0.028397, -0.162337, -0.076445), (0.030672, -0.182242, 0.027991), (0.390953, -0.182242, 0.027991), (0.393228, -0.162337, -0.076445), (0.030768, 0.084505, -0.093289), (0.390858, 0.084505, -0.093289), (0.388389, 0.091756, 0.026708), (0.390953, 0.160205, 0.026708), (0.388389, 0.086344, 0.026708), (0.028458, -0.161243, -0.083081), (0.028458, -0.158475, -0.087223), (0.028458, -0.154333, -0.08999), (0.028412, -0.148505, -0.09098), (0.033236, 0.086344, 0.026708), (0.030672, 0.160205, 0.026708), (0.033236, 0.091756, 0.026708), (0.393213, -0.148505, -0.09098), (0.393167, -0.154333, -0.08999), (0.393167, -0.158475, -0.087223), (0.393167, -0.161243, -0.083081), (0.38889, 0.085971, 0.002359), (0.391512, -0.177356, 0.002359), (0.032735, 0.085971, 0.002359), (0.03273, 0.090717, 0.002359), (0.028907, 0.146568, 0.002359), (0.030114, -0.177356, 0.002359), (0.388895, 0.090717, 0.002359), (0.392718, 0.146568, 0.002359), (0.397143, 0.157117, 0.002359), (0.024482, 0.157117, 0.002359), (0.024482, -0.18558, 0.002359), (0.397143, -0.18558, 0.002359), (0.397143, 0.091756, 0.002359), (0.397143, 0.086344, 0.002359), (0.024482, 0.086344, 0.002359), (0.024482, 0.091756, 0.002359), (0.397143, -0.204924, 0.026708), (0.024482, -0.204924, 0.026708), (0.024482, -0.20076, 0.002359), (0.397143, -0.20076, 0.002359)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-170.34326, -111.26219), (-170.34323, -111.26219), (-170.34323, -111.262115), (-170.34326, -111.262115), (-170.16176, 0.4677), (-170.16176, -0.569827), (-170.14682, -0.563734), (-170.14682, 0.461607), (-171.17992, -0.479141), (-171.19637, -0.499052), (-170.20734, -0.499052), (-170.22377, -0.479141), (-171.17992, 0.429702), (-171.19637, 0.449903), (-171.19637, 0.248041), (-171.17313, 0.248041), (-171.17313, 0.248041), (-171.19637, 0.248041), (-171.19637, 0.233676), (-171.17313, 0.233676), (-170.22377, -0.479141), (-170.20734, -0.499052), (-170.20734, 0.233676), (-170.23056, 0.233676), (-170.23056, 0.248041), (-170.20734, 0.248041), (-170.20734, 0.449903), (-170.22377, 0.429702), (-170.23056, 0.233676), (-170.20734, 0.233676), (-170.20734, 0.248041), (-170.23056, 0.248041), (-171.17313, 0.233676), (-171.19637, 0.233676), (-171.19637, -0.499052), (-171.17992, -0.479141), (-170.22377, 0.429702), (-170.20734, 0.449903), (-171.19637, 0.449903), (-171.17992, 0.429702), (-170.31119, 0.480091), (-170.33368, 0.480091), (-170.33368, -0.569651), (-170.31119, -0.569651), (-170.0562, 0.385719), (-170.12413, 0.372768), (-170.12413, -0.325357), (-170.05959, -0.326346), (-170.03864, 0.739376), (-170.1032, 0.736621), (-170.1032, 0.724041), (-170.03864, 0.72503), (-170.03864, 0.739376), (-170.03864, 0.920811), (-170.0526, 0.916742), (-170.1032, 0.884663), (-170.1032, 0.736621), (-170.03526, 0.013103), (-170.03864, 0.72503), (-170.1032, 0.724041), (-170.1032, 0.026052), (-170.05959, -0.340696), (-170.05959, -0.326346), (-170.12413, -0.325357), (-170.12413, -0.33794), (-170.05959, -0.340696), (-170.12413, -0.33794), (-170.12413, -0.486011), (-170.07353, -0.518096), (-170.05959, -0.522166), (-170.10197, 0.429561), (-170.17047, 0.428069), (-170.17047, -0.535107), (-170.10197, -0.5366), (-170.16176, -0.569827), (-170.16176, 0.4677), (-170.2161, 0.46663), (-170.2161, -0.568757), (-170.26505, -0.569651), (-170.26505, 0.480091), (-170.31119, 0.480091), (-170.31119, -0.569651), (-170.28763, 0.452512), (-170.28763, -0.542072), (-170.22266, -0.542072), (-170.22266, 0.452512), (-170.35556, 0.247587), (-170.35556, 0.449137), (-170.3767, 0.449137), (-170.42006, 0.420784), (-170.42006, 0.247587), (-170.42006, 0.233245), (-170.35556, 0.233245), (-170.35556, 0.247587), (-170.42006, 0.247587), (-170.31134, -0.32267), (-170.31134, 0.408892), (-170.37585, 0.397859), (-170.37585, -0.32267), (-170.31134, -0.337011), (-170.37585, -0.337011), (-170.37585, -0.5102), (-170.33249, -0.538552), (-170.31134, -0.538552), (-170.37585, -0.337011), (-170.31134, -0.337011), (-170.31134, -0.32267), (-170.37585, -0.32267), (-170.35556, -0.498348), (-170.35556, 0.233245), (-170.42006, 0.233245), (-170.42006, -0.487315), (-170.20734, -0.499052), (-171.19637, -0.499052), (-171.19637, -0.539339), (-170.20734, -0.539339), (-170.35556, -0.498348), (-170.42006, -0.487315), (-170.42006, -0.527539), (-170.35556, -0.538573), (-170.23816, 0.448824), (-170.23816, -0.538384), (-170.19792, -0.538384), (-170.19792, 0.448824), (-170.37585, 0.397859), (-170.31134, 0.408892), (-170.31134, 0.449115), (-170.37585, 0.438081)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer1C5_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1C5_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.03676468, 0.03676468, 0.03676468)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1C5_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge.tga@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1C5_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

