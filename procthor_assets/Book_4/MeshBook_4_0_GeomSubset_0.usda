#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshBook_4_0_GeomSubset_0"
    {
        def Mesh "MeshBook_4_0_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [1, 0, 3, 2, 4, 5, 6, 7, 7, 6, 10, 11, 8, 9, 11, 10, 6, 2, 3, 10, 7, 11, 24, 25, 6, 5, 1, 2, 0, 8, 10, 3, 11, 9, 27, 24, 25, 26, 4, 7, 17, 16, 20, 21, 21, 22, 18, 17, 16, 19, 23, 20, 21, 20, 13, 14, 14, 15, 22, 21, 20, 23, 12, 13, 25, 24, 16, 17, 17, 18, 26, 25, 24, 27, 19, 16, 135, 134, 132, 133, 13, 12, 132, 134, 15, 14, 135, 133, 132, 12, 15, 133, 13, 134, 135, 14]
            rel material:binding = </root/_materials/M_Book_4_0>
            normal3f[] normals = [(1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, -0.0000026437099), (0, -1, -0.000002490208), (0, -1, -0.0000046320515), (0, -1, -0.000004305851), (-0.88181686, 6.605299e-7, 0.471592), (-0.622363, 0, 0.7827288), (-0.622363, -2.3742299e-8, 0.7827288), (-0.88181686, 0, 0.471592), (0, 1, -0.0000024901997), (0, 1, -0.0000026437012), (0, 1, -0.0000043058362), (0, 1, -0.0000046320365), (-0.622363, 0, 0.7827288), (0, 0, 0.99999994), (0, 0, 0.99999994), (-0.622363, -2.3742299e-8, 0.7827288), (-0.88181686, 6.605299e-7, 0.471592), (-0.88181686, 0, 0.471592), (-0.98437566, 0, 0.1760808), (-0.98437566, 0, 0.1760808), (0, -1, -0.0000046320515), (0, -1, -0.000002490208), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, -0.0000024901997), (0, 1, -0.0000046320365), (0, 1, 0), (0, 1, -0.0000043058362), (0, 1, -0.0000026437012), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, -0.0000026437099), (0, -1, -0.000004305851), (-0.9929671, 0, 0.118390694), (-0.9929671, 0, 0.118390694), (-0.9985493, 0, 0.053845752), (-0.9985493, 0, 0.053845752), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-0.9985493, 0, 0.053845752), (-0.9985493, 0, 0.053845752), (-0.932897, -0.000006508082, -0.3601434), (-0.9329271, 0, -0.3600653), (-0.0000050626695, -0.973832, -0.22726895), (-0.0000033974648, -0.975686, -0.21917312), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (-0.0000010538058, 0.99972415, 0.023487637), (-9.103678e-7, 0.99967724, 0.025404599), (-0.98437566, 0, 0.1760808), (-0.98437566, 0, 0.1760808), (-0.9929671, 0, 0.118390694), (-0.9929671, 0, 0.118390694), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (-0.4712311, 0.0000035054982, -0.8820098), (-0.47109768, -8.469797e-7, -0.88208103), (0.47103095, -0.0000035185367, -0.8821167), (0.47109768, 8.469797e-7, -0.88208103), (0.000014381716, 0.8056053, -0.59245265), (-0.000009849668, 0.8044963, -0.5939578), (-1.48067585e-8, 0.94639057, -0.32302478), (3.5739504e-8, 0.94639057, -0.32302478), (-0.0000033974648, -0.975686, -0.21917312), (-0.0000050626695, -0.973832, -0.22726895), (4.9355875e-9, -0.9460804, -0.323932), (-1.1888915e-8, -0.9460804, -0.323932), (0.47103095, -0.0000035185367, -0.8821167), (0.8485736, 0, -0.5290774), (0.8485736, 0, -0.5290774), (0.47109768, 8.469797e-7, -0.88208103), (-0.932897, -0.000006508082, -0.3601434), (-0.47109768, -8.469797e-7, -0.88208103), (-0.4712311, 0.0000035054982, -0.8820098), (-0.9329271, 0, -0.3600653)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.068402, -0.095298, -0.01461), (-0.068402, 0.095298, -0.01461), (-0.068402, 0.095298, -0.015281), (-0.068402, -0.095298, -0.015281), (0.07576, 0.095298, -0.013036), (0.074133, 0.095298, -0.01461), (0.074924, 0.095298, -0.015281), (0.076403, 0.095298, -0.013778), (0.074133, -0.095298, -0.01461), (0.07576, -0.095298, -0.013036), (0.074924, -0.095298, -0.015281), (0.076403, -0.095298, -0.013778), (0.076654, -0.095298, -0.004173), (0.077521, -0.095298, -0.004173), (0.077521, 0.095298, -0.004173), (0.076654, 0.095298, -0.004173), (0.077262, -0.095298, -0.008976), (0.077262, 0.095298, -0.008976), (0.0764, 0.095298, -0.008605), (0.0764, -0.095298, -0.008605), (0.077391, -0.095298, -0.006575), (0.077391, 0.095298, -0.006575), (0.07654, 0.095298, -0.006389), (0.07654, -0.095298, -0.006389), (0.076816, -0.095298, -0.011377), (0.076816, 0.095298, -0.011377), (0.076097, 0.095298, -0.010821), (0.076097, -0.095298, -0.010821), (0.075505, 0.095298, -0.004173), (-0.068402, 0.095298, -0.004173), (-0.068402, -0.095298, -0.004173), (0.075505, -0.095298, -0.004173), (0.075231, 0.095298, -0.009392), (-0.068402, 0.095298, -0.009392), (-0.068402, -0.095298, -0.009392), (0.075231, -0.095298, -0.009392), (0.075505, -0.094256, -0.001549), (0.076654, -0.095298, -0.004173), (0.075505, 0.094256, -0.001549), (0.076654, 0.095298, -0.004173), (-0.067492, -0.094256, -0.003508), (-0.067492, 0.094256, -0.003508), (-0.068402, -0.095298, -0.01461), (-0.068402, 0.095298, -0.01461), (0.074133, 0.095298, -0.01461), (0.07576, 0.095298, -0.013036), (0.07576, -0.095298, -0.013036), (0.074133, -0.095298, -0.01461), (0.0764, 0.095298, -0.008605), (0.0764, -0.095298, -0.008605), (0.025292, 0.095298, -0.01461), (0.026024, 0.095298, -0.009392), (0.026207, 0.095298, -0.004173), (0.026462, 0.094256, 0.006551), (0.026462, -0.094256, 0.006551), (0.026207, -0.095298, -0.004173), (0.026024, -0.095298, -0.009392), (0.025292, -0.095298, -0.01461), (-0.019118, 0.095298, -0.01461), (-0.018752, 0.095298, -0.009392), (-0.018661, 0.095298, -0.004173), (-0.018152, 0.094256, 0.003369), (-0.018152, -0.094256, 0.003369), (-0.018661, -0.095298, -0.004173), (-0.018752, -0.095298, -0.009392), (-0.019118, -0.095298, -0.01461), (0.012556, 0.095298, -0.01461), (0.013166, 0.095298, -0.009392), (0.013319, 0.095298, -0.004173), (0.013658, 0.094256, 0.006089), (0.013658, -0.094256, 0.006089), (0.013319, -0.095298, -0.004173), (0.013166, -0.095298, -0.009392), (0.012556, -0.095298, -0.01461), (-0.003281, 0.095298, -0.01461), (-0.002793, 0.095298, -0.009392), (-0.002671, 0.095298, -0.004173), (-0.002247, 0.094256, 0.004998), (-0.002247, -0.094256, 0.004998), (-0.002671, -0.095298, -0.004173), (-0.002793, -0.095298, -0.009392), (-0.003281, -0.095298, -0.01461), (0.063808, 0.095298, -0.01461), (0.064832, 0.095298, -0.009392), (0.065089, 0.095298, -0.004173), (0.065139, 0.094256, 0.003699), (0.065139, -0.094256, 0.003699), (0.065089, -0.095298, -0.004173), (0.064832, -0.095298, -0.009392), (0.063808, -0.095298, -0.01461), (0.055128, 0.095298, -0.01461), (0.05608, 0.095298, -0.009392), (0.056318, 0.095298, -0.004173), (0.056419, 0.094256, 0.005814), (0.056419, -0.094256, 0.005814), (0.056318, -0.095298, -0.004173), (0.05608, -0.095298, -0.009392), (0.055128, -0.095298, -0.01461), (0.045626, 0.095298, -0.01461), (0.046504, 0.095298, -0.009392), (0.046724, 0.095298, -0.004173), (0.046877, 0.094256, 0.006666), (0.046877, -0.094256, 0.006666), (0.046724, -0.095298, -0.004173), (0.046504, -0.095298, -0.009392), (0.045626, -0.095298, -0.01461), (0.036124, 0.095298, -0.01461), (0.036929, 0.095298, -0.009392), (0.03713, 0.095298, -0.004173), (0.037334, 0.094256, 0.006717), (0.037334, -0.094256, 0.006717), (0.03713, -0.095298, -0.004173), (0.036929, -0.095298, -0.009392), (0.036124, -0.095298, -0.01461), (-0.03494, 0.095298, -0.01461), (-0.034757, 0.095298, -0.009392), (-0.034711, 0.095298, -0.004173), (-0.034075, 0.094256, 0.001591), (-0.034075, -0.094256, 0.001591), (-0.034711, -0.095298, -0.004173), (-0.034757, -0.095298, -0.009392), (-0.03494, -0.095298, -0.01461), (-0.050785, 0.095298, -0.01461), (-0.050693, 0.095298, -0.009392), (-0.05067, 0.095298, -0.004173), (-0.049971, 0.094256, -0.000491), (-0.049971, -0.094256, -0.000491), (-0.05067, -0.095298, -0.004173), (-0.050693, -0.095298, -0.009392), (-0.050785, -0.095298, -0.01461), (0.076516, -0.094389, -0.002695), (0.076516, 0.094389, -0.002695), (0.076914, -0.095155, -0.003756), (0.076914, 0.095155, -0.003756), (0.077261, -0.095155, -0.003756), (0.077261, 0.095155, -0.003756), (0.070327, 0.095298, -0.01461), (0.071388, 0.095298, -0.009392), (0.071654, 0.095298, -0.004173), (0.071679, 0.094256, 0.001151), (0.071679, -0.094256, 0.001151), (0.071654, -0.095298, -0.004173), (0.071388, -0.095298, -0.009392), (0.070327, -0.095298, -0.01461), (0.07712, -0.094452, -0.003659), (0.07712, -0.095298, -0.004173), (0.07712, 0.094453, -0.003659), (0.07712, 0.095298, -0.004173), (-0.063305, 0.095298, -0.01461), (-0.063282, 0.095298, -0.009392), (-0.063276, 0.095298, -0.004173), (-0.062529, 0.094256, -0.002387), (-0.062529, -0.094256, -0.002387), (-0.063276, -0.095298, -0.004173), (-0.063282, -0.095298, -0.009392), (-0.063305, -0.095298, -0.01461)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(0.515994, 0.998208), (0.516039, 0.834565), (0.518249, 0.834554), (0.518204, 0.998219), (0.524031, 0.999783), (0.522855, 0.999783), (0.522859, 0.998219), (0.523964, 0.998219), (0.523964, 0.998219), (0.522859, 0.998219), (0.522859, 0.834554), (0.523964, 0.834554), (0.522855, 0.833249), (0.524031, 0.833249), (0.523964, 0.834554), (0.522859, 0.834554), (0.522859, 0.998219), (0.518204, 0.998219), (0.518249, 0.834554), (0.522859, 0.834554), (0.523964, 0.998219), (0.523964, 0.834554), (0.526434, 0.834554), (0.526434, 0.998219), (0.522859, 0.998219), (0.522855, 0.999783), (0.518236, 0.999801), (0.518204, 0.998219), (0.518289, 0.833235), (0.522855, 0.833249), (0.522859, 0.834554), (0.518249, 0.834554), (0.523964, 0.834554), (0.524031, 0.833249), (0.526555, 0.833249), (0.526434, 0.834554), (0.526434, 0.998219), (0.526485, 0.999783), (0.524031, 0.999783), (0.523964, 0.998219), (0.528904, 0.998219), (0.528904, 0.834554), (0.531374, 0.834554), (0.531374, 0.998219), (0.531374, 0.998219), (0.531394, 0.999783), (0.52894, 0.999783), (0.528904, 0.998219), (0.528904, 0.834554), (0.529078, 0.833249), (0.531602, 0.833249), (0.531374, 0.834554), (0.531374, 0.998219), (0.531374, 0.834554), (0.533751, 0.834495), (0.533746, 0.998219), (0.533746, 0.998219), (0.533736, 0.999783), (0.531394, 0.999783), (0.531374, 0.998219), (0.531374, 0.834554), (0.531602, 0.833249), (0.533751, 0.833249), (0.533751, 0.834495), (0.526434, 0.998219), (0.526434, 0.834554), (0.528904, 0.834554), (0.528904, 0.998219), (0.528904, 0.998219), (0.52894, 0.999783), (0.526485, 0.999783), (0.526434, 0.998219), (0.526434, 0.834554), (0.526555, 0.833249), (0.529078, 0.833249), (0.528904, 0.834554), (0.534328, 0.998688), (0.534328, 0.834206), (0.535096, 0.834206), (0.535096, 0.998688), (0.533751, 0.834495), (0.533751, 0.833249), (0.534328, 0.833659), (0.534328, 0.834206), (0.533736, 0.999783), (0.533746, 0.998219), (0.534328, 0.998688), (0.534328, 0.99934), (0.535096, 0.834206), (0.535988, 0.834206), (0.535973, 0.998688), (0.535096, 0.998688), (0.533751, 0.834495), (0.534328, 0.834206), (0.534328, 0.998688), (0.533746, 0.998219)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_Book_4_0"
        {
            token outputs:surface.connect = </root/_materials/M_Book_4_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_Book_4_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Book_Cover_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_Book_4_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

