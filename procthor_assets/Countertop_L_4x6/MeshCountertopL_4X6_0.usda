#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "CountertopL_4X6"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "CountertopL_4X6" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.60825, -0.914448, -0.517404), (0.61095, 0.914354, 0.418626)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [5, 13, 17, 4, 8, 15, 14, 9, 1, 5, 4, 0, 0, 4, 17, 16, 2, 6, 7, 3, 0, 8, 9, 1, 3, 10, 11, 2, 15, 8, 0, 16, 7, 13, 12, 3, 3, 12, 14, 10, 15, 11, 10, 14, 2, 11, 15, 16, 17, 6, 2, 16, 13, 7, 6, 17, 13, 19, 18, 12, 12, 18, 20, 14, 20, 28, 9, 14, 5, 22, 19, 13, 22, 24, 23, 21, 25, 24, 22, 5, 1, 26, 25, 5, 9, 27, 26, 1, 28, 29, 27, 9, 21, 23, 29, 28, 19, 22, 21, 18, 18, 21, 28, 20, 24, 25, 26, 23, 23, 26, 27, 29]
            rel material:binding = </root/_materials/M_CountertopL_4X6_0>
            normal3f[] normals = [(9.2790344e-7, 1, -0.0000071593267), (-0.0000013435256, 1, -0.000004025502), (4.2965058e-7, 1, -0.000008424518), (8.5930117e-7, 1, -0.000016849035), (1, 0, 0), (1, 0, 0), (1, -0.0000022099077, 0.0000015588979), (1, -9.393476e-7, 0.0000016370637), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-3.2951025e-8, 0, -1), (-6.5902334e-8, 0, -1), (0.0000015957031, 0, -1), (3.8252531e-7, 0, -1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (-3.2951025e-8, 0, -1), (3.8252531e-7, 0, -1), (-0.0000016913257, 0, 1), (-0.0000016913257, 0, 1), (-8.1742644e-7, 0, 1), (-8.5523186e-7, 0, 1), (-8.5523186e-7, 0, 1), (-8.1742644e-7, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, -0.0000022099077, 0.0000015588979), (0.0000016285852, 0, -1), (0, 0, -1), (0, 0, -1), (3.8252531e-7, 0, -1), (0.0000015957031, 0, -1), (0.0000032573082, 0, -0.99999994), (0.0000016285852, 0, -1), (3.8252531e-7, 0, -1), (-0.0000013435256, 1, -0.000004025502), (0, 1, 0), (0, 1, 0), (4.2965058e-7, 1, -0.000008424518), (0.99999964, 0.00084202376, -5.310833e-7), (0.99999964, 0.00084202376, -5.310833e-7), (0.99999964, 0.00084202376, -5.310833e-7), (0.99999964, 0.00084202376, -5.310833e-7), (0.0008288822, 0.9999994, -0.00063073117), (0.0008288822, 0.9999994, -0.00063073117), (0.0008288822, 0.9999994, -0.00063073117), (0.0008288822, 0.9999994, -0.00063073117), (1, -0.0000066297234, 0.0000046766936), (1, 1.7690347e-8, 0.0000027142523), (1, -9.393476e-7, 0.0000016370637), (1, -0.0000022099077, 0.0000015588979), (9.2790344e-7, 1, -0.0000071593267), (0.000003346141, 1, 0.0000016351305), (-0.000004889878, 1, 0.000004772528), (-0.0000013435256, 1, -0.000004025502), (0.99997866, 0.00041165453, 0.00651505), (0.99997866, 0.00041165453, 0.00651505), (0.99997866, 0.00041165453, 0.00651505), (0.99997866, 0.00041165453, 0.00651505), (0.0000104244855, 1, -0.0000010612669), (0.0000104244855, 1, -0.0000010612669), (0.000003346141, 1, 0.0000016351305), (9.2790344e-7, 1, -0.0000071593267), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 1.7690347e-8, 0.0000027142523), (1, 0.0000057307807, 0.0000010276407), (1, 0.0000057307807, 0.0000010276407), (1, -9.393476e-7, 0.0000016370637), (0.0007928827, 0.9999784, 0.0065234397), (0.0007928827, 0.9999784, 0.0065234397), (0.0007928827, 0.9999784, 0.0065234397), (0.0007928827, 0.9999784, 0.0065234397), (-0.009767657, -0.000060224516, 0.99995226), (-0.009767657, -0.000060224516, 0.99995226), (-0.003395733, -0.0064040986, 0.9999737), (-0.0034007062, -0.006399141, 0.9999738), (-0.0034007062, -0.006399141, 0.9999738), (-0.003395733, -0.0064040986, 0.9999737), (-0.00011765822, -0.009740215, 0.9999526), (-0.00011765822, -0.009740215, 0.9999526), (0.00036527182, -0.000042097883, 0.9999999), (0.00036527182, -0.000042097883, 0.9999999), (0.0001478625, 0.00016840233, 0.99999994), (0.00014786288, 0.00016840197, 1), (0.00014786288, 0.00016840197, 1), (0.0001478625, 0.00016840233, 0.99999994), (-0.00006954587, 0.00037890158, 0.9999999), (-0.00006954587, 0.00037890158, 0.9999999)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.61095, 0.914354, 0.418626), (0.61095, 0.914354, 0.388626), (0.001351, 0.304755, 0.418626), (0.001351, 0.304755, 0.388626), (0.61095, -0.914446, 0.418626), (0.61095, -0.914447, 0.388626), (0.001351, -0.914446, 0.418626), (0.001351, -0.914446, 0.388626), (-0.60825, 0.914354, 0.418626), (-0.60825, 0.914354, 0.388626), (-0.60825, 0.304755, 0.388626), (-0.60825, 0.304755, 0.418626), (0.020312, 0.324755, 0.388626), (0.021355, -0.914446, 0.388626), (-0.60825, 0.324755, 0.388626), (-0.60825, 0.324755, 0.418626), (0.021355, 0.324755, 0.418626), (0.021355, -0.914446, 0.418626), (0.020312, 0.323713, -0.437404), (0.021355, -0.914446, -0.437404), (-0.60825, 0.324755, -0.437404), (0.040316, 0.343718, -0.437143), (0.041356, -0.914442, -0.437273), (0.041358, 0.34476, -0.517143), (0.041356, -0.914442, -0.517273), (0.61095, -0.914448, -0.517404), (0.61095, 0.914354, -0.517404), (-0.608249, 0.914354, -0.517404), (-0.608246, 0.344754, -0.437273), (-0.608246, 0.344755, -0.517273)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-9.032887, 1.239832), (-9.032887, 0.318581), (-8.986012, 0.318581), (-8.986012, 1.239832), (-9.007065, 0.28732), (-9.007065, 1.208596), (-9.053937, 1.208596), (-9.053937, 0.28732), (-10.013988, 1.88525), (-10.013988, -0.972262), (-9.967113, -0.97226), (-9.967113, 1.88525), (-10.625778, 1.885245), (-10.625778, -0.972256), (-9.704535, -0.972256), (-9.704535, 0.963998), (-9.011932, -0.647584), (-9.011932, 1.257474), (-9.058805, 1.257474), (-9.058805, -0.647584), (-9.037367, 1.257472), (-9.037367, -0.647584), (-8.990494, -0.647585), (-8.990494, 1.257472), (-9.07499, 1.249784), (-9.07499, 0.297271), (-9.028114, 0.297271), (-9.028114, 1.249784), (-8.720776, 0.963993), (-8.720776, 1.885245), (-10.625778, 1.885245), (-9.704535, 0.963998), (-9.666559, 1.278048), (-9.697814, 1.278048), (-9.696186, -0.658213), (-9.666559, -0.626962), (-9.666559, -0.626962), (-9.696186, -0.658213), (-8.714051, -0.658213), (-8.714051, -0.626963), (-9.007065, 1.208596), (-9.007065, 1.239846), (-9.053937, 1.239846), (-9.053937, 1.208596), (-9.67328, 0.932745), (-8.720776, 0.932745), (-8.720776, 0.963993), (-9.704535, 0.963998), (-9.704535, -0.972256), (-9.67328, -0.972256), (-9.67328, 0.932745), (-9.704535, 0.963998), (-9.032887, 0.318581), (-9.032887, 0.287325), (-8.986012, 0.287325), (-8.986012, 0.318581), (-20.01422, 1.12051), (-20.01422, 0.475176), (-19.046907, 0.475176), (-19.046093, 1.120512), (-20.208881, -0.19273), (-19.563545, -0.19273), (-19.563545, 0.298336), (-20.208881, 0.298336), (-19.350609, 0.107895), (-19.350708, 0.123518), (-19.995943, 0.568518), (-19.995943, 0.107895), (-19.995943, -0.061596), (-19.35071, 0.383398), (-19.350609, 0.399023), (-19.995943, 0.399023), (-19.671488, 0.610262), (-19.671488, 0.54776), (-18.687727, 0.547861), (-18.688541, 0.610361), (-19.288107, -0.061596), (-19.28821, 0.383398), (-19.35071, 0.383398), (-19.995943, -0.061596), (-19.973038, 0.44523), (-19.973038, -0.262604), (-18.544287, -0.262604), (-18.544289, 0.44523), (-19.20924, 0.197702), (-19.209246, 0.905535), (-20.161741, 0.905535), (-20.161741, 0.197702), (-19.350708, 0.123518), (-19.28821, 0.123518), (-19.288107, 0.568518), (-19.995943, 0.568518), (-20.11467, 0.189756), (-20.115484, 0.127254), (-19.607971, 0.127153), (-19.607971, 0.189655), (-19.67149, 0.449615), (-19.671486, 0.433989), (-18.688536, 0.434801), (-18.704166, 0.450432), (-18.704166, 0.450432), (-18.688536, 0.434801), (-18.687725, 0.941498), (-18.70335, 0.941502), (-19.973034, 0.361261), (-19.973038, -0.083736), (-18.544287, -0.083736), (-18.98928, 0.361259), (-18.98928, 0.361259), (-18.544287, -0.083736), (-18.544287, 0.868765), (-18.989286, 0.868763)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_CountertopL_4X6_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                rel material:binding = </root/_materials/M_CountertopL_4X6_0>
            }

            def GeomSubset "M_CountertopL_4X6_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27]
                rel material:binding = </root/_materials/M_CountertopL_4X6_1>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_CountertopL_4X6_0"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopL_4X6_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopL_4X6_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/marbleBase2.jpg@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopL_4X6_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_CountertopL_4X6_1"
        {
            token outputs:surface.connect = </root/_materials/M_CountertopL_4X6_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_CountertopL_4X6_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_CountertopL_4X6_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/DarkWood2.tif@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopL_4X6_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_CountertopL_4X6_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

