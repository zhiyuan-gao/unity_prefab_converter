#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.0"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "FridgeDrawer2D2"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "FridgeDrawer2D2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.023843, -0.246161, -0.778103), (0.470594, 0.195991, -0.427369)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 8, 8, 4, 4, 4, 4, 4, 4, 8, 4, 4, 8, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 4, 5, 7, 6, 33, 28, 46, 51, 28, 30, 48, 46, 30, 37, 55, 48, 37, 36, 54, 55, 36, 39, 57, 54, 39, 38, 56, 57, 38, 31, 49, 56, 31, 29, 47, 49, 29, 34, 52, 47, 34, 35, 53, 52, 35, 32, 50, 53, 32, 33, 51, 50, 107, 111, 95, 94, 108, 105, 98, 99, 103, 109, 96, 97, 110, 101, 93, 92, 111, 110, 92, 95, 109, 108, 99, 96, 106, 107, 94, 89, 104, 106, 89, 91, 105, 104, 91, 98, 102, 103, 97, 90, 100, 102, 90, 88, 101, 100, 88, 93, 77, 76, 57, 56, 77, 56, 49, 78, 79, 78, 49, 47, 80, 79, 47, 52, 81, 80, 52, 53, 82, 81, 53, 50, 83, 82, 50, 51, 84, 83, 51, 46, 85, 84, 46, 48, 86, 85, 48, 55, 87, 86, 55, 54, 76, 87, 54, 57, 28, 33, 93, 88, 33, 32, 92, 93, 32, 35, 95, 92, 35, 34, 94, 95, 34, 29, 89, 94, 29, 31, 91, 89, 31, 38, 98, 91, 38, 39, 99, 98, 39, 36, 96, 99, 36, 37, 97, 96, 37, 30, 90, 97, 30, 28, 88, 90, 65, 64, 100, 101, 64, 66, 102, 100, 66, 67, 103, 102, 67, 73, 109, 103, 73, 72, 108, 109, 72, 69, 105, 108, 69, 68, 104, 105, 68, 70, 106, 104, 70, 71, 107, 106, 71, 75, 111, 107, 75, 74, 110, 111, 74, 65, 101, 110, 8, 9, 11, 10, 12, 13, 15, 14, 16, 17, 19, 18, 135, 129, 87, 76, 130, 86, 87, 129, 130, 125, 85, 86, 125, 158, 156, 154, 124, 58, 84, 85, 59, 127, 161, 163, 165, 126, 78, 79, 133, 77, 78, 126, 133, 135, 76, 77, 122, 117, 69, 72, 73, 67, 112, 121, 121, 122, 72, 73, 65, 40, 41, 64, 119, 150, 149, 148, 118, 43, 70, 68, 117, 119, 68, 69, 114, 112, 67, 66, 41, 115, 151, 152, 153, 114, 66, 64, 70, 43, 42, 71, 134, 132, 62, 63, 75, 44, 45, 74, 74, 45, 40, 65, 61, 131, 128, 60, 60, 128, 134, 63, 71, 42, 44, 75, 127, 59, 62, 132, 61, 58, 124, 131, 115, 41, 40, 113, 80, 62, 59, 79, 81, 63, 62, 80, 82, 60, 63, 81, 83, 61, 60, 82, 84, 58, 61, 83, 43, 118, 116, 42, 45, 44, 123, 120, 120, 113, 40, 45, 44, 42, 116, 123, 123, 116, 136, 137, 137, 136, 138, 139, 139, 138, 140, 141, 141, 140, 117, 122, 113, 120, 142, 143, 143, 142, 144, 145, 145, 144, 146, 147, 147, 146, 121, 112, 120, 123, 137, 142, 142, 137, 139, 144, 144, 139, 141, 146, 146, 141, 122, 121, 116, 118, 148, 136, 136, 148, 149, 138, 138, 149, 150, 140, 140, 150, 119, 117, 115, 113, 143, 151, 151, 143, 145, 152, 152, 145, 147, 153, 153, 147, 112, 114, 131, 124, 154, 155, 155, 154, 156, 157, 157, 156, 158, 159, 159, 158, 125, 130, 127, 132, 160, 161, 161, 160, 162, 163, 163, 162, 164, 165, 165, 164, 133, 126, 134, 128, 166, 167, 167, 166, 168, 169, 169, 168, 170, 171, 171, 170, 129, 135, 128, 131, 155, 166, 166, 155, 157, 168, 168, 157, 159, 170, 170, 159, 130, 129, 132, 134, 167, 160, 160, 167, 169, 162, 162, 169, 171, 164, 164, 171, 135, 133, 20, 21, 23, 22, 24, 25, 27, 26]
            rel material:binding = </root/_materials/M_FridgeDrawer2D2_0>
            normal3f[] normals = [(0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (2.1819896e-7, 0, 1), (2.2969566e-7, 0, 1), (0, 0, 1), (2.1819896e-7, 0, 1), (3.297223e-7, 0, 1), (3.280568e-7, 0, 1), (2.2969566e-7, 0, 1), (3.297223e-7, 0, 1), (1.0249714e-7, 0, 1), (1.0204908e-7, 0, 1), (3.280568e-7, 0, 1), (1.0249714e-7, 0, 1), (0, 0, 1), (0, 0, 1), (1.0204908e-7, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0.0000062973495, 0.9818773, -0.18951753), (0, 0.98179704, -0.18993273), (-0.000006272224, 0.9817762, 0.19004104), (0, 0.98187643, 0.18952206), (0.024896704, -0.98177546, -0.18840665), (0.09590666, -0.97740865, -0.188346), (0.09589262, -0.9774094, 0.1883496), (0.024912395, -0.9817743, 0.1884107), (-0.0958928, -0.97741044, -0.18834382), (-0.024912663, -0.9817757, -0.18840341), (-0.0248967, -0.9817751, 0.18840837), (-0.095906466, -0.9774081, 0.18834922), (0.0000062772424, 0.9817971, -0.18993238), (0, 0.9818772, -0.18951814), (-0.0000062973586, 0.9818764, 0.1895227), (0, 0.9817762, 0.19004077), (0, 0.98179704, -0.18993273), (0.0000062772424, 0.9817971, -0.18993238), (0, 0.9817762, 0.19004077), (-0.000006272224, 0.9817762, 0.19004104), (-0.024912663, -0.9817757, -0.18840341), (0.024896704, -0.98177546, -0.18840665), (0.024912395, -0.9817743, 0.1884107), (-0.0248967, -0.9817751, 0.18840837), (-0.0000025592744, 0.9908985, -0.13461131), (0.0000062973495, 0.9818773, -0.18951753), (0, 0.98187643, 0.18952206), (0, 0.990898, 0.13461383), (0.98831356, -2.0861626e-7, -0.15243477), (0.9892084, 0, -0.1465151), (0.9892079, -0.0000016242266, 0.14651856), (0.98831296, 0, 0.15243846), (0.09590666, -0.97740865, -0.188346), (0.116977334, -0.9832151, -0.14001536), (0.117002234, -0.98321176, 0.14001809), (0.09589262, -0.9774094, 0.1883496), (-0.11700228, -0.98321193, -0.14001727), (-0.0958928, -0.97741044, -0.18834382), (-0.095906466, -0.9774081, 0.18834922), (-0.11697722, -0.9832146, 0.14002004), (-0.9892083, -0.0000016130507, -0.14651641), (-0.9883299, 0, -0.15232876), (-0.98832935, -2.2351742e-7, 0.15233237), (-0.98920774, 0, 0.14651982), (0, 0.9818772, -0.18951814), (0, 0.9908984, -0.13461222), (0.0000025555491, 0.99089795, 0.13461477), (-0.0000062973586, 0.9818764, 0.1895227), (-0.09681937, 0.9953019, 0), (-0.02531474, 0.99967945, -2.0499837e-7), (-0.025328245, 0.9996792, 0), (-0.096699335, 0.99531364, 7.0349837e-10), (-0.09681937, 0.9953019, 0), (-0.096699335, 0.99531364, 7.0349837e-10), (-0.11814786, 0.99299604, 0), (-0.11814789, 0.99299604, 0), (-1, 0, 0), (-1, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.99999994, 0), (1, 0, 0), (1, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.09681978, 0.9953019, -7.835357e-7), (0.11814786, 0.99299604, 0), (0.11814782, 0.992996, 0), (0.09679398, 0.99530447, 0), (0.025315156, 0.9996795, 0), (0.09681978, 0.9953019, -7.835357e-7), (0.09679398, 0.99530447, 0), (0.02532866, 0.99967915, 3.7244788e-10), (-0.02531474, 0.99967945, -2.0499837e-7), (0.025315156, 0.9996795, 0), (0.02532866, 0.99967915, 3.7244788e-10), (-0.025328245, 0.9996792, 0), (0, 0.7992837, 0.6009538), (0, 0.79928666, 0.60095), (-0.0000062973586, 0.9818764, 0.1895227), (0.0000025555491, 0.99089795, 0.13461477), (0, 0.79928666, 0.60095), (0, 0.7992878, 0.6009485), (0, 0.9817762, 0.19004077), (-0.0000062973586, 0.9818764, 0.1895227), (0, 0.7992878, 0.6009485), (0, 0.79928744, 0.6009489), (-0.000006272224, 0.9817762, 0.19004104), (0, 0.9817762, 0.19004077), (0, 0.79928744, 0.6009489), (0, 0.79928744, 0.6009489), (0, 0.98187643, 0.18952206), (-0.000006272224, 0.9817762, 0.19004104), (0, 0.79928744, 0.6009489), (0, 0.79928595, 0.60095084), (0, 0.990898, 0.13461383), (0, 0.98187643, 0.18952206), (0.7825124, 0, 0.622635), (0.7825124, 0, 0.622635), (0.98831296, 0, 0.15243846), (0.9892079, -0.0000016242266, 0.14651856), (0.094399594, -0.7935261, 0.6011695), (0.07779616, -0.79521745, 0.6013128), (0.09589262, -0.9774094, 0.1883496), (0.117002234, -0.98321176, 0.14001809), (0.07779616, -0.79521745, 0.6013128), (0.020221036, -0.79886305, 0.601173), (0.024912395, -0.9817743, 0.1884107), (0.09589262, -0.9774094, 0.1883496), (0.020221036, -0.79886305, 0.601173), (-0.02017329, -0.7988644, 0.6011726), (-0.0248967, -0.9817751, 0.18840837), (0.024912395, -0.9817743, 0.1884107), (-0.02017329, -0.7988644, 0.6011726), (-0.077790424, -0.7951334, 0.6014246), (-0.095906466, -0.9774081, 0.18834922), (-0.0248967, -0.9817751, 0.18840837), (-0.077790424, -0.7951334, 0.6014246), (-0.09438505, -0.7933212, 0.60144246), (-0.11697722, -0.9832146, 0.14002004), (-0.095906466, -0.9774081, 0.18834922), (-0.7825105, 0, 0.6226374), (-0.7825105, 0, 0.6226374), (-0.98920774, 0, 0.14651982), (-0.98832935, -2.2351742e-7, 0.15233237), (-0.00010440116, 0.9999824, -0.005934149), (0.000026419759, 0.9999678, -0.008029185), (0, 0.9908984, -0.13461222), (0, 0.9818772, -0.18951814), (-0.9999653, -0.0001172446, -0.008328587), (-0.99996686, -0.000003144145, -0.008139506), (-0.9883299, 0, -0.15232876), (-0.9892083, -0.0000016130507, -0.14651641), (-0.118137985, -0.99295324, -0.009332955), (-0.09749496, -0.9952103, -0.007153544), (-0.0958928, -0.97741044, -0.18834382), (-0.11700228, -0.98321193, -0.14001727), (-0.09749496, -0.9952103, -0.007153544), (-0.02531541, -0.999654, -0.007143559), (-0.024912663, -0.9817757, -0.18840341), (-0.0958928, -0.97741044, -0.18834382), (-0.02531541, -0.999654, -0.007143559), (0.025377639, -0.9996524, -0.0071457047), (0.024896704, -0.98177546, -0.18840665), (-0.024912663, -0.9817757, -0.18840341), (0.025377639, -0.9996524, -0.0071457047), (0.09749765, -0.99521005, -0.0071550286), (0.09590666, -0.97740865, -0.188346), (0.024896704, -0.98177546, -0.18840665), (0.09749765, -0.99521005, -0.0071550286), (0.11809653, -0.9929583, -0.009329341), (0.116977334, -0.9832151, -0.14001536), (0.09590666, -0.97740865, -0.188346), (0.99996686, -0.0000010774148, -0.008137554), (0.9999653, 0.0000045895576, -0.008326635), (0.9892084, 0, -0.1465151), (0.98831356, -2.0861626e-7, -0.15243477), (0.000019705047, 0.9999678, -0.0080268085), (0, 0.9999824, -0.0059334934), (0.0000062973495, 0.9818773, -0.18951753), (-0.0000025592744, 0.9908985, -0.13461131), (0, 0.9999824, -0.0059334934), (0, 0.9999824, -0.005933523), (0, 0.98179704, -0.18993273), (0.0000062973495, 0.9818773, -0.18951753), (0, 0.9999824, -0.005933523), (0, 0.9999824, -0.0059331357), (0.0000062772424, 0.9817971, -0.18993238), (0, 0.98179704, -0.18993273), (0, 0.9999824, -0.0059331357), (-0.00010440116, 0.9999824, -0.005934149), (0, 0.9818772, -0.18951814), (0.0000062772424, 0.9817971, -0.18993238), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (-0.025308026, 0.9995771, 0.01432538), (0.02530622, 0.99957705, 0.014326982), (0.025315156, 0.9996795, 0), (-0.02531474, 0.99967945, -2.0499837e-7), (0.09669811, 0.9952109, 0.0143115595), (0.09681978, 0.9953019, -7.835357e-7), (0.025315156, 0.9996795, 0), (0.02530622, 0.99957705, 0.014326982), (0.09669811, 0.9952109, 0.0143115595), (0.11809758, 0.99289584, 0.014517888), (0.11814786, 0.99299604, 0), (0.09681978, 0.9953019, -7.835357e-7), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.09669782, 0.9952109, 0.014310136), (-0.09681937, 0.9953019, 0), (-0.11814789, 0.99299604, 0), (-0.11809695, 0.99289584, 0.014517934), (-0.09669782, 0.9952109, 0.014310136), (-0.025308026, 0.9995771, 0.01432538), (-0.02531474, 0.99967945, -2.0499837e-7), (-0.09681937, 0.9953019, 0), (0.02530247, -0.99958545, -0.013736069), (0.097500175, -0.9951421, -0.013636991), (0.09749765, -0.99521005, -0.0071550286), (0.025377639, -0.9996524, -0.0071457047), (-0.02531541, -0.999654, -0.007143559), (-0.09749496, -0.9952103, -0.007153544), (-0.09750457, -0.9951417, -0.013637468), (-0.025304489, -0.99958533, -0.013735943), (-0.025304489, -0.99958533, -0.013735943), (0.02530247, -0.99958545, -0.013736069), (0.025377639, -0.9996524, -0.0071457047), (-0.02531541, -0.999654, -0.007143559), (-0.00010440116, 0.9999824, -0.005934149), (0, 1, 0), (0, 1, 0), (0.000026419759, 0.9999678, -0.008029185), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.9999653, 0.0000045895576, -0.008326635), (0.99996686, -0.0000010774148, -0.008137554), (0.097500175, -0.9951421, -0.013636991), (0.11813129, -0.99290174, -0.013827704), (0.11809653, -0.9929583, -0.009329341), (0.09749765, -0.99521005, -0.0071550286), (-0.1180984, -0.9929056, -0.013827741), (-0.09750457, -0.9951417, -0.013637468), (-0.09749496, -0.9952103, -0.007153544), (-0.118137985, -0.99295324, -0.009332955), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99996686, -0.000003144145, -0.008139506), (-0.9999653, -0.0001172446, -0.008328587), (0.000019705047, 0.9999678, -0.0080268085), (0, 1, 0), (0, 1, 0), (0, 0.9999824, -0.0059334934), (-0.00019728299, 0.006037697, 0.99998176), (-0.00060496945, 0.006338937, 0.99997973), (-2.7202515e-7, 0, 1), (-2.725826e-7, 0, 1), (0, 0.9999824, -0.005933523), (0, 1, 0), (0, 1, 0), (0, 0.9999824, -0.0059331357), (0, 0.9999824, -0.0059331357), (0, 1, 0), (0, 1, 0), (-0.00010440116, 0.9999824, -0.005934149), (3.3275725e-7, 0, 1), (0.0006074938, 0.0063385367, 0.99997973), (0.00019706367, 0.0060375733, 0.9999818), (2.7258062e-7, 0, 1), (2.7258062e-7, 0, 1), (0.00019706367, 0.0060375733, 0.9999818), (-0.00019728299, 0.006037697, 0.99998176), (-2.725826e-7, 0, 1), (0, 0.9999824, -0.0059334934), (0, 1, 0), (0, 1, 0), (0, 0.9999824, -0.005933523), (-0.0006048344, 0.0052233264, 0.9999861), (0, 0, 1), (-2.7202515e-7, 0, 1), (-0.00060496945, 0.006338937, 0.99997973), (3.3275725e-7, 0, 1), (1.2126984e-7, 0, 1), (0.0006014714, 0.00522362, 0.9999861), (0.0006074938, 0.0063385367, 0.99997973), (-0.00060168374, -0.0050202757, -0.9999872), (0, 0, -0.99999994), (0, 0, -1), (-0.00060546584, -0.006115228, -0.99998116), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, -1), (0.0006019445, -0.005019825, -0.99998724), (0.00060260855, -0.0061150566, -0.9999811), (-2.1576405e-7, 0, -1), (0, 0, -1), (-2.1585075e-7, 0, -1), (0.00011279108, -0.0057345033, -0.9999836), (-0.00020899205, -0.0057316944, -0.9999836), (-0.00020899205, -0.0057316944, -0.9999836), (-0.00060546584, -0.006115228, -0.99998116), (0, 0, -1), (0, 0, -1), (-2.1585075e-7, 0, -1), (-2.1576405e-7, 0, -1), (0.00060260855, -0.0061150566, -0.9999811), (0.00011279108, -0.0057345033, -0.9999836), (0.00011279108, -0.0057345033, -0.9999836), (0.00060260855, -0.0061150566, -0.9999811), (0.03829367, -0.3883932, -0.92069775), (0.009919073, -0.38540313, -0.92269504), (0.009919073, -0.38540313, -0.92269504), (0.03829367, -0.3883932, -0.92069775), (0.06938955, -0.7088909, -0.70189655), (0.01803042, -0.7085925, -0.7053876), (0.01803042, -0.7085925, -0.7053876), (0.06938955, -0.7088909, -0.70189655), (0.08998597, -0.92112833, -0.37871522), (0.023280941, -0.9240788, -0.38149208), (0.023280941, -0.9240788, -0.38149208), (0.08998597, -0.92112833, -0.37871522), (0.097500175, -0.9951421, -0.013636991), (0.02530247, -0.99958545, -0.013736069), (-0.00060546584, -0.006115228, -0.99998116), (-0.00020899205, -0.0057316944, -0.9999836), (-0.009918956, -0.38540325, -0.92269504), (-0.038293798, -0.38839272, -0.920698), (-0.038293798, -0.38839272, -0.920698), (-0.009918956, -0.38540325, -0.92269504), (-0.018030405, -0.70859236, -0.7053878), (-0.06938944, -0.70889103, -0.7018964), (-0.06938944, -0.70889103, -0.7018964), (-0.018030405, -0.70859236, -0.7053878), (-0.023280885, -0.92407864, -0.38149238), (-0.08998598, -0.9211283, -0.37871546), (-0.08998598, -0.9211283, -0.37871546), (-0.023280885, -0.92407864, -0.38149238), (-0.025304489, -0.99958533, -0.013735943), (-0.09750457, -0.9951417, -0.013637468), (-0.00020899205, -0.0057316944, -0.9999836), (0.00011279108, -0.0057345033, -0.9999836), (0.009919073, -0.38540313, -0.92269504), (-0.009918956, -0.38540325, -0.92269504), (-0.009918956, -0.38540325, -0.92269504), (0.009919073, -0.38540313, -0.92269504), (0.01803042, -0.7085925, -0.7053876), (-0.018030405, -0.70859236, -0.7053878), (-0.018030405, -0.70859236, -0.7053878), (0.01803042, -0.7085925, -0.7053876), (0.023280941, -0.9240788, -0.38149208), (-0.023280885, -0.92407864, -0.38149238), (-0.023280885, -0.92407864, -0.38149238), (0.023280941, -0.9240788, -0.38149208), (0.02530247, -0.99958545, -0.013736069), (-0.025304489, -0.99958533, -0.013735943), (0.00060260855, -0.0061150566, -0.9999811), (0.0006019445, -0.005019825, -0.99998724), (0.04398273, -0.3696577, -0.92812645), (0.03829367, -0.3883932, -0.92069775), (0.03829367, -0.3883932, -0.92069775), (0.04398273, -0.3696577, -0.92812645), (0.08300932, -0.69755155, -0.71171016), (0.06938955, -0.7088909, -0.70189655), (0.06938955, -0.7088909, -0.70189655), (0.08300932, -0.69755155, -0.71171016), (0.10900591, -0.9161885, -0.38563767), (0.08998597, -0.92112833, -0.37871522), (0.08998597, -0.92112833, -0.37871522), (0.10900591, -0.9161885, -0.38563767), (0.11813129, -0.99290174, -0.013827704), (0.097500175, -0.9951421, -0.013636991), (-0.00060168374, -0.0050202757, -0.9999872), (-0.00060546584, -0.006115228, -0.99998116), (-0.038293798, -0.38839272, -0.920698), (-0.043982793, -0.36965787, -0.92812634), (-0.043982793, -0.36965787, -0.92812634), (-0.038293798, -0.38839272, -0.920698), (-0.06938944, -0.70889103, -0.7018964), (-0.08295542, -0.6972232, -0.7120381), (-0.08295542, -0.6972232, -0.7120381), (-0.06938944, -0.70889103, -0.7018964), (-0.08998598, -0.9211283, -0.37871546), (-0.109003045, -0.9163298, -0.38530242), (-0.109003045, -0.9163298, -0.38530242), (-0.08998598, -0.9211283, -0.37871546), (-0.09750457, -0.9951417, -0.013637468), (-0.1180984, -0.9929056, -0.013827741), (0.0006074938, 0.0063385367, 0.99997973), (0.0006014714, 0.00522362, 0.9999861), (0.044103082, 0.37012076, 0.9279362), (0.038005974, 0.3882018, 0.9207903), (0.038005974, 0.3882018, 0.9207903), (0.044103082, 0.37012076, 0.9279362), (0.08297353, 0.6972553, 0.71200454), (0.06890002, 0.70881844, 0.70201796), (0.06890002, 0.70881844, 0.70201796), (0.08297353, 0.6972553, 0.71200454), (0.10901388, 0.9161919, 0.38562724), (0.089267164, 0.9212016, 0.3787071), (0.089267164, 0.9212016, 0.3787071), (0.10901388, 0.9161919, 0.38562724), (0.11809758, 0.99289584, 0.014517888), (0.09669811, 0.9952109, 0.0143115595), (-0.0006048344, 0.0052233264, 0.9999861), (-0.00060496945, 0.006338937, 0.99997973), (-0.03800576, 0.38820186, 0.92079026), (-0.043999266, 0.36968404, 0.9281152), (-0.043999266, 0.36968404, 0.9281152), (-0.03800576, 0.38820186, 0.92079026), (-0.068899825, 0.7088176, 0.70201874), (-0.08297323, 0.6972553, 0.7120046), (-0.08297323, 0.6972553, 0.7120046), (-0.068899825, 0.7088176, 0.70201874), (-0.089267045, 0.92120165, 0.37870678), (-0.10900344, 0.9163803, 0.38518202), (-0.10900344, 0.9163803, 0.38518202), (-0.089267045, 0.92120165, 0.37870678), (-0.09669782, 0.9952109, 0.014310136), (-0.11809695, 0.99289584, 0.014517934), (-0.00019728299, 0.006037697, 0.99998176), (0.00019706367, 0.0060375733, 0.9999818), (0.009965586, 0.38533273, 0.9227239), (-0.009870977, 0.3853333, 0.9227247), (-0.009870977, 0.3853333, 0.9227247), (0.009965586, 0.38533273, 0.9227239), (0.018013366, 0.70859134, 0.70538914), (-0.018057877, 0.70859444, 0.70538497), (-0.018057877, 0.70859444, 0.70538497), (0.018013366, 0.70859134, 0.70538914), (0.023318311, 0.9240788, 0.38148993), (-0.023319086, 0.92407864, 0.38149035), (-0.023319086, 0.92407864, 0.38149035), (0.023318311, 0.9240788, 0.38148993), (0.02530622, 0.99957705, 0.014326982), (-0.025308026, 0.9995771, 0.01432538), (0.00019706367, 0.0060375733, 0.9999818), (0.0006074938, 0.0063385367, 0.99997973), (0.038005974, 0.3882018, 0.9207903), (0.009965586, 0.38533273, 0.9227239), (0.009965586, 0.38533273, 0.9227239), (0.038005974, 0.3882018, 0.9207903), (0.06890002, 0.70881844, 0.70201796), (0.018013366, 0.70859134, 0.70538914), (0.018013366, 0.70859134, 0.70538914), (0.06890002, 0.70881844, 0.70201796), (0.089267164, 0.9212016, 0.3787071), (0.023318311, 0.9240788, 0.38148993), (0.023318311, 0.9240788, 0.38148993), (0.089267164, 0.9212016, 0.3787071), (0.09669811, 0.9952109, 0.0143115595), (0.02530622, 0.99957705, 0.014326982), (-0.00060496945, 0.006338937, 0.99997973), (-0.00019728299, 0.006037697, 0.99998176), (-0.009870977, 0.3853333, 0.9227247), (-0.03800576, 0.38820186, 0.92079026), (-0.03800576, 0.38820186, 0.92079026), (-0.009870977, 0.3853333, 0.9227247), (-0.018057877, 0.70859444, 0.70538497), (-0.068899825, 0.7088176, 0.70201874), (-0.068899825, 0.7088176, 0.70201874), (-0.018057877, 0.70859444, 0.70538497), (-0.023319086, 0.92407864, 0.38149035), (-0.089267045, 0.92120165, 0.37870678), (-0.089267045, 0.92120165, 0.37870678), (-0.023319086, 0.92407864, 0.38149035), (-0.025308026, 0.9995771, 0.01432538), (-0.09669782, 0.9952109, 0.014310136), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.010542, 0.035822, -0.778103), (-0.010533, 0.035822, -0.778103), (-0.010542, 0.03583, -0.778103), (-0.010533, 0.03583, -0.778103), (-0.010542, 0.035822, -0.778103), (-0.010533, 0.035822, -0.778103), (-0.010542, 0.03583, -0.778103), (-0.010533, 0.03583, -0.778103), (-0.010542, 0.035822, -0.778103), (-0.010533, 0.035822, -0.778103), (-0.010542, 0.03583, -0.778103), (-0.010533, 0.03583, -0.778103), (-0.010542, 0.035822, -0.778103), (-0.010533, 0.035822, -0.778103), (-0.010542, 0.03583, -0.778103), (-0.010533, 0.03583, -0.778103), (-0.010542, 0.035822, -0.778103), (-0.010533, 0.035822, -0.778103), (-0.010542, 0.03583, -0.778103), (-0.010533, 0.03583, -0.778103), (-0.010542, 0.035822, -0.778103), (-0.010533, 0.035822, -0.778103), (-0.010542, 0.03583, -0.778103), (-0.010533, 0.03583, -0.778103), (-0.010542, 0.035822, -0.778103), (-0.010533, 0.035822, -0.778103), (-0.010542, 0.03583, -0.778103), (-0.010533, 0.03583, -0.778103), (-0.022663, 0.194876, -0.427369), (0.469414, 0.194876, -0.427369), (-0.022663, -0.225531, -0.427369), (0.469414, -0.225531, -0.427369), (0.176528, 0.194876, -0.427369), (0.106197, 0.194876, -0.427369), (0.340553, 0.194876, -0.427369), (0.270223, 0.194876, -0.427369), (0.176528, -0.245046, -0.427369), (0.106473, -0.240895, -0.427369), (0.340278, -0.240895, -0.427369), (0.270223, -0.245046, -0.427369), (0.106197, 0.194876, -0.623633), (-0.022663, 0.194876, -0.623633), (0.340553, 0.194876, -0.623633), (0.469414, 0.194876, -0.623633), (0.270223, 0.194876, -0.623633), (0.176528, 0.194876, -0.623633), (-0.014049, 0.186735, -0.427369), (0.4608, 0.186735, -0.427369), (-0.014049, -0.218351, -0.427369), (0.4608, -0.218351, -0.427369), (0.176528, 0.186735, -0.427369), (0.106197, 0.186735, -0.427369), (0.340553, 0.186735, -0.427369), (0.270223, 0.186735, -0.427369), (0.176797, -0.236906, -0.427369), (0.107281, -0.232787, -0.427369), (0.33947, -0.232787, -0.427369), (0.269953, -0.236906, -0.427369), (-0.014049, 0.186735, -0.615938), (0.4608, 0.186735, -0.615938), (0.176528, 0.186735, -0.615938), (0.106197, 0.186735, -0.615938), (0.340553, 0.186735, -0.615938), (0.270223, 0.186735, -0.615938), (-0.022663, 0.194876, -0.434617), (0.106197, 0.194876, -0.434617), (-0.022663, -0.225531, -0.434617), (0.106473, -0.240895, -0.434617), (0.469414, -0.225531, -0.434617), (0.340278, -0.240895, -0.434617), (0.469414, 0.194876, -0.434617), (0.340553, 0.194876, -0.434617), (0.270223, -0.245046, -0.434617), (0.176528, -0.245046, -0.434617), (0.176528, 0.194876, -0.434617), (0.270223, 0.194876, -0.434617), (0.269953, -0.236906, -0.434617), (0.33947, -0.232787, -0.434617), (0.4608, -0.218351, -0.434617), (0.4608, 0.186735, -0.434617), (0.340553, 0.186735, -0.434617), (0.270223, 0.186735, -0.434617), (0.176528, 0.186735, -0.434617), (0.106197, 0.186735, -0.434617), (-0.014049, 0.186735, -0.434617), (-0.014049, -0.218351, -0.434617), (0.107281, -0.232787, -0.434617), (0.176797, -0.236906, -0.434617), (-0.023843, 0.195991, -0.428852), (0.470594, 0.195991, -0.428852), (-0.023843, -0.226515, -0.428852), (0.470594, -0.226515, -0.428852), (0.176528, 0.195991, -0.428852), (0.106197, 0.195991, -0.428852), (0.340553, 0.195991, -0.428852), (0.270223, 0.195991, -0.428852), (0.176491, -0.246161, -0.428852), (0.106362, -0.242006, -0.428852), (0.340389, -0.242006, -0.428852), (0.27026, -0.246161, -0.428852), (-0.023843, 0.195991, -0.433134), (0.106197, 0.195991, -0.433134), (-0.023843, -0.226515, -0.433134), (0.106362, -0.242006, -0.433134), (0.470594, -0.226515, -0.433134), (0.340389, -0.242006, -0.433134), (0.470594, 0.195991, -0.433134), (0.340553, 0.195991, -0.433134), (0.27026, -0.246161, -0.433134), (0.176491, -0.246161, -0.433134), (0.176528, 0.195991, -0.433134), (0.270223, 0.195991, -0.433134), (0.106473, -0.240895, -0.592966), (0.106453, -0.210229, -0.623633), (-0.022663, -0.225531, -0.592966), (-0.022663, -0.194865, -0.623633), (0.340297, -0.210229, -0.623633), (0.340278, -0.240895, -0.592966), (0.469414, -0.194865, -0.623633), (0.469414, -0.225531, -0.592966), (0.176528, -0.21438, -0.623633), (0.176528, -0.245046, -0.592966), (0.270223, -0.245046, -0.592966), (0.270223, -0.21438, -0.623633), (-0.014049, -0.187685, -0.615938), (-0.014049, -0.218351, -0.585272), (0.4608, -0.218351, -0.585272), (0.4608, -0.187685, -0.615938), (0.176778, -0.206239, -0.615938), (0.176797, -0.236906, -0.585272), (0.107281, -0.232787, -0.585272), (0.107202, -0.20212, -0.615938), (0.339549, -0.20212, -0.615938), (0.33947, -0.232787, -0.585272), (0.269973, -0.206239, -0.615938), (0.269953, -0.236906, -0.585272), (0.34029, -0.221964, -0.621299), (0.270223, -0.226115, -0.621299), (0.340284, -0.231913, -0.614651), (0.270223, -0.236064, -0.614651), (0.34028, -0.238561, -0.604702), (0.270223, -0.242712, -0.604702), (0.176528, -0.226115, -0.621299), (0.106461, -0.221964, -0.621299), (0.176528, -0.236064, -0.614651), (0.106467, -0.231913, -0.614651), (0.176528, -0.242712, -0.604702), (0.106471, -0.238561, -0.604702), (0.469414, -0.206601, -0.621299), (0.469414, -0.216549, -0.614651), (0.469414, -0.223197, -0.604702), (-0.022663, -0.206601, -0.621299), (-0.022663, -0.216549, -0.614651), (-0.022663, -0.223197, -0.604702), (-0.014049, -0.199421, -0.613604), (0.107232, -0.213856, -0.613604), (-0.014049, -0.209369, -0.606956), (0.107258, -0.223805, -0.606956), (-0.014049, -0.216017, -0.597008), (0.107275, -0.230452, -0.597008), (0.339519, -0.213856, -0.613604), (0.4608, -0.199421, -0.613604), (0.339493, -0.223805, -0.606956), (0.4608, -0.209369, -0.606956), (0.339476, -0.230452, -0.597008), (0.4608, -0.216017, -0.597008), (0.176785, -0.217975, -0.613604), (0.269965, -0.217975, -0.613604), (0.176792, -0.227924, -0.606956), (0.269959, -0.227924, -0.606956), (0.176796, -0.234571, -0.597008), (0.269955, -0.234571, -0.597008)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-172.2171, -111.271255), (-172.2171, -111.271286), (-172.21706, -111.271286), (-172.21706, -111.271255), (-137.53873, -114.56521), (-137.53873, -114.56532), (-137.53847, -114.56532), (-137.53847, -114.56521), (-142.85313, 0.83353), (-142.85313, 1.236954), (-142.87862, 1.209985), (-142.87862, 0.83353), (-142.85313, 1.236954), (-144.1693, 1.236954), (-144.14682, 1.209985), (-142.87862, 1.209985), (-144.1693, 1.236954), (-144.2174, 0.832669), (-144.19202, 0.830138), (-144.14682, 1.209985), (-144.2174, 0.832669), (-144.2304, 0.613348), (-144.20491, 0.612503), (-144.19202, 0.830138), (-144.2304, 0.613348), (-144.2304, 0.320017), (-144.20491, 0.32086), (-144.20491, 0.612503), (-144.2304, 0.320017), (-144.2174, 0.100695), (-144.19202, 0.103226), (-144.20491, 0.32086), (-144.2174, 0.100695), (-144.1693, -0.30359), (-144.14682, -0.276622), (-144.19202, 0.103226), (-144.1693, -0.30359), (-142.85313, -0.30359), (-142.87862, -0.276622), (-144.14682, -0.276622), (-142.85313, -0.30359), (-142.85313, 0.099833), (-142.87862, 0.099833), (-142.87862, -0.276622), (-142.85313, 0.099833), (-142.85313, 0.320017), (-142.87862, 0.320017), (-142.87862, 0.099833), (-142.85313, 0.320017), (-142.85313, 0.613348), (-142.87862, 0.613348), (-142.87862, 0.320017), (-142.85313, 0.613348), (-142.85313, 0.83353), (-142.87862, 0.83353), (-142.87862, 0.613348), (-143.10861, 0.096508), (-143.10861, 0.318688), (-143.12213, 0.318688), (-143.12213, 0.096508), (-143.09978, 0.318255), (-143.09978, 0.096242), (-143.08623, 0.096242), (-143.08623, 0.318255), (-143.09978, 0.837122), (-143.09978, 0.615109), (-143.08623, 0.615109), (-143.08623, 0.837122), (-143.10861, 0.614677), (-143.10861, 0.836855), (-143.12213, 0.836855), (-143.12213, 0.614677), (-143.10861, 0.318688), (-143.10861, 0.614677), (-143.12213, 0.614677), (-143.12213, 0.318688), (-143.09978, 0.615109), (-143.09978, 0.318255), (-143.08623, 0.318255), (-143.08623, 0.615109), (-143.10861, -0.314299), (-143.10861, 0.096508), (-143.12213, 0.096508), (-143.12213, -0.314299), (-143.03998, 1.081635), (-143.03998, -0.283517), (-143.02614, -0.283517), (-143.02614, 1.081635), (-143.09978, 0.096242), (-143.09978, -0.31596), (-143.08623, -0.31596), (-143.08623, 0.096242), (-143.09978, 1.249325), (-143.09978, 0.837122), (-143.08623, 0.837122), (-143.08623, 1.249325), (-143.01837, 1.081636), (-143.01837, -0.283518), (-143.00453, -0.283518), (-143.00453, 1.081636), (-143.10861, 0.836855), (-143.10861, 1.247663), (-143.12213, 1.247663), (-143.12213, 0.836855), (-143.06516, 0.092069), (-143.06516, 0.305358), (-143.08739, 0.305358), (-143.08739, 0.092069), (-143.06516, 0.092069), (-143.08739, 0.092069), (-143.08739, -0.280193), (-143.06516, -0.280193), (-143.00093, 1.002848), (-143.00093, -0.237481), (-142.97874, -0.237481), (-142.97874, 1.002848), (-143.06577, 0.089482), (-143.06577, -0.278698), (-143.04356, -0.278698), (-143.04356, 0.089482), (-143.06577, 0.304826), (-143.06577, 0.089482), (-143.04356, 0.089482), (-143.04356, 0.304826), (-143.06577, 0.591709), (-143.06577, 0.304826), (-143.04356, 0.304826), (-143.04356, 0.591709), (-143.06577, 0.807052), (-143.06577, 0.591709), (-143.04356, 0.591709), (-143.04356, 0.807052), (-143.06577, 1.175231), (-143.06577, 0.807052), (-143.04356, 0.807052), (-143.04356, 1.175231), (-142.97932, 1.002848), (-142.97932, -0.237481), (-142.95714, -0.237481), (-142.95714, 1.002848), (-143.06516, 0.804465), (-143.06516, 1.176727), (-143.08739, 1.176727), (-143.08739, 0.804465), (-143.06516, 0.591176), (-143.06516, 0.804465), (-143.08739, 0.804465), (-143.08739, 0.591176), (-143.06516, 0.305358), (-143.06516, 0.591176), (-143.08739, 0.591176), (-143.08739, 0.305358), (-142.85313, 1.236954), (-142.85313, 0.83353), (-142.84964, 0.83353), (-142.84964, 1.240649), (-142.85313, 0.83353), (-142.85313, 0.613348), (-142.84964, 0.613348), (-142.84964, 0.83353), (-142.85313, 0.613348), (-142.85313, 0.320017), (-142.84964, 0.320017), (-142.84964, 0.613348), (-142.85313, 0.320017), (-142.85313, 0.099833), (-142.84964, 0.099833), (-142.84964, 0.320017), (-142.85313, 0.099833), (-142.85313, -0.30359), (-142.84964, -0.307284), (-142.84964, 0.099833), (-143.02135, -0.279914), (-143.02135, 1.078457), (-143.02614, 1.081635), (-143.02614, -0.283517), (-144.1693, -0.30359), (-144.2174, 0.100695), (-144.22087, 0.100348), (-144.17238, -0.307284), (-144.2174, 0.100695), (-144.2304, 0.320017), (-144.23389, 0.3199), (-144.22087, 0.100348), (-144.2304, 0.320017), (-144.2304, 0.613348), (-144.23389, 0.613464), (-144.23389, 0.3199), (-144.2304, 0.613348), (-144.2174, 0.832669), (-144.22087, 0.833015), (-144.23389, 0.613464), (-144.2174, 0.832669), (-144.1693, 1.236954), (-144.17238, 1.240649), (-144.22087, 0.833015), (-142.99974, -0.28034), (-142.99974, 1.078032), (-143.00453, 1.081636), (-143.00453, -0.283518), (-143.10393, 0.836855), (-143.10393, 1.243935), (-143.10861, 1.247663), (-143.10861, 0.836855), (-143.02316, 1.078032), (-143.02316, -0.28034), (-143.01837, -0.283518), (-143.01837, 1.081636), (-143.10448, 1.245588), (-143.10448, 0.836772), (-143.09978, 0.837122), (-143.09978, 1.249325), (-143.10448, 0.836772), (-143.10448, 0.614992), (-143.09978, 0.615109), (-143.09978, 0.837122), (-143.10448, 0.614992), (-143.10448, 0.318373), (-143.09978, 0.318255), (-143.09978, 0.615109), (-143.10448, 0.318373), (-143.10448, 0.096593), (-143.09978, 0.096242), (-143.09978, 0.318255), (-143.10448, 0.096593), (-143.10448, -0.312224), (-143.09978, -0.31596), (-143.09978, 0.096242), (-143.04477, 1.078457), (-143.04477, -0.279914), (-143.03998, -0.283517), (-143.03998, 1.081635), (-143.10393, -0.310571), (-143.10393, 0.096508), (-143.10861, 0.096508), (-143.10861, -0.314299), (-143.10393, 0.096508), (-143.10393, 0.318688), (-143.10861, 0.318688), (-143.10861, 0.096508), (-143.10393, 0.318688), (-143.10393, 0.614677), (-143.10861, 0.614677), (-143.10861, 0.318688), (-143.10393, 0.614677), (-143.10393, 0.836855), (-143.10861, 0.836855), (-143.10861, 0.614677), (-118.53901, -109.61047), (-118.53901, -113.51364), (-114.839676, -113.51364), (-114.839676, -109.61047), (-88.714714, -110.74826), (-88.714714, -113.93459), (-85.69519, -113.93459), (-85.69519, -110.74826), (-69.1676, -112.11487), (-69.1676, -112.114876), (-69.1676, -112.114876), (-69.1676, -112.11487), (-71.08644, -0.634686), (-71.08644, -0.348666), (-71.549, -0.348666), (-71.549, -0.634686), (-71.08644, -0.135228), (-71.549, -0.135228), (-71.549, -0.348666), (-71.08644, -0.348666), (-71.08644, -0.135228), (-71.08644, 0.237295), (-71.549, 0.237295), (-71.549, -0.135228), (-72.05955, 0.4793), (-72.09548, 0.472153), (-72.12594, 0.451798), (-72.14629, 0.421336), (-72.15344, 0.385403), (-72.15344, -0.761029), (-71.59826, -0.761029), (-71.59826, 0.4793), (-72.19401, 0.790559), (-72.19401, -0.355872), (-72.18686, -0.391805), (-72.166504, -0.422267), (-72.13604, -0.442622), (-72.10011, -0.449769), (-71.638824, -0.449769), (-71.638824, 0.790559), (-71.08644, -0.848124), (-71.549, -0.848124), (-71.549, -1.220647), (-71.08644, -1.220647), (-71.08644, -0.848124), (-71.08644, -0.634686), (-71.549, -0.634686), (-71.549, -0.848124), (-72.14576, -0.628976), (-72.14576, -0.844071), (-71.65957, -0.844071), (-71.65957, -0.628976), (-71.65957, -0.341299), (-71.65957, -0.126204), (-72.14576, -0.126204), (-72.14576, -0.341299), (-72.14576, -0.341299), (-72.14576, -0.628976), (-71.65957, -0.628976), (-71.65957, -0.341299), (-72.06757, -0.126353), (-71.48883, -0.126353), (-71.48883, 0.268203), (-72.06757, 0.268203), (-71.77566, 0.508568), (-71.81159, 0.501421), (-71.84206, 0.481066), (-71.86241, 0.450604), (-71.86955, 0.414671), (-71.86955, -0.778669), (-71.29081, -0.778669), (-71.29081, 0.508568), (-72.14576, -0.844071), (-72.14576, -1.240566), (-71.65957, -1.240566), (-71.65957, -0.844071), (-72.14576, 0.27029), (-72.14576, -0.126204), (-71.65957, -0.126204), (-71.65957, 0.27029), (-72.018845, 0.508568), (-72.018845, -0.684772), (-72.011696, -0.720705), (-71.99134, -0.751166), (-71.960884, -0.771521), (-71.92495, -0.778669), (-71.4401, -0.778669), (-71.4401, 0.508568), (-72.06757, -1.238479), (-71.48883, -1.238479), (-71.48883, -0.843923), (-72.06757, -0.843923), (-71.76263, -0.271445), (-71.7499, -0.486426), (-70.54839, -0.489529), (-70.54839, -0.272217), (-72.06757, -0.628579), (-71.48883, -0.628579), (-71.48883, -0.341696), (-72.06757, -0.341696), (-72.06757, -0.341696), (-71.48883, -0.341696), (-71.48883, -0.126353), (-72.06757, -0.126353), (-70.54839, 0.234597), (-71.7499, 0.231494), (-71.76263, 0.016514), (-70.54839, 0.017287), (-70.54839, 0.017287), (-71.76263, 0.016514), (-71.76263, -0.271445), (-70.54839, -0.272217), (-72.06757, -0.843923), (-71.48883, -0.843923), (-71.48883, -0.628579), (-72.06757, -0.628579), (-71.7053, -0.861073), (-70.54839, -0.861073), (-70.54839, -0.489529), (-71.7499, -0.486426), (-70.54839, 0.234597), (-70.54839, 0.606141), (-71.7053, 0.606141), (-71.7499, 0.231494), (-71.00593, 0.274834), (-72.20977, 0.274834), (-72.20977, -0.123195), (-70.95847, -0.123985), (-71.15622, -0.473174), (-71.7114, -0.473174), (-71.7114, -0.841354), (-71.15622, -0.841354), (-71.15622, -0.25783), (-71.7114, -0.25783), (-71.7114, -0.473174), (-71.15622, -0.473174), (-71.15622, 0.029053), (-71.7114, 0.029053), (-71.7114, -0.25783), (-71.15622, -0.25783), (-71.15622, 0.244396), (-71.7114, 0.244396), (-71.7114, 0.029053), (-71.15622, 0.029053), (-71.15622, 0.612576), (-71.7114, 0.612576), (-71.7114, 0.244396), (-71.15622, 0.244396), (-72.20977, -1.24511), (-71.00593, -1.24511), (-70.95847, -0.846291), (-72.20977, -0.847081), (-72.20977, -0.340433), (-72.20977, -0.629842), (-70.94565, -0.629842), (-70.94565, -0.340433), (-70.94565, -0.340433), (-70.95847, -0.123985), (-72.20977, -0.123195), (-72.20977, -0.340433), (-72.20977, -0.629842), (-72.20977, -0.847081), (-70.95847, -0.846291), (-70.94565, -0.629842), (-70.94565, -0.629842), (-70.95847, -0.846291), (-70.922226, -0.846268), (-70.9094, -0.629842), (-70.9094, -0.629842), (-70.922226, -0.846268), (-70.891495, -0.846248), (-70.87867, -0.629842), (-70.87867, -0.629842), (-70.891495, -0.846248), (-70.87096, -0.846236), (-70.85814, -0.629842), (-72.18179, -0.628976), (-72.18179, -0.844077), (-72.14576, -0.844071), (-72.14576, -0.628976), (-70.95847, -0.123985), (-70.94565, -0.340433), (-70.9094, -0.340433), (-70.922226, -0.124008), (-70.922226, -0.124008), (-70.9094, -0.340433), (-70.87867, -0.340433), (-70.891495, -0.124027), (-70.891495, -0.124027), (-70.87867, -0.340433), (-70.85814, -0.340433), (-70.87096, -0.12404), (-72.18179, -0.126199), (-72.18179, -0.341299), (-72.14576, -0.341299), (-72.14576, -0.126204), (-70.94565, -0.340433), (-70.94565, -0.629842), (-70.9094, -0.629842), (-70.9094, -0.340433), (-70.9094, -0.340433), (-70.9094, -0.629842), (-70.87867, -0.629842), (-70.87867, -0.340433), (-70.87867, -0.340433), (-70.87867, -0.629842), (-70.85814, -0.629842), (-70.85814, -0.340433), (-72.18179, -0.341299), (-72.18179, -0.628976), (-72.14576, -0.628976), (-72.14576, -0.341299), (-70.95847, -0.846291), (-71.00593, -1.24511), (-70.96968, -1.24511), (-70.922226, -0.846268), (-70.922226, -0.846268), (-70.96968, -1.24511), (-70.93895, -1.24511), (-70.891495, -0.846248), (-70.891495, -0.846248), (-70.93895, -1.24511), (-70.91842, -1.24511), (-70.87096, -0.846236), (-72.18179, -0.844077), (-72.18179, -1.240566), (-72.14576, -1.240566), (-72.14576, -0.844071), (-71.00593, 0.274834), (-70.95847, -0.123985), (-70.922226, -0.124008), (-70.96968, 0.274834), (-70.96968, 0.274834), (-70.922226, -0.124008), (-70.891495, -0.124027), (-70.93895, 0.274834), (-70.93895, 0.274834), (-70.891495, -0.124027), (-70.87096, -0.12404), (-70.91842, 0.274834), (-72.18179, 0.27029), (-72.18179, -0.126199), (-72.14576, -0.126204), (-72.14576, 0.27029), (-71.7499, 0.231494), (-71.7053, 0.606141), (-71.741554, 0.606141), (-71.786156, 0.231401), (-71.786156, 0.231401), (-71.741554, 0.606141), (-71.7723, 0.606141), (-71.8169, 0.231321), (-71.8169, 0.231321), (-71.7723, 0.606141), (-71.79284, 0.606141), (-71.83744, 0.231268), (-71.05041, -0.135209), (-71.05041, 0.237295), (-71.08644, 0.237295), (-71.08644, -0.135228), (-71.7053, -0.861073), (-71.7499, -0.486426), (-71.786156, -0.486332), (-71.741554, -0.861073), (-71.741554, -0.861073), (-71.786156, -0.486332), (-71.8169, -0.486252), (-71.7723, -0.861073), (-71.7723, -0.861073), (-71.8169, -0.486252), (-71.83744, -0.4862), (-71.79284, -0.861073), (-71.05041, -1.220647), (-71.05041, -0.848143), (-71.08644, -0.848124), (-71.08644, -1.220647), (-71.76263, -0.271445), (-71.76263, 0.016514), (-71.79889, 0.016491), (-71.79889, -0.271421), (-71.79889, -0.271421), (-71.79889, 0.016491), (-71.82963, 0.016471), (-71.82963, -0.271402), (-71.82963, -0.271402), (-71.82963, 0.016471), (-71.85017, 0.016458), (-71.85017, -0.271389), (-71.05041, -0.63469), (-71.05041, -0.348662), (-71.08644, -0.348666), (-71.08644, -0.634686), (-71.76263, 0.016514), (-71.7499, 0.231494), (-71.786156, 0.231401), (-71.79889, 0.016491), (-71.79889, 0.016491), (-71.786156, 0.231401), (-71.8169, 0.231321), (-71.82963, 0.016471), (-71.82963, 0.016471), (-71.8169, 0.231321), (-71.83744, 0.231268), (-71.85017, 0.016458), (-71.05041, -0.348662), (-71.05041, -0.135209), (-71.08644, -0.135228), (-71.08644, -0.348666), (-71.7499, -0.486426), (-71.76263, -0.271445), (-71.79889, -0.271421), (-71.786156, -0.486332), (-71.786156, -0.486332), (-71.79889, -0.271421), (-71.82963, -0.271402), (-71.8169, -0.486252), (-71.8169, -0.486252), (-71.82963, -0.271402), (-71.85017, -0.271389), (-71.83744, -0.4862), (-71.05041, -0.848143), (-71.05041, -0.63469), (-71.08644, -0.634686), (-71.08644, -0.848124), (5.646933, -121.22408), (7.358486, -121.22408), (7.358486, -119.51253), (5.646933, -119.51253), (-5.253075, -117.71076), (-3.54152, -117.71076), (-3.54152, -115.99921), (-5.253075, -115.99921)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_FridgeDrawer2D2_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0]
                rel material:binding = </root/_materials/M_FridgeDrawer2D2_0>
            }

            def GeomSubset "M_FridgeDrawer2D2_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
                rel material:binding = </root/_materials/M_FridgeDrawer2D2_1>
            }

            def GeomSubset "M_FridgeDrawer2D2_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [62]
                rel material:binding = </root/_materials/M_FridgeDrawer2D2_2>
            }

            def GeomSubset "M_FridgeDrawer2D2_3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [63]
                rel material:binding = </root/_materials/M_FridgeDrawer2D2_3>
            }

            def GeomSubset "M_FridgeDrawer2D2_4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138]
                rel material:binding = </root/_materials/M_FridgeDrawer2D2_4>
            }

            def GeomSubset "M_FridgeDrawer2D2_5" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [139]
                rel material:binding = </root/_materials/M_FridgeDrawer2D2_5>
            }

            def GeomSubset "M_FridgeDrawer2D2_6" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [140]
                rel material:binding = </root/_materials/M_FridgeDrawer2D2_6>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer2D2_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2D2_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer2D2_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2D2_0/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2D2_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Copper_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2D2_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer2D2_1"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2D2_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer2D2_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2D2_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2D2_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2D2_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer2D2_2"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2D2_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer2D2_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2D2_2/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2D2_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2D2_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer2D2_3"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2D2_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.5735294, 0.5735294, 0.5735294)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2D2_3/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2D2_3/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer2D2_4"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2D2_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.39705884, 0.39705884, 0.39705884)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }

        def Material "M_FridgeDrawer2D2_5"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2D2_5/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer2D2_5/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2D2_5/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Decal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2D2_5/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Decal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2D2_5/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer2D2_6"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2D2_6/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer2D2_6/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2D2_6/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Readout_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2D2_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2D2_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

