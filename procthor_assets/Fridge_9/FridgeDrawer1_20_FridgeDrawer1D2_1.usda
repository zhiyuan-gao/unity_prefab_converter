#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "FridgeDrawer1D2"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "FridgeDrawer1D2" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.470594, -0.246161, -0.778103), (0.023843, 0.195991, -0.202111)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 8, 8, 4, 4, 4, 4, 4, 4, 8, 4, 4, 8, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 4, 5, 7, 6, 33, 28, 46, 51, 28, 30, 48, 46, 30, 37, 55, 48, 37, 36, 54, 55, 36, 39, 57, 54, 39, 38, 56, 57, 38, 31, 49, 56, 31, 29, 47, 49, 29, 34, 52, 47, 34, 35, 53, 52, 35, 32, 50, 53, 32, 33, 51, 50, 107, 111, 95, 94, 108, 105, 98, 99, 103, 109, 96, 97, 110, 101, 93, 92, 111, 110, 92, 95, 109, 108, 99, 96, 106, 107, 94, 89, 104, 106, 89, 91, 105, 104, 91, 98, 102, 103, 97, 90, 100, 102, 90, 88, 101, 100, 88, 93, 77, 76, 57, 56, 77, 56, 49, 78, 79, 78, 49, 47, 80, 79, 47, 52, 81, 80, 52, 53, 82, 81, 53, 50, 83, 82, 50, 51, 84, 83, 51, 46, 85, 84, 46, 48, 86, 85, 48, 55, 87, 86, 55, 54, 76, 87, 54, 57, 28, 33, 93, 88, 33, 32, 92, 93, 32, 35, 95, 92, 35, 34, 94, 95, 34, 29, 89, 94, 29, 31, 91, 89, 31, 38, 98, 91, 38, 39, 99, 98, 39, 36, 96, 99, 36, 37, 97, 96, 37, 30, 90, 97, 30, 28, 88, 90, 65, 64, 100, 101, 64, 66, 102, 100, 66, 67, 103, 102, 67, 73, 109, 103, 73, 72, 108, 109, 72, 69, 105, 108, 69, 68, 104, 105, 68, 70, 106, 104, 70, 71, 107, 106, 71, 75, 111, 107, 75, 74, 110, 111, 74, 65, 101, 110, 8, 9, 11, 10, 12, 13, 15, 14, 16, 17, 19, 18, 135, 129, 87, 76, 130, 86, 87, 129, 130, 125, 85, 86, 125, 158, 156, 154, 124, 58, 84, 85, 59, 127, 161, 163, 165, 126, 78, 79, 133, 77, 78, 126, 133, 135, 76, 77, 122, 117, 69, 72, 73, 67, 112, 121, 121, 122, 72, 73, 65, 40, 41, 64, 119, 150, 149, 148, 118, 43, 70, 68, 117, 119, 68, 69, 114, 112, 67, 66, 41, 115, 151, 152, 153, 114, 66, 64, 70, 43, 42, 71, 134, 132, 62, 63, 75, 44, 45, 74, 74, 45, 40, 65, 61, 131, 128, 60, 60, 128, 134, 63, 71, 42, 44, 75, 127, 59, 62, 132, 61, 58, 124, 131, 115, 41, 40, 113, 80, 62, 59, 79, 81, 63, 62, 80, 82, 60, 63, 81, 83, 61, 60, 82, 84, 58, 61, 83, 43, 118, 116, 42, 45, 44, 123, 120, 120, 113, 40, 45, 44, 42, 116, 123, 123, 116, 136, 137, 137, 136, 138, 139, 139, 138, 140, 141, 141, 140, 117, 122, 113, 120, 142, 143, 143, 142, 144, 145, 145, 144, 146, 147, 147, 146, 121, 112, 120, 123, 137, 142, 142, 137, 139, 144, 144, 139, 141, 146, 146, 141, 122, 121, 116, 118, 148, 136, 136, 148, 149, 138, 138, 149, 150, 140, 140, 150, 119, 117, 115, 113, 143, 151, 151, 143, 145, 152, 152, 145, 147, 153, 153, 147, 112, 114, 131, 124, 154, 155, 155, 154, 156, 157, 157, 156, 158, 159, 159, 158, 125, 130, 127, 132, 160, 161, 161, 160, 162, 163, 163, 162, 164, 165, 165, 164, 133, 126, 134, 128, 166, 167, 167, 166, 168, 169, 169, 168, 170, 171, 171, 170, 129, 135, 128, 131, 155, 166, 166, 155, 157, 168, 168, 157, 159, 170, 170, 159, 130, 129, 132, 134, 167, 160, 160, 167, 169, 162, 162, 169, 171, 164, 164, 171, 135, 133, 20, 21, 23, 22, 24, 25, 27, 26]
            rel material:binding = </root/_materials/M_FridgeDrawer1D2_0>
            normal3f[] normals = [(0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -1), (0.0000010854327, 0, -1), (0.000001035234, 0, -1), (0, 0, -1), (0.0000010854327, 0, -1), (9.775524e-7, 0, -1), (9.1864524e-7, 0, -1), (0.000001035234, 0, -1), (9.775524e-7, 0, -1), (-1.14075654e-7, 0, -1), (-1.1255797e-7, 0, -1), (9.1864524e-7, 0, -1), (-1.14075654e-7, 0, -1), (0, 0, -1), (0, 0, -1), (-1.1255797e-7, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1.14075455e-7, 0, -1), (1.1255773e-7, 0, -1), (0, 0, -1), (1.14075455e-7, 0, -1), (-9.775524e-7, 0, -1), (-9.186448e-7, 0, -1), (1.1255773e-7, 0, -1), (-9.775524e-7, 0, -1), (-0.0000010854325, 0, -1), (-0.0000010352334, 0, -1), (-9.186448e-7, 0, -1), (-0.0000010854325, 0, -1), (0, 0, -1), (0, 0, -1), (-0.0000010352334, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.0000051281604, -0.9091912, 0.41637897), (0, -0.9093344, 0.41606605), (0.0000051117436, -0.9093334, -0.41606814), (0, -0.90919024, -0.41638106), (0.03028546, 0.9103805, 0.4126624), (0.07390043, 0.907828, 0.41277963), (0.07381148, 0.9078368, -0.41277605), (0.030292735, 0.91037935, -0.41266423), (-0.07381156, 0.90783834, 0.4127728), (-0.030292675, 0.91038144, 0.41265962), (-0.030303849, 0.9104154, -0.4125837), (-0.07390002, 0.90782756, -0.41278055), (-0.0000051117477, -0.9093345, 0.41606575), (0, -0.90919095, 0.41637954), (0.0000051281568, -0.90919, -0.41638166), (0, -0.9093335, -0.41606787), (0, -0.9093344, 0.41606605), (-0.0000051117477, -0.9093345, 0.41606575), (0, -0.9093335, -0.41606787), (0.0000051117436, -0.9093334, -0.41606814), (-0.030292675, 0.91038144, 0.41265962), (0.03028546, 0.9103805, 0.4126624), (0.030292735, 0.91037935, -0.41266423), (-0.030303849, 0.9104154, -0.4125837), (0.0000020228326, -0.94342196, 0.3315948), (-0.0000051281604, -0.9091912, 0.41637897), (0, -0.90919024, -0.41638106), (0, -0.94342136, -0.331596), (0.93395114, -1.7136335e-7, 0.35740077), (0.9373641, 0, 0.34835115), (0.9373635, -0.0000012516975, -0.34835282), (0.9339505, 0, -0.3574025), (0.07390043, 0.907828, 0.41277963), (0.111096546, 0.93378615, 0.3401485), (0.111096874, 0.9337856, -0.34014985), (0.07381148, 0.9078368, -0.41277605), (-0.11109725, 0.93378544, 0.3401504), (-0.07381156, 0.90783834, 0.4127728), (-0.07390002, 0.90782756, -0.41278055), (-0.111096, 0.93378514, -0.34015173), (-0.93734914, -0.0000012330711, 0.34839144), (-0.93392086, 0, 0.35747966), (-0.9339203, -1.6763806e-7, -0.35748136), (-0.937363, 0, -0.34835398), (0, -0.90919095, 0.41637954), (0, -0.9434215, 0.33159572), (-0.0000019967556, -0.94342107, -0.3315969), (0.0000051281568, -0.90919, -0.41638166), (-0.08039364, -0.9967632, 0), (-0.03389147, -0.9994254, -2.0657203e-7), (-0.034001853, -0.9994217, 0), (-0.08041617, -0.9967614, -0.000003181426), (-0.08039364, -0.9967632, 0), (-0.08041617, -0.9967614, -0.000003181426), (-0.11814781, -0.992996, 0), (-0.11814788, -0.99299604, 0), (-1, 0, 0), (-1, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 1.5897146e-9, 0), (1, 1.5897146e-9, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (0.08039404, -0.99676317, -7.984364e-7), (0.11814785, -0.99299604, 0), (0.1181478, -0.992996, 0), (0.08041657, -0.9967613, 0), (0.033891894, -0.9994255, 0), (0.08039404, -0.99676317, -7.984364e-7), (0.08041657, -0.9967613, 0), (0.034002267, -0.99942166, 3.8615608e-10), (-0.03389147, -0.9994254, -2.0657203e-7), (0.033891894, -0.9994255, 0), (0.034002267, -0.99942166, 3.8615608e-10), (-0.034001853, -0.9994217, 0), (0, -0.7992837, -0.6009538), (0, -0.79928666, -0.60095), (0.0000051281568, -0.90919, -0.41638166), (-0.0000019967556, -0.94342107, -0.3315969), (0, -0.79928666, -0.60095), (0, -0.7992878, -0.6009485), (0, -0.9093335, -0.41606787), (0.0000051281568, -0.90919, -0.41638166), (0, -0.7992878, -0.6009485), (0, -0.79928744, -0.6009489), (0.0000051117436, -0.9093334, -0.41606814), (0, -0.9093335, -0.41606787), (0, -0.79928744, -0.6009489), (0, -0.79928744, -0.6009489), (0, -0.90919024, -0.41638106), (0.0000051117436, -0.9093334, -0.41606814), (0, -0.79928744, -0.6009489), (0, -0.79928595, -0.60095084), (0, -0.94342136, -0.331596), (0, -0.90919024, -0.41638106), (0.7825124, 0, -0.622635), (0.7825124, 0, -0.622635), (0.9339505, 0, -0.3574025), (0.9373635, -0.0000012516975, -0.34835282), (0.094384536, 0.7933248, -0.6014376), (0.06381092, 0.79648113, -0.6012869), (0.07381148, 0.9078368, -0.41277605), (0.111096874, 0.9337856, -0.34014985), (0.06381092, 0.79648113, -0.6012869), (0.026882432, 0.7986912, -0.60114026), (0.030292735, 0.91037935, -0.41266423), (0.07381148, 0.9078368, -0.41277605), (0.026882432, 0.7986912, -0.60114026), (-0.026882412, 0.79866564, -0.6011741), (-0.030303849, 0.9104154, -0.4125837), (0.030292735, 0.91037935, -0.41266423), (-0.026882412, 0.79866564, -0.6011741), (-0.06377577, 0.79656917, -0.60117406), (-0.07390002, 0.90782756, -0.41278055), (-0.030303849, 0.9104154, -0.4125837), (-0.06377577, 0.79656917, -0.60117406), (-0.0943841, 0.79332125, -0.6014425), (-0.111096, 0.93378514, -0.34015173), (-0.07390002, 0.90782756, -0.41278055), (-0.7825105, 0, -0.6226374), (-0.7825105, 0, -0.6226374), (-0.937363, 0, -0.34835398), (-0.9339203, -1.6763806e-7, -0.35748136), (-0.00001818139, -0.75763774, 0.6526753), (-0.000032380223, -0.66330487, 0.7483493), (0, -0.9434215, 0.33159572), (0, -0.90919095, 0.41637954), (-0.63555413, 0.000010810737, 0.7720563), (-0.6420115, -0.000005185604, 0.76669496), (-0.93392086, 0, 0.35747966), (-0.93734914, -0.0000012330711, 0.34839144), (-0.07896029, 0.6649797, 0.74267566), (-0.05680579, 0.757927, 0.64986134), (-0.07381156, 0.90783834, 0.4127728), (-0.11109725, 0.93378544, 0.3401504), (-0.05680579, 0.757927, 0.64986134), (-0.027567469, 0.7596087, 0.64979583), (-0.030292675, 0.91038144, 0.41265962), (-0.07381156, 0.90783834, 0.4127728), (-0.027567469, 0.7596087, 0.64979583), (0.027493108, 0.75964284, 0.64975905), (0.03028546, 0.9103805, 0.4126624), (-0.030292675, 0.91038144, 0.41265962), (0.027493108, 0.75964284, 0.64975905), (0.056731395, 0.7579334, 0.6498603), (0.07390043, 0.907828, 0.41277963), (0.03028546, 0.9103805, 0.4126624), (0.056731395, 0.7579334, 0.6498603), (0.07911398, 0.6649642, 0.7426732), (0.111096546, 0.93378615, 0.3401485), (0.07390043, 0.907828, 0.41277963), (0.6420549, 0.00020695859, 0.76665866), (0.6355977, 0.0000070035458, 0.7720204), (0.9373641, 0, 0.34835115), (0.93395114, -1.7136335e-7, 0.35740077), (0.00018053596, -0.6633066, 0.7483477), (0, -0.75763816, 0.6526748), (-0.0000051281604, -0.9091912, 0.41637897), (0.0000020228326, -0.94342196, 0.3315948), (0, -0.75763816, 0.6526748), (0, -0.75763816, 0.6526748), (0, -0.9093344, 0.41606605), (-0.0000051281604, -0.9091912, 0.41637897), (0, -0.75763816, 0.6526748), (0, -0.75763834, 0.65267456), (-0.0000051117477, -0.9093345, 0.41606575), (0, -0.9093344, 0.41606605), (0, -0.75763834, 0.65267456), (-0.00001818139, -0.75763774, 0.6526753), (0, -0.90919095, 0.41637954), (-0.0000051117477, -0.9093345, 0.41606575), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (-0.03359651, -0.9816942, -0.18747735), (0.033600707, -0.9816938, -0.18747866), (0.033891894, -0.9994255, 0), (-0.03389147, -0.9994254, -2.0657203e-7), (0.078007996, -0.9792775, -0.18689656), (0.08039404, -0.99676317, -7.984364e-7), (0.033891894, -0.9994255, 0), (0.033600707, -0.9816938, -0.18747866), (0.078007996, -0.9792775, -0.18689656), (0.11599479, -0.9752985, -0.1879845), (0.11814785, -0.99299604, 0), (0.08039404, -0.99676317, -7.984364e-7), (1, 3.179429e-9, 0), (1, 3.179429e-9, 0), (1, 3.179429e-9, 0), (1, 3.179429e-9, 0), (1, 3.179429e-9, 0), (1, 3.179429e-9, 0), (1, 1.5897146e-9, 0), (1, 1.5897146e-9, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.07800771, -0.9792778, -0.18689515), (-0.08039364, -0.9967632, 0), (-0.11814788, -0.99299604, 0), (-0.11600399, -0.97529733, -0.18798453), (-0.07800771, -0.9792778, -0.18689515), (-0.03359651, -0.9816942, -0.18747735), (-0.03389147, -0.9994254, -2.0657203e-7), (-0.08039364, -0.9967632, 0), (0.032994505, 0.9840742, 0.17466964), (0.078901805, 0.9815463, 0.17418724), (0.056731395, 0.7579334, 0.6498603), (0.027493108, 0.75964284, 0.64975905), (-0.027567469, 0.7596087, 0.64979583), (-0.05680579, 0.757927, 0.64986134), (-0.07891248, 0.9815453, 0.17418838), (-0.03290339, 0.98407644, 0.17467415), (-0.03290339, 0.98407644, 0.17467415), (0.032994505, 0.9840742, 0.17466964), (0.027493108, 0.75964284, 0.64975905), (-0.027567469, 0.7596087, 0.64979583), (-0.00001818139, -0.75763774, 0.6526753), (0, -1, 0), (0, -1, 0), (-0.000032380223, -0.66330487, 0.7483493), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.6355977, 0.0000070035458, 0.7720204), (0.6420549, 0.00020695859, 0.76665866), (0.078901805, 0.9815463, 0.17418724), (0.11632032, 0.9776797, 0.17496245), (0.07911398, 0.6649642, 0.7426732), (0.056731395, 0.7579334, 0.6498603), (-0.116299, 0.9776823, 0.17496245), (-0.07891248, 0.9815453, 0.17418838), (-0.05680579, 0.757927, 0.64986134), (-0.07896029, 0.6649797, 0.74267566), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.6420115, -0.000005185604, 0.76669496), (-0.63555413, 0.000010810737, 0.7720563), (0.00018053596, -0.6633066, 0.7483477), (0, -1, 0), (0, -1, 0), (0, -0.75763816, 0.6526748), (-0.0060026646, -0.19895151, -0.97999096), (-0.018000506, -0.19859377, -0.97991663), (-4.33983e-7, 0, -1), (-2.725826e-7, 0, -1), (0, -0.75763816, 0.6526748), (0, -1, 0), (0, -1, 0), (0, -0.75763834, 0.65267456), (0, -0.75763834, 0.65267456), (0, -1, 0), (0, -1, 0), (-0.00001818139, -0.75763774, 0.6526753), (3.8336935e-7, 0, -1), (0.017997965, -0.19859383, -0.9799166), (0.0060025556, -0.19895136, -0.9799909), (2.7258062e-7, 0, -1), (2.7258062e-7, 0, -1), (0.0060025556, -0.19895136, -0.9799909), (-0.0060026646, -0.19895151, -0.97999096), (-2.725826e-7, 0, -1), (0, -0.75763816, 0.6526748), (0, -1, 0), (0, -1, 0), (0, -0.75763816, 0.6526748), (-0.021795876, -0.18276286, -0.98291534), (-3.2338485e-7, 0, -1), (-4.33983e-7, 0, -1), (-0.018000506, -0.19859377, -0.97991663), (3.8336935e-7, 0, -1), (2.2232803e-7, 0, -1), (0.02179596, -0.18276274, -0.98291534), (0.017997965, -0.19859383, -0.9799166), (-0.020096717, 0.16899514, 0.98541194), (2.9068735e-7, 0, 0.99999994), (1.4540208e-7, 0, 1), (-0.016905677, 0.1870013, 0.98221415), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 0.99999994, 0), (0, 1, 0), (0, 1, 0), (-2.906851e-7, 0, 1), (0.020094376, 0.16899502, 0.98541206), (0.016891094, 0.1870022, 0.9822143), (-1.2708135e-7, 0, 1), (0, 0, 1), (1.832695e-8, 0, 1), (0.0057037817, 0.1872756, 0.9822909), (-0.005698255, 0.18727587, 0.9822909), (-0.005698255, 0.18727587, 0.9822909), (-0.016905677, 0.1870013, 0.98221415), (1.4540208e-7, 0, 1), (0, 0, 1), (1.832695e-8, 0, 1), (-1.2708135e-7, 0, 1), (0.016891094, 0.1870022, 0.9822143), (0.0057037817, 0.1872756, 0.9822909), (0.0057037817, 0.1872756, 0.9822909), (0.016891094, 0.1870022, 0.9822143), (0.03142453, 0.3830235, 0.92320395), (0.013019746, 0.3861276, 0.92235345), (0.013019746, 0.3861276, 0.92235345), (0.03142453, 0.3830235, 0.92320395), (0.05741768, 0.70609516, 0.7057853), (0.023561819, 0.7089048, 0.7049106), (0.023561819, 0.7089048, 0.7049106), (0.05741768, 0.70609516, 0.7057853), (0.07470824, 0.9213385, 0.38151526), (0.030703746, 0.92402047, 0.38110813), (0.030703746, 0.92402047, 0.38110813), (0.07470824, 0.9213385, 0.38151526), (0.078901805, 0.9815463, 0.17418724), (0.032994505, 0.9840742, 0.17466964), (-0.016905677, 0.1870013, 0.98221415), (-0.005698255, 0.18727587, 0.9822909), (-0.012976293, 0.38611764, 0.92235833), (-0.031423945, 0.38302368, 0.92320395), (-0.031423945, 0.38302368, 0.92320395), (-0.012976293, 0.38611764, 0.92235833), (-0.02356179, 0.708905, 0.70491046), (-0.057417843, 0.70609486, 0.7057856), (-0.057417843, 0.70609486, 0.7057856), (-0.02356179, 0.708905, 0.70491046), (-0.030659314, 0.924021, 0.3811104), (-0.074708275, 0.9213388, 0.3815146), (-0.074708275, 0.9213388, 0.3815146), (-0.030659314, 0.924021, 0.3811104), (-0.03290339, 0.98407644, 0.17467415), (-0.07891248, 0.9815453, 0.17418838), (-0.005698255, 0.18727587, 0.9822909), (0.0057037817, 0.1872756, 0.9822909), (0.013019746, 0.3861276, 0.92235345), (-0.012976293, 0.38611764, 0.92235833), (-0.012976293, 0.38611764, 0.92235833), (0.013019746, 0.3861276, 0.92235345), (0.023561819, 0.7089048, 0.7049106), (-0.02356179, 0.708905, 0.70491046), (-0.02356179, 0.708905, 0.70491046), (0.023561819, 0.7089048, 0.7049106), (0.030703746, 0.92402047, 0.38110813), (-0.030659314, 0.924021, 0.3811104), (-0.030659314, 0.924021, 0.3811104), (0.030703746, 0.92402047, 0.38110813), (0.032994505, 0.9840742, 0.17466964), (-0.03290339, 0.98407644, 0.17467415), (0.016891094, 0.1870022, 0.9822143), (0.020094376, 0.16899502, 0.98541206), (0.04398341, 0.36965093, 0.92812914), (0.03142453, 0.3830235, 0.92320395), (0.03142453, 0.3830235, 0.92320395), (0.04398341, 0.36965093, 0.92812914), (0.08295531, 0.69721395, 0.71204716), (0.05741768, 0.70609516, 0.7057853), (0.05741768, 0.70609516, 0.7057853), (0.08295531, 0.69721395, 0.71204716), (0.10900544, 0.91618514, 0.38564563), (0.07470824, 0.9213385, 0.38151526), (0.07470824, 0.9213385, 0.38151526), (0.10900544, 0.91618514, 0.38564563), (0.11632032, 0.9776797, 0.17496245), (0.078901805, 0.9815463, 0.17418724), (-0.020096717, 0.16899514, 0.98541194), (-0.016905677, 0.1870013, 0.98221415), (-0.031423945, 0.38302368, 0.92320395), (-0.043983173, 0.36965114, 0.9281291), (-0.043983173, 0.36965114, 0.9281291), (-0.031423945, 0.38302368, 0.92320395), (-0.057417843, 0.70609486, 0.7057856), (-0.0829553, 0.69721407, 0.71204704), (-0.0829553, 0.69721407, 0.71204704), (-0.057417843, 0.70609486, 0.7057856), (-0.074708275, 0.9213388, 0.3815146), (-0.108991645, 0.91599905, 0.38609123), (-0.108991645, 0.91599905, 0.38609123), (-0.074708275, 0.9213388, 0.3815146), (-0.07891248, 0.9815453, 0.17418838), (-0.116299, 0.9776823, 0.17496245), (0.017997965, -0.19859383, -0.9799166), (0.02179596, -0.18276274, -0.98291534), (0.043913867, -0.36926952, -0.9282842), (0.030725963, -0.38241693, -0.92347884), (0.030725963, -0.38241693, -0.92347884), (0.043913867, -0.36926952, -0.9282842), (0.082972206, -0.6972443, -0.71201545), (0.05618596, -0.7057853, -0.7061943), (0.05618596, -0.7057853, -0.7061943), (0.082972206, -0.6972443, -0.71201545), (0.109003015, -0.916021, -0.38603607), (0.073122635, -0.92134213, -0.38181376), (0.073122635, -0.92134213, -0.38181376), (0.109003015, -0.916021, -0.38603607), (0.11599479, -0.9752985, -0.1879845), (0.078007996, -0.9792775, -0.18689656), (-0.021795876, -0.18276286, -0.98291534), (-0.018000506, -0.19859377, -0.97991663), (-0.03072646, -0.38241607, -0.92347914), (-0.04400052, -0.36969477, -0.92811084), (-0.04400052, -0.36969477, -0.92811084), (-0.03072646, -0.38241607, -0.92347914), (-0.05618512, -0.70578593, -0.7061936), (-0.08297222, -0.6972442, -0.71201557), (-0.08297222, -0.6972442, -0.71201557), (-0.05618512, -0.70578593, -0.7061936), (-0.07312271, -0.9213421, -0.38181373), (-0.109014586, -0.9162011, -0.38560516), (-0.109014586, -0.9162011, -0.38560516), (-0.07312271, -0.9213421, -0.38181373), (-0.07800771, -0.9792778, -0.18689515), (-0.11600399, -0.97529733, -0.18798453), (-0.0060026646, -0.19895151, -0.97999096), (0.0060025556, -0.19895136, -0.9799909), (0.01336348, -0.3862817, -0.922284), (-0.013256651, -0.3862798, -0.9222864), (-0.013256651, -0.3862798, -0.9222864), (0.01336348, -0.3862817, -0.922284), (0.024498392, -0.7089912, -0.7047916), (-0.024549576, -0.708994, -0.704787), (-0.024549576, -0.708994, -0.704787), (0.024498392, -0.7089912, -0.7047916), (0.03178756, -0.92402405, -0.38101068), (-0.031788293, -0.92402416, -0.38101056), (-0.031788293, -0.92402416, -0.38101056), (0.03178756, -0.92402405, -0.38101068), (0.033600707, -0.9816938, -0.18747866), (-0.03359651, -0.9816942, -0.18747735), (0.0060025556, -0.19895136, -0.9799909), (0.017997965, -0.19859383, -0.9799166), (0.030725963, -0.38241693, -0.92347884), (0.01336348, -0.3862817, -0.922284), (0.01336348, -0.3862817, -0.922284), (0.030725963, -0.38241693, -0.92347884), (0.05618596, -0.7057853, -0.7061943), (0.024498392, -0.7089912, -0.7047916), (0.024498392, -0.7089912, -0.7047916), (0.05618596, -0.7057853, -0.7061943), (0.073122635, -0.92134213, -0.38181376), (0.03178756, -0.92402405, -0.38101068), (0.03178756, -0.92402405, -0.38101068), (0.073122635, -0.92134213, -0.38181376), (0.078007996, -0.9792775, -0.18689656), (0.033600707, -0.9816938, -0.18747866), (-0.018000506, -0.19859377, -0.97991663), (-0.0060026646, -0.19895151, -0.97999096), (-0.013256651, -0.3862798, -0.9222864), (-0.03072646, -0.38241607, -0.92347914), (-0.03072646, -0.38241607, -0.92347914), (-0.013256651, -0.3862798, -0.9222864), (-0.024549576, -0.708994, -0.704787), (-0.05618512, -0.70578593, -0.7061936), (-0.05618512, -0.70578593, -0.7061936), (-0.024549576, -0.708994, -0.704787), (-0.031788293, -0.92402416, -0.38101056), (-0.07312271, -0.9213421, -0.38181373), (-0.07312271, -0.9213421, -0.38181373), (-0.031788293, -0.92402416, -0.38101056), (-0.03359651, -0.9816942, -0.18747735), (-0.07800771, -0.9792778, -0.18689515), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.010542, 0.035822, -0.778103), (0.010533, 0.035822, -0.778103), (0.010542, 0.03583, -0.778103), (0.010533, 0.03583, -0.778103), (0.010542, 0.035822, -0.778103), (0.010533, 0.035822, -0.778103), (0.010542, 0.03583, -0.778103), (0.010533, 0.03583, -0.778103), (0.010542, 0.035822, -0.778103), (0.010533, 0.035822, -0.778103), (0.010542, 0.03583, -0.778103), (0.010533, 0.03583, -0.778103), (0.010542, 0.035822, -0.778103), (0.010533, 0.035822, -0.778103), (0.010542, 0.03583, -0.778103), (0.010533, 0.03583, -0.778103), (0.010542, 0.035822, -0.778103), (0.010533, 0.035822, -0.778103), (0.010542, 0.03583, -0.778103), (0.010533, 0.03583, -0.778103), (0.010542, 0.035822, -0.778103), (0.010533, 0.035822, -0.778103), (0.010542, 0.03583, -0.778103), (0.010533, 0.03583, -0.778103), (0.010542, 0.035822, -0.778103), (0.010533, 0.035822, -0.778103), (0.010542, 0.03583, -0.778103), (0.010533, 0.03583, -0.778103), (0.022663, 0.194876, -0.202111), (-0.469414, 0.194876, -0.202111), (0.022663, -0.225531, -0.202111), (-0.469414, -0.225531, -0.202111), (-0.176528, 0.194876, -0.202111), (-0.106197, 0.194876, -0.202111), (-0.340553, 0.194876, -0.202111), (-0.270223, 0.194876, -0.202111), (-0.176528, -0.245046, -0.202111), (-0.106473, -0.240895, -0.202111), (-0.340278, -0.240895, -0.202111), (-0.270223, -0.245046, -0.202111), (-0.106197, 0.194876, -0.398375), (0.022663, 0.194876, -0.398375), (-0.340553, 0.194876, -0.398375), (-0.469414, 0.194876, -0.398375), (-0.270223, 0.194876, -0.398375), (-0.176528, 0.194876, -0.398375), (0.014049, 0.186735, -0.202111), (-0.4608, 0.186735, -0.202111), (0.014049, -0.218351, -0.202111), (-0.4608, -0.218351, -0.202111), (-0.176528, 0.186735, -0.202111), (-0.106197, 0.186735, -0.202111), (-0.340553, 0.186735, -0.202111), (-0.270223, 0.186735, -0.202111), (-0.176797, -0.236906, -0.202111), (-0.107281, -0.232787, -0.202111), (-0.33947, -0.232787, -0.202111), (-0.269953, -0.236906, -0.202111), (0.014049, 0.186735, -0.390681), (-0.4608, 0.186735, -0.390681), (-0.176528, 0.186735, -0.390681), (-0.106197, 0.186735, -0.390681), (-0.340553, 0.186735, -0.390681), (-0.270223, 0.186735, -0.390681), (0.022663, 0.194876, -0.209359), (-0.106197, 0.194876, -0.209359), (0.022663, -0.225531, -0.209359), (-0.106473, -0.240895, -0.209359), (-0.469414, -0.225531, -0.209359), (-0.340278, -0.240895, -0.209359), (-0.469414, 0.194876, -0.209359), (-0.340553, 0.194876, -0.209359), (-0.270223, -0.245046, -0.209359), (-0.176528, -0.245046, -0.209359), (-0.176528, 0.194876, -0.209359), (-0.270223, 0.194876, -0.209359), (-0.269953, -0.236906, -0.209359), (-0.33947, -0.232787, -0.209359), (-0.4608, -0.218351, -0.209359), (-0.4608, 0.186735, -0.209359), (-0.340553, 0.186735, -0.209359), (-0.270223, 0.186735, -0.209359), (-0.176528, 0.186735, -0.209359), (-0.106197, 0.186735, -0.209359), (0.014049, 0.186735, -0.209359), (0.014049, -0.218351, -0.209359), (-0.107281, -0.232787, -0.209359), (-0.176797, -0.236906, -0.209359), (0.023843, 0.195991, -0.203594), (-0.470594, 0.195991, -0.203594), (0.023843, -0.226515, -0.203594), (-0.470594, -0.226515, -0.203594), (-0.176528, 0.195991, -0.203594), (-0.106197, 0.195991, -0.203594), (-0.340553, 0.195991, -0.203594), (-0.270223, 0.195991, -0.203594), (-0.176491, -0.246161, -0.203594), (-0.106362, -0.242006, -0.203594), (-0.340389, -0.242006, -0.203594), (-0.27026, -0.246161, -0.203594), (0.023843, 0.195991, -0.207876), (-0.106197, 0.195991, -0.207876), (0.023843, -0.226515, -0.207876), (-0.106362, -0.242006, -0.207876), (-0.470594, -0.226515, -0.207876), (-0.340389, -0.242006, -0.207876), (-0.470594, 0.195991, -0.207876), (-0.340553, 0.195991, -0.207876), (-0.27026, -0.246161, -0.207876), (-0.176491, -0.246161, -0.207876), (-0.176528, 0.195991, -0.207876), (-0.270223, 0.195991, -0.207876), (-0.106473, -0.240895, -0.367709), (-0.106453, -0.210229, -0.398375), (0.022663, -0.225531, -0.367709), (0.022663, -0.194865, -0.398375), (-0.340297, -0.210229, -0.398375), (-0.340278, -0.240895, -0.367709), (-0.469414, -0.194865, -0.398375), (-0.469414, -0.225531, -0.367709), (-0.176528, -0.21438, -0.398375), (-0.176528, -0.245046, -0.367709), (-0.270223, -0.245046, -0.367709), (-0.270223, -0.21438, -0.398375), (0.014049, -0.187685, -0.390681), (0.014049, -0.218351, -0.360014), (-0.4608, -0.218351, -0.360014), (-0.4608, -0.187685, -0.390681), (-0.176778, -0.206239, -0.390681), (-0.176797, -0.236906, -0.360014), (-0.107281, -0.232787, -0.360014), (-0.107202, -0.20212, -0.390681), (-0.339549, -0.20212, -0.390681), (-0.33947, -0.232787, -0.360014), (-0.269973, -0.206239, -0.390681), (-0.269953, -0.236906, -0.360014), (-0.34029, -0.221964, -0.396041), (-0.270223, -0.226115, -0.396041), (-0.340284, -0.231913, -0.389393), (-0.270223, -0.236064, -0.389393), (-0.34028, -0.238561, -0.379444), (-0.270223, -0.242712, -0.379444), (-0.176528, -0.226115, -0.396041), (-0.106461, -0.221964, -0.396041), (-0.176528, -0.236064, -0.389393), (-0.106467, -0.231913, -0.389393), (-0.176528, -0.242712, -0.379444), (-0.106471, -0.238561, -0.379444), (-0.469414, -0.2066, -0.396041), (-0.469414, -0.216549, -0.389393), (-0.469414, -0.223197, -0.379444), (0.022663, -0.2066, -0.396041), (0.022663, -0.216549, -0.389393), (0.022663, -0.223197, -0.379444), (0.014049, -0.199421, -0.388346), (-0.107232, -0.213856, -0.388346), (0.014049, -0.209369, -0.381699), (-0.107258, -0.223805, -0.381699), (0.014049, -0.216017, -0.37175), (-0.107275, -0.230452, -0.37175), (-0.339519, -0.213856, -0.388346), (-0.4608, -0.199421, -0.388346), (-0.339493, -0.223805, -0.381699), (-0.4608, -0.209369, -0.381699), (-0.339476, -0.230452, -0.37175), (-0.4608, -0.216017, -0.37175), (-0.176785, -0.217975, -0.388346), (-0.269965, -0.217975, -0.388346), (-0.176792, -0.227924, -0.381699), (-0.269959, -0.227924, -0.381699), (-0.176796, -0.234571, -0.37175), (-0.269955, -0.234571, -0.37175)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-172.2171, -111.271255), (-172.2171, -111.271286), (-172.21706, -111.271286), (-172.21706, -111.271255), (-137.53873, -114.56521), (-137.53873, -114.56532), (-137.53847, -114.56532), (-137.53847, -114.56521), (-142.85313, 0.833531), (-142.85313, 1.236954), (-142.87862, 1.209985), (-142.87862, 0.833531), (-142.85313, 1.236954), (-144.1693, 1.236954), (-144.14682, 1.209985), (-142.87862, 1.209985), (-144.1693, 1.236954), (-144.2174, 0.832669), (-144.19202, 0.830138), (-144.14682, 1.209985), (-144.2174, 0.832669), (-144.2304, 0.613348), (-144.20491, 0.612503), (-144.19202, 0.830138), (-144.2304, 0.613348), (-144.2304, 0.320017), (-144.20491, 0.32086), (-144.20491, 0.612503), (-144.2304, 0.320017), (-144.2174, 0.100695), (-144.19202, 0.103226), (-144.20491, 0.32086), (-144.2174, 0.100695), (-144.1693, -0.30359), (-144.14682, -0.276622), (-144.19202, 0.103226), (-144.1693, -0.30359), (-142.85313, -0.30359), (-142.87862, -0.276622), (-144.14682, -0.276622), (-142.85313, -0.30359), (-142.85313, 0.099833), (-142.87862, 0.099833), (-142.87862, -0.276622), (-142.85313, 0.099833), (-142.85313, 0.320017), (-142.87862, 0.320017), (-142.87862, 0.099833), (-142.85313, 0.320017), (-142.85313, 0.613348), (-142.87862, 0.613348), (-142.87862, 0.320017), (-142.85313, 0.613348), (-142.85313, 0.833531), (-142.87862, 0.833531), (-142.87862, 0.613348), (-143.10861, 0.096509), (-143.10861, 0.318688), (-143.12213, 0.318688), (-143.12213, 0.096509), (-143.09978, 0.318255), (-143.09978, 0.096243), (-143.08623, 0.096243), (-143.08623, 0.318255), (-143.09978, 0.837121), (-143.09978, 0.615109), (-143.08623, 0.615109), (-143.08623, 0.837121), (-143.10861, 0.614677), (-143.10861, 0.836855), (-143.12213, 0.836855), (-143.12213, 0.614677), (-143.10861, 0.318688), (-143.10861, 0.614677), (-143.12213, 0.614677), (-143.12213, 0.318688), (-143.09978, 0.615109), (-143.09978, 0.318255), (-143.08623, 0.318255), (-143.08623, 0.615109), (-143.10861, -0.314298), (-143.10861, 0.096509), (-143.12213, 0.096509), (-143.12213, -0.314298), (-143.03998, 1.081635), (-143.03998, -0.283517), (-143.02614, -0.283517), (-143.02614, 1.081635), (-143.09978, 0.096243), (-143.09978, -0.315958), (-143.08623, -0.315958), (-143.08623, 0.096243), (-143.09978, 1.249323), (-143.09978, 0.837121), (-143.08623, 0.837121), (-143.08623, 1.249323), (-143.01837, 1.081636), (-143.01837, -0.283518), (-143.00453, -0.283518), (-143.00453, 1.081636), (-143.10861, 0.836855), (-143.10861, 1.247662), (-143.12213, 1.247662), (-143.12213, 0.836855), (-143.06516, 0.09207), (-143.06516, 0.305358), (-143.08739, 0.305358), (-143.08739, 0.09207), (-143.06516, 0.09207), (-143.08739, 0.09207), (-143.08739, -0.280191), (-143.06516, -0.280191), (-143.00093, 1.002846), (-143.00093, -0.237479), (-142.97874, -0.237479), (-142.97874, 1.002846), (-143.06577, 0.089483), (-143.06577, -0.278696), (-143.04356, -0.278696), (-143.04356, 0.089483), (-143.06577, 0.304826), (-143.06577, 0.089483), (-143.04356, 0.089483), (-143.04356, 0.304826), (-143.06577, 0.591709), (-143.06577, 0.304826), (-143.04356, 0.304826), (-143.04356, 0.591709), (-143.06577, 0.807051), (-143.06577, 0.591709), (-143.04356, 0.591709), (-143.04356, 0.807051), (-143.06577, 1.175229), (-143.06577, 0.807051), (-143.04356, 0.807051), (-143.04356, 1.175229), (-142.97932, 1.002849), (-142.97932, -0.237482), (-142.95714, -0.237482), (-142.95714, 1.002849), (-143.06516, 0.804464), (-143.06516, 1.176724), (-143.08739, 1.176724), (-143.08739, 0.804464), (-143.06516, 0.591176), (-143.06516, 0.804464), (-143.08739, 0.804464), (-143.08739, 0.591176), (-143.06516, 0.305358), (-143.06516, 0.591176), (-143.08739, 0.591176), (-143.08739, 0.305358), (-142.85313, 1.236954), (-142.85313, 0.833531), (-142.84964, 0.833531), (-142.84964, 1.240649), (-142.85313, 0.833531), (-142.85313, 0.613348), (-142.84964, 0.613348), (-142.84964, 0.833531), (-142.85313, 0.613348), (-142.85313, 0.320017), (-142.84964, 0.320017), (-142.84964, 0.613348), (-142.85313, 0.320017), (-142.85313, 0.099833), (-142.84964, 0.099833), (-142.84964, 0.320017), (-142.85313, 0.099833), (-142.85313, -0.30359), (-142.84964, -0.307285), (-142.84964, 0.099833), (-143.02135, -0.279914), (-143.02135, 1.078458), (-143.02614, 1.081635), (-143.02614, -0.283517), (-144.1693, -0.30359), (-144.2174, 0.100695), (-144.22087, 0.100348), (-144.17238, -0.307285), (-144.2174, 0.100695), (-144.2304, 0.320017), (-144.23389, 0.3199), (-144.22087, 0.100348), (-144.2304, 0.320017), (-144.2304, 0.613348), (-144.23389, 0.613464), (-144.23389, 0.3199), (-144.2304, 0.613348), (-144.2174, 0.832669), (-144.22087, 0.833015), (-144.23389, 0.613464), (-144.2174, 0.832669), (-144.1693, 1.236954), (-144.17238, 1.240649), (-144.22087, 0.833015), (-142.99974, -0.28034), (-142.99974, 1.078033), (-143.00453, 1.081636), (-143.00453, -0.283518), (-143.10393, 0.836855), (-143.10393, 1.243934), (-143.10861, 1.247662), (-143.10861, 0.836855), (-143.02316, 1.078033), (-143.02316, -0.28034), (-143.01837, -0.283518), (-143.01837, 1.081636), (-143.10448, 1.245587), (-143.10448, 0.836771), (-143.09978, 0.837121), (-143.09978, 1.249323), (-143.10448, 0.836771), (-143.10448, 0.614992), (-143.09978, 0.615109), (-143.09978, 0.837121), (-143.10448, 0.614992), (-143.10448, 0.318373), (-143.09978, 0.318255), (-143.09978, 0.615109), (-143.10448, 0.318373), (-143.10448, 0.096594), (-143.09978, 0.096243), (-143.09978, 0.318255), (-143.10448, 0.096594), (-143.10448, -0.312223), (-143.09978, -0.315958), (-143.09978, 0.096243), (-143.04477, 1.078458), (-143.04477, -0.279914), (-143.03998, -0.283517), (-143.03998, 1.081635), (-143.10393, -0.31057), (-143.10393, 0.096509), (-143.10861, 0.096509), (-143.10861, -0.314298), (-143.10393, 0.096509), (-143.10393, 0.318688), (-143.10861, 0.318688), (-143.10861, 0.096509), (-143.10393, 0.318688), (-143.10393, 0.614677), (-143.10861, 0.614677), (-143.10861, 0.318688), (-143.10393, 0.614677), (-143.10393, 0.836855), (-143.10861, 0.836855), (-143.10861, 0.614677), (-118.53901, -109.61047), (-118.53901, -113.51364), (-114.839676, -113.51364), (-114.839676, -109.61047), (-88.714714, -110.74826), (-88.714714, -113.93459), (-85.69519, -113.93459), (-85.69519, -110.74826), (-69.1676, -112.11487), (-69.1676, -112.114876), (-69.1676, -112.114876), (-69.1676, -112.11487), (-71.08644, -0.634686), (-71.08644, -0.348666), (-71.549, -0.348666), (-71.549, -0.634686), (-71.08644, -0.135228), (-71.549, -0.135228), (-71.549, -0.348666), (-71.08644, -0.348666), (-71.08644, -0.135228), (-71.08644, 0.237296), (-71.549, 0.237296), (-71.549, -0.135228), (-72.05955, 0.4793), (-72.095474, 0.472152), (-72.12594, 0.451798), (-72.14629, 0.421336), (-72.15344, 0.385403), (-72.15344, -0.761029), (-71.59826, -0.761029), (-71.59826, 0.4793), (-72.19401, 0.790559), (-72.19401, -0.355872), (-72.18686, -0.391805), (-72.166504, -0.422267), (-72.13604, -0.442621), (-72.10011, -0.449769), (-71.638824, -0.449769), (-71.638824, 0.790559), (-71.08644, -0.848125), (-71.549, -0.848125), (-71.549, -1.220648), (-71.08644, -1.220648), (-71.08644, -0.848125), (-71.08644, -0.634686), (-71.549, -0.634686), (-71.549, -0.848125), (-72.14576, -0.628976), (-72.14576, -0.84407), (-71.65957, -0.84407), (-71.65957, -0.628976), (-71.65957, -0.341299), (-71.65957, -0.126204), (-72.14576, -0.126204), (-72.14576, -0.341299), (-72.14576, -0.341299), (-72.14576, -0.628976), (-71.65957, -0.628976), (-71.65957, -0.341299), (-72.06757, -0.126353), (-71.48883, -0.126353), (-71.48883, 0.268203), (-72.06757, 0.268203), (-71.77566, 0.508568), (-71.81159, 0.501421), (-71.84206, 0.481066), (-71.86241, 0.450604), (-71.86955, 0.414671), (-71.86955, -0.778669), (-71.29081, -0.778669), (-71.29081, 0.508568), (-72.14576, -0.84407), (-72.14576, -1.240564), (-71.65957, -1.240564), (-71.65957, -0.84407), (-72.14576, 0.270288), (-72.14576, -0.126204), (-71.65957, -0.126204), (-71.65957, 0.270288), (-72.018845, 0.508569), (-72.018845, -0.684772), (-72.0117, -0.720705), (-71.99135, -0.751167), (-71.960884, -0.771522), (-71.92495, -0.778669), (-71.4401, -0.778669), (-71.4401, 0.508569), (-72.06757, -1.238479), (-71.48883, -1.238479), (-71.48883, -0.843923), (-72.06757, -0.843923), (-71.76263, -0.271444), (-71.7499, -0.486426), (-70.54839, -0.489529), (-70.54839, -0.272217), (-72.06757, -0.628579), (-71.48883, -0.628579), (-71.48883, -0.341696), (-72.06757, -0.341696), (-72.06757, -0.341696), (-71.48883, -0.341696), (-71.48883, -0.126353), (-72.06757, -0.126353), (-70.54839, 0.234598), (-71.7499, 0.231493), (-71.76263, 0.016514), (-70.54839, 0.017287), (-70.54839, 0.017287), (-71.76263, 0.016514), (-71.76263, -0.271444), (-70.54839, -0.272217), (-72.06757, -0.843923), (-71.48883, -0.843923), (-71.48883, -0.628579), (-72.06757, -0.628579), (-71.7053, -0.861073), (-70.54839, -0.861073), (-70.54839, -0.489529), (-71.7499, -0.486426), (-70.54839, 0.234598), (-70.54839, 0.606141), (-71.7053, 0.606141), (-71.7499, 0.231493), (-71.00593, 0.274834), (-72.20977, 0.274834), (-72.20977, -0.123195), (-70.95847, -0.123985), (-71.15622, -0.473175), (-71.7114, -0.473175), (-71.7114, -0.841355), (-71.15622, -0.841355), (-71.15622, -0.25783), (-71.7114, -0.25783), (-71.7114, -0.473175), (-71.15622, -0.473175), (-71.15622, 0.029053), (-71.7114, 0.029053), (-71.7114, -0.25783), (-71.15622, -0.25783), (-71.15622, 0.244397), (-71.7114, 0.244397), (-71.7114, 0.029053), (-71.15622, 0.029053), (-71.15622, 0.612576), (-71.7114, 0.612576), (-71.7114, 0.244397), (-71.15622, 0.244397), (-72.20977, -1.24511), (-71.00593, -1.24511), (-70.95847, -0.846291), (-72.20977, -0.847081), (-72.20977, -0.340433), (-72.20977, -0.629842), (-70.94565, -0.629842), (-70.94565, -0.340433), (-70.94565, -0.340433), (-70.95847, -0.123985), (-72.20977, -0.123195), (-72.20977, -0.340433), (-72.20977, -0.629842), (-72.20977, -0.847081), (-70.95847, -0.846291), (-70.94565, -0.629842), (-70.94565, -0.629842), (-70.95847, -0.846291), (-70.922226, -0.846268), (-70.9094, -0.629842), (-70.9094, -0.629842), (-70.922226, -0.846268), (-70.891495, -0.846248), (-70.87867, -0.629842), (-70.87867, -0.629842), (-70.891495, -0.846248), (-70.87096, -0.846236), (-70.85814, -0.629842), (-72.181786, -0.628976), (-72.181786, -0.844076), (-72.14576, -0.84407), (-72.14576, -0.628976), (-70.95847, -0.123985), (-70.94565, -0.340433), (-70.9094, -0.340433), (-70.922226, -0.124008), (-70.922226, -0.124008), (-70.9094, -0.340433), (-70.87867, -0.340433), (-70.891495, -0.124027), (-70.891495, -0.124027), (-70.87867, -0.340433), (-70.85814, -0.340433), (-70.87096, -0.12404), (-72.181786, -0.1262), (-72.181786, -0.341299), (-72.14576, -0.341299), (-72.14576, -0.126204), (-70.94565, -0.340433), (-70.94565, -0.629842), (-70.9094, -0.629842), (-70.9094, -0.340433), (-70.9094, -0.340433), (-70.9094, -0.629842), (-70.87867, -0.629842), (-70.87867, -0.340433), (-70.87867, -0.340433), (-70.87867, -0.629842), (-70.85814, -0.629842), (-70.85814, -0.340433), (-72.181786, -0.341299), (-72.181786, -0.628976), (-72.14576, -0.628976), (-72.14576, -0.341299), (-70.95847, -0.846291), (-71.00593, -1.24511), (-70.96968, -1.24511), (-70.922226, -0.846268), (-70.922226, -0.846268), (-70.96968, -1.24511), (-70.93895, -1.24511), (-70.891495, -0.846248), (-70.891495, -0.846248), (-70.93895, -1.24511), (-70.91842, -1.24511), (-70.87096, -0.846236), (-72.181786, -0.844076), (-72.181786, -1.240564), (-72.14576, -1.240564), (-72.14576, -0.84407), (-71.00593, 0.274834), (-70.95847, -0.123985), (-70.922226, -0.124008), (-70.96968, 0.274834), (-70.96968, 0.274834), (-70.922226, -0.124008), (-70.891495, -0.124027), (-70.93895, 0.274834), (-70.93895, 0.274834), (-70.891495, -0.124027), (-70.87096, -0.12404), (-70.91842, 0.274834), (-72.181786, 0.270288), (-72.181786, -0.1262), (-72.14576, -0.126204), (-72.14576, 0.270288), (-71.7499, 0.231493), (-71.7053, 0.606141), (-71.741554, 0.606141), (-71.786156, 0.231401), (-71.786156, 0.231401), (-71.741554, 0.606141), (-71.7723, 0.606141), (-71.8169, 0.23132), (-71.8169, 0.23132), (-71.7723, 0.606141), (-71.79284, 0.606141), (-71.83744, 0.231268), (-71.05041, -0.135209), (-71.05041, 0.237296), (-71.08644, 0.237296), (-71.08644, -0.135228), (-71.7053, -0.861073), (-71.7499, -0.486426), (-71.786156, -0.486332), (-71.741554, -0.861073), (-71.741554, -0.861073), (-71.786156, -0.486332), (-71.8169, -0.486252), (-71.7723, -0.861073), (-71.7723, -0.861073), (-71.8169, -0.486252), (-71.83744, -0.4862), (-71.79284, -0.861073), (-71.05041, -1.220648), (-71.05041, -0.848143), (-71.08644, -0.848125), (-71.08644, -1.220648), (-71.76263, -0.271444), (-71.76263, 0.016514), (-71.79889, 0.016491), (-71.79889, -0.271421), (-71.79889, -0.271421), (-71.79889, 0.016491), (-71.82963, 0.016471), (-71.82963, -0.271402), (-71.82963, -0.271402), (-71.82963, 0.016471), (-71.85017, 0.016458), (-71.85017, -0.271389), (-71.05041, -0.63469), (-71.05041, -0.348662), (-71.08644, -0.348666), (-71.08644, -0.634686), (-71.76263, 0.016514), (-71.7499, 0.231493), (-71.786156, 0.231401), (-71.79889, 0.016491), (-71.79889, 0.016491), (-71.786156, 0.231401), (-71.8169, 0.23132), (-71.82963, 0.016471), (-71.82963, 0.016471), (-71.8169, 0.23132), (-71.83744, 0.231268), (-71.85017, 0.016458), (-71.05041, -0.348662), (-71.05041, -0.135209), (-71.08644, -0.135228), (-71.08644, -0.348666), (-71.7499, -0.486426), (-71.76263, -0.271444), (-71.79889, -0.271421), (-71.786156, -0.486332), (-71.786156, -0.486332), (-71.79889, -0.271421), (-71.82963, -0.271402), (-71.8169, -0.486252), (-71.8169, -0.486252), (-71.82963, -0.271402), (-71.85017, -0.271389), (-71.83744, -0.4862), (-71.05041, -0.848143), (-71.05041, -0.63469), (-71.08644, -0.634686), (-71.08644, -0.848125), (5.646933, -121.22408), (7.358486, -121.22408), (7.358486, -119.51253), (5.646933, -119.51253), (-5.253075, -117.71076), (-3.54152, -117.71076), (-3.54152, -115.99921), (-5.253075, -115.99921)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_FridgeDrawer1D2_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0]
                rel material:binding = </root/_materials/M_FridgeDrawer1D2_0>
            }

            def GeomSubset "M_FridgeDrawer1D2_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
                rel material:binding = </root/_materials/M_FridgeDrawer1D2_1>
            }

            def GeomSubset "M_FridgeDrawer1D2_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [62]
                rel material:binding = </root/_materials/M_FridgeDrawer1D2_2>
            }

            def GeomSubset "M_FridgeDrawer1D2_3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [63]
                rel material:binding = </root/_materials/M_FridgeDrawer1D2_3>
            }

            def GeomSubset "M_FridgeDrawer1D2_4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138]
                rel material:binding = </root/_materials/M_FridgeDrawer1D2_4>
            }

            def GeomSubset "M_FridgeDrawer1D2_5" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [139]
                rel material:binding = </root/_materials/M_FridgeDrawer1D2_5>
            }

            def GeomSubset "M_FridgeDrawer1D2_6" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [140]
                rel material:binding = </root/_materials/M_FridgeDrawer1D2_6>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer1D2_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1D2_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1D2_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1D2_0/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D2_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Copper_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D2_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer1D2_1"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1D2_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1D2_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1D2_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D2_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D2_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer1D2_2"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1D2_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1D2_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1D2_2/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D2_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D2_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer1D2_3"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1D2_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.5735294, 0.5735294, 0.5735294)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1D2_3/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D2_3/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer1D2_4"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1D2_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.39705884, 0.39705884, 0.39705884)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }

        def Material "M_FridgeDrawer1D2_5"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1D2_5/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1D2_5/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1D2_5/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Decal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D2_5/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Decal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D2_5/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer1D2_6"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1D2_6/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1D2_6/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1D2_6/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Readout_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D2_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1D2_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

