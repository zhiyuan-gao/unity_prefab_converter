#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.0"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "FridgeDrawer2C6"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "FridgeDrawer2C6" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(0.000154, -0.185926, -0.841603), (0.447011, 0.119722, 0.299661)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 8, 4, 3, 8, 4, 3, 4, 4, 4, 4, 3, 4, 8, 3, 4, 8, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 52, 53, 70, 63, 58, 37, 41, 57, 63, 34, 35, 62, 62, 35, 36, 64, 57, 41, 40, 69, 71, 38, 39, 70, 69, 40, 38, 71, 64, 36, 37, 58, 70, 39, 34, 63, 28, 34, 39, 29, 58, 77, 76, 64, 71, 79, 78, 69, 71, 70, 53, 80, 79, 57, 69, 78, 81, 62, 64, 76, 82, 62, 82, 83, 52, 63, 77, 58, 57, 81, 53, 52, 83, 80, 85, 84, 28, 29, 95, 94, 93, 92, 35, 34, 28, 84, 88, 89, 36, 35, 88, 40, 41, 86, 90, 38, 91, 85, 29, 39, 91, 38, 40, 90, 37, 36, 89, 87, 41, 37, 92, 93, 37, 87, 95, 92, 87, 86, 94, 95, 86, 41, 93, 94, 4, 5, 7, 6, 8, 9, 11, 10, 12, 13, 15, 14, 16, 17, 19, 18, 67, 68, 72, 73, 66, 67, 73, 74, 65, 66, 74, 75, 56, 65, 75, 59, 61, 72, 68, 60, 54, 55, 61, 60, 33, 32, 31, 30, 31, 32, 42, 45, 43, 44, 46, 47, 47, 46, 48, 49, 49, 48, 50, 51, 51, 50, 45, 42, 76, 77, 59, 75, 74, 73, 72, 61, 78, 79, 54, 60, 79, 80, 54, 78, 60, 68, 67, 66, 65, 56, 81, 76, 61, 55, 82, 82, 55, 83, 56, 59, 77, 81, 80, 83, 55, 54, 85, 33, 30, 84, 87, 44, 43, 86, 88, 84, 30, 89, 88, 30, 31, 90, 86, 43, 47, 49, 51, 42, 32, 85, 91, 33, 90, 32, 33, 91, 89, 31, 45, 50, 48, 46, 44, 87, 20, 21, 23, 22, 24, 25, 27, 26]
            rel material:binding = </root/_materials/M_FridgeDrawer2C6_0>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0.0000019342406, -0.8654028, 0.5010768), (-0.0000031515956, -0.8654084, 0.50106716), (-0.0000023452599, -0.95988506, 0.28039357), (-0.0000023452599, -0.95988506, 0.28039357), (-0.026204161, -0.09858467, 0.9947836), (-0.008712467, -0.02681855, 0.9996024), (0.008714553, -0.026820261, 0.9996023), (0.026204593, -0.09858179, 0.9947839), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.062095, 0.0026990194, 0.9980666), (-0.062093772, 0.0026984727, 0.99806666), (0.026204593, -0.09858179, 0.9947839), (0.008714553, -0.026820261, 0.9996023), (0.06209761, 0.0026986662, 0.9980664), (0.062001355, 0.0026998213, 0.99807245), (0.0000016243164, 0, 1), (0.0000016517341, 0, 1), (0.0000017663001, 0, 1), (0.0000016317535, 0, 1), (0.062001355, 0.0026998213, 0.99807245), (0.06209761, 0.0026986662, 0.9980664), (0.0000016517341, 0, 1), (0.0000016243164, 0, 1), (-0.062093772, 0.0026984727, 0.99806666), (-0.062095, 0.0026990194, 0.9980666), (-0.008712467, -0.02681855, 0.9996024), (-0.026204161, -0.09858467, 0.9947836), (0.0000016317535, 0, 1), (0.0000017663001, 0, 1), (0, 0, 1), (0, 0, 1), (-0.000037784506, 0.9155205, -0.40227145), (0.00000238205, 1, 0), (0.00000238205, 1, 0), (0.000002885976, 0.9155198, -0.40227288), (0.99945176, -0.013438923, -0.03025874), (0.99947757, -0.014115408, -0.029072618), (0.99948454, -0.013770257, -0.028999263), (0.9994566, -0.013210994, -0.03019966), (-0.9925065, 0.08199369, -0.09059719), (-0.99515194, 0.08329249, -0.05229588), (-0.99948466, -0.013765611, -0.02899919), (-0.99945676, -0.013201971, -0.030199064), (-0.9925065, 0.08199369, -0.09059719), (-0.9915422, 0.088126525, -0.09527738), (-0.9915422, 0.088126525, -0.09527738), (-0.9936268, 0.0905033, -0.06719375), (-0.99515194, 0.08329249, -0.05229588), (-0.9994526, -0.013432212, -0.030234076), (-0.99945676, -0.013201971, -0.030199064), (-0.99948466, -0.013765611, -0.02899919), (-0.99946773, -0.013815908, -0.029554108), (0.992506, 0.08199619, -0.09060088), (0.9994566, -0.013210994, -0.03019966), (0.99948454, -0.013770257, -0.028999263), (0.9951522, 0.083292134, -0.052295584), (0.992506, 0.08199619, -0.09060088), (0.9951522, 0.083292134, -0.052295584), (0.99362564, 0.09050154, -0.06721177), (0.9915399, 0.08812453, -0.09530391), (0.9915399, 0.08812453, -0.09530391), (0.0000029982054, 0.9823184, 0.18721768), (0.0000036200368, 0.98231924, 0.18721393), (0.0000036200368, 0.98231924, 0.18721393), (0.0000029982155, 0.9823184, 0.18721768), (-0.0000031515956, -0.8654084, 0.50106716), (0.0000019342406, -0.8654028, 0.5010768), (-0.00000206929, -0.84459925, 0.535399), (-0.00000206929, -0.8445992, 0.535399), (0.0000029935159, 0.8370199, -0.5471724), (0.0000029935156, 0.8370199, -0.5471724), (-0.000037784506, 0.9155205, -0.40227145), (0.000002885976, 0.9155198, -0.40227288), (-0.000002343189, -0.98569256, -0.16855301), (-0.000002343189, -0.98569256, -0.16855301), (-0.000002343189, -0.98569256, -0.16855301), (-0.000002343189, -0.98569256, -0.16855301), (-1, 1.226636e-8, 0), (-1, 2.453272e-8, 0), (-1, 2.453272e-8, 0), (-1, 1.6787595e-8, 0), (-1, -7.762672e-8, 0), (-1, 0.0000021941876, 2.9916825e-7), (-1, 0.000002225362, 1.9031067e-7), (-1, 1.226636e-8, 0), (-1, -7.762672e-8, 0), (1, -0.0000022837592, -1.8717685e-7), (1, -0.0000020374828, -1.6699207e-7), (1, -0.0000031538045, -3.9091378e-7), (1, -0.0000048019874, -2.9418308e-7), (1, 1.9626334e-7, 0), (1, -0.0000024239528, 0), (1, 2.6860505e-7, 0), (1, 3.925267e-7, 0), (1, 3.925267e-7, 0), (1, -0.0000024239528, 0), (1, 1.9626334e-7, 0), (1, -0.0000022837592, -1.8717685e-7), (1, -0.0000048019874, -2.9418308e-7), (-1, 0.0000019854533, 1.6979392e-7), (-1, 0.000002225362, 1.9031067e-7), (-1, 0.0000021941876, 2.9916825e-7), (-1, 0.0000031426341, 3.9752808e-7), (0.008714553, -0.026820261, 0.9996023), (-0.008712467, -0.02681855, 0.9996024), (1.9427052e-8, 0, 1), (1.9427052e-8, 0, 1), (-1, 0.0000019854533, 1.6979392e-7), (-1, 0.0000031426341, 3.9752808e-7), (-1, 0, 0), (-1, 0, 0), (7.790111e-9, 0, -1), (7.790111e-9, 0, -1), (7.790111e-9, 0, -1), (7.790111e-9, 0, -1), (1, -0.0000031538045, -3.9091378e-7), (1, -0.0000020374828, -1.6699207e-7), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-7.208437e-7, 0.35193324, 0.9360251), (-6.055925e-7, 0.013933629, 0.99990296), (0.0008079759, 0.013931967, 0.99990267), (0.0000010016937, 0.3519198, 0.93603015), (0.0000017179673, 0.707156, 0.70705754), (-7.208437e-7, 0.35193324, 0.9360251), (0.0000010016937, 0.3519198, 0.93603015), (0.0000017179668, 0.7071557, 0.7070579), (0.000002244974, 0.9416832, 0.33650088), (0.0000017179673, 0.707156, 0.70705754), (0.0000017179668, 0.7071557, 0.7070579), (-7.0175156e-7, 0.94168735, 0.3364892), (3.8700819e-7, 0.9826798, 0.18531126), (0.000002244974, 0.9416832, 0.33650088), (-7.0175156e-7, 0.94168735, 0.3364892), (4.4796616e-7, 0.98268867, 0.18526463), (0.0000014472753, 0.0048648114, 0.99998814), (0.0008079759, 0.013931967, 0.99990267), (-6.055925e-7, 0.013933629, 0.99990296), (-5.428711e-7, 0.0048647225, 0.99998814), (-0.0000025504269, -0.8389362, 0.5442297), (-0.0000015245198, -0.83893657, 0.54422927), (0.0000014472753, 0.0048648114, 0.99998814), (-5.428711e-7, 0.0048647225, 0.99998814), (0.00010886441, 0.8238991, -0.5667365), (-3.1950538e-7, 0.012240544, -0.99992514), (7.818495e-7, 0.012236819, -0.9999252), (0.0000025001877, 0.8238969, -0.5667398), (7.818495e-7, 0.012236819, -0.9999252), (-3.1950538e-7, 0.012240544, -0.99992514), (0.00003120979, -0.007034883, -0.99997526), (2.3548522e-7, -0.0070349053, -0.9999753), (-0.0000025634338, -0.9852528, -0.17110477), (0.0000031037453, -0.9852528, -0.17110483), (-0.000002330246, -0.9238581, -0.38273534), (-0.0000023302462, -0.92385817, -0.38273507), (-0.0000023302462, -0.92385817, -0.38273507), (-0.000002330246, -0.9238581, -0.38273534), (-0.0000017133, -0.70710707, -0.7071066), (-0.0000017133008, -0.7071073, -0.7071063), (-0.0000017133008, -0.7071073, -0.7071063), (-0.0000017133, -0.70710707, -0.7071066), (-9.3340867e-7, -0.38274196, -0.92385525), (-9.3341e-7, -0.3827425, -0.923855), (-9.3341e-7, -0.3827425, -0.923855), (-9.3340867e-7, -0.38274196, -0.92385525), (2.3548522e-7, -0.0070349053, -0.9999753), (0.00003120979, -0.007034883, -0.99997526), (0.99948454, -0.013770257, -0.028999263), (0.99947757, -0.014115408, -0.029072618), (0.99948597, -0.014312739, -0.028690292), (0.99948597, -0.014312739, -0.028690292), (0.99948597, -0.014312739, -0.028690292), (0.99948597, -0.014312739, -0.028690292), (0.99948597, -0.014312739, -0.028690292), (0.9994888, -0.014091019, -0.028699702), (-0.99948466, -0.013765611, -0.02899919), (-0.99515194, 0.08329249, -0.05229588), (-0.9974411, 0.06437448, -0.031099495), (-0.9994888, -0.014087635, -0.028699137), (-0.99515194, 0.08329249, -0.05229588), (-0.9936268, 0.0905033, -0.06719375), (-0.9974411, 0.06437448, -0.031099495), (-0.99948466, -0.013765611, -0.02899919), (-0.9994888, -0.014087635, -0.028699137), (-0.999486, -0.01430381, -0.028689416), (-0.999486, -0.01430381, -0.028689416), (-0.999486, -0.01430381, -0.028689416), (-0.999486, -0.01430381, -0.028689416), (-0.999486, -0.01430381, -0.028689416), (-0.99946773, -0.013815908, -0.029554108), (0.99948454, -0.013770257, -0.028999263), (0.9994888, -0.014091019, -0.028699702), (0.9974409, 0.064378396, -0.031099351), (0.9951522, 0.083292134, -0.052295584), (0.9951522, 0.083292134, -0.052295584), (0.9974409, 0.064378396, -0.031099351), (0.99362564, 0.09050154, -0.06721177), (3.8700819e-7, 0.9826798, 0.18531126), (4.4796616e-7, 0.98268867, 0.18526463), (0.0000029982054, 0.9823184, 0.18721768), (0.0000029982155, 0.9823184, 0.18721768), (-0.00000206929, -0.8445992, 0.535399), (-0.00000206929, -0.84459925, 0.535399), (-0.0000015245198, -0.83893657, 0.54422927), (-0.0000025504269, -0.8389362, 0.5442297), (0.0000029935159, 0.8370199, -0.5471724), (0.00010886441, 0.8238991, -0.5667365), (0.0000025001877, 0.8238969, -0.5667398), (0.0000029935156, 0.8370199, -0.5471724), (-0.000002553173, -0.98569125, -0.16856088), (0.0000031037453, -0.9852528, -0.17110483), (-0.0000025634338, -0.9852528, -0.17110477), (-0.000002553173, -0.98569125, -0.16856088), (-1, -7.762672e-8, 0), (-1, 1.6787595e-8, 0), (-1, -2.6172322e-7, 0), (-1, 0.0000021941876, 2.9916825e-7), (-1, -7.762672e-8, 0), (-1, -2.6172322e-7, 0), (-1, 0.0000026314826, 4.845444e-7), (1, -0.0000048019874, -2.9418308e-7), (1, -0.0000031538045, -3.9091378e-7), (1, -0.0000045520947, -8.0237857e-7), (1, -0.0000045520947, -8.0237857e-7), (1, -0.0000045520947, -8.0237857e-7), (1, -0.0000045520947, -8.0237857e-7), (1, -0.0000045520947, -8.0237857e-7), (1, -0.0000068012164, -4.7640881e-7), (1, 2.6860505e-7, 0), (1, -0.0000024239528, 0), (1, -0.000007880662, 0), (1, -0.0000048019874, -2.9418308e-7), (1, -0.0000068012164, -4.7640881e-7), (1, -0.000007880662, 0), (1, -0.0000024239528, 0), (-1, 0.0000021941876, 2.9916825e-7), (-1, 0.0000026314826, 4.845444e-7), (-1, 0.0000046610667, 8.160516e-7), (-1, 0.0000046610667, 8.160516e-7), (-1, 0.0000046610667, 8.160516e-7), (-1, 0.0000046610667, 8.160516e-7), (-1, 0.0000046610667, 8.160516e-7), (-1, 0.0000031426341, 3.9752808e-7), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.000154, 0.015229, -0.841603), (0.000163, 0.015229, -0.841603), (0.000154, 0.015237, -0.841603), (0.000163, 0.015237, -0.841603), (0.000154, 0.015229, -0.841603), (0.000163, 0.015229, -0.841603), (0.000154, 0.015237, -0.841603), (0.000163, 0.015237, -0.841603), (0.000154, 0.015229, -0.841603), (0.000163, 0.015229, -0.841603), (0.000154, 0.015237, -0.841603), (0.000163, 0.015237, -0.841603), (0.000154, 0.015229, -0.841603), (0.000163, 0.015229, -0.841603), (0.000154, 0.015237, -0.841603), (0.000163, 0.015237, -0.841603), (0.000154, 0.015229, -0.841603), (0.000163, 0.015229, -0.841603), (0.000154, 0.015237, -0.841603), (0.000163, 0.015237, -0.841603), (0.000154, 0.015229, -0.841603), (0.000163, 0.015229, -0.841603), (0.000154, 0.015237, -0.841603), (0.000163, 0.015237, -0.841603), (0.000154, 0.015229, -0.841603), (0.000163, 0.015229, -0.841603), (0.000154, 0.015237, -0.841603), (0.000163, 0.015237, -0.841603), (0.027887, 0.119722, 0.292065), (0.447011, 0.119721, 0.292065), (0.027887, 0.057353, 0.196658), (0.027887, 0.052915, 0.194256), (0.447011, 0.052913, 0.194256), (0.447011, 0.057352, 0.196658), (0.027887, 0.119722, 0.298609), (0.027887, 0.057353, 0.298609), (0.027887, 0.052915, 0.298609), (0.027886, -0.173477, 0.298609), (0.447011, 0.057352, 0.298609), (0.447011, 0.119721, 0.298609), (0.447011, 0.052913, 0.298609), (0.44701, -0.173479, 0.298609), (0.44701, -0.140436, 0.194256), (0.44701, -0.158768, 0.212588), (0.027886, -0.158767, 0.212589), (0.027886, -0.140435, 0.194256), (0.027886, -0.157371, 0.205573), (0.44701, -0.157372, 0.205573), (0.027886, -0.153397, 0.199626), (0.44701, -0.153398, 0.199626), (0.027886, -0.14745, 0.195652), (0.44701, -0.147451, 0.195652), (0.032441, 0.112222, 0.294299), (0.442457, 0.112221, 0.294299), (0.439942, 0.053192, 0.201179), (0.034956, 0.053193, 0.201179), (0.442607, -0.151005, 0.214024), (0.440049, -0.167327, 0.299661), (0.034848, -0.167325, 0.299661), (0.032289, -0.151004, 0.214024), (0.439942, 0.051406, 0.200212), (0.034956, 0.051407, 0.200212), (0.037732, 0.057353, 0.298609), (0.034849, 0.113481, 0.298609), (0.037732, 0.052915, 0.298609), (0.442539, -0.150107, 0.208583), (0.442539, -0.147838, 0.205186), (0.442539, -0.144442, 0.202917), (0.44259, -0.139663, 0.202106), (0.437166, 0.052913, 0.298609), (0.44005, 0.11348, 0.298609), (0.437166, 0.057352, 0.298609), (0.032306, -0.139661, 0.202106), (0.032358, -0.144441, 0.202917), (0.032358, -0.147837, 0.205186), (0.032358, -0.150106, 0.208583), (0.037169, 0.052609, 0.278644), (0.03422, -0.16332, 0.278644), (0.437729, 0.052607, 0.278644), (0.437735, 0.056499, 0.278644), (0.442034, 0.102297, 0.278644), (0.440676, -0.163321, 0.278644), (0.037163, 0.0565, 0.278644), (0.032864, 0.102298, 0.278644), (0.027887, 0.110949, 0.278644), (0.447011, 0.110947, 0.278644), (0.44701, -0.170064, 0.278644), (0.027886, -0.170063, 0.278644), (0.027887, 0.057353, 0.278644), (0.027887, 0.052915, 0.278644), (0.447011, 0.052913, 0.278644), (0.447011, 0.057352, 0.278644), (0.027886, -0.185925, 0.298609), (0.44701, -0.185926, 0.298609), (0.44701, -0.182512, 0.278644), (0.027886, -0.182511, 0.278644)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-170.84894, -110.532585), (-170.84894, -110.53267), (-170.84885, -110.53267), (-170.84885, -110.532585), (-170.27785, 0.749148), (-170.27785, -0.673762), (-170.26288, -0.665406), (-170.26288, 0.740792), (-171.14839, 0.701471), (-171.16829, 0.723996), (-171.16829, -0.6321), (-171.14839, -0.609576), (-170.23982, 0.701471), (-170.2196, 0.723996), (-170.4214, 0.723996), (-170.4214, 0.69214), (-170.4214, 0.69214), (-170.4214, 0.723996), (-170.43579, 0.723996), (-170.43579, 0.69214), (-171.14839, -0.609576), (-171.16829, -0.6321), (-170.43579, -0.6321), (-170.43579, -0.600245), (-170.4214, -0.600245), (-170.4214, -0.6321), (-170.2196, -0.6321), (-170.23982, -0.609576), (-170.43579, -0.600245), (-170.43579, -0.6321), (-170.4214, -0.6321), (-170.4214, -0.600245), (-170.43579, 0.69214), (-170.43579, 0.723996), (-171.16829, 0.723996), (-171.14839, 0.701471), (-170.23982, -0.609576), (-170.2196, -0.6321), (-170.2196, 0.723996), (-170.23982, 0.701471), (-170.42448, 0.76609), (-170.44696, 0.76609), (-170.44696, -0.674194), (-170.42448, -0.674194), (-170.09798, 0.932186), (-170.16599, 0.919232), (-170.16599, 0.220964), (-170.1014, 0.219975), (-170.14487, 0.750715), (-170.20946, 0.747958), (-170.20946, 0.735372), (-170.14487, 0.736361), (-170.14487, 0.750715), (-170.14487, 0.932247), (-170.15884, 0.928176), (-170.20946, 0.89608), (-170.20946, 0.747958), (-170.14148, 0.024055), (-170.14487, 0.736361), (-170.20946, 0.735372), (-170.20946, 0.037011), (-170.1014, 0.205622), (-170.1014, 0.219975), (-170.16599, 0.220964), (-170.16599, 0.208379), (-170.1014, 0.205622), (-170.16599, 0.208379), (-170.16599, 0.060278), (-170.11533, 0.028186), (-170.1014, 0.024116), (-170.21936, 0.697137), (-170.28786, 0.695089), (-170.28786, -0.626158), (-170.21936, -0.628204), (-170.27785, -0.673762), (-170.27785, 0.749148), (-170.33215, 0.74768), (-170.33215, -0.672294), (-170.37837, -0.674194), (-170.37837, 0.76609), (-170.42448, 0.76609), (-170.42448, -0.674194), (-170.40218, 0.728001), (-170.40218, -0.636105), (-170.3372, -0.636105), (-170.3372, 0.728001), (-170.17763, 0.235369), (-170.17763, 0.436895), (-170.19878, 0.436895), (-170.24214, 0.408546), (-170.24214, 0.235369), (-170.24214, 0.221029), (-170.17763, 0.221029), (-170.17763, 0.235369), (-170.24214, 0.235369), (-170.13467, -0.334849), (-170.13467, 0.3967), (-170.19917, 0.385667), (-170.19917, -0.334849), (-170.13467, -0.349191), (-170.19917, -0.349191), (-170.19917, -0.522376), (-170.15579, -0.550727), (-170.13467, -0.550727), (-170.19917, -0.349191), (-170.13467, -0.349191), (-170.13467, -0.334849), (-170.19917, -0.334849), (-170.17763, -0.51048), (-170.17763, 0.221029), (-170.24214, 0.221029), (-170.24214, -0.499448), (-171.16829, -0.6321), (-171.16829, 0.723996), (-171.20857, 0.723996), (-171.20857, -0.6321), (-170.17763, -0.51048), (-170.24214, -0.499448), (-170.24214, -0.539668), (-170.17763, -0.5507), (-170.35365, 0.72313), (-170.35365, -0.631235), (-170.31343, -0.631235), (-170.31343, 0.72313), (-170.19917, 0.385667), (-170.13467, 0.3967), (-170.13467, 0.436923), (-170.19917, 0.42589), (-143.95569, -107.3105), (-143.95569, -113.009964), (-138.83612, -113.009964), (-138.83612, -107.3105), (-118.5394, -108.98873), (-118.5394, -112.8919), (-115.04002, -112.8919), (-115.04002, -108.98873), (-88.71502, -110.12652), (-88.71502, -113.31285), (-85.85206, -113.31285), (-85.85206, -110.12652), (-68.80089, -111.5977), (-68.80089, -111.59771), (-68.80088, -111.59771), (-68.80088, -111.5977), (-71.599365, -1.054115), (-71.5837, -1.054285), (-71.5837, 0.29041), (-71.599365, 0.290241), (-71.6105, -1.054115), (-71.599365, -1.054115), (-71.599365, 0.290241), (-71.6105, 0.290241), (-71.617935, -1.054115), (-71.6105, -1.054115), (-71.6105, 0.290241), (-71.617935, 0.290241), (-71.348366, -1.006388), (-71.3318, -1.006179), (-71.3318, 0.242354), (-71.348366, 0.242562), (-70.95748, 0.281728), (-71.5837, 0.29041), (-71.5837, -1.054285), (-70.95748, -1.045603), (-70.95163, -1.045603), (-70.95163, 0.281728), (-70.95748, 0.281728), (-70.95748, -1.045603), (-72.06004, -1.063851), (-72.04547, -1.063851), (-72.04547, 0.312473), (-72.06004, 0.312473), (-72.04547, 0.312473), (-72.04547, -1.063851), (-71.410545, -1.063851), (-71.410545, 0.312473), (-71.63713, -1.012736), (-71.63713, 0.261357), (-71.658455, 0.261357), (-71.658455, -1.012736), (-71.35493, -1.063851), (-71.35493, 0.312473), (-71.36798, 0.312473), (-71.36798, -1.063851), (-71.36798, -1.063851), (-71.36798, 0.312473), (-71.38751, 0.312473), (-71.38751, -1.063851), (-71.38751, -1.063851), (-71.38751, 0.312473), (-71.410545, 0.312473), (-71.410545, -1.063851), (-71.177, -0.151153), (-71.177, 0.500685), (-71.37208, 0.463506), (-71.388504, 0.460797), (-71.39875, 0.453946), (-71.4056, 0.443694), (-71.40805, 0.429267), (-71.41377, -0.147525), (-71.29401, 0.350731), (-71.29401, 0.362479), (-71.527855, 0.352495), (-71.53077, 0.347103), (-71.29401, 0.362479), (-71.29401, 0.500733), (-71.527855, 0.352495), (-71.29401, 0.350731), (-71.53077, 0.347103), (-71.525055, -0.229689), (-71.522606, -0.244116), (-71.515755, -0.254369), (-71.5055, -0.26122), (-71.489075, -0.263929), (-71.29401, -0.301108), (-71.177, -0.151153), (-71.41377, -0.147525), (-71.41085, -0.152916), (-71.177, -0.162901), (-71.177, -0.162901), (-71.41085, -0.152916), (-71.177, -0.301155), (-71.348366, -1.006388), (-71.348366, 0.242562), (-71.54506, 0.236685), (-71.54506, -1.000511), (-70.79069, -1.05246), (-70.79069, 0.288585), (-70.95163, 0.281728), (-70.95163, -1.045603), (-72.23604, -1.063851), (-72.06004, -1.063851), (-72.06004, 0.312473), (-72.23604, 0.312473), (-71.43633, 0.261357), (-71.63713, 0.261357), (-71.63713, -1.012736), (-71.43633, -1.012736), (-70.92144, 0.372882), (-70.92144, 0.534599), (-71.16882, 0.372882), (-70.92144, 0.35949), (-70.92144, 0.372882), (-71.16882, 0.372882), (-71.17606, 0.35949), (-71.04686, -0.138201), (-71.04686, 0.534599), (-71.24618, 0.500514), (-71.26734, 0.496303), (-71.285286, 0.484313), (-71.29728, 0.466368), (-71.30149, 0.4452), (-71.30149, -0.138201), (-71.04686, -0.313309), (-71.04686, -0.151593), (-71.29424, -0.151593), (-71.04686, -0.138201), (-71.30149, -0.138201), (-71.29424, -0.151593), (-71.04686, -0.151593), (-70.92144, 0.35949), (-71.17606, 0.35949), (-71.17606, -0.223909), (-71.17185, -0.245077), (-71.15987, -0.263022), (-71.14192, -0.275013), (-71.12075, -0.279223), (-70.92144, -0.313309), (5.646933, -120.60234), (7.358486, -120.60234), (7.358486, -118.890785), (5.646933, -118.890785), (-5.253075, -117.08902), (-3.54152, -117.08902), (-3.54152, -115.377464), (-5.253075, -115.377464)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_FridgeDrawer2C6_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]
                rel material:binding = </root/_materials/M_FridgeDrawer2C6_0>
            }

            def GeomSubset "M_FridgeDrawer2C6_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [31]
                rel material:binding = </root/_materials/M_FridgeDrawer2C6_1>
            }

            def GeomSubset "M_FridgeDrawer2C6_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [32]
                rel material:binding = </root/_materials/M_FridgeDrawer2C6_2>
            }

            def GeomSubset "M_FridgeDrawer2C6_3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [33]
                rel material:binding = </root/_materials/M_FridgeDrawer2C6_3>
            }

            def GeomSubset "M_FridgeDrawer2C6_4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62]
                rel material:binding = </root/_materials/M_FridgeDrawer2C6_4>
            }

            def GeomSubset "M_FridgeDrawer2C6_5" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [63]
                rel material:binding = </root/_materials/M_FridgeDrawer2C6_5>
            }

            def GeomSubset "M_FridgeDrawer2C6_6" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [64]
                rel material:binding = </root/_materials/M_FridgeDrawer2C6_6>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer2C6_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2C6_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.1834451, 0.21323532, 0.21323532)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2C6_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge.tga@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2C6_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer2C6_1"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2C6_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer2C6_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2C6_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2C6_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2C6_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer2C6_2"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2C6_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer2C6_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2C6_2/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2C6_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2C6_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer2C6_3"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2C6_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.8014706, 0.8014706, 0.8014706)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2C6_3/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2C6_3/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer2C6_4"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2C6_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.39705884, 0.39705884, 0.39705884)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }

        def Material "M_FridgeDrawer2C6_5"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2C6_5/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer2C6_5/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2C6_5/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Decal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2C6_5/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Decal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2C6_5/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer2C6_6"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2C6_6/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer2C6_6/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2C6_6/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Readout_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2C6_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2C6_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

