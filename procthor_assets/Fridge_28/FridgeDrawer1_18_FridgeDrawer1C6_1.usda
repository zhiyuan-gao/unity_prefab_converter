#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "FridgeDrawer1C6"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "FridgeDrawer1C6" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.000163, -0.185925, -0.841603), (0.446719, 0.119724, 0.299661)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 8, 4, 3, 8, 4, 3, 4, 4, 4, 4, 3, 4, 8, 3, 4, 8, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 52, 53, 70, 63, 58, 37, 41, 57, 63, 34, 35, 62, 62, 35, 36, 64, 57, 41, 40, 69, 71, 38, 39, 70, 69, 40, 38, 71, 64, 36, 37, 58, 70, 39, 34, 63, 28, 34, 39, 29, 58, 77, 76, 64, 71, 79, 78, 69, 71, 70, 53, 80, 79, 57, 69, 78, 81, 62, 64, 76, 82, 62, 82, 83, 52, 63, 77, 58, 57, 81, 53, 52, 83, 80, 85, 84, 28, 29, 95, 94, 93, 92, 35, 34, 28, 84, 88, 89, 36, 35, 88, 40, 41, 86, 90, 38, 91, 85, 29, 39, 91, 38, 40, 90, 37, 36, 89, 87, 41, 37, 92, 93, 37, 87, 95, 92, 87, 86, 94, 95, 86, 41, 93, 94, 4, 5, 7, 6, 8, 9, 11, 10, 12, 13, 15, 14, 16, 17, 19, 18, 67, 68, 72, 73, 66, 67, 73, 74, 65, 66, 74, 75, 56, 65, 75, 59, 61, 72, 68, 60, 54, 55, 61, 60, 33, 32, 31, 30, 31, 32, 42, 45, 43, 44, 46, 47, 47, 46, 48, 49, 49, 48, 50, 51, 51, 50, 45, 42, 76, 77, 59, 75, 74, 73, 72, 61, 78, 79, 54, 60, 79, 80, 54, 78, 60, 68, 67, 66, 65, 56, 81, 76, 61, 55, 82, 82, 55, 83, 56, 59, 77, 81, 80, 83, 55, 54, 85, 33, 30, 84, 87, 44, 43, 86, 88, 84, 30, 89, 88, 30, 31, 90, 86, 43, 47, 49, 51, 42, 32, 85, 91, 33, 90, 32, 33, 91, 89, 31, 45, 50, 48, 46, 44, 87, 20, 21, 23, 22, 24, 25, 27, 26]
            rel material:binding = </root/_materials/M_FridgeDrawer1C6_0>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (3.1432137e-8, 0.9337909, -0.35781923), (0.000004891306, 0.93379086, -0.35781932), (-0.0000023454033, 0.9599449, -0.28018883), (-0.0000023454033, 0.9599449, -0.28018883), (-0.035794627, 0.07271432, -0.99671036), (-0.025904637, 0.050204583, -0.998403), (0.025903922, 0.05020436, -0.998403), (0.03579505, 0.07271534, -0.9967101), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.0017907228, -0.000099599056, -0.9999985), (-0.00069052354, 4.0617294e-7, -0.9999998), (0.03579505, 0.07271534, -0.9967101), (0.025903922, 0.05020436, -0.998403), (0.0017895233, -0.00009958609, -0.99999833), (0.00068944134, 4.2124884e-7, -0.99999976), (-2.3203167e-7, 0, -1), (-2.3594949e-7, 0, -1), (-2.5233297e-7, 0, -1), (-2.3308687e-7, 0, -1), (0.00068944134, 4.2124884e-7, -0.99999976), (0.0017895233, -0.00009958609, -0.99999833), (-2.3594949e-7, 0, -1), (-2.3203167e-7, 0, -1), (-0.00069052354, 4.0617294e-7, -0.9999998), (-0.0017907228, -0.000099599056, -0.9999985), (-0.025904637, 0.050204583, -0.998403), (-0.035794627, 0.07271432, -0.99671036), (-2.3308687e-7, 0, -1), (-2.5233297e-7, 0, -1), (0, 0, -1), (0, 0, -1), (0.0000041414387, -0.9815637, 0.19113548), (0.0000047640883, -1, 0), (0.0000047640883, -1, 0), (0.000003899737, -0.9815638, 0.19113474), (0.99945176, 0.013438861, 0.0302601), (0.99946725, 0.013822676, 0.02956876), (0.9995744, -0.0031711427, 0.028999059), (0.9995966, -0.00051141385, 0.028398963), (-0.9993378, -0.009527691, 0.03511843), (-0.9991525, -0.011910011, 0.03940187), (-0.99957716, -0.003202042, 0.028899483), (-0.9995964, -0.00047952542, 0.028403046), (-0.9993378, -0.009527691, 0.03511843), (-0.99153805, -0.08814288, 0.095305055), (-0.99153805, -0.08814288, 0.095305055), (-0.99253386, -0.089204505, 0.08318139), (-0.9991525, -0.011910011, 0.03940187), (-0.9994518, 0.013434337, 0.03025852), (-0.9995964, -0.00047952542, 0.028403046), (-0.99957716, -0.003202042, 0.028899483), (-0.9994566, 0.013522105, 0.030060854), (0.9993383, -0.009510431, 0.03510547), (0.9995966, -0.00051141385, 0.028398963), (0.9995744, -0.0031711427, 0.028999059), (0.9991522, -0.011927318, 0.03940368), (0.9993383, -0.009510431, 0.03510547), (0.9991522, -0.011927318, 0.03940368), (0.99253136, -0.08920169, 0.08321498), (0.9915415, -0.08813437, 0.09527767), (0.9915415, -0.08813437, 0.09527767), (0.0000024317835, -0.98231626, -0.18722914), (0.0000024401586, -0.9823147, -0.18723758), (0.0000024401586, -0.9823147, -0.18723758), (0.0000024317837, -0.98231626, -0.18722916), (0.000004891306, 0.93379086, -0.35781932), (3.1432137e-8, 0.9337909, -0.35781923), (-0.0000020729774, 0.84459674, -0.53540295), (-0.0000020729774, 0.84459674, -0.53540295), (0.0000024835913, -0.83701885, 0.54717416), (0.0000024835906, -0.83701885, 0.54717416), (0.0000041414387, -0.9815637, 0.19113548), (0.000003899737, -0.9815638, 0.19113474), (-0.00000235992, 0.9856844, 0.16860034), (-0.00000235992, 0.9856844, 0.16860034), (-0.00000235992, 0.9856844, 0.16860034), (-0.00000235992, 0.9856844, 0.16860034), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0.0000015766582, 0), (-1, -6.9301103e-7, -2.9416145e-7), (-1, -0.0000021799483, -1.8712112e-7), (-1, 0, 0), (-1, 0.0000015766582, 0), (1, 0, 0), (1, 0, 0), (1, -2.472229e-10, 0), (1, -2.0035573e-10, 0), (1, 0.00000841473, -0.000001849218), (1, 0.000008870207, -9.24609e-7), (1, 0.000017404647, -0.0000025308182), (1, 0.00001682946, -0.0000036984363), (1, 0.00001682946, -0.0000036984363), (1, 0.000008870207, -9.24609e-7), (1, 0.00000841473, -0.000001849218), (1, 0, 0), (1, -2.0035573e-10, 0), (-1, -0.0000019449355, -1.6694821e-7), (-1, -0.0000021799483, -1.8712112e-7), (-1, -6.9301103e-7, -2.9416145e-7), (-1, -0.000003125642, -3.9087317e-7), (0.025903922, 0.05020436, -0.998403), (-0.025904637, 0.050204583, -0.998403), (2.4378073e-8, 0, -1), (2.4378073e-8, 0, -1), (-1, -0.0000019449355, -1.6694821e-7), (-1, -0.000003125642, -3.9087317e-7), (-1, 0, 0), (-1, 0, 0), (7.790723e-9, 0, 1), (7.790723e-9, 0, 1), (7.790723e-9, 0, 1), (7.790723e-9, 0, 1), (1, -2.472229e-10, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-6.859336e-7, -0.38917118, -0.9211655), (0.0000022934983, -0.16878666, -0.9856526), (-0.00086532003, -0.16878188, -0.9856531), (0.0000012451717, -0.38917106, -0.9211656), (0.0000025944355, -0.7070942, -0.70711935), (-6.859336e-7, -0.38917118, -0.9211655), (0.0000012451717, -0.38917106, -0.9211656), (0.0000025944335, -0.70709354, -0.70712), (0.0000028053507, -0.91551065, -0.40229365), (0.0000025944355, -0.7070942, -0.70711935), (0.0000025944335, -0.70709354, -0.70712), (-0.0000010633667, -0.91551006, -0.40229508), (2.036686e-7, -0.98636115, -0.1645956), (0.0000028053507, -0.91551065, -0.40229365), (-0.0000010633667, -0.91551006, -0.40229508), (-5.6627323e-7, -0.986361, -0.16459556), (-0.0000018198043, 0.52095747, -0.8535825), (-0.00086532003, -0.16878188, -0.9856531), (0.0000022934983, -0.16878666, -0.9856526), (-6.251372e-7, 0.5209572, -0.8535828), (4.8289075e-7, 0.4361145, -0.89989114), (-0.0000017441541, 0.43616217, -0.89986813), (-0.0000018198043, 0.52095747, -0.8535825), (-6.251372e-7, 0.5209572, -0.8535828), (-0.00010229573, -0.53305197, 0.84608257), (5.553929e-7, -0.42487648, 0.9052513), (0.000109688284, -0.4248767, 0.90525115), (0.0000015246504, -0.53305167, 0.8460826), (0.000109688284, -0.4248767, 0.90525115), (5.553929e-7, -0.42487648, 0.9052513), (-3.6274696e-7, 0.1810499, 0.9834739), (-7.778486e-7, 0.18109444, 0.9834657), (-0.0000025585664, 0.9813167, 0.19239925), (0.0000015695348, 0.9813167, 0.19239928), (-0.0000023214407, 0.9238841, 0.38267246), (-0.0000023214407, 0.9238841, 0.38267225), (-0.0000023214407, 0.9238841, 0.38267225), (-0.0000023214407, 0.9238841, 0.38267246), (-0.0000020228786, 0.7070926, 0.70712095), (-0.0000020228786, 0.70709294, 0.70712066), (-0.0000020228786, 0.70709294, 0.70712066), (-0.0000020228786, 0.7070926, 0.70712095), (-0.0000013706025, 0.38271725, 0.92386556), (-0.0000013706062, 0.3827183, 0.92386514), (-0.0000013706062, 0.3827183, 0.92386514), (-0.0000013706025, 0.38271725, 0.92386556), (-7.778486e-7, 0.18109444, 0.9834657), (-3.6274696e-7, 0.1810499, 0.9834739), (0.9995744, -0.0031711427, 0.028999059), (0.99946725, 0.013822676, 0.02956876), (0.9994859, 0.014310729, 0.02868961), (0.9994859, 0.014310729, 0.02868961), (0.9994859, 0.014310729, 0.02868961), (0.9994859, 0.014310729, 0.02868961), (0.9994859, 0.014310729, 0.02868961), (0.9995896, -0.0016080871, 0.028599506), (-0.99957716, -0.003202042, 0.028899483), (-0.9991525, -0.011910011, 0.03940187), (-0.99947596, 0.017079977, 0.027498567), (-0.999587, -0.0015880428, 0.028693331), (-0.9991525, -0.011910011, 0.03940187), (-0.99253386, -0.089204505, 0.08318139), (-0.99947596, 0.017079977, 0.027498567), (-0.99957716, -0.003202042, 0.028899483), (-0.999587, -0.0015880428, 0.028693331), (-0.999486, 0.014305823, 0.028689116), (-0.999486, 0.014305823, 0.028689116), (-0.999486, 0.014305823, 0.028689116), (-0.999486, 0.014305823, 0.028689116), (-0.999486, 0.014305823, 0.028689116), (-0.9994566, 0.013522105, 0.030060854), (0.9995744, -0.0031711427, 0.028999059), (0.9995896, -0.0016080871, 0.028599506), (0.99947584, 0.0170825, 0.02749941), (0.9991522, -0.011927318, 0.03940368), (0.9991522, -0.011927318, 0.03940368), (0.99947584, 0.0170825, 0.02749941), (0.99253136, -0.08920169, 0.08321498), (2.036686e-7, -0.98636115, -0.1645956), (-5.6627323e-7, -0.986361, -0.16459556), (0.0000024317835, -0.98231626, -0.18722914), (0.0000024317837, -0.98231626, -0.18722916), (-0.0000020729774, 0.84459674, -0.53540295), (-0.0000020729774, 0.84459674, -0.53540295), (-0.0000017441541, 0.43616217, -0.89986813), (4.8289075e-7, 0.4361145, -0.89989114), (0.0000024835913, -0.83701885, 0.54717416), (-0.00010229573, -0.53305197, 0.84608257), (0.0000015246504, -0.53305167, 0.8460826), (0.0000024835906, -0.83701885, 0.54717416), (-0.0000025448712, 0.9856888, 0.16857545), (0.0000015695348, 0.9813167, 0.19239928), (-0.0000025585664, 0.9813167, 0.19239925), (-0.0000025448712, 0.9856888, 0.16857545), (-1, 0.0000015766582, 0), (-1, 0, 0), (-1, 0.0000049265586, 0), (-1, -6.9301103e-7, -2.9416145e-7), (-1, 0.0000015766582, 0), (-1, 0.0000049265586, 0), (-1, -2.3989267e-7, -4.7644073e-7), (1, -2.0035573e-10, 0), (1, -2.472229e-10, 0), (1, -8.0142293e-10, 0), (1, -8.0142293e-10, 0), (1, -8.0142293e-10, 0), (1, -8.0142293e-10, 0), (1, -8.0142293e-10, 0), (1, -4.7585835e-10, 0), (1, 0.000017404647, -0.0000025308182), (1, 0.000008870207, -9.24609e-7), (1, 0.0000040814616, 0), (1, -2.0035573e-10, 0), (1, -4.7585835e-10, 0), (1, 0.0000040814616, 0), (1, 0.000008870207, -9.24609e-7), (-1, -6.9301103e-7, -2.9416145e-7), (-1, -2.3989267e-7, -4.7644073e-7), (-1, -0.00000471878, -8.0240363e-7), (-1, -0.00000471878, -8.0240363e-7), (-1, -0.00000471878, -8.0240363e-7), (-1, -0.00000471878, -8.0240363e-7), (-1, -0.00000471878, -8.0240363e-7), (-1, -0.000003125642, -3.9087317e-7), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.000154, 0.015229, -0.841603), (-0.000163, 0.015229, -0.841603), (-0.000154, 0.015238, -0.841603), (-0.000163, 0.015238, -0.841603), (-0.000154, 0.015229, -0.841603), (-0.000163, 0.015229, -0.841603), (-0.000154, 0.015238, -0.841603), (-0.000163, 0.015238, -0.841603), (-0.000154, 0.015229, -0.841603), (-0.000163, 0.015229, -0.841603), (-0.000154, 0.015238, -0.841603), (-0.000163, 0.015238, -0.841603), (-0.000154, 0.015229, -0.841603), (-0.000163, 0.015229, -0.841603), (-0.000154, 0.015238, -0.841603), (-0.000163, 0.015238, -0.841603), (-0.000154, 0.015229, -0.841603), (-0.000163, 0.015229, -0.841603), (-0.000154, 0.015238, -0.841603), (-0.000163, 0.015238, -0.841603), (-0.000154, 0.015229, -0.841603), (-0.000163, 0.015229, -0.841603), (-0.000154, 0.015238, -0.841603), (-0.000163, 0.015238, -0.841603), (-0.000154, 0.015229, -0.841603), (-0.000163, 0.015229, -0.841603), (-0.000154, 0.015237, -0.841603), (-0.000163, 0.015237, -0.841603), (0.446718, 0.119724, 0.292065), (0.027593, 0.119722, 0.292065), (0.446718, 0.057354, 0.196658), (0.446718, 0.052916, 0.194256), (0.027594, 0.052915, 0.194256), (0.027594, 0.057353, 0.196658), (0.446718, 0.119724, 0.298609), (0.446718, 0.057354, 0.298609), (0.446718, 0.052916, 0.298609), (0.446719, -0.173476, 0.298609), (0.027594, 0.057353, 0.298609), (0.027593, 0.119722, 0.298609), (0.027594, 0.052915, 0.298609), (0.027594, -0.173477, 0.298609), (0.027594, -0.140434, 0.194256), (0.027594, -0.158766, 0.212588), (0.446719, -0.158765, 0.212589), (0.446719, -0.140433, 0.194256), (0.446719, -0.15737, 0.205573), (0.027594, -0.157371, 0.205573), (0.446719, -0.153396, 0.199626), (0.027594, -0.153397, 0.199626), (0.446719, -0.147448, 0.195652), (0.027594, -0.14745, 0.195652), (0.442164, 0.112224, 0.294299), (0.032147, 0.112223, 0.294299), (0.034663, 0.053193, 0.201179), (0.439649, 0.053194, 0.201179), (0.031998, -0.151003, 0.214024), (0.034556, -0.167325, 0.299661), (0.439757, -0.167324, 0.299661), (0.442315, -0.151002, 0.214024), (0.034663, 0.051407, 0.200212), (0.439649, 0.051408, 0.200212), (0.436873, 0.057354, 0.298609), (0.439756, 0.113482, 0.298609), (0.436873, 0.052916, 0.298609), (0.032066, -0.150106, 0.208583), (0.032066, -0.147837, 0.205186), (0.032066, -0.14444, 0.202917), (0.032014, -0.139661, 0.202106), (0.037439, 0.052915, 0.298609), (0.034555, 0.113481, 0.298609), (0.037439, 0.057353, 0.298609), (0.442299, -0.13966, 0.202106), (0.442247, -0.144439, 0.202917), (0.442247, -0.147835, 0.205186), (0.442247, -0.150105, 0.208583), (0.437436, 0.05261, 0.278644), (0.440385, -0.163318, 0.278644), (0.036876, 0.052609, 0.278644), (0.03687, 0.056501, 0.278644), (0.03257, 0.102299, 0.278644), (0.033928, -0.163319, 0.278644), (0.437441, 0.056502, 0.278644), (0.441741, 0.1023, 0.278644), (0.446718, 0.11095, 0.278644), (0.027593, 0.110949, 0.278644), (0.027594, -0.170063, 0.278644), (0.446719, -0.170062, 0.278644), (0.446718, 0.057354, 0.278644), (0.446718, 0.052916, 0.278644), (0.027594, 0.052915, 0.278644), (0.027594, 0.057353, 0.278644), (0.446719, -0.185924, 0.298609), (0.027594, -0.185925, 0.298609), (0.027594, -0.18251, 0.278644), (0.446719, -0.182509, 0.278644)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-170.84894, -110.532585), (-170.84894, -110.53267), (-170.84885, -110.53267), (-170.84885, -110.532585), (-170.27783, 0.749189), (-170.27783, -0.673803), (-170.26288, -0.665446), (-170.26288, 0.740832), (-171.14847, 0.701568), (-171.16835, 0.724097), (-171.16835, -0.6322), (-171.14847, -0.609671), (-170.23976, 0.701568), (-170.21954, 0.724097), (-170.42136, 0.724097), (-170.42136, 0.692236), (-170.42136, 0.692236), (-170.42136, 0.724097), (-170.43573, 0.724097), (-170.43573, 0.692236), (-171.14847, -0.609671), (-171.16835, -0.6322), (-170.43573, -0.6322), (-170.43573, -0.60034), (-170.42136, -0.60034), (-170.42136, -0.6322), (-170.21954, -0.6322), (-170.23976, -0.609671), (-170.43573, -0.60034), (-170.43573, -0.6322), (-170.42136, -0.6322), (-170.42136, -0.60034), (-170.43573, 0.692236), (-170.43573, 0.724097), (-171.16835, 0.724097), (-171.14847, 0.701568), (-170.23976, -0.609671), (-170.21954, -0.6322), (-170.21954, 0.724097), (-170.23976, 0.701568), (-170.42448, 0.76609), (-170.44696, 0.76609), (-170.44696, -0.674194), (-170.42448, -0.674194), (-170.09798, 0.932135), (-170.16599, 0.919182), (-170.16599, 0.220993), (-170.1014, 0.220004), (-170.14487, 0.75074), (-170.20946, 0.747983), (-170.20946, 0.735395), (-170.14487, 0.736385), (-170.14487, 0.75074), (-170.14487, 0.932288), (-170.15884, 0.928217), (-170.20946, 0.896118), (-170.20946, 0.747983), (-170.14148, 0.024013), (-170.14487, 0.736385), (-170.20946, 0.735395), (-170.20946, 0.03697), (-170.1014, 0.205653), (-170.1014, 0.220004), (-170.16599, 0.220993), (-170.16599, 0.20841), (-170.1014, 0.205653), (-170.16599, 0.20841), (-170.16599, 0.060325), (-170.11533, 0.028237), (-170.1014, 0.024167), (-170.21935, 0.697091), (-170.28786, 0.695043), (-170.28786, -0.62611), (-170.21935, -0.628157), (-170.27783, -0.673803), (-170.27783, 0.749189), (-170.33215, 0.747722), (-170.33215, -0.672335), (-170.37837, -0.674194), (-170.37837, 0.76609), (-170.42448, 0.76609), (-170.42448, -0.674194), (-170.40219, 0.727827), (-170.40219, -0.635931), (-170.33719, -0.635931), (-170.33719, 0.727827), (-170.17763, 0.235369), (-170.17763, 0.436895), (-170.19878, 0.436895), (-170.24214, 0.408546), (-170.24214, 0.235369), (-170.24214, 0.221029), (-170.17763, 0.221029), (-170.17763, 0.235369), (-170.24214, 0.235369), (-170.13467, -0.334849), (-170.13467, 0.3967), (-170.19917, 0.385667), (-170.19917, -0.334849), (-170.13467, -0.349191), (-170.19917, -0.349191), (-170.19917, -0.522376), (-170.15579, -0.550727), (-170.13467, -0.550727), (-170.19917, -0.349191), (-170.13467, -0.349191), (-170.13467, -0.334849), (-170.19917, -0.334849), (-170.17763, -0.51048), (-170.17763, 0.221029), (-170.24214, 0.221029), (-170.24214, -0.499448), (-171.16835, -0.6322), (-171.16835, 0.724097), (-171.20863, 0.724097), (-171.20863, -0.6322), (-170.17763, -0.51048), (-170.24214, -0.499448), (-170.24214, -0.539668), (-170.17763, -0.5507), (-170.35365, 0.722995), (-170.35365, -0.631099), (-170.31343, -0.631099), (-170.31343, 0.722995), (-170.19917, 0.385667), (-170.13467, 0.3967), (-170.13467, 0.436923), (-170.19917, 0.42589), (-143.95569, -107.3105), (-143.95569, -113.009964), (-138.83612, -113.009964), (-138.83612, -107.3105), (-118.5394, -108.98873), (-118.5394, -112.8919), (-115.04002, -112.8919), (-115.04002, -108.98873), (-88.71502, -110.12652), (-88.71502, -113.31285), (-85.85206, -113.31285), (-85.85206, -110.12652), (-68.80089, -111.5977), (-68.80089, -111.59771), (-68.80088, -111.59771), (-68.80088, -111.5977), (-71.599365, -1.054116), (-71.5837, -1.054285), (-71.5837, 0.290411), (-71.599365, 0.290242), (-71.6105, -1.054116), (-71.599365, -1.054116), (-71.599365, 0.290242), (-71.6105, 0.290242), (-71.617935, -1.054116), (-71.6105, -1.054116), (-71.6105, 0.290242), (-71.617935, 0.290242), (-71.348366, -1.006388), (-71.3318, -1.006181), (-71.3318, 0.242354), (-71.348366, 0.242562), (-70.95748, 0.281729), (-71.5837, 0.290411), (-71.5837, -1.054285), (-70.95748, -1.045603), (-70.95163, -1.045603), (-70.95163, 0.281729), (-70.95748, 0.281729), (-70.95748, -1.045603), (-72.06004, -1.063852), (-72.04547, -1.063852), (-72.04547, 0.312473), (-72.06004, 0.312473), (-72.04547, 0.312473), (-72.04547, -1.063852), (-71.410545, -1.063852), (-71.410545, 0.312473), (-71.63713, -1.012736), (-71.63713, 0.261358), (-71.658455, 0.261358), (-71.658455, -1.012736), (-71.35493, -1.063852), (-71.35493, 0.312473), (-71.36798, 0.312473), (-71.36798, -1.063852), (-71.36798, -1.063852), (-71.36798, 0.312473), (-71.38751, 0.312473), (-71.38751, -1.063852), (-71.38751, -1.063852), (-71.38751, 0.312473), (-71.410545, 0.312473), (-71.410545, -1.063852), (-71.177, -0.151153), (-71.177, 0.500686), (-71.37208, 0.463507), (-71.388504, 0.460797), (-71.39875, 0.453947), (-71.4056, 0.443694), (-71.40805, 0.429267), (-71.41377, -0.147525), (-71.29401, 0.350731), (-71.29401, 0.362479), (-71.527855, 0.352494), (-71.53077, 0.347103), (-71.29401, 0.362479), (-71.29401, 0.500733), (-71.527855, 0.352494), (-71.29401, 0.350731), (-71.53077, 0.347103), (-71.525055, -0.229689), (-71.522606, -0.244116), (-71.515755, -0.254369), (-71.5055, -0.26122), (-71.489075, -0.263929), (-71.29401, -0.301108), (-71.177, -0.151153), (-71.41377, -0.147525), (-71.41085, -0.152916), (-71.177, -0.162901), (-71.177, -0.162901), (-71.41085, -0.152916), (-71.177, -0.301155), (-71.348366, -1.006388), (-71.348366, 0.242562), (-71.54506, 0.236685), (-71.54506, -1.000512), (-70.79069, -1.05246), (-70.79069, 0.288586), (-70.95163, 0.281729), (-70.95163, -1.045603), (-72.23604, -1.063852), (-72.06004, -1.063852), (-72.06004, 0.312473), (-72.23604, 0.312473), (-71.43633, 0.261358), (-71.63713, 0.261358), (-71.63713, -1.012736), (-71.43633, -1.012736), (-70.92144, 0.372882), (-70.92144, 0.534598), (-71.16882, 0.372882), (-70.92144, 0.35949), (-70.92144, 0.372882), (-71.16882, 0.372882), (-71.17606, 0.35949), (-71.04686, -0.138201), (-71.04686, 0.534599), (-71.24618, 0.500514), (-71.26734, 0.496303), (-71.285286, 0.484313), (-71.29728, 0.466367), (-71.30149, 0.4452), (-71.30149, -0.138201), (-71.04686, -0.313309), (-71.04686, -0.151592), (-71.29424, -0.151592), (-71.04686, -0.138201), (-71.30149, -0.138201), (-71.29424, -0.151592), (-71.04686, -0.151592), (-70.92144, 0.35949), (-71.17606, 0.35949), (-71.17606, -0.223909), (-71.17185, -0.245076), (-71.15987, -0.263022), (-71.14192, -0.275012), (-71.12075, -0.279222), (-70.92144, -0.313308), (5.646933, -120.60234), (7.358486, -120.60234), (7.358486, -118.890785), (5.646933, -118.890785), (-5.253075, -117.08902), (-3.54152, -117.08902), (-3.54152, -115.377464), (-5.253075, -115.377464)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_FridgeDrawer1C6_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]
                rel material:binding = </root/_materials/M_FridgeDrawer1C6_0>
            }

            def GeomSubset "M_FridgeDrawer1C6_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [31]
                rel material:binding = </root/_materials/M_FridgeDrawer1C6_1>
            }

            def GeomSubset "M_FridgeDrawer1C6_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [32]
                rel material:binding = </root/_materials/M_FridgeDrawer1C6_2>
            }

            def GeomSubset "M_FridgeDrawer1C6_3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [33]
                rel material:binding = </root/_materials/M_FridgeDrawer1C6_3>
            }

            def GeomSubset "M_FridgeDrawer1C6_4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62]
                rel material:binding = </root/_materials/M_FridgeDrawer1C6_4>
            }

            def GeomSubset "M_FridgeDrawer1C6_5" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [63]
                rel material:binding = </root/_materials/M_FridgeDrawer1C6_5>
            }

            def GeomSubset "M_FridgeDrawer1C6_6" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [64]
                rel material:binding = </root/_materials/M_FridgeDrawer1C6_6>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer1C6_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1C6_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.1834451, 0.21323532, 0.21323532)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1C6_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge.tga@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1C6_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer1C6_1"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1C6_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1C6_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1C6_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1C6_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1C6_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer1C6_2"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1C6_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1C6_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1C6_2/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1C6_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1C6_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer1C6_3"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1C6_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.8014706, 0.8014706, 0.8014706)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1C6_3/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1C6_3/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer1C6_4"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1C6_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.39705884, 0.39705884, 0.39705884)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }

        def Material "M_FridgeDrawer1C6_5"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1C6_5/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1C6_5/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1C6_5/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Decal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1C6_5/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Decal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1C6_5/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer1C6_6"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1C6_6/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1C6_6/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1C6_6/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Readout_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1C6_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1C6_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

