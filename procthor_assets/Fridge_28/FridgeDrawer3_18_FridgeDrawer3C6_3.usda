#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.0"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "FridgeDrawer3C6"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "FridgeDrawer3C6" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.446719, -0.185925, -0.841603), (0.000163, 0.119724, 0.152826)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 8, 4, 3, 8, 4, 3, 4, 4, 4, 4, 3, 4, 8, 3, 4, 8, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 52, 53, 70, 63, 58, 37, 41, 57, 63, 34, 35, 62, 62, 35, 36, 64, 57, 41, 40, 69, 71, 38, 39, 70, 69, 40, 38, 71, 64, 36, 37, 58, 70, 39, 34, 63, 28, 34, 39, 29, 58, 77, 76, 64, 71, 79, 78, 69, 71, 70, 53, 80, 79, 57, 69, 78, 81, 62, 64, 76, 82, 62, 82, 83, 52, 63, 77, 58, 57, 81, 53, 52, 83, 80, 85, 84, 28, 29, 95, 94, 93, 92, 35, 34, 28, 84, 88, 89, 36, 35, 88, 40, 41, 86, 90, 38, 91, 85, 29, 39, 91, 38, 40, 90, 37, 36, 89, 87, 41, 37, 92, 93, 37, 87, 95, 92, 87, 86, 94, 95, 86, 41, 93, 94, 4, 5, 7, 6, 8, 9, 11, 10, 12, 13, 15, 14, 16, 17, 19, 18, 67, 68, 72, 73, 66, 67, 73, 74, 65, 66, 74, 75, 56, 65, 75, 59, 61, 72, 68, 60, 54, 55, 61, 60, 33, 32, 31, 30, 31, 32, 42, 45, 43, 44, 46, 47, 47, 46, 48, 49, 49, 48, 50, 51, 51, 50, 45, 42, 76, 77, 59, 75, 74, 73, 72, 61, 78, 79, 54, 60, 79, 80, 54, 78, 60, 68, 67, 66, 65, 56, 81, 76, 61, 55, 82, 82, 55, 83, 56, 59, 77, 81, 80, 83, 55, 54, 85, 33, 30, 84, 87, 44, 43, 86, 88, 84, 30, 89, 88, 30, 31, 90, 86, 43, 47, 49, 51, 42, 32, 85, 91, 33, 90, 32, 33, 91, 89, 31, 45, 50, 48, 46, 44, 87, 20, 21, 23, 22, 24, 25, 27, 26]
            rel material:binding = </root/_materials/M_FridgeDrawer3C6_0>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.0000042837346, -0.86540216, 0.5010779), (-7.0780516e-8, -0.865402, 0.50107807), (-0.00000235292, -0.9599452, 0.28018793), (-0.00000235292, -0.9599452, 0.28018793), (-0.02620478, -0.09858285, 0.9947838), (-0.008712852, -0.026817568, 0.9996024), (0.008712154, -0.026817346, 0.9996024), (0.026204964, -0.09858377, 0.99478364), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.06199952, 0.0026977013, 0.99807245), (-0.061999537, 0.002700124, 0.9980725), (0.026204964, -0.09858377, 0.99478364), (0.008712154, -0.026817346, 0.9996024), (0.061998427, 0.0026974208, 0.9980726), (0.061998546, 0.0026998564, 0.99807256), (5.800792e-7, 0, 1), (5.8987376e-7, 0, 1), (6.308324e-7, 0, 1), (5.827172e-7, 0, 1), (0.061998546, 0.0026998564, 0.99807256), (0.061998427, 0.0026974208, 0.9980726), (5.8987376e-7, 0, 1), (5.800792e-7, 0, 1), (-0.061999537, 0.002700124, 0.9980725), (-0.06199952, 0.0026977013, 0.99807245), (-0.008712852, -0.026817568, 0.9996024), (-0.02620478, -0.09858285, 0.9947838), (5.827172e-7, 0, 1), (6.308324e-7, 0, 1), (0, 0, 1), (0, 0, 1), (-0.000043731285, 0.91552, -0.4022724), (0.0000047641083, 0.99999994, 0), (0.0000047641083, 0.99999994, 0), (0.000004167225, 0.91552037, -0.40227172), (0.99945176, -0.013438868, -0.030260116), (0.9998267, -0.013700657, -0.012602145), (0.99983203, -0.013485234, -0.012414946), (0.9994572, -0.013176368, -0.030195411), (-0.9925053, 0.08200215, -0.09060368), (-0.99621576, 0.08330204, -0.024798753), (-0.99983203, -0.013476823, -0.012423258), (-0.9994566, -0.01320841, -0.030199483), (-0.9925053, 0.08200215, -0.09060368), (-0.99153805, 0.08814288, -0.095305055), (-0.99153805, 0.08814288, -0.095305055), (-0.9951907, 0.09220001, -0.033085383), (-0.99621576, 0.08330204, -0.024798753), (-0.9994518, -0.013434343, -0.030258533), (-0.9994566, -0.01320841, -0.030199483), (-0.99983203, -0.013476823, -0.012423258), (-0.99982667, -0.013700531, -0.012601267), (0.9925078, 0.081984594, -0.0905915), (0.9994572, -0.013176368, -0.030195411), (0.99983203, -0.013485234, -0.012414946), (0.99621737, 0.08328083, -0.02480325), (0.9925078, 0.081984594, -0.0905915), (0.99621737, 0.08328083, -0.02480325), (0.99518967, 0.09219907, -0.03311825), (0.9915415, 0.088134445, -0.09527762), (0.9915415, 0.088134445, -0.09527762), (-9.930227e-8, 0.99724966, 0.074115224), (0.000002433457, 0.9823147, 0.18723772), (0.000002433457, 0.9823147, 0.18723772), (0.0004932017, 0.99724936, 0.074117646), (-7.0780516e-8, -0.865402, 0.50107807), (-0.0000042837346, -0.86540216, 0.5010779), (0.0013952071, -0.9674289, 0.2531387), (-3.8254075e-7, -0.96743166, 0.25313237), (0.00010041265, 0.9646997, -0.26335248), (0.0000025970955, 0.9646992, -0.26335412), (-0.000043731285, 0.91552, -0.4022724), (0.000004167225, 0.91552037, -0.40227172), (-0.0000023626387, -0.9856844, -0.16860023), (-0.0000023626387, -0.9856844, -0.16860023), (-0.0000023626387, -0.9856844, -0.16860023), (-0.0000023626387, -0.9856844, -0.16860023), (-1, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0.000002197549, 1.7091337e-7), (-1, 0.0000021799474, 1.8712103e-7), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, -1.1055635e-9, 0), (1, 1.2041954e-7, 0), (1, -0.000008414731, 0.0000018492185), (1, -0.000008751243, 9.2460937e-7), (1, -0.00001752823, 0.0000022870927), (1, -0.000016829463, 0.000003698437), (1, -0.000016829463, 0.000003698437), (1, -0.000008751243, 9.2460937e-7), (1, -0.000008414731, 0.0000018492185), (1, 0, 0), (1, 1.2041954e-7, 0), (-1, 0.0000019449346, 1.6694817e-7), (-1, 0.0000021799474, 1.8712103e-7), (-1, 0.000002197549, 1.7091337e-7), (-1, 0.000003070402, 2.4050522e-7), (0.008712154, -0.026817346, 0.9996024), (-0.008712852, -0.026817568, 0.9996024), (9.124754e-10, 0, 1), (9.124754e-10, 0, 1), (-1, 0.0000019449346, 1.6694817e-7), (-1, 0.000003070402, 2.4050522e-7), (-1, 0, 0), (-1, 0, 0), (-8.790441e-9, 0, -1), (-8.790441e-9, 0, -1), (-8.790441e-9, 0, -1), (-8.790441e-9, 0, -1), (1, -1.1055635e-9, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-6.357586e-7, 0.35198995, 0.9360038), (-0.0000017371494, 0.013809037, 0.99990463), (0.0008105941, 0.013813235, 0.9999042), (0.0000012407178, 0.35203063, 0.9359885), (0.000002585862, 0.70704585, 0.7071677), (-6.357586e-7, 0.35198995, 0.9360038), (0.0000012407178, 0.35203063, 0.9359885), (0.0000025858596, 0.70704526, 0.70716834), (0.0000027617202, 0.9416779, 0.33651537), (0.000002585862, 0.70704585, 0.7071677), (0.0000025858596, 0.70704526, 0.70716834), (-4.071626e-7, 0.94167745, 0.33651695), (-0.00058738835, 0.997892, 0.064894795), (0.0000027617202, 0.9416779, 0.33651537), (-4.071626e-7, 0.94167745, 0.33651695), (0.0000014682009, 0.99789244, 0.06489117), (-7.4505806e-7, 0.0047606793, 0.9999887), (0.0008105941, 0.013813235, 0.9999042), (-0.0000017371494, 0.013809037, 0.99990463), (-5.309018e-7, 0.00476104, 0.9999887), (-0.0000011754032, -0.47574216, 0.8795848), (-0.0000011754032, -0.47574216, 0.8795848), (-7.4505806e-7, 0.0047606793, 0.9999887), (-5.309018e-7, 0.00476104, 0.9999887), (0.0000011422229, 0.47583634, -0.8795339), (6.068707e-7, 0.012232721, -0.9999252), (5.168795e-7, 0.012233004, -0.9999252), (0.0000011422229, 0.47583634, -0.8795339), (5.168795e-7, 0.012233004, -0.9999252), (6.068707e-7, 0.012232721, -0.9999252), (-3.3848727e-7, -0.007012911, -0.99997544), (1.1240141e-7, -0.0070122555, -0.9999753), (-0.0000023686432, -0.99810493, -0.061533324), (0.00002197181, -0.99810493, -0.061533354), (-0.0000021985452, -0.9238815, -0.38267866), (-0.0000021985454, -0.92388165, -0.38267842), (-0.0000021985454, -0.92388165, -0.38267842), (-0.0000021985452, -0.9238815, -0.38267866), (-0.0000020168227, -0.7071335, -0.70708), (-0.000002016823, -0.7071339, -0.70707977), (-0.000002016823, -0.7071339, -0.70707977), (-0.0000020168227, -0.7071335, -0.70708), (-0.0000013646146, -0.3827072, -0.92386967), (-0.0000013646181, -0.3827082, -0.92386925), (-0.0000013646181, -0.3827082, -0.92386925), (-0.0000013646146, -0.3827072, -0.92386967), (1.1240141e-7, -0.0070122555, -0.9999753), (-3.3848727e-7, -0.007012911, -0.99997544), (0.99983203, -0.013485234, -0.012414946), (0.9998267, -0.013700657, -0.012602145), (0.9998503, -0.013748186, -0.010510874), (0.9998503, -0.013748186, -0.010510874), (0.9998503, -0.013748186, -0.010510874), (0.9998503, -0.013748186, -0.010510874), (0.9998503, -0.013748186, -0.010510874), (0.99985254, -0.013586461, -0.010499371), (-0.99983203, -0.013476823, -0.012423258), (-0.99621576, 0.08330204, -0.024798753), (-0.9989692, 0.043989882, -0.011201228), (-0.99985296, -0.013606971, -0.010441758), (-0.99621576, 0.08330204, -0.024798753), (-0.9951907, 0.09220001, -0.033085383), (-0.9989692, 0.043989882, -0.011201228), (-0.99983203, -0.013476823, -0.012423258), (-0.99985296, -0.013606971, -0.010441758), (-0.9998503, -0.013743402, -0.010510691), (-0.9998503, -0.013743402, -0.010510691), (-0.9998503, -0.013743402, -0.010510691), (-0.9998503, -0.013743402, -0.010510691), (-0.9998503, -0.013743402, -0.010510691), (-0.99982667, -0.013700531, -0.012601267), (0.99983203, -0.013485234, -0.012414946), (0.99985254, -0.013586461, -0.010499371), (0.9989658, 0.04406758, -0.011199359), (0.99621737, 0.08328083, -0.02480325), (0.99621737, 0.08328083, -0.02480325), (0.9989658, 0.04406758, -0.011199359), (0.99518967, 0.09219907, -0.03311825), (-0.00058738835, 0.997892, 0.064894795), (0.0000014682009, 0.99789244, 0.06489117), (-9.930227e-8, 0.99724966, 0.074115224), (0.0004932017, 0.99724936, 0.074117646), (-3.8254075e-7, -0.96743166, 0.25313237), (0.0013952071, -0.9674289, 0.2531387), (-0.0000024018584, -0.9738727, 0.22709484), (-0.0000024018584, -0.9738727, 0.22709484), (0.00010041265, 0.9646997, -0.26335248), (0.0000023104403, 0.97033405, -0.24176817), (0.0000023104403, 0.97033405, -0.24176817), (0.0000025970955, 0.9646992, -0.26335412), (-0.0000023783928, -0.9983953, -0.056627717), (0.00002197181, -0.99810493, -0.061533354), (-0.0000023686432, -0.99810493, -0.061533324), (-0.0000023783928, -0.9983953, -0.056627717), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0.000002197549, 1.7091337e-7), (-1, 0, 0), (-1, 0, 0), (-1, 0.0000026303924, 1.8370608e-7), (1, 1.2041954e-7, 0), (1, -1.1055635e-9, 0), (1, -3.399366e-9, 0), (1, -3.399366e-9, 0), (1, -3.399366e-9, 0), (1, -3.399366e-9, 0), (1, -3.399366e-9, 0), (1, 1.9505538e-7, 0), (1, -0.00001752823, 0.0000022870927), (1, -0.000008751243, 9.2460937e-7), (1, -0.0000015376486, 0), (1, 1.2041954e-7, 0), (1, 1.9505538e-7, 0), (1, -0.0000015376486, 0), (1, -0.000008751243, 9.2460937e-7), (-1, 0.000002197549, 1.7091337e-7), (-1, 0.0000026303924, 1.8370608e-7), (-1, 0.0000044303015, 3.0941138e-7), (-1, 0.0000044303015, 3.0941138e-7), (-1, 0.0000044303015, 3.0941138e-7), (-1, 0.0000044303015, 3.0941138e-7), (-1, 0.0000044303015, 3.0941138e-7), (-1, 0.000003070402, 2.4050522e-7), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.000154, 0.015229, -0.841603), (0.000163, 0.015229, -0.841603), (0.000154, 0.015237, -0.841603), (0.000163, 0.015237, -0.841603), (0.000154, 0.015229, -0.841603), (0.000163, 0.015229, -0.841603), (0.000154, 0.015237, -0.841603), (0.000163, 0.015237, -0.841603), (0.000154, 0.015229, -0.841603), (0.000163, 0.015229, -0.841603), (0.000154, 0.015237, -0.841603), (0.000163, 0.015237, -0.841603), (0.000154, 0.015229, -0.841603), (0.000163, 0.015229, -0.841603), (0.000154, 0.015237, -0.841603), (0.000163, 0.015237, -0.841603), (0.000154, 0.015229, -0.841603), (0.000163, 0.015229, -0.841603), (0.000154, 0.015237, -0.841603), (0.000163, 0.015237, -0.841603), (0.000154, 0.015229, -0.841603), (0.000163, 0.015229, -0.841603), (0.000154, 0.015237, -0.841603), (0.000163, 0.015237, -0.841603), (0.000154, 0.015229, -0.841603), (0.000163, 0.015229, -0.841603), (0.000154, 0.015237, -0.841603), (0.000163, 0.015237, -0.841603), (-0.446718, 0.119724, 0.14523), (-0.027593, 0.119722, 0.14523), (-0.446718, 0.057354, -0.083298), (-0.446718, 0.052916, -0.085699), (-0.027594, 0.052915, -0.085699), (-0.027594, 0.057353, -0.083298), (-0.446718, 0.119724, 0.151774), (-0.446718, 0.057354, 0.151774), (-0.446718, 0.052916, 0.151774), (-0.446719, -0.173476, 0.151774), (-0.027594, 0.057353, 0.151774), (-0.027593, 0.119722, 0.151774), (-0.027594, 0.052915, 0.151774), (-0.027594, -0.173477, 0.151774), (-0.027594, -0.140434, -0.085699), (-0.027594, -0.158766, -0.067367), (-0.446719, -0.158765, -0.067367), (-0.446719, -0.140433, -0.085699), (-0.446719, -0.15737, -0.074382), (-0.027594, -0.157371, -0.074382), (-0.446719, -0.153396, -0.080329), (-0.027594, -0.153397, -0.080329), (-0.446719, -0.147448, -0.084304), (-0.027594, -0.14745, -0.084304), (-0.442164, 0.112224, 0.147464), (-0.032147, 0.112223, 0.147464), (-0.034663, 0.053193, -0.078777), (-0.439649, 0.053194, -0.078777), (-0.031998, -0.151003, -0.065931), (-0.034556, -0.167325, 0.152826), (-0.439757, -0.167324, 0.152826), (-0.442315, -0.151002, -0.065931), (-0.034663, 0.051407, -0.079743), (-0.439649, 0.051408, -0.079743), (-0.436873, 0.057354, 0.151774), (-0.439756, 0.113482, 0.151774), (-0.436873, 0.052916, 0.151774), (-0.032066, -0.150106, -0.071373), (-0.032066, -0.147837, -0.074769), (-0.032066, -0.14444, -0.077038), (-0.032014, -0.139661, -0.07785), (-0.037439, 0.052915, 0.151774), (-0.034555, 0.113481, 0.151774), (-0.037439, 0.057353, 0.151774), (-0.442299, -0.13966, -0.07785), (-0.442247, -0.144439, -0.077038), (-0.442247, -0.147835, -0.074769), (-0.442247, -0.150105, -0.071373), (-0.437436, 0.05261, 0.131809), (-0.440385, -0.163318, 0.131809), (-0.036876, 0.052609, 0.131809), (-0.03687, 0.056501, 0.131809), (-0.03257, 0.102299, 0.131809), (-0.033928, -0.163319, 0.131809), (-0.437441, 0.056502, 0.131809), (-0.441741, 0.1023, 0.131809), (-0.446718, 0.11095, 0.131809), (-0.027593, 0.110949, 0.131809), (-0.027594, -0.170063, 0.131809), (-0.446719, -0.170062, 0.131809), (-0.446718, 0.057354, 0.131809), (-0.446718, 0.052916, 0.131809), (-0.027594, 0.052915, 0.131809), (-0.027594, 0.057353, 0.131809), (-0.446719, -0.185924, 0.151774), (-0.027594, -0.185925, 0.151774), (-0.027594, -0.18251, 0.131809), (-0.446719, -0.182509, 0.131809)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-170.84894, -110.532585), (-170.84894, -110.53267), (-170.84885, -110.53267), (-170.84885, -110.532585), (-170.27783, 0.749189), (-170.27783, -0.673803), (-170.26288, -0.665446), (-170.26288, 0.740832), (-171.14848, 0.701595), (-171.16837, 0.724124), (-171.16837, -0.632228), (-171.14848, -0.609698), (-170.23973, 0.701595), (-170.21953, 0.724124), (-170.42136, 0.724124), (-170.42136, 0.692263), (-170.42136, 0.692263), (-170.42136, 0.724124), (-170.43573, 0.724124), (-170.43573, 0.692263), (-171.14848, -0.609698), (-171.16837, -0.632228), (-170.43573, -0.632228), (-170.43573, -0.600366), (-170.42136, -0.600366), (-170.42136, -0.632228), (-170.21953, -0.632228), (-170.23973, -0.609698), (-170.43573, -0.600366), (-170.43573, -0.632228), (-170.42136, -0.632228), (-170.42136, -0.600366), (-170.43573, 0.692263), (-170.43573, 0.724124), (-171.16837, 0.724124), (-171.14848, 0.701595), (-170.23973, -0.609698), (-170.21953, -0.632228), (-170.21953, 0.724124), (-170.23973, 0.701595), (-170.42448, 0.766123), (-170.44696, 0.766123), (-170.44696, -0.674226), (-170.42448, -0.674226), (-170.09798, 0.932185), (-170.16599, 0.919232), (-170.16599, 0.220964), (-170.1014, 0.219975), (-170.14487, 0.750699), (-170.20946, 0.747942), (-170.20946, 0.735356), (-170.14487, 0.736346), (-170.14487, 0.750699), (-170.14487, 0.932219), (-170.15884, 0.928149), (-170.20946, 0.896054), (-170.20946, 0.747942), (-170.14148, 0.024083), (-170.14487, 0.736346), (-170.20946, 0.735356), (-170.20946, 0.037037), (-170.1014, 0.205623), (-170.1014, 0.219975), (-170.16599, 0.220964), (-170.16599, 0.20838), (-170.1014, 0.205623), (-170.16599, 0.20838), (-170.16599, 0.060278), (-170.11533, 0.028186), (-170.1014, 0.024116), (-170.21935, 0.69709), (-170.28786, 0.695042), (-170.28786, -0.626109), (-170.21935, -0.628157), (-170.27783, -0.673803), (-170.27783, 0.749189), (-170.33215, 0.747722), (-170.33215, -0.672335), (-170.37837, -0.674226), (-170.37837, 0.766123), (-170.42448, 0.766123), (-170.42448, -0.674226), (-170.40219, 0.727827), (-170.40219, -0.635931), (-170.33719, -0.635931), (-170.33719, 0.727827), (-170.17763, 0.235369), (-170.17763, 0.436895), (-170.19878, 0.436895), (-170.24214, 0.408546), (-170.24214, 0.235369), (-170.24214, 0.221029), (-170.17763, 0.221029), (-170.17763, 0.235369), (-170.24214, 0.235369), (-170.13467, -0.334849), (-170.13467, 0.3967), (-170.19917, 0.385667), (-170.19917, -0.334849), (-170.13467, -0.349191), (-170.19917, -0.349191), (-170.19917, -0.522376), (-170.15579, -0.550727), (-170.13467, -0.550727), (-170.19917, -0.349191), (-170.13467, -0.349191), (-170.13467, -0.334849), (-170.19917, -0.334849), (-170.17763, -0.51048), (-170.17763, 0.221029), (-170.24214, 0.221029), (-170.24214, -0.499448), (-171.16837, -0.632228), (-171.16837, 0.724124), (-171.20865, 0.724124), (-171.20865, -0.632228), (-170.17763, -0.51048), (-170.24214, -0.499448), (-170.24214, -0.539668), (-170.17763, -0.5507), (-170.35365, 0.722995), (-170.35365, -0.631099), (-170.31343, -0.631099), (-170.31343, 0.722995), (-170.19917, 0.385667), (-170.13467, 0.3967), (-170.13467, 0.436923), (-170.19917, 0.42589), (-143.95569, -107.3105), (-143.95569, -113.009964), (-138.83612, -113.009964), (-138.83612, -107.3105), (-118.5394, -108.98873), (-118.5394, -112.8919), (-115.04002, -112.8919), (-115.04002, -108.98873), (-88.71502, -110.12652), (-88.71502, -113.31285), (-85.85206, -113.31285), (-85.85206, -110.12652), (-68.866554, -111.45752), (-68.866554, -111.45753), (-68.86655, -111.45753), (-68.86655, -111.45752), (-71.44027, -0.661312), (-71.42575, -0.661468), (-71.42575, 0.585117), (-71.44027, 0.584961), (-71.45059, -0.661312), (-71.44027, -0.661312), (-71.44027, 0.584961), (-71.45059, 0.584961), (-71.45749, -0.661312), (-71.45059, -0.661312), (-71.45059, 0.584961), (-71.45749, 0.584961), (-70.920654, -1.08163), (-70.90422, -1.081424), (-70.90422, 0.157623), (-70.920654, 0.15783), (-70.84522, 0.577069), (-71.42575, 0.585117), (-71.42575, -0.661468), (-70.84522, -0.65342), (-70.8398, -0.65342), (-70.8398, 0.577069), (-70.84522, 0.577069), (-70.84522, -0.65342), (-72.20315, -1.097224), (-72.18959, -1.097224), (-72.18959, 0.182438), (-72.20315, 0.182438), (-72.18959, 0.182438), (-72.18959, -1.097224), (-71.599266, -1.097224), (-71.599266, 0.182438), (-71.94337, -1.090415), (-71.94337, 0.175629), (-71.96456, 0.175629), (-71.96456, -1.090415), (-71.547554, -1.097224), (-71.547554, 0.182438), (-71.559685, 0.182438), (-71.559685, -1.097224), (-71.559685, -1.097224), (-71.559685, 0.182438), (-71.57784, 0.182438), (-71.57784, -1.097224), (-71.57784, -1.097224), (-71.57784, 0.182438), (-71.599266, 0.182438), (-71.599266, -1.097224), (-71.55772, -0.062674), (-71.55772, 0.58904), (-72.15454, 0.551868), (-72.17096, 0.54916), (-72.18121, 0.54231), (-72.188065, 0.53206), (-72.19051, 0.517635), (-72.19623, -0.059047), (-71.33482, 0.439067), (-71.33482, 0.450813), (-71.97041, 0.440831), (-71.97333, 0.43544), (-71.33482, 0.450813), (-71.33482, 0.589042), (-71.97041, 0.440831), (-71.33482, 0.439067), (-71.97333, 0.43544), (-71.96762, -0.141245), (-71.96517, -0.155669), (-71.95832, -0.165919), (-71.94807, -0.172769), (-71.93164, -0.175478), (-71.33482, -0.21265), (-71.55772, -0.062674), (-72.19623, -0.059047), (-72.193306, -0.064438), (-71.55772, -0.074421), (-71.55772, -0.074421), (-72.193306, -0.064438), (-71.55772, -0.212648), (-70.920654, -1.08163), (-70.920654, 0.15783), (-71.517975, 0.151998), (-71.517975, -1.075798), (-71.04431, -0.655261), (-71.04431, 0.595797), (-71.68819, 0.5894), (-71.68819, -0.648863), (-71.76083, -1.099307), (-71.10194, -1.099307), (-71.10194, 0.184521), (-71.76083, 0.184521), (-71.34172, 0.175629), (-71.94337, 0.175629), (-71.94337, -1.090415), (-71.34172, -1.090415), (-71.26298, 0.166919), (-71.26298, 0.328635), (-71.912025, 0.166919), (-71.26298, 0.153527), (-71.26298, 0.166919), (-71.912025, 0.166919), (-71.91927, 0.153527), (-71.491394, -0.344166), (-71.491394, 0.328636), (-72.09238, 0.29455), (-72.11354, 0.29034), (-72.131485, 0.278349), (-72.14348, 0.260404), (-72.14769, 0.239237), (-72.14769, -0.344166), (-71.491394, -0.519274), (-71.491394, -0.357557), (-72.14044, -0.357557), (-71.491394, -0.344166), (-72.14769, -0.344166), (-72.14044, -0.357557), (-71.491394, -0.357557), (-71.26298, 0.153527), (-71.91927, 0.153527), (-71.91927, -0.429874), (-71.91506, -0.451041), (-71.90307, -0.468986), (-71.885124, -0.480977), (-71.86396, -0.485187), (-71.26298, -0.519273), (5.646933, -120.60234), (7.358486, -120.60234), (7.358486, -118.890785), (5.646933, -118.890785), (-5.253075, -117.08902), (-3.54152, -117.08902), (-3.54152, -115.377464), (-5.253075, -115.377464)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_FridgeDrawer3C6_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]
                rel material:binding = </root/_materials/M_FridgeDrawer3C6_0>
            }

            def GeomSubset "M_FridgeDrawer3C6_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [31]
                rel material:binding = </root/_materials/M_FridgeDrawer3C6_1>
            }

            def GeomSubset "M_FridgeDrawer3C6_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [32]
                rel material:binding = </root/_materials/M_FridgeDrawer3C6_2>
            }

            def GeomSubset "M_FridgeDrawer3C6_3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [33]
                rel material:binding = </root/_materials/M_FridgeDrawer3C6_3>
            }

            def GeomSubset "M_FridgeDrawer3C6_4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62]
                rel material:binding = </root/_materials/M_FridgeDrawer3C6_4>
            }

            def GeomSubset "M_FridgeDrawer3C6_5" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [63]
                rel material:binding = </root/_materials/M_FridgeDrawer3C6_5>
            }

            def GeomSubset "M_FridgeDrawer3C6_6" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [64]
                rel material:binding = </root/_materials/M_FridgeDrawer3C6_6>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer3C6_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer3C6_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.1834451, 0.21323532, 0.21323532)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer3C6_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge.tga@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer3C6_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer3C6_1"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer3C6_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer3C6_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer3C6_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer3C6_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer3C6_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer3C6_2"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer3C6_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer3C6_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer3C6_2/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer3C6_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer3C6_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer3C6_3"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer3C6_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.8014706, 0.8014706, 0.8014706)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer3C6_3/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer3C6_3/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer3C6_4"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer3C6_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.39705884, 0.39705884, 0.39705884)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }

        def Material "M_FridgeDrawer3C6_5"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer3C6_5/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer3C6_5/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer3C6_5/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Decal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer3C6_5/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Decal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer3C6_5/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer3C6_6"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer3C6_6/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer3C6_6/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer3C6_6/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Readout_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer3C6_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer3C6_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

