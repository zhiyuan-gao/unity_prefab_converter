#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "FridgeDrawer2_16_FridgeDrawer2C4_2_GeomSubset_6"
    {
        def Mesh "FridgeDrawer2_16_FridgeDrawer2C4_2_GeomSubset_6"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4]
            int[] faceVertexIndices = [24, 25, 27, 26]
            rel material:binding = </root/_materials/M_FridgeDrawer2C4_6>
            normal3f[] normals = [(0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.00016, 0.023406, -1.093784), (0.000169, 0.023406, -1.093784), (0.00016, 0.023416, -1.093784), (0.000169, 0.023416, -1.093784), (0.00016, 0.023406, -1.093784), (0.000169, 0.023406, -1.093784), (0.00016, 0.023416, -1.093784), (0.000169, 0.023416, -1.093784), (0.00016, 0.023406, -1.093784), (0.000169, 0.023406, -1.093784), (0.00016, 0.023416, -1.093784), (0.000169, 0.023416, -1.093784), (0.00016, 0.023406, -1.093784), (0.000169, 0.023406, -1.093784), (0.00016, 0.023416, -1.093784), (0.000169, 0.023416, -1.093784), (0.00016, 0.023406, -1.093784), (0.000169, 0.023406, -1.093784), (0.00016, 0.023416, -1.093784), (0.000169, 0.023416, -1.093784), (0.00016, 0.023406, -1.093784), (0.000169, 0.023406, -1.093784), (0.00016, 0.023416, -1.093784), (0.000169, 0.023416, -1.093784), (0.00016, 0.023406, -1.093784), (0.000169, 0.023406, -1.093784), (0.00016, 0.023416, -1.093784), (0.000169, 0.023416, -1.093784), (0.028964, 0.144465, 0.364119), (0.464277, 0.144465, 0.364119), (0.028964, 0.072208, 0.242441), (0.028964, 0.067066, 0.239378), (0.464277, 0.067066, 0.239378), (0.464277, 0.072208, 0.242441), (0.028964, 0.144465, 0.372465), (0.028964, 0.072208, 0.372465), (0.028964, 0.067066, 0.372465), (0.028964, -0.195217, 0.372465), (0.464277, 0.072208, 0.372465), (0.464277, 0.144465, 0.372465), (0.464277, 0.067066, 0.372465), (0.464277, -0.195217, 0.372465), (0.464277, -0.156936, 0.239378), (0.464277, -0.178174, 0.262758), (0.028964, -0.178174, 0.262758), (0.028964, -0.156936, 0.239378), (0.028964, -0.176557, 0.253811), (0.464277, -0.176557, 0.253811), (0.028964, -0.171954, 0.246226), (0.464277, -0.171954, 0.246226), (0.028964, -0.165063, 0.241158), (0.464277, -0.165063, 0.241158), (0.033693, 0.135777, 0.366968), (0.459547, 0.135777, 0.366968), (0.456934, 0.067389, 0.248207), (0.036306, 0.067389, 0.248207), (0.459703, -0.16918, 0.264589), (0.457046, -0.18809, 0.373807), (0.036194, -0.18809, 0.373807), (0.033537, -0.16918, 0.264589), (0.456934, 0.06532, 0.246974), (0.036306, 0.06532, 0.246974), (0.039189, 0.072208, 0.372465), (0.036194, 0.137235, 0.372465), (0.039189, 0.067066, 0.372465), (0.459632, -0.168141, 0.257649), (0.459632, -0.165512, 0.253318), (0.459632, -0.161577, 0.250424), (0.459686, -0.15604, 0.249389), (0.454051, 0.067066, 0.372465), (0.457046, 0.137235, 0.372465), (0.454051, 0.072208, 0.372465), (0.033554, -0.15604, 0.249389), (0.033608, -0.161577, 0.250424), (0.033608, -0.165512, 0.253318), (0.033608, -0.168141, 0.257649), (0.038604, 0.066712, 0.347002), (0.035542, -0.183449, 0.347002), (0.454636, 0.066712, 0.347002), (0.454642, 0.071221, 0.347002), (0.459108, 0.124279, 0.347002), (0.457698, -0.183449, 0.347002), (0.038598, 0.071221, 0.347002), (0.034133, 0.124279, 0.347002), (0.028964, 0.134301, 0.347002), (0.464277, 0.134301, 0.347002), (0.464277, -0.191262, 0.347002), (0.028964, -0.191262, 0.347002), (0.028964, 0.072208, 0.347002), (0.028964, 0.067066, 0.347002), (0.464277, 0.067066, 0.347002), (0.464277, 0.072208, 0.347002), (0.028964, -0.209638, 0.372465), (0.464277, -0.209638, 0.372465), (0.464277, -0.205682, 0.347002), (0.028964, -0.205682, 0.347002)]
            bool[] primvars:sharp_face = [0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-5.253075, -117.08902), (-3.54152, -117.08902), (-3.54152, -115.377464), (-5.253075, -115.377464)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer2C4_6"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2C4_6/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer2C4_6/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2C4_6/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Readout_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2C4_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2C4_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

