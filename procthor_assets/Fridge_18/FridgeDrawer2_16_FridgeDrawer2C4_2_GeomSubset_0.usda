#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "FridgeDrawer2_16_FridgeDrawer2C4_2_GeomSubset_0"
    {
        def Mesh "FridgeDrawer2_16_FridgeDrawer2C4_2_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 52, 53, 70, 63, 58, 37, 41, 57, 63, 34, 35, 62, 62, 35, 36, 64, 57, 41, 40, 69, 71, 38, 39, 70, 69, 40, 38, 71, 64, 36, 37, 58, 70, 39, 34, 63, 28, 34, 39, 29, 58, 77, 76, 64, 71, 79, 78, 69, 71, 70, 53, 80, 79, 57, 69, 78, 81, 62, 64, 76, 82, 62, 82, 83, 52, 63, 77, 58, 57, 81, 53, 52, 83, 80, 85, 84, 28, 29, 95, 94, 93, 92, 35, 34, 28, 84, 88, 89, 36, 35, 88, 40, 41, 86, 90, 38, 91, 85, 29, 39, 91, 38, 40, 90, 37, 36, 89, 87, 41, 37, 92, 93, 37, 87, 95, 92, 87, 86, 94, 95, 86, 41, 93, 94]
            rel material:binding = </root/_materials/M_FridgeDrawer2C4_0>
            normal3f[] normals = [(0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (-0.000003093388, 0.9459178, -0.32440624), (0.0000053402036, 0.94591725, -0.32440805), (0, 0.96657836, -0.25637144), (0, 0.96657836, -0.25637144), (-0.044795588, 0.07770129, -0.9959698), (-0.029800102, 0.059598863, -0.99777746), (0.029797966, 0.05959601, -0.99777776), (0.04479657, 0.07770648, -0.9959694), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.0024033412, -0.00010284642, -0.9999972), (-0.00083189085, -0.0000026243506, -0.9999996), (0.04479657, 0.07770648, -0.9959694), (0.029797966, 0.05959601, -0.99777776), (0.0023992956, -0.00010281801, -0.99999726), (0.00082793087, -0.000002459914, -0.9999997), (3.863244e-7, 0, -1), (3.9215e-7, 0, -1), (3.921845e-7, 0, -1), (3.9593178e-7, 0, -1), (0.00082793087, -0.000002459914, -0.9999997), (0.0023992956, -0.00010281801, -0.99999726), (3.9215e-7, 0, -1), (3.863244e-7, 0, -1), (-0.00083189085, -0.0000026243506, -0.9999996), (-0.0024033412, -0.00010284642, -0.9999972), (-0.029800102, 0.059598863, -0.99777746), (-0.044795588, 0.07770129, -0.9959698), (3.9593178e-7, 0, -1), (3.921845e-7, 0, -1), (0, 0, -1), (0, 0, -1), (-0.0001021539, -0.9840227, 0.17804317), (0, -1, 0), (0, -1, 0), (0, -0.9840227, 0.17804313), (0.99962366, 0.012047481, 0.02464572), (0.9996333, 0.01239593, 0.02407559), (0.9997174, -0.0028697755, 0.023600454), (0.999733, -0.00035911048, 0.023106258), (-0.9995584, -0.008405383, 0.028500684), (-0.99942833, -0.010603169, 0.032104477), (-0.99971974, -0.0028696046, 0.023501508), (-0.99973303, -0.00035847677, 0.023105947), (-0.9995584, -0.008405383, 0.028500684), (-0.99381834, -0.07919778, 0.077799305), (-0.99381834, -0.07919778, 0.077799305), (-0.9945054, -0.08020174, 0.06728098), (-0.99942833, -0.010603169, 0.032104477), (-0.99962366, 0.012047631, 0.024645792), (-0.99973303, -0.00035847677, 0.023105947), (-0.99971974, -0.0028696046, 0.023501508), (-0.99962705, 0.0121222725, 0.024469122), (0.9995586, -0.008397639, 0.028496202), (0.999733, -0.00035911048, 0.023106258), (0.9997174, -0.0028697755, 0.023600454), (0.99942845, -0.01059616, 0.0321023), (0.9995586, -0.008397639, 0.028496202), (0.99942845, -0.01059616, 0.0321023), (0.99450326, -0.08019925, 0.0673153), (0.9938206, -0.07919064, 0.0777783), (0.9938206, -0.07919064, 0.0777783), (0, -0.98534113, -0.17059578), (0, -0.9853401, -0.17060143), (0, -0.9853401, -0.17060143), (0, -0.98534113, -0.1705958), (0.0000053402036, 0.94591725, -0.32440805), (-0.000003093388, 0.9459178, -0.32440624), (0, 0.8665844, -0.49903047), (0, 0.8665845, -0.49903044), (0, -0.8598283, 0.5105832), (0, -0.8598283, 0.5105832), (-0.0001021539, -0.9840227, 0.17804317), (0, -0.9840227, 0.17804313), (0, 0.9881453, 0.1535214), (0, 0.9881453, 0.1535214), (0, 0.9881453, 0.1535214), (0, 0.9881453, 0.1535214), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 4.0012377e-8, 0), (-1, 4.0012377e-8, 0), (-1, 0, 0), (-1, 0, 0), (-1, 4.0012377e-8, 0), (1, 0, 0), (1, 0, 0), (1, 2.6972329e-9, 0), (1, 2.1696203e-9, 0), (1, 6.641329e-8, 0), (1, 3.3206646e-8, 0), (1, 8.9070454e-8, 0), (0.99999994, 1.3282659e-7, 0), (0.99999994, 1.3282659e-7, 0), (1, 3.3206646e-8, 0), (1, 6.641329e-8, 0), (1, 0, 0), (1, 2.1696203e-9, 0), (-1, 0, 0), (-1, 0, 0), (-1, 4.0012377e-8, 0), (-1, 0, 0), (0.029797966, 0.05959601, -0.99777776), (-0.029800102, 0.059598863, -0.99777746), (0, 0, -0.99999994), (0, 0, -0.99999994), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 2.6972329e-9, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.00016, 0.023406, -1.093784), (-0.000169, 0.023406, -1.093784), (-0.00016, 0.023416, -1.093784), (-0.000169, 0.023416, -1.093784), (-0.00016, 0.023406, -1.093784), (-0.000169, 0.023406, -1.093784), (-0.00016, 0.023416, -1.093784), (-0.000169, 0.023416, -1.093784), (-0.00016, 0.023406, -1.093784), (-0.000169, 0.023406, -1.093784), (-0.00016, 0.023416, -1.093784), (-0.000169, 0.023416, -1.093784), (-0.00016, 0.023406, -1.093784), (-0.000169, 0.023406, -1.093784), (-0.00016, 0.023416, -1.093784), (-0.000169, 0.023416, -1.093784), (-0.00016, 0.023406, -1.093784), (-0.000169, 0.023406, -1.093784), (-0.00016, 0.023416, -1.093784), (-0.000169, 0.023416, -1.093784), (-0.00016, 0.023406, -1.093784), (-0.000169, 0.023406, -1.093784), (-0.00016, 0.023416, -1.093784), (-0.000169, 0.023416, -1.093784), (-0.00016, 0.023406, -1.093784), (-0.000169, 0.023406, -1.093784), (-0.00016, 0.023416, -1.093784), (-0.000169, 0.023416, -1.093784), (-0.028964, 0.144465, 0.364119), (-0.464277, 0.144465, 0.364119), (-0.028964, 0.072208, 0.242441), (-0.028964, 0.067066, 0.239378), (-0.464277, 0.067066, 0.239378), (-0.464277, 0.072208, 0.242441), (-0.028964, 0.144465, 0.372465), (-0.028964, 0.072208, 0.372465), (-0.028964, 0.067066, 0.372465), (-0.028964, -0.195217, 0.372465), (-0.464277, 0.072208, 0.372465), (-0.464277, 0.144465, 0.372465), (-0.464277, 0.067066, 0.372465), (-0.464277, -0.195217, 0.372465), (-0.464277, -0.156936, 0.239378), (-0.464277, -0.178174, 0.262758), (-0.028964, -0.178174, 0.262758), (-0.028964, -0.156936, 0.239378), (-0.028964, -0.176557, 0.253811), (-0.464277, -0.176557, 0.253811), (-0.028964, -0.171954, 0.246226), (-0.464277, -0.171954, 0.246226), (-0.028964, -0.165063, 0.241158), (-0.464277, -0.165063, 0.241158), (-0.033693, 0.135777, 0.366968), (-0.459547, 0.135777, 0.366968), (-0.456934, 0.067389, 0.248207), (-0.036306, 0.067389, 0.248207), (-0.459703, -0.169181, 0.264589), (-0.457046, -0.18809, 0.373807), (-0.036194, -0.18809, 0.373807), (-0.033537, -0.169181, 0.264589), (-0.456934, 0.06532, 0.246974), (-0.036306, 0.06532, 0.246974), (-0.039189, 0.072208, 0.372465), (-0.036194, 0.137235, 0.372465), (-0.039189, 0.067066, 0.372465), (-0.459632, -0.168141, 0.257649), (-0.459632, -0.165512, 0.253318), (-0.459632, -0.161577, 0.250424), (-0.459686, -0.15604, 0.249389), (-0.454051, 0.067066, 0.372465), (-0.457046, 0.137235, 0.372465), (-0.454051, 0.072208, 0.372465), (-0.033554, -0.15604, 0.249389), (-0.033608, -0.161577, 0.250424), (-0.033608, -0.165512, 0.253318), (-0.033608, -0.168141, 0.257649), (-0.038604, 0.066712, 0.347002), (-0.035542, -0.183449, 0.347002), (-0.454636, 0.066712, 0.347002), (-0.454642, 0.071221, 0.347002), (-0.459108, 0.124279, 0.347002), (-0.457698, -0.183449, 0.347002), (-0.038598, 0.071221, 0.347002), (-0.034133, 0.124279, 0.347002), (-0.028964, 0.134301, 0.347002), (-0.464277, 0.134301, 0.347002), (-0.464277, -0.191262, 0.347002), (-0.028964, -0.191262, 0.347002), (-0.028964, 0.072208, 0.347002), (-0.028964, 0.067066, 0.347002), (-0.464277, 0.067066, 0.347002), (-0.464277, 0.072208, 0.347002), (-0.028964, -0.209638, 0.372465), (-0.464277, -0.209638, 0.372465), (-0.464277, -0.205682, 0.347002), (-0.028964, -0.205682, 0.347002)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-169.52118, -113.22002), (-169.5211, -113.22002), (-169.5211, -113.21994), (-169.52118, -113.21994), (-170.19357, 0.663223), (-170.19357, -0.59836), (-170.17729, -0.590952), (-170.17729, 0.655814), (-171.12007, 0.628538), (-171.14, 0.648741), (-171.14, -0.567574), (-171.12007, -0.547371), (-170.21104, 0.628538), (-170.19087, 0.648741), (-170.39275, 0.648741), (-170.39275, 0.620169), (-170.39275, 0.620169), (-170.39275, 0.648741), (-170.40714, 0.648741), (-170.40714, 0.620169), (-171.12007, -0.547371), (-171.14, -0.567574), (-170.40714, -0.567574), (-170.40714, -0.539002), (-170.39275, -0.539002), (-170.39275, -0.567574), (-170.19087, -0.567574), (-170.21104, -0.547371), (-170.40714, -0.539002), (-170.40714, -0.567574), (-170.39275, -0.567574), (-170.39275, -0.539002), (-170.40714, 0.620169), (-170.40714, 0.648741), (-171.14, 0.648741), (-171.12007, 0.628538), (-170.21104, -0.547371), (-170.19087, -0.567574), (-170.19087, 0.648741), (-170.21104, 0.628538), (-170.36433, 0.680077), (-170.38884, 0.680077), (-170.38884, -0.598909), (-170.36433, -0.598909), (-169.96442, 0.399659), (-170.03925, 0.386711), (-170.03925, -0.31129), (-169.96817, -0.312279), (-169.91359, 0.218324), (-169.98465, 0.215568), (-169.98465, 0.202982), (-169.91359, 0.203972), (-169.91359, 0.218324), (-169.91359, 0.399829), (-169.92892, 0.395759), (-169.98465, 0.363667), (-169.98465, 0.215568), (-169.90984, -0.508233), (-169.91359, 0.203972), (-169.98465, 0.202982), (-169.98465, -0.495279), (-169.96817, -0.326626), (-169.96817, -0.312279), (-170.03925, -0.31129), (-170.03925, -0.32387), (-169.96817, -0.326626), (-170.03925, -0.32387), (-170.03925, -0.471915), (-169.98349, -0.503995), (-169.96817, -0.508063), (-170.1237, 0.622392), (-170.199, 0.620559), (-170.199, -0.562069), (-170.1237, -0.563901), (-170.19357, -0.59836), (-170.19357, 0.663223), (-170.25272, 0.661922), (-170.25272, -0.597059), (-170.31404, -0.598909), (-170.31404, 0.680077), (-170.36433, 0.680077), (-170.36433, -0.598909), (-170.33467, 0.651273), (-170.33467, -0.570105), (-170.26323, -0.570105), (-170.26323, 0.651273), (-170.07243, 0.26288), (-170.07243, 0.464412), (-170.0957, 0.464412), (-170.14345, 0.436061), (-170.14345, 0.26288), (-170.14345, 0.248539), (-170.07243, 0.248539), (-170.07243, 0.26288), (-170.14345, 0.26288), (-170.01994, -0.307352), (-170.01994, 0.42421), (-170.09096, 0.413177), (-170.09096, -0.307352), (-170.01994, -0.321694), (-170.09096, -0.321694), (-170.09096, -0.494883), (-170.04323, -0.523234), (-170.01994, -0.523234), (-170.09096, -0.321694), (-170.01994, -0.321694), (-170.01994, -0.307352), (-170.09096, -0.307352), (-170.07243, -0.482991), (-170.07243, 0.248539), (-170.14345, 0.248539), (-170.14345, -0.471959), (-171.14, -0.567574), (-171.14, 0.648741), (-171.1803, 0.648741), (-171.1803, -0.567574), (-170.07243, -0.482991), (-170.14345, -0.471959), (-170.14345, -0.51218), (-170.07243, -0.523213), (-170.27611, 0.647466), (-170.27611, -0.566298), (-170.23589, -0.566298), (-170.23589, 0.647466), (-170.09096, 0.413177), (-170.01994, 0.42421), (-170.01994, 0.464433), (-170.09096, 0.4534)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer2C4_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2C4_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2C4_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge.tga@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2C4_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

