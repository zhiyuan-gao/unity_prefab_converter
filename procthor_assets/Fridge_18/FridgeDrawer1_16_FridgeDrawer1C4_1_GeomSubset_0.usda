#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "FridgeDrawer1_16_FridgeDrawer1C4_1_GeomSubset_0"
    {
        def Mesh "FridgeDrawer1_16_FridgeDrawer1C4_1_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 52, 53, 70, 63, 58, 37, 41, 57, 63, 34, 35, 62, 62, 35, 36, 64, 57, 41, 40, 69, 71, 38, 39, 70, 69, 40, 38, 71, 64, 36, 37, 58, 70, 39, 34, 63, 28, 34, 39, 29, 58, 77, 76, 64, 71, 79, 78, 69, 71, 70, 53, 80, 79, 57, 69, 78, 81, 62, 64, 76, 82, 62, 82, 83, 52, 63, 77, 58, 57, 81, 53, 52, 83, 80, 85, 84, 28, 29, 95, 94, 93, 92, 35, 34, 28, 84, 88, 89, 36, 35, 88, 40, 41, 86, 90, 38, 91, 85, 29, 39, 91, 38, 40, 90, 37, 36, 89, 87, 41, 37, 92, 93, 37, 87, 95, 92, 87, 86, 94, 95, 86, 41, 93, 94]
            rel material:binding = </root/_materials/M_FridgeDrawer1C4_0>
            normal3f[] normals = [(0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (-0.0000036238926, 0.9459172, -0.32440817), (0.0000052712858, 0.9459172, -0.3244081), (0, 0.96657836, -0.25637144), (0, 0.96657836, -0.25637144), (-0.04479404, 0.07770555, -0.99596953), (-0.029798284, 0.059595592, -0.99777776), (0.029798375, 0.059595667, -0.99777776), (0.044796575, 0.07770644, -0.9959694), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.002398897, -0.00010283443, -0.9999972), (-0.00082753226, -0.0000026150374, -0.9999997), (0.044796575, 0.07770644, -0.9959694), (0.029798375, 0.059595667, -0.99777776), (0.002399303, -0.00010281976, -0.99999726), (0.0008279383, -0.0000024639885, -0.9999997), (3.8632436e-7, 0, -1), (3.9215e-7, 0, -1), (3.9218463e-7, 0, -1), (3.9593172e-7, 0, -1), (0.0008279383, -0.0000024639885, -0.9999997), (0.002399303, -0.00010281976, -0.99999726), (3.9215e-7, 0, -1), (3.8632436e-7, 0, -1), (-0.00082753226, -0.0000026150374, -0.9999997), (-0.002398897, -0.00010283443, -0.9999972), (-0.029798284, 0.059595592, -0.99777776), (-0.04479404, 0.07770555, -0.99596953), (3.9593172e-7, 0, -1), (3.9218463e-7, 0, -1), (0, 0, -1), (0, 0, -1), (7.763816e-9, -0.9840226, 0.1780434), (0, -1, 0), (0, -1, 0), (0, -0.9840226, 0.1780434), (0.99962366, 0.012047349, 0.02464579), (0.9996332, 0.012394964, 0.024077728), (0.99971724, -0.0029027206, 0.023600534), (0.99973303, -0.00040236453, 0.023100546), (-0.9995583, -0.008405099, 0.028500259), (-0.99942833, -0.010603203, 0.03210432), (-0.99971974, -0.0028694253, 0.023501346), (-0.99973303, -0.0003586295, 0.023106234), (-0.9995583, -0.008405099, 0.028500259), (-0.9938185, -0.079197034, 0.07779928), (-0.9938185, -0.079197034, 0.07779928), (-0.99450535, -0.08020175, 0.067280926), (-0.99942833, -0.010603203, 0.03210432), (-0.99962366, 0.012047472, 0.02464572), (-0.99973303, -0.0003586295, 0.023106234), (-0.99971974, -0.0028694253, 0.023501346), (-0.99962586, 0.012067549, 0.024547843), (0.99955845, -0.0084023215, 0.028499749), (0.99973303, -0.00040236453, 0.023100546), (0.99971724, -0.0029027206, 0.023600534), (0.9994284, -0.010596495, 0.03210177), (0.99955845, -0.0084023215, 0.028499749), (0.9994284, -0.010596495, 0.03210177), (0.99450564, -0.08020215, 0.067275815), (0.99381906, -0.07920533, 0.07778263), (0.99381906, -0.07920533, 0.07778263), (0, -0.98534125, -0.17059538), (0, -0.98534036, -0.17060043), (0, -0.98534036, -0.17060043), (0, -0.98534113, -0.17059538), (0.0000052712858, 0.9459172, -0.3244081), (-0.0000036238926, 0.9459172, -0.32440817), (0, 0.8665845, -0.49903053), (0, 0.8665844, -0.49903053), (0, -0.8598283, 0.51058346), (0, -0.8598283, 0.51058346), (7.763816e-9, -0.9840226, 0.1780434), (0, -0.9840226, 0.1780434), (0, 0.98814535, 0.15352106), (0, 0.98814535, 0.15352106), (0, 0.98814535, 0.15352106), (0, 0.98814535, 0.15352106), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, -1.5171936e-9, 0), (1, -1.2204114e-9, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, -1.2204114e-9, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0.029798375, 0.059595667, -0.99777776), (-0.029798284, 0.059595592, -0.99777776), (0, 0, -1), (0, 0, -1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, -1.5171936e-9, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.00016, 0.023406, -1.093784), (-0.000169, 0.023406, -1.093784), (-0.00016, 0.023416, -1.093784), (-0.000169, 0.023416, -1.093784), (-0.00016, 0.023406, -1.093784), (-0.000169, 0.023406, -1.093784), (-0.00016, 0.023416, -1.093784), (-0.000169, 0.023416, -1.093784), (-0.00016, 0.023406, -1.093784), (-0.000169, 0.023406, -1.093784), (-0.00016, 0.023416, -1.093784), (-0.000169, 0.023416, -1.093784), (-0.00016, 0.023406, -1.093784), (-0.000169, 0.023406, -1.093784), (-0.00016, 0.023416, -1.093784), (-0.000169, 0.023416, -1.093784), (-0.00016, 0.023406, -1.093784), (-0.000169, 0.023406, -1.093784), (-0.00016, 0.023416, -1.093784), (-0.000169, 0.023416, -1.093784), (-0.00016, 0.023406, -1.093784), (-0.000169, 0.023406, -1.093784), (-0.00016, 0.023416, -1.093784), (-0.000169, 0.023416, -1.093784), (-0.00016, 0.023406, -1.093784), (-0.000169, 0.023406, -1.093784), (-0.00016, 0.023416, -1.093784), (-0.000169, 0.023416, -1.093784), (0.463973, 0.144465, 0.364119), (0.028659, 0.144465, 0.364119), (0.463973, 0.072208, 0.242441), (0.463973, 0.067066, 0.239378), (0.028659, 0.067066, 0.239378), (0.028659, 0.072208, 0.242441), (0.463973, 0.144465, 0.372465), (0.463973, 0.072208, 0.372465), (0.463973, 0.067066, 0.372465), (0.463973, -0.195217, 0.372465), (0.028659, 0.072208, 0.372465), (0.028659, 0.144465, 0.372465), (0.028659, 0.067066, 0.372465), (0.028659, -0.195217, 0.372465), (0.028659, -0.156936, 0.239378), (0.028659, -0.178174, 0.262758), (0.463973, -0.178174, 0.262758), (0.463973, -0.156936, 0.239378), (0.463973, -0.176557, 0.253811), (0.028659, -0.176557, 0.253811), (0.463973, -0.171954, 0.246226), (0.028659, -0.171954, 0.246226), (0.463973, -0.165063, 0.241158), (0.028659, -0.165063, 0.241158), (0.459243, 0.135777, 0.366968), (0.033389, 0.135777, 0.366968), (0.036002, 0.067389, 0.248207), (0.456631, 0.067389, 0.248207), (0.033233, -0.169181, 0.264589), (0.03589, -0.18809, 0.373807), (0.456742, -0.18809, 0.373807), (0.459399, -0.169181, 0.264589), (0.036002, 0.06532, 0.246974), (0.456631, 0.06532, 0.246974), (0.453747, 0.072208, 0.372465), (0.456742, 0.137235, 0.372465), (0.453747, 0.067066, 0.372465), (0.033304, -0.168141, 0.257649), (0.033304, -0.165512, 0.253318), (0.033304, -0.161577, 0.250424), (0.03325, -0.15604, 0.249389), (0.038885, 0.067066, 0.372465), (0.03589, 0.137235, 0.372465), (0.038885, 0.072208, 0.372465), (0.459382, -0.15604, 0.249389), (0.459328, -0.161577, 0.250424), (0.459328, -0.165512, 0.253318), (0.459328, -0.168141, 0.257649), (0.454332, 0.066712, 0.347002), (0.457394, -0.183449, 0.347002), (0.0383, 0.066712, 0.347002), (0.038294, 0.071221, 0.347002), (0.033828, 0.124279, 0.347002), (0.035238, -0.183449, 0.347002), (0.454337, 0.071221, 0.347002), (0.458804, 0.124279, 0.347002), (0.463973, 0.134301, 0.347002), (0.028659, 0.134301, 0.347002), (0.028659, -0.191262, 0.347002), (0.463973, -0.191262, 0.347002), (0.463973, 0.072208, 0.347002), (0.463973, 0.067066, 0.347002), (0.028659, 0.067066, 0.347002), (0.028659, 0.072208, 0.347002), (0.463973, -0.209638, 0.372465), (0.028659, -0.209638, 0.372465), (0.028659, -0.205682, 0.347002), (0.463973, -0.205682, 0.347002)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-169.52118, -113.22002), (-169.5211, -113.22002), (-169.5211, -113.21994), (-169.52118, -113.21994), (-170.19356, 0.663134), (-170.19356, -0.598271), (-170.17729, -0.590863), (-170.17729, 0.655726), (-171.1201, 0.628576), (-171.14001, 0.648781), (-171.14001, -0.567613), (-171.1201, -0.547408), (-170.21103, 0.628576), (-170.19083, 0.648781), (-170.39275, 0.648781), (-170.39275, 0.620207), (-170.39275, 0.620207), (-170.39275, 0.648781), (-170.40712, 0.648781), (-170.40712, 0.620207), (-171.1201, -0.547408), (-171.14001, -0.567613), (-170.40712, -0.567613), (-170.40712, -0.539039), (-170.39275, -0.539039), (-170.39275, -0.567613), (-170.19083, -0.567613), (-170.21103, -0.547408), (-170.40712, -0.539039), (-170.40712, -0.567613), (-170.39275, -0.567613), (-170.39275, -0.539039), (-170.40712, 0.620207), (-170.40712, 0.648781), (-171.14001, 0.648781), (-171.1201, 0.628576), (-170.21103, -0.547408), (-170.19083, -0.567613), (-170.19083, 0.648781), (-170.21103, 0.628576), (-170.36433, 0.680024), (-170.38882, 0.680024), (-170.38882, -0.598856), (-170.36433, -0.598856), (-169.96442, 0.399724), (-170.03925, 0.386773), (-170.03925, -0.311327), (-169.96817, -0.312316), (-169.91359, 0.21834), (-169.98463, 0.215584), (-169.98463, 0.202998), (-169.91359, 0.203987), (-169.91359, 0.21834), (-169.91359, 0.399856), (-169.92892, 0.395786), (-169.98463, 0.363692), (-169.98463, 0.215584), (-169.90984, -0.50826), (-169.91359, 0.203987), (-169.98463, 0.202998), (-169.98463, -0.495305), (-169.96817, -0.326665), (-169.96817, -0.312316), (-170.03925, -0.311327), (-170.03925, -0.323909), (-169.96817, -0.326665), (-170.03925, -0.323909), (-170.03925, -0.471975), (-169.98349, -0.504059), (-169.96817, -0.508128), (-170.1237, 0.622402), (-170.199, 0.620569), (-170.199, -0.562078), (-170.1237, -0.563911), (-170.19356, -0.598271), (-170.19356, 0.663134), (-170.25272, 0.661833), (-170.25272, -0.59697), (-170.31403, -0.598856), (-170.31403, 0.680024), (-170.36433, 0.680024), (-170.36433, -0.598856), (-170.33467, 0.651231), (-170.33467, -0.570063), (-170.26323, -0.570063), (-170.26323, 0.651231), (-170.07243, 0.262878), (-170.07243, 0.464408), (-170.0957, 0.464408), (-170.14345, 0.436057), (-170.14345, 0.262878), (-170.14345, 0.248537), (-170.07243, 0.248537), (-170.07243, 0.262878), (-170.14345, 0.262878), (-170.01994, -0.307322), (-170.01994, 0.42416), (-170.09096, 0.413128), (-170.09096, -0.307322), (-170.01994, -0.321661), (-170.09096, -0.321661), (-170.09096, -0.494831), (-170.04323, -0.52318), (-170.01994, -0.52318), (-170.09096, -0.321661), (-170.01994, -0.321661), (-170.01994, -0.307322), (-170.09096, -0.307322), (-170.07243, -0.482987), (-170.07243, 0.248537), (-170.14345, 0.248537), (-170.14345, -0.471955), (-171.14001, -0.567613), (-171.14001, 0.648781), (-171.18031, 0.648781), (-171.18031, -0.567613), (-170.07243, -0.482987), (-170.14345, -0.471955), (-170.14345, -0.512176), (-170.07243, -0.523209), (-170.27611, 0.647412), (-170.27611, -0.566244), (-170.23589, -0.566244), (-170.23589, 0.647412), (-170.09096, 0.413128), (-170.01994, 0.42416), (-170.01994, 0.464378), (-170.09096, 0.453346)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer1C4_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1C4_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1C4_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge.tga@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1C4_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

