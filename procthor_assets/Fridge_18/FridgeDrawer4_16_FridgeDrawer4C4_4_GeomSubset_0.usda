#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "FridgeDrawer4_16_FridgeDrawer4C4_4_GeomSubset_0"
    {
        def Mesh "FridgeDrawer4_16_FridgeDrawer4C4_4_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 52, 53, 70, 63, 58, 37, 41, 57, 63, 34, 35, 62, 62, 35, 36, 64, 57, 41, 40, 69, 71, 38, 39, 70, 69, 40, 38, 71, 64, 36, 37, 58, 70, 39, 34, 63, 28, 34, 39, 29, 58, 77, 76, 64, 71, 79, 78, 69, 71, 70, 53, 80, 79, 57, 69, 78, 81, 62, 64, 76, 82, 62, 82, 83, 52, 63, 77, 58, 57, 81, 53, 52, 83, 80, 85, 84, 28, 29, 95, 94, 93, 92, 35, 34, 28, 84, 88, 89, 36, 35, 88, 40, 41, 86, 90, 38, 91, 85, 29, 39, 91, 38, 40, 90, 37, 36, 89, 87, 41, 37, 92, 93, 37, 87, 95, 92, 87, 86, 94, 95, 86, 41, 93, 94]
            rel material:binding = </root/_materials/M_FridgeDrawer4C4_0>
            normal3f[] normals = [(0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0.0000028350623, -0.8860645, 0.46356186), (-0.0000048577785, -0.8861057, 0.46348307), (0, -0.9665781, 0.2563721), (0, -0.9665781, 0.2563721), (-0.032893863, -0.10641355, 0.9937777), (-0.010014356, -0.031720996, 0.9994466), (0.010011662, -0.031718515, 0.9994467), (0.03290981, -0.106371395, 0.99378175), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.07609774, 0.0030002359, 0.9970959), (-0.07610509, 0.0029998417, 0.9970953), (0.03290981, -0.106371395, 0.99378175), (0.010011662, -0.031718515, 0.9994467), (0.07609363, 0.0030002093, 0.99709624), (0.07610105, 0.0029999544, 0.99709564), (-1.931622e-7, 0, 1), (-1.96075e-7, 0, 1), (-1.9609224e-7, 0, 1), (-1.9796589e-7, 0, 1), (0.07610105, 0.0029999544, 0.99709564), (0.07609363, 0.0030002093, 0.99709624), (-1.96075e-7, 0, 1), (-1.931622e-7, 0, 1), (-0.07610509, 0.0029998417, 0.9970953), (-0.07609774, 0.0030002359, 0.9970959), (-0.010014356, -0.031720996, 0.9994466), (-0.032893863, -0.10641355, 0.9937777), (-1.9796589e-7, 0, 1), (-1.9609224e-7, 0, 1), (0, 0, 1), (0, 0, 1), (-9.758029e-9, 0.9287484, -0.3707106), (0, 1, 0), (0, 1, 0), (0, 0.9287484, -0.3707106), (0.9996236, -0.012047482, -0.02464574), (0.9996333, -0.012395926, -0.024075547), (0.99964494, -0.012375189, -0.023601037), (0.9996281, -0.011773432, -0.024597073), (-0.9945462, 0.07359871, -0.073899955), (-0.99629164, 0.07469745, -0.04269933), (-0.99964494, -0.012374476, -0.023601232), (-0.999628, -0.0117777195, -0.024597544), (-0.9945462, 0.07359871, -0.073899955), (-0.9938183, 0.079197876, -0.077799395), (-0.9938183, 0.079197876, -0.077799395), (-0.99521846, 0.08140332, -0.053979512), (-0.99629164, 0.07469745, -0.04269933), (-0.9996237, -0.012047504, -0.024645822), (-0.999628, -0.0117777195, -0.024597544), (-0.99964494, -0.012374476, -0.023601232), (-0.9996383, -0.0125566805, -0.023781132), (0.9945467, 0.07359301, -0.07389784), (0.9996281, -0.011773432, -0.024597073), (0.99964494, -0.012375189, -0.023601037), (0.9962923, 0.07469021, -0.042696577), (0.9945467, 0.07359301, -0.07389784), (0.9962923, 0.07469021, -0.042696577), (0.9952168, 0.08140032, -0.054013915), (0.99382067, 0.07919068, -0.07777838), (0.99382067, 0.07919068, -0.07777838), (0, 0.98534006, 0.17060164), (0, 0.98534006, 0.17060152), (0, 0.98534006, 0.17060152), (0, 0.98534006, 0.17060162), (-0.0000048577785, -0.8861057, 0.46348307), (0.0000028350623, -0.8860645, 0.46356186), (0, -0.86658555, 0.49902856), (0, -0.8665855, 0.49902856), (0, 0.8598295, -0.51058125), (0, 0.8598295, -0.51058125), (-9.758029e-9, 0.9287484, -0.3707106), (0, 0.9287484, -0.3707106), (0, -0.98814535, -0.1535215), (0, -0.98814535, -0.1535215), (0, -0.98814535, -0.1535215), (0, -0.98814535, -0.1535215), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, -1.0003047e-8, 0), (-1, -1.0003047e-8, 0), (-1, 0, 0), (-1, 0, 0), (-1, -1.0003047e-8, 0), (1, 0, 0), (1, 0, 0), (1, 9.440313e-9, 0), (1, -0.0000016995931, 0), (1, 1.3282668e-7, 0), (1, -0.0000016407733, 0), (1, 1.7814075e-7, 0), (1, 2.6565337e-7, 0), (1, 2.6565337e-7, 0), (1, -0.0000016407733, 0), (1, 1.3282668e-7, 0), (1, 0, 0), (1, -0.0000016995931, 0), (-1, 0, 0), (-1, 0, 0), (-1, -1.0003047e-8, 0), (-1, 0, 0), (0.010011662, -0.031718515, 0.9994467), (-0.010014356, -0.031720996, 0.9994466), (0, 0, 0.99999994), (0, 0, 0.99999994), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 9.440313e-9, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.00016, 0.023406, -1.093784), (0.000169, 0.023406, -1.093784), (0.00016, 0.023416, -1.093784), (0.000169, 0.023416, -1.093784), (0.00016, 0.023406, -1.093784), (0.000169, 0.023406, -1.093784), (0.00016, 0.023416, -1.093784), (0.000169, 0.023416, -1.093784), (0.00016, 0.023406, -1.093784), (0.000169, 0.023406, -1.093784), (0.00016, 0.023416, -1.093784), (0.000169, 0.023416, -1.093784), (0.00016, 0.023406, -1.093784), (0.000169, 0.023406, -1.093784), (0.00016, 0.023416, -1.093784), (0.000169, 0.023416, -1.093784), (0.00016, 0.023406, -1.093784), (0.000169, 0.023406, -1.093784), (0.00016, 0.023416, -1.093784), (0.000169, 0.023416, -1.093784), (0.00016, 0.023406, -1.093784), (0.000169, 0.023406, -1.093784), (0.00016, 0.023416, -1.093784), (0.000169, 0.023416, -1.093784), (0.00016, 0.023406, -1.093784), (0.000169, 0.023406, -1.093784), (0.00016, 0.023416, -1.093784), (0.000169, 0.023416, -1.093784), (0.028964, 0.144465, 0.185163), (0.464277, 0.144465, 0.185163), (0.028964, 0.072208, 0.063484), (0.028964, 0.067066, 0.060422), (0.464277, 0.067066, 0.060422), (0.464277, 0.072208, 0.063484), (0.028964, 0.144465, 0.193509), (0.028964, 0.072208, 0.193509), (0.028964, 0.067066, 0.193509), (0.028964, -0.195217, 0.193509), (0.464277, 0.072208, 0.193509), (0.464277, 0.144465, 0.193509), (0.464277, 0.067066, 0.193509), (0.464277, -0.195217, 0.193509), (0.464277, -0.156936, 0.060422), (0.464277, -0.178174, 0.083802), (0.028964, -0.178174, 0.083802), (0.028964, -0.156936, 0.060422), (0.028964, -0.176557, 0.074855), (0.464277, -0.176557, 0.074855), (0.028964, -0.171954, 0.06727), (0.464277, -0.171954, 0.06727), (0.028964, -0.165063, 0.062201), (0.464277, -0.165063, 0.062201), (0.033693, 0.135777, 0.188012), (0.459547, 0.135777, 0.188012), (0.456934, 0.067389, 0.06925), (0.036306, 0.067389, 0.06925), (0.459703, -0.16918, 0.085633), (0.457046, -0.18809, 0.194851), (0.036194, -0.18809, 0.194851), (0.033537, -0.16918, 0.085633), (0.456934, 0.06532, 0.068018), (0.036306, 0.06532, 0.068018), (0.039189, 0.072208, 0.193509), (0.036194, 0.137235, 0.193509), (0.039189, 0.067066, 0.193509), (0.459632, -0.168141, 0.078693), (0.459632, -0.165512, 0.074361), (0.459632, -0.161577, 0.071467), (0.459686, -0.15604, 0.070432), (0.454051, 0.067066, 0.193509), (0.457046, 0.137235, 0.193509), (0.454051, 0.072208, 0.193509), (0.033554, -0.15604, 0.070432), (0.033608, -0.161577, 0.071467), (0.033608, -0.165512, 0.074361), (0.033608, -0.168141, 0.078693), (0.038604, 0.066712, 0.168046), (0.035542, -0.183449, 0.168046), (0.454636, 0.066712, 0.168046), (0.454642, 0.071221, 0.168046), (0.459108, 0.124279, 0.168046), (0.457698, -0.183449, 0.168046), (0.038598, 0.071221, 0.168046), (0.034133, 0.124279, 0.168046), (0.028964, 0.134301, 0.168046), (0.464277, 0.134301, 0.168046), (0.464277, -0.191262, 0.168046), (0.028964, -0.191262, 0.168046), (0.028964, 0.072208, 0.168046), (0.028964, 0.067066, 0.168046), (0.464277, 0.067066, 0.168046), (0.464277, 0.072208, 0.168046), (0.028964, -0.209638, 0.193509), (0.464277, -0.209638, 0.193509), (0.464277, -0.205682, 0.168046), (0.028964, -0.205682, 0.168046)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-169.52118, -113.22002), (-169.5211, -113.22002), (-169.5211, -113.21994), (-169.52118, -113.21994), (-170.19357, 0.663268), (-170.19357, -0.598405), (-170.17729, -0.590997), (-170.17729, 0.655859), (-171.12009, 0.628575), (-171.14, 0.64878), (-171.14, -0.567613), (-171.12009, -0.547409), (-170.21104, 0.628575), (-170.19084, 0.64878), (-170.39273, 0.64878), (-170.39273, 0.620206), (-170.39273, 0.620206), (-170.39273, 0.64878), (-170.4071, 0.64878), (-170.4071, 0.620206), (-171.12009, -0.547409), (-171.14, -0.567613), (-170.4071, -0.567613), (-170.4071, -0.539039), (-170.39273, -0.539039), (-170.39273, -0.567613), (-170.19084, -0.567613), (-170.21104, -0.547409), (-170.4071, -0.539039), (-170.4071, -0.567613), (-170.39273, -0.567613), (-170.39273, -0.539039), (-170.4071, 0.620206), (-170.4071, 0.64878), (-171.14, 0.64878), (-171.12009, 0.628575), (-170.21104, -0.547409), (-170.19084, -0.567613), (-170.19084, 0.64878), (-170.21104, 0.628575), (-170.36433, 0.68001), (-170.38884, 0.68001), (-170.38884, -0.598842), (-170.36433, -0.598842), (-169.96443, 0.399814), (-170.03923, 0.38686), (-170.03923, -0.311378), (-169.96817, -0.312367), (-169.91356, 0.218312), (-169.98463, 0.215556), (-169.98463, 0.202972), (-169.91356, 0.203961), (-169.91356, 0.218312), (-169.91356, 0.39981), (-169.92892, 0.39574), (-169.98463, 0.36365), (-169.98463, 0.215556), (-169.90984, -0.508214), (-169.91356, 0.203961), (-169.98463, 0.202972), (-169.98463, -0.49526), (-169.96817, -0.326718), (-169.96817, -0.312367), (-170.03923, -0.311378), (-170.03923, -0.323962), (-169.96817, -0.326718), (-170.03923, -0.323962), (-170.03923, -0.472057), (-169.98349, -0.504148), (-169.96817, -0.508218), (-170.1237, 0.622312), (-170.19902, 0.62048), (-170.19902, -0.56199), (-170.1237, -0.563822), (-170.19357, -0.598405), (-170.19357, 0.663268), (-170.25272, 0.661967), (-170.25272, -0.597104), (-170.31404, -0.598842), (-170.31404, 0.68001), (-170.36433, 0.68001), (-170.36433, -0.598842), (-170.33467, 0.651263), (-170.33467, -0.570095), (-170.26323, -0.570095), (-170.26323, 0.651263), (-170.07243, 0.262899), (-170.07243, 0.464444), (-170.0957, 0.464444), (-170.14345, 0.436092), (-170.14345, 0.262899), (-170.14345, 0.248557), (-170.07243, 0.248557), (-170.07243, 0.262899), (-170.14345, 0.262899), (-170.01994, -0.307325), (-170.01994, 0.424165), (-170.09096, 0.413133), (-170.09096, -0.307325), (-170.01994, -0.321665), (-170.09096, -0.321665), (-170.09096, -0.494837), (-170.04323, -0.523186), (-170.01994, -0.523186), (-170.09096, -0.321665), (-170.01994, -0.321665), (-170.01994, -0.307325), (-170.09096, -0.307325), (-170.07243, -0.483021), (-170.07243, 0.248557), (-170.14345, 0.248557), (-170.14345, -0.471988), (-171.14, -0.567613), (-171.14, 0.64878), (-171.1803, 0.64878), (-171.1803, -0.567613), (-170.07243, -0.483021), (-170.14345, -0.471988), (-170.14345, -0.512212), (-170.07243, -0.523245), (-170.27611, 0.647374), (-170.27611, -0.566206), (-170.23589, -0.566206), (-170.23589, 0.647374), (-170.09096, 0.413133), (-170.01994, 0.424165), (-170.01994, 0.464385), (-170.09096, 0.453352)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer4C4_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer4C4_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer4C4_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge.tga@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer4C4_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

