#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.0"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "FridgeDrawer1C4"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "FridgeDrawer1C4" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.463973, -0.209638, -1.093784), (0.000169, 0.144465, 0.373807)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 8, 4, 3, 8, 4, 3, 4, 4, 4, 4, 3, 4, 8, 3, 4, 8, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 52, 53, 70, 63, 58, 37, 41, 57, 63, 34, 35, 62, 62, 35, 36, 64, 57, 41, 40, 69, 71, 38, 39, 70, 69, 40, 38, 71, 64, 36, 37, 58, 70, 39, 34, 63, 28, 34, 39, 29, 58, 77, 76, 64, 71, 79, 78, 69, 71, 70, 53, 80, 79, 57, 69, 78, 81, 62, 64, 76, 82, 62, 82, 83, 52, 63, 77, 58, 57, 81, 53, 52, 83, 80, 85, 84, 28, 29, 95, 94, 93, 92, 35, 34, 28, 84, 88, 89, 36, 35, 88, 40, 41, 86, 90, 38, 91, 85, 29, 39, 91, 38, 40, 90, 37, 36, 89, 87, 41, 37, 92, 93, 37, 87, 95, 92, 87, 86, 94, 95, 86, 41, 93, 94, 4, 5, 7, 6, 8, 9, 11, 10, 12, 13, 15, 14, 16, 17, 19, 18, 67, 68, 72, 73, 66, 67, 73, 74, 65, 66, 74, 75, 56, 65, 75, 59, 61, 72, 68, 60, 54, 55, 61, 60, 33, 32, 31, 30, 31, 32, 42, 45, 43, 44, 46, 47, 47, 46, 48, 49, 49, 48, 50, 51, 51, 50, 45, 42, 76, 77, 59, 75, 74, 73, 72, 61, 78, 79, 54, 60, 79, 80, 54, 78, 60, 68, 67, 66, 65, 56, 81, 76, 61, 55, 82, 82, 55, 83, 56, 59, 77, 81, 80, 83, 55, 54, 85, 33, 30, 84, 87, 44, 43, 86, 88, 84, 30, 89, 88, 30, 31, 90, 86, 43, 47, 49, 51, 42, 32, 85, 91, 33, 90, 32, 33, 91, 89, 31, 45, 50, 48, 46, 44, 87, 20, 21, 23, 22, 24, 25, 27, 26]
            rel material:binding = </root/_materials/M_FridgeDrawer1C4_0>
            normal3f[] normals = [(0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0.0000032609096, -0.88606375, 0.4635633), (-0.0000047422945, -0.88606375, 0.46356326), (0, -0.96657836, 0.25637144), (0, -0.96657836, 0.25637144), (-0.032911696, -0.10637226, 0.99378157), (-0.01001228, -0.031717885, 0.9994467), (0.010011289, -0.03171873, 0.9994467), (0.032909818, -0.10637136, 0.99378175), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.076093376, 0.00299666, 0.99709624), (-0.07610066, 0.0029998326, 0.99709564), (0.032909818, -0.10637136, 0.99378175), (0.010011289, -0.03171873, 0.9994467), (0.07609364, 0.003000211, 0.99709624), (0.07610106, 0.002999954, 0.99709564), (3.8632436e-7, 0, 1), (3.9215e-7, 0, 1), (3.9218463e-7, 0, 1), (3.9593172e-7, 0, 1), (0.07610106, 0.002999954, 0.99709564), (0.07609364, 0.003000211, 0.99709624), (3.9215e-7, 0, 1), (3.8632436e-7, 0, 1), (-0.07610066, 0.0029998326, 0.99709564), (-0.076093376, 0.00299666, 0.99709624), (-0.01001228, -0.031717885, 0.9994467), (-0.032911696, -0.10637226, 0.99378157), (3.9593172e-7, 0, 1), (3.9218463e-7, 0, 1), (0, 0, 1), (0, 0, 1), (-9.758029e-9, 0.92874825, -0.37071103), (0, 1, 0), (0, 1, 0), (0, 0.92874825, -0.37071103), (0.99962366, -0.012047349, -0.02464579), (0.9996332, -0.012394973, -0.024077734), (0.99964476, -0.012388963, -0.0236009), (0.999628, -0.011777463, -0.024597483), (-0.9945458, 0.07359977, -0.073902756), (-0.99629164, 0.07469801, -0.04269927), (-0.99964494, -0.012374161, -0.02360114), (-0.9996282, -0.011773896, -0.024597168), (-0.9945458, 0.07359977, -0.073902756), (-0.9938185, 0.079197034, -0.07779928), (-0.9938185, 0.079197034, -0.07779928), (-0.9952184, 0.081403635, -0.053979594), (-0.99629164, 0.07469801, -0.04269927), (-0.99962366, -0.012047472, -0.02464572), (-0.9996282, -0.011773896, -0.024597168), (-0.99964494, -0.012374161, -0.02360114), (-0.9996383, -0.012556724, -0.023781093), (0.9945461, 0.07359901, -0.07390006), (0.999628, -0.011777463, -0.024597483), (0.99964476, -0.012388963, -0.0236009), (0.9962921, 0.074692704, -0.042696055), (0.9945461, 0.07359901, -0.07390006), (0.9962921, 0.074692704, -0.042696055), (0.9952186, 0.08140421, -0.053974412), (0.99381906, 0.07920533, -0.07778263), (0.99381906, 0.07920533, -0.07778263), (0, 0.9853402, 0.17060117), (0, 0.98534036, 0.17060043), (0, 0.98534036, 0.17060043), (0, 0.9853402, 0.17060119), (-0.0000047422945, -0.88606375, 0.46356326), (0.0000032609096, -0.88606375, 0.4635633), (0, -0.8665845, 0.49903053), (0, -0.8665844, 0.49903053), (0, 0.8598283, -0.51058346), (0, 0.8598283, -0.51058346), (-9.758029e-9, 0.92874825, -0.37071103), (0, 0.92874825, -0.37071103), (0, -0.98814535, -0.15352106), (0, -0.98814535, -0.15352106), (0, -0.98814535, -0.15352106), (0, -0.98814535, -0.15352106), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 1.5171936e-9, 0), (1, 1.2204114e-9, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 1.2204114e-9, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0.010011289, -0.03171873, 0.9994467), (-0.01001228, -0.031717885, 0.9994467), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 1.5171936e-9, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (-2.476736e-8, 0.38254243, 0.9239379), (0.0000032146927, 0.015330922, 0.99988246), (0.0007939205, 0.015334599, 0.99988204), (0, 0.3825423, 0.923938), (0, 0.74020183, 0.67238474), (-2.476736e-8, 0.38254243, 0.9239379), (0, 0.3825423, 0.923938), (-3.2281916e-10, 0.74020183, 0.67238474), (0, 0.95109177, 0.30890843), (0, 0.74020183, 0.67238474), (-3.2281916e-10, 0.74020183, 0.67238474), (2.2439053e-8, 0.9510918, 0.30890825), (-1.954104e-7, 0.9856509, 0.16879597), (0, 0.95109177, 0.30890843), (2.2439053e-8, 0.9510918, 0.30890825), (2.9575313e-7, 0.98565096, 0.168796), (7.23172e-7, 0.0052651507, 0.99998605), (0.0007939205, 0.015334599, 0.99988204), (0.0000032146927, 0.015330922, 0.99988246), (0, 0.0052654594, 0.9999862), (-0.000002679415, -0.86153823, 0.50769275), (0, -0.86153793, 0.5076933), (7.23172e-7, 0.0052651507, 0.99998605), (0, 0.0052654594, 0.9999862), (-0.00008596658, 0.84804595, -0.52992266), (0, 0.013453633, -0.9999095), (-2.206594e-8, 0.013453633, -0.9999095), (0, 0.84804595, -0.52992266), (-2.206594e-8, 0.013453633, -0.9999095), (0, 0.013453633, -0.9999095), (8.733054e-9, -0.007746972, -0.99996996), (0, -0.007746972, -0.99996996), (0, -0.9877882, -0.15580282), (-8.678274e-10, -0.9877731, -0.15589802), (-1.8971193e-10, -0.9359134, -0.35223016), (0, -0.9359134, -0.35223016), (0, -0.9359134, -0.35223016), (-1.8971193e-10, -0.9359134, -0.35223016), (-3.131784e-10, -0.74016815, -0.6724219), (0, -0.74016815, -0.6724219), (0, -0.74016815, -0.6724219), (-3.131784e-10, -0.74016815, -0.6724219), (-2.6009633e-10, -0.41491202, -0.90986156), (0, -0.41491202, -0.90986156), (0, -0.41491202, -0.90986156), (-2.6009633e-10, -0.41491202, -0.90986156), (0, -0.007746972, -0.99996996), (8.733054e-9, -0.007746972, -0.99996996), (0.99964476, -0.012388963, -0.0236009), (0.9996332, -0.012394973, -0.024077734), (0.9996445, -0.012827556, -0.023370814), (0.9996445, -0.012827556, -0.023370814), (0.9996445, -0.012827556, -0.023370814), (0.9996445, -0.012827556, -0.023370814), (0.9996445, -0.012827556, -0.023370814), (0.9996453, -0.012711423, -0.023400841), (-0.99964494, -0.012374161, -0.02360114), (-0.99629164, 0.07469801, -0.04269927), (-0.99810624, 0.056068324, -0.025301374), (-0.9996455, -0.012702536, -0.02340131), (-0.99629164, 0.07469801, -0.04269927), (-0.9952184, 0.081403635, -0.053979594), (-0.99810624, 0.056068324, -0.025301374), (-0.99964494, -0.012374161, -0.02360114), (-0.9996455, -0.012702536, -0.02340131), (-0.9996447, -0.0128295375, -0.023366109), (-0.9996447, -0.0128295375, -0.023366109), (-0.9996447, -0.0128295375, -0.023366109), (-0.9996447, -0.0128295375, -0.023366109), (-0.9996447, -0.0128295375, -0.023366109), (-0.9996383, -0.012556724, -0.023781093), (0.99964476, -0.012388963, -0.0236009), (0.9996453, -0.012711423, -0.023400841), (0.99810475, 0.056096308, -0.025299914), (0.9962921, 0.074692704, -0.042696055), (0.9962921, 0.074692704, -0.042696055), (0.99810475, 0.056096308, -0.025299914), (0.9952186, 0.08140421, -0.053974412), (-1.954104e-7, 0.9856509, 0.16879597), (2.9575313e-7, 0.98565096, 0.168796), (0, 0.9853402, 0.17060117), (0, 0.9853402, 0.17060119), (0, -0.8665844, 0.49903053), (0, -0.8665845, 0.49903053), (0, -0.86153793, 0.5076933), (-0.000002679415, -0.86153823, 0.50769275), (0, 0.8598283, -0.51058346), (-0.00008596658, 0.84804595, -0.52992266), (0, 0.84804595, -0.52992266), (0, 0.8598283, -0.51058346), (0, -0.988146, -0.15351668), (-8.678274e-10, -0.9877731, -0.15589802), (0, -0.9877882, -0.15580282), (0, -0.988146, -0.15351668), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 1.2204114e-9, 0), (1, 1.5171936e-9, 0), (1, 4.8816458e-9, 0), (1, 4.8816458e-9, 0), (1, 4.8816458e-9, 0), (1, 4.8816458e-9, 0), (1, 4.8816458e-9, 0), (1, 2.9443419e-9, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 1.2204114e-9, 0), (1, 2.9443419e-9, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-1, 0, 0), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.00016, 0.023406, -1.093784), (0.000169, 0.023406, -1.093784), (0.00016, 0.023416, -1.093784), (0.000169, 0.023416, -1.093784), (0.00016, 0.023406, -1.093784), (0.000169, 0.023406, -1.093784), (0.00016, 0.023416, -1.093784), (0.000169, 0.023416, -1.093784), (0.00016, 0.023406, -1.093784), (0.000169, 0.023406, -1.093784), (0.00016, 0.023416, -1.093784), (0.000169, 0.023416, -1.093784), (0.00016, 0.023406, -1.093784), (0.000169, 0.023406, -1.093784), (0.00016, 0.023416, -1.093784), (0.000169, 0.023416, -1.093784), (0.00016, 0.023406, -1.093784), (0.000169, 0.023406, -1.093784), (0.00016, 0.023416, -1.093784), (0.000169, 0.023416, -1.093784), (0.00016, 0.023406, -1.093784), (0.000169, 0.023406, -1.093784), (0.00016, 0.023416, -1.093784), (0.000169, 0.023416, -1.093784), (0.00016, 0.023406, -1.093784), (0.000169, 0.023406, -1.093784), (0.00016, 0.023416, -1.093784), (0.000169, 0.023416, -1.093784), (-0.463973, 0.144465, 0.364119), (-0.028659, 0.144465, 0.364119), (-0.463973, 0.072208, 0.242441), (-0.463973, 0.067066, 0.239378), (-0.028659, 0.067066, 0.239378), (-0.028659, 0.072208, 0.242441), (-0.463973, 0.144465, 0.372465), (-0.463973, 0.072208, 0.372465), (-0.463973, 0.067066, 0.372465), (-0.463973, -0.195217, 0.372465), (-0.028659, 0.072208, 0.372465), (-0.028659, 0.144465, 0.372465), (-0.028659, 0.067066, 0.372465), (-0.028659, -0.195217, 0.372465), (-0.028659, -0.156936, 0.239378), (-0.028659, -0.178174, 0.262758), (-0.463973, -0.178174, 0.262758), (-0.463973, -0.156936, 0.239378), (-0.463973, -0.176557, 0.253811), (-0.028659, -0.176557, 0.253811), (-0.463973, -0.171954, 0.246226), (-0.028659, -0.171954, 0.246226), (-0.463973, -0.165063, 0.241158), (-0.028659, -0.165063, 0.241158), (-0.459243, 0.135777, 0.366968), (-0.033389, 0.135777, 0.366968), (-0.036002, 0.067389, 0.248207), (-0.456631, 0.067389, 0.248207), (-0.033233, -0.16918, 0.264589), (-0.03589, -0.18809, 0.373807), (-0.456742, -0.18809, 0.373807), (-0.459399, -0.16918, 0.264589), (-0.036002, 0.06532, 0.246974), (-0.456631, 0.06532, 0.246974), (-0.453747, 0.072208, 0.372465), (-0.456742, 0.137235, 0.372465), (-0.453747, 0.067066, 0.372465), (-0.033304, -0.168141, 0.257649), (-0.033304, -0.165512, 0.253318), (-0.033304, -0.161577, 0.250424), (-0.03325, -0.15604, 0.249389), (-0.038885, 0.067066, 0.372465), (-0.03589, 0.137235, 0.372465), (-0.038885, 0.072208, 0.372465), (-0.459382, -0.15604, 0.249389), (-0.459328, -0.161577, 0.250424), (-0.459328, -0.165512, 0.253318), (-0.459328, -0.168141, 0.257649), (-0.454332, 0.066712, 0.347002), (-0.457394, -0.183449, 0.347002), (-0.0383, 0.066712, 0.347002), (-0.038294, 0.071221, 0.347002), (-0.033828, 0.124279, 0.347002), (-0.035238, -0.183449, 0.347002), (-0.454337, 0.071221, 0.347002), (-0.458804, 0.124279, 0.347002), (-0.463973, 0.134301, 0.347002), (-0.028659, 0.134301, 0.347002), (-0.028659, -0.191262, 0.347002), (-0.463973, -0.191262, 0.347002), (-0.463973, 0.072208, 0.347002), (-0.463973, 0.067066, 0.347002), (-0.028659, 0.067066, 0.347002), (-0.028659, 0.072208, 0.347002), (-0.463973, -0.209638, 0.372465), (-0.028659, -0.209638, 0.372465), (-0.028659, -0.205682, 0.347002), (-0.463973, -0.205682, 0.347002)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-169.52118, -113.22002), (-169.5211, -113.22002), (-169.5211, -113.21994), (-169.52118, -113.21994), (-170.19356, 0.663134), (-170.19356, -0.598271), (-170.17729, -0.590863), (-170.17729, 0.655726), (-171.1201, 0.628576), (-171.14001, 0.648781), (-171.14001, -0.567613), (-171.1201, -0.547408), (-170.21103, 0.628576), (-170.19083, 0.648781), (-170.39275, 0.648781), (-170.39275, 0.620207), (-170.39275, 0.620207), (-170.39275, 0.648781), (-170.40712, 0.648781), (-170.40712, 0.620207), (-171.1201, -0.547408), (-171.14001, -0.567613), (-170.40712, -0.567613), (-170.40712, -0.539039), (-170.39275, -0.539039), (-170.39275, -0.567613), (-170.19083, -0.567613), (-170.21103, -0.547408), (-170.40712, -0.539039), (-170.40712, -0.567613), (-170.39275, -0.567613), (-170.39275, -0.539039), (-170.40712, 0.620207), (-170.40712, 0.648781), (-171.14001, 0.648781), (-171.1201, 0.628576), (-170.21103, -0.547408), (-170.19083, -0.567613), (-170.19083, 0.648781), (-170.21103, 0.628576), (-170.36433, 0.680024), (-170.38882, 0.680024), (-170.38882, -0.598856), (-170.36433, -0.598856), (-169.96442, 0.399724), (-170.03925, 0.386773), (-170.03925, -0.311327), (-169.96817, -0.312316), (-169.91359, 0.21834), (-169.98463, 0.215584), (-169.98463, 0.202998), (-169.91359, 0.203987), (-169.91359, 0.21834), (-169.91359, 0.399856), (-169.92892, 0.395786), (-169.98463, 0.363692), (-169.98463, 0.215584), (-169.90984, -0.50826), (-169.91359, 0.203987), (-169.98463, 0.202998), (-169.98463, -0.495305), (-169.96817, -0.326665), (-169.96817, -0.312316), (-170.03925, -0.311327), (-170.03925, -0.323909), (-169.96817, -0.326665), (-170.03925, -0.323909), (-170.03925, -0.471975), (-169.98349, -0.504059), (-169.96817, -0.508128), (-170.1237, 0.622402), (-170.199, 0.620569), (-170.199, -0.562078), (-170.1237, -0.563911), (-170.19356, -0.598271), (-170.19356, 0.663134), (-170.25272, 0.661833), (-170.25272, -0.59697), (-170.31403, -0.598856), (-170.31403, 0.680024), (-170.36433, 0.680024), (-170.36433, -0.598856), (-170.33467, 0.651231), (-170.33467, -0.570063), (-170.26323, -0.570063), (-170.26323, 0.651231), (-170.07243, 0.262878), (-170.07243, 0.464408), (-170.0957, 0.464408), (-170.14345, 0.436057), (-170.14345, 0.262878), (-170.14345, 0.248537), (-170.07243, 0.248537), (-170.07243, 0.262878), (-170.14345, 0.262878), (-170.01994, -0.307322), (-170.01994, 0.42416), (-170.09096, 0.413128), (-170.09096, -0.307322), (-170.01994, -0.321661), (-170.09096, -0.321661), (-170.09096, -0.494831), (-170.04323, -0.52318), (-170.01994, -0.52318), (-170.09096, -0.321661), (-170.01994, -0.321661), (-170.01994, -0.307322), (-170.09096, -0.307322), (-170.07243, -0.482987), (-170.07243, 0.248537), (-170.14345, 0.248537), (-170.14345, -0.471955), (-171.14001, -0.567613), (-171.14001, 0.648781), (-171.18031, 0.648781), (-171.18031, -0.567613), (-170.07243, -0.482987), (-170.14345, -0.471955), (-170.14345, -0.512176), (-170.07243, -0.523209), (-170.27611, 0.647412), (-170.27611, -0.566244), (-170.23589, -0.566244), (-170.23589, 0.647412), (-170.09096, 0.413128), (-170.01994, 0.42416), (-170.01994, 0.464378), (-170.09096, 0.453346), (-143.9544, -113.009964), (-138.25906, -113.009964), (-138.25906, -107.3105), (-143.9544, -107.3105), (-116.5884, -110.94038), (-116.58829, -110.94038), (-116.58829, -110.940254), (-116.5884, -110.940254), (-88.71439, -113.31285), (-85.53026, -113.31285), (-85.53026, -110.12652), (-88.71439, -110.12652), (-69.000496, -111.67041), (-69.00049, -111.67041), (-69.00049, -111.670395), (-69.000496, -111.670395), (-71.5438, -0.982784), (-71.52927, -0.982925), (-71.52927, 0.135951), (-71.5438, 0.135811), (-71.55413, -0.982784), (-71.5438, -0.982784), (-71.5438, 0.135811), (-71.55413, 0.135811), (-71.561035, -0.982784), (-71.55413, -0.982784), (-71.55413, 0.135811), (-71.561035, 0.135811), (-71.3484, -0.982464), (-71.33019, -0.982278), (-71.33019, 0.135344), (-71.3484, 0.13553), (-70.94805, 0.128727), (-71.52927, 0.135951), (-71.52927, -0.982925), (-70.94805, -0.975701), (-70.94262, -0.975701), (-70.94262, 0.128727), (-70.94805, 0.128727), (-70.94805, -0.975701), (-72.07186, -1.042692), (-72.057106, -1.042692), (-72.057106, 0.206423), (-72.07186, 0.206423), (-72.057106, 0.206423), (-72.057106, -1.042692), (-71.41434, -1.042692), (-71.41434, 0.206423), (-71.65969, -0.988512), (-71.65969, 0.152242), (-71.683136, 0.152242), (-71.683136, -0.988512), (-71.35804, -1.042692), (-71.35804, 0.206423), (-71.37125, 0.206423), (-71.37125, -1.042692), (-71.37125, -1.042692), (-71.37125, 0.206423), (-71.39102, 0.206423), (-71.39102, -1.042692), (-71.39102, -1.042692), (-71.39102, 0.206423), (-71.41434, 0.206423), (-71.41434, -1.042692), (-71.35676, -0.232124), (-71.35676, 0.419635), (-71.57147, 0.38246), (-71.589554, 0.379752), (-71.60084, 0.372901), (-71.608376, 0.36265), (-71.61107, 0.348225), (-71.61736, -0.228496), (-71.479164, 0.269651), (-71.479164, 0.281397), (-71.73656, 0.271413), (-71.73977, 0.266023), (-71.479164, 0.281397), (-71.479164, 0.419633), (-71.73656, 0.271413), (-71.479164, 0.269651), (-71.73977, 0.266023), (-71.733475, -0.310697), (-71.73078, -0.325122), (-71.72324, -0.335373), (-71.71196, -0.342223), (-71.69388, -0.344932), (-71.479164, -0.382106), (-71.35676, -0.232124), (-71.61736, -0.228496), (-71.61415, -0.233887), (-71.35676, -0.243871), (-71.35676, -0.243871), (-71.61415, -0.233887), (-71.35676, -0.382108), (-71.3484, -0.982464), (-71.3484, 0.13553), (-71.5646, 0.13027), (-71.5646, -0.977203), (-70.964645, -0.518081), (-70.964645, 0.67089), (-71.24105, 0.66481), (-71.24105, -0.512001), (-72.25003, -1.042692), (-72.07186, -1.042692), (-72.07186, 0.206423), (-72.25003, 0.206423), (-71.43893, 0.152242), (-71.65969, 0.152242), (-71.65969, -0.988512), (-71.43893, -0.988512), (-71.08881, 0.280692), (-71.08881, 0.442409), (-71.36114, 0.280692), (-71.08881, 0.267301), (-71.08881, 0.280692), (-71.36114, 0.280692), (-71.36911, 0.267301), (-71.22008, -0.23035), (-71.22008, 0.44245), (-71.43948, 0.408365), (-71.46278, 0.404154), (-71.482544, 0.392163), (-71.49574, 0.374218), (-71.500374, 0.353051), (-71.500374, -0.23035), (-71.22008, -0.405458), (-71.22008, -0.243742), (-71.4924, -0.243742), (-71.22008, -0.23035), (-71.500374, -0.23035), (-71.4924, -0.243742), (-71.22008, -0.243742), (-71.08881, 0.267301), (-71.36911, 0.267301), (-71.36911, -0.316099), (-71.36448, -0.337267), (-71.35128, -0.355212), (-71.33153, -0.367202), (-71.30822, -0.371413), (-71.08881, -0.405498), (5.646933, -120.60234), (7.358486, -120.60234), (7.358486, -118.890785), (5.646933, -118.890785), (-5.253075, -117.08902), (-3.54152, -117.08902), (-3.54152, -115.377464), (-5.253075, -115.377464)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_FridgeDrawer1C4_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]
                rel material:binding = </root/_materials/M_FridgeDrawer1C4_0>
            }

            def GeomSubset "M_FridgeDrawer1C4_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [31]
                rel material:binding = </root/_materials/M_FridgeDrawer1C4_1>
            }

            def GeomSubset "M_FridgeDrawer1C4_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [32]
                rel material:binding = </root/_materials/M_FridgeDrawer1C4_2>
            }

            def GeomSubset "M_FridgeDrawer1C4_3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [33]
                rel material:binding = </root/_materials/M_FridgeDrawer1C4_3>
            }

            def GeomSubset "M_FridgeDrawer1C4_4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62]
                rel material:binding = </root/_materials/M_FridgeDrawer1C4_4>
            }

            def GeomSubset "M_FridgeDrawer1C4_5" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [63]
                rel material:binding = </root/_materials/M_FridgeDrawer1C4_5>
            }

            def GeomSubset "M_FridgeDrawer1C4_6" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [64]
                rel material:binding = </root/_materials/M_FridgeDrawer1C4_6>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer1C4_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1C4_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1C4_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge.tga@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1C4_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer1C4_1"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1C4_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1C4_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1C4_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1C4_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1C4_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer1C4_2"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1C4_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1C4_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1C4_2/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1C4_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1C4_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer1C4_3"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1C4_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.5735294, 0.5735294, 0.5735294)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1C4_3/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1C4_3/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer1C4_4"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1C4_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.39705884, 0.39705884, 0.39705884)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }

        def Material "M_FridgeDrawer1C4_5"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1C4_5/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1C4_5/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1C4_5/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Decal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1C4_5/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Decal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1C4_5/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer1C4_6"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1C4_6/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1C4_6/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1C4_6/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Readout_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1C4_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1C4_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

