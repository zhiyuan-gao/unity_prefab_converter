#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "FridgeDrawer3_16_FridgeDrawer3C4_3_GeomSubset_0"
    {
        def Mesh "FridgeDrawer3_16_FridgeDrawer3C4_3_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 52, 53, 70, 63, 58, 37, 41, 57, 63, 34, 35, 62, 62, 35, 36, 64, 57, 41, 40, 69, 71, 38, 39, 70, 69, 40, 38, 71, 64, 36, 37, 58, 70, 39, 34, 63, 28, 34, 39, 29, 58, 77, 76, 64, 71, 79, 78, 69, 71, 70, 53, 80, 79, 57, 69, 78, 81, 62, 64, 76, 82, 62, 82, 83, 52, 63, 77, 58, 57, 81, 53, 52, 83, 80, 85, 84, 28, 29, 95, 94, 93, 92, 35, 34, 28, 84, 88, 89, 36, 35, 88, 40, 41, 86, 90, 38, 91, 85, 29, 39, 91, 38, 40, 90, 37, 36, 89, 87, 41, 37, 92, 93, 37, 87, 95, 92, 87, 86, 94, 95, 86, 41, 93, 94]
            rel material:binding = </root/_materials/M_FridgeDrawer3C4_0>
            normal3f[] normals = [(0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (-0.000004522386, -0.8860635, 0.46356365), (-0.000004801899, -0.8860636, 0.4635636), (0, -0.9665781, 0.2563721), (0, -0.9665781, 0.2563721), (-0.032911774, -0.10637227, 0.99378157), (-0.010012319, -0.031717885, 0.9994467), (0.010011289, -0.03171873, 0.9994467), (0.032909818, -0.10637136, 0.99378175), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.07609345, 0.00299666, 0.99709624), (-0.07610074, 0.0029998324, 0.99709564), (0.032909818, -0.10637136, 0.99378175), (0.010011289, -0.03171873, 0.9994467), (0.07609364, 0.003000211, 0.99709624), (0.07610106, 0.002999954, 0.99709564), (-1.9316218e-7, 0, 1), (-1.96075e-7, 0, 1), (-1.9609232e-7, 0, 1), (-1.9796586e-7, 0, 1), (0.07610106, 0.002999954, 0.99709564), (0.07609364, 0.003000211, 0.99709624), (-1.96075e-7, 0, 1), (-1.9316218e-7, 0, 1), (-0.07610074, 0.0029998324, 0.99709564), (-0.07609345, 0.00299666, 0.99709624), (-0.010012319, -0.031717885, 0.9994467), (-0.032911774, -0.10637227, 0.99378157), (-1.9796586e-7, 0, 1), (-1.9609232e-7, 0, 1), (0, 0, 1), (0, 0, 1), (-9.758029e-9, 0.9287483, -0.37071085), (0, 1, 0), (0, 1, 0), (0, 0.9287483, -0.37071085), (0.9996236, -0.012047359, -0.024645811), (0.9996332, -0.012394971, -0.024077686), (0.9996447, -0.01239186, -0.023600819), (0.9996281, -0.011777469, -0.024597496), (-0.9945458, 0.07360038, -0.07390265), (-0.99629164, 0.07469727, -0.042699173), (-0.99964494, -0.012374984, -0.023601068), (-0.9996282, -0.011773432, -0.024597187), (-0.9945458, 0.07360038, -0.07390265), (-0.9938185, 0.079197094, -0.07779937), (-0.9938185, 0.079197094, -0.07779937), (-0.9952162, 0.081399135, -0.054027155), (-0.99629164, 0.07469727, -0.042699173), (-0.9996237, -0.012047496, -0.02464575), (-0.9996282, -0.011773432, -0.024597187), (-0.99964494, -0.012374984, -0.023601068), (-0.9996333, -0.012395933, -0.024075558), (0.9945461, 0.07359897, -0.0739001), (0.9996281, -0.011777469, -0.024597496), (0.9996447, -0.01239186, -0.023600819), (0.9962924, 0.07469004, -0.042695966), (0.9945461, 0.07359897, -0.0739001), (0.9962924, 0.07469004, -0.042695966), (0.9952165, 0.08139995, -0.054021988), (0.99381906, 0.07920525, -0.077782705), (0.99381906, 0.07920525, -0.077782705), (0, 0.9853402, 0.17060122), (0, 0.9853403, 0.17060052), (0, 0.9853403, 0.17060052), (0, 0.9853402, 0.1706012), (-0.000004801899, -0.8860636, 0.4635636), (-0.000004522386, -0.8860635, 0.46356365), (0, -0.86658543, 0.49902868), (0, -0.8665855, 0.49902862), (0, 0.85982937, -0.5105815), (0, 0.85982937, -0.5105815), (-9.758029e-9, 0.9287483, -0.37071085), (0, 0.9287483, -0.37071085), (0, -0.9881453, -0.15352115), (0, -0.9881453, -0.15352115), (0, -0.9881453, -0.15352115), (0, -0.9881453, -0.15352115), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, -2.1339834e-7, 0), (-1, -2.1339834e-7, 0), (-1, 0, 0), (-1, 0, 0), (-1, -2.1339834e-7, 0), (1, 0, 0), (1, 0, 0), (1, -1.8543473e-9, 0), (1, -1.4916136e-9, 0), (1, 8.301668e-9, 0), (1, 4.150834e-9, 0), (1, 1.1133797e-8, 0), (1, 1.6603336e-8, 0), (1, 1.6603336e-8, 0), (1, 4.150834e-9, 0), (1, 8.301668e-9, 0), (1, 0, 0), (1, -1.4916136e-9, 0), (-1, 0, 0), (-1, 0, 0), (-1, -2.1339834e-7, 0), (-1, 0, 0), (0.010011289, -0.03171873, 0.9994467), (-0.010012319, -0.031717885, 0.9994467), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, -1.8543473e-9, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.00016, 0.023406, -1.093784), (0.000169, 0.023406, -1.093784), (0.00016, 0.023416, -1.093784), (0.000169, 0.023416, -1.093784), (0.00016, 0.023406, -1.093784), (0.000169, 0.023406, -1.093784), (0.00016, 0.023416, -1.093784), (0.000169, 0.023416, -1.093784), (0.00016, 0.023406, -1.093784), (0.000169, 0.023406, -1.093784), (0.00016, 0.023416, -1.093784), (0.000169, 0.023416, -1.093784), (0.00016, 0.023406, -1.093784), (0.000169, 0.023406, -1.093784), (0.00016, 0.023416, -1.093784), (0.000169, 0.023416, -1.093784), (0.00016, 0.023406, -1.093784), (0.000169, 0.023406, -1.093784), (0.00016, 0.023416, -1.093784), (0.000169, 0.023416, -1.093784), (0.00016, 0.023406, -1.093784), (0.000169, 0.023406, -1.093784), (0.00016, 0.023416, -1.093784), (0.000169, 0.023416, -1.093784), (0.00016, 0.023406, -1.093784), (0.000169, 0.023406, -1.093784), (0.00016, 0.023416, -1.093784), (0.000169, 0.023416, -1.093784), (-0.463973, 0.144465, 0.185163), (-0.028659, 0.144465, 0.185163), (-0.463973, 0.072208, 0.063484), (-0.463973, 0.067066, 0.060422), (-0.028659, 0.067066, 0.060422), (-0.028659, 0.072208, 0.063484), (-0.463973, 0.144465, 0.193509), (-0.463973, 0.072208, 0.193509), (-0.463973, 0.067066, 0.193509), (-0.463973, -0.195217, 0.193509), (-0.028659, 0.072208, 0.193509), (-0.028659, 0.144465, 0.193509), (-0.028659, 0.067066, 0.193509), (-0.028659, -0.195217, 0.193509), (-0.028659, -0.156936, 0.060422), (-0.028659, -0.178174, 0.083802), (-0.463973, -0.178174, 0.083802), (-0.463973, -0.156936, 0.060422), (-0.463973, -0.176557, 0.074855), (-0.028659, -0.176557, 0.074855), (-0.463973, -0.171954, 0.06727), (-0.028659, -0.171954, 0.06727), (-0.463973, -0.165063, 0.062201), (-0.028659, -0.165063, 0.062201), (-0.459243, 0.135777, 0.188012), (-0.033389, 0.135777, 0.188012), (-0.036002, 0.067389, 0.06925), (-0.456631, 0.067389, 0.06925), (-0.033233, -0.16918, 0.085633), (-0.03589, -0.18809, 0.194851), (-0.456742, -0.18809, 0.194851), (-0.459399, -0.16918, 0.085633), (-0.036002, 0.06532, 0.068018), (-0.456631, 0.06532, 0.068018), (-0.453747, 0.072208, 0.193509), (-0.456742, 0.137235, 0.193509), (-0.453747, 0.067066, 0.193509), (-0.033304, -0.168141, 0.078693), (-0.033304, -0.165512, 0.074361), (-0.033304, -0.161577, 0.071467), (-0.03325, -0.15604, 0.070432), (-0.038885, 0.067066, 0.193509), (-0.03589, 0.137235, 0.193509), (-0.038885, 0.072208, 0.193509), (-0.459382, -0.15604, 0.070432), (-0.459328, -0.161577, 0.071467), (-0.459328, -0.165512, 0.074361), (-0.459328, -0.168141, 0.078693), (-0.454332, 0.066712, 0.168046), (-0.457394, -0.183449, 0.168046), (-0.0383, 0.066712, 0.168046), (-0.038294, 0.071221, 0.168046), (-0.033828, 0.124279, 0.168046), (-0.035238, -0.183449, 0.168046), (-0.454337, 0.071221, 0.168046), (-0.458804, 0.124279, 0.168046), (-0.463973, 0.134301, 0.168046), (-0.028659, 0.134301, 0.168046), (-0.028659, -0.191262, 0.168046), (-0.463973, -0.191262, 0.168046), (-0.463973, 0.072208, 0.168046), (-0.463973, 0.067066, 0.168046), (-0.028659, 0.067066, 0.168046), (-0.028659, 0.072208, 0.168046), (-0.463973, -0.209638, 0.193509), (-0.028659, -0.209638, 0.193509), (-0.028659, -0.205682, 0.168046), (-0.463973, -0.205682, 0.168046)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-169.52118, -113.22002), (-169.5211, -113.22002), (-169.5211, -113.21994), (-169.52118, -113.21994), (-170.19357, 0.663274), (-170.19357, -0.598411), (-170.17729, -0.591002), (-170.17729, 0.655865), (-171.12013, 0.628626), (-171.14005, 0.648832), (-171.14005, -0.567665), (-171.12013, -0.547458), (-170.211, 0.628626), (-170.19081, 0.648832), (-170.39272, 0.648832), (-170.39272, 0.620256), (-170.39272, 0.620256), (-170.39272, 0.648832), (-170.40709, 0.648832), (-170.40709, 0.620256), (-171.12013, -0.547458), (-171.14005, -0.567665), (-170.40709, -0.567665), (-170.40709, -0.539088), (-170.39272, -0.539088), (-170.39272, -0.567665), (-170.19081, -0.567665), (-170.211, -0.547458), (-170.40709, -0.539088), (-170.40709, -0.567665), (-170.39272, -0.567665), (-170.39272, -0.539088), (-170.40709, 0.620256), (-170.40709, 0.648832), (-171.14005, 0.648832), (-171.12013, 0.628626), (-170.211, -0.547458), (-170.19081, -0.567665), (-170.19081, 0.648832), (-170.211, 0.628626), (-170.36433, 0.680022), (-170.38882, 0.680022), (-170.38882, -0.598854), (-170.36433, -0.598854), (-169.96442, 0.399692), (-170.03925, 0.386742), (-170.03925, -0.311309), (-169.96817, -0.312298), (-169.91357, 0.218308), (-169.98463, 0.215551), (-169.98463, 0.202967), (-169.91357, 0.203956), (-169.91357, 0.218308), (-169.91357, 0.399802), (-169.92892, 0.395732), (-169.98463, 0.363643), (-169.98463, 0.215551), (-169.90984, -0.508206), (-169.91357, 0.203956), (-169.98463, 0.202967), (-169.98463, -0.495253), (-169.96817, -0.326645), (-169.96817, -0.312298), (-170.03925, -0.311309), (-170.03925, -0.323889), (-169.96817, -0.326645), (-170.03925, -0.323889), (-170.03925, -0.471945), (-169.98349, -0.504027), (-169.96817, -0.508096), (-170.1237, 0.622301), (-170.19902, 0.620468), (-170.19902, -0.561978), (-170.1237, -0.56381), (-170.19357, -0.598411), (-170.19357, 0.663274), (-170.25272, 0.661973), (-170.25272, -0.59711), (-170.31403, -0.598854), (-170.31403, 0.680022), (-170.36433, 0.680022), (-170.36433, -0.598854), (-170.33467, 0.651294), (-170.33467, -0.570126), (-170.26323, -0.570126), (-170.26323, 0.651294), (-170.07243, 0.262865), (-170.07243, 0.464386), (-170.0957, 0.464386), (-170.14345, 0.436037), (-170.14345, 0.262865), (-170.14345, 0.248524), (-170.07243, 0.248524), (-170.07243, 0.262865), (-170.14345, 0.262865), (-170.01994, -0.307336), (-170.01994, 0.424183), (-170.09096, 0.413151), (-170.09096, -0.307336), (-170.01994, -0.321677), (-170.09096, -0.321677), (-170.09096, -0.494855), (-170.04323, -0.523205), (-170.01994, -0.523205), (-170.09096, -0.321677), (-170.01994, -0.321677), (-170.01994, -0.307336), (-170.09096, -0.307336), (-170.07243, -0.482968), (-170.07243, 0.248524), (-170.14345, 0.248524), (-170.14345, -0.471936), (-171.14005, -0.567665), (-171.14005, 0.648832), (-171.18034, 0.648832), (-171.18034, -0.567665), (-170.07243, -0.482968), (-170.14345, -0.471936), (-170.14345, -0.512155), (-170.07243, -0.523188), (-170.27611, 0.647429), (-170.27611, -0.566261), (-170.23589, -0.566261), (-170.23589, 0.647429), (-170.09096, 0.413151), (-170.01994, 0.424183), (-170.01994, 0.464404), (-170.09096, 0.453371)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer3C4_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer3C4_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer3C4_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge.tga@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer3C4_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

