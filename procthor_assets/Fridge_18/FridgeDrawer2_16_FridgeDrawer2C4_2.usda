#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.0"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "FridgeDrawer2C4"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "FridgeDrawer2C4" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(0.00016, -0.209638, -1.093784), (0.464277, 0.144465, 0.373807)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 8, 4, 3, 8, 4, 3, 4, 4, 4, 4, 3, 4, 8, 3, 4, 8, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 52, 53, 70, 63, 58, 37, 41, 57, 63, 34, 35, 62, 62, 35, 36, 64, 57, 41, 40, 69, 71, 38, 39, 70, 69, 40, 38, 71, 64, 36, 37, 58, 70, 39, 34, 63, 28, 34, 39, 29, 58, 77, 76, 64, 71, 79, 78, 69, 71, 70, 53, 80, 79, 57, 69, 78, 81, 62, 64, 76, 82, 62, 82, 83, 52, 63, 77, 58, 57, 81, 53, 52, 83, 80, 85, 84, 28, 29, 95, 94, 93, 92, 35, 34, 28, 84, 88, 89, 36, 35, 88, 40, 41, 86, 90, 38, 91, 85, 29, 39, 91, 38, 40, 90, 37, 36, 89, 87, 41, 37, 92, 93, 37, 87, 95, 92, 87, 86, 94, 95, 86, 41, 93, 94, 4, 5, 7, 6, 8, 9, 11, 10, 12, 13, 15, 14, 16, 17, 19, 18, 67, 68, 72, 73, 66, 67, 73, 74, 65, 66, 74, 75, 56, 65, 75, 59, 61, 72, 68, 60, 54, 55, 61, 60, 33, 32, 31, 30, 31, 32, 42, 45, 43, 44, 46, 47, 47, 46, 48, 49, 49, 48, 50, 51, 51, 50, 45, 42, 76, 77, 59, 75, 74, 73, 72, 61, 78, 79, 54, 60, 79, 80, 54, 78, 60, 68, 67, 66, 65, 56, 81, 76, 61, 55, 82, 82, 55, 83, 56, 59, 77, 81, 80, 83, 55, 54, 85, 33, 30, 84, 87, 44, 43, 86, 88, 84, 30, 89, 88, 30, 31, 90, 86, 43, 47, 49, 51, 42, 32, 85, 91, 33, 90, 32, 33, 91, 89, 31, 45, 50, 48, 46, 44, 87, 20, 21, 23, 22, 24, 25, 27, 26]
            rel material:binding = </root/_materials/M_FridgeDrawer2C4_0>
            normal3f[] normals = [(0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0.0000027837232, -0.88606465, 0.4635615), (-0.000004803762, -0.8860639, 0.4635632), (0, -0.96657836, 0.25637144), (0, -0.96657836, 0.25637144), (-0.03299865, -0.10640293, 0.99377537), (-0.010014315, -0.031720996, 0.9994466), (0.010011662, -0.031718515, 0.9994467), (0.03290981, -0.106371395, 0.99378175), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.07609766, 0.0030002357, 0.99709594), (-0.07610501, 0.0029998417, 0.9970953), (0.03290981, -0.106371395, 0.99378175), (0.010011662, -0.031718515, 0.9994467), (0.07609363, 0.0030002093, 0.99709624), (0.07610105, 0.0029999544, 0.99709564), (3.863244e-7, 0, 1), (3.9215e-7, 0, 1), (3.921845e-7, 0, 1), (3.9593178e-7, 0, 1), (0.07610105, 0.0029999544, 0.99709564), (0.07609363, 0.0030002093, 0.99709624), (3.9215e-7, 0, 1), (3.863244e-7, 0, 1), (-0.07610501, 0.0029998417, 0.9970953), (-0.07609766, 0.0030002357, 0.99709594), (-0.010014315, -0.031720996, 0.9994466), (-0.03299865, -0.10640293, 0.99377537), (3.9593178e-7, 0, 1), (3.921845e-7, 0, 1), (0, 0, 1), (0, 0, 1), (0.000096299074, 0.92874837, -0.37071073), (0, 1, 0), (0, 1, 0), (0, 0.9287483, -0.3707108), (0.99962366, -0.012047481, -0.02464572), (0.9996333, -0.012395938, -0.024075594), (0.99964494, -0.012374282, -0.023601111), (0.9996281, -0.011773431, -0.024597058), (-0.9945458, 0.07360028, -0.07390287), (-0.99629164, 0.07469797, -0.04269942), (-0.99964494, -0.012373982, -0.023601305), (-0.9996282, -0.011773976, -0.024597459), (-0.9945458, 0.07360028, -0.07390287), (-0.99381834, 0.07919778, -0.077799305), (-0.99381834, 0.07919778, -0.077799305), (-0.99521846, 0.08140349, -0.05397964), (-0.99629164, 0.07469797, -0.04269942), (-0.99962366, -0.012047631, -0.024645792), (-0.9996282, -0.011773976, -0.024597459), (-0.99964494, -0.012373982, -0.023601305), (-0.9996383, -0.012556738, -0.02378111), (0.9945467, 0.07359299, -0.0738978), (0.9996281, -0.011773431, -0.024597058), (0.99964494, -0.012374282, -0.023601111), (0.9962922, 0.07469109, -0.042696673), (0.9945467, 0.07359299, -0.0738978), (0.9962922, 0.07469109, -0.042696673), (0.9952168, 0.08140029, -0.054013997), (0.9938206, 0.07919064, -0.0777783), (0.9938206, 0.07919064, -0.0777783), (0, 0.98534006, 0.17060158), (0, 0.9853401, 0.17060143), (0, 0.9853401, 0.17060143), (0, 0.98534006, 0.17060159), (-0.000004803762, -0.8860639, 0.4635632), (0.0000027837232, -0.88606465, 0.4635615), (0, -0.8665844, 0.49903047), (0, -0.8665845, 0.49903044), (0, 0.8598283, -0.5105832), (0, 0.8598283, -0.5105832), (0.000096299074, 0.92874837, -0.37071073), (0, 0.9287483, -0.3707108), (0, -0.9881453, -0.1535214), (0, -0.9881453, -0.1535214), (0, -0.9881453, -0.1535214), (0, -0.9881453, -0.1535214), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, -4.0012377e-8, 0), (-1, -4.0012377e-8, 0), (-1, 0, 0), (-1, 0, 0), (-1, -4.0012377e-8, 0), (1, 0, 0), (1, 0, 0), (1, -2.6972329e-9, 0), (1, -2.1696203e-9, 0), (1, -6.641329e-8, 0), (1, -3.3206646e-8, 0), (1, -8.9070454e-8, 0), (0.99999994, -1.3282659e-7, 0), (0.99999994, -1.3282659e-7, 0), (1, -3.3206646e-8, 0), (1, -6.641329e-8, 0), (1, 0, 0), (1, -2.1696203e-9, 0), (-1, 0, 0), (-1, 0, 0), (-1, -4.0012377e-8, 0), (-1, 0, 0), (0.010011662, -0.031718515, 0.9994467), (-0.010014315, -0.031720996, 0.9994466), (0, 0, 0.99999994), (0, 0, 0.99999994), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, -2.6972329e-9, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (-1.3665704e-7, 0.38250202, 0.92395467), (0.0000032173702, 0.015330646, 0.9998824), (0.0007939203, 0.01533445, 0.99988204), (0, 0.3825421, 0.9239381), (0, 0.74020183, 0.67238474), (-1.3665704e-7, 0.38250202, 0.92395467), (0, 0.3825421, 0.9239381), (-3.2281916e-10, 0.74020183, 0.67238474), (0, 0.951092, 0.30890787), (0, 0.74020183, 0.67238474), (-3.2281916e-10, 0.74020183, 0.67238474), (1.200533e-7, 0.951092, 0.30890772), (-1.8958235e-7, 0.9856511, 0.16879517), (0, 0.951092, 0.30890787), (1.200533e-7, 0.951092, 0.30890772), (2.9471994e-7, 0.9856511, 0.16879518), (8.2398765e-7, 0.0052655386, 0.9999862), (0.0007939203, 0.01533445, 0.99988204), (0.0000032173702, 0.015330646, 0.9998824), (0, 0.005265519, 0.9999862), (-0.0000018728897, -0.8615383, 0.5076929), (0, -0.8615378, 0.5076934), (8.2398765e-7, 0.0052655386, 0.9999862), (0, 0.005265519, 0.9999862), (1.9607722e-8, 0.84804595, -0.52992266), (0, 0.013453707, -0.9999095), (-0.00012099594, 0.013453722, -0.9999095), (0, 0.84804595, -0.52992266), (-0.00012099594, 0.013453722, -0.9999095), (0, 0.013453707, -0.9999095), (8.733054e-9, -0.0077471733, -0.99996996), (0, -0.0077471733, -0.99996996), (0, -0.9877731, -0.15589818), (0.0000034261586, -0.9877731, -0.15589818), (-1.8519497e-10, -0.93589526, -0.35227844), (0, -0.93589526, -0.35227844), (0, -0.93589526, -0.35227844), (-1.8519497e-10, -0.93589526, -0.35227844), (-3.1771719e-10, -0.74020296, -0.6723835), (0, -0.74020296, -0.6723835), (0, -0.74020296, -0.6723835), (-3.1771719e-10, -0.74020296, -0.6723835), (-2.6009633e-10, -0.41491172, -0.90986174), (0, -0.41491172, -0.90986174), (0, -0.41491172, -0.90986174), (-2.6009633e-10, -0.41491172, -0.90986174), (0, -0.0077471733, -0.99996996), (8.733054e-9, -0.0077471733, -0.99996996), (0.99964494, -0.012374282, -0.023601111), (0.9996333, -0.012395938, -0.024075594), (0.9996447, -0.012829558, -0.023366101), (0.9996447, -0.012829558, -0.023366101), (0.9996447, -0.012829558, -0.023366101), (0.9996447, -0.012829558, -0.023366101), (0.9996447, -0.012829558, -0.023366101), (0.99964553, -0.012703093, -0.023401234), (-0.99964494, -0.012373982, -0.023601305), (-0.99629164, 0.07469797, -0.04269942), (-0.99810624, 0.056068763, -0.025301386), (-0.9996455, -0.012702219, -0.023401361), (-0.99629164, 0.07469797, -0.04269942), (-0.99521846, 0.08140349, -0.05397964), (-0.99810624, 0.056068763, -0.025301386), (-0.99964494, -0.012373982, -0.023601305), (-0.9996455, -0.012702219, -0.023401361), (-0.9996447, -0.012829625, -0.023366196), (-0.9996447, -0.012829625, -0.023366196), (-0.9996447, -0.012829625, -0.023366196), (-0.9996447, -0.012829625, -0.023366196), (-0.9996447, -0.012829625, -0.023366196), (-0.9996383, -0.012556738, -0.02378111), (0.99964494, -0.012374282, -0.023601111), (0.99964553, -0.012703093, -0.023401234), (0.99810666, 0.056063883, -0.025297051), (0.9962922, 0.07469109, -0.042696673), (0.9962922, 0.07469109, -0.042696673), (0.99810666, 0.056063883, -0.025297051), (0.9952168, 0.08140029, -0.054013997), (-1.8958235e-7, 0.9856511, 0.16879517), (2.9471994e-7, 0.9856511, 0.16879518), (0, 0.98534006, 0.17060158), (0, 0.98534006, 0.17060159), (0, -0.8665845, 0.49903044), (0, -0.8665844, 0.49903047), (0, -0.8615378, 0.5076934), (-0.0000018728897, -0.8615383, 0.5076929), (0, 0.8598283, -0.5105832), (1.9607722e-8, 0.84804595, -0.52992266), (0, 0.84804595, -0.52992266), (0, 0.8598283, -0.5105832), (0, -0.9881461, -0.15351664), (0.0000034261586, -0.9877731, -0.15589818), (0, -0.9877731, -0.15589818), (0, -0.9881461, -0.15351664), (-1, -4.0012377e-8, 0), (-1, 0, 0), (-1, -1.2760985e-7, 0), (-1, -4.0012377e-8, 0), (-1, -4.0012377e-8, 0), (-1, -1.2760985e-7, 0), (-1, -6.35164e-8, 0), (1, -2.1696203e-9, 0), (1, -2.6972329e-9, 0), (1, -8.678481e-9, 0), (1, -8.678481e-9, 0), (1, -8.678481e-9, 0), (1, -8.678481e-9, 0), (1, -8.678481e-9, 0), (1, -5.2343854e-9, 0), (1, -8.9070454e-8, 0), (1, -3.3206646e-8, 0), (1, 0, 0), (1, -2.1696203e-9, 0), (1, -5.2343854e-9, 0), (1, 0, 0), (1, -3.3206646e-8, 0), (-1, -4.0012377e-8, 0), (-1, -6.35164e-8, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-1, 0, 0), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.00016, 0.023406, -1.093784), (0.000169, 0.023406, -1.093784), (0.00016, 0.023416, -1.093784), (0.000169, 0.023416, -1.093784), (0.00016, 0.023406, -1.093784), (0.000169, 0.023406, -1.093784), (0.00016, 0.023416, -1.093784), (0.000169, 0.023416, -1.093784), (0.00016, 0.023406, -1.093784), (0.000169, 0.023406, -1.093784), (0.00016, 0.023416, -1.093784), (0.000169, 0.023416, -1.093784), (0.00016, 0.023406, -1.093784), (0.000169, 0.023406, -1.093784), (0.00016, 0.023416, -1.093784), (0.000169, 0.023416, -1.093784), (0.00016, 0.023406, -1.093784), (0.000169, 0.023406, -1.093784), (0.00016, 0.023416, -1.093784), (0.000169, 0.023416, -1.093784), (0.00016, 0.023406, -1.093784), (0.000169, 0.023406, -1.093784), (0.00016, 0.023416, -1.093784), (0.000169, 0.023416, -1.093784), (0.00016, 0.023406, -1.093784), (0.000169, 0.023406, -1.093784), (0.00016, 0.023416, -1.093784), (0.000169, 0.023416, -1.093784), (0.028964, 0.144465, 0.364119), (0.464277, 0.144465, 0.364119), (0.028964, 0.072208, 0.242441), (0.028964, 0.067066, 0.239378), (0.464277, 0.067066, 0.239378), (0.464277, 0.072208, 0.242441), (0.028964, 0.144465, 0.372465), (0.028964, 0.072208, 0.372465), (0.028964, 0.067066, 0.372465), (0.028964, -0.195217, 0.372465), (0.464277, 0.072208, 0.372465), (0.464277, 0.144465, 0.372465), (0.464277, 0.067066, 0.372465), (0.464277, -0.195217, 0.372465), (0.464277, -0.156936, 0.239378), (0.464277, -0.178174, 0.262758), (0.028964, -0.178174, 0.262758), (0.028964, -0.156936, 0.239378), (0.028964, -0.176557, 0.253811), (0.464277, -0.176557, 0.253811), (0.028964, -0.171954, 0.246226), (0.464277, -0.171954, 0.246226), (0.028964, -0.165063, 0.241158), (0.464277, -0.165063, 0.241158), (0.033693, 0.135777, 0.366968), (0.459547, 0.135777, 0.366968), (0.456934, 0.067389, 0.248207), (0.036306, 0.067389, 0.248207), (0.459703, -0.16918, 0.264589), (0.457046, -0.18809, 0.373807), (0.036194, -0.18809, 0.373807), (0.033537, -0.16918, 0.264589), (0.456934, 0.06532, 0.246974), (0.036306, 0.06532, 0.246974), (0.039189, 0.072208, 0.372465), (0.036194, 0.137235, 0.372465), (0.039189, 0.067066, 0.372465), (0.459632, -0.168141, 0.257649), (0.459632, -0.165512, 0.253318), (0.459632, -0.161577, 0.250424), (0.459686, -0.15604, 0.249389), (0.454051, 0.067066, 0.372465), (0.457046, 0.137235, 0.372465), (0.454051, 0.072208, 0.372465), (0.033554, -0.15604, 0.249389), (0.033608, -0.161577, 0.250424), (0.033608, -0.165512, 0.253318), (0.033608, -0.168141, 0.257649), (0.038604, 0.066712, 0.347002), (0.035542, -0.183449, 0.347002), (0.454636, 0.066712, 0.347002), (0.454642, 0.071221, 0.347002), (0.459108, 0.124279, 0.347002), (0.457698, -0.183449, 0.347002), (0.038598, 0.071221, 0.347002), (0.034133, 0.124279, 0.347002), (0.028964, 0.134301, 0.347002), (0.464277, 0.134301, 0.347002), (0.464277, -0.191262, 0.347002), (0.028964, -0.191262, 0.347002), (0.028964, 0.072208, 0.347002), (0.028964, 0.067066, 0.347002), (0.464277, 0.067066, 0.347002), (0.464277, 0.072208, 0.347002), (0.028964, -0.209638, 0.372465), (0.464277, -0.209638, 0.372465), (0.464277, -0.205682, 0.347002), (0.028964, -0.205682, 0.347002)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-169.52118, -113.22002), (-169.5211, -113.22002), (-169.5211, -113.21994), (-169.52118, -113.21994), (-170.19357, 0.663223), (-170.19357, -0.59836), (-170.17729, -0.590952), (-170.17729, 0.655814), (-171.12007, 0.628538), (-171.14, 0.648741), (-171.14, -0.567574), (-171.12007, -0.547371), (-170.21104, 0.628538), (-170.19087, 0.648741), (-170.39275, 0.648741), (-170.39275, 0.620169), (-170.39275, 0.620169), (-170.39275, 0.648741), (-170.40714, 0.648741), (-170.40714, 0.620169), (-171.12007, -0.547371), (-171.14, -0.567574), (-170.40714, -0.567574), (-170.40714, -0.539002), (-170.39275, -0.539002), (-170.39275, -0.567574), (-170.19087, -0.567574), (-170.21104, -0.547371), (-170.40714, -0.539002), (-170.40714, -0.567574), (-170.39275, -0.567574), (-170.39275, -0.539002), (-170.40714, 0.620169), (-170.40714, 0.648741), (-171.14, 0.648741), (-171.12007, 0.628538), (-170.21104, -0.547371), (-170.19087, -0.567574), (-170.19087, 0.648741), (-170.21104, 0.628538), (-170.36433, 0.680077), (-170.38884, 0.680077), (-170.38884, -0.598909), (-170.36433, -0.598909), (-169.96442, 0.399659), (-170.03925, 0.386711), (-170.03925, -0.31129), (-169.96817, -0.312279), (-169.91359, 0.218324), (-169.98465, 0.215568), (-169.98465, 0.202982), (-169.91359, 0.203972), (-169.91359, 0.218324), (-169.91359, 0.399829), (-169.92892, 0.395759), (-169.98465, 0.363667), (-169.98465, 0.215568), (-169.90984, -0.508233), (-169.91359, 0.203972), (-169.98465, 0.202982), (-169.98465, -0.495279), (-169.96817, -0.326626), (-169.96817, -0.312279), (-170.03925, -0.31129), (-170.03925, -0.32387), (-169.96817, -0.326626), (-170.03925, -0.32387), (-170.03925, -0.471915), (-169.98349, -0.503995), (-169.96817, -0.508063), (-170.1237, 0.622392), (-170.199, 0.620559), (-170.199, -0.562069), (-170.1237, -0.563901), (-170.19357, -0.59836), (-170.19357, 0.663223), (-170.25272, 0.661922), (-170.25272, -0.597059), (-170.31404, -0.598909), (-170.31404, 0.680077), (-170.36433, 0.680077), (-170.36433, -0.598909), (-170.33467, 0.651273), (-170.33467, -0.570105), (-170.26323, -0.570105), (-170.26323, 0.651273), (-170.07243, 0.26288), (-170.07243, 0.464412), (-170.0957, 0.464412), (-170.14345, 0.436061), (-170.14345, 0.26288), (-170.14345, 0.248539), (-170.07243, 0.248539), (-170.07243, 0.26288), (-170.14345, 0.26288), (-170.01994, -0.307352), (-170.01994, 0.42421), (-170.09096, 0.413177), (-170.09096, -0.307352), (-170.01994, -0.321694), (-170.09096, -0.321694), (-170.09096, -0.494883), (-170.04323, -0.523234), (-170.01994, -0.523234), (-170.09096, -0.321694), (-170.01994, -0.321694), (-170.01994, -0.307352), (-170.09096, -0.307352), (-170.07243, -0.482991), (-170.07243, 0.248539), (-170.14345, 0.248539), (-170.14345, -0.471959), (-171.14, -0.567574), (-171.14, 0.648741), (-171.1803, 0.648741), (-171.1803, -0.567574), (-170.07243, -0.482991), (-170.14345, -0.471959), (-170.14345, -0.51218), (-170.07243, -0.523213), (-170.27611, 0.647466), (-170.27611, -0.566298), (-170.23589, -0.566298), (-170.23589, 0.647466), (-170.09096, 0.413177), (-170.01994, 0.42421), (-170.01994, 0.464433), (-170.09096, 0.4534), (-143.9544, -113.009964), (-138.25906, -113.009964), (-138.25906, -107.3105), (-143.9544, -107.3105), (-116.5884, -110.94038), (-116.58829, -110.94038), (-116.58829, -110.940254), (-116.5884, -110.940254), (-88.71439, -113.31285), (-85.53026, -113.31285), (-85.53026, -110.12652), (-88.71439, -110.12652), (-69.000496, -111.67041), (-69.00049, -111.67041), (-69.00049, -111.670395), (-69.000496, -111.670395), (-71.5438, -0.982783), (-71.52927, -0.982924), (-71.52927, 0.135951), (-71.5438, 0.13581), (-71.55413, -0.982783), (-71.5438, -0.982783), (-71.5438, 0.13581), (-71.55413, 0.13581), (-71.561035, -0.982783), (-71.55413, -0.982783), (-71.55413, 0.13581), (-71.561035, 0.13581), (-71.3484, -0.982463), (-71.33019, -0.982275), (-71.33019, 0.135344), (-71.3484, 0.13553), (-70.94805, 0.128727), (-71.52927, 0.135951), (-71.52927, -0.982924), (-70.94805, -0.9757), (-70.94262, -0.9757), (-70.94262, 0.128727), (-70.94805, 0.128727), (-70.94805, -0.9757), (-72.07186, -1.042692), (-72.057106, -1.042692), (-72.057106, 0.206422), (-72.07186, 0.206422), (-72.057106, 0.206422), (-72.057106, -1.042692), (-71.41434, -1.042692), (-71.41434, 0.206422), (-71.65969, -0.988512), (-71.65969, 0.152243), (-71.683136, 0.152243), (-71.683136, -0.988512), (-71.35803, -1.042692), (-71.35803, 0.206422), (-71.37125, 0.206422), (-71.37125, -1.042692), (-71.37125, -1.042692), (-71.37125, 0.206422), (-71.39102, 0.206422), (-71.39102, -1.042692), (-71.39102, -1.042692), (-71.39102, 0.206422), (-71.41434, 0.206422), (-71.41434, -1.042692), (-71.35676, -0.232123), (-71.35676, 0.419634), (-71.57147, 0.38246), (-71.589554, 0.379751), (-71.60084, 0.372901), (-71.608376, 0.36265), (-71.61107, 0.348225), (-71.61736, -0.228496), (-71.479164, 0.269651), (-71.479164, 0.281398), (-71.73656, 0.271414), (-71.73977, 0.266023), (-71.479164, 0.281398), (-71.479164, 0.419635), (-71.73656, 0.271414), (-71.479164, 0.269651), (-71.73977, 0.266023), (-71.733475, -0.310697), (-71.73078, -0.325123), (-71.72324, -0.335374), (-71.71196, -0.342224), (-71.69388, -0.344932), (-71.479164, -0.382107), (-71.35676, -0.232123), (-71.61736, -0.228496), (-71.61415, -0.233886), (-71.35676, -0.24387), (-71.35676, -0.24387), (-71.61415, -0.233886), (-71.35676, -0.382107), (-71.3484, -0.982463), (-71.3484, 0.13553), (-71.5646, 0.13027), (-71.5646, -0.977202), (-70.964645, -0.51808), (-70.964645, 0.67089), (-71.24105, 0.66481), (-71.24105, -0.512001), (-72.25003, -1.042692), (-72.07186, -1.042692), (-72.07186, 0.206422), (-72.25003, 0.206422), (-71.43893, 0.152243), (-71.65969, 0.152243), (-71.65969, -0.988512), (-71.43893, -0.988512), (-71.08881, 0.280692), (-71.08881, 0.442409), (-71.36114, 0.280692), (-71.08881, 0.267301), (-71.08881, 0.280692), (-71.36114, 0.280692), (-71.36911, 0.267301), (-71.22008, -0.230349), (-71.22008, 0.442449), (-71.43948, 0.408364), (-71.46278, 0.404153), (-71.482544, 0.392163), (-71.49574, 0.374217), (-71.500374, 0.35305), (-71.500374, -0.230349), (-71.22008, -0.405457), (-71.22008, -0.243741), (-71.4924, -0.243741), (-71.22008, -0.230349), (-71.500374, -0.230349), (-71.4924, -0.243741), (-71.22008, -0.243741), (-71.08881, 0.267301), (-71.36911, 0.267301), (-71.36911, -0.316099), (-71.36448, -0.337266), (-71.35128, -0.355212), (-71.33153, -0.367202), (-71.30822, -0.371413), (-71.08881, -0.405498), (5.646933, -120.60234), (7.358486, -120.60234), (7.358486, -118.890785), (5.646933, -118.890785), (-5.253075, -117.08902), (-3.54152, -117.08902), (-3.54152, -115.377464), (-5.253075, -115.377464)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_FridgeDrawer2C4_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]
                rel material:binding = </root/_materials/M_FridgeDrawer2C4_0>
            }

            def GeomSubset "M_FridgeDrawer2C4_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [31]
                rel material:binding = </root/_materials/M_FridgeDrawer2C4_1>
            }

            def GeomSubset "M_FridgeDrawer2C4_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [32]
                rel material:binding = </root/_materials/M_FridgeDrawer2C4_2>
            }

            def GeomSubset "M_FridgeDrawer2C4_3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [33]
                rel material:binding = </root/_materials/M_FridgeDrawer2C4_3>
            }

            def GeomSubset "M_FridgeDrawer2C4_4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62]
                rel material:binding = </root/_materials/M_FridgeDrawer2C4_4>
            }

            def GeomSubset "M_FridgeDrawer2C4_5" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [63]
                rel material:binding = </root/_materials/M_FridgeDrawer2C4_5>
            }

            def GeomSubset "M_FridgeDrawer2C4_6" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [64]
                rel material:binding = </root/_materials/M_FridgeDrawer2C4_6>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer2C4_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2C4_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2C4_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge.tga@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2C4_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer2C4_1"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2C4_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer2C4_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2C4_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2C4_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2C4_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer2C4_2"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2C4_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer2C4_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2C4_2/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2C4_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2C4_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer2C4_3"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2C4_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.5735294, 0.5735294, 0.5735294)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2C4_3/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2C4_3/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer2C4_4"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2C4_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.39705884, 0.39705884, 0.39705884)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }

        def Material "M_FridgeDrawer2C4_5"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2C4_5/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer2C4_5/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2C4_5/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Decal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2C4_5/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Decal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2C4_5/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer2C4_6"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2C4_6/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer2C4_6/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2C4_6/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Readout_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2C4_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2C4_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

