#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.0"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "FridgeDrawer1B3"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "FridgeDrawer1B3" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.299469, -0.212658, -0.887726), (-0.002316, 0.178961, -0.556776)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 8, 4, 3, 8, 4, 3, 4, 4, 4, 4, 3, 4, 8, 3, 4, 8]
            int[] faceVertexIndices = [0, 1, 3, 2, 68, 61, 81, 78, 56, 37, 41, 55, 61, 34, 35, 60, 60, 35, 36, 62, 55, 41, 40, 67, 69, 38, 39, 68, 67, 40, 38, 69, 62, 36, 37, 56, 68, 39, 34, 61, 28, 34, 39, 29, 56, 75, 74, 62, 69, 77, 76, 67, 69, 68, 78, 77, 55, 67, 76, 79, 60, 62, 74, 80, 60, 80, 81, 61, 75, 56, 55, 79, 83, 82, 28, 29, 93, 92, 91, 90, 35, 34, 28, 82, 86, 87, 36, 35, 86, 40, 41, 84, 88, 38, 89, 83, 29, 39, 89, 38, 40, 88, 37, 36, 87, 85, 41, 37, 90, 91, 37, 85, 93, 90, 85, 84, 92, 93, 84, 41, 91, 92, 4, 5, 7, 6, 8, 9, 11, 10, 12, 13, 15, 14, 16, 17, 19, 18, 20, 21, 23, 22, 24, 25, 27, 26, 65, 66, 70, 71, 64, 65, 71, 72, 63, 64, 72, 73, 54, 63, 73, 57, 59, 70, 66, 58, 52, 53, 59, 58, 33, 32, 31, 30, 31, 32, 42, 45, 43, 44, 46, 47, 47, 46, 48, 49, 49, 48, 50, 51, 51, 50, 45, 42, 74, 75, 57, 73, 72, 71, 70, 59, 76, 77, 52, 58, 77, 78, 52, 76, 58, 66, 65, 64, 63, 54, 79, 74, 59, 53, 80, 80, 53, 81, 54, 57, 75, 79, 78, 81, 53, 52, 83, 33, 30, 82, 85, 44, 43, 84, 86, 82, 30, 87, 86, 30, 31, 88, 84, 43, 47, 49, 51, 42, 32, 83, 89, 33, 88, 32, 33, 89, 87, 31, 45, 50, 48, 46, 44, 85]
            rel material:binding = </root/_materials/M_FridgeDrawer1B3_0>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0.000001762029, -0.89113396, 0.45374036), (0.000001762029, -0.89113396, 0.45374036), (8.165953e-7, -0.91032505, 0.41389406), (-1.2910459e-7, -0.910325, 0.4138942), (-0.04589343, -0.07502118, 0.9961252), (-0.017399397, -0.02788893, 0.9994596), (0.017398626, -0.027893152, 0.99945945), (0.04589575, -0.07501945, 0.99612534), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.076182514, 0.002198986, 0.99709153), (-0.07619281, 0.0022000663, 0.9970907), (0.04589575, -0.07501945, 0.99612534), (0.017398626, -0.027893152, 0.99945945), (0.07617815, 0.0021993523, 0.99709177), (0.076188475, 0.0021971767, 0.997091), (-0.0000027804967, 0, 1), (-0.0000028224224, 0, 1), (-0.0000028224233, 0, 1), (-0.0000028497204, 0, 1), (0.076188475, 0.0021971767, 0.997091), (0.07617815, 0.0021993523, 0.99709177), (-0.0000028224224, 0, 1), (-0.0000027804967, 0, 1), (-0.07619281, 0.0022000663, 0.9970907), (-0.076182514, 0.002198986, 0.99709153), (-0.017399397, -0.02788893, 0.9994596), (-0.04589343, -0.07502118, 0.9961252), (-0.0000028497204, 0, 1), (-0.0000028224233, 0, 1), (0, 0, 1), (0, 0, 1), (-8.193186e-7, 0.9286966, -0.3708405), (0, 1, 0), (0, 1, 0), (-8.6109225e-7, 0.92869693, -0.37083948), (0.999664, -0.008780517, -0.024387857), (0.9997765, -0.0089988625, -0.019131787), (0.99978364, -0.008881284, -0.018806476), (0.9996657, -0.008570344, -0.024394805), (-0.9961215, 0.05840631, -0.065807216), (-0.9969662, 0.070306465, -0.03339845), (-0.99978375, -0.008876929, -0.018807271), (-0.9996655, -0.008579268, -0.024396291), (-0.9961215, 0.05840631, -0.065807216), (-0.99562293, 0.062892646, -0.06913298), (-0.99632925, 0.07469563, -0.041816626), (-0.9969662, 0.070306465, -0.03339845), (-0.9996634, -0.008785458, -0.024410354), (-0.9996655, -0.008579268, -0.024396291), (-0.99978375, -0.008876929, -0.018807271), (-0.99977714, -0.008999884, -0.019096222), (0.9961228, 0.058394257, -0.06579867), (0.9996657, -0.008570344, -0.024394805), (0.99978364, -0.008881284, -0.018806476), (0.99696916, 0.07026642, -0.033395935), (0.9961228, 0.058394257, -0.06579867), (0.99696916, 0.07026642, -0.033395935), (0.9963335, 0.074704014, -0.041699268), (0.99562377, 0.06290266, -0.069113), (-4.8510265e-7, 0.99083143, 0.13510406), (-0.0000039242927, 0.98532057, 0.17071474), (-0.0000039242927, 0.98532057, 0.17071474), (1.5462865e-7, 0.9908314, 0.13510403), (0.000012297756, 0.9019455, -0.43185002), (-0.000002556118, 0.90194523, -0.43185028), (-8.193186e-7, 0.9286966, -0.3708405), (-8.6109225e-7, 0.92869693, -0.37083948), (0.0000018789976, -0.9881266, -0.15364188), (0.0000018789976, -0.9881266, -0.15364188), (0.0000018789976, -0.9881266, -0.15364188), (0.0000018789976, -0.9881266, -0.15364188), (-1, -1.739353e-7, 0), (-1, -3.478706e-7, 0), (-1, -3.478706e-7, 0), (-1, -2.2599455e-7, 0), (-1, 7.720224e-8, 0), (-1, -0.0000014463457, -1.6433782e-7), (-1, -0.0000015889682, -1.234541e-7), (-1, -1.739353e-7, 0), (-1, 7.720224e-8, 0), (1, 0.0000016143171, 1.2532409e-7), (1, 0.0000014558403, 1.1302109e-7), (1, 0.0000022627453, 2.259998e-7), (1, 0.0000018560195, 1.6683063e-7), (1, 0, 0), (1, 2.1889281e-7, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 2.1889281e-7, 0), (1, 0, 0), (1, 0.0000016143171, 1.2532409e-7), (1, 0.0000018560195, 1.6683063e-7), (-1, -0.0000014329798, -1.1133467e-7), (-1, -0.0000015889682, -1.234541e-7), (-1, -0.0000014463457, -1.6433782e-7), (-1, -0.000002226069, -2.226232e-7), (0.017398626, -0.027893152, 0.99945945), (-0.017399397, -0.02788893, 0.9994596), (0, 0, 1), (0, 0, 1), (-1, -0.0000014329798, -1.1133467e-7), (-1, -0.000002226069, -2.226232e-7), (-1, 0, 0), (-1, 0, 0), (9.539474e-9, 0, -1), (9.539474e-9, 0, -1), (9.539474e-9, 0, -1), (9.539474e-9, 0, -1), (1, 0.0000022627453, 2.259998e-7), (1, 0.0000014558403, 1.1302109e-7), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (2.1378219e-7, 0.38230532, 0.924036), (-0.0000029539224, 0.010813559, 0.9999415), (0.00081621605, 0.010817826, 0.99994123), (-0.0000014769903, 0.3822662, 0.9240522), (-0.0000028144987, 0.7398927, 0.6727249), (2.1378219e-7, 0.38230532, 0.924036), (-0.0000014769903, 0.3822662, 0.9240522), (-2.5647955e-7, 0.73989314, 0.6727244), (-0.000003565271, 0.95102555, 0.30911237), (-0.0000028144987, 0.7398927, 0.6727249), (-2.5647955e-7, 0.73989314, 0.6727244), (-1.7147977e-7, 0.9510255, 0.30911213), (-0.00010137177, 0.99177504, 0.12799326), (-0.000003565271, 0.95102555, 0.30911237), (-1.7147977e-7, 0.9510255, 0.30911213), (2.723391e-7, 0.9917751, 0.12799278), (-0.0000018428545, 0.0036739127, 0.9999933), (0.00081621605, 0.010817826, 0.99994123), (-0.0000029539224, 0.010813559, 0.9999415), (4.043232e-7, 0.0036572218, 0.9999934), (-2.4866313e-7, -0.9098898, 0.41485006), (0.0000012143335, -0.90989983, 0.414828), (-0.0000018428545, 0.0036739127, 0.9999933), (4.043232e-7, 0.0036572218, 0.9999934), (-0.0000024323804, 0.8975225, -0.4409685), (-3.0650426e-8, 0.009524554, -0.99995464), (-0.000010655153, 0.009523883, -0.9999547), (-0.000002930683, 0.89752215, -0.44096947), (-0.000010655153, 0.009523883, -0.9999547), (-3.0650426e-8, 0.009524554, -0.99995464), (4.3622023e-7, -0.0055040643, -0.99998486), (7.384358e-8, -0.0055043474, -0.99998486), (9.36652e-7, -0.9928576, -0.11930588), (9.326341e-7, -0.99285746, -0.1193066), (-3.2016658e-7, -0.9358264, -0.35246125), (0.0000017616096, -0.9358263, -0.35246167), (0.0000017616096, -0.9358263, -0.35246167), (-3.2016658e-7, -0.9358264, -0.35246125), (0.0000013073894, -0.73992884, -0.672685), (0.0000013095603, -0.73992896, -0.67268497), (0.0000013095603, -0.73992896, -0.67268497), (0.0000013073894, -0.73992884, -0.672685), (-1.7195475e-7, -0.41453817, -0.910032), (9.295219e-7, -0.41458476, -0.91001064), (9.295219e-7, -0.41458476, -0.91001064), (-1.7195475e-7, -0.41453817, -0.910032), (7.384358e-8, -0.0055043474, -0.99998486), (4.3622023e-7, -0.0055040643, -0.99998486), (0.99978364, -0.008881284, -0.018806476), (0.9997765, -0.0089988625, -0.019131787), (0.99980295, -0.0090990765, -0.0176453), (0.99980295, -0.0090990765, -0.0176453), (0.99980295, -0.0090990765, -0.0176453), (0.99980295, -0.0090990765, -0.0176453), (0.99980295, -0.0090990765, -0.0176453), (0.99980503, -0.008949169, -0.017601527), (-0.99978375, -0.008876929, -0.018807271), (-0.9969662, 0.070306465, -0.03339845), (-0.998475, 0.05168351, -0.019400727), (-0.9998026, -0.008999623, -0.017715313), (-0.9969662, 0.070306465, -0.03339845), (-0.99632925, 0.07469563, -0.041816626), (-0.998475, 0.05168351, -0.019400727), (-0.99978375, -0.008876929, -0.018807271), (-0.9998026, -0.008999623, -0.017715313), (-0.99980295, -0.009102374, -0.017645571), (-0.99980295, -0.009102374, -0.017645571), (-0.99980295, -0.009102374, -0.017645571), (-0.99980295, -0.009102374, -0.017645571), (-0.99980295, -0.009102374, -0.017645571), (-0.99977714, -0.008999884, -0.019096222), (0.99978364, -0.008881284, -0.018806476), (0.99980503, -0.008949169, -0.017601527), (0.99847513, 0.05168307, -0.019396218), (0.99696916, 0.07026642, -0.033395935), (0.99696916, 0.07026642, -0.033395935), (0.99847513, 0.05168307, -0.019396218), (0.9963335, 0.074704014, -0.041699268), (-0.00010137177, 0.99177504, 0.12799326), (2.723391e-7, 0.9917751, 0.12799278), (-4.8510265e-7, 0.99083143, 0.13510406), (1.5462865e-7, 0.9908314, 0.13510403), (-1.2910459e-7, -0.910325, 0.4138942), (8.165953e-7, -0.91032505, 0.41389406), (0.0000012143335, -0.90989983, 0.414828), (-2.4866313e-7, -0.9098898, 0.41485006), (0.000012297756, 0.9019455, -0.43185002), (-0.0000024323804, 0.8975225, -0.4409685), (-0.000002930683, 0.89752215, -0.44096947), (-0.000002556118, 0.90194523, -0.43185028), (0, -0.993419, -0.11453691), (9.326341e-7, -0.99285746, -0.1193066), (9.36652e-7, -0.9928576, -0.11930588), (0, -0.993419, -0.11453691), (-1, 7.720224e-8, 0), (-1, -2.2599455e-7, 0), (-1, 5.444551e-7, 0), (-1, -0.0000014463457, -1.6433782e-7), (-1, 7.720224e-8, 0), (-1, 5.444551e-7, 0), (-1, -0.0000017077504, -2.4751645e-7), (1, 0.0000018560195, 1.6683063e-7), (1, 0.0000022627453, 2.259998e-7), (1, 0.0000033198726, 4.1667428e-7), (1, 0.0000033198726, 4.1667428e-7), (1, 0.0000033198726, 4.1667428e-7), (1, 0.0000033198726, 4.1667428e-7), (1, 0.0000033198726, 4.1667428e-7), (1, 0.0000023495993, 2.5127412e-7), (1, 0, 0), (1, 2.1889281e-7, 0), (1, 7.259388e-7, 0), (1, 0.0000018560195, 1.6683063e-7), (1, 0.0000023495993, 2.5127412e-7), (1, 7.259388e-7, 0), (1, 2.1889281e-7, 0), (-1, -0.0000014463457, -1.6433782e-7), (-1, -0.0000017077504, -2.4751645e-7), (-1, -0.000003264126, -4.1044308e-7), (-1, -0.000003264126, -4.1044308e-7), (-1, -0.000003264126, -4.1044308e-7), (-1, -0.000003264126, -4.1044308e-7), (-1, -0.000003264126, -4.1044308e-7), (-1, -0.000002226069, -2.226232e-7)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.002324, 0.027207, -0.887726), (-0.002316, 0.027207, -0.887726), (-0.002324, 0.027215, -0.887726), (-0.002316, 0.027215, -0.887726), (-0.002324, 0.027207, -0.887726), (-0.002316, 0.027207, -0.887726), (-0.002324, 0.027215, -0.887726), (-0.002316, 0.027215, -0.887726), (-0.002324, 0.027207, -0.887726), (-0.002316, 0.027207, -0.887726), (-0.002324, 0.027215, -0.887726), (-0.002316, 0.027215, -0.887726), (-0.002324, 0.027207, -0.887726), (-0.002316, 0.027207, -0.887726), (-0.002324, 0.027215, -0.887726), (-0.002316, 0.027215, -0.887726), (-0.002324, 0.027207, -0.887726), (-0.002316, 0.027207, -0.887726), (-0.002324, 0.027215, -0.887726), (-0.002316, 0.027215, -0.887726), (-0.002324, 0.027207, -0.887726), (-0.002316, 0.027207, -0.887726), (-0.002324, 0.027215, -0.887726), (-0.002316, 0.027215, -0.887726), (-0.002324, 0.027207, -0.887726), (-0.002316, 0.027207, -0.887726), (-0.002324, 0.027215, -0.887726), (-0.002316, 0.027215, -0.887726), (-0.299469, 0.178961, -0.565239), (-0.035244, 0.178961, -0.565239), (-0.299469, 0.115793, -0.697172), (-0.299469, 0.111298, -0.699847), (-0.035244, 0.111299, -0.699847), (-0.035244, 0.115794, -0.697172), (-0.299469, 0.178961, -0.557949), (-0.299469, 0.115793, -0.557949), (-0.299469, 0.111298, -0.557949), (-0.299468, -0.200051, -0.557949), (-0.035244, 0.115794, -0.557949), (-0.035244, 0.178961, -0.557949), (-0.035244, 0.111299, -0.557949), (-0.035243, -0.200051, -0.557949), (-0.035243, -0.166585, -0.699847), (-0.035243, -0.185152, -0.679424), (-0.299468, -0.185152, -0.679424), (-0.299468, -0.166586, -0.699847), (-0.299468, -0.183739, -0.68724), (-0.035243, -0.183738, -0.68724), (-0.299468, -0.179714, -0.693866), (-0.035243, -0.179714, -0.693866), (-0.299468, -0.173691, -0.698293), (-0.035243, -0.17369, -0.698293), (-0.041662, 0.11158, -0.692136), (-0.29305, 0.11158, -0.692136), (-0.039241, -0.177289, -0.677825), (-0.041564, -0.19382, -0.556776), (-0.293147, -0.193821, -0.556776), (-0.29547, -0.17729, -0.677825), (-0.041662, 0.109772, -0.693212), (-0.29305, 0.109771, -0.693212), (-0.29053, 0.115793, -0.557949), (-0.293148, 0.17264, -0.557949), (-0.29053, 0.111298, -0.557949), (-0.039303, -0.17638, -0.683887), (-0.039303, -0.174082, -0.687671), (-0.039303, -0.170642, -0.690199), (-0.039256, -0.165802, -0.691103), (-0.044183, 0.111299, -0.557949), (-0.041565, 0.17264, -0.557949), (-0.044183, 0.115794, -0.557949), (-0.295455, -0.165803, -0.691103), (-0.295408, -0.170643, -0.690199), (-0.295408, -0.174083, -0.687671), (-0.295408, -0.176381, -0.683887), (-0.291041, 0.110988, -0.580192), (-0.293717, -0.189764, -0.580192), (-0.043671, 0.110989, -0.580192), (-0.043666, 0.11493, -0.580192), (-0.039763, 0.161315, -0.580192), (-0.040994, -0.189763, -0.580192), (-0.291046, 0.11493, -0.580192), (-0.29495, 0.161314, -0.580192), (-0.299469, 0.170074, -0.580192), (-0.035244, 0.170075, -0.580192), (-0.035243, -0.196593, -0.580192), (-0.299468, -0.196593, -0.580192), (-0.299469, 0.115793, -0.580192), (-0.299469, 0.111298, -0.580192), (-0.035244, 0.111299, -0.580192), (-0.035244, 0.115794, -0.580192), (-0.299468, -0.212658, -0.557949), (-0.035243, -0.212658, -0.557949), (-0.035243, -0.209199, -0.580192), (-0.299468, -0.2092, -0.580192)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-170.06259, -111.249084), (-170.06259, -111.249084), (-170.06259, -111.249084), (-170.06259, -111.249084), (-170.0133, -0.492139), (-170.0133, 0.358134), (-170.08847, 0.364225), (-170.08847, -0.49823), (-171.11646, -0.489824), (-171.13666, -0.509734), (-170.29228, -0.509734), (-170.3125, -0.489824), (-171.11646, 0.681228), (-171.13666, 0.701427), (-171.13666, 0.49957), (-171.10808, 0.49957), (-171.10808, 0.49957), (-171.13666, 0.49957), (-171.13666, 0.485206), (-171.10808, 0.485206), (-170.3125, -0.489824), (-170.29228, -0.509734), (-170.29228, 0.485206), (-170.32086, 0.485206), (-170.32086, 0.49957), (-170.29228, 0.49957), (-170.29228, 0.701427), (-170.3125, 0.681228), (-170.32086, 0.485206), (-170.29228, 0.485206), (-170.29228, 0.49957), (-170.32086, 0.49957), (-171.10808, 0.485206), (-171.13666, 0.485206), (-171.13666, -0.509734), (-171.11646, -0.489824), (-170.3125, 0.681228), (-170.29228, 0.701427), (-171.13666, 0.701427), (-171.11646, 0.681228), (-170.20398, 0.386428), (-170.22852, 0.386428), (-170.22852, -0.501527), (-170.20398, -0.501527), (-170.26314, 0.634221), (-170.33788, 0.621272), (-170.33788, -0.338667), (-170.26688, -0.339656), (-170.21158, 0.452861), (-170.28256, 0.450105), (-170.28256, 0.437522), (-170.21158, 0.438511), (-170.21158, 0.452861), (-170.21158, 0.634342), (-170.28256, 0.598185), (-170.28256, 0.450105), (-170.20784, -0.535567), (-170.21158, 0.438511), (-170.28256, 0.437522), (-170.28256, -0.522615), (-170.26688, -0.354004), (-170.26688, -0.339656), (-170.33788, -0.338667), (-170.33788, -0.351248), (-170.26688, -0.354004), (-170.33788, -0.351248), (-170.33788, -0.499297), (-170.26688, -0.535447), (-169.96826, 0.874434), (-170.04353, 0.872601), (-170.04353, 0.064026), (-169.96826, 0.062193), (-170.15375, -0.501527), (-170.15375, 0.386428), (-170.20398, 0.386428), (-170.20398, -0.501527), (-170.17348, 0.366511), (-170.17348, -0.481609), (-170.10211, -0.481609), (-170.10211, 0.366511), (-170.37292, 0.498908), (-170.37292, 0.70045), (-170.3962, 0.70045), (-170.44388, 0.672099), (-170.44388, 0.498908), (-170.44388, 0.484566), (-170.37292, 0.484566), (-170.37292, 0.498908), (-170.44388, 0.498908), (-170.3196, -0.333122), (-170.3196, 0.660172), (-170.39053, 0.64914), (-170.39053, -0.333122), (-170.3196, -0.347462), (-170.39053, -0.347462), (-170.39053, -0.520636), (-170.34286, -0.548985), (-170.3196, -0.548985), (-170.39053, -0.347462), (-170.3196, -0.347462), (-170.3196, -0.333122), (-170.39053, -0.333122), (-170.37292, -0.50882), (-170.37292, 0.484566), (-170.44388, 0.484566), (-170.44388, -0.497787), (-170.29228, -0.509734), (-171.13666, -0.509734), (-171.13666, -0.550021), (-170.29228, -0.550021), (-170.37292, -0.50882), (-170.44388, -0.497787), (-170.44388, -0.538011), (-170.37292, -0.549044), (-170.11465, 0.363829), (-170.11465, -0.478927), (-170.07443, -0.478927), (-170.07443, 0.363829), (-170.39053, 0.64914), (-170.3196, 0.660172), (-170.3196, 0.700391), (-170.39053, 0.689359), (-141.05603, -111.06723), (-141.05603, -111.067276), (-141.056, -111.067276), (-141.056, -111.06723), (-116.597755, -111.56199), (-116.597755, -111.562126), (-116.59764, -111.562126), (-116.59764, -111.56199), (-87.138695, -112.34143), (-87.138695, -112.34143), (-87.138695, -112.34143), (-87.138695, -112.34143), (-69.23907, -112.329605), (-69.23907, -112.32962), (-69.23906, -112.32962), (-69.23906, -112.329605), (-69.24522, -112.329605), (-69.24522, -112.32962), (-69.2452, -112.32962), (-69.2452, -112.329605), (-69.25136, -112.329605), (-69.25136, -112.32962), (-69.25135, -112.32962), (-69.25135, -112.329605), (-70.76966, -0.513797), (-70.769516, -0.499293), (-71.53724, -0.499293), (-71.5371, -0.513797), (-70.76966, -0.524104), (-70.76966, -0.513797), (-71.5371, -0.513797), (-71.5371, -0.524104), (-70.76966, -0.530992), (-70.76966, -0.524104), (-71.5371, -0.524104), (-71.5371, -0.530992), (-71.55286, -0.417058), (-71.53472, -0.416873), (-71.53472, 0.349281), (-71.55286, 0.349466), (-71.53004, 0.326486), (-71.53724, -0.499293), (-70.769516, -0.499293), (-70.776726, 0.326486), (-70.776726, 0.331907), (-71.53004, 0.331907), (-71.53004, 0.326486), (-70.776726, 0.326486), (-70.79428, -0.930912), (-70.79428, -0.917385), (-71.58942, -0.917385), (-71.58942, -0.930912), (-71.58942, -0.917385), (-70.79428, -0.917385), (-70.79428, -0.081148), (-71.58942, -0.081148), (-71.52909, -0.443692), (-71.52909, 0.346369), (-71.55246, 0.346369), (-71.55246, -0.443692), (-70.79428, -0.029528), (-71.58942, -0.029528), (-71.58942, -0.04164), (-70.79428, -0.04164), (-70.79428, -0.04164), (-71.58942, -0.04164), (-71.58942, -0.059766), (-70.79428, -0.059766), (-70.79428, -0.059766), (-71.58942, -0.059766), (-71.58942, -0.081148), (-70.79428, -0.081148), (-71.42445, -0.82029), (-71.42445, 0.075914), (-71.71538, 0.038744), (-71.733444, 0.036036), (-71.74472, 0.029187), (-71.75225, 0.018937), (-71.754944, 0.004514), (-71.76123, -0.816663), (-71.27242, -0.074051), (-71.27242, -0.062305), (-71.606, -0.072287), (-71.609215, -0.077678), (-71.27242, -0.062305), (-71.27242, 0.075915), (-71.606, -0.072287), (-71.27242, -0.074051), (-71.609215, -0.077678), (-71.60293, -0.898855), (-71.600235, -0.913278), (-71.5927, -0.923527), (-71.58143, -0.930377), (-71.56336, -0.933085), (-71.27242, -0.970255), (-71.42445, -0.82029), (-71.76123, -0.816663), (-71.758026, -0.822053), (-71.42445, -0.832036), (-71.42445, -0.832036), (-71.758026, -0.822053), (-71.42445, -0.970255), (-71.55286, -0.417058), (-71.55286, 0.349466), (-71.84493, 0.344223), (-71.84493, -0.411815), (-71.65979, -0.432103), (-71.65979, 0.363175), (-72.00866, 0.357255), (-72.00866, -0.426182), (-71.72516, -0.461916), (-71.35924, -0.461916), (-71.35924, 0.364593), (-71.72516, 0.364593), (-71.232376, 0.346369), (-71.52909, 0.346369), (-71.52909, -0.443692), (-71.232376, -0.443692), (-71.73016, -0.0527), (-71.73016, 0.109016), (-72.078674, -0.0527), (-71.73016, -0.066092), (-71.73016, -0.0527), (-72.078674, -0.0527), (-72.08665, -0.066092), (-71.57016, -0.808257), (-71.57016, 0.109017), (-71.86579, 0.074932), (-71.88908, 0.070721), (-71.90881, 0.05873), (-71.922005, 0.040785), (-71.926636, 0.019618), (-71.926636, -0.808257), (-71.57016, -0.983365), (-71.57016, -0.821648), (-71.91867, -0.821648), (-71.57016, -0.808257), (-71.926636, -0.808257), (-71.91867, -0.821648), (-71.57016, -0.821648), (-71.73016, -0.066092), (-72.08665, -0.066092), (-72.08665, -0.893965), (-72.082016, -0.915133), (-72.068825, -0.933078), (-72.04909, -0.945069), (-72.0258, -0.949279), (-71.73016, -0.983365)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_FridgeDrawer1B3_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]
                rel material:binding = </root/_materials/M_FridgeDrawer1B3_0>
            }

            def GeomSubset "M_FridgeDrawer1B3_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [30]
                rel material:binding = </root/_materials/M_FridgeDrawer1B3_1>
            }

            def GeomSubset "M_FridgeDrawer1B3_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [31]
                rel material:binding = </root/_materials/M_FridgeDrawer1B3_2>
            }

            def GeomSubset "M_FridgeDrawer1B3_3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [32]
                rel material:binding = </root/_materials/M_FridgeDrawer1B3_3>
            }

            def GeomSubset "M_FridgeDrawer1B3_4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]
                rel material:binding = </root/_materials/M_FridgeDrawer1B3_4>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer1B3_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1B3_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.36764705, 0.36764705, 0.36764705)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1B3_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Copper_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1B3_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer1B3_1"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1B3_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1B3_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1B3_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1B3_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1B3_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer1B3_2"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1B3_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1B3_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1B3_2/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1B3_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1B3_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer1B3_3"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1B3_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.5735294, 0.5735294, 0.5735294)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1B3_3/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1B3_3/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer1B3_4"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1B3_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.39705884, 0.39705884, 0.39705884)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }
    }
}

