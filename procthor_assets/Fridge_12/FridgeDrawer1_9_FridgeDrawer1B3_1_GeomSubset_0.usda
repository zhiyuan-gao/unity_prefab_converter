#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "FridgeDrawer1_9_FridgeDrawer1B3_1_GeomSubset_0"
    {
        def Mesh "FridgeDrawer1_9_FridgeDrawer1B3_1_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 68, 61, 81, 78, 56, 37, 41, 55, 61, 34, 35, 60, 60, 35, 36, 62, 55, 41, 40, 67, 69, 38, 39, 68, 67, 40, 38, 69, 62, 36, 37, 56, 68, 39, 34, 61, 28, 34, 39, 29, 56, 75, 74, 62, 69, 77, 76, 67, 69, 68, 78, 77, 55, 67, 76, 79, 60, 62, 74, 80, 60, 80, 81, 61, 75, 56, 55, 79, 83, 82, 28, 29, 93, 92, 91, 90, 35, 34, 28, 82, 86, 87, 36, 35, 86, 40, 41, 84, 88, 38, 89, 83, 29, 39, 89, 38, 40, 88, 37, 36, 87, 85, 41, 37, 90, 91, 37, 85, 93, 90, 85, 84, 92, 93, 84, 41, 91, 92]
            rel material:binding = </root/_materials/M_FridgeDrawer1B3_0>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0.000001762029, -0.89113396, 0.45374036), (0.000001762029, -0.89113396, 0.45374036), (8.165953e-7, -0.91032505, 0.41389406), (-1.2910459e-7, -0.910325, 0.4138942), (-0.04589343, -0.07502118, 0.9961252), (-0.017399397, -0.02788893, 0.9994596), (0.017398626, -0.027893152, 0.99945945), (0.04589575, -0.07501945, 0.99612534), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.076182514, 0.002198986, 0.99709153), (-0.07619281, 0.0022000663, 0.9970907), (0.04589575, -0.07501945, 0.99612534), (0.017398626, -0.027893152, 0.99945945), (0.07617815, 0.0021993523, 0.99709177), (0.076188475, 0.0021971767, 0.997091), (-0.0000027804967, 0, 1), (-0.0000028224224, 0, 1), (-0.0000028224233, 0, 1), (-0.0000028497204, 0, 1), (0.076188475, 0.0021971767, 0.997091), (0.07617815, 0.0021993523, 0.99709177), (-0.0000028224224, 0, 1), (-0.0000027804967, 0, 1), (-0.07619281, 0.0022000663, 0.9970907), (-0.076182514, 0.002198986, 0.99709153), (-0.017399397, -0.02788893, 0.9994596), (-0.04589343, -0.07502118, 0.9961252), (-0.0000028497204, 0, 1), (-0.0000028224233, 0, 1), (0, 0, 1), (0, 0, 1), (-8.193186e-7, 0.9286966, -0.3708405), (0, 1, 0), (0, 1, 0), (-8.6109225e-7, 0.92869693, -0.37083948), (0.999664, -0.008780517, -0.024387857), (0.9997765, -0.0089988625, -0.019131787), (0.99978364, -0.008881284, -0.018806476), (0.9996657, -0.008570344, -0.024394805), (-0.9961215, 0.05840631, -0.065807216), (-0.9969662, 0.070306465, -0.03339845), (-0.99978375, -0.008876929, -0.018807271), (-0.9996655, -0.008579268, -0.024396291), (-0.9961215, 0.05840631, -0.065807216), (-0.99562293, 0.062892646, -0.06913298), (-0.99632925, 0.07469563, -0.041816626), (-0.9969662, 0.070306465, -0.03339845), (-0.9996634, -0.008785458, -0.024410354), (-0.9996655, -0.008579268, -0.024396291), (-0.99978375, -0.008876929, -0.018807271), (-0.99977714, -0.008999884, -0.019096222), (0.9961228, 0.058394257, -0.06579867), (0.9996657, -0.008570344, -0.024394805), (0.99978364, -0.008881284, -0.018806476), (0.99696916, 0.07026642, -0.033395935), (0.9961228, 0.058394257, -0.06579867), (0.99696916, 0.07026642, -0.033395935), (0.9963335, 0.074704014, -0.041699268), (0.99562377, 0.06290266, -0.069113), (-4.8510265e-7, 0.99083143, 0.13510406), (-0.0000039242927, 0.98532057, 0.17071474), (-0.0000039242927, 0.98532057, 0.17071474), (1.5462865e-7, 0.9908314, 0.13510403), (0.000012297756, 0.9019455, -0.43185002), (-0.000002556118, 0.90194523, -0.43185028), (-8.193186e-7, 0.9286966, -0.3708405), (-8.6109225e-7, 0.92869693, -0.37083948), (0.0000018789976, -0.9881266, -0.15364188), (0.0000018789976, -0.9881266, -0.15364188), (0.0000018789976, -0.9881266, -0.15364188), (0.0000018789976, -0.9881266, -0.15364188), (-1, -1.739353e-7, 0), (-1, -3.478706e-7, 0), (-1, -3.478706e-7, 0), (-1, -2.2599455e-7, 0), (-1, 7.720224e-8, 0), (-1, -0.0000014463457, -1.6433782e-7), (-1, -0.0000015889682, -1.234541e-7), (-1, -1.739353e-7, 0), (-1, 7.720224e-8, 0), (1, 0.0000016143171, 1.2532409e-7), (1, 0.0000014558403, 1.1302109e-7), (1, 0.0000022627453, 2.259998e-7), (1, 0.0000018560195, 1.6683063e-7), (1, 0, 0), (1, 2.1889281e-7, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 2.1889281e-7, 0), (1, 0, 0), (1, 0.0000016143171, 1.2532409e-7), (1, 0.0000018560195, 1.6683063e-7), (-1, -0.0000014329798, -1.1133467e-7), (-1, -0.0000015889682, -1.234541e-7), (-1, -0.0000014463457, -1.6433782e-7), (-1, -0.000002226069, -2.226232e-7), (0.017398626, -0.027893152, 0.99945945), (-0.017399397, -0.02788893, 0.9994596), (0, 0, 1), (0, 0, 1), (-1, -0.0000014329798, -1.1133467e-7), (-1, -0.000002226069, -2.226232e-7), (-1, 0, 0), (-1, 0, 0), (9.539474e-9, 0, -1), (9.539474e-9, 0, -1), (9.539474e-9, 0, -1), (9.539474e-9, 0, -1), (1, 0.0000022627453, 2.259998e-7), (1, 0.0000014558403, 1.1302109e-7), (1, 0, 0), (1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.002324, 0.027207, -0.887726), (-0.002316, 0.027207, -0.887726), (-0.002324, 0.027215, -0.887726), (-0.002316, 0.027215, -0.887726), (-0.002324, 0.027207, -0.887726), (-0.002316, 0.027207, -0.887726), (-0.002324, 0.027215, -0.887726), (-0.002316, 0.027215, -0.887726), (-0.002324, 0.027207, -0.887726), (-0.002316, 0.027207, -0.887726), (-0.002324, 0.027215, -0.887726), (-0.002316, 0.027215, -0.887726), (-0.002324, 0.027207, -0.887726), (-0.002316, 0.027207, -0.887726), (-0.002324, 0.027215, -0.887726), (-0.002316, 0.027215, -0.887726), (-0.002324, 0.027207, -0.887726), (-0.002316, 0.027207, -0.887726), (-0.002324, 0.027215, -0.887726), (-0.002316, 0.027215, -0.887726), (-0.002324, 0.027207, -0.887726), (-0.002316, 0.027207, -0.887726), (-0.002324, 0.027215, -0.887726), (-0.002316, 0.027215, -0.887726), (-0.002324, 0.027207, -0.887726), (-0.002316, 0.027207, -0.887726), (-0.002324, 0.027215, -0.887726), (-0.002316, 0.027215, -0.887726), (-0.299469, 0.178961, -0.565239), (-0.035244, 0.178961, -0.565239), (-0.299469, 0.115793, -0.697172), (-0.299469, 0.111298, -0.699847), (-0.035244, 0.111299, -0.699847), (-0.035244, 0.115794, -0.697172), (-0.299469, 0.178961, -0.557949), (-0.299469, 0.115793, -0.557949), (-0.299469, 0.111298, -0.557949), (-0.299468, -0.200051, -0.557949), (-0.035244, 0.115794, -0.557949), (-0.035244, 0.178961, -0.557949), (-0.035244, 0.111299, -0.557949), (-0.035243, -0.200051, -0.557949), (-0.035243, -0.166585, -0.699847), (-0.035243, -0.185152, -0.679424), (-0.299468, -0.185152, -0.679424), (-0.299468, -0.166586, -0.699847), (-0.299468, -0.183739, -0.68724), (-0.035243, -0.183738, -0.68724), (-0.299468, -0.179714, -0.693866), (-0.035243, -0.179714, -0.693866), (-0.299468, -0.173691, -0.698293), (-0.035243, -0.17369, -0.698293), (-0.041662, 0.11158, -0.692136), (-0.29305, 0.11158, -0.692136), (-0.039241, -0.177289, -0.677825), (-0.041564, -0.19382, -0.556776), (-0.293147, -0.193821, -0.556776), (-0.29547, -0.17729, -0.677825), (-0.041662, 0.109772, -0.693212), (-0.29305, 0.109771, -0.693212), (-0.29053, 0.115793, -0.557949), (-0.293148, 0.17264, -0.557949), (-0.29053, 0.111298, -0.557949), (-0.039303, -0.17638, -0.683887), (-0.039303, -0.174082, -0.687671), (-0.039303, -0.170642, -0.690199), (-0.039256, -0.165802, -0.691103), (-0.044183, 0.111299, -0.557949), (-0.041565, 0.17264, -0.557949), (-0.044183, 0.115794, -0.557949), (-0.295455, -0.165803, -0.691103), (-0.295408, -0.170643, -0.690199), (-0.295408, -0.174083, -0.687671), (-0.295408, -0.176381, -0.683887), (-0.291041, 0.110988, -0.580192), (-0.293717, -0.189764, -0.580192), (-0.043671, 0.110989, -0.580192), (-0.043666, 0.11493, -0.580192), (-0.039763, 0.161315, -0.580192), (-0.040994, -0.189763, -0.580192), (-0.291046, 0.11493, -0.580192), (-0.29495, 0.161314, -0.580192), (-0.299469, 0.170074, -0.580192), (-0.035244, 0.170075, -0.580192), (-0.035243, -0.196593, -0.580192), (-0.299468, -0.196593, -0.580192), (-0.299469, 0.115793, -0.580192), (-0.299469, 0.111298, -0.580192), (-0.035244, 0.111299, -0.580192), (-0.035244, 0.115794, -0.580192), (-0.299468, -0.212658, -0.557949), (-0.035243, -0.212658, -0.557949), (-0.035243, -0.209199, -0.580192), (-0.299468, -0.2092, -0.580192)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-170.06259, -111.249084), (-170.06259, -111.249084), (-170.06259, -111.249084), (-170.06259, -111.249084), (-170.0133, -0.492139), (-170.0133, 0.358134), (-170.08847, 0.364225), (-170.08847, -0.49823), (-171.11646, -0.489824), (-171.13666, -0.509734), (-170.29228, -0.509734), (-170.3125, -0.489824), (-171.11646, 0.681228), (-171.13666, 0.701427), (-171.13666, 0.49957), (-171.10808, 0.49957), (-171.10808, 0.49957), (-171.13666, 0.49957), (-171.13666, 0.485206), (-171.10808, 0.485206), (-170.3125, -0.489824), (-170.29228, -0.509734), (-170.29228, 0.485206), (-170.32086, 0.485206), (-170.32086, 0.49957), (-170.29228, 0.49957), (-170.29228, 0.701427), (-170.3125, 0.681228), (-170.32086, 0.485206), (-170.29228, 0.485206), (-170.29228, 0.49957), (-170.32086, 0.49957), (-171.10808, 0.485206), (-171.13666, 0.485206), (-171.13666, -0.509734), (-171.11646, -0.489824), (-170.3125, 0.681228), (-170.29228, 0.701427), (-171.13666, 0.701427), (-171.11646, 0.681228), (-170.20398, 0.386428), (-170.22852, 0.386428), (-170.22852, -0.501527), (-170.20398, -0.501527), (-170.26314, 0.634221), (-170.33788, 0.621272), (-170.33788, -0.338667), (-170.26688, -0.339656), (-170.21158, 0.452861), (-170.28256, 0.450105), (-170.28256, 0.437522), (-170.21158, 0.438511), (-170.21158, 0.452861), (-170.21158, 0.634342), (-170.28256, 0.598185), (-170.28256, 0.450105), (-170.20784, -0.535567), (-170.21158, 0.438511), (-170.28256, 0.437522), (-170.28256, -0.522615), (-170.26688, -0.354004), (-170.26688, -0.339656), (-170.33788, -0.338667), (-170.33788, -0.351248), (-170.26688, -0.354004), (-170.33788, -0.351248), (-170.33788, -0.499297), (-170.26688, -0.535447), (-169.96826, 0.874434), (-170.04353, 0.872601), (-170.04353, 0.064026), (-169.96826, 0.062193), (-170.15375, -0.501527), (-170.15375, 0.386428), (-170.20398, 0.386428), (-170.20398, -0.501527), (-170.17348, 0.366511), (-170.17348, -0.481609), (-170.10211, -0.481609), (-170.10211, 0.366511), (-170.37292, 0.498908), (-170.37292, 0.70045), (-170.3962, 0.70045), (-170.44388, 0.672099), (-170.44388, 0.498908), (-170.44388, 0.484566), (-170.37292, 0.484566), (-170.37292, 0.498908), (-170.44388, 0.498908), (-170.3196, -0.333122), (-170.3196, 0.660172), (-170.39053, 0.64914), (-170.39053, -0.333122), (-170.3196, -0.347462), (-170.39053, -0.347462), (-170.39053, -0.520636), (-170.34286, -0.548985), (-170.3196, -0.548985), (-170.39053, -0.347462), (-170.3196, -0.347462), (-170.3196, -0.333122), (-170.39053, -0.333122), (-170.37292, -0.50882), (-170.37292, 0.484566), (-170.44388, 0.484566), (-170.44388, -0.497787), (-170.29228, -0.509734), (-171.13666, -0.509734), (-171.13666, -0.550021), (-170.29228, -0.550021), (-170.37292, -0.50882), (-170.44388, -0.497787), (-170.44388, -0.538011), (-170.37292, -0.549044), (-170.11465, 0.363829), (-170.11465, -0.478927), (-170.07443, -0.478927), (-170.07443, 0.363829), (-170.39053, 0.64914), (-170.3196, 0.660172), (-170.3196, 0.700391), (-170.39053, 0.689359)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer1B3_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1B3_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.36764705, 0.36764705, 0.36764705)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1B3_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Copper_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1B3_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

