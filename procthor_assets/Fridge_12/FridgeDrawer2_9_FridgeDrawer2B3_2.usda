#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "FridgeDrawer2B3"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "FridgeDrawer2B3" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.289099, -0.210195, -0.887726), (0.002324, 0.181425, -0.556776)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 8, 4, 3, 8, 4, 3, 4, 4, 4, 4, 3, 4, 8, 3, 4, 8]
            int[] faceVertexIndices = [0, 1, 3, 2, 68, 61, 81, 78, 56, 37, 41, 55, 61, 34, 35, 60, 60, 35, 36, 62, 55, 41, 40, 67, 69, 38, 39, 68, 67, 40, 38, 69, 62, 36, 37, 56, 68, 39, 34, 61, 28, 34, 39, 29, 56, 75, 74, 62, 69, 77, 76, 67, 69, 68, 78, 77, 55, 67, 76, 79, 60, 62, 74, 80, 60, 80, 81, 61, 75, 56, 55, 79, 83, 82, 28, 29, 93, 92, 91, 90, 35, 34, 28, 82, 86, 87, 36, 35, 86, 40, 41, 84, 88, 38, 89, 83, 29, 39, 89, 38, 40, 88, 37, 36, 87, 85, 41, 37, 90, 91, 37, 85, 93, 90, 85, 84, 92, 93, 84, 41, 91, 92, 4, 5, 7, 6, 8, 9, 11, 10, 12, 13, 15, 14, 16, 17, 19, 18, 20, 21, 23, 22, 24, 25, 27, 26, 65, 66, 70, 71, 64, 65, 71, 72, 63, 64, 72, 73, 54, 63, 73, 57, 59, 70, 66, 58, 52, 53, 59, 58, 33, 32, 31, 30, 31, 32, 42, 45, 43, 44, 46, 47, 47, 46, 48, 49, 49, 48, 50, 51, 51, 50, 45, 42, 74, 75, 57, 73, 72, 71, 70, 59, 76, 77, 52, 58, 77, 78, 52, 76, 58, 66, 65, 64, 63, 54, 79, 74, 59, 53, 80, 80, 53, 81, 54, 57, 75, 79, 78, 81, 53, 52, 83, 33, 30, 82, 85, 44, 43, 84, 86, 82, 30, 87, 86, 30, 31, 88, 84, 43, 47, 49, 51, 42, 32, 83, 89, 33, 88, 32, 33, 89, 87, 31, 45, 50, 48, 46, 44, 85]
            rel material:binding = </root/_materials/M_FridgeDrawer2B3_0>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0.0000035707271, 0.8911261, -0.45375586), (0.0000035707271, 0.8911261, -0.45375586), (-3.395835e-7, 0.89562494, -0.44481003), (4.5076013e-7, 0.89562494, -0.44481012), (-0.032405175, 0.107681185, -0.9936572), (-0.02209739, 0.063783586, -0.9977191), (0.022097768, 0.0637793, -0.9977193), (0.032403093, 0.107684866, -0.9936568), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.0018887147, -0.0001024328, -0.9999983), (-0.00041395053, -0.000002327142, -0.9999999), (0.032403093, 0.107684866, -0.9936568), (0.022097768, 0.0637793, -0.9977193), (0.001933001, -0.000100328354, -0.99999815), (0.00041053072, -0.0000021150627, -0.9999999), (0.0000012638427, 0, -1), (0.0000012828993, 0, -1), (0.0000012829006, 0, -1), (0.0000012953067, 0, -1), (0.00041053072, -0.0000021150627, -0.9999999), (0.001933001, -0.000100328354, -0.99999815), (0.0000012828993, 0, -1), (0.0000012638427, 0, -1), (-0.00041395053, -0.000002327142, -0.9999999), (-0.0018887147, -0.0001024328, -0.9999983), (-0.02209739, 0.063783586, -0.9977191), (-0.032405175, 0.107681185, -0.9936572), (0.0000012953067, 0, -1), (0.0000012829006, 0, -1), (0, 0, -1), (0, 0, -1), (0.000030346968, -0.98400575, 0.17813666), (-0.0000037785112, -0.99999994, 0), (-0.0000037785112, -0.99999994, 0), (-0.000003543633, -0.98400575, 0.17813632), (0.99966407, 0.008780478, 0.024388077), (0.9996808, 0.008800767, 0.02368263), (0.99973935, -0.00240339, 0.022702461), (0.999733, -0.0004915635, 0.023102155), (-0.9995929, -0.006889466, 0.027688997), (-0.9994869, -0.0063030957, 0.0314007), (-0.9997394, -0.0024042267, 0.022702068), (-0.999733, -0.00048406655, 0.023103308), (-0.9995929, -0.006889466, 0.027688997), (-0.99562293, -0.06289254, 0.06913301), (-0.9959034, -0.06609855, 0.061703466), (-0.9994869, -0.0063030957, 0.0314007), (-0.99966335, 0.008785443, 0.02441064), (-0.999733, -0.00048406655, 0.023103308), (-0.9997394, -0.0024042267, 0.022702068), (-0.9996806, 0.008800142, 0.023692975), (0.99958956, -0.0069059413, 0.027801739), (0.999733, -0.0004915635, 0.023102155), (0.99973935, -0.00240339, 0.022702461), (0.99948704, -0.006312482, 0.03139855), (0.99958956, -0.0069059413, 0.027801739), (0.99948704, -0.006312482, 0.03139855), (0.9959038, -0.06610446, 0.06169076), (0.99562377, -0.06290231, 0.06911311), (-1.02620106e-7, -0.9868549, -0.16160868), (-0.0000019815666, -0.98531693, -0.17073531), (-0.0000019815666, -0.98531693, -0.17073531), (-6.064074e-7, -0.9868549, -0.16160855), (0.000012128847, -0.8649351, 0.5018837), (-0.000003385389, -0.86493516, 0.5018837), (0.000030346968, -0.98400575, 0.17813666), (-0.000003543633, -0.98400575, 0.17813632), (0.0000037390098, 0.9881303, 0.15361865), (0.0000037390098, 0.9881303, 0.15361865), (0.0000037390098, 0.9881303, 0.15361865), (0.0000037390098, 0.9881303, 0.15361865), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 5.4723202e-8, 0), (-1, 0.0000016941077, 1.6714259e-7), (-1, 0.000001614324, 1.2555857e-7), (-1, 0, 0), (-1, 5.4723202e-8, 0), (1, -0.0000016565838, -1.2719516e-7), (1, -0.0000014939576, -1.1470847e-7), (1, -0.00000231911, -2.2937385e-7), (1, -0.0000016777179, -1.6932131e-7), (1, 8.696723e-8, 0), (1, 4.3483617e-8, 0), (1, 1.12996055e-7, 0), (1, 1.7393447e-7, 0), (1, 1.7393447e-7, 0), (1, 4.3483617e-8, 0), (1, 8.696723e-8, 0), (1, -0.0000016565838, -1.2719516e-7), (1, -0.0000016777179, -1.6932131e-7), (-1, 0.0000014558466, 1.13232545e-7), (-1, 0.000001614324, 1.2555857e-7), (-1, 0.0000016941077, 1.6714259e-7), (-1, 0.0000022656063, 2.2642242e-7), (0.022097768, 0.0637793, -0.9977193), (-0.02209739, 0.063783586, -0.9977191), (3.3924273e-8, 0, -1), (3.3924273e-8, 0, -1), (-1, 0.0000014558466, 1.13232545e-7), (-1, 0.0000022656063, 2.2642242e-7), (-1, 0, 0), (-1, 0, 0), (9.539068e-9, 0, 1), (9.539068e-9, 0, 1), (9.539068e-9, 0, 1), (9.539068e-9, 0, 1), (1, -0.00000231911, -2.2937385e-7), (1, -0.0000014939576, -1.1470847e-7), (1, 0, 0), (1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (5.2271935e-7, -0.41528964, -0.9096893), (0.0000024019391, -0.18697317, -0.9823651), (-0.00088005804, -0.18696813, -0.98236555), (-0.0000012986047, -0.41529077, -0.9096888), (-0.0000028711731, -0.7345877, -0.67851365), (5.2271935e-7, -0.41528964, -0.9096893), (-0.0000012986047, -0.41529077, -0.9096888), (-4.6118885e-8, -0.7346235, -0.67847496), (-0.000003668219, -0.92675525, -0.37566593), (-0.0000028711731, -0.7345877, -0.67851365), (-4.6118885e-8, -0.7346235, -0.67847496), (-1.9083382e-7, -0.9267553, -0.37566552), (0.0000944972, -0.9891111, -0.14717029), (-0.000003668219, -0.92675525, -0.37566593), (-1.9083382e-7, -0.9267553, -0.37566552), (3.9891165e-7, -0.9891111, -0.14717077), (-0.0000015334226, 0.56565565, -0.8246415), (-0.00088005804, -0.18696813, -0.98236555), (0.0000024019391, -0.18697317, -0.9823651), (9.887781e-7, 0.5656563, -0.82464117), (0.000006184913, 0.44422835, -0.89591354), (0.0000031047464, 0.44422734, -0.8959141), (-0.0000015334226, 0.56565565, -0.8246415), (9.887781e-7, 0.5656563, -0.82464117), (0.00009918612, -0.5824452, 0.8128699), (-0.0000017295204, -0.45667115, 0.8896357), (-0.00009120761, -0.45667052, 0.88963586), (-0.0000026320672, -0.5824444, 0.8128706), (-0.00009120761, -0.45667052, 0.88963586), (-0.0000017295204, -0.45667115, 0.8896357), (1.8356249e-7, 0.19959028, 0.97987944), (5.251014e-7, 0.19958994, 0.9798795), (0.0000037421846, 0.98499644, 0.1725748), (0.0000037509037, 0.98499644, 0.17257479), (1.4528905e-7, 0.934385, 0.35626498), (0.0000035320202, 0.9343848, 0.3562653), (0.0000035320202, 0.9343848, 0.3562653), (1.4528905e-7, 0.934385, 0.35626498), (-1.7112393e-7, 0.7354748, 0.67755204), (0.0000021188164, 0.73547435, 0.67755264), (0.0000021188164, 0.73547435, 0.67755264), (-1.7112393e-7, 0.7354748, 0.67755204), (6.648772e-7, 0.40972635, 0.9122085), (6.639893e-7, 0.4097264, 0.9122085), (6.639893e-7, 0.4097264, 0.9122085), (6.648772e-7, 0.40972635, 0.9122085), (5.251014e-7, 0.19958994, 0.9798795), (1.8356249e-7, 0.19959028, 0.97987944), (0.99973935, -0.00240339, 0.022702461), (0.9996808, 0.008800767, 0.02368263), (0.9998028, 0.009097277, 0.017649429), (0.9998028, 0.009097277, 0.017649429), (0.9998028, 0.009097277, 0.017649429), (0.9998028, 0.009097277, 0.017649429), (0.9998028, 0.009097277, 0.017649429), (0.99983907, -0.0012606044, 0.017899659), (-0.9997394, -0.0024042267, 0.022702068), (-0.9994869, -0.0063030957, 0.0314007), (-0.99968636, 0.018203314, 0.01719843), (-0.99984086, -0.001304948, 0.01779334), (-0.9994869, -0.0063030957, 0.0314007), (-0.9959034, -0.06609855, 0.061703466), (-0.99968636, 0.018203314, 0.01719843), (-0.9997394, -0.0024042267, 0.022702068), (-0.99984086, -0.001304948, 0.01779334), (-0.9998028, 0.009102274, 0.017645596), (-0.9998028, 0.009102274, 0.017645596), (-0.9998028, 0.009102274, 0.017645596), (-0.9998028, 0.009102274, 0.017645596), (-0.9998028, 0.009102274, 0.017645596), (-0.9996806, 0.008800142, 0.023692975), (0.99973935, -0.00240339, 0.022702461), (0.99983907, -0.0012606044, 0.017899659), (0.9996864, 0.018195208, 0.0172025), (0.99948704, -0.006312482, 0.03139855), (0.99948704, -0.006312482, 0.03139855), (0.9996864, 0.018195208, 0.0172025), (0.9959038, -0.06610446, 0.06169076), (0.0000944972, -0.9891111, -0.14717029), (3.9891165e-7, -0.9891111, -0.14717077), (-1.02620106e-7, -0.9868549, -0.16160868), (-6.064074e-7, -0.9868549, -0.16160855), (4.5076013e-7, 0.89562494, -0.44481012), (-3.395835e-7, 0.89562494, -0.44481003), (0.0000031047464, 0.44422734, -0.8959141), (0.000006184913, 0.44422835, -0.89591354), (0.000012128847, -0.8649351, 0.5018837), (0.00009918612, -0.5824452, 0.8128699), (-0.0000026320672, -0.5824444, 0.8128706), (-0.000003385389, -0.86493516, 0.5018837), (0.0000037579994, 0.993419, 0.11453677), (0.0000037509037, 0.98499644, 0.17257479), (0.0000037421846, 0.98499644, 0.1725748), (0.0000037579994, 0.993419, 0.11453677), (-1, 5.4723202e-8, 0), (-1, 0, 0), (-1, 1.8148418e-7, 0), (-1, 0.0000016941077, 1.6714259e-7), (-1, 5.4723202e-8, 0), (-1, 1.8148418e-7, 0), (-1, 0.0000020943671, 2.517438e-7), (1, -0.0000016777179, -1.6932131e-7), (1, -0.00000231911, -2.2937385e-7), (1, -0.0000033977037, -4.228949e-7), (1, -0.0000033977037, -4.228949e-7), (1, -0.0000033977037, -4.228949e-7), (1, -0.0000033977037, -4.228949e-7), (1, -0.0000033977037, -4.228949e-7), (1, -0.0000020489745, -2.5502544e-7), (1, 1.12996055e-7, 0), (1, 4.3483617e-8, 0), (1, 0, 0), (1, -0.0000016777179, -1.6932131e-7), (1, -0.0000020489745, -2.5502544e-7), (1, 0, 0), (1, 4.3483617e-8, 0), (-1, 0.0000016941077, 1.6714259e-7), (-1, 0.0000020943671, 2.517438e-7), (-1, 0.0000033288907, 4.1745315e-7), (-1, 0.0000033288907, 4.1745315e-7), (-1, 0.0000033288907, 4.1745315e-7), (-1, 0.0000033288907, 4.1745315e-7), (-1, 0.0000033288907, 4.1745315e-7), (-1, 0.0000022656063, 2.2642242e-7)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.002324, 0.027207, -0.887726), (0.002316, 0.027207, -0.887726), (0.002324, 0.027215, -0.887726), (0.002316, 0.027215, -0.887726), (0.002324, 0.027207, -0.887726), (0.002316, 0.027207, -0.887726), (0.002324, 0.027215, -0.887726), (0.002316, 0.027215, -0.887726), (0.002324, 0.027207, -0.887726), (0.002316, 0.027207, -0.887726), (0.002324, 0.027215, -0.887726), (0.002316, 0.027215, -0.887726), (0.002324, 0.027207, -0.887726), (0.002316, 0.027207, -0.887726), (0.002324, 0.027215, -0.887726), (0.002316, 0.027215, -0.887726), (0.002324, 0.027207, -0.887726), (0.002316, 0.027207, -0.887726), (0.002324, 0.027215, -0.887726), (0.002316, 0.027215, -0.887726), (0.002324, 0.027207, -0.887726), (0.002316, 0.027207, -0.887726), (0.002324, 0.027215, -0.887726), (0.002316, 0.027215, -0.887726), (0.002324, 0.027207, -0.887726), (0.002316, 0.027207, -0.887726), (0.002324, 0.027215, -0.887726), (0.002316, 0.027215, -0.887726), (-0.024873, 0.181424, -0.565239), (-0.289098, 0.181425, -0.565239), (-0.024873, 0.118256, -0.697172), (-0.024873, 0.113761, -0.699847), (-0.289098, 0.113762, -0.699847), (-0.289098, 0.118257, -0.697172), (-0.024873, 0.181424, -0.557949), (-0.024873, 0.118256, -0.557949), (-0.024873, 0.113761, -0.557949), (-0.024874, -0.197588, -0.557949), (-0.289098, 0.118257, -0.557949), (-0.289098, 0.181425, -0.557949), (-0.289098, 0.113762, -0.557949), (-0.289099, -0.197587, -0.557949), (-0.289099, -0.164121, -0.699847), (-0.289099, -0.182688, -0.679424), (-0.024874, -0.182689, -0.679424), (-0.024874, -0.164122, -0.699847), (-0.024874, -0.181276, -0.68724), (-0.289099, -0.181275, -0.68724), (-0.024874, -0.177251, -0.693866), (-0.289099, -0.17725, -0.693866), (-0.024874, -0.171227, -0.698293), (-0.289099, -0.171227, -0.698293), (-0.28268, 0.114044, -0.692136), (-0.031291, 0.114043, -0.692136), (-0.285101, -0.174826, -0.677825), (-0.282778, -0.191357, -0.556776), (-0.031195, -0.191357, -0.556776), (-0.028872, -0.174827, -0.677825), (-0.28268, 0.112235, -0.693212), (-0.031291, 0.112234, -0.693212), (-0.033812, 0.118256, -0.557949), (-0.031194, 0.175103, -0.557949), (-0.033812, 0.113761, -0.557949), (-0.285039, -0.173917, -0.683887), (-0.285039, -0.171618, -0.687671), (-0.285039, -0.168179, -0.690199), (-0.285086, -0.163339, -0.691103), (-0.280159, 0.113762, -0.557949), (-0.282777, 0.175104, -0.557949), (-0.280159, 0.118257, -0.557949), (-0.028887, -0.163339, -0.691103), (-0.028934, -0.16818, -0.690199), (-0.028934, -0.171619, -0.687671), (-0.028934, -0.173918, -0.683887), (-0.033301, 0.113451, -0.580192), (-0.030625, -0.1873, -0.580192), (-0.280671, 0.113452, -0.580192), (-0.280676, 0.117394, -0.580192), (-0.284579, 0.163778, -0.580192), (-0.283348, -0.187299, -0.580192), (-0.033296, 0.117393, -0.580192), (-0.029392, 0.163777, -0.580192), (-0.024873, 0.172538, -0.580192), (-0.289098, 0.172539, -0.580192), (-0.289099, -0.194129, -0.580192), (-0.024874, -0.19413, -0.580192), (-0.024873, 0.118256, -0.580192), (-0.024873, 0.113761, -0.580192), (-0.289098, 0.113762, -0.580192), (-0.289098, 0.118257, -0.580192), (-0.024874, -0.210195, -0.557949), (-0.289099, -0.210194, -0.557949), (-0.289099, -0.206736, -0.580192), (-0.024874, -0.206737, -0.580192)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-170.06259, -111.249084), (-170.06259, -111.249084), (-170.06259, -111.249084), (-170.06259, -111.249084), (-170.0133, -0.492136), (-170.0133, 0.358131), (-170.08847, 0.364222), (-170.08847, -0.498227), (-171.11646, -0.489817), (-171.13664, -0.509727), (-170.29228, -0.509727), (-170.3125, -0.489817), (-171.11646, 0.68122), (-171.13664, 0.701419), (-171.13664, 0.499565), (-171.10806, 0.499565), (-171.10806, 0.499565), (-171.13664, 0.499565), (-171.13664, 0.485201), (-171.10806, 0.485201), (-170.3125, -0.489817), (-170.29228, -0.509727), (-170.29228, 0.485201), (-170.32086, 0.485201), (-170.32086, 0.499565), (-170.29228, 0.499565), (-170.29228, 0.701419), (-170.3125, 0.68122), (-170.32086, 0.485201), (-170.29228, 0.485201), (-170.29228, 0.499565), (-170.32086, 0.499565), (-171.10806, 0.485201), (-171.13664, 0.485201), (-171.13664, -0.509727), (-171.11646, -0.489817), (-170.3125, 0.68122), (-170.29228, 0.701419), (-171.13664, 0.701419), (-171.11646, 0.68122), (-170.20398, 0.38643), (-170.22852, 0.38643), (-170.22852, -0.501528), (-170.20398, -0.501528), (-170.26314, 0.6342), (-170.33788, 0.621251), (-170.33788, -0.338653), (-170.26688, -0.339642), (-170.21158, 0.45284), (-170.28256, 0.450084), (-170.28256, 0.4375), (-170.21158, 0.43849), (-170.21158, 0.45284), (-170.21158, 0.63431), (-170.28256, 0.598155), (-170.28256, 0.450084), (-170.20784, -0.535535), (-170.21158, 0.43849), (-170.28256, 0.4375), (-170.28256, -0.522584), (-170.26688, -0.353989), (-170.26688, -0.339642), (-170.33788, -0.338653), (-170.33788, -0.351234), (-170.26688, -0.353989), (-170.33788, -0.351234), (-170.33788, -0.499277), (-170.26688, -0.535425), (-169.96826, 0.874401), (-170.04353, 0.872568), (-170.04353, 0.064059), (-169.96826, 0.062226), (-170.15375, -0.501528), (-170.15375, 0.38643), (-170.20398, 0.38643), (-170.20398, -0.501528), (-170.1735, 0.366397), (-170.1735, -0.481495), (-170.1021, -0.481495), (-170.1021, 0.366397), (-170.37291, 0.498795), (-170.37291, 0.700283), (-170.39616, 0.700283), (-170.4439, 0.671939), (-170.4439, 0.498795), (-170.4439, 0.484457), (-170.37291, 0.484457), (-170.37291, 0.498795), (-170.4439, 0.498795), (-170.3196, -0.333154), (-170.3196, 0.660217), (-170.39053, 0.649184), (-170.39053, -0.333154), (-170.3196, -0.347496), (-170.39053, -0.347496), (-170.39053, -0.520683), (-170.34286, -0.549034), (-170.3196, -0.549034), (-170.39053, -0.347496), (-170.3196, -0.347496), (-170.3196, -0.333154), (-170.39053, -0.333154), (-170.37291, -0.508664), (-170.37291, 0.484457), (-170.4439, 0.484457), (-170.4439, -0.497634), (-170.29228, -0.509727), (-171.13664, -0.509727), (-171.13664, -0.550013), (-170.29228, -0.550013), (-170.37291, -0.508664), (-170.4439, -0.497634), (-170.4439, -0.537847), (-170.37291, -0.548877), (-170.11465, 0.36383), (-170.11465, -0.478928), (-170.07443, -0.478928), (-170.07443, 0.36383), (-170.39053, 0.649184), (-170.3196, 0.660217), (-170.3196, 0.700441), (-170.39053, 0.689407), (-141.05603, -111.06723), (-141.05603, -111.067276), (-141.056, -111.067276), (-141.056, -111.06723), (-116.597755, -111.56199), (-116.597755, -111.562126), (-116.59764, -111.562126), (-116.59764, -111.56199), (-87.138695, -112.34143), (-87.138695, -112.34143), (-87.138695, -112.34143), (-87.138695, -112.34143), (-69.23907, -112.329605), (-69.23907, -112.32962), (-69.23906, -112.32962), (-69.23906, -112.329605), (-69.24522, -112.329605), (-69.24522, -112.32962), (-69.2452, -112.32962), (-69.2452, -112.329605), (-69.25136, -112.329605), (-69.25136, -112.32962), (-69.25135, -112.32962), (-69.25135, -112.329605), (-70.76966, -0.513798), (-70.769516, -0.499294), (-71.53724, -0.499294), (-71.5371, -0.513798), (-70.76966, -0.524105), (-70.76966, -0.513798), (-71.5371, -0.513798), (-71.5371, -0.524105), (-70.76966, -0.530992), (-70.76966, -0.524105), (-71.5371, -0.524105), (-71.5371, -0.530992), (-71.55286, -0.417059), (-71.53472, -0.416873), (-71.53472, 0.349281), (-71.55286, 0.349467), (-71.53004, 0.326487), (-71.53724, -0.499294), (-70.769516, -0.499294), (-70.776726, 0.326487), (-70.776726, 0.331907), (-71.53004, 0.331907), (-71.53004, 0.326487), (-70.776726, 0.326487), (-70.79428, -0.930912), (-70.79428, -0.917385), (-71.58942, -0.917385), (-71.58942, -0.930912), (-71.58942, -0.917385), (-70.79428, -0.917385), (-70.79428, -0.081148), (-71.58942, -0.081148), (-71.52909, -0.443692), (-71.52909, 0.34637), (-71.55246, 0.34637), (-71.55246, -0.443692), (-70.79428, -0.029528), (-71.58942, -0.029528), (-71.58942, -0.04164), (-70.79428, -0.04164), (-70.79428, -0.04164), (-71.58942, -0.04164), (-71.58942, -0.059766), (-70.79428, -0.059766), (-70.79428, -0.059766), (-71.58942, -0.059766), (-71.58942, -0.081148), (-70.79428, -0.081148), (-71.424446, -0.820291), (-71.424446, 0.075916), (-71.71538, 0.038746), (-71.733444, 0.036037), (-71.74472, 0.029188), (-71.75225, 0.018938), (-71.754944, 0.004515), (-71.76123, -0.816664), (-71.27242, -0.07405), (-71.27242, -0.062304), (-71.606, -0.072287), (-71.609215, -0.077677), (-71.27242, -0.062304), (-71.27242, 0.075916), (-71.606, -0.072287), (-71.27242, -0.07405), (-71.609215, -0.077677), (-71.60293, -0.898855), (-71.600235, -0.913279), (-71.5927, -0.923529), (-71.58143, -0.930377), (-71.56336, -0.933086), (-71.27242, -0.970256), (-71.424446, -0.820291), (-71.76123, -0.816664), (-71.758026, -0.822054), (-71.424446, -0.832037), (-71.424446, -0.832037), (-71.758026, -0.822054), (-71.424446, -0.970256), (-71.55286, -0.417059), (-71.55286, 0.349467), (-71.84493, 0.344223), (-71.84493, -0.411815), (-71.65979, -0.432103), (-71.65979, 0.363175), (-72.00866, 0.357255), (-72.00866, -0.426183), (-71.72516, -0.461916), (-71.35924, -0.461916), (-71.35924, 0.364593), (-71.72516, 0.364593), (-71.232376, 0.34637), (-71.52909, 0.34637), (-71.52909, -0.443692), (-71.232376, -0.443692), (-71.73016, -0.0527), (-71.73016, 0.109016), (-72.078674, -0.0527), (-71.73016, -0.066092), (-71.73016, -0.0527), (-72.078674, -0.0527), (-72.08665, -0.066092), (-71.57016, -0.808256), (-71.57016, 0.109016), (-71.86579, 0.074931), (-71.88908, 0.070721), (-71.90881, 0.05873), (-71.922005, 0.040785), (-71.926636, 0.019617), (-71.926636, -0.808256), (-71.57016, -0.983364), (-71.57016, -0.821648), (-71.91867, -0.821648), (-71.57016, -0.808256), (-71.926636, -0.808256), (-71.91867, -0.821648), (-71.57016, -0.821648), (-71.73016, -0.066092), (-72.08665, -0.066092), (-72.08665, -0.893965), (-72.082016, -0.915133), (-72.068825, -0.933078), (-72.04909, -0.945069), (-72.0258, -0.949279), (-71.73016, -0.983364)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_FridgeDrawer2B3_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]
                rel material:binding = </root/_materials/M_FridgeDrawer2B3_0>
            }

            def GeomSubset "M_FridgeDrawer2B3_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [30]
                rel material:binding = </root/_materials/M_FridgeDrawer2B3_1>
            }

            def GeomSubset "M_FridgeDrawer2B3_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [31]
                rel material:binding = </root/_materials/M_FridgeDrawer2B3_2>
            }

            def GeomSubset "M_FridgeDrawer2B3_3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [32]
                rel material:binding = </root/_materials/M_FridgeDrawer2B3_3>
            }

            def GeomSubset "M_FridgeDrawer2B3_4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]
                rel material:binding = </root/_materials/M_FridgeDrawer2B3_4>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer2B3_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2B3_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.36764705, 0.36764705, 0.36764705)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2B3_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Copper_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2B3_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer2B3_1"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2B3_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer2B3_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2B3_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2B3_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2B3_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer2B3_2"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2B3_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer2B3_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2B3_2/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2B3_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2B3_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer2B3_3"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2B3_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.5735294, 0.5735294, 0.5735294)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2B3_3/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2B3_3/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer2B3_4"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2B3_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.39705884, 0.39705884, 0.39705884)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }
    }
}

