#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "FridgeDrawer1_30_FridgeDrawer1E6_2_GeomSubset_6"
    {
        def Mesh "FridgeDrawer1_30_FridgeDrawer1E6_2_GeomSubset_6"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4]
            int[] faceVertexIndices = [24, 25, 27, 26]
            rel material:binding = </root/_materials/M_FridgeDrawer1E6_6>
            normal3f[] normals = [(0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.007323, 0.075588, -0.700478), (-0.007316, 0.075588, -0.700478), (-0.007323, 0.075594, -0.700478), (-0.007316, 0.075594, -0.700478), (-0.007323, 0.075588, -0.700478), (-0.007316, 0.075588, -0.700478), (-0.007323, 0.075594, -0.700478), (-0.007316, 0.075594, -0.700478), (-0.007323, 0.075588, -0.700478), (-0.007316, 0.075588, -0.700478), (-0.007323, 0.075594, -0.700478), (-0.007316, 0.075594, -0.700478), (-0.007323, 0.075588, -0.700478), (-0.007316, 0.075588, -0.700478), (-0.007323, 0.075594, -0.700478), (-0.007316, 0.075594, -0.700478), (-0.007323, 0.075588, -0.700478), (-0.007316, 0.075588, -0.700478), (-0.007323, 0.075594, -0.700478), (-0.007316, 0.075594, -0.700478), (-0.007323, 0.075588, -0.700478), (-0.007316, 0.075588, -0.700478), (-0.007323, 0.075594, -0.700478), (-0.007316, 0.075594, -0.700478), (-0.007323, 0.075588, -0.700478), (-0.007316, 0.075588, -0.700478), (-0.007323, 0.075594, -0.700478), (-0.007316, 0.075594, -0.700478), (0.292941, -0.06567, -0.360829), (-0.297786, -0.06567, -0.360829), (0.292941, -0.06567, -0.172495), (-0.297786, -0.06567, -0.172495), (0.292941, -0.054422, -0.172495), (-0.297786, -0.054422, -0.172495), (0.292941, -0.054422, -0.360829), (-0.297786, -0.054422, -0.360829), (-0.304936, -0.07027, -0.201911), (-0.304565, -0.072451, -0.201972), (-0.302601, -0.071067, -0.20358), (-0.241475, -0.08657, -0.20358), (-0.242001, -0.088156, -0.20185), (-0.302601, -0.071067, -0.18078), (-0.30446, -0.072478, -0.182449), (-0.304936, -0.07027, -0.182449), (-0.241475, -0.08657, -0.18078), (-0.242001, -0.088156, -0.18251), (-0.298582, -0.067609, -0.182555), (-0.299718, -0.068996, -0.18078), (-0.301418, -0.06808, -0.182555), (-0.24016, -0.081567, -0.18078), (-0.239728, -0.079962, -0.18251), (-0.299718, -0.068996, -0.20358), (-0.298601, -0.067605, -0.201828), (-0.301402, -0.06807, -0.201828), (-0.239728, -0.079962, -0.20185), (-0.24016, -0.081567, -0.20358), (-0.00732, -0.114021, -0.18251), (-0.00732, -0.112373, -0.18078), (-0.114881, -0.108786, -0.18078), (-0.115131, -0.110419, -0.18251), (-0.00732, -0.100253, -0.18078), (-0.00732, -0.098608, -0.18251), (-0.115131, -0.096134, -0.18251), (-0.115303, -0.097772, -0.18078), (-0.00732, -0.098608, -0.20185), (-0.00732, -0.100253, -0.20358), (-0.115303, -0.097772, -0.20358), (-0.115131, -0.096134, -0.20185), (-0.00732, -0.112373, -0.20358), (-0.00732, -0.114021, -0.20185), (-0.115131, -0.110419, -0.20185), (-0.114881, -0.108786, -0.20358), (-0.177583, -0.09934, -0.18078), (-0.177998, -0.100948, -0.18251), (-0.177998, -0.089614, -0.18251), (-0.178308, -0.091238, -0.18078), (-0.178308, -0.091238, -0.20358), (-0.177998, -0.089614, -0.20185), (-0.177998, -0.100948, -0.20185), (-0.177583, -0.09934, -0.20358), (0.297755, -0.071067, -0.20358), (0.299614, -0.072478, -0.201911), (0.30009, -0.07027, -0.201911), (0.236629, -0.08657, -0.20358), (0.237155, -0.088156, -0.20185), (0.30009, -0.07027, -0.182449), (0.299719, -0.072451, -0.182388), (0.297755, -0.071067, -0.18078), (0.236629, -0.08657, -0.18078), (0.237155, -0.088156, -0.18251), (0.296572, -0.06808, -0.182555), (0.294873, -0.068996, -0.18078), (0.293737, -0.067609, -0.182555), (0.235315, -0.081567, -0.18078), (0.234883, -0.079962, -0.18251), (0.296556, -0.06807, -0.201828), (0.293737, -0.067609, -0.201805), (0.294873, -0.068996, -0.20358), (0.234883, -0.079962, -0.20185), (0.235315, -0.081567, -0.20358), (0.110285, -0.110419, -0.18251), (0.110036, -0.108786, -0.18078), (0.110457, -0.097772, -0.18078), (0.110285, -0.096134, -0.18251), (0.110285, -0.096134, -0.20185), (0.110457, -0.097772, -0.20358), (0.110036, -0.108786, -0.20358), (0.110285, -0.110419, -0.20185), (0.173152, -0.100948, -0.18251), (0.172737, -0.09934, -0.18078), (0.173462, -0.091238, -0.18078), (0.173152, -0.089614, -0.18251), (0.173152, -0.089614, -0.20185), (0.173462, -0.091238, -0.20358), (0.172737, -0.09934, -0.20358), (0.173152, -0.100948, -0.20185), (0.306876, -0.071353, -0.369201), (0.310874, -0.06824, -0.373282), (0.307175, -0.068303, -0.37656), (0.303319, -0.071353, -0.37309), (-0.308165, -0.071353, -0.37309), (-0.311943, -0.068239, -0.37656), (-0.315719, -0.068304, -0.373349), (-0.311721, -0.071353, -0.369201), (0.30204, 0.079458, -0.166892), (0.307097, 0.082754, -0.170169), (0.310874, 0.079705, -0.170102), (0.306876, 0.076757, -0.166892), (-0.311722, 0.076757, -0.166892), (-0.315719, 0.079641, -0.17017), (-0.312021, 0.082754, -0.170101), (-0.306886, 0.079458, -0.166892), (0.310874, 0.079577, -0.373214), (0.30702, 0.082754, -0.373214), (0.30702, 0.079577, -0.37656), (-0.311865, 0.079577, -0.37656), (-0.311865, 0.082754, -0.373214), (-0.315719, 0.079577, -0.373214), (0.30702, -0.068176, -0.166892), (0.310874, -0.068176, -0.170237), (0.30702, -0.071353, -0.170237), (-0.311865, -0.071353, -0.170237), (-0.315719, -0.068176, -0.170237), (-0.311865, -0.068176, -0.166892), (0.292522, -0.071353, -0.362922), (0.288859, -0.068211, -0.359499), (0.292671, -0.068233, -0.356214), (0.296584, -0.071353, -0.359632), (-0.30143, -0.071353, -0.359632), (-0.297516, -0.068204, -0.356184), (-0.293747, -0.068246, -0.359499), (-0.297368, -0.071353, -0.362922), (-0.297516, -0.068175, -0.170237), (-0.301371, -0.071353, -0.170237), (-0.301371, -0.068176, -0.166892), (0.296525, -0.068176, -0.166892), (0.296525, -0.071353, -0.170237), (0.292671, -0.068175, -0.170237), (0.292671, 0.06643, -0.170198), (0.288879, 0.06957, -0.170182), (0.292929, 0.072751, -0.166892), (0.296594, 0.069368, -0.166892), (-0.30144, 0.069368, -0.166892), (-0.297777, 0.072786, -0.166892), (-0.293693, 0.06957, -0.17021), (-0.297516, 0.06643, -0.170198), (-0.297516, 0.066393, -0.356154), (-0.293662, 0.06957, -0.356154), (-0.293662, 0.066393, -0.359499), (0.288817, 0.066393, -0.359499), (0.288817, 0.06957, -0.356154), (0.292671, 0.066393, -0.356154)]
            bool[] primvars:sharp_face = [0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-5.253075, -117.71076), (-3.54152, -117.71076), (-3.54152, -115.99921), (-5.253075, -115.99921)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer1E6_6"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1E6_6/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1E6_6/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1E6_6/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Fridge_Readout_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1E6_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1E6_6/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

