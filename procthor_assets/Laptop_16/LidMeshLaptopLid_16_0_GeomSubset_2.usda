#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "LidMeshLaptopLid_16_0_GeomSubset_2"
    {
        def Mesh "LidMeshLaptopLid_16_0_GeomSubset_2"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4]
            int[] faceVertexIndices = [8, 9, 11, 10]
            rel material:binding = </root/_materials/M_LaptopLid_16_2>
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.000613, 0.162811, -0.149908), (0.000651, 0.162811, -0.149908), (-0.000613, 0.164075, -0.149908), (0.000651, 0.164075, -0.149908), (-0.000613, 0.162811, -0.149908), (0.000651, 0.162811, -0.149908), (-0.000613, 0.164075, -0.149908), (0.000651, 0.164075, -0.149908), (-0.000613, 0.162811, -0.149908), (0.000651, 0.162811, -0.149908), (-0.000613, 0.164075, -0.149908), (0.000651, 0.164075, -0.149908), (-0.000613, 0.162811, -0.149908), (0.000651, 0.162811, -0.149908), (-0.000613, 0.164075, -0.149908), (0.000651, 0.164075, -0.149908), (-0.000613, 0.162811, -0.149908), (0.000651, 0.162811, -0.149908), (-0.000613, 0.164075, -0.149908), (0.000651, 0.164075, -0.149908), (-0.000613, 0.162811, -0.149908), (0.000651, 0.162811, -0.149908), (-0.000613, 0.164075, -0.149908), (0.000651, 0.164075, -0.149908), (0.210502, 0.156375, -0.148517), (0.203914, 0.156375, -0.150282), (-0.203876, 0.156375, -0.150282), (-0.210464, 0.156375, -0.148517), (-0.215287, 0.156375, -0.143691), (-0.217053, 0.156375, -0.137104), (-0.217053, 0.156375, 0.159179), (-0.215287, 0.156375, 0.165768), (-0.210464, 0.156375, 0.170593), (-0.203876, 0.156375, 0.17236), (0.203914, 0.156375, 0.17236), (0.210502, 0.156375, 0.170593), (0.215326, 0.156375, 0.165768), (0.217091, 0.156375, 0.159179), (0.217091, 0.156375, -0.137104), (0.215326, 0.156375, -0.143691), (0.215326, 0.15912, 0.165768), (0.210502, 0.15912, 0.170593), (0.203914, 0.15912, 0.17236), (-0.203876, 0.15912, 0.17236), (-0.210464, 0.15912, 0.170593), (-0.215287, 0.15912, 0.165768), (-0.217053, 0.15912, 0.159179), (-0.217053, 0.159119, -0.137104), (-0.215287, 0.159119, -0.143691), (-0.210464, 0.159119, -0.148517), (-0.203876, 0.159119, -0.150282), (0.203914, 0.159119, -0.150282), (0.210502, 0.159119, -0.148517), (0.215326, 0.159119, -0.143691), (0.217091, 0.159119, -0.137104), (0.217091, 0.15912, 0.159179), (-0.220053, 0.162343, 0.159573), (-0.217737, 0.168293, 0.159457), (-0.217761, 0.168233, -0.137576), (-0.220053, 0.162435, -0.1375), (-0.211623, 0.172439, 0.159491), (-0.211612, 0.172446, -0.137383), (-0.204146, 0.173797, 0.159449), (-0.204086, 0.173808, -0.137316), (-0.204151, 0.172439, 0.166928), (0.204224, 0.172441, 0.166915), (0.204185, 0.173797, 0.159449), (-0.204363, 0.168296, 0.173041), (0.20419, 0.16825, 0.173108), (-0.204272, 0.162433, 0.175359), (0.204164, 0.162331, 0.175399), (0.211662, 0.172439, 0.159457), (0.211646, 0.172441, -0.137416), (0.204185, 0.173797, -0.137373), (0.217775, 0.168293, 0.15966), (0.217841, 0.168249, -0.137383), (0.220091, 0.162435, 0.159575), (0.220131, 0.162334, -0.13735), (-0.204268, 0.162342, -0.153283), (-0.204151, 0.168294, -0.150966), (0.204386, 0.168233, -0.15099), (0.20431, 0.162435, -0.153283), (-0.204188, 0.172439, -0.144853), (0.204189, 0.172446, -0.144842), (-0.210604, 0.171665, 0.165932), (-0.216936, 0.167387, 0.16591), (-0.218005, 0.162368, 0.167294), (-0.21198, 0.162424, 0.173293), (-0.210604, 0.167389, 0.172244), (0.212028, 0.162367, 0.173309), (0.210644, 0.167583, 0.171954), (0.218025, 0.162425, 0.167286), (0.216975, 0.167387, 0.16591), (0.210642, 0.171681, 0.16591), (-0.211988, 0.162365, -0.151236), (-0.210608, 0.167583, -0.149876), (-0.217987, 0.162425, -0.145208), (-0.216936, 0.167387, -0.143835), (-0.210604, 0.171679, -0.143835), (0.218044, 0.162367, -0.145216), (0.216688, 0.167581, -0.143835), (0.212019, 0.162423, -0.151217), (0.210644, 0.167387, -0.150164), (0.210642, 0.171682, -0.143835), (0.218015, 0.15912, 0.167324), (0.212056, 0.15912, 0.173282), (0.204309, 0.15912, 0.175359), (-0.204272, 0.15912, 0.175359), (-0.212016, 0.15912, 0.173282), (-0.217978, 0.15912, 0.16732), (-0.220053, 0.15912, 0.159573), (-0.220053, 0.159119, -0.1375), (-0.217977, 0.159119, -0.145245), (-0.21202, 0.159119, -0.151205), (-0.20427, 0.159119, -0.153283), (0.20431, 0.159119, -0.153283), (0.212055, 0.159119, -0.151207), (0.218015, 0.159119, -0.145245), (0.220091, 0.159119, -0.1375), (0.220091, 0.15912, 0.159575), (0.210502, 0.156375, -0.137104), (0.203914, 0.156375, -0.137104), (-0.210464, 0.156375, -0.137104), (-0.203876, 0.156375, -0.137104), (-0.210464, 0.156375, 0.159179), (-0.203876, 0.156375, 0.159179), (0.203914, 0.156375, 0.159179), (0.210502, 0.156375, 0.159179), (0.000019, 0.156375, 0.159179), (0.000019, 0.156375, 0.17236), (0.000019, 0.15912, 0.17236), (0.000019, 0.15912, 0.175359), (-0.000054, 0.162383, 0.175379), (-0.000087, 0.168274, 0.173073), (0.000037, 0.17244, 0.166921), (0.000019, 0.173797, 0.159449), (0.000049, 0.173802, -0.137344), (0.000001, 0.172442, -0.144846), (0.000118, 0.168264, -0.150978), (0.000021, 0.162389, -0.153283), (0.00002, 0.159119, -0.153283), (0.000019, 0.159119, -0.150282), (0.000019, 0.156375, -0.150282), (0.000019, 0.156375, -0.137104), (0.211654, 0.17244, -0.120308), (0.204185, 0.173797, -0.120291), (0.000034, 0.1738, -0.120276), (-0.204116, 0.173802, -0.120261), (-0.211618, 0.172442, -0.120274), (-0.217749, 0.168264, -0.120388), (-0.220053, 0.162389, -0.120292), (-0.220053, 0.159119, -0.120292), (-0.217053, 0.159119, -0.120291), (-0.217053, 0.156375, -0.120291), (-0.210464, 0.156375, -0.120291), (-0.203876, 0.156375, -0.120291), (0.000019, 0.156375, -0.120291), (0.203914, 0.156375, -0.120291), (0.210502, 0.156375, -0.120291), (0.217091, 0.156375, -0.120291), (0.217091, 0.159119, -0.120291), (0.220091, 0.159119, -0.120291), (0.220111, 0.162384, -0.120215), (0.217808, 0.168271, -0.120191), (0.000019, 0.160962, -0.120291), (0.000019, 0.160962, 0.159179), (-0.203876, 0.160962, 0.159179), (-0.203876, 0.160962, -0.120291), (0.203914, 0.160962, 0.159179), (0.203914, 0.160962, -0.120291), (0.055583, 0.17495, -0.047231), (-0.055545, 0.17495, -0.047231), (0.055583, 0.17495, 0.069306), (-0.055545, 0.17495, 0.069306), (0.000019, 0.160761, -0.120291), (0.000019, 0.160761, 0.159179), (-0.203876, 0.160761, 0.159179), (-0.203876, 0.160761, -0.120291), (0.203914, 0.160761, 0.159179), (0.203914, 0.160761, -0.120291)]
            bool[] primvars:sharp_face = [0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-55.218258, -19.673967), (-54.218258, -19.673967), (-54.218258, -18.673967), (-55.218258, -18.673967)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_LaptopLid_16_2"
        {
            token outputs:surface.connect = </root/_materials/M_LaptopLid_16_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_LaptopLid_16_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_LaptopLid_16_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

