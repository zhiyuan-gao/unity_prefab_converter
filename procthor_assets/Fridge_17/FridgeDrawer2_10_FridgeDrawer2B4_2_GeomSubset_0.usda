#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "FridgeDrawer2_10_FridgeDrawer2B4_2_GeomSubset_0"
    {
        def Mesh "FridgeDrawer2_10_FridgeDrawer2B4_2_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 68, 61, 81, 78, 56, 37, 41, 55, 61, 34, 35, 60, 60, 35, 36, 62, 55, 41, 40, 67, 69, 38, 39, 68, 67, 40, 38, 69, 62, 36, 37, 56, 68, 39, 34, 61, 28, 34, 39, 29, 56, 75, 74, 62, 69, 77, 76, 67, 69, 68, 78, 77, 55, 67, 76, 79, 60, 62, 74, 80, 60, 80, 81, 61, 75, 56, 55, 79, 83, 82, 28, 29, 93, 92, 91, 90, 35, 34, 28, 82, 86, 87, 36, 35, 86, 40, 41, 84, 88, 38, 89, 83, 29, 39, 89, 38, 40, 88, 37, 36, 87, 85, 41, 37, 90, 91, 37, 85, 93, 90, 85, 84, 92, 93, 84, 41, 91, 92]
            rel material:binding = </root/_materials/M_FridgeDrawer2B4_0>
            normal3f[] normals = [(0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0.8603256, -0.50974506), (0, 0.8603256, -0.50974506), (1.3384852e-7, 0.8543904, -0.5196318), (3.3550896e-7, 0.85439026, -0.51963174), (-0.024998289, 0.09450693, -0.9952103), (-0.018394409, 0.052170392, -0.99846876), (0.01839478, 0.052170422, -0.99846876), (0.02499687, 0.09450612, -0.9952104), (-0.0000025946515, 0, -1), (-0.0000027458684, 0, -1), (-0.0000026115868, 0, -1), (-0.000002569475, 0, -1), (-0.000002569475, 0, -1), (-0.0000026115868, 0, -1), (-0.001415398, -0.0000017165439, -0.9999989), (-0.00038581528, -3.5972334e-8, -0.9999999), (0.02499687, 0.09450612, -0.9952104), (0.01839478, 0.052170422, -0.99846876), (0.0014161225, -0.0000017167768, -0.9999989), (0.00038653612, 3.5727862e-7, -0.99999994), (0.0000022482927, 0, -1), (0.0000022851402, 0, -1), (0.0000024026356, 0, -1), (0.0000022703225, 0, -1), (0.00038653612, 3.5727862e-7, -0.99999994), (0.0014161225, -0.0000017167768, -0.9999989), (0.0000022851402, 0, -1), (0.0000022482927, 0, -1), (-0.00038581528, -3.5972334e-8, -0.9999999), (-0.001415398, -0.0000017165439, -0.9999989), (-0.018394409, 0.052170392, -0.99846876), (-0.024998289, 0.09450693, -0.9952103), (0.0000022703225, 0, -1), (0.0000024026356, 0, -1), (-0.0000027458684, 0, -1), (-0.0000025946515, 0, -1), (-0.00009795666, -0.9800323, 0.1988383), (0, -1, 0), (0, -1, 0), (0, -0.9800323, 0.19883823), (0.9994801, 0.0095222695, 0.03080261), (0.9994905, 0.009616083, 0.030435435), (0.9995511, -0.003094853, 0.029798564), (0.99957335, -0.0005935115, 0.02920044), (-0.99935085, -0.0076201498, 0.035211843), (-0.99920976, -0.008614171, 0.038803045), (-0.99955094, -0.0031927216, 0.02979752), (-0.9995735, -0.0006426242, 0.029192537), (-0.99935085, -0.0076201498, 0.035211843), (-0.9938724, -0.06807498, 0.08708307), (-0.99439085, -0.07220317, 0.07728911), (-0.99920976, -0.008614171, 0.038803045), (-0.99948007, 0.009522269, 0.03080294), (-0.9995735, -0.0006426242, 0.029192537), (-0.99955094, -0.0031927216, 0.02979752), (-0.99950343, 0.009733159, 0.029970957), (0.9993508, -0.007617915, 0.035211585), (0.99957335, -0.0005935115, 0.02920044), (0.9995511, -0.003094853, 0.029798564), (0.9992104, -0.008516122, 0.03880656), (0.9993508, -0.007617915, 0.035211585), (0.9992104, -0.008516122, 0.03880656), (0.99439085, -0.072203316, 0.077288516), (0.9938724, -0.06807514, 0.08708249), (0, -0.98027253, -0.19765058), (0, -0.98027277, -0.19764915), (0, -0.98027277, -0.19764915), (0, -0.98027253, -0.1976506), (0, -0.8224717, 0.568806), (0, -0.8224717, 0.568806), (-0.00009795666, -0.9800323, 0.1988383), (0, -0.9800323, 0.19883823), (0, 0.9840343, 0.17797858), (0, 0.9840343, 0.17797858), (0, 0.9840343, 0.17797858), (0, 0.9840343, 0.17797858), (-1, -8.725093e-9, 0), (-1, -1.7450185e-8, 0), (-1, -1.7450185e-8, 0), (-1, -1.2085802e-8, 0), (-1, 5.5208652e-8, 0), (-1, 5.95712e-8, 0), (-1, 0, 0), (-1, -8.725093e-9, 0), (-1, 5.5208652e-8, 0), (1, 0, 0), (1, 0, 0), (1, -4.5770903e-9, 0), (1, -3.727156e-9, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, -3.727156e-9, 0), (-1, 0, 0), (-1, 0, 0), (-1, 5.95712e-8, 0), (-1, 0, 0), (0.01839478, 0.052170422, -0.99846876), (-0.018394409, 0.052170392, -0.99846876), (0, 0, -0.99999994), (0, 0, -0.99999994), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -0.000066750894, 0.99999994), (0, -0.000066750894, 0.99999994), (0, -0.000066750894, 0.99999994), (0, -0.000066750894, 0.99999994), (1, -4.5770903e-9, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.005766, 0.047896, -0.95645), (0.005755, 0.047896, -0.95645), (0.005766, 0.047906, -0.95645), (0.005755, 0.047906, -0.95645), (0.005766, 0.047896, -0.95645), (0.005755, 0.047896, -0.95645), (0.005766, 0.047906, -0.95645), (0.005755, 0.047906, -0.95645), (0.005766, 0.047896, -0.95645), (0.005755, 0.047896, -0.95645), (0.005766, 0.047906, -0.95645), (0.005755, 0.047906, -0.95645), (0.005766, 0.047896, -0.95645), (0.005755, 0.047896, -0.95645), (0.005766, 0.047906, -0.95645), (0.005755, 0.047906, -0.95645), (0.005766, 0.047896, -0.95645), (0.005755, 0.047896, -0.95645), (0.005766, 0.047906, -0.95645), (0.005755, 0.047906, -0.95645), (0.005766, 0.047896, -0.95645), (0.005755, 0.047896, -0.95645), (0.005766, 0.047906, -0.95645), (0.005755, 0.047906, -0.95645), (0.005766, 0.047896, -0.95645), (0.005755, 0.047896, -0.95645), (0.005766, 0.047906, -0.95645), (0.005755, 0.047906, -0.95645), (-0.029737, 0.233588, -0.661681), (-0.37466, 0.233588, -0.661681), (-0.029737, 0.157528, -0.771665), (-0.029737, 0.152115, -0.774433), (-0.37466, 0.152115, -0.774433), (-0.37466, 0.157528, -0.771665), (-0.029737, 0.233588, -0.654136), (-0.029737, 0.157528, -0.654136), (-0.029737, 0.152115, -0.654136), (-0.029737, -0.22278, -0.654136), (-0.37466, 0.157528, -0.654136), (-0.37466, 0.233588, -0.654136), (-0.37466, 0.152115, -0.654136), (-0.37466, -0.22278, -0.654136), (-0.37466, -0.182484, -0.774433), (-0.37466, -0.20484, -0.7533), (-0.029737, -0.20484, -0.7533), (-0.029737, -0.182484, -0.774433), (-0.029737, -0.203139, -0.761387), (-0.37466, -0.203139, -0.761387), (-0.029737, -0.198292, -0.768243), (-0.37466, -0.198292, -0.768243), (-0.029737, -0.19104, -0.772824), (-0.37466, -0.19104, -0.772824), (-0.366281, 0.152455, -0.766454), (-0.038116, 0.152455, -0.766454), (-0.369441, -0.195373, -0.751645), (-0.366408, -0.215278, -0.652924), (-0.037989, -0.215278, -0.652924), (-0.034956, -0.195373, -0.751645), (-0.366281, 0.150277, -0.767567), (-0.038116, 0.150277, -0.767567), (-0.041407, 0.157528, -0.654136), (-0.037989, 0.225977, -0.654136), (-0.041407, 0.152115, -0.654136), (-0.36936, -0.194279, -0.757918), (-0.36936, -0.191511, -0.761833), (-0.36936, -0.18737, -0.764449), (-0.369421, -0.181542, -0.765385), (-0.36299, 0.152115, -0.654136), (-0.366408, 0.225977, -0.654136), (-0.36299, 0.157528, -0.654136), (-0.034976, -0.181542, -0.765385), (-0.035037, -0.18737, -0.764449), (-0.035037, -0.191511, -0.761833), (-0.035037, -0.194279, -0.757918), (-0.040739, 0.151742, -0.677152), (-0.037244, -0.210393, -0.677152), (-0.363658, 0.151742, -0.677152), (-0.363665, 0.156488, -0.677152), (-0.368761, 0.21234, -0.677152), (-0.367153, -0.210393, -0.677152), (-0.040732, 0.156488, -0.677152), (-0.035636, 0.21234, -0.677152), (-0.029737, 0.222888, -0.677152), (-0.37466, 0.222888, -0.677152), (-0.37466, -0.218617, -0.677152), (-0.029737, -0.218617, -0.677152), (-0.029737, 0.157528, -0.677152), (-0.029737, 0.152115, -0.677152), (-0.37466, 0.152115, -0.677152), (-0.37466, 0.157528, -0.677152), (-0.029737, -0.23796, -0.654136), (-0.37466, -0.23796, -0.654136), (-0.37466, -0.233797, -0.677153), (-0.029737, -0.233797, -0.677153)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-170.88591, -111.20602), (-170.88591, -111.2061), (-170.88583, -111.2061), (-170.88583, -111.20602), (-170.12288, -0.680835), (-170.12288, 0.537804), (-170.1735, 0.546534), (-170.1735, -0.689564), (-171.15503, -0.527725), (-171.17693, -0.547626), (-170.26198, -0.547626), (-170.28389, -0.527725), (-171.15503, 0.642752), (-171.17693, 0.662942), (-171.17693, 0.461184), (-171.14598, 0.461184), (-171.14598, 0.461184), (-171.17693, 0.461184), (-171.17693, 0.446827), (-171.14598, 0.446827), (-170.28389, -0.527725), (-170.26198, -0.547626), (-170.26198, 0.446827), (-170.29294, 0.446827), (-170.29294, 0.461184), (-170.26198, 0.461184), (-170.26198, 0.662942), (-170.28389, 0.642752), (-170.29294, 0.446827), (-170.26198, 0.446827), (-170.26198, 0.461184), (-170.29294, 0.461184), (-171.14598, 0.446827), (-171.17693, 0.446827), (-171.17693, -0.547626), (-171.15503, -0.527725), (-170.28389, 0.642752), (-170.26198, 0.662942), (-171.17693, 0.662942), (-171.15503, 0.642752), (-170.2641, 0.426743), (-170.2855, 0.426743), (-170.2855, -0.551186), (-170.2641, -0.551186), (-170.30667, 0.598549), (-170.37091, 0.585599), (-170.37091, -0.374429), (-170.30989, -0.375418), (-170.26645, 0.417096), (-170.32748, 0.41434), (-170.32748, 0.401758), (-170.26645, 0.402747), (-170.26645, 0.417096), (-170.26645, 0.598558), (-170.32748, 0.562405), (-170.32748, 0.41434), (-170.26323, -0.571235), (-170.26645, 0.402747), (-170.32748, 0.401758), (-170.32748, -0.558284), (-170.30989, -0.389767), (-170.30989, -0.375418), (-170.37091, -0.374429), (-170.37091, -0.387011), (-170.30989, -0.389767), (-170.37091, -0.387011), (-170.37091, -0.535074), (-170.30989, -0.571226), (-170.15085, 0.914103), (-170.2157, 0.912112), (-170.2157, 0.033454), (-170.15085, 0.031462), (-170.22025, -0.551186), (-170.22025, 0.426743), (-170.2641, 0.426743), (-170.2641, -0.551186), (-170.24187, 0.398416), (-170.24187, -0.522859), (-170.18039, -0.522859), (-170.18039, 0.398416), (-170.39276, 0.460529), (-170.39276, 0.661976), (-170.41278, 0.661976), (-170.45378, 0.633638), (-170.45378, 0.460529), (-170.45378, 0.446194), (-170.39276, 0.446194), (-170.39276, 0.460529), (-170.45378, 0.460529), (-170.35103, -0.371314), (-170.35103, 0.622014), (-170.412, 0.610981), (-170.412, -0.371314), (-170.35103, -0.385656), (-170.412, -0.385656), (-170.412, -0.558835), (-170.37102, -0.587185), (-170.35103, -0.587185), (-170.412, -0.385656), (-170.35103, -0.385656), (-170.35103, -0.371314), (-170.412, -0.371314), (-170.39276, -0.546722), (-170.39276, 0.446194), (-170.45378, 0.446194), (-170.45378, -0.535694), (-170.26198, -0.547626), (-171.17693, -0.547626), (-171.17693, -0.587893), (-170.26198, -0.587893), (-170.39276, -0.546722), (-170.45378, -0.535694), (-170.45378, -0.575898), (-170.39276, -0.586926), (-170.19563, 0.394708), (-170.19563, -0.519151), (-170.15541, -0.519151), (-170.15541, 0.394708), (-170.412, 0.610981), (-170.35103, 0.622014), (-170.35103, 0.662235), (-170.412, 0.651202)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer2B4_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2B4_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer2B4_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer2B4_0/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2B4_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Copper_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer2B4_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

