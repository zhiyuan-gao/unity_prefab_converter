#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "FridgeDrawer1_10_FridgeDrawer1B4_1_GeomSubset_0"
    {
        def Mesh "FridgeDrawer1_10_FridgeDrawer1B4_1_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 68, 61, 81, 78, 56, 37, 41, 55, 61, 34, 35, 60, 60, 35, 36, 62, 55, 41, 40, 67, 69, 38, 39, 68, 67, 40, 38, 69, 62, 36, 37, 56, 68, 39, 34, 61, 28, 34, 39, 29, 56, 75, 74, 62, 69, 77, 76, 67, 69, 68, 78, 77, 55, 67, 76, 79, 60, 62, 74, 80, 60, 80, 81, 61, 75, 56, 55, 79, 83, 82, 28, 29, 93, 92, 91, 90, 35, 34, 28, 82, 86, 87, 36, 35, 86, 40, 41, 84, 88, 38, 89, 83, 29, 39, 89, 38, 40, 88, 37, 36, 87, 85, 41, 37, 90, 91, 37, 85, 93, 90, 85, 84, 92, 93, 84, 41, 91, 92]
            rel material:binding = </root/_materials/M_FridgeDrawer1B4_0>
            normal3f[] normals = [(0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, -0.86030924, 0.5097725), (0, -0.86030924, 0.5097725), (-7.5879507e-7, -0.8364929, 0.54797775), (-2.9266812e-7, -0.8364927, 0.547978), (-0.035899535, -0.06579445, 0.99718726), (-0.014401251, -0.022599809, 0.9996409), (0.014401624, -0.022599844, 0.9996409), (0.035902508, -0.06579525, 0.997187), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.060411118, 0.0019007309, 0.99817175), (-0.06048421, 0.0018975881, 0.9981674), (0.035902508, -0.06579525, 0.997187), (0.014401624, -0.022599844, 0.9996409), (0.060363714, 0.0018991993, 0.9981747), (0.06048491, 0.0018979782, 0.9981673), (6.424339e-7, 0, 1), (6.529629e-7, 0, 1), (6.864856e-7, 0, 1), (6.4874547e-7, 0, 1), (0.06048491, 0.0018979782, 0.9981673), (0.060363714, 0.0018991993, 0.9981747), (6.529629e-7, 0, 1), (6.424339e-7, 0, 1), (-0.06048421, 0.0018975881, 0.9981674), (-0.060411118, 0.0019007309, 0.99817175), (-0.014401251, -0.022599809, 0.9996409), (-0.035899535, -0.06579445, 0.99718726), (6.4874547e-7, 0, 1), (6.864856e-7, 0, 1), (0, 0, 1), (0, 0, 1), (-1.1552375e-8, 0.9068403, -0.4214743), (0, 1, 0), (0, 1, 0), (0, 0.9068403, -0.42147428), (0.9994808, -0.009520864, -0.030782003), (0.9995184, -0.0098971175, -0.029410657), (0.99952346, -0.0097091375, -0.029300854), (0.99948156, -0.009391346, -0.030797865), (-0.99453825, 0.06328823, -0.082994856), (-0.9959014, 0.075303964, -0.050097525), (-0.9995235, -0.009706117, -0.02930054), (-0.99948156, -0.009390262, -0.030797694), (-0.99453825, 0.06328823, -0.082994856), (-0.99387336, 0.06808384, -0.0870653), (-0.99494326, 0.078305036, -0.06289947), (-0.9959014, 0.075303964, -0.050097525), (-0.99948066, -0.009520883, -0.030781232), (-0.99948156, -0.009390262, -0.030797694), (-0.9995235, -0.009706117, -0.02930054), (-0.99952084, -0.009924927, -0.029318508), (0.99453956, 0.06328082, -0.08298585), (0.99948156, -0.009391346, -0.030797865), (0.99952346, -0.0097091375, -0.029300854), (0.9959022, 0.07529329, -0.05009774), (0.99453956, 0.06328082, -0.08298585), (0.9959022, 0.07529329, -0.05009774), (0.9949435, 0.07830955, -0.06288951), (0.993876, 0.06807593, -0.08704155), (0, 0.98027384, 0.19764386), (0, 0.9802729, 0.19764875), (0, 0.9802729, 0.19764875), (0, 0.9802739, 0.1976439), (0, 0.8224716, -0.5688062), (0, 0.8224716, -0.5688062), (-1.1552375e-8, 0.9068403, -0.4214743), (0, 0.9068403, -0.42147428), (0, -0.9840268, -0.17802022), (0, -0.9840268, -0.17802022), (0, -0.9840268, -0.17802022), (0, -0.9840268, -0.17802022), (-1, -1.3960117e-7, 0), (-1, -2.7920234e-7, 0), (-1, -2.7920234e-7, 0), (-1, -1.9337241e-7, 0), (-1, 6.0300357e-7, 0), (-1, 6.7280416e-7, 0), (-1, 0, 0), (-1, -1.3960117e-7, 0), (-1, 6.0300357e-7, 0), (1, 0, 0), (1, 0, 0), (1, 7.6285267e-10, 0), (1, 6.2119215e-10, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 6.2119215e-10, 0), (-1, 0, 0), (-1, 0, 0), (-1, 6.7280416e-7, 0), (-1, 0, 0), (0.014401624, -0.022599844, 0.9996409), (-0.014401251, -0.022599809, 0.9996409), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0.00006675527, -0.99999994), (0, 0.00006675527, -0.99999994), (0, 0.00006675527, -0.99999994), (0, 0.00006675527, -0.99999994), (1, 7.6285267e-10, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.005766, 0.047896, -0.95645), (-0.005755, 0.047896, -0.95645), (-0.005766, 0.047906, -0.95645), (-0.005755, 0.047906, -0.95645), (-0.005766, 0.047896, -0.95645), (-0.005755, 0.047896, -0.95645), (-0.005766, 0.047906, -0.95645), (-0.005755, 0.047906, -0.95645), (-0.005766, 0.047896, -0.95645), (-0.005755, 0.047896, -0.95645), (-0.005766, 0.047906, -0.95645), (-0.005755, 0.047906, -0.95645), (-0.005766, 0.047896, -0.95645), (-0.005755, 0.047896, -0.95645), (-0.005766, 0.047906, -0.95645), (-0.005755, 0.047906, -0.95645), (-0.005766, 0.047896, -0.95645), (-0.005755, 0.047896, -0.95645), (-0.005766, 0.047906, -0.95645), (-0.005755, 0.047906, -0.95645), (-0.005766, 0.047896, -0.95645), (-0.005755, 0.047896, -0.95645), (-0.005766, 0.047906, -0.95645), (-0.005755, 0.047906, -0.95645), (-0.005766, 0.047896, -0.95645), (-0.005755, 0.047896, -0.95645), (-0.005766, 0.047906, -0.95645), (-0.005755, 0.047906, -0.95645), (-0.393662, 0.230623, -0.661681), (-0.04874, 0.230623, -0.661681), (-0.393662, 0.154563, -0.771665), (-0.393662, 0.14915, -0.774433), (-0.04874, 0.14915, -0.774433), (-0.04874, 0.154563, -0.771665), (-0.393662, 0.230623, -0.654136), (-0.393662, 0.154563, -0.654136), (-0.393662, 0.14915, -0.654136), (-0.393662, -0.225745, -0.654136), (-0.04874, 0.154563, -0.654136), (-0.04874, 0.230623, -0.654136), (-0.04874, 0.14915, -0.654136), (-0.04874, -0.225745, -0.654136), (-0.04874, -0.185449, -0.774433), (-0.04874, -0.207806, -0.7533), (-0.393662, -0.207806, -0.7533), (-0.393662, -0.185449, -0.774433), (-0.393662, -0.206104, -0.761387), (-0.04874, -0.206104, -0.761387), (-0.393662, -0.201258, -0.768243), (-0.04874, -0.201258, -0.768243), (-0.393662, -0.194005, -0.772824), (-0.04874, -0.194005, -0.772824), (-0.057118, 0.149489, -0.766454), (-0.385284, 0.149489, -0.766454), (-0.053959, -0.198339, -0.751645), (-0.056991, -0.218243, -0.652924), (-0.385411, -0.218243, -0.652924), (-0.388443, -0.198339, -0.751645), (-0.057118, 0.147311, -0.767567), (-0.385284, 0.147311, -0.767567), (-0.381993, 0.154563, -0.654136), (-0.385411, 0.223012, -0.654136), (-0.381993, 0.14915, -0.654136), (-0.05404, -0.197244, -0.757918), (-0.05404, -0.194477, -0.761833), (-0.05404, -0.190335, -0.764449), (-0.053978, -0.184507, -0.765385), (-0.060409, 0.14915, -0.654136), (-0.056991, 0.223012, -0.654136), (-0.060409, 0.154563, -0.654136), (-0.388424, -0.184507, -0.765385), (-0.388362, -0.190335, -0.764449), (-0.388362, -0.194477, -0.761833), (-0.388362, -0.197244, -0.757918), (-0.382661, 0.148777, -0.677152), (-0.386155, -0.213358, -0.677152), (-0.059741, 0.148777, -0.677152), (-0.059735, 0.153523, -0.677152), (-0.054638, 0.209374, -0.677152), (-0.056247, -0.213358, -0.677152), (-0.382667, 0.153523, -0.677152), (-0.387763, 0.209374, -0.677152), (-0.393662, 0.219923, -0.677152), (-0.04874, 0.219923, -0.677152), (-0.04874, -0.221582, -0.677152), (-0.393662, -0.221582, -0.677152), (-0.393662, 0.154563, -0.677152), (-0.393662, 0.14915, -0.677152), (-0.04874, 0.14915, -0.677152), (-0.04874, 0.154563, -0.677152), (-0.393662, -0.240925, -0.654136), (-0.04874, -0.240925, -0.654136), (-0.04874, -0.236761, -0.677153), (-0.393662, -0.236761, -0.677153)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-170.8859, -111.20602), (-170.8859, -111.2061), (-170.88583, -111.2061), (-170.88583, -111.20602), (-170.12288, -0.680825), (-170.12288, 0.537794), (-170.1735, 0.546524), (-170.1735, -0.689555), (-171.15508, -0.527767), (-171.17699, -0.54767), (-170.26195, -0.54767), (-170.28386, -0.527767), (-171.15508, 0.642798), (-171.17699, 0.662989), (-171.17699, 0.461216), (-171.14601, 0.461216), (-171.14601, 0.461216), (-171.17699, 0.461216), (-171.17699, 0.446857), (-171.14601, 0.446857), (-170.28386, -0.527767), (-170.26195, -0.54767), (-170.26195, 0.446857), (-170.29291, 0.446857), (-170.29291, 0.461216), (-170.26195, 0.461216), (-170.26195, 0.662989), (-170.28386, 0.642798), (-170.29291, 0.446857), (-170.26195, 0.446857), (-170.26195, 0.461216), (-170.29291, 0.461216), (-171.14601, 0.446857), (-171.17699, 0.446857), (-171.17699, -0.54767), (-171.15508, -0.527767), (-170.28386, 0.642798), (-170.26195, 0.662989), (-171.17699, 0.662989), (-171.15508, 0.642798), (-170.2641, 0.42663), (-170.28552, 0.42663), (-170.28552, -0.551073), (-170.2641, -0.551073), (-170.30667, 0.598575), (-170.37091, 0.585624), (-170.37091, -0.374445), (-170.30989, -0.375434), (-170.26645, 0.417072), (-170.32748, 0.414317), (-170.32748, 0.401735), (-170.26645, 0.402724), (-170.26645, 0.417072), (-170.26645, 0.598524), (-170.32748, 0.562373), (-170.32748, 0.414317), (-170.26323, -0.571201), (-170.26645, 0.402724), (-170.32748, 0.401735), (-170.32748, -0.558251), (-170.30989, -0.389784), (-170.30989, -0.375434), (-170.37091, -0.374445), (-170.37091, -0.387028), (-170.30989, -0.389784), (-170.37091, -0.387028), (-170.37091, -0.535097), (-170.30989, -0.571252), (-170.15085, 0.914122), (-170.2157, 0.91213), (-170.2157, 0.033435), (-170.15085, 0.031443), (-170.22023, -0.551073), (-170.22023, 0.42663), (-170.2641, 0.42663), (-170.2641, -0.551073), (-170.24187, 0.398469), (-170.24187, -0.522912), (-170.18039, -0.522912), (-170.18039, 0.398469), (-170.39278, 0.460569), (-170.39278, 0.662035), (-170.41278, 0.662035), (-170.45377, 0.633694), (-170.45377, 0.460569), (-170.45377, 0.446233), (-170.39278, 0.446233), (-170.39278, 0.460569), (-170.45377, 0.460569), (-170.35101, -0.371258), (-170.35101, 0.621934), (-170.41199, 0.610903), (-170.41199, -0.371258), (-170.35101, -0.385598), (-170.41199, -0.385598), (-170.41199, -0.558754), (-170.37102, -0.5871), (-170.35101, -0.5871), (-170.41199, -0.385598), (-170.35101, -0.385598), (-170.35101, -0.371258), (-170.41199, -0.371258), (-170.39278, -0.546777), (-170.39278, 0.446233), (-170.45377, 0.446233), (-170.45377, -0.535748), (-170.26195, -0.54767), (-171.17699, -0.54767), (-171.17699, -0.587939), (-170.26195, -0.587939), (-170.39278, -0.546777), (-170.45377, -0.535748), (-170.45377, -0.575956), (-170.39278, -0.586985), (-170.19563, 0.39468), (-170.19563, -0.519123), (-170.15541, -0.519123), (-170.15541, 0.39468), (-170.41199, 0.610903), (-170.35101, 0.621934), (-170.35101, 0.662149), (-170.41199, 0.651118)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer1B4_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1B4_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1B4_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1B4_0/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1B4_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Copper_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1B4_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }
    }
}

