#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "FridgeDrawer2_10_FridgeDrawer2B4_2_GeomSubset_4"
    {
        def Mesh "FridgeDrawer2_10_FridgeDrawer2B4_2_GeomSubset_4"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 8, 4, 3, 8, 4, 3, 4, 4, 4, 4, 3, 4, 8, 3, 4, 8]
            int[] faceVertexIndices = [16, 17, 19, 18, 20, 21, 23, 22, 24, 25, 27, 26, 65, 66, 70, 71, 64, 65, 71, 72, 63, 64, 72, 73, 54, 63, 73, 57, 59, 70, 66, 58, 52, 53, 59, 58, 33, 32, 31, 30, 31, 32, 42, 45, 43, 44, 46, 47, 47, 46, 48, 49, 49, 48, 50, 51, 51, 50, 45, 42, 74, 75, 57, 73, 72, 71, 70, 59, 76, 77, 52, 58, 77, 78, 52, 76, 58, 66, 65, 64, 63, 54, 79, 74, 59, 53, 80, 80, 53, 81, 54, 57, 75, 79, 78, 81, 53, 52, 83, 33, 30, 82, 85, 44, 43, 84, 86, 82, 30, 87, 86, 30, 31, 88, 84, 43, 47, 49, 51, 42, 32, 83, 89, 33, 88, 32, 33, 89, 87, 31, 45, 50, 48, 46, 44, 85]
            rel material:binding = </root/_materials/M_FridgeDrawer2B4_4>
            normal3f[] normals = [(0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (1.0387157e-7, -0.37388766, -0.92747396), (0.0000028358772, -0.16058092, -0.98702276), (-0.0008115964, -0.16057676, -0.98702306), (0, -0.37388775, -0.927474), (-2.1335494e-10, -0.69025356, -0.72356755), (1.0387157e-7, -0.37388766, -0.92747396), (0, -0.37388775, -0.927474), (0, -0.69025356, -0.72356755), (0, -0.9083958, -0.4181113), (-2.1335494e-10, -0.69025356, -0.72356755), (0, -0.69025356, -0.72356755), (-1.9971048e-7, -0.90839577, -0.41811132), (-3.9451697e-7, -0.9847658, -0.17388578), (0, -0.9083958, -0.4181113), (-1.9971048e-7, -0.90839577, -0.41811132), (2.734887e-7, -0.9847658, -0.17388579), (9.313226e-10, 0.49785396, -0.8672609), (-0.0008115964, -0.16057676, -0.98702306), (0.0000028358772, -0.16058092, -0.98702276), (0, 0.497854, -0.8672608), (6.239861e-7, 0.41592804, -0.9093975), (0, 0.41592804, -0.90939754), (9.313226e-10, 0.49785396, -0.8672609), (0, 0.497854, -0.8672608), (-1.5685815e-8, -0.5131344, 0.85830826), (0, -0.41035396, 0.91192627), (-0.000088881556, -0.41035402, 0.91192627), (0, -0.5131344, 0.85830826), (-0.000088881556, -0.41035402, 0.91192627), (0, -0.41035396, 0.91192627), (-0.0000031180375, 0.17356564, 0.9848222), (0, 0.17356563, 0.9848222), (0, 0.9791642, 0.2030699), (9.914249e-10, 0.9791642, 0.2030699), (0, 0.9170707, 0.39872465), (-1.071838e-10, 0.9170707, 0.39872465), (-1.071838e-10, 0.9170707, 0.39872465), (0, 0.9170707, 0.39872465), (0, 0.68982357, 0.72397745), (7.07523e-7, 0.68982357, 0.72397745), (7.07523e-7, 0.68982357, 0.72397745), (0, 0.68982357, 0.72397745), (0, 0.3670447, 0.9302033), (-1.0409019e-10, 0.3670447, 0.9302033), (-1.0409019e-10, 0.3670447, 0.9302033), (0, 0.3670447, 0.9302033), (0, 0.17356563, 0.9848222), (-0.0000031180375, 0.17356564, 0.9848222), (0.9995511, -0.003094853, 0.029798564), (0.9994905, 0.009616083, 0.030435435), (0.9995323, 0.010005033, 0.028898116), (0.9995323, 0.010005033, 0.028898116), (0.9995323, 0.010005033, 0.028898116), (0.9995323, 0.010005033, 0.028898116), (0.9995323, 0.010005033, 0.028898116), (0.99957025, -0.0025876504, 0.029198583), (-0.99955094, -0.0031927216, 0.02979752), (-0.99920976, -0.008614171, 0.038803045), (-0.99946976, 0.016102083, 0.028300334), (-0.99957025, -0.0025893343, 0.029199112), (-0.99920976, -0.008614171, 0.038803045), (-0.99439085, -0.07220317, 0.07728911), (-0.99946976, 0.016102083, 0.028300334), (-0.99955094, -0.0031927216, 0.02979752), (-0.99957025, -0.0025893343, 0.029199112), (-0.9995323, 0.010005067, 0.028898166), (-0.9995323, 0.010005067, 0.028898166), (-0.9995323, 0.010005067, 0.028898166), (-0.9995323, 0.010005067, 0.028898166), (-0.9995323, 0.010005067, 0.028898166), (-0.99950343, 0.009733159, 0.029970957), (0.9995511, -0.003094853, 0.029798564), (0.99957025, -0.0025876504, 0.029198583), (0.9994682, 0.016200174, 0.02830057), (0.9992104, -0.008516122, 0.03880656), (0.9992104, -0.008516122, 0.03880656), (0.9994682, 0.016200174, 0.02830057), (0.99439085, -0.072203316, 0.077288516), (-3.9451697e-7, -0.9847658, -0.17388578), (2.734887e-7, -0.9847658, -0.17388579), (0, -0.98027253, -0.19765058), (0, -0.98027253, -0.1976506), (3.3550896e-7, 0.85439026, -0.51963174), (1.3384852e-7, 0.8543904, -0.5196318), (0, 0.41592804, -0.90939754), (6.239861e-7, 0.41592804, -0.9093975), (0, -0.8224717, 0.568806), (-1.5685815e-8, -0.5131344, 0.85830826), (0, -0.5131344, 0.85830826), (0, -0.8224717, 0.568806), (0, 0.9840244, 0.17803349), (9.914249e-10, 0.9791642, 0.2030699), (0, 0.9791642, 0.2030699), (0, 0.9840244, 0.17803349), (-1, 5.5208652e-8, 0), (-1, -1.2085802e-8, 0), (-1, 1.8385013e-7, 0), (-1, 5.95712e-8, 0), (-1, 5.5208652e-8, 0), (-1, 1.8385013e-7, 0), (-1, 9.803876e-8, 0), (1, -3.727156e-9, 0), (1, -4.5770903e-9, 0), (1, -1.4908624e-8, 0), (1, -1.4908624e-8, 0), (1, -1.4908624e-8, 0), (1, -1.4908624e-8, 0), (1, -1.4908624e-8, 0), (1, -8.77469e-9, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, -3.727156e-9, 0), (1, -8.77469e-9, 0), (1, 0, 0), (1, 0, 0), (-1, 5.95712e-8, 0), (-1, 9.803876e-8, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.005766, 0.047896, -0.95645), (0.005755, 0.047896, -0.95645), (0.005766, 0.047906, -0.95645), (0.005755, 0.047906, -0.95645), (0.005766, 0.047896, -0.95645), (0.005755, 0.047896, -0.95645), (0.005766, 0.047906, -0.95645), (0.005755, 0.047906, -0.95645), (0.005766, 0.047896, -0.95645), (0.005755, 0.047896, -0.95645), (0.005766, 0.047906, -0.95645), (0.005755, 0.047906, -0.95645), (0.005766, 0.047896, -0.95645), (0.005755, 0.047896, -0.95645), (0.005766, 0.047906, -0.95645), (0.005755, 0.047906, -0.95645), (0.005766, 0.047896, -0.95645), (0.005755, 0.047896, -0.95645), (0.005766, 0.047906, -0.95645), (0.005755, 0.047906, -0.95645), (0.005766, 0.047896, -0.95645), (0.005755, 0.047896, -0.95645), (0.005766, 0.047906, -0.95645), (0.005755, 0.047906, -0.95645), (0.005766, 0.047896, -0.95645), (0.005755, 0.047896, -0.95645), (0.005766, 0.047906, -0.95645), (0.005755, 0.047906, -0.95645), (-0.029737, 0.233588, -0.661681), (-0.37466, 0.233588, -0.661681), (-0.029737, 0.157528, -0.771665), (-0.029737, 0.152115, -0.774433), (-0.37466, 0.152115, -0.774433), (-0.37466, 0.157528, -0.771665), (-0.029737, 0.233588, -0.654136), (-0.029737, 0.157528, -0.654136), (-0.029737, 0.152115, -0.654136), (-0.029737, -0.22278, -0.654136), (-0.37466, 0.157528, -0.654136), (-0.37466, 0.233588, -0.654136), (-0.37466, 0.152115, -0.654136), (-0.37466, -0.22278, -0.654136), (-0.37466, -0.182484, -0.774433), (-0.37466, -0.20484, -0.7533), (-0.029737, -0.20484, -0.7533), (-0.029737, -0.182484, -0.774433), (-0.029737, -0.203139, -0.761387), (-0.37466, -0.203139, -0.761387), (-0.029737, -0.198292, -0.768243), (-0.37466, -0.198292, -0.768243), (-0.029737, -0.19104, -0.772824), (-0.37466, -0.19104, -0.772824), (-0.366281, 0.152455, -0.766454), (-0.038116, 0.152455, -0.766454), (-0.369441, -0.195373, -0.751645), (-0.366408, -0.215278, -0.652924), (-0.037989, -0.215278, -0.652924), (-0.034956, -0.195373, -0.751645), (-0.366281, 0.150277, -0.767567), (-0.038116, 0.150277, -0.767567), (-0.041407, 0.157528, -0.654136), (-0.037989, 0.225977, -0.654136), (-0.041407, 0.152115, -0.654136), (-0.36936, -0.194279, -0.757918), (-0.36936, -0.191511, -0.761833), (-0.36936, -0.18737, -0.764449), (-0.369421, -0.181542, -0.765385), (-0.36299, 0.152115, -0.654136), (-0.366408, 0.225977, -0.654136), (-0.36299, 0.157528, -0.654136), (-0.034976, -0.181542, -0.765385), (-0.035037, -0.18737, -0.764449), (-0.035037, -0.191511, -0.761833), (-0.035037, -0.194279, -0.757918), (-0.040739, 0.151742, -0.677152), (-0.037244, -0.210393, -0.677152), (-0.363658, 0.151742, -0.677152), (-0.363665, 0.156488, -0.677152), (-0.368761, 0.21234, -0.677152), (-0.367153, -0.210393, -0.677152), (-0.040732, 0.156488, -0.677152), (-0.035636, 0.21234, -0.677152), (-0.029737, 0.222888, -0.677152), (-0.37466, 0.222888, -0.677152), (-0.37466, -0.218617, -0.677152), (-0.029737, -0.218617, -0.677152), (-0.029737, 0.157528, -0.677152), (-0.029737, 0.152115, -0.677152), (-0.37466, 0.152115, -0.677152), (-0.37466, 0.157528, -0.677152), (-0.029737, -0.23796, -0.654136), (-0.37466, -0.23796, -0.654136), (-0.37466, -0.233797, -0.677153), (-0.029737, -0.233797, -0.677153)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-69.00104, -112.291985), (-69.00104, -112.292), (-69.00102, -112.292), (-69.00102, -112.291985), (-69.00674, -112.291985), (-69.00674, -112.292), (-69.00672, -112.292), (-69.00672, -112.291985), (-69.012436, -112.291985), (-69.012436, -112.292), (-69.01242, -112.292), (-69.01242, -112.291985), (-70.82248, -0.43351), (-70.82232, -0.418217), (-71.69988, -0.418217), (-71.69972, -0.43351), (-70.82248, -0.444377), (-70.82248, -0.43351), (-71.69972, -0.43351), (-71.69972, -0.444377), (-70.82248, -0.451639), (-70.82248, -0.444377), (-71.69972, -0.444377), (-71.69972, -0.451639), (-71.53506, -0.379006), (-71.51939, -0.378803), (-71.51939, 0.456504), (-71.53506, 0.456707), (-71.69164, 0.452456), (-71.69988, -0.418217), (-70.82232, -0.418217), (-70.83056, 0.452456), (-70.83056, 0.458171), (-71.69164, 0.458171), (-71.69164, 0.452456), (-70.83056, 0.452456), (-71.08028, -0.806315), (-71.08028, -0.792081), (-71.98734, -0.792081), (-71.98734, -0.806315), (-71.98734, -0.792081), (-71.08028, -0.792081), (-71.08028, 0.087831), (-71.98734, 0.087831), (-71.60117, -0.385202), (-71.60117, 0.475343), (-71.62135, 0.475343), (-71.62135, -0.385202), (-71.08028, 0.142147), (-71.98734, 0.142147), (-71.98734, 0.129402), (-71.08028, 0.129402), (-71.08028, 0.129402), (-71.98734, 0.129402), (-71.98734, 0.110329), (-71.08028, 0.110329), (-71.08028, 0.110329), (-71.98734, 0.110329), (-71.98734, 0.087831), (-71.08028, 0.087831), (-71.15616, -0.793168), (-71.15616, 0.103181), (-71.34054, 0.066006), (-71.356064, 0.063296), (-71.36576, 0.056446), (-71.37223, 0.046195), (-71.37455, 0.031769), (-71.37995, -0.78954), (-71.04232, -0.046807), (-71.04232, -0.03506), (-71.26335, -0.045044), (-71.26611, -0.050435), (-71.04232, -0.03506), (-71.04232, 0.103182), (-71.26335, -0.045044), (-71.04232, -0.046807), (-71.26611, -0.050435), (-71.26071, -0.871746), (-71.25839, -0.886172), (-71.251915, -0.896423), (-71.242226, -0.903273), (-71.2267, -0.905982), (-71.04232, -0.943158), (-71.15616, -0.793168), (-71.37995, -0.78954), (-71.3772, -0.794931), (-71.15616, -0.804915), (-71.15616, -0.804915), (-71.3772, -0.794931), (-71.15616, -0.943157), (-71.53506, -0.379006), (-71.53506, 0.456707), (-71.721176, 0.45099), (-71.721176, -0.373289), (-70.82405, 0.615306), (-71.69815, 0.615306), (-71.69164, 0.458171), (-70.83056, 0.458171), (-71.08028, -0.978196), (-71.08028, -0.806315), (-71.98734, -0.806315), (-71.98734, -0.978196), (-71.411194, 0.475343), (-71.60117, 0.475343), (-71.60117, -0.385202), (-71.411194, -0.385202), (-71.80696, -0.024328), (-71.80696, 0.137389), (-72.0408, -0.024328), (-71.80696, -0.03772), (-71.80696, -0.024328), (-72.0408, -0.024328), (-72.04765, -0.03772), (-71.6839, -0.779883), (-71.6839, 0.137386), (-71.87231, 0.103301), (-71.89232, 0.099091), (-71.90928, 0.0871), (-71.920616, 0.069155), (-71.9246, 0.047988), (-71.9246, -0.779883), (-71.6839, -0.95499), (-71.6839, -0.793274), (-71.91775, -0.793274), (-71.6839, -0.779883), (-71.9246, -0.779883), (-71.91775, -0.793274), (-71.6839, -0.793274), (-71.80696, -0.03772), (-72.04765, -0.03772), (-72.04765, -0.865593), (-72.04367, -0.886761), (-72.03233, -0.904706), (-72.01537, -0.916696), (-71.99536, -0.920907), (-71.80696, -0.954992)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer2B4_4"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer2B4_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.39705884, 0.39705884, 0.39705884)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }
    }
}

