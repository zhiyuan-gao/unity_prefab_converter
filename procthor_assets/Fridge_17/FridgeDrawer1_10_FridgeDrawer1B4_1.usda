#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.0"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "FridgeDrawer1B4"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "FridgeDrawer1B4" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.393662, -0.240925, -0.95645), (-0.005755, 0.230623, -0.652924)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 8, 4, 3, 8, 4, 3, 4, 4, 4, 4, 3, 4, 8, 3, 4, 8]
            int[] faceVertexIndices = [0, 1, 3, 2, 68, 61, 81, 78, 56, 37, 41, 55, 61, 34, 35, 60, 60, 35, 36, 62, 55, 41, 40, 67, 69, 38, 39, 68, 67, 40, 38, 69, 62, 36, 37, 56, 68, 39, 34, 61, 28, 34, 39, 29, 56, 75, 74, 62, 69, 77, 76, 67, 69, 68, 78, 77, 55, 67, 76, 79, 60, 62, 74, 80, 60, 80, 81, 61, 75, 56, 55, 79, 83, 82, 28, 29, 93, 92, 91, 90, 35, 34, 28, 82, 86, 87, 36, 35, 86, 40, 41, 84, 88, 38, 89, 83, 29, 39, 89, 38, 40, 88, 37, 36, 87, 85, 41, 37, 90, 91, 37, 85, 93, 90, 85, 84, 92, 93, 84, 41, 91, 92, 4, 5, 7, 6, 8, 9, 11, 10, 12, 13, 15, 14, 16, 17, 19, 18, 20, 21, 23, 22, 24, 25, 27, 26, 65, 66, 70, 71, 64, 65, 71, 72, 63, 64, 72, 73, 54, 63, 73, 57, 59, 70, 66, 58, 52, 53, 59, 58, 33, 32, 31, 30, 31, 32, 42, 45, 43, 44, 46, 47, 47, 46, 48, 49, 49, 48, 50, 51, 51, 50, 45, 42, 74, 75, 57, 73, 72, 71, 70, 59, 76, 77, 52, 58, 77, 78, 52, 76, 58, 66, 65, 64, 63, 54, 79, 74, 59, 53, 80, 80, 53, 81, 54, 57, 75, 79, 78, 81, 53, 52, 83, 33, 30, 82, 85, 44, 43, 84, 86, 82, 30, 87, 86, 30, 31, 88, 84, 43, 47, 49, 51, 42, 32, 83, 89, 33, 88, 32, 33, 89, 87, 31, 45, 50, 48, 46, 44, 85]
            rel material:binding = </root/_materials/M_FridgeDrawer1B4_0>
            normal3f[] normals = [(0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, -0.86030924, 0.5097725), (0, -0.86030924, 0.5097725), (-7.5879507e-7, -0.8364929, 0.54797775), (-2.9266812e-7, -0.8364927, 0.547978), (-0.035899535, -0.06579445, 0.99718726), (-0.014401251, -0.022599809, 0.9996409), (0.014401624, -0.022599844, 0.9996409), (0.035902508, -0.06579525, 0.997187), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.060411118, 0.0019007309, 0.99817175), (-0.06048421, 0.0018975881, 0.9981674), (0.035902508, -0.06579525, 0.997187), (0.014401624, -0.022599844, 0.9996409), (0.060363714, 0.0018991993, 0.9981747), (0.06048491, 0.0018979782, 0.9981673), (6.424339e-7, 0, 1), (6.529629e-7, 0, 1), (6.864856e-7, 0, 1), (6.4874547e-7, 0, 1), (0.06048491, 0.0018979782, 0.9981673), (0.060363714, 0.0018991993, 0.9981747), (6.529629e-7, 0, 1), (6.424339e-7, 0, 1), (-0.06048421, 0.0018975881, 0.9981674), (-0.060411118, 0.0019007309, 0.99817175), (-0.014401251, -0.022599809, 0.9996409), (-0.035899535, -0.06579445, 0.99718726), (6.4874547e-7, 0, 1), (6.864856e-7, 0, 1), (0, 0, 1), (0, 0, 1), (-1.1552375e-8, 0.9068403, -0.4214743), (0, 1, 0), (0, 1, 0), (0, 0.9068403, -0.42147428), (0.9994808, -0.009520864, -0.030782003), (0.9995184, -0.0098971175, -0.029410657), (0.99952346, -0.0097091375, -0.029300854), (0.99948156, -0.009391346, -0.030797865), (-0.99453825, 0.06328823, -0.082994856), (-0.9959014, 0.075303964, -0.050097525), (-0.9995235, -0.009706117, -0.02930054), (-0.99948156, -0.009390262, -0.030797694), (-0.99453825, 0.06328823, -0.082994856), (-0.99387336, 0.06808384, -0.0870653), (-0.99494326, 0.078305036, -0.06289947), (-0.9959014, 0.075303964, -0.050097525), (-0.99948066, -0.009520883, -0.030781232), (-0.99948156, -0.009390262, -0.030797694), (-0.9995235, -0.009706117, -0.02930054), (-0.99952084, -0.009924927, -0.029318508), (0.99453956, 0.06328082, -0.08298585), (0.99948156, -0.009391346, -0.030797865), (0.99952346, -0.0097091375, -0.029300854), (0.9959022, 0.07529329, -0.05009774), (0.99453956, 0.06328082, -0.08298585), (0.9959022, 0.07529329, -0.05009774), (0.9949435, 0.07830955, -0.06288951), (0.993876, 0.06807593, -0.08704155), (0, 0.98027384, 0.19764386), (0, 0.9802729, 0.19764875), (0, 0.9802729, 0.19764875), (0, 0.9802739, 0.1976439), (0, 0.8224716, -0.5688062), (0, 0.8224716, -0.5688062), (-1.1552375e-8, 0.9068403, -0.4214743), (0, 0.9068403, -0.42147428), (0, -0.9840268, -0.17802022), (0, -0.9840268, -0.17802022), (0, -0.9840268, -0.17802022), (0, -0.9840268, -0.17802022), (-1, -1.3960117e-7, 0), (-1, -2.7920234e-7, 0), (-1, -2.7920234e-7, 0), (-1, -1.9337241e-7, 0), (-1, 6.0300357e-7, 0), (-1, 6.7280416e-7, 0), (-1, 0, 0), (-1, -1.3960117e-7, 0), (-1, 6.0300357e-7, 0), (1, 0, 0), (1, 0, 0), (1, 7.6285267e-10, 0), (1, 6.2119215e-10, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 6.2119215e-10, 0), (-1, 0, 0), (-1, 0, 0), (-1, 6.7280416e-7, 0), (-1, 0, 0), (0.014401624, -0.022599844, 0.9996409), (-0.014401251, -0.022599809, 0.9996409), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0.00006675527, -0.99999994), (0, 0.00006675527, -0.99999994), (0, 0.00006675527, -0.99999994), (0, 0.00006675527, -0.99999994), (1, 7.6285267e-10, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (-5.0204108e-8, 0.3348873, 0.9422582), (-5.402835e-7, 0.009313292, 0.9999566), (0.00077449204, 0.009317279, 0.99995637), (0, 0.33488712, 0.94225824), (1.8057812e-10, 0.6870084, 0.7266495), (-5.0204108e-8, 0.3348873, 0.9422582), (0, 0.33488712, 0.94225824), (0, 0.6870084, 0.7266495), (0, 0.9353956, 0.353603), (1.8057812e-10, 0.6870084, 0.7266495), (0, 0.6870084, 0.7266495), (7.508788e-9, 0.93539554, 0.35360298), (4.0257873e-7, 0.98068744, 0.1955813), (0, 0.9353956, 0.353603), (7.508788e-9, 0.93539554, 0.35360298), (-2.7689384e-7, 0.98068744, 0.19558132), (8.614734e-9, 0.0031611074, 0.99999493), (0.00077449204, 0.009317279, 0.99995637), (-5.402835e-7, 0.009313292, 0.9999566), (0, 0.0031611472, 0.999995), (-5.0710514e-7, -0.82453996, 0.5658037), (0, -0.82453954, 0.56580436), (8.614734e-9, 0.0031611074, 0.99999493), (0, 0.0031611472, 0.999995), (1.9292765e-8, 0.8085886, -0.58837426), (0, 0.008218244, -0.99996626), (-1.9771408e-8, 0.008218259, -0.99996626), (0, 0.8085886, -0.58837426), (-1.9771408e-8, 0.008218259, -0.99996626), (0, 0.008218244, -0.99996626), (-0.000034553366, -0.0047472715, -0.9999888), (0, -0.0047472566, -0.9999888), (0, -0.983533, -0.18072844), (-1.0034306e-9, -0.983533, -0.18072844), (0, -0.91590875, -0.40138662), (1.4571583e-10, -0.91590875, -0.40138662), (1.4571583e-10, -0.91590875, -0.40138662), (0, -0.91590875, -0.40138662), (0, -0.68695337, -0.72670156), (1.8612645e-10, -0.68695337, -0.72670156), (1.8612645e-10, -0.68695337, -0.72670156), (0, -0.68695337, -0.72670156), (0, -0.36460668, -0.9311616), (5.3540592e-8, -0.36460668, -0.9311616), (5.3540592e-8, -0.36460668, -0.9311616), (0, -0.36460668, -0.9311616), (0, -0.0047472566, -0.9999888), (-0.000034553366, -0.0047472715, -0.9999888), (0.99952346, -0.0097091375, -0.029300854), (0.9995184, -0.0098971175, -0.029410657), (0.9995322, -0.010002129, -0.02890296), (0.9995322, -0.010002129, -0.02890296), (0.9995322, -0.010002129, -0.02890296), (0.9995322, -0.010002129, -0.02890296), (0.9995322, -0.010002129, -0.02890296), (0.99953336, -0.009884685, -0.028901204), (-0.9995235, -0.009706117, -0.02930054), (-0.9959014, 0.075303964, -0.050097525), (-0.9974645, 0.063567266, -0.03199786), (-0.9995334, -0.00988064, -0.028901719), (-0.9959014, 0.075303964, -0.050097525), (-0.99494326, 0.078305036, -0.06289947), (-0.9974645, 0.063567266, -0.03199786), (-0.9995235, -0.009706117, -0.02930054), (-0.9995334, -0.00988064, -0.028901719), (-0.99953216, -0.010002259, -0.028903026), (-0.99953216, -0.010002259, -0.028903026), (-0.99953216, -0.010002259, -0.028903026), (-0.99953216, -0.010002259, -0.028903026), (-0.99953216, -0.010002259, -0.028903026), (-0.99952084, -0.009924927, -0.029318508), (0.99952346, -0.0097091375, -0.029300854), (0.99953336, -0.009884685, -0.028901204), (0.99746203, 0.06360356, -0.031999655), (0.9959022, 0.07529329, -0.05009774), (0.9959022, 0.07529329, -0.05009774), (0.99746203, 0.06360356, -0.031999655), (0.9949435, 0.07830955, -0.06288951), (4.0257873e-7, 0.98068744, 0.1955813), (-2.7689384e-7, 0.98068744, 0.19558132), (0, 0.98027384, 0.19764386), (0, 0.9802739, 0.1976439), (-2.9266812e-7, -0.8364927, 0.547978), (-7.5879507e-7, -0.8364929, 0.54797775), (0, -0.82453954, 0.56580436), (-5.0710514e-7, -0.82453996, 0.5658037), (0, 0.8224716, -0.5688062), (1.9292765e-8, 0.8085886, -0.58837426), (0, 0.8085886, -0.58837426), (0, 0.8224716, -0.5688062), (0, -0.98402673, -0.17802073), (-1.0034306e-9, -0.983533, -0.18072844), (0, -0.983533, -0.18072844), (0, -0.98402673, -0.17802073), (-1, 6.0300357e-7, 0), (-1, -1.9337241e-7, 0), (-1, 0.000002076425, 0), (-1, 6.7280416e-7, 0), (-1, 6.0300357e-7, 0), (-1, 0.000002076425, 0), (-1, 0.0000011072614, 0), (1, 6.2119215e-10, 0), (1, 7.6285267e-10, 0), (1, 2.4847686e-9, 0), (1, 2.4847686e-9, 0), (1, 2.4847686e-9, 0), (1, 2.4847686e-9, 0), (1, 2.4847686e-9, 0), (1, 1.4624472e-9, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 6.2119215e-10, 0), (1, 1.4624472e-9, 0), (1, 0, 0), (1, 0, 0), (-1, 6.7280416e-7, 0), (-1, 0.0000011072614, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.005766, 0.047896, -0.95645), (-0.005755, 0.047896, -0.95645), (-0.005766, 0.047906, -0.95645), (-0.005755, 0.047906, -0.95645), (-0.005766, 0.047896, -0.95645), (-0.005755, 0.047896, -0.95645), (-0.005766, 0.047906, -0.95645), (-0.005755, 0.047906, -0.95645), (-0.005766, 0.047896, -0.95645), (-0.005755, 0.047896, -0.95645), (-0.005766, 0.047906, -0.95645), (-0.005755, 0.047906, -0.95645), (-0.005766, 0.047896, -0.95645), (-0.005755, 0.047896, -0.95645), (-0.005766, 0.047906, -0.95645), (-0.005755, 0.047906, -0.95645), (-0.005766, 0.047896, -0.95645), (-0.005755, 0.047896, -0.95645), (-0.005766, 0.047906, -0.95645), (-0.005755, 0.047906, -0.95645), (-0.005766, 0.047896, -0.95645), (-0.005755, 0.047896, -0.95645), (-0.005766, 0.047906, -0.95645), (-0.005755, 0.047906, -0.95645), (-0.005766, 0.047896, -0.95645), (-0.005755, 0.047896, -0.95645), (-0.005766, 0.047906, -0.95645), (-0.005755, 0.047906, -0.95645), (-0.393662, 0.230623, -0.661681), (-0.04874, 0.230623, -0.661681), (-0.393662, 0.154563, -0.771665), (-0.393662, 0.14915, -0.774433), (-0.04874, 0.14915, -0.774433), (-0.04874, 0.154563, -0.771665), (-0.393662, 0.230623, -0.654136), (-0.393662, 0.154563, -0.654136), (-0.393662, 0.14915, -0.654136), (-0.393662, -0.225745, -0.654136), (-0.04874, 0.154563, -0.654136), (-0.04874, 0.230623, -0.654136), (-0.04874, 0.14915, -0.654136), (-0.04874, -0.225745, -0.654136), (-0.04874, -0.185449, -0.774433), (-0.04874, -0.207806, -0.7533), (-0.393662, -0.207806, -0.7533), (-0.393662, -0.185449, -0.774433), (-0.393662, -0.206104, -0.761387), (-0.04874, -0.206104, -0.761387), (-0.393662, -0.201258, -0.768243), (-0.04874, -0.201258, -0.768243), (-0.393662, -0.194005, -0.772824), (-0.04874, -0.194005, -0.772824), (-0.057118, 0.149489, -0.766454), (-0.385284, 0.149489, -0.766454), (-0.053959, -0.198339, -0.751645), (-0.056991, -0.218243, -0.652924), (-0.385411, -0.218243, -0.652924), (-0.388443, -0.198339, -0.751645), (-0.057118, 0.147311, -0.767567), (-0.385284, 0.147311, -0.767567), (-0.381993, 0.154563, -0.654136), (-0.385411, 0.223012, -0.654136), (-0.381993, 0.14915, -0.654136), (-0.05404, -0.197244, -0.757918), (-0.05404, -0.194477, -0.761833), (-0.05404, -0.190335, -0.764449), (-0.053978, -0.184507, -0.765385), (-0.060409, 0.14915, -0.654136), (-0.056991, 0.223012, -0.654136), (-0.060409, 0.154563, -0.654136), (-0.388424, -0.184507, -0.765385), (-0.388362, -0.190335, -0.764449), (-0.388362, -0.194477, -0.761833), (-0.388362, -0.197244, -0.757918), (-0.382661, 0.148777, -0.677152), (-0.386155, -0.213358, -0.677152), (-0.059741, 0.148777, -0.677152), (-0.059735, 0.153523, -0.677152), (-0.054638, 0.209374, -0.677152), (-0.056247, -0.213358, -0.677152), (-0.382667, 0.153523, -0.677152), (-0.387763, 0.209374, -0.677152), (-0.393662, 0.219923, -0.677152), (-0.04874, 0.219923, -0.677152), (-0.04874, -0.221582, -0.677152), (-0.393662, -0.221582, -0.677152), (-0.393662, 0.154563, -0.677152), (-0.393662, 0.14915, -0.677152), (-0.04874, 0.14915, -0.677152), (-0.04874, 0.154563, -0.677152), (-0.393662, -0.240925, -0.654136), (-0.04874, -0.240925, -0.654136), (-0.04874, -0.236761, -0.677153), (-0.393662, -0.236761, -0.677153)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-170.8859, -111.20602), (-170.8859, -111.2061), (-170.88583, -111.2061), (-170.88583, -111.20602), (-170.12288, -0.680825), (-170.12288, 0.537794), (-170.1735, 0.546524), (-170.1735, -0.689555), (-171.15508, -0.527767), (-171.17699, -0.54767), (-170.26195, -0.54767), (-170.28386, -0.527767), (-171.15508, 0.642798), (-171.17699, 0.662989), (-171.17699, 0.461216), (-171.14601, 0.461216), (-171.14601, 0.461216), (-171.17699, 0.461216), (-171.17699, 0.446857), (-171.14601, 0.446857), (-170.28386, -0.527767), (-170.26195, -0.54767), (-170.26195, 0.446857), (-170.29291, 0.446857), (-170.29291, 0.461216), (-170.26195, 0.461216), (-170.26195, 0.662989), (-170.28386, 0.642798), (-170.29291, 0.446857), (-170.26195, 0.446857), (-170.26195, 0.461216), (-170.29291, 0.461216), (-171.14601, 0.446857), (-171.17699, 0.446857), (-171.17699, -0.54767), (-171.15508, -0.527767), (-170.28386, 0.642798), (-170.26195, 0.662989), (-171.17699, 0.662989), (-171.15508, 0.642798), (-170.2641, 0.42663), (-170.28552, 0.42663), (-170.28552, -0.551073), (-170.2641, -0.551073), (-170.30667, 0.598575), (-170.37091, 0.585624), (-170.37091, -0.374445), (-170.30989, -0.375434), (-170.26645, 0.417072), (-170.32748, 0.414317), (-170.32748, 0.401735), (-170.26645, 0.402724), (-170.26645, 0.417072), (-170.26645, 0.598524), (-170.32748, 0.562373), (-170.32748, 0.414317), (-170.26323, -0.571201), (-170.26645, 0.402724), (-170.32748, 0.401735), (-170.32748, -0.558251), (-170.30989, -0.389784), (-170.30989, -0.375434), (-170.37091, -0.374445), (-170.37091, -0.387028), (-170.30989, -0.389784), (-170.37091, -0.387028), (-170.37091, -0.535097), (-170.30989, -0.571252), (-170.15085, 0.914122), (-170.2157, 0.91213), (-170.2157, 0.033435), (-170.15085, 0.031443), (-170.22023, -0.551073), (-170.22023, 0.42663), (-170.2641, 0.42663), (-170.2641, -0.551073), (-170.24187, 0.398469), (-170.24187, -0.522912), (-170.18039, -0.522912), (-170.18039, 0.398469), (-170.39278, 0.460569), (-170.39278, 0.662035), (-170.41278, 0.662035), (-170.45377, 0.633694), (-170.45377, 0.460569), (-170.45377, 0.446233), (-170.39278, 0.446233), (-170.39278, 0.460569), (-170.45377, 0.460569), (-170.35101, -0.371258), (-170.35101, 0.621934), (-170.41199, 0.610903), (-170.41199, -0.371258), (-170.35101, -0.385598), (-170.41199, -0.385598), (-170.41199, -0.558754), (-170.37102, -0.5871), (-170.35101, -0.5871), (-170.41199, -0.385598), (-170.35101, -0.385598), (-170.35101, -0.371258), (-170.41199, -0.371258), (-170.39278, -0.546777), (-170.39278, 0.446233), (-170.45377, 0.446233), (-170.45377, -0.535748), (-170.26195, -0.54767), (-171.17699, -0.54767), (-171.17699, -0.587939), (-170.26195, -0.587939), (-170.39278, -0.546777), (-170.45377, -0.535748), (-170.45377, -0.575956), (-170.39278, -0.586985), (-170.19563, 0.39468), (-170.19563, -0.519123), (-170.15541, -0.519123), (-170.15541, 0.39468), (-170.41199, 0.610903), (-170.35101, 0.621934), (-170.35101, 0.662149), (-170.41199, 0.651118), (-141.89804, -110.22088), (-141.89804, -111.91363), (-140.37753, -111.91363), (-140.37753, -110.22088), (-116.78542, -111.56199), (-116.78542, -111.562126), (-116.78532, -111.562126), (-116.78532, -111.56199), (-88.71505, -110.74826), (-88.71505, -113.93459), (-85.85996, -113.93459), (-85.85996, -110.74826), (-69.00104, -112.291985), (-69.00104, -112.292), (-69.00102, -112.292), (-69.00102, -112.291985), (-69.00674, -112.291985), (-69.00674, -112.292), (-69.00672, -112.292), (-69.00672, -112.291985), (-69.012436, -112.291985), (-69.012436, -112.292), (-69.01242, -112.292), (-69.01242, -112.291985), (-70.82248, -0.433509), (-70.82232, -0.418217), (-71.69988, -0.418217), (-71.69972, -0.433509), (-70.82248, -0.444377), (-70.82248, -0.433509), (-71.69972, -0.433509), (-71.69972, -0.444377), (-70.82248, -0.451639), (-70.82248, -0.444377), (-71.69972, -0.444377), (-71.69972, -0.451639), (-71.53506, -0.379007), (-71.51939, -0.378805), (-71.51939, 0.456505), (-71.53506, 0.456707), (-71.69165, 0.452456), (-71.69988, -0.418217), (-70.82232, -0.418217), (-70.83056, 0.452456), (-70.83056, 0.458171), (-71.69165, 0.458171), (-71.69165, 0.452456), (-70.83056, 0.452456), (-71.08028, -0.806314), (-71.08028, -0.792081), (-71.987335, -0.792081), (-71.987335, -0.806314), (-71.987335, -0.792081), (-71.08028, -0.792081), (-71.08028, 0.087831), (-71.987335, 0.087831), (-71.60117, -0.385202), (-71.60117, 0.475342), (-71.62135, 0.475342), (-71.62135, -0.385202), (-71.08028, 0.142146), (-71.987335, 0.142146), (-71.987335, 0.129402), (-71.08028, 0.129402), (-71.08028, 0.129402), (-71.987335, 0.129402), (-71.987335, 0.110329), (-71.08028, 0.110329), (-71.08028, 0.110329), (-71.987335, 0.110329), (-71.987335, 0.087831), (-71.08028, 0.087831), (-71.15616, -0.793168), (-71.15616, 0.103182), (-71.34054, 0.066006), (-71.356064, 0.063297), (-71.36576, 0.056447), (-71.37223, 0.046195), (-71.37455, 0.03177), (-71.37995, -0.789541), (-71.04232, -0.046807), (-71.04232, -0.035059), (-71.26335, -0.045043), (-71.26611, -0.050434), (-71.04232, -0.035059), (-71.04232, 0.103183), (-71.26335, -0.045043), (-71.04232, -0.046807), (-71.26611, -0.050434), (-71.26071, -0.871747), (-71.25839, -0.886172), (-71.251915, -0.896424), (-71.242226, -0.903274), (-71.2267, -0.905983), (-71.04232, -0.943159), (-71.15616, -0.793168), (-71.37995, -0.789541), (-71.3772, -0.794932), (-71.15616, -0.804916), (-71.15616, -0.804916), (-71.3772, -0.794932), (-71.15616, -0.943158), (-71.53506, -0.379007), (-71.53506, 0.456707), (-71.72118, 0.450991), (-71.72118, -0.37329), (-70.82405, 0.615306), (-71.69815, 0.615306), (-71.69165, 0.458171), (-70.83056, 0.458171), (-71.08028, -0.978195), (-71.08028, -0.806314), (-71.987335, -0.806314), (-71.987335, -0.978195), (-71.411194, 0.475342), (-71.60117, 0.475342), (-71.60117, -0.385202), (-71.411194, -0.385202), (-71.80696, -0.024327), (-71.80696, 0.137389), (-72.0408, -0.024327), (-71.80696, -0.037719), (-71.80696, -0.024327), (-72.0408, -0.024327), (-72.04765, -0.037719), (-71.6839, -0.779884), (-71.6839, 0.137389), (-71.87231, 0.103304), (-71.89232, 0.099093), (-71.90928, 0.087103), (-71.920616, 0.069157), (-71.9246, 0.04799), (-71.9246, -0.779884), (-71.6839, -0.954992), (-71.6839, -0.793276), (-71.91775, -0.793276), (-71.6839, -0.779884), (-71.9246, -0.779884), (-71.91775, -0.793276), (-71.6839, -0.793276), (-71.80696, -0.037719), (-72.04765, -0.037719), (-72.04765, -0.865593), (-72.04367, -0.886761), (-72.03233, -0.904706), (-72.01537, -0.916697), (-71.99536, -0.920907), (-71.80696, -0.954992)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_FridgeDrawer1B4_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]
                rel material:binding = </root/_materials/M_FridgeDrawer1B4_0>
            }

            def GeomSubset "M_FridgeDrawer1B4_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [30]
                rel material:binding = </root/_materials/M_FridgeDrawer1B4_1>
            }

            def GeomSubset "M_FridgeDrawer1B4_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [31]
                rel material:binding = </root/_materials/M_FridgeDrawer1B4_2>
            }

            def GeomSubset "M_FridgeDrawer1B4_3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [32]
                rel material:binding = </root/_materials/M_FridgeDrawer1B4_3>
            }

            def GeomSubset "M_FridgeDrawer1B4_4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]
                rel material:binding = </root/_materials/M_FridgeDrawer1B4_4>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_FridgeDrawer1B4_0"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1B4_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1B4_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1B4_0/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1B4_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Copper_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1B4_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer1B4_1"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1B4_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1B4_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1B4_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1B4_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1B4_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer1B4_2"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1B4_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_FridgeDrawer1B4_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 1
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1B4_2/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1B4_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1B4_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_FridgeDrawer1B4_3"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1B4_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.25, 0.25, 0.25)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_FridgeDrawer1B4_3/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_FridgeDrawer1B4_3/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_FridgeDrawer1B4_4"
        {
            token outputs:surface.connect = </root/_materials/M_FridgeDrawer1B4_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.39705884, 0.39705884, 0.39705884)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }
    }
}

