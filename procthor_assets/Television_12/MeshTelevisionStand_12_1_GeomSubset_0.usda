#usda 1.0
(
    defaultPrim = "root"
    upAxis = "Z"
)

def Xform "root"
{
    def Xform "MeshTelevisionStand_12_1_GeomSubset_0"
    {
        def Mesh "MeshTelevisionStand_12_1_GeomSubset_0"
        {
            uniform bool doubleSided = 1
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 20, 21, 22, 23, 37, 24, 25, 39, 39, 25, 26, 41, 41, 26, 27, 43, 43, 27, 24, 37, 24, 27, 26, 25, 30, 38, 40, 32, 32, 40, 42, 34, 34, 42, 36, 29, 29, 36, 38, 30, 28, 20, 23, 35, 35, 23, 22, 33, 33, 22, 21, 31, 31, 21, 20, 28, 31, 28, 29, 30, 33, 31, 30, 32, 35, 33, 32, 34, 28, 35, 34, 29, 37, 39, 38, 36, 43, 37, 36, 42, 41, 43, 42, 40, 39, 41, 40, 38]
            rel material:binding = </root/_materials/M_TelevisionStand_12_0>
            normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -0.4195844, -0.9077163), (0, 0, -1), (0, 0, -1), (-1.1817177e-8, -0.4195844, -0.9077163), (1, 0, 0), (0.99999994, 0, 0), (0.99999994, 0, 0), (1, 0, 0), (-1.2015174e-8, 0.34794983, 0.9375131), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0.34794983, 0.9375131), (-1, 0, 0), (-0.99999994, 0, 0), (-0.99999994, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, -3.4143483e-7, 0), (1, -4.3732103e-7, 0), (1, -3.7174192e-7, 0), (1, -5.015059e-7, 0), (0, 0.82468987, 0.5655851), (-8.2005664e-9, 0.67907065, 0.7340729), (0, 0.67907065, 0.7340729), (6.607923e-9, 0.82468987, 0.5655851), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (7.1929275e-11, -0.8968479, -0.44233912), (1.0179956e-9, -0.70871276, -0.70549715), (0, -0.70871276, -0.70549715), (0, -0.8968479, -0.44233912), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0.0000053682907, 0.9366194, 0.35034865), (0, 0.9964442, 0.08425444), (0, 0.9964442, 0.08425444), (0, 0.9366194, 0.35034865), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -0.9475291, -0.31966946), (0, -0.99644405, -0.08425726), (0, -0.99644405, -0.08425726), (9.536353e-9, -0.9475291, -0.31966946), (0, -0.9475291, -0.31966946), (9.536353e-9, -0.9475291, -0.31966946), (7.1929275e-11, -0.8968479, -0.44233912), (0, -0.8968479, -0.44233912), (1, 0, 0), (1, 0, 0), (1, -3.4143483e-7, 0), (1, -5.015059e-7, 0), (0.0000053682907, 0.9366194, 0.35034865), (0, 0.9366194, 0.35034865), (0, 0.82468987, 0.5655851), (6.607923e-9, 0.82468987, 0.5655851), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -0.4195844, -0.9077163), (-1.1817177e-8, -0.4195844, -0.9077163), (0, -0.70871276, -0.70549715), (1.0179956e-9, -0.70871276, -0.70549715), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1.2015174e-8, 0.34794983, 0.9375131), (0, 0.34794983, 0.9375131), (0, 0.67907065, 0.7340729), (-8.2005664e-9, 0.67907065, 0.7340729), (1, 0, 0), (1, 0, 0), (1, -3.7174192e-7, 0), (1, -4.3732103e-7, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(0.00072, 0.015323, 0.065966), (-0.00072, 0.015323, 0.065966), (0.00072, 0.016762, 0.065966), (-0.00072, 0.016762, 0.065966), (0.00072, 0.015323, 0.065966), (-0.00072, 0.015323, 0.065966), (0.00072, 0.016762, 0.065966), (-0.00072, 0.016762, 0.065966), (0.00072, 0.015323, 0.065966), (-0.00072, 0.015323, 0.065966), (0.00072, 0.016762, 0.065966), (-0.00072, 0.016762, 0.065966), (0.00072, 0.015323, 0.065966), (-0.00072, 0.015323, 0.065966), (0.00072, 0.016762, 0.065966), (-0.00072, 0.016762, 0.065966), (0.00072, 0.015323, 0.065966), (-0.00072, 0.015323, 0.065966), (0.00072, 0.016762, 0.065966), (-0.00072, 0.016762, 0.065966), (0.204376, 0.102866, -0.388979), (-0.204376, 0.102866, -0.388979), (-0.204376, 0.085568, -0.388979), (0.204376, 0.085568, -0.388979), (0.204376, 0.00902, -0.005834), (-0.204376, 0.00902, -0.005834), (-0.204376, 0.00902, -0.018688), (0.204376, 0.00902, -0.018688), (0.204376, 0.073019, -0.036002), (0.204376, 0.068447, -0.023391), (-0.204376, 0.068447, -0.023391), (-0.204376, 0.073019, -0.036002), (-0.204376, 0.052224, -0.026427), (-0.204376, 0.055722, -0.036002), (0.204376, 0.052224, -0.026427), (0.204376, 0.055722, -0.036002), (0.204376, 0.061374, -0.012282), (0.204376, 0.051843, -0.005834), (-0.204376, 0.061374, -0.012282), (-0.204376, 0.051843, -0.005834), (-0.204376, 0.049195, -0.022836), (-0.204376, 0.040269, -0.018688), (0.204376, 0.049195, -0.022836), (0.204376, 0.040269, -0.018688), (0.355436, 0.101271, -0.395499), (0.336037, 0.120671, -0.395499), (-0.336037, 0.120671, -0.395499), (-0.355436, 0.101271, -0.395499), (-0.355436, -0.090556, -0.395499), (-0.336037, -0.109956, -0.395499), (0.355436, -0.090556, -0.395499), (0.336037, -0.109956, -0.395499), (0.355436, 0.101271, -0.383968), (0.336037, 0.120671, -0.383968), (-0.336037, 0.120671, -0.383968), (-0.355436, 0.101271, -0.383968), (-0.355436, -0.090556, -0.383968), (-0.336037, -0.109956, -0.383968), (0.336037, -0.109956, -0.383968), (0.355436, -0.090556, -0.383968), (0.330339, 0.114973, -0.379898), (0.349739, 0.095573, -0.379898), (-0.330339, 0.114973, -0.379898), (-0.349739, 0.095573, -0.379898), (-0.330339, -0.104258, -0.379898), (-0.349739, -0.084858, -0.379898), (0.349739, -0.084858, -0.379898), (0.330339, -0.104258, -0.379898), (-0.343461, 0.119194, -0.383968), (-0.343461, 0.119194, -0.395499), (-0.349754, 0.114989, -0.383968), (-0.349754, 0.114989, -0.395499), (-0.35396, 0.108695, -0.383968), (-0.35396, 0.108695, -0.395499), (0.343461, 0.119194, -0.395499), (0.343461, 0.119194, -0.383968), (0.349754, 0.114989, -0.395499), (0.349754, 0.114989, -0.383968), (0.35396, 0.108695, -0.395499), (0.35396, 0.108695, -0.383968), (-0.343461, -0.108479, -0.395499), (-0.343461, -0.108479, -0.383968), (-0.349754, -0.104274, -0.395499), (-0.349754, -0.104274, -0.383968), (-0.35396, -0.09798, -0.395499), (-0.35396, -0.09798, -0.383968), (0.343461, -0.108479, -0.383968), (0.343461, -0.108479, -0.395499), (0.349754, -0.104274, -0.383968), (0.349754, -0.104274, -0.395499), (0.35396, -0.09798, -0.383968), (0.35396, -0.09798, -0.395499), (0.337763, 0.113497, -0.379898), (0.344056, 0.109291, -0.379898), (0.348262, 0.102997, -0.379898), (-0.337763, 0.113497, -0.379898), (-0.344056, 0.109291, -0.379898), (-0.348262, 0.102997, -0.379898), (0.348262, -0.092282, -0.379898), (0.344056, -0.098576, -0.379898), (0.337763, -0.102781, -0.379898), (-0.337763, -0.102781, -0.379898), (-0.344056, -0.098576, -0.379898), (-0.348262, -0.092282, -0.379898), (0.329751, 0.109004, -0.379898), (0.34377, 0.094985, -0.379898), (-0.329751, 0.109004, -0.379898), (-0.34377, 0.094985, -0.379898), (-0.329751, -0.098289, -0.379898), (-0.34377, -0.08427, -0.379898), (0.34377, -0.08427, -0.379898), (0.329751, -0.098289, -0.379898), (0.335434, 0.107873, -0.379898), (0.339753, 0.104988, -0.379898), (0.342639, 0.100668, -0.379898), (-0.335434, 0.107873, -0.379898), (-0.339753, 0.104988, -0.379898), (-0.342639, 0.100668, -0.379898), (0.342639, -0.089953, -0.379898), (0.339753, -0.094272, -0.379898), (0.335434, -0.097158, -0.379898), (-0.335434, -0.097158, -0.379898), (-0.339753, -0.094272, -0.379898), (-0.342639, -0.089953, -0.379898)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-44.352688, -17.673101), (-44.352688, -17.674849), (-44.35094, -17.674849), (-44.35094, -17.673101), (-44.472546, -0.028672), (-43.67421, -0.028668), (-43.674206, 0.00511), (-44.47255, 0.005113), (-44.498806, 0.068857), (-44.498802, -0.020277), (-43.647957, -0.020278), (-43.647957, 0.068861), (-44.93195, 0.403672), (-44.93195, 0.320024), (-44.90684, 0.320024), (-44.906834, 0.381055), (-43.662434, 0.091459), (-43.662437, 0.154299), (-44.484318, 0.154295), (-44.484325, 0.091462), (-44.906776, 0.322592), (-44.906776, 0.383623), (-44.93188, 0.383619), (-44.93188, 0.29999), (-44.472557, 0.163879), (-44.47256, 0.138769), (-43.6742, 0.138773), (-43.674194, 0.163882), (-44.89765, 0.436106), (-44.919353, 0.422293), (-44.89874, 0.398496), (-44.891716, 0.404411), (-43.662434, 0.067424), (-43.662437, 0.07351), (-44.48432, 0.073516), (-44.484325, 0.067423), (-44.891655, 0.299245), (-44.898674, 0.305167), (-44.919285, 0.281375), (-44.897587, 0.267556), (-44.498802, 0.103426), (-44.498806, 0.088705), (-43.647953, 0.088706), (-43.647957, 0.103425), (-44.872963, 0.258631), (-44.183586, 0.200343), (-44.183582, 0.234123), (-44.872963, 0.292418), (-44.473587, 0.721852), (-44.473583, 0.03066), (-43.673172, 0.030662), (-43.673172, 0.721849), (-44.873013, 0.411247), (-44.183514, 0.469555), (-44.183517, 0.503332), (-44.87302, 0.44504), (-44.17297, 0.36296), (-44.17297, 1.05432), (-44.97357, 1.054323), (-44.973568, 0.36296), (-44.17297, 0.36296), (-44.973568, 0.36296), (-44.97357, 0.338266), (-44.17297, 0.338263), (-44.873013, 0.411247), (-44.87302, 0.44504), (-44.89765, 0.436106), (-44.891716, 0.404411), (-44.473587, 0.721852), (-43.673172, 0.721849), (-43.673176, 0.740602), (-44.47358, 0.740598), (-44.872963, 0.258631), (-44.872963, 0.292418), (-44.891655, 0.299245), (-44.897587, 0.267556), (-44.498806, 0.068857), (-43.647957, 0.068861), (-43.647953, 0.088706), (-44.498806, 0.088705), (-44.906776, 0.322592), (-44.93188, 0.29999), (-44.919285, 0.281375), (-44.898674, 0.305167), (-43.662434, 0.091459), (-44.484325, 0.091462), (-44.48432, 0.073516), (-43.662437, 0.07351), (-44.93195, 0.403672), (-44.906834, 0.381055), (-44.89874, 0.398496), (-44.919353, 0.422293)] (
                interpolation = "faceVarying"
            )
        }
    }

    def Scope "_materials"
    {
        def Material "M_TelevisionStand_12_0"
        {
            token outputs:surface.connect = </root/_materials/M_TelevisionStand_12_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.19852942, 0.19852942, 0.19852942)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_TelevisionStand_12_0/Image_Texture.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/HammeredMetal_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_TelevisionStand_12_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }
    }
}

