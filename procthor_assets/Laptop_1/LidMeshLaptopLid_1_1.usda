#usda 1.0
(
    defaultPrim = "root"
    doc = "Blender v4.1.0"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "root" (
    customData = {
        dictionary Blender = {
            bool generated = 1
        }
    }
)
{
    def Xform "LaptopLid_1"
    {
        matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def Mesh "LaptopLid_1" (
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.174307, 0.121931, -0.136678), (0.174307, 0.133626, 0.124218)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 78, 31, 28, 79, 31, 35, 32, 28, 42, 25, 24, 38, 36, 44, 43, 37, 37, 43, 42, 38, 48, 71, 70, 49, 50, 52, 53, 51, 52, 77, 76, 53, 54, 56, 57, 55, 56, 58, 59, 57, 58, 60, 61, 59, 60, 62, 63, 61, 72, 70, 71, 73, 79, 28, 70, 72, 77, 52, 31, 78, 28, 32, 49, 70, 52, 50, 35, 31, 44, 60, 58, 43, 43, 58, 56, 42, 38, 24, 68, 66, 25, 42, 56, 54, 44, 36, 62, 60, 38, 66, 64, 37, 37, 64, 62, 36, 30, 34, 51, 53, 75, 30, 53, 76, 57, 47, 27, 55, 59, 46, 47, 57, 61, 45, 46, 59, 63, 39, 45, 61, 65, 40, 39, 63, 67, 41, 40, 65, 69, 26, 41, 67, 71, 29, 74, 73, 48, 33, 29, 71, 74, 26, 69, 73, 27, 75, 76, 55, 77, 54, 55, 76, 54, 77, 78, 25, 25, 78, 79, 24, 24, 79, 72, 68, 66, 68, 72, 64, 65, 73, 69, 67, 62, 72, 73, 63, 65, 63, 73, 62, 64, 72, 120, 121, 82, 83, 83, 82, 84, 85, 89, 88, 80, 81, 86, 87, 90, 91, 87, 88, 89, 90, 92, 93, 114, 115, 94, 95, 97, 96, 96, 97, 118, 119, 98, 99, 101, 100, 100, 101, 103, 102, 102, 103, 105, 104, 104, 105, 107, 106, 116, 117, 115, 114, 121, 116, 114, 82, 119, 120, 83, 96, 82, 114, 93, 84, 96, 83, 85, 94, 91, 90, 102, 104, 90, 89, 100, 102, 88, 110, 112, 80, 81, 98, 100, 89, 91, 104, 106, 86, 88, 87, 108, 110, 87, 86, 106, 108, 30, 97, 95, 34, 75, 118, 97, 30, 101, 99, 27, 47, 103, 101, 47, 46, 105, 103, 46, 45, 107, 105, 45, 39, 109, 107, 39, 40, 111, 109, 40, 41, 113, 111, 41, 26, 115, 117, 74, 29, 92, 115, 29, 33, 74, 117, 113, 26, 27, 99, 118, 75, 119, 118, 99, 98, 98, 81, 120, 119, 81, 80, 121, 120, 80, 112, 116, 121, 110, 108, 116, 112, 109, 111, 113, 117, 106, 107, 117, 116, 109, 117, 107, 106, 116, 108, 4, 5, 7, 6, 8, 9, 11, 10, 12, 13, 15, 14, 49, 50, 51, 48, 32, 35, 50, 49, 48, 51, 34, 33, 93, 92, 95, 94, 84, 93, 94, 85, 92, 33, 34, 95, 16, 17, 19, 18, 20, 21, 23, 22, 122, 123, 125, 124, 131, 132, 133, 130, 126, 129, 132, 131, 130, 133, 128, 127, 137, 136, 139, 138, 134, 137, 138, 135, 136, 127, 128, 139]
            rel material:binding = </root/_materials/M_LaptopLid_1_0>
            normal3f[] normals = [(0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, -1, 6.297125e-7), (0, -1, 0), (0, -1, 3.1573464e-8), (0, -1, 6.938071e-9), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0.9832784, 0.18210848, -0.0000015379983), (1, 0.000003960308, 0), (1, 0.000003960308, 0), (0.9832775, 0.18211322, 0.0000010477379), (0.045227148, 0.99895275, -0.006923482), (0.039391756, 0.99918485, 0.008823595), (0.38257173, 0.9239258, 0), (0.38257173, 0.9239258, 0), (0.92382187, 0.38282287, -7.188063e-7), (0.92382187, 0.38282287, -7.188063e-7), (0.9832784, 0.18210848, -0.0000015379983), (0.9832775, 0.18211322, 0.0000010477379), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 4.0894741e-7), (0, -1, 0), (0, -1, 0), (0, -0.0002768665, 1), (6.143446e-7, 0.20767316, 0.9781983), (-0.0000013193325, 0.20852014, 0.978018), (0, -0.00027686649, 0.99999994), (6.143446e-7, 0.20767316, 0.9781983), (0, 0.3828631, 0.92380506), (0, 0.38286304, 0.92380506), (-0.0000013193325, 0.20852014, 0.978018), (-1.609583e-8, 0.9237974, 0.38288152), (0.000008985705, 0.99997777, 0.0066635013), (0.0045953463, 0.999964, 0.007127701), (0.0020996125, 0.9094992, 0.4157003), (0.000008985705, 0.99997777, 0.0066635013), (-0.000002138968, 0.9999934, -0.00361019), (0.0046031685, 0.9999788, -0.00461045), (0.0045953463, 0.999964, 0.007127701), (0, -1, 2.5555234e-8), (0, -1, 2.2902954e-8), (0, -1, 0), (0, -1, 0), (0, -1, 6.938071e-9), (0, -1, 3.1573464e-8), (0, -1, 2.2902954e-8), (0, -1, 2.5555234e-8), (0, -1, 4.0894741e-7), (0, -1, 0), (0, -1, 0), (0, -1, 6.297125e-7), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0.039391756, 0.99918485, 0.008823595), (0.000008985705, 0.99997777, 0.0066635013), (-1.609583e-8, 0.9237974, 0.38288152), (0, 0.9239255, 0.38257235), (0, 0.3828632, 0.923805), (0, 0.3828631, 0.92380506), (6.143446e-7, 0.20767316, 0.9781983), (-7.827766e-7, 0.18129112, 0.9834295), (4.1613387e-7, 0.18141544, -0.98340654), (0, 0, -1), (0, 0, -1), (0, 0.20718852, -0.9783011), (0, -0.00027686663, 0.99999994), (-7.827766e-7, 0.18129112, 0.9834295), (6.143446e-7, 0.20767316, 0.9781983), (0, -0.0002768665, 1), (0.039391756, 0.99918485, 0.008823595), (0.045227148, 0.99895275, -0.006923482), (-0.000002138968, 0.9999934, -0.00361019), (0.000008985705, 0.99997777, 0.0066635013), (4.1613387e-7, 0.18141544, -0.98340654), (0, 0.20718852, -0.9783011), (0, 0.38257065, -0.92392623), (0, 0.38257065, -0.92392623), (0, 0.9895522, -0.14417513), (0, 0.9895522, -0.14417513), (-0.000002138968, 0.9999934, -0.00361019), (0.045227148, 0.99895275, -0.006923482), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-0.0000013193325, 0.20852014, 0.978018), (-0.0000013095604, 0.20842057, 0.9780393), (0, -0.0002768666, 0.99999994), (0, -0.00027686649, 0.99999994), (0, 0.38286304, 0.92380506), (0, 0.38286313, 0.923805), (-0.0000013095604, 0.20842057, 0.9780393), (-0.0000013193325, 0.20852014, 0.978018), (0.0045953463, 0.999964, 0.007127701), (0.0036830222, 0.9999602, 0.00813478), (0.0016997263, 0.88760173, 0.4606085), (0.0020996125, 0.9094992, 0.4157003), (0.0046031685, 0.9999788, -0.00461045), (0.0028385797, 0.99996525, -0.007844791), (0.0036830222, 0.9999602, 0.00813478), (0.0045953463, 0.999964, 0.007127701), (0.0037186306, 0.98580503, -0.16785331), (0.0018594499, 0.98374456, -0.17956364), (0.0028385797, 0.99996525, -0.007844791), (0.0046031685, 0.9999788, -0.00461045), (1.2030694e-9, 0.20850898, -0.9780204), (0, 0.20839968, -0.97804374), (-2.2994039e-8, 0.38301307, -0.9237429), (-5.744831e-7, 0.38301304, -0.92374283), (0, 0, -1), (0, 0, -1), (0, 0.20839968, -0.97804374), (1.2030694e-9, 0.20850898, -0.9780204), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 4.0894741e-7), (0, -1, 8.1789483e-7), (0, -1, 0), (0, -1, 0), (0, -1, 8.1789483e-7), (0, -1, 4.0894741e-7), (0, -1, 6.297125e-7), (0, -1, 7.52688e-7), (0, -1, 7.52688e-7), (0, -1, 6.297125e-7), (0, -1, 6.938071e-9), (0, -1, 0), (0, -1, 0), (0, -1, 6.938071e-9), (0, -1, 2.5555234e-8), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-0.9832784, 0.1821086, -5.979091e-7), (-0.98327756, 0.18211332, -7.835024e-7), (-1, 0.000003960308, 0), (-1, 0.000003960308, 0), (-0.045227118, 0.99895275, -0.006923478), (-0.3825716, 0.92392594, 0), (-0.3825716, 0.92392594, 0), (-0.03939172, 0.9991849, 0.0088235615), (-0.92400503, 0.3823801, 0.0000016575359), (-0.98327756, 0.18211332, -7.835024e-7), (-0.9832784, 0.1821086, -5.979091e-7), (-0.92400503, 0.38238013, 0.0000016836314), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -0.0002768665, 1), (0, -0.00027686649, 0.99999994), (6.556221e-7, 0.20852013, 0.978018), (-0.0000012362682, 0.20767318, 0.9781983), (-0.0000012362682, 0.20767318, 0.9781983), (6.556221e-7, 0.20852013, 0.978018), (0, 0.38286304, 0.92380506), (0, 0.3828631, 0.92380506), (-0.0024030346, 0.9135916, 0.40662614), (-0.0021044638, 0.8847431, 0.46607456), (-0.0045869085, 0.99995565, 0.0082214475), (-0.005400431, 0.99996006, 0.007121931), (-0.005400431, 0.99996006, 0.007121931), (-0.0045869085, 0.99995565, 0.0082214475), (-0.004503509, 0.9999764, -0.0052062124), (-0.005299746, 0.99997944, -0.0036144624), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-0.03939172, 0.9991849, 0.0088235615), (0, 0.9239255, 0.38257235), (-0.0024030346, 0.9135916, 0.40662614), (-0.005400431, 0.99996006, 0.007121931), (0, 0.3828632, 0.923805), (3.565451e-7, 0.18129112, 0.9834295), (-0.0000012362682, 0.20767318, 0.9781983), (0, 0.3828631, 0.92380506), (1.3038516e-8, 0.18141544, -0.9834065), (1.0850388e-9, 0.20718852, -0.9783011), (0, 0, -1), (0, 0, -1), (0, -0.00027686663, 0.99999994), (0, -0.0002768665, 1), (-0.0000012362682, 0.20767318, 0.9781983), (3.565451e-7, 0.18129112, 0.9834295), (-0.03939172, 0.9991849, 0.0088235615), (-0.005400431, 0.99996006, 0.007121931), (-0.005299746, 0.99997944, -0.0036144624), (-0.045227118, 0.99895275, -0.006923478), (1.3038516e-8, 0.18141544, -0.9834065), (0, 0.38257065, -0.92392623), (0, 0.38257065, -0.92392623), (1.0850388e-9, 0.20718852, -0.9783011), (0, 0.9895522, -0.14417513), (-0.045227118, 0.99895275, -0.006923478), (-0.005299746, 0.99997944, -0.0036144624), (0, 0.9895522, -0.14417513), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (6.556221e-7, 0.20852013, 0.978018), (0, -0.00027686649, 0.99999994), (0, -0.0002768666, 0.99999994), (-0.0000013095604, 0.20842057, 0.9780393), (0, 0.38286304, 0.92380506), (6.556221e-7, 0.20852013, 0.978018), (-0.0000013095604, 0.20842057, 0.9780393), (0, 0.38286313, 0.923805), (-0.0045869085, 0.99995565, 0.0082214475), (-0.0021044638, 0.8847431, 0.46607456), (0.0016997263, 0.88760173, 0.4606085), (0.0036830222, 0.9999602, 0.00813478), (-0.004503509, 0.9999764, -0.0052062124), (-0.0045869085, 0.99995565, 0.0082214475), (0.0036830222, 0.9999602, 0.00813478), (0.0028385797, 0.99996525, -0.007844791), (0, 0.9815417, -0.19124795), (-0.004503509, 0.9999764, -0.0052062124), (0.0028385797, 0.99996525, -0.007844791), (0.0018594499, 0.98374456, -0.17956364), (0, 0.20850898, -0.9780204), (2.3009276e-8, 0.38301304, -0.92374283), (-2.2994039e-8, 0.38301307, -0.9237429), (0, 0.20839968, -0.97804374), (0, 0, -1), (0, 0.20850898, -0.9780204), (0, 0.20839968, -0.97804374), (0, 0, -1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (0, 0, -0.99999994), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 0, 0.99999994), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0)] (
                interpolation = "faceVarying"
            )
            point3f[] points = [(-0.000632, 0.124327, -0.133377), (0.000632, 0.124327, -0.133377), (-0.000632, 0.125592, -0.133377), (0.000632, 0.125592, -0.133377), (-0.000632, 0.124327, -0.133377), (0.000632, 0.124327, -0.133377), (-0.000632, 0.125592, -0.133377), (0.000632, 0.125592, -0.133377), (-0.000632, 0.124327, -0.133377), (0.000632, 0.124327, -0.133377), (-0.000632, 0.125592, -0.133377), (0.000632, 0.125592, -0.133377), (-0.000632, 0.124327, -0.133377), (0.000632, 0.124327, -0.133377), (-0.000632, 0.125592, -0.133377), (0.000632, 0.125592, -0.133377), (-0.000632, 0.124327, -0.133377), (0.000632, 0.124327, -0.133377), (-0.000632, 0.125592, -0.133377), (0.000632, 0.125592, -0.133377), (-0.000632, 0.124327, -0.133377), (0.000632, 0.124327, -0.133377), (-0.000632, 0.125592, -0.133377), (0.000632, 0.125592, -0.133377), (0.174307, 0.121931, -0.136678), (0.174307, 0.121931, 0.124217), (-0, 0.121931, -0.136678), (-0, 0.121931, 0.124217), (0.149737, 0.121931, -0.10513), (-0, 0.121931, -0.10513), (-0, 0.121931, 0.100556), (0.149737, 0.121931, 0.100556), (0.149737, 0.126351, -0.10513), (-0, 0.126351, -0.10513), (-0, 0.126351, 0.100556), (0.149737, 0.126351, 0.100556), (0.1689, 0.130942, -0.12423), (0.172723, 0.129359, -0.135095), (0.174307, 0.125536, -0.136678), (-0, 0.131476, -0.12423), (-0, 0.129359, -0.135095), (-0, 0.125536, -0.136678), (0.174307, 0.125537, 0.124218), (0.172723, 0.129359, 0.122634), (0.1689, 0.130942, 0.118811), (-0, 0.131476, 0.118811), (-0, 0.129359, 0.122634), (-0, 0.125537, 0.124218), (0.065871, 0.126351, -0.10513), (0.107049, 0.126351, -0.10513), (0.107049, 0.126351, 0.100556), (0.065871, 0.126351, 0.100556), (0.107049, 0.121931, 0.100556), (0.065871, 0.121931, 0.100556), (0.115029, 0.121931, 0.124217), (0.070781, 0.121931, 0.124217), (0.115029, 0.125537, 0.124218), (0.070781, 0.125537, 0.124218), (0.115029, 0.129359, 0.122634), (0.070781, 0.129359, 0.122634), (0.115029, 0.130942, 0.118811), (0.070781, 0.130942, 0.118811), (0.115029, 0.130942, -0.12423), (0.070781, 0.130942, -0.12423), (0.115029, 0.129359, -0.135095), (0.070781, 0.129359, -0.135095), (0.115029, 0.125536, -0.136678), (0.070781, 0.125536, -0.136678), (0.115029, 0.121931, -0.136678), (0.070781, 0.121931, -0.136678), (0.107049, 0.121931, -0.10513), (0.065871, 0.121931, -0.10513), (0.115029, 0.121931, -0.12423), (0.070781, 0.121931, -0.12423), (-0, 0.121931, -0.12423), (-0, 0.121931, 0.122072), (0.070781, 0.121931, 0.122072), (0.115029, 0.121931, 0.122072), (0.171875, 0.121931, 0.122072), (0.171875, 0.121931, -0.12423), (-0.174307, 0.121931, -0.136678), (-0.174307, 0.121931, 0.124217), (-0.149737, 0.121931, -0.10513), (-0.149737, 0.121931, 0.100556), (-0.149737, 0.126351, -0.10513), (-0.149737, 0.126351, 0.100556), (-0.1689, 0.130942, -0.12423), (-0.172723, 0.129359, -0.135095), (-0.174307, 0.125536, -0.136678), (-0.174307, 0.125537, 0.124218), (-0.172723, 0.129359, 0.122634), (-0.1689, 0.130942, 0.118811), (-0.065871, 0.126351, -0.10513), (-0.107049, 0.126351, -0.10513), (-0.107049, 0.126351, 0.100556), (-0.065871, 0.126351, 0.100556), (-0.107049, 0.121931, 0.100556), (-0.065871, 0.121931, 0.100556), (-0.115029, 0.121931, 0.124217), (-0.070781, 0.121931, 0.124217), (-0.115029, 0.125537, 0.124218), (-0.070781, 0.125537, 0.124218), (-0.115029, 0.129359, 0.122634), (-0.070781, 0.129359, 0.122634), (-0.115029, 0.130942, 0.118811), (-0.070781, 0.131476, 0.118811), (-0.115029, 0.130942, -0.12423), (-0.070781, 0.131476, -0.12423), (-0.115029, 0.129359, -0.135095), (-0.070781, 0.129359, -0.135095), (-0.115029, 0.125536, -0.136678), (-0.070781, 0.125536, -0.136678), (-0.115029, 0.121931, -0.136678), (-0.070781, 0.121931, -0.136678), (-0.107049, 0.121931, -0.10513), (-0.065871, 0.121931, -0.10513), (-0.115029, 0.121931, -0.12423), (-0.070781, 0.121931, -0.12423), (-0.070781, 0.121931, 0.122072), (-0.115029, 0.121931, 0.122072), (-0.171875, 0.121931, 0.122072), (-0.171875, 0.121931, -0.12423), (0.047903, 0.133626, -0.057444), (-0.047903, 0.133626, -0.057444), (0.047903, 0.133626, 0.043025), (-0.047903, 0.133626, 0.043025), (0.149737, 0.126151, -0.10513), (-0, 0.126151, -0.10513), (-0, 0.126151, 0.100556), (0.149737, 0.126151, 0.100556), (0.065871, 0.126151, -0.10513), (0.107049, 0.126151, -0.10513), (0.107049, 0.126151, 0.100556), (0.065871, 0.126151, 0.100556), (-0.149737, 0.126151, -0.10513), (-0.149737, 0.126151, 0.100556), (-0.065871, 0.126151, -0.10513), (-0.107049, 0.126151, -0.10513), (-0.107049, 0.126151, 0.100556), (-0.065871, 0.126151, 0.100556)]
            bool[] primvars:sharp_face = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
                interpolation = "uniform"
            )
            texCoord2f[] primvars:UVMap = [(-118.32466, -19.673967), (-117.32466, -19.673967), (-117.32466, -18.673967), (-118.32466, -18.673967), (-117.844666, -0.216102), (-117.9077, -0.151241), (-118.5103, -0.151249), (-118.566246, -0.216105), (-117.57392, 0.438622), (-117.56098, 0.438617), (-117.56098, 1.040359), (-117.57392, 1.040367), (-117.534775, 1.099479), (-117.545555, 1.09948), (-117.54554, 0.319378), (-117.534775, 0.319384), (-117.4247, -0.210906), (-118.138084, -0.210901), (-118.1493, -0.222117), (-117.392815, -0.222129), (-117.52332, 0.324118), (-117.52334, 1.094739), (-117.534775, 1.099479), (-117.534775, 0.319384), (-117.54301, 0.054269), (-117.555954, 0.054269), (-117.555954, -0.066351), (-117.54301, -0.066333), (-117.54176, -0.066263), (-117.52881, -0.066263), (-117.52881, 0.054328), (-117.54176, 0.054327), (-117.9077, -0.026185), (-117.84465, -0.049567), (-117.844666, 0.080065), (-117.907684, 0.094447), (-118.006485, -0.056467), (-117.9957, -0.056457), (-117.9957, 0.075835), (-118.006485, 0.075836), (-117.9957, -0.056457), (-117.98427, -0.056465), (-117.98425, 0.075819), (-117.9957, 0.075835), (-118.1493, -0.052778), (-118.138084, -0.052779), (-118.138084, 0.0771), (-118.1493, 0.0771), (-118.138084, -0.052779), (-117.4247, -0.052784), (-117.4247, 0.077095), (-118.138084, 0.0771), (-118.56624, -0.04956), (-118.510284, -0.026188), (-118.5103, 0.094449), (-118.56624, 0.080062), (-118.566246, -0.216105), (-118.5103, -0.151249), (-118.510284, -0.026188), (-118.56624, -0.04956), (-117.84465, -0.049567), (-117.9077, -0.026185), (-117.9077, -0.151241), (-117.844666, -0.216102), (-117.55594, -0.191393), (-117.54301, -0.191389), (-117.54301, -0.066333), (-117.555954, -0.066351), (-117.52881, -0.066263), (-117.54176, -0.066263), (-117.54176, -0.191273), (-117.52881, -0.191268), (-118.138084, -0.210901), (-118.138084, -0.052779), (-118.1493, -0.052778), (-118.1493, -0.222117), (-117.98425, -0.228951), (-117.98427, -0.056465), (-117.9957, -0.056457), (-117.9957, -0.233686), (-117.61294, 0.531137), (-117.60217, 0.531126), (-117.60218, 0.708228), (-117.612946, 0.708229), (-118.006485, -0.233686), (-117.9957, -0.233686), (-117.9957, -0.056457), (-118.006485, -0.056467), (-118.138084, -0.210901), (-117.4247, -0.210906), (-117.4247, -0.052784), (-118.138084, -0.052779), (-117.61294, 0.531137), (-117.612946, 0.708229), (-117.62438, 0.708227), (-117.62438, 0.53586), (-117.392815, -0.222129), (-117.3928, -0.052785), (-117.4247, -0.052784), (-117.4247, -0.210906), (-117.52881, 0.247228), (-117.54178, 0.247232), (-117.54176, 0.054327), (-117.52881, 0.054328), (-117.84465, 0.28743), (-117.9077, 0.287444), (-117.907684, 0.094447), (-117.844666, 0.080065), (-117.9957, 0.075835), (-117.9957, 0.287443), (-118.00648, 0.287434), (-118.006485, 0.075836), (-117.98425, 0.075819), (-117.98425, 0.287436), (-117.9957, 0.287443), (-117.9957, 0.075835), (-118.138084, 0.0771), (-118.138084, 0.284848), (-118.1493, 0.284848), (-118.1493, 0.0771), (-117.4247, 0.077095), (-117.424706, 0.284851), (-118.138084, 0.284848), (-118.138084, 0.0771), (-117.3928, 0.077094), (-117.3928, 0.28485), (-117.424706, 0.284851), (-117.4247, 0.077095), (-117.595215, 0.47552), (-117.595215, 0.687015), (-117.60665, 0.68702), (-117.60665, 0.475525), (-117.584435, 0.475517), (-117.58444, 0.68702), (-117.595215, 0.687015), (-117.595215, 0.47552), (-118.5103, 0.094449), (-118.510284, 0.287428), (-118.566246, 0.287436), (-118.56624, 0.080062), (-117.54301, 0.054269), (-117.543, 0.247228), (-117.555954, 0.247233), (-117.555954, 0.054269), (-118.566246, 0.287436), (-118.60272, 0.287443), (-118.60272, 0.080077), (-118.56624, 0.080062), (-117.83838, 0.287445), (-117.84465, 0.28743), (-117.844666, 0.080065), (-117.83838, 0.080072), (-117.84465, -0.049567), (-117.83838, -0.049566), (-117.83838, 0.080072), (-117.844666, 0.080065), (-117.83838, -0.049566), (-117.84465, -0.049567), (-117.844666, -0.216102), (-117.83837, -0.223225), (-117.83837, -0.223225), (-117.844666, -0.216102), (-118.566246, -0.216105), (-118.60271, -0.223228), (-118.60271, -0.223228), (-118.566246, -0.216105), (-118.56624, -0.04956), (-118.60271, -0.049569), (-117.69422, 0.599725), (-117.70487, 0.599723), (-117.704865, 0.562992), (-117.682945, 0.595054), (-117.70336, 0.567775), (-117.725075, 0.59957), (-117.72508, 0.563152), (-117.71453, 0.563136), (-117.663246, 0.542589), (-117.63685, 0.542588), (-117.63683, 0.672166), (-117.663246, 0.672167), (-117.70336, 0.567775), (-117.6987, 0.599573), (-117.725075, 0.59957), (-117.67828, 0.562997), (-117.682945, 0.595054), (-117.704865, 0.562992), (-117.844666, 0.79098), (-118.566246, 0.790986), (-118.510284, 0.726114), (-117.9077, 0.72613), (-117.58674, 1.040538), (-117.58673, 0.438452), (-117.5738, 0.438451), (-117.5738, 1.040527), (-117.55251, 0.394162), (-117.55251, 1.175182), (-117.563286, 1.175177), (-117.563286, 0.394167), (-117.424706, 0.780608), (-117.3928, 0.791823), (-118.1493, 0.791821), (-118.138084, 0.780605), (-117.54107, 1.170425), (-117.55251, 1.175182), (-117.55251, 0.394162), (-117.54107, 0.398912), (-117.54301, 0.440186), (-117.54301, 0.560798), (-117.55594, 0.560795), (-117.555954, 0.440193), (-117.54176, 0.560723), (-117.54178, 0.440127), (-117.52881, 0.440123), (-117.52881, 0.560723), (-117.907684, 0.60106), (-117.9077, 0.480432), (-117.844666, 0.494818), (-117.84465, 0.624442), (-118.00648, 0.631335), (-118.006485, 0.49905), (-117.99568, 0.49905), (-117.9957, 0.631352), (-117.9957, 0.631352), (-117.99568, 0.49905), (-117.98425, 0.499057), (-117.98425, 0.631336), (-118.1493, 0.622482), (-118.1493, 0.492604), (-118.138084, 0.492604), (-118.138084, 0.622482), (-118.138084, 0.622482), (-118.138084, 0.492604), (-117.424706, 0.492607), (-117.4247, 0.622481), (-118.566246, 0.624447), (-118.56624, 0.494801), (-118.510284, 0.480426), (-118.510284, 0.601066), (-118.566246, 0.790986), (-118.566246, 0.624447), (-118.510284, 0.601066), (-118.510284, 0.726114), (-117.84465, 0.624442), (-117.844666, 0.79098), (-117.9077, 0.72613), (-117.907684, 0.60106), (-117.555954, 0.68585), (-117.55594, 0.560795), (-117.54301, 0.560798), (-117.543, 0.685846), (-117.52881, 0.560723), (-117.52881, 0.685733), (-117.54176, 0.685718), (-117.54176, 0.560723), (-118.138084, 0.780605), (-118.1493, 0.791821), (-118.1493, 0.622482), (-118.138084, 0.622482), (-117.98425, 0.803828), (-117.99568, 0.808563), (-117.9957, 0.631352), (-117.98425, 0.631336), (-117.63069, 0.708324), (-117.630684, 0.531039), (-117.6199, 0.531041), (-117.6199, 0.708319), (-118.00648, 0.808564), (-118.00648, 0.631335), (-117.9957, 0.631352), (-117.99568, 0.808563), (-118.138084, 0.780605), (-118.138084, 0.622482), (-117.4247, 0.622481), (-117.424706, 0.780608), (-117.63069, 0.708324), (-117.64211, 0.703585), (-117.64211, 0.531038), (-117.630684, 0.531039), (-117.3928, 0.791823), (-117.424706, 0.780608), (-117.4247, 0.622481), (-117.3928, 0.622484), (-117.52881, 0.247228), (-117.52881, 0.440123), (-117.54178, 0.440127), (-117.54178, 0.247232), (-117.84465, 0.28743), (-117.844666, 0.494818), (-117.9077, 0.480432), (-117.9077, 0.287444), (-117.99568, 0.49905), (-118.006485, 0.49905), (-118.00648, 0.287434), (-117.9957, 0.287443), (-117.98425, 0.499057), (-117.99568, 0.49905), (-117.9957, 0.287443), (-117.98425, 0.287436), (-118.138084, 0.492604), (-118.1493, 0.492604), (-118.1493, 0.284848), (-118.138084, 0.284848), (-117.424706, 0.492607), (-118.138084, 0.492604), (-118.138084, 0.284848), (-117.424706, 0.284851), (-117.3928, 0.492606), (-117.424706, 0.492607), (-117.424706, 0.284851), (-117.3928, 0.28485), (-117.59523, 0.898518), (-117.606636, 0.898504), (-117.60665, 0.68702), (-117.595215, 0.687015), (-117.58444, 0.898509), (-117.59523, 0.898518), (-117.595215, 0.687015), (-117.58444, 0.68702), (-118.510284, 0.480426), (-118.56624, 0.494801), (-118.566246, 0.287436), (-118.510284, 0.287428), (-117.54301, 0.440186), (-117.555954, 0.440193), (-117.555954, 0.247233), (-117.543, 0.247228), (-118.566246, 0.287436), (-118.56624, 0.494801), (-118.60272, 0.494816), (-118.60272, 0.287443), (-117.83838, 0.287445), (-117.83837, 0.494811), (-117.844666, 0.494818), (-117.84465, 0.28743), (-117.84465, 0.624442), (-117.844666, 0.494818), (-117.83837, 0.494811), (-117.83838, 0.624443), (-117.83838, 0.624443), (-117.83838, 0.798115), (-117.844666, 0.79098), (-117.84465, 0.624442), (-117.83838, 0.798115), (-118.60271, 0.798103), (-118.566246, 0.790986), (-117.844666, 0.79098), (-118.60271, 0.798103), (-118.60271, 0.624444), (-118.566246, 0.624447), (-118.566246, 0.790986), (-117.734886, 0.562998), (-117.72361, 0.56767), (-117.74552, 0.599717), (-117.745514, 0.562993), (-117.74525, 0.59491), (-117.75641, 0.599529), (-117.766914, 0.599526), (-117.766914, 0.563189), (-117.68324, 0.672313), (-117.684814, 0.542447), (-117.6568, 0.542447), (-117.6568, 0.672313), (-117.74525, 0.59491), (-117.766914, 0.563189), (-117.73907, 0.563188), (-117.71893, 0.599712), (-117.74552, 0.599717), (-117.72361, 0.56767), (-85.464355, -19.673967), (-84.464355, -19.673967), (-84.464355, -18.673967), (-85.464355, -18.673967), (-55.218258, -19.673967), (-54.218258, -19.673967), (-54.218258, -18.673967), (-55.218258, -18.673967), (-25.729992, -19.673967), (-24.729992, -19.673967), (-24.729992, -18.673967), (-25.729992, -18.673967), (-25.408754, 0.314368), (-25.408756, 0.716097), (-25.489182, 0.716097), (-25.489183, 0.314367), (-25.32538, 0.314367), (-25.32538, 0.716097), (-25.408756, 0.716097), (-25.408754, 0.314368), (-25.489183, 0.314367), (-25.489182, 0.716097), (-25.617836, 0.716097), (-25.617836, 0.314368), (-25.826916, 0.314368), (-25.74649, 0.314367), (-25.746489, 0.716097), (-25.826918, 0.716097), (-25.91029, 0.314368), (-25.826916, 0.314368), (-25.826918, 0.716097), (-25.910292, 0.716097), (-25.74649, 0.314367), (-25.617836, 0.314368), (-25.617836, 0.716097), (-25.746489, 0.716097), (0, -19.673967), (1, -19.673967), (1, -18.673967), (0, -18.673967), (0, -19.673967), (1, -19.673967), (1, -18.673967), (0, -18.673967), (-1.59999, 0.754817), (-1.40001, 0.754818), (-1.40001, 0.96453), (-1.59999, 0.964531), (9.499291, 0.857456), (8.999292, 0.857457), (8.999292, 0.719955), (9.499292, 0.719955), (9.499291, 1), (8.999292, 0.999997), (8.999292, 0.857457), (9.499291, 0.857456), (9.499292, 0.719955), (8.999292, 0.719955), (8.999292, 0.499999), (9.499291, 0.499999), (9.499291, 0.142541), (9.49929, 0.280046), (8.999292, 0.280044), (8.999292, 0.142541), (9.499292, 0.000001), (9.499291, 0.142541), (8.999292, 0.142541), (8.999294, -0.000001), (9.49929, 0.280046), (9.499291, 0.499999), (8.999292, 0.499999), (8.999292, 0.280044)] (
                interpolation = "faceVarying"
            )
            uniform token subdivisionScheme = "none"
            uniform token subsetFamily:materialBind:familyType = "nonOverlapping"

            def GeomSubset "M_LaptopLid_1_0" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92]
                rel material:binding = </root/_materials/M_LaptopLid_1_0>
            }

            def GeomSubset "M_LaptopLid_1_1" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [93]
                rel material:binding = </root/_materials/M_LaptopLid_1_1>
            }

            def GeomSubset "M_LaptopLid_1_2" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [94]
                rel material:binding = </root/_materials/M_LaptopLid_1_2>
            }

            def GeomSubset "M_LaptopLid_1_3" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [95, 96, 97, 98, 99, 100, 101]
                rel material:binding = </root/_materials/M_LaptopLid_1_3>
            }

            def GeomSubset "M_LaptopLid_1_4" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [102, 103, 104]
                rel material:binding = </root/_materials/M_LaptopLid_1_4>
            }

            def GeomSubset "M_LaptopLid_1_5" (
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                uniform token elementType = "face"
                uniform token familyName = "materialBind"
                int[] indices = [105, 106, 107, 108, 109, 110]
                rel material:binding = </root/_materials/M_LaptopLid_1_5>
            }
        }
    }

    def Scope "_materials"
    {
        def Material "M_LaptopLid_1_0"
        {
            token outputs:surface.connect = </root/_materials/M_LaptopLid_1_0/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_LaptopLid_1_0/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_LaptopLid_1_0/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_LaptopLid_1_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_LaptopLid_1_0/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_LaptopLid_1_1"
        {
            token outputs:surface.connect = </root/_materials/M_LaptopLid_1_1/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_LaptopLid_1_1/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float3 inputs:normal.connect = </root/_materials/M_LaptopLid_1_1/Image_Texture_001.outputs:rgb>
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_LaptopLid_1_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }

            def Shader "Image_Texture_001"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedIron_Normal.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_LaptopLid_1_1/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }
        }

        def Material "M_LaptopLid_1_2"
        {
            token outputs:surface.connect = </root/_materials/M_LaptopLid_1_2/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_LaptopLid_1_2/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/BrushedAluminum_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_LaptopLid_1_2/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_LaptopLid_1_3"
        {
            token outputs:surface.connect = </root/_materials/M_LaptopLid_1_3/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (0.00560449, 0.00560449, 0.00560449)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }

        def Material "M_LaptopLid_1_4"
        {
            token outputs:surface.connect = </root/_materials/M_LaptopLid_1_4/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor.connect = </root/_materials/M_LaptopLid_1_4/Image_Texture.outputs:rgb>
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }

            def Shader "Image_Texture"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @./textures/Laptop_Detail_AlbedoTransparency.png@
                token inputs:sourceColorSpace = "sRGB"
                float2 inputs:st.connect = </root/_materials/M_LaptopLid_1_4/uvmap.outputs:result>
                token inputs:wrapS = "repeat"
                token inputs:wrapT = "repeat"
                float3 outputs:rgb
            }

            def Shader "uvmap"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname = "UVMap"
                float2 outputs:result
            }
        }

        def Material "M_LaptopLid_1_5"
        {
            token outputs:surface.connect = </root/_materials/M_LaptopLid_1_5/Principled_BSDF.outputs:surface>

            def Shader "Principled_BSDF"
            {
                uniform token info:id = "UsdPreviewSurface"
                float inputs:clearcoat = 0
                float inputs:clearcoatRoughness = 0.03
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                float inputs:opacity = 1
                float inputs:roughness = 0.8585787
                float inputs:specular = 0.2
                token outputs:surface
            }
        }
    }
}

