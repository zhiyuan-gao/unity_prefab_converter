#usda 1.0
(
    defaultPrim = "LidMeshLaptopLid_6_0_GeomSubset_1"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "LidMeshLaptopLid_6_0_GeomSubset_1"
{
    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]

    def Mesh "LidMeshLaptopLid_6_0_GeomSubset_1" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        uniform bool doubleSided = 1
        float3[] extent = [(-0.174084, 0.112149, -0.146047), (0.174084, 0.129499, -0.136012)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 2, 0, 17, 18, 16, 13, 5, 4, 15, 6, 7, 8, 12, 13, 11, 14, 15, 16, 10, 8, 19, 9, 11, 18, 11, 10, 11, 12, 10, 15, 5, 12, 26, 17, 16, 20, 13, 4, 6, 25, 21, 24, 8, 13, 14, 23, 25, 22, 16, 8, 9, 27, 23, 26, 23, 27, 24, 23, 22, 20, 25, 24, 1, 3, 2, 17, 19, 18, 13, 12, 5, 15, 14, 6, 8, 10, 12, 11, 9, 14, 16, 18, 10, 19, 17, 9, 18, 19, 11, 11, 15, 12, 15, 7, 5, 26, 27, 17, 20, 24, 13, 6, 14, 25, 24, 22, 8, 14, 9, 23, 22, 26, 16, 9, 17, 27, 26, 22, 23, 24, 25, 23, 20, 21, 25]
        rel material:binding = </_materials/M_LaptopLid_6_1>
        normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0.00012491997, 0.9752741, -0.2209991), (-7.2472167e-10, 0.9752997, 0.22088571), (0, 0.9753013, 0.22087856), (0.005193049, 0.13932583, 0.990233), (0, 0, 1), (0, 0, 1), (-1.0170909e-8, 0.1393305, -0.99024594), (0, 0, -1), (0, 0, -1), (0.00045288666, 0.70546436, 0.7087453), (0, 0.13937375, 0.9902399), (0.005193049, 0.13932583, 0.990233), (-0.0000026501043, 0.7053481, -0.70886105), (-0.11624771, 0.2518785, -0.9607516), (-1.0170909e-8, 0.1393305, -0.99024594), (0, 0.9753013, 0.22087856), (0, 0.7054542, 0.70875543), (0.00045288666, 0.70546436, 0.7087453), (0, 0.97527015, -0.22101623), (-0.0276443, 0.724426, -0.68879807), (-0.0000026501043, 0.7053481, -0.70886105), (-1, 0, 0), (-1, -0.000005536514, 0), (-1, 0.0000051533516, 0), (-1, -0.000005536514, 0), (-1, 8.2900607e-7, 0), (-1, 0.0000051533516, 0), (-1, -0.000003588638, 0), (-1, 0, 0), (-1, 8.2900607e-7, 0), (0, 0.9752997, 0.22088571), (0.00012491997, 0.9752741, -0.2209991), (0, 0.9753013, 0.22087856), (0, 0, 1), (0.005193049, 0.13932583, 0.990233), (0, 0, 1), (0, 0, -1), (0, 0.1393305, -0.99024594), (0, 0, -1), (1.0155057e-8, 0.13937375, 0.99023986), (0.00045288666, 0.70546436, 0.7087453), (0.005193049, 0.13932583, 0.990233), (-0.11624771, 0.2518785, -0.9607516), (0, 0.7053481, -0.70886105), (0, 0.1393305, -0.99024594), (2.410208e-9, 0.7054542, 0.70875543), (0, 0.9753013, 0.22087856), (0.00045288666, 0.70546436, 0.7087453), (-0.0276443, 0.724426, -0.68879807), (3.1946183e-7, 0.97527015, -0.22101623), (0, 0.7053481, -0.70886105), (1, 0, 0), (1, -0.0000016749099, 0), (1, 0, 0), (1, 0.0000031574227, 0), (1, -0.0000016749099, 0), (1, 0.000010306703, 0), (1, 0, 0), (1, -0.000001794319, 0), (1, 0.0000031574227, 0), (0, 0, -1), (0, 0, -0.99999994), (0, 0, -1), (0.00012491997, 0.9752741, -0.2209991), (0, 0.97527015, -0.22101623), (-7.2472167e-10, 0.9752997, 0.22088571), (0.005193049, 0.13932583, 0.990233), (0, 0.13937375, 0.9902399), (0, 0, 1), (-1.0170909e-8, 0.1393305, -0.99024594), (-0.11624771, 0.2518785, -0.9607516), (0, 0, -1), (0.00045288666, 0.70546436, 0.7087453), (0, 0.7054542, 0.70875543), (0, 0.13937375, 0.9902399), (-0.0000026501043, 0.7053481, -0.70886105), (-0.0276443, 0.724426, -0.68879807), (-0.11624771, 0.2518785, -0.9607516), (0, 0.9753013, 0.22087856), (-7.2472167e-10, 0.9752997, 0.22088571), (0, 0.7054542, 0.70875543), (0, 0.97527015, -0.22101623), (0.00012491997, 0.9752741, -0.2209991), (-0.0276443, 0.724426, -0.68879807), (-1, 0, 0), (-1, 0, 0), (-1, -0.000005536514, 0), (-1, -0.000005536514, 0), (-1, -0.000003588638, 0), (-1, 8.2900607e-7, 0), (-1, -0.000003588638, 0), (-1, 0, 0), (-1, 0, 0), (0, 0.9752997, 0.22088571), (3.1946183e-7, 0.97527015, -0.22101623), (0.00012491997, 0.9752741, -0.2209991), (0, 0, 1), (1.0155057e-8, 0.13937375, 0.99023986), (0.005193049, 0.13932583, 0.990233), (0, 0, -1), (-0.11624771, 0.2518785, -0.9607516), (0, 0.1393305, -0.99024594), (1.0155057e-8, 0.13937375, 0.99023986), (2.410208e-9, 0.7054542, 0.70875543), (0.00045288666, 0.70546436, 0.7087453), (-0.11624771, 0.2518785, -0.9607516), (-0.0276443, 0.724426, -0.68879807), (0, 0.7053481, -0.70886105), (2.410208e-9, 0.7054542, 0.70875543), (0, 0.9752997, 0.22088571), (0, 0.9753013, 0.22087856), (-0.0276443, 0.724426, -0.68879807), (0.00012491997, 0.9752741, -0.2209991), (3.1946183e-7, 0.97527015, -0.22101623), (1, 0, 0), (1, 0.000010306703, 0), (1, -0.0000016749099, 0), (1, 0.0000031574227, 0), (1, -0.000001794319, 0), (1, -0.0000016749099, 0), (1, 0, 0), (1, 0, 0), (1, -0.000001794319, 0)] (
            interpolation = "faceVarying"
        )
        point3f[] points = [(-0.000632, 0.113413, -0.141782), (0.000632, 0.113413, -0.141782), (-0.000632, 0.112149, -0.141782), (0.000632, 0.112149, -0.141782), (0, 0.117757, -0.136012), (-0.174084, 0.117757, -0.136012), (0, 0.117757, -0.146047), (-0.174084, 0.117757, -0.146047), (0, 0.128393, -0.137476), (0, 0.128393, -0.144582), (-0.174084, 0.128393, -0.137476), (-0.174084, 0.128393, -0.144582), (-0.174084, 0.125791, -0.136012), (0, 0.125791, -0.136012), (0, 0.125791, -0.146047), (-0.174084, 0.125791, -0.146047), (0, 0.129499, -0.139697), (0, 0.129499, -0.142363), (-0.174084, 0.129499, -0.139697), (-0.174084, 0.129499, -0.142363), (0.174084, 0.117757, -0.136012), (0.174084, 0.117757, -0.146047), (0.174084, 0.128393, -0.137476), (0.174084, 0.128393, -0.144582), (0.174084, 0.125791, -0.136012), (0.174084, 0.125791, -0.146047), (0.174084, 0.129499, -0.139697), (0.174084, 0.129499, -0.142363)]
        texCoord2f[] primvars:UVMap = [(-84.464355, -19.673967), (-85.464355, -18.673967), (-85.464355, -19.673967), (-85.42881, 0.500001), (-85.436905, 1.028464), (-85.43691, 0.500001), (-85.392456, 0.500008), (-85.41641, 1.019068), (-85.41641, 0.500008), (-85.370735, 1.018979), (-85.34679, 0.500007), (-85.34679, 1.018979), (-85.38469, 0.499998), (-85.392456, 1.019068), (-85.392456, 0.500008), (-85.37851, 1.018979), (-85.370735, 0.499998), (-85.370735, 1.018979), (-85.43691, 0.500001), (-85.44364, 1.028466), (-85.44364, 0.499999), (-85.42881, 1.028464), (-85.42208, 0.5), (-85.42208, 1.028467), (-85.32949, 0.001584), (-85.315186, 0.004831), (-85.336, 0.004824), (-85.315186, 0.004831), (-85.3403, 0.012455), (-85.336, 0.004824), (-85.3109, 0.012453), (-85.340294, 0.035988), (-85.3403, 0.012455), (-85.436905, -0.028466), (-85.42881, 0.500001), (-85.43691, 0.500001), (-85.41641, -0.019062), (-85.392456, 0.500008), (-85.41641, 0.500008), (-85.34679, 0.500007), (-85.370735, -0.01898), (-85.34679, -0.01898), (-85.392456, -0.019062), (-85.38469, 0.499998), (-85.392456, 0.500008), (-85.370735, 0.499998), (-85.37851, -0.01898), (-85.370735, -0.01898), (-85.44364, -0.028468), (-85.43691, 0.500001), (-85.44364, 0.499999), (-85.42208, 0.5), (-85.42881, -0.028466), (-85.42208, -0.028467), (-85.28558, 0.001594), (-85.2999, 0.004839), (-85.293396, 0.001594), (-85.274796, 0.012452), (-85.2999, 0.004839), (-85.27908, 0.00483), (-85.274796, 0.035978), (-85.3042, 0.012454), (-85.274796, 0.012452), (-84.464355, -19.673967), (-84.464355, -18.673967), (-85.464355, -18.673967), (-85.42881, 0.500001), (-85.42881, 1.028464), (-85.436905, 1.028464), (-85.392456, 0.500008), (-85.392456, 1.019068), (-85.41641, 1.019068), (-85.370735, 1.018979), (-85.370735, 0.499998), (-85.34679, 0.500007), (-85.38469, 0.499998), (-85.38469, 1.019068), (-85.392456, 1.019068), (-85.37851, 1.018979), (-85.37851, 0.500007), (-85.370735, 0.499998), (-85.43691, 0.500001), (-85.436905, 1.028464), (-85.44364, 1.028466), (-85.42881, 1.028464), (-85.42881, 0.500001), (-85.42208, 0.5), (-85.32949, 0.001584), (-85.321686, 0.001585), (-85.315186, 0.004831), (-85.315186, 0.004831), (-85.3109, 0.012453), (-85.3403, 0.012455), (-85.3109, 0.012453), (-85.310905, 0.03599), (-85.340294, 0.035988), (-85.436905, -0.028466), (-85.42881, -0.028466), (-85.42881, 0.500001), (-85.41641, -0.019062), (-85.392456, -0.019062), (-85.392456, 0.500008), (-85.34679, 0.500007), (-85.370735, 0.499998), (-85.370735, -0.01898), (-85.392456, -0.019062), (-85.38469, -0.019071), (-85.38469, 0.499998), (-85.370735, 0.499998), (-85.37851, 0.500007), (-85.37851, -0.01898), (-85.44364, -0.028468), (-85.436905, -0.028466), (-85.43691, 0.500001), (-85.42208, 0.5), (-85.42881, 0.500001), (-85.42881, -0.028466), (-85.28558, 0.001594), (-85.27908, 0.00483), (-85.2999, 0.004839), (-85.274796, 0.012452), (-85.3042, 0.012454), (-85.2999, 0.004839), (-85.274796, 0.035978), (-85.30419, 0.035985), (-85.3042, 0.012454)] (
            interpolation = "faceVarying"
        )
        uniform token subdivisionScheme = "none"
    }
}

def Scope "_materials"
{
    def Material "M_LaptopLid_6_1"
    {
        token outputs:surface.connect = </_materials/M_LaptopLid_6_1/Principled_BSDF.outputs:surface>

        def Shader "Principled_BSDF"
        {
            uniform token info:id = "UsdPreviewSurface"
            float inputs:clearcoat = 0
            float inputs:clearcoatRoughness = 0.03
            color3f inputs:diffuseColor.connect = </_materials/M_LaptopLid_6_1/Image_Texture.outputs:rgb>
            float inputs:ior = 1.5
            float inputs:metallic = 0
            float3 inputs:normal.connect = </_materials/M_LaptopLid_6_1/Image_Texture_001.outputs:rgb>
            float inputs:opacity = 1
            float inputs:roughness = 0.8585787
            float inputs:specular = 0.5
            token outputs:surface
        }

        def Shader "Image_Texture"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @../../../textures/BrushedIron_AlbedoTransparency.png@
            token inputs:sourceColorSpace = "sRGB"
            float2 inputs:st.connect = </_materials/M_LaptopLid_6_1/uvmap.outputs:result>
            token inputs:wrapS = "repeat"
            token inputs:wrapT = "repeat"
            float3 outputs:rgb
        }

        def Shader "uvmap"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            token inputs:varname = "UVMap"
            float2 outputs:result
        }

        def Shader "Image_Texture_001"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @./textures/BrushedIron_Normal.png@
            token inputs:sourceColorSpace = "sRGB"
            float2 inputs:st.connect = </_materials/M_LaptopLid_6_1/uvmap.outputs:result>
            token inputs:wrapS = "repeat"
            token inputs:wrapT = "repeat"
            float3 outputs:rgb
        }
    }
}

