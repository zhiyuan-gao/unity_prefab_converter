#usda 1.0
(
    defaultPrim = "MeshCountertopI_4X2_0_GeomSubset_0"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "MeshCountertopI_4X2_0_GeomSubset_0"
{
    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]

    def Mesh "MeshCountertopI_4X2_0_GeomSubset_0" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        uniform bool doubleSided = 1
        float3[] extent = [(-0.6096, -0.3148, 0.438015), (0.609599, 0.2948, 0.468015)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [10, 4, 0, 3, 5, 1, 0, 7, 2, 9, 4, 11, 10, 3, 1, 3, 9, 6, 10, 5, 11, 6, 11, 5, 10, 2, 8, 10, 11, 4, 3, 6, 5, 0, 4, 7, 9, 7, 4, 10, 8, 3, 3, 8, 9, 10, 1, 5, 6, 9, 11, 10, 0, 2]
        rel material:binding = </_materials/M_CountertopI_4X2_0>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, 0), (1, 0, 0), (1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0)] (
            interpolation = "faceVarying"
        )
        point3f[] points = [(-0.6096, 0.2948, 0.468015), (-0.6096, -0.3148, 0.468015), (-0.6096, 0.2948, 0.438015), (-0.6096, -0.3148, 0.438015), (0.609599, 0.2948, 0.468015), (0.609599, -0.3148, 0.468015), (0.609599, -0.3148, 0.438015), (0.609599, 0.2948, 0.438015), (-0.6096, -0.2948, 0.438015), (0.609599, -0.2948, 0.438015), (-0.6096, -0.2948, 0.468015), (0.609599, -0.2948, 0.468015)]
        texCoord2f[] primvars:UVMap = [(-10.690347, 0.029143), (-8.785348, 0.950392), (-10.690347, 0.950392), (-10.690351, 0.718077), (-8.785344, 0.764952), (-10.690351, 0.764952), (-10.690378, 0.749118), (-8.785319, 0.795992), (-10.690378, 0.795992), (-9.933856, 0.803892), (-9.012581, 0.850766), (-9.933856, 0.850766), (-9.043842, 0.881808), (-9.012592, 0.834932), (-9.012592, 0.881808), (-10.690344, 0.815135), (-8.785352, 0.783885), (-8.785353, 0.815135), (-10.690347, 0.029143), (-8.785353, -0.00211), (-8.785353, 0.029143), (-9.96511, 0.803892), (-9.933856, 0.850766), (-9.96511, 0.850766), (-9.043842, 0.881808), (-9.965096, 0.834932), (-9.043842, 0.834932), (-10.690347, 0.029143), (-8.785353, 0.029143), (-8.785348, 0.950392), (-10.690351, 0.718077), (-8.785344, 0.718077), (-8.785344, 0.764952), (-10.690378, 0.749118), (-8.785319, 0.749118), (-8.785319, 0.795992), (-9.933856, 0.803892), (-9.012581, 0.803892), (-9.012581, 0.850766), (-9.043842, 0.881808), (-9.043842, 0.834932), (-9.012592, 0.834932), (-10.690344, 0.815135), (-10.690343, 0.783885), (-8.785352, 0.783885), (-10.690347, 0.029143), (-10.690347, -0.002109), (-8.785353, -0.00211), (-9.96511, 0.803892), (-9.933856, 0.803892), (-9.933856, 0.850766), (-9.043842, 0.881808), (-9.965096, 0.881808), (-9.965096, 0.834932)] (
            interpolation = "faceVarying"
        )
        uniform token subdivisionScheme = "none"
    }
}

def Scope "_materials"
{
    def Material "M_CountertopI_4X2_0"
    {
        token outputs:surface.connect = </_materials/M_CountertopI_4X2_0/Principled_BSDF.outputs:surface>

        def Shader "Principled_BSDF"
        {
            uniform token info:id = "UsdPreviewSurface"
            float inputs:clearcoat = 0
            float inputs:clearcoatRoughness = 0.03
            color3f inputs:diffuseColor.connect = </_materials/M_CountertopI_4X2_0/Image_Texture.outputs:rgb>
            float inputs:ior = 1.5
            float inputs:metallic = 0
            float inputs:opacity = 1
            float inputs:roughness = 0.8585787
            float inputs:specular = 0.5
            token outputs:surface
        }

        def Shader "Image_Texture"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @../../../textures/marbleBase2.jpg@
            token inputs:sourceColorSpace = "sRGB"
            float2 inputs:st.connect = </_materials/M_CountertopI_4X2_0/uvmap.outputs:result>
            token inputs:wrapS = "repeat"
            token inputs:wrapT = "repeat"
            float3 outputs:rgb
        }

        def Shader "uvmap"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            token inputs:varname = "UVMap"
            float2 outputs:result
        }
    }
}

