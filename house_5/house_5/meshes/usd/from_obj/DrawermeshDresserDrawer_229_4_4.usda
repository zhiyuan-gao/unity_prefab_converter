#usda 1.0
(
    defaultPrim = "DresserDrawer_229_4"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "DresserDrawer_229_4"
{
    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]

    def Mesh "DresserDrawer_229_4" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        uniform bool doubleSided = 1
        float3[] extent = [(-0.014609, -0.199174, -0.358174), (0.530293, 0.058581, -0.052261)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [0, 2, 1, 0, 3, 2, 4, 6, 5, 4, 7, 6, 8, 10, 9, 8, 11, 10, 12, 14, 13, 12, 15, 14, 16, 18, 17, 16, 19, 18, 20, 22, 21, 20, 23, 22, 8, 3, 24, 11, 25, 12, 0, 19, 26, 15, 27, 16, 10, 13, 7, 9, 4, 2, 1, 5, 18, 14, 17, 6, 11, 24, 25, 11, 8, 24, 26, 3, 0, 26, 24, 3, 25, 15, 12, 25, 27, 15, 27, 19, 16, 27, 26, 19, 7, 9, 10, 7, 4, 9, 1, 4, 5, 1, 2, 4, 13, 6, 7, 13, 14, 6, 17, 5, 6, 17, 18, 5, 12, 10, 11, 12, 13, 10, 2, 8, 9, 2, 3, 8, 18, 0, 1, 18, 19, 0, 16, 14, 15, 16, 17, 14, 28, 25, 24, 28, 29, 25, 20, 28, 24, 20, 24, 26, 29, 27, 25, 29, 23, 27, 23, 26, 27, 23, 20, 26, 30, 22, 31, 30, 21, 22, 32, 34, 33, 32, 35, 34, 29, 30, 31, 29, 28, 30, 35, 36, 34, 35, 37, 36, 28, 21, 30, 28, 20, 21, 37, 23, 29, 37, 35, 23, 35, 22, 23, 35, 32, 22, 32, 31, 22, 32, 38, 31, 38, 29, 31, 38, 37, 29, 34, 39, 33, 34, 36, 39, 38, 33, 39, 38, 32, 33, 37, 39, 36, 37, 38, 39]
        rel material:binding = </_materials/M_DresserDrawer_229_4_0>
        normal3f[] normals = [(-7.7942595e-8, 0, -1), (-1.2500952e-9, 0, -1), (-7.91934e-8, 0, -0.99999994), (-7.7942595e-8, 0, -1), (0, 0, -1), (-1.2500952e-9, 0, -1), (0, -1, -6.451593e-8), (0, -1, -3.0496537e-8), (0, -0.99999994, 0), (0, -1, -6.451593e-8), (0, -1, -9.501239e-8), (0, -1, -3.0496537e-8), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0.5773178, 0.57741123, -0.57732165), (0.5773178, 0.57741123, -0.57732165), (0.5773178, 0.57741123, -0.57732165), (0.577386, 0.5773831, 0.5772818), (0.577386, 0.5773831, 0.5772818), (0.577386, 0.5773831, 0.5772818), (-0.5773174, 0.5774159, -0.5773174), (-0.5773174, 0.5774159, -0.5773174), (-0.5773174, 0.5774159, -0.5773174), (-0.577319, 0.57741565, 0.5773161), (-0.577319, 0.57741565, 0.5773161), (-0.577319, 0.57741565, 0.5773161), (0.57748, -0.57739514, 0.5771756), (0.5774801, -0.57739514, 0.5771756), (0.57747996, -0.5773952, 0.5771756), (0.57745636, -0.57729363, -0.5773007), (0.57745636, -0.5772937, -0.5773008), (0.57745636, -0.57729363, -0.5773008), (-0.5773302, -0.5773462, -0.5773745), (-0.5773302, -0.57734615, -0.5773745), (-0.5773302, -0.57734615, -0.57737446), (-0.5774072, -0.5775074, 0.5771362), (-0.5774073, -0.5775073, 0.5771362), (-0.57740724, -0.5775073, 0.57713616), (0.7071072, 0.70710635, -0.000002323565), (0.7070483, 0.7071653, -4.251815e-8), (0.70710826, 0.7071053, -0.0000023660864), (0.7071072, 0.70710635, -0.000002323565), (0.70704716, 0.7071664, 0), (0.7070483, 0.7071653, -4.251815e-8), (0, 0.70716506, -0.7070485), (0, 0.7071667, -0.70704687), (0, 0.707165, -0.7070485), (0, 0.70716506, -0.7070485), (0, 0.70716673, -0.7070468), (0, 0.7071667, -0.70704687), (0, 0.7071665, 0.7070471), (0, 0.7071681, 0.7070455), (0, 0.70716643, 0.7070471), (0, 0.7071665, 0.7070471), (0, 0.7071681, 0.7070455), (0, 0.7071681, 0.7070455), (-0.7070473, 0.70716625, 0), (-0.707047, 0.70716655, 0), (-0.7070473, 0.7071663, 0), (-0.7070473, 0.70716625, 0), (-0.70704705, 0.7071666, 0), (-0.707047, 0.70716655, 0), (0.7072545, -0.70695907, 2.225324e-9), (0.7071839, -0.7070297, -4.545809e-7), (0.70725584, -0.7069579, 0), (0.7072545, -0.70695907, 2.225324e-9), (0.7071825, -0.707031, -4.5221213e-7), (0.7071839, -0.7070297, -4.545809e-7), (-4.09719e-8, -0.70692796, -0.70728546), (-0.000010512939, -0.70716196, -0.7070516), (0, -0.70668584, -0.7075275), (-4.09719e-8, -0.70692796, -0.70728546), (-0.0000106183015, -0.70716673, -0.7070468), (-0.000010512939, -0.70716196, -0.7070516), (0, -0.70668554, 0.7075278), (0, -0.7066855, 0.7075279), (-1.6030487e-8, -0.70692277, 0.70729053), (0, -0.70668554, 0.7075278), (0, -0.7066855, 0.7075279), (0, -0.7066855, 0.7075279), (-0.7070471, -0.7071665, 0), (-0.70704716, -0.7071664, 0), (-0.7070471, -0.7071665, 0), (-0.7070471, -0.7071665, 0), (-0.70704716, -0.7071664, 0), (-0.70704716, -0.7071664, 0), (0.7071684, 0, 0.70704514), (0.70716804, 0, 0.7070455), (0.70716876, 0, 0.7070448), (0.7071684, 0, 0.70704514), (0.7071677, 0, 0.70704585), (0.70716804, 0, 0.7070455), (0.70710784, 0, -0.7071057), (0.70710784, 0, -0.7071057), (0.7071079, 0, -0.70710576), (0.70710784, 0, -0.7071057), (0.7071079, 0, -0.70710576), (0.70710784, 0, -0.7071057), (-0.7071043, 0, -0.7071092), (-0.70710504, 0, -0.70710856), (-0.7067645, -2.9787174e-8, -0.70744884), (-0.7071043, 0, -0.7071092), (-0.7074446, -2.2900696e-8, -0.70676875), (-0.70710504, 0, -0.70710856), (-0.7071065, 0, 0.7071071), (-0.70710653, 0, 0.707107), (-0.70710623, 0, 0.70710725), (-0.7071065, 0, 0.7071071), (-0.70710677, 0, 0.7071069), (-0.70710653, 0, 0.707107), (0, 1, -5.509758e-7), (-1.1559053e-9, 0.99999994, -0.00033556882), (1.1747521e-9, 0.99999994, 0.00033506472), (0, 1, -5.509758e-7), (1.3347634e-9, 0.99999994, -0.000335563), (-1.1559053e-9, 0.99999994, -0.00033556882), (4.0016146e-12, 0.99999994, 0.00033695024), (0, 1, -5.509758e-7), (1.1747521e-9, 0.99999994, 0.00033506472), (4.0016146e-12, 0.99999994, 0.00033695024), (1.1747521e-9, 0.99999994, 0.00033506472), (0, 0.99999994, 0.0003369658), (1.3347634e-9, 0.99999994, -0.000335563), (-1.466817e-11, 0.99999994, -0.00033490456), (-1.1559053e-9, 0.99999994, -0.00033556882), (1.3347634e-9, 0.99999994, -0.000335563), (0, 1, 6.805911e-7), (-1.466817e-11, 0.99999994, -0.00033490456), (0, 1, 6.805911e-7), (0, 0.99999994, 0.0003369658), (-1.466817e-11, 0.99999994, -0.00033490456), (0, 1, 6.805911e-7), (4.0016146e-12, 0.99999994, 0.00033695024), (0, 0.99999994, 0.0003369658), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0.0000016742246, 0.0000016562856), (1, 0.0000020617051, 0.0000020396146), (1, 0, 0), (1, 0.0000016742246, 0.0000016562856), (1, 0.0000037359296, 0.0000036959), (1, 0.0000020617051, 0.0000020396146), (0, 1, 0), (0, 1, 0), (0, 0.99999994, 0), (0, 1, 0), (0, 0.99999994, 0), (0, 1, 0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (2.3237565e-9, 0, 1), (0, 0, 1), (2.3237565e-9, 0, 1), (5.952358e-8, 0, 1), (0, 0, 1), (2.3237565e-9, 0, 1), (6.650191e-8, 0, 1), (5.952358e-8, 0, 1), (6.650191e-8, 0, 1), (0, 0, 1), (5.952358e-8, 0, 1), (6.650191e-8, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, 0), (0, -1, 0), (0, -0.99999994, 0), (0, -1, 0), (0, -0.99999994, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0)] (
            interpolation = "faceVarying"
        )
        point3f[] points = [(-0.008734, -0.180066, -0.358174), (-0.008734, -0.193292, -0.358174), (0.524418, -0.1933, -0.358174), (0.524418, -0.180066, -0.358174), (0.524418, -0.199174, -0.352299), (-0.008734, -0.199174, -0.352299), (-0.008734, -0.199174, -0.058136), (0.524419, -0.199174, -0.058136), (0.530293, -0.180066, -0.352299), (0.530293, -0.193292, -0.352299), (0.530293, -0.193292, -0.058136), (0.530293, -0.180066, -0.058136), (0.524419, -0.180066, -0.052261), (0.524419, -0.193292, -0.052261), (-0.008734, -0.193292, -0.052261), (-0.008734, -0.180066, -0.052261), (-0.014609, -0.180066, -0.058136), (-0.014609, -0.1933, -0.058136), (-0.014609, -0.1933, -0.352299), (-0.014609, -0.180066, -0.352299), (0.001266, -0.174192, -0.342299), (0.001266, 0.058581, -0.342299), (0.001266, 0.058581, -0.068136), (0.001266, -0.174192, -0.068136), (0.524418, -0.174192, -0.352299), (0.524419, -0.174192, -0.058136), (-0.008734, -0.174192, -0.352299), (-0.008734, -0.174192, -0.058136), (0.514419, -0.174192, -0.342299), (0.514418, -0.174192, -0.068136), (0.514418, 0.058581, -0.342299), (0.514418, 0.058581, -0.068136), (0.019014, 0.040831, -0.068136), (0.019014, 0.040831, -0.324866), (0.019014, -0.156442, -0.324866), (0.019014, -0.156442, -0.068136), (0.49667, -0.156442, -0.324866), (0.49667, -0.156442, -0.068136), (0.49667, 0.040831, -0.068136), (0.49667, 0.040831, -0.324866)]
        texCoord2f[] primvars:UVMap = [(0.10603, 0.264035), (0.372606, 0.257421), (0.10603, 0.257421), (0.10603, 0.264035), (0.372606, 0.264035), (0.372606, 0.257421), (0.372606, 0.516392), (0.10603, 0.663473), (0.10603, 0.516392), (0.372606, 0.516392), (0.372606, 0.663473), (0.10603, 0.663473), (0.264035, 0.516392), (0.257421, 0.663473), (0.257421, 0.516392), (0.264035, 0.516392), (0.264035, 0.663473), (0.257421, 0.663473), (0.372606, 0.264035), (0.10603, 0.257421), (0.372606, 0.257421), (0.372606, 0.264035), (0.10603, 0.264035), (0.10603, 0.257421), (0.264035, 0.663473), (0.257421, 0.516392), (0.257421, 0.663473), (0.264035, 0.663473), (0.264035, 0.516392), (0.257421, 0.516392), (0.266973, 0.521392), (0.38336, 0.658473), (0.38336, 0.521392), (0.266973, 0.521392), (0.266973, 0.658473), (0.38336, 0.658473), (0.375544, 0.264035), (0.372606, 0.264035), (0.372606, 0.266973), (0.375544, 0.264035), (0.372606, 0.266973), (0.372606, 0.264035), (0.264035, 0.513454), (0.264035, 0.516392), (0.266973, 0.516392), (0.10603, 0.264035), (0.10603, 0.266973), (0.103093, 0.264035), (0.375544, 0.257421), (0.372606, 0.257421), (0.372606, 0.254484), (0.375544, 0.257421), (0.372606, 0.254484), (0.372606, 0.257421), (0.257421, 0.513454), (0.254484, 0.516392), (0.257421, 0.516392), (0.10603, 0.257421), (0.103093, 0.257421), (0.10603, 0.254484), (0.375544, 0.663473), (0.372606, 0.516392), (0.372606, 0.663473), (0.375544, 0.663473), (0.375544, 0.516392), (0.372606, 0.516392), (0.10603, 0.266973), (0.372606, 0.264035), (0.10603, 0.264035), (0.10603, 0.266973), (0.372606, 0.266973), (0.372606, 0.264035), (0.372606, 0.266973), (0.10603, 0.264035), (0.372606, 0.264035), (0.372606, 0.266973), (0.10603, 0.266973), (0.10603, 0.264035), (0.266973, 0.663473), (0.264035, 0.516392), (0.264035, 0.663473), (0.266973, 0.663473), (0.266973, 0.516392), (0.264035, 0.516392), (0.372606, 0.663473), (0.375544, 0.516392), (0.375544, 0.663473), (0.372606, 0.663473), (0.372606, 0.516392), (0.375544, 0.516392), (0.10603, 0.257421), (0.372606, 0.254484), (0.10603, 0.254484), (0.10603, 0.257421), (0.372606, 0.257421), (0.372606, 0.254484), (0.372606, 0.257421), (0.10603, 0.254484), (0.372606, 0.254484), (0.372606, 0.257421), (0.10603, 0.257421), (0.10603, 0.254484), (0.257421, 0.663473), (0.254484, 0.516392), (0.254484, 0.663473), (0.257421, 0.663473), (0.257421, 0.516392), (0.254484, 0.516392), (0.372606, 0.264035), (0.375544, 0.257421), (0.375544, 0.264035), (0.372606, 0.264035), (0.372606, 0.257421), (0.375544, 0.257421), (0.372606, 0.257421), (0.375544, 0.264035), (0.375544, 0.257421), (0.372606, 0.257421), (0.372606, 0.264035), (0.375544, 0.264035), (0.257421, 0.516392), (0.264035, 0.513454), (0.257421, 0.513454), (0.257421, 0.516392), (0.264035, 0.516392), (0.264035, 0.513454), (0.103093, 0.264035), (0.10603, 0.257421), (0.10603, 0.264035), (0.103093, 0.264035), (0.103093, 0.257421), (0.10603, 0.257421), (0.367607, 0.521392), (0.372606, 0.663473), (0.372606, 0.516392), (0.367607, 0.521392), (0.367607, 0.658473), (0.372606, 0.663473), (0.11103, 0.521392), (0.367607, 0.521392), (0.372606, 0.516392), (0.11103, 0.521392), (0.372606, 0.516392), (0.10603, 0.516392), (0.367607, 0.658473), (0.10603, 0.663473), (0.372606, 0.663473), (0.367607, 0.658473), (0.11103, 0.658473), (0.10603, 0.663473), (0.11103, 0.658473), (0.10603, 0.516392), (0.10603, 0.663473), (0.11103, 0.658473), (0.11103, 0.521392), (0.10603, 0.516392), (0.367607, 0.521392), (0.11103, 0.658473), (0.367607, 0.658473), (0.367607, 0.521392), (0.11103, 0.521392), (0.11103, 0.658473), (0.374486, 0.658473), (0.275847, 0.530108), (0.374486, 0.530108), (0.374486, 0.658473), (0.275847, 0.658473), (0.275847, 0.530108), (0.266973, 0.658473), (0.38336, 0.521392), (0.38336, 0.658473), (0.266973, 0.658473), (0.266973, 0.521392), (0.38336, 0.521392), (0.119904, 0.658473), (0.358732, 0.530108), (0.119904, 0.530108), (0.119904, 0.658473), (0.358732, 0.658473), (0.358732, 0.530108), (0.367607, 0.266973), (0.11103, 0.38336), (0.367607, 0.38336), (0.367607, 0.266973), (0.11103, 0.266973), (0.11103, 0.38336), (0.358732, 0.275847), (0.11103, 0.266973), (0.367607, 0.266973), (0.358732, 0.275847), (0.119904, 0.275847), (0.11103, 0.266973), (0.119904, 0.275847), (0.11103, 0.38336), (0.11103, 0.266973), (0.119904, 0.275847), (0.119904, 0.374486), (0.11103, 0.38336), (0.119904, 0.374486), (0.367607, 0.38336), (0.11103, 0.38336), (0.119904, 0.374486), (0.358732, 0.374486), (0.367607, 0.38336), (0.358732, 0.374486), (0.367607, 0.266973), (0.367607, 0.38336), (0.358732, 0.374486), (0.358732, 0.275847), (0.367607, 0.266973), (0.119904, 0.275847), (0.358732, 0.374486), (0.119904, 0.374486), (0.119904, 0.275847), (0.358732, 0.275847), (0.358732, 0.374486), (0.358732, 0.658473), (0.119904, 0.530108), (0.358732, 0.530108), (0.358732, 0.658473), (0.119904, 0.658473), (0.119904, 0.530108), (0.275847, 0.658473), (0.374486, 0.530108), (0.275847, 0.530108), (0.275847, 0.658473), (0.374486, 0.658473), (0.374486, 0.530108)] (
            interpolation = "faceVarying"
        )
        uniform token subdivisionScheme = "none"
    }
}

def Scope "_materials"
{
    def Material "M_DresserDrawer_229_4_0"
    {
        token outputs:surface.connect = </_materials/M_DresserDrawer_229_4_0/Principled_BSDF.outputs:surface>

        def Shader "Principled_BSDF"
        {
            uniform token info:id = "UsdPreviewSurface"
            float inputs:clearcoat = 0
            float inputs:clearcoatRoughness = 0.03
            color3f inputs:diffuseColor = (1, 0.97794116, 0.97794116)
            float inputs:ior = 1.5
            float inputs:metallic = 0
            float3 inputs:normal.connect = </_materials/M_DresserDrawer_229_4_0/Image_Texture.outputs:rgb>
            float inputs:opacity = 1
            float inputs:roughness = 0.8585787
            float inputs:specular = 0.2
            token outputs:surface
        }

        def Shader "Image_Texture"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @./textures/HammeredMetal_Normal.png@
            token inputs:sourceColorSpace = "sRGB"
            float2 inputs:st.connect = </_materials/M_DresserDrawer_229_4_0/uvmap.outputs:result>
            token inputs:wrapS = "repeat"
            token inputs:wrapT = "repeat"
            float3 outputs:rgb
        }

        def Shader "uvmap"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            token inputs:varname = "UVMap"
            float2 outputs:result
        }
    }
}

