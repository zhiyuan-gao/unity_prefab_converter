#usda 1.0
(
    defaultPrim = "MeshDeskLamp_4_0_GeomSubset_2"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "MeshDeskLamp_4_0_GeomSubset_2"
{
    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]

    def Mesh "MeshDeskLamp_4_0_GeomSubset_2" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        uniform bool doubleSided = 1
        float3[] extent = [(-0.107453, -0.079531, -0.17315), (0.108063, 0.079531, 0.171374)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 2, 0, 8, 5, 9, 6, 9, 5, 10, 7, 11, 11, 4, 8, 16, 13, 17, 17, 14, 18, 18, 15, 19, 19, 12, 16, 1, 3, 2, 8, 4, 5, 6, 10, 9, 10, 6, 7, 11, 7, 4, 16, 12, 13, 17, 13, 14, 18, 14, 15, 19, 15, 12]
        rel material:binding = </_materials/M_DeskLamp_4_2>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
            interpolation = "faceVarying"
        )
        point3f[] points = [(0.000055, -0.00025, -0.17315), (0.000555, -0.00025, -0.17315), (0.000055, 0.00025, -0.17315), (0.000555, 0.00025, -0.17315), (-0.107453, -0.079531, 0.171374), (-0.107453, 0.079531, 0.171374), (0.108063, 0.079531, 0.171374), (0.108063, -0.079531, 0.171374), (-0.107453, -0.079531, 0.044486), (-0.107453, 0.079531, 0.044486), (0.108063, 0.079531, 0.044486), (0.108063, -0.079531, 0.044486), (-0.105819, 0.077897, 0.044486), (0.106429, 0.077897, 0.044486), (0.106429, -0.077898, 0.044486), (-0.105819, -0.077898, 0.044486), (-0.105819, 0.077897, 0.171374), (0.106429, 0.077897, 0.171374), (0.106429, -0.077898, 0.171374), (-0.105819, -0.077898, 0.171374)]
        texCoord2f[] primvars:UVMap = [(1, 0), (0, 1), (0, 0), (-18.881346, -0.532939), (-21.179897, 1.532938), (-21.179897, -0.532939), (-13.280096, 1.532938), (-9.946068, -0.532939), (-9.946068, 1.532938), (-13.280096, -0.532939), (-15.547312, 1.532938), (-15.547312, -0.532939), (-15.547312, -0.532939), (-18.881346, 1.532938), (-18.881346, -0.532939), (-9.988329, 1.523892), (-13.302395, -0.523892), (-13.302395, 1.523892), (-13.302395, 1.523892), (-15.540512, -0.523892), (-15.540512, 1.523892), (-15.540512, 1.523892), (-18.854582, -0.523892), (-18.854582, 1.523892), (-18.854582, 1.523892), (-21.123755, -0.523892), (-21.123755, 1.523892), (1, 0), (1, 1), (0, 1), (-18.881346, -0.532939), (-18.881346, 1.532938), (-21.179897, 1.532938), (-13.280096, 1.532938), (-13.280096, -0.532939), (-9.946068, -0.532939), (-13.280096, -0.532939), (-13.280096, 1.532938), (-15.547312, 1.532938), (-15.547312, -0.532939), (-15.547312, 1.532938), (-18.881346, 1.532938), (-9.988329, 1.523892), (-9.988329, -0.523892), (-13.302395, -0.523892), (-13.302395, 1.523892), (-13.302395, -0.523892), (-15.540512, -0.523892), (-15.540512, 1.523892), (-15.540512, -0.523892), (-18.854582, -0.523892), (-18.854582, 1.523892), (-18.854582, -0.523892), (-21.123755, -0.523892)] (
            interpolation = "faceVarying"
        )
        uniform token subdivisionScheme = "none"
    }
}

def Scope "_materials"
{
    def Material "M_DeskLamp_4_2"
    {
        token outputs:surface.connect = </_materials/M_DeskLamp_4_2/Principled_BSDF.outputs:surface>

        def Shader "Principled_BSDF"
        {
            uniform token info:id = "UsdPreviewSurface"
            float inputs:clearcoat = 0
            float inputs:clearcoatRoughness = 0.03
            color3f inputs:diffuseColor.connect = </_materials/M_DeskLamp_4_2/Image_Texture.outputs:rgb>
            float inputs:ior = 1.5
            float inputs:metallic = 0
            float3 inputs:normal.connect = </_materials/M_DeskLamp_4_2/Image_Texture_001.outputs:rgb>
            float inputs:opacity = 1
            float inputs:roughness = 0.8585787
            float inputs:specular = 0.5
            token outputs:surface
        }

        def Shader "Image_Texture"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @../../../textures/TexturesCom_FabricPlain0072_seamless_albedo_S.png@
            token inputs:sourceColorSpace = "sRGB"
            float2 inputs:st.connect = </_materials/M_DeskLamp_4_2/uvmap.outputs:result>
            token inputs:wrapS = "repeat"
            token inputs:wrapT = "repeat"
            float3 outputs:rgb
        }

        def Shader "uvmap"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            token inputs:varname = "UVMap"
            float2 outputs:result
        }

        def Shader "Image_Texture_001"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @./textures/TexturesCom_FabricPlain0072_seamless_normal_S.png@
            token inputs:sourceColorSpace = "sRGB"
            float2 inputs:st.connect = </_materials/M_DeskLamp_4_2/uvmap.outputs:result>
            token inputs:wrapS = "repeat"
            token inputs:wrapT = "repeat"
            float3 outputs:rgb
        }
    }
}

