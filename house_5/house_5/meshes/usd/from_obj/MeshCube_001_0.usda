#usda 1.0
(
    defaultPrim = "Cube_001"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "Cube_001"
{
    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]

    def Mesh "Cube_001" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        uniform bool doubleSided = 1
        float3[] extent = [(-2.817795, -1.774723, -0.019559), (2.817595, 1.774223, 0.020759)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [10, 0, 9, 14, 8, 13, 10, 11, 15, 1, 7, 4, 6, 12, 5, 0, 2, 1, 6, 4, 7, 13, 15, 14, 9, 11, 10, 0, 1, 5, 10, 3, 0, 14, 11, 8, 11, 14, 15, 15, 6, 3, 6, 7, 3, 7, 2, 3, 3, 10, 15, 1, 2, 7, 6, 15, 12, 0, 3, 2, 6, 5, 4, 13, 12, 15, 9, 8, 11, 1, 4, 5, 5, 12, 9, 12, 13, 9, 13, 8, 9, 9, 0, 5]
        rel material:binding = </_materials/M_Cube_001_0>
        normal3f[] normals = [(5.680358e-7, 1, 0), (5.680357e-7, 1, 0), (5.680358e-7, 1, 0), (-1, 6.4854794e-7, 0), (-1, 5.85354e-7, 0), (-1, 6.4906965e-7, 0), (4.6128594e-7, -0.0000014086836, 1), (0.000001443948, -0.0000014051652, 1), (0.0000012372213, -0.0000013644701, 1), (1, -5.4591567e-7, 0), (1, -7.0052243e-7, 0), (1, -7.017988e-7, 0), (-5.907572e-7, -1, 0), (-5.9075717e-7, -1, 0), (-5.907572e-7, -1, 0), (0.7071047, 0.7071089, 0), (0.707104, 0.7071095, 0), (0.707104, 0.7071096, 0), (0.7071047, -0.7071089, 0), (0.70710474, -0.70710886, 0), (0.70710474, -0.70710886, 0), (-0.707104, -0.7071095, 0), (-0.707105, -0.7071086, 0), (-0.70710397, -0.70710963, 0), (-0.7071052, 0.70710844, 0), (-0.70710415, 0.70710945, 0), (-0.70710534, 0.7071082, 0), (-0.0000012388044, 0.0000014086851, -1), (-0.0000036542665, 0.0000014051698, -1), (-4.791667e-7, 0.0000013644701, -1), (5.680358e-7, 1, 0), (5.680357e-7, 1, 0), (5.680357e-7, 1, 0), (-1, 6.4854794e-7, 0), (-1, 5.8483226e-7, 0), (-1, 5.85354e-7, 0), (0.000001443948, -0.0000014051652, 1), (0.000003895831, -0.000001265493, 1), (0.0000012372213, -0.0000013644701, 1), (0.0000012372213, -0.0000013644701, 1), (-0.0000012454705, -0.0000014086837, 1), (-4.8381366e-7, -0.0000013644694, 1), (-0.0000012454705, -0.0000014086837, 1), (-0.0000036756894, -0.000001405166, 1), (-4.8381366e-7, -0.0000013644694, 1), (-0.0000036756894, -0.000001405166, 1), (-0.0000012703139, -0.0000012654908, 1), (-4.8381366e-7, -0.0000013644694, 1), (-4.8381366e-7, -0.0000013644694, 1), (4.6128594e-7, -0.0000014086836, 1), (0.0000012372213, -0.0000013644701, 1), (1, -5.4591567e-7, 0), (1, -5.446393e-7, 0), (1, -7.0052243e-7, 0), (-5.907572e-7, -1, 0), (-5.9075717e-7, -1, 0), (-5.9075717e-7, -1, 0), (0.7071047, 0.7071089, 0), (0.7071047, 0.70710886, 0), (0.707104, 0.7071095, 0), (0.7071047, -0.7071089, 0), (0.7071046, -0.7071089, 0), (0.70710474, -0.70710886, 0), (-0.707104, -0.7071095, 0), (-0.70710504, -0.70710844, 0), (-0.707105, -0.7071086, 0), (-0.7071052, 0.70710844, 0), (-0.707104, 0.7071096, 0), (-0.70710415, 0.70710945, 0), (-0.0000036542665, 0.0000014051698, -1), (-0.0000012559145, 0.0000012654924, -0.99999994), (-4.791667e-7, 0.0000013644701, -1), (-4.791667e-7, 0.0000013644701, -1), (4.6128562e-7, 0.0000014086835, -1), (0.0000012274246, 0.0000013644682, -1), (4.6128562e-7, 0.0000014086835, -1), (0.0000014431807, 0.0000014051644, -1), (0.0000012274246, 0.0000013644682, -1), (0.0000014431807, 0.0000014051644, -1), (0.0000038647654, 0.0000012654866, -1), (0.0000012274246, 0.0000013644682, -1), (0.0000012274246, 0.0000013644682, -1), (-0.0000012388044, 0.0000014086851, -1), (-4.791667e-7, 0.0000013644701, -1)] (
            interpolation = "faceVarying"
        )
        point3f[] points = [(2.62318, 1.77422, -0.019554), (2.817595, 1.579806, -0.019555), (2.817595, 1.579806, 0.020759), (2.62318, 1.77422, 0.020759), (2.817593, -1.580309, -0.019559), (2.623178, -1.774723, -0.019559), (2.623178, -1.774723, 0.020754), (2.817593, -1.580309, 0.020755), (-2.817793, 1.579809, -0.019555), (-2.623378, 1.774223, -0.019554), (-2.623378, 1.774223, 0.020759), (-2.817793, 1.579809, 0.020759), (-2.62338, -1.77472, -0.019559), (-2.817795, -1.580306, -0.019559), (-2.817795, -1.580306, 0.020755), (-2.62338, -1.77472, 0.020754)]
        texCoord2f[] primvars:UVMap = [(0.965501, 0), (0.038279, 0.004304), (0.961709, 0.004304), (1, 0.945219), (0.995927, 0.058639), (0.995927, 0.941835), (0.965501, 0), (1, 0.054781), (0.965501, 1), (0.00406, 0.058639), (0, 0.945219), (0.00406, 0.941835), (0.034499, 1), (0.961709, 0.996171), (0.038279, 0.996171), (0.038279, 0.004304), (0, 0.054781), (0.00406, 0.058639), (0.034499, 1), (0.00406, 0.941835), (0, 0.945219), (0.995927, 0.941835), (0.965501, 1), (1, 0.945219), (0.961709, 0.004304), (1, 0.054781), (0.965501, 0), (0.038279, 0.004304), (0.00406, 0.058639), (0.038279, 0.996171), (0.965501, 0), (0.034499, 0), (0.038279, 0.004304), (1, 0.945219), (1, 0.054781), (0.995927, 0.058639), (1, 0.054781), (1, 0.945219), (0.965501, 1), (0.965501, 1), (0.034499, 1), (0.034499, 0), (0.034499, 1), (0, 0.945219), (0.034499, 0), (0, 0.945219), (0, 0.054781), (0.034499, 0), (0.034499, 0), (0.965501, 0), (0.965501, 1), (0.00406, 0.058639), (0, 0.054781), (0, 0.945219), (0.034499, 1), (0.965501, 1), (0.961709, 0.996171), (0.038279, 0.004304), (0.034499, 0), (0, 0.054781), (0.034499, 1), (0.038279, 0.996171), (0.00406, 0.941835), (0.995927, 0.941835), (0.961709, 0.996171), (0.965501, 1), (0.961709, 0.004304), (0.995927, 0.058639), (1, 0.054781), (0.00406, 0.058639), (0.00406, 0.941835), (0.038279, 0.996171), (0.038279, 0.996171), (0.961709, 0.996171), (0.961709, 0.004304), (0.961709, 0.996171), (0.995927, 0.941835), (0.961709, 0.004304), (0.995927, 0.941835), (0.995927, 0.058639), (0.961709, 0.004304), (0.961709, 0.004304), (0.038279, 0.004304), (0.038279, 0.996171)] (
            interpolation = "faceVarying"
        )
        uniform token subdivisionScheme = "none"
    }
}

def Scope "_materials"
{
    def Material "M_Cube_001_0"
    {
        token outputs:surface.connect = </_materials/M_Cube_001_0/Principled_BSDF.outputs:surface>

        def Shader "Principled_BSDF"
        {
            uniform token info:id = "UsdPreviewSurface"
            float inputs:clearcoat = 0
            float inputs:clearcoatRoughness = 0.03
            color3f inputs:diffuseColor.connect = </_materials/M_Cube_001_0/Image_Texture.outputs:rgb>
            float inputs:ior = 1.5
            float inputs:metallic = 0
            float3 inputs:normal.connect = </_materials/M_Cube_001_0/Image_Texture_001.outputs:rgb>
            float inputs:opacity = 1
            float inputs:roughness = 0.8585787
            float inputs:specular = 0.2
            token outputs:surface
        }

        def Shader "Image_Texture"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @../../../textures/4.png@
            token inputs:sourceColorSpace = "sRGB"
            float2 inputs:st.connect = </_materials/M_Cube_001_0/uvmap.outputs:result>
            token inputs:wrapS = "repeat"
            token inputs:wrapT = "repeat"
            float3 outputs:rgb
        }

        def Shader "uvmap"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            token inputs:varname = "UVMap"
            float2 outputs:result
        }

        def Shader "Image_Texture_001"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @./textures/1NRM.png@
            token inputs:sourceColorSpace = "sRGB"
            float2 inputs:st.connect = </_materials/M_Cube_001_0/uvmap.outputs:result>
            token inputs:wrapS = "repeat"
            token inputs:wrapT = "repeat"
            float3 outputs:rgb
        }
    }
}

