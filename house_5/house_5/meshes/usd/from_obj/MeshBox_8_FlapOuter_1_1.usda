#usda 1.0
(
    defaultPrim = "Box_8_FlapOuter_1"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "Box_8_FlapOuter_1"
{
    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]

    def Mesh "Box_8_FlapOuter_1" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        uniform bool doubleSided = 1
        float3[] extent = [(-0.170514, 2.721492, 0.507632), (0.173684, 2.85286, 0.524363)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 2, 0, 4, 18, 17, 5, 8, 7, 5, 13, 6, 9, 11, 7, 9, 19, 21, 10, 24, 23, 10, 14, 11, 15, 25, 13, 16, 25, 27, 16, 19, 17, 20, 24, 21, 23, 27, 26, 7, 14, 5, 4, 19, 8, 10, 26, 15, 16, 22, 20, 13, 18, 6, 24, 0, 21, 2, 12, 9, 12, 1, 24, 9, 0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 1, 3, 2, 4, 6, 18, 5, 4, 8, 5, 14, 13, 9, 12, 11, 9, 8, 19, 10, 12, 24, 10, 15, 14, 15, 26, 25, 16, 18, 25, 16, 20, 19, 20, 22, 24, 23, 22, 27, 7, 11, 14, 4, 17, 19, 10, 23, 26, 16, 27, 22, 13, 25, 18, 24, 1, 0, 2, 3, 12, 12, 3, 1, 9, 21, 0]
        rel material:binding = </_materials/M_Box_8_FlapOuter_1_0>
        normal3f[] normals = [(-0.0000027696005, -0.9932431, 0.116053), (-7.271462e-9, -0.99315894, 0.11677069), (0, -0.99315864, 0.11677257), (-1, -0.000022629507, 0), (-1, 0.0000024292374, 0), (-1, -0.00002389091, 0), (-1, 0, 0), (-1, 0.000027235747, 0), (-1, 0, 0), (1.4240705e-7, 0.7858628, 0.618401), (6.4425666e-7, 0.9928025, 0.119762465), (-0.000014211269, 0.99249214, 0.12230855), (-3.1174412e-7, 0.1188246, 0.99291533), (7.429881e-7, 0.5064548, 0.86226654), (-1.7017477e-7, 0.5074273, 0.8616946), (-1, 0.000022761595, 0), (-1, -0.0000017502721, 0), (-1, 0.0000053298836, 0), (1, -2.0395211e-7, 0), (1, -0.000007054018, 0), (1, -0.000008865812, 0), (1, -2.0395211e-7, 0), (1, 0, 0), (1, 0, 0), (1, -0.0000015254202, 0), (1, -0.000019660789, 0), (1, 0, 0), (0.000002029792, 0.62225765, -0.7828125), (0.0000014178416, 0.93792295, -0.3468438), (0, 0.62218845, -0.7828676), (-1, -0.000048532693, 0), (-1, -0.0000017502721, 0), (-1, -0.00002389091, 0), (0.0000011509361, 0.2937539, -0.9558811), (0.0000010625878, -0.11327516, -0.99356365), (-0.00010128749, -0.11647735, -0.99319327), (1, -0.000008865812, 0), (1, 0, 0), (1, -0.0000028987906, 0), (-1.7017477e-7, 0.5074273, 0.8616946), (-2.17549e-8, 0.78657967, 0.6174888), (1.4240705e-7, 0.7858628, 0.618401), (-1, -0.000022629507, 0), (-1, -0.0000017502721, 0), (-1, 0.000027235747, 0), (1, -2.0395211e-7, 0), (1, -0.0000028987906, 0), (1, -0.0000015254202, 0), (0.000002029792, 0.62225765, -0.7828125), (0.0000010930988, 0.2941101, -0.95577157), (0.0000011509361, 0.2937539, -0.9558811), (6.4425666e-7, 0.9928025, 0.119762465), (0.0000011304529, 0.9379497, -0.3467712), (-0.000014211269, 0.99249214, 0.12230855), (0.0000010625878, -0.11327516, -0.99356365), (-2.5293548e-7, -0.11657335, -0.99318206), (-0.00010128749, -0.11647735, -0.99319327), (7.648606e-8, 0.11657362, 0.99318206), (1.357477e-7, 0.11763854, 0.9930565), (-3.1174412e-7, 0.1188246, 0.99291533), (1, -0.0000013470324, 0), (1, 0.0000015310254, 0), (1, -0.000007054018, 0), (-1, 0.000022761595, 0), (-1, 7.740235e-7, 0), (-1, 7.7938574e-7, 0), (-1, -0.000022629507, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0.000027235747, 0), (-1, 0.000022761595, 0), (1, -2.0395211e-7, 0), (1, 0, 0), (1, -0.0000013470324, 0), (1, 0, 0), (1, 0, 0), (1, -0.0000015254202, 0), (-1, -0.000048532693, 0), (-1, -0.00002389091, 0), (-1, 0.0000024292374, 0), (-1, -0.0000017502721, 0), (-1, 0.000018870393, 0), (-1, 0.0000053298836, 0), (0.9999999, -0.0004733017, 0.000076118944), (1, -0.000008865812, 0), (1, -0.000007054018, 0), (1, -0.000019660789, 0), (1, -0.0000028987906, 0), (1, 0, 0), (-0.0000027696005, -0.9932431, 0.116053), (-0.0000027768717, -0.9932432, 0.1160511), (-7.271462e-9, -0.99315894, 0.11677069), (-1, -0.000022629507, 0), (-1, 0, 0), (-1, 0.0000024292374, 0), (-1, 0, 0), (-1, -0.000022629507, 0), (-1, 0.000027235747, 0), (1.4240705e-7, 0.7858628, 0.618401), (-2.17549e-8, 0.78657967, 0.6174888), (6.4425666e-7, 0.9928025, 0.119762465), (-3.1174412e-7, 0.1188246, 0.99291533), (1.357477e-7, 0.11763854, 0.9930565), (7.429881e-7, 0.5064548, 0.86226654), (-1, 0.000022761595, 0), (-1, 0.000027235747, 0), (-1, -0.0000017502721, 0), (1, -2.0395211e-7, 0), (1, -0.0000013470324, 0), (1, -0.000007054018, 0), (1, -2.0395211e-7, 0), (1, -0.0000015254202, 0), (1, 0, 0), (1, -0.0000015254202, 0), (1, -0.0000028987906, 0), (1, -0.000019660789, 0), (0.000002029792, 0.62225765, -0.7828125), (0.0000011304529, 0.9379497, -0.3467712), (0.0000014178416, 0.93792295, -0.3468438), (-1, -0.000048532693, 0), (-1, 0.000018870393, 0), (-1, -0.0000017502721, 0), (0.0000011509361, 0.2937539, -0.9558811), (0.0000010930988, 0.2941101, -0.95577157), (0.0000010625878, -0.11327516, -0.99356365), (1, -0.000008865812, 0), (0.9999999, -0.0004733017, 0.000076118944), (1, 0, 0), (-1.7017477e-7, 0.5074273, 0.8616946), (7.429881e-7, 0.5064548, 0.86226654), (-2.17549e-8, 0.78657967, 0.6174888), (-1, -0.000022629507, 0), (-1, -0.00002389091, 0), (-1, -0.0000017502721, 0), (1, -2.0395211e-7, 0), (1, -0.000008865812, 0), (1, -0.0000028987906, 0), (0.000002029792, 0.62225765, -0.7828125), (0, 0.62218845, -0.7828676), (0.0000010930988, 0.2941101, -0.95577157), (6.4425666e-7, 0.9928025, 0.119762465), (0.0000014178416, 0.93792295, -0.3468438), (0.0000011304529, 0.9379497, -0.3467712), (0.0000010625878, -0.11327516, -0.99356365), (0, -0.11657358, -0.993182), (-2.5293548e-7, -0.11657335, -0.99318206), (7.648606e-8, 0.11657362, 0.99318206), (3.2941978e-7, 0.11657267, 0.9931822), (1.357477e-7, 0.11763854, 0.9930565), (1, -0.0000013470324, 0), (1, 0.0000015588994, 0), (1, 0.0000015310254, 0), (-1, 0.000022761595, 0), (-1, 0.0000053298836, 0), (-1, 7.740235e-7, 0)] (
            interpolation = "faceVarying"
        )
        point3f[] points = [(-0.170514, 2.721492, 0.522952), (0.173684, 2.721492, 0.522952), (-0.170514, 2.721658, 0.524363), (0.173684, 2.721657, 0.524363), (-0.170514, 2.85274, 0.50849), (-0.170514, 2.852739, 0.508715), (-0.170514, 2.85286, 0.508431), (-0.170514, 2.852471, 0.508926), (-0.170514, 2.852434, 0.508736), (-0.170514, 2.852181, 0.509043), (0.173684, 2.852435, 0.508734), (0.173684, 2.852469, 0.508927), (0.173684, 2.852181, 0.509043), (0.173684, 2.85286, 0.508431), (0.173684, 2.85274, 0.508714), (0.173684, 2.85274, 0.50849), (-0.170514, 2.852635, 0.507822), (-0.170514, 2.852688, 0.508039), (-0.170514, 2.852818, 0.508071), (-0.170514, 2.852333, 0.507874), (-0.170514, 2.852323, 0.507678), (-0.170514, 2.852016, 0.507632), (0.173684, 2.852324, 0.507679), (0.173684, 2.852332, 0.507872), (0.173684, 2.852015, 0.507632), (0.173684, 2.852817, 0.508071), (0.173684, 2.852687, 0.508041), (0.173684, 2.852635, 0.507822)]
        texCoord2f[] primvars:UVMap = [(1.529613, 0.512573), (1.53507, 1.444735), (1.529613, 1.444735), (1.520731, 0.467651), (1.519014, 0.468502), (1.518816, 0.467655), (1.521674, 0.467579), (1.521612, 0.466775), (1.522439, 0.4668), (1.521674, 0.467579), (1.520545, 1.488809), (1.520545, 0.468498), (1.522776, 0.466457), (1.52243, 1.489816), (1.522439, 0.4668), (1.522568, 0.466457), (1.51795, 0.466777), (1.517069, 0.466556), (1.521604, 1.490531), (1.516987, 1.49085), (1.517942, 1.490533), (1.521604, 1.490531), (1.521672, 1.489059), (1.52243, 1.489816), (1.520731, 1.489657), (1.519014, 1.488806), (1.520545, 1.488809), (1.51791, 0.46761), (1.519014, 1.488806), (1.517883, 1.489059), (1.51791, 0.46761), (1.51795, 0.466777), (1.518816, 0.467655), (1.517146, 0.466831), (1.516779, 1.490586), (1.516779, 0.466457), (1.517942, 1.490533), (1.517883, 1.489059), (1.518823, 1.489657), (1.522439, 0.4668), (1.521672, 1.489059), (1.521674, 0.467579), (1.520731, 0.467651), (1.51795, 0.466777), (1.521612, 0.466775), (1.521604, 1.490531), (1.518823, 1.489657), (1.520731, 1.489657), (1.51791, 0.46761), (1.517128, 1.489803), (1.517146, 0.466831), (1.520545, 1.488809), (1.519014, 0.468502), (1.520545, 0.468498), (1.499303, 1.444736), (1.189925, 0.512572), (1.499305, 0.512572), (0.851932, 1.444736), (1.161312, 0.512572), (1.16131, 1.444736), (0.834132, 1.156673), (0.828675, 1.466052), (0.828675, 1.156675), (0.816288, 1.156674), (0.821745, 1.466053), (0.816288, 1.466053), (1.520731, 0.467651), (1.521674, 0.467579), (1.520545, 0.468498), (1.522439, 0.4668), (1.521612, 0.466775), (1.522776, 0.466457), (1.521604, 1.490531), (1.52243, 1.489816), (1.522775, 1.490587), (1.520545, 1.488809), (1.521672, 1.489059), (1.520731, 1.489657), (1.51791, 0.46761), (1.518816, 0.467655), (1.519014, 0.468502), (1.51795, 0.466777), (1.517146, 0.466831), (1.517069, 0.466556), (1.517128, 1.489803), (1.517942, 1.490533), (1.516987, 1.49085), (1.519014, 1.488806), (1.518823, 1.489657), (1.517883, 1.489059), (1.529613, 0.512573), (1.53507, 0.512572), (1.53507, 1.444735), (1.520731, 0.467651), (1.520545, 0.468498), (1.519014, 0.468502), (1.521674, 0.467579), (1.520731, 0.467651), (1.521612, 0.466775), (1.521674, 0.467579), (1.521672, 1.489059), (1.520545, 1.488809), (1.522776, 0.466457), (1.522775, 1.490587), (1.52243, 1.489816), (1.522568, 0.466457), (1.521612, 0.466775), (1.51795, 0.466777), (1.521604, 1.490531), (1.522485, 1.490752), (1.516987, 1.49085), (1.521604, 1.490531), (1.520731, 1.489657), (1.521672, 1.489059), (1.520731, 1.489657), (1.518823, 1.489657), (1.519014, 1.488806), (1.51791, 0.46761), (1.519014, 0.468502), (1.519014, 1.488806), (1.51791, 0.46761), (1.517146, 0.466831), (1.51795, 0.466777), (1.517146, 0.466831), (1.517128, 1.489803), (1.516779, 1.490586), (1.517942, 1.490533), (1.517128, 1.489803), (1.517883, 1.489059), (1.522439, 0.4668), (1.52243, 1.489816), (1.521672, 1.489059), (1.520731, 0.467651), (1.518816, 0.467655), (1.51795, 0.466777), (1.521604, 1.490531), (1.517942, 1.490533), (1.518823, 1.489657), (1.51791, 0.46761), (1.517883, 1.489059), (1.517128, 1.489803), (1.520545, 1.488809), (1.519014, 1.488806), (1.519014, 0.468502), (1.499303, 1.444736), (1.189925, 1.444736), (1.189925, 0.512572), (0.851932, 1.444736), (0.851932, 0.512572), (1.161312, 0.512572), (0.834132, 1.156673), (0.834132, 1.466052), (0.828675, 1.466052), (0.816288, 1.156674), (0.821745, 1.156672), (0.821745, 1.466053)] (
            interpolation = "faceVarying"
        )
        uniform token subdivisionScheme = "none"
    }
}

def Scope "_materials"
{
    def Material "M_Box_8_FlapOuter_1_0"
    {
        token outputs:surface.connect = </_materials/M_Box_8_FlapOuter_1_0/Principled_BSDF.outputs:surface>

        def Shader "Principled_BSDF"
        {
            uniform token info:id = "UsdPreviewSurface"
            float inputs:clearcoat = 0
            float inputs:clearcoatRoughness = 0.03
            color3f inputs:diffuseColor.connect = </_materials/M_Box_8_FlapOuter_1_0/Image_Texture.outputs:rgb>
            float inputs:ior = 1.5
            float inputs:metallic = 0
            float3 inputs:normal.connect = </_materials/M_Box_8_FlapOuter_1_0/Image_Texture_001.outputs:rgb>
            float inputs:opacity = 1
            float inputs:roughness = 0.8585787
            float inputs:specular = 0.2
            token outputs:surface
        }

        def Shader "Image_Texture"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @../../../textures/Cardboard_AlbedoTransparency.png@
            token inputs:sourceColorSpace = "sRGB"
            float2 inputs:st.connect = </_materials/M_Box_8_FlapOuter_1_0/uvmap.outputs:result>
            token inputs:wrapS = "repeat"
            token inputs:wrapT = "repeat"
            float3 outputs:rgb
        }

        def Shader "uvmap"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            token inputs:varname = "UVMap"
            float2 outputs:result
        }

        def Shader "Image_Texture_001"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @./textures/Cardboard_Normal.png@
            token inputs:sourceColorSpace = "sRGB"
            float2 inputs:st.connect = </_materials/M_Box_8_FlapOuter_1_0/uvmap.outputs:result>
            token inputs:wrapS = "repeat"
            token inputs:wrapT = "repeat"
            float3 outputs:rgb
        }
    }
}

