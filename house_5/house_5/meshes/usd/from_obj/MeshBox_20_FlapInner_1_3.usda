#usda 1.0
(
    defaultPrim = "Box_20_FlapInner_1"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "Box_20_FlapInner_1"
{
    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]

    def Mesh "Box_20_FlapInner_1" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        uniform bool doubleSided = 1
        float3[] extent = [(-0.212984, -0.109725, 0.08092), (-0.12519, 0.118955, 0.092395)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 2, 0, 5, 6, 4, 4, 9, 5, 6, 11, 10, 8, 11, 9, 6, 8, 4, 11, 0, 9, 3, 5, 2, 7, 1, 11, 5, 0, 2, 1, 3, 2, 5, 7, 6, 4, 8, 9, 6, 7, 11, 8, 10, 11, 6, 10, 8, 11, 1, 0, 3, 7, 5, 7, 3, 1, 5, 9, 0]
        rel material:binding = </_materials/M_Box_20_FlapInner_1_0>
        normal3f[] normals = [(-0.9944124, 0, 0.105564795), (-0.9944124, 0, 0.105564795), (-0.9944124, 0, 0.105564795), (0.12822196, 0, 0.9917455), (0.9759243, 0, 0.21810955), (0.97679186, -0.000024336849, 0.21419051), (0, 1, 0.000005036127), (0, 1, 7.9568446e-7), (0, 1, 0.0000019167219), (0, -1, -0.000005036127), (0, -1, -7.9568446e-7), (0, -1, 0), (0.9083607, 0, -0.4181876), (-0.08302203, 0, -0.99654764), (-0.09935176, -0.00003612349, -0.9950524), (0.9759243, 0, 0.21810955), (0.9083607, 0, -0.4181876), (0.97679186, -0.000024336849, 0.21419051), (-0.08302203, 0, -0.99654764), (-0.105673954, 0, -0.9944008), (-0.09935176, -0.00003612349, -0.9950524), (0.105674, 0, 0.9944008), (0.12822196, 0, 0.9917455), (0.10567415, 0, 0.99440086), (0, -1, -0.0000019872016), (0, -1, -0.000004095952), (0, -1, -7.9568446e-7), (0, 1, 0.0000019167219), (0, 1, -0.0000023039727), (0, 1, -0.0000023420164), (-0.9944124, 0, 0.105564795), (-0.9944124, 0, 0.105564795), (-0.9944124, 0, 0.105564795), (0.12822196, 0, 0.9917455), (0.11205351, 0.00014455008, 0.9937022), (0.9759243, 0, 0.21810955), (0, 1, 0.000005036127), (0, 1, 0), (0, 1, 7.9568446e-7), (0, -1, -0.000005036127), (0, -1, -0.0000019872016), (0, -1, -7.9568446e-7), (0.9083607, 0, -0.4181876), (0.91003203, -6.1692553e-9, -0.4145379), (-0.08302203, 0, -0.99654764), (0.9759243, 0, 0.21810955), (0.91003203, -6.1692553e-9, -0.4145379), (0.9083607, 0, -0.4181876), (-0.08302203, 0, -0.99654764), (-0.10567396, 0, -0.99440086), (-0.105673954, 0, -0.9944008), (0.105674, 0, 0.9944008), (0.11205351, 0.00014455008, 0.9937022), (0.12822196, 0, 0.9917455), (0, -1, -0.0000019872016), (0, -1, -0.000004163585), (0, -1, -0.000004095952), (0, 1, 0.0000019167219), (0, 1, 7.9568446e-7), (0, 1, -0.0000023039727)] (
            interpolation = "faceVarying"
        )
        point3f[] points = [(-0.212984, 0.118955, 0.090172), (-0.212984, -0.109725, 0.090172), (-0.212748, 0.118955, 0.092395), (-0.212748, -0.109725, 0.092395), (-0.12519, 0.118955, 0.082528), (-0.125686, 0.118955, 0.083143), (-0.12519, -0.109725, 0.082528), (-0.125686, -0.109725, 0.083143), (-0.125308, 0.118955, 0.081417), (-0.125922, 0.118955, 0.08092), (-0.125308, -0.109725, 0.081417), (-0.125922, -0.109725, 0.08092)]
        texCoord2f[] primvars:UVMap = [(-0.588591, 0.037333), (-0.594048, -0.558704), (-0.588591, -0.558704), (0.323151, -0.558706), (0.321787, 0.035881), (0.321787, -0.557253), (0.321787, -0.557253), (0.317695, -0.558702), (0.323151, -0.558706), (0.321787, 0.035881), (0.317695, 0.037334), (0.319059, 0.035881), (0.319059, -0.557253), (0.317695, 0.037334), (0.317695, -0.558702), (0.321787, 0.035881), (0.319059, -0.557253), (0.321787, -0.557253), (0.219437, 0.037335), (-0.043545, -0.558707), (0.219437, -0.558707), (-0.227223, 0.037335), (-0.490204, -0.558707), (-0.227223, -0.558707), (-0.605334, -0.114459), (-0.610791, 0.148522), (-0.610791, -0.114458), (-0.618449, -0.299226), (-0.623906, -0.562205), (-0.61845, -0.562206), (-0.588591, 0.037333), (-0.594048, 0.037333), (-0.594048, -0.558704), (0.323151, -0.558706), (0.323151, 0.037334), (0.321787, 0.035881), (0.321787, -0.557253), (0.319059, -0.557253), (0.317695, -0.558702), (0.321787, 0.035881), (0.323151, 0.037334), (0.317695, 0.037334), (0.319059, -0.557253), (0.319059, 0.035881), (0.317695, 0.037334), (0.321787, 0.035881), (0.319059, 0.035881), (0.319059, -0.557253), (0.219437, 0.037335), (-0.043545, 0.037335), (-0.043545, -0.558707), (-0.227223, 0.037335), (-0.490204, 0.037335), (-0.490204, -0.558707), (-0.605334, -0.114459), (-0.605334, 0.148522), (-0.610791, 0.148522), (-0.618449, -0.299226), (-0.623906, -0.299224), (-0.623906, -0.562205)] (
            interpolation = "faceVarying"
        )
        uniform token subdivisionScheme = "none"
    }
}

def Scope "_materials"
{
    def Material "M_Box_20_FlapInner_1_0"
    {
        token outputs:surface.connect = </_materials/M_Box_20_FlapInner_1_0/Principled_BSDF.outputs:surface>

        def Shader "Principled_BSDF"
        {
            uniform token info:id = "UsdPreviewSurface"
            float inputs:clearcoat = 0
            float inputs:clearcoatRoughness = 0.03
            color3f inputs:diffuseColor.connect = </_materials/M_Box_20_FlapInner_1_0/Image_Texture.outputs:rgb>
            float inputs:ior = 1.5
            float inputs:metallic = 0
            float3 inputs:normal.connect = </_materials/M_Box_20_FlapInner_1_0/Image_Texture_001.outputs:rgb>
            float inputs:opacity = 1
            float inputs:roughness = 0.8585787
            float inputs:specular = 0.2
            token outputs:surface
        }

        def Shader "Image_Texture"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @../../../textures/Cardboard_AlbedoTransparency.png@
            token inputs:sourceColorSpace = "sRGB"
            float2 inputs:st.connect = </_materials/M_Box_20_FlapInner_1_0/uvmap.outputs:result>
            token inputs:wrapS = "repeat"
            token inputs:wrapT = "repeat"
            float3 outputs:rgb
        }

        def Shader "uvmap"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            token inputs:varname = "UVMap"
            float2 outputs:result
        }

        def Shader "Image_Texture_001"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @./textures/Cardboard_Normal.png@
            token inputs:sourceColorSpace = "sRGB"
            float2 inputs:st.connect = </_materials/M_Box_20_FlapInner_1_0/uvmap.outputs:result>
            token inputs:wrapS = "repeat"
            token inputs:wrapT = "repeat"
            float3 outputs:rgb
        }
    }
}

