#usda 1.0
(
    defaultPrim = "MeshTelevision_14_0_GeomSubset_2"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "MeshTelevision_14_0_GeomSubset_2"
{
    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]

    def Mesh "MeshTelevision_14_0_GeomSubset_2" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        uniform bool doubleSided = 1
        float3[] extent = [(-0.499629, -0.054747, -0.310042), (0.499629, 0.073897, 0.310293)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 2, 0, 6, 4, 9, 13, 12, 11, 15, 16, 17, 14, 4, 18, 1, 3, 2, 4, 5, 9, 9, 8, 7, 7, 6, 9, 11, 10, 4, 4, 6, 11, 6, 13, 11, 17, 5, 4, 4, 14, 17, 14, 15, 17, 4, 10, 18, 18, 19, 20, 20, 14, 18]
        rel material:binding = </_materials/M_Television_14_2>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, 1.4261348e-9), (0, -1, 4.6647653e-14), (0, -1, 2.9003672e-8), (0, -1, 0), (0, -1, 0), (0, -1, 1.2007872e-9), (0, -1, 4.4646736e-8), (0, -1, 3.571551e-7), (0, -1, 5.6810652e-8), (0, -1, -1.425043e-9), (0, -1, 4.6647653e-14), (0, -1, -2.9020024e-8), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, 4.6647653e-14), (0, -1, 0), (0, -1, 2.9003672e-8), (0, -1, 2.9003672e-8), (0, -1, 1.7856122e-7), (0, -1, 2.2323514e-8), (0, -1, 2.2323514e-8), (0, -1, 1.4261348e-9), (0, -1, 2.9003672e-8), (0, -1, 1.2007872e-9), (0, -1, 0), (0, -1, 4.6647653e-14), (0, -1, 4.6647653e-14), (0, -1, 1.4261348e-9), (0, -1, 1.2007872e-9), (0, -1, 1.4261348e-9), (0, -1, 0), (0, -1, 1.2007872e-9), (0, -1, 5.6810652e-8), (0, -1, 0), (0, -1, 4.6647653e-14), (0, -1, 4.6647653e-14), (0, -1, -1.425043e-9), (0, -1, 5.6810652e-8), (0, -1, -1.425043e-9), (0, -1, 4.4646736e-8), (0, -1, 5.6810652e-8), (0, -1, 4.6647653e-14), (0, -1, 0), (0, -1, -2.9020024e-8), (0, -1, -2.9020024e-8), (0, -1, -1.7871952e-7), (0, -1, -2.2352626e-8), (0, -1, -2.2352626e-8), (0, -1, -1.425043e-9), (0, -1, -2.9020024e-8)] (
            interpolation = "faceVarying"
        )
        point3f[] points = [(-0.000874, 0.072149, -0.024943), (0.000874, 0.072149, -0.024943), (-0.000874, 0.073897, -0.024943), (0.000874, 0.073897, -0.024943), (0, -0.054747, 0), (0, -0.054747, 0.310293), (-0.499629, -0.054747, 0), (-0.499629, -0.054747, 0.279264), (-0.492034, -0.054747, 0.301747), (-0.474648, -0.054747, 0.310293), (0, -0.054747, -0.310042), (-0.474648, -0.054747, -0.310042), (-0.492034, -0.054747, -0.301503), (-0.499629, -0.054747, -0.279038), (0.499629, -0.054747, 0), (0.499629, -0.054747, 0.279264), (0.492033, -0.054747, 0.301747), (0.474648, -0.054747, 0.310293), (0.474648, -0.054747, -0.310042), (0.492033, -0.054747, -0.301503), (0.499629, -0.054747, -0.279038)]
        texCoord2f[] primvars:UVMap = [(-19.02117, -17.591677), (-19.021944, -17.590902), (-19.021944, -17.591677), (0, 0.388547), (0.5, 0.388551), (0.025, 0.699046), (0, 0.109278), (0.007601, 0.086795), (0.025, 0.07825), (1, 0.667995), (0.992399, 0.690493), (0.975, 0.699046), (1, 0.388547), (0.5, 0.388551), (0.975, 0.07825), (-19.02117, -17.591677), (-19.02117, -17.590902), (-19.021944, -17.590902), (0.5, 0.388551), (0.5, 0.699074), (0.025, 0.699046), (0.025, 0.699046), (0.007601, 0.690493), (0, 0.667995), (0, 0.667995), (0, 0.388547), (0.025, 0.699046), (0.025, 0.07825), (0.5, 0.078277), (0.5, 0.388551), (0.5, 0.388551), (0, 0.388547), (0.025, 0.07825), (0, 0.388547), (0, 0.109278), (0.025, 0.07825), (0.975, 0.699046), (0.5, 0.699074), (0.5, 0.388551), (0.5, 0.388551), (1, 0.388547), (0.975, 0.699046), (1, 0.388547), (1, 0.667995), (0.975, 0.699046), (0.5, 0.388551), (0.5, 0.078277), (0.975, 0.07825), (0.975, 0.07825), (0.992399, 0.086795), (1, 0.109278), (1, 0.109278), (1, 0.388547), (0.975, 0.07825)] (
            interpolation = "faceVarying"
        )
        uniform token subdivisionScheme = "none"
    }
}

def Scope "_materials"
{
    def Material "M_Television_14_2"
    {
        token outputs:surface.connect = </_materials/M_Television_14_2/Principled_BSDF.outputs:surface>

        def Shader "Principled_BSDF"
        {
            uniform token info:id = "UsdPreviewSurface"
            float inputs:clearcoat = 0
            float inputs:clearcoatRoughness = 0.03
            color3f inputs:diffuseColor = (0, 0, 0)
            float inputs:ior = 1.5
            float inputs:metallic = 0
            float inputs:opacity = 1
            float inputs:roughness = 0.8585787
            float inputs:specular = 0.5
            token outputs:surface
        }
    }
}

