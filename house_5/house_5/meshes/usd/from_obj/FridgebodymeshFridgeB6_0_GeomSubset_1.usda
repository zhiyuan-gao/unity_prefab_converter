#usda 1.0
(
    defaultPrim = "FridgebodymeshFridgeB6_0_GeomSubset_1"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "FridgebodymeshFridgeB6_0_GeomSubset_1"
{
    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]

    def Mesh "FridgebodymeshFridgeB6_0_GeomSubset_1" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        uniform bool doubleSided = 1
        float3[] extent = [(-0.490872, -0.254857, -0.889139), (0.496871, 0.346415, 0.318292)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 2, 0, 5, 6, 7, 6, 9, 7, 10, 13, 11, 13, 14, 15, 5, 12, 10, 7, 14, 12, 17, 18, 19, 19, 20, 21, 11, 18, 16, 18, 15, 20, 4, 19, 6, 19, 8, 6, 1, 3, 2, 5, 4, 6, 6, 8, 9, 10, 12, 13, 13, 12, 14, 5, 7, 12, 7, 9, 14, 17, 16, 18, 19, 18, 20, 11, 13, 18, 18, 13, 15, 4, 17, 19, 19, 21, 8]
        rel material:binding = </_materials/M_FridgeB6_1>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0.0030186214, -0.9945642, 0.10408163), (0.64053965, -0.7312365, 0.23452537), (0.0028924912, -0.9912958, 0.13162133), (0.64061093, -0.7311805, -0.23450522), (0.010637579, -0.9942889, -0.106189206), (-0.00068752095, -0.9914021, -0.13084914), (-0.0106837535, -0.9942871, 0.10620226), (-0.64054465, -0.7312385, 0.23450555), (-0.64708614, -0.73844355, 0.1896854), (-0.64060235, -0.731189, -0.23450209), (-0.0030323938, -0.9945736, -0.10399118), (-0.64715314, -0.73838097, -0.18970074), (0.0030186214, -0.9945642, 0.10408163), (0.00071947975, -0.99141544, 0.13074708), (-0.0106837535, -0.9942871, 0.10620226), (-0.00068752095, -0.9914021, -0.13084914), (-0.0030323938, -0.9945736, -0.10399118), (-0.0029281934, -0.9912929, -0.13164306), (3.0677012e-7, 0.99462783, 0.10351603), (-0.0000026565817, 0.99140096, 0.13085887), (-0.0000027943743, 0.9914032, 0.13084202), (0.0000026562404, 0.9913855, -0.13097608), (-2.855279e-8, 0.99462014, -0.103589326), (6.505288e-7, 0.99461883, -0.10360283), (-0.9854097, -0.0000030975789, 0.17019938), (-0.9772558, -0.0000169632, 0.21206364), (-0.9854196, -0.00000187762, 0.17014185), (-0.9772641, 0.000016396814, -0.21202545), (-0.9854081, 8.54086e-7, -0.17020787), (-0.98542637, -0.0000014719553, -0.17010263), (0.98540515, -0.0000021297897, 0.17022559), (0.97725886, -0.000016342548, 0.2120498), (0.97725797, -0.000016370803, 0.21205358), (0.9772612, 0.000016341648, -0.21203925), (0.98540807, -3.6135316e-7, -0.17020854), (0.9772618, 0.000016339236, -0.21203658), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0.0030186214, -0.9945642, 0.10408163), (0.6470592, -0.7384603, 0.18971194), (0.64053965, -0.7312365, 0.23452537), (0.64061093, -0.7311805, -0.23450522), (0.64714545, -0.7383882, -0.1896986), (0.010637579, -0.9942889, -0.106189206), (-0.0106837535, -0.9942871, 0.10620226), (0.00071947975, -0.99141544, 0.13074708), (-0.64054465, -0.7312385, 0.23450555), (-0.64060235, -0.731189, -0.23450209), (-0.0029281934, -0.9912929, -0.13164306), (-0.0030323938, -0.9945736, -0.10399118), (0.0030186214, -0.9945642, 0.10408163), (0.0028924912, -0.9912958, 0.13162133), (0.00071947975, -0.99141544, 0.13074708), (-0.00068752095, -0.9914021, -0.13084914), (0.010637579, -0.9942889, -0.106189206), (-0.0030323938, -0.9945736, -0.10399118), (3.0677012e-7, 0.99462783, 0.10351603), (-9.2899427e-7, 0.9946261, 0.10353296), (-0.0000026565817, 0.99140096, 0.13085887), (0.0000026562404, 0.9913855, -0.13097608), (0.0000028020884, 0.9913873, -0.13096263), (-2.855279e-8, 0.99462014, -0.103589326), (-0.9854097, -0.0000030975789, 0.17019938), (-0.9772638, -0.000016105576, 0.21202685), (-0.9772558, -0.0000169632, 0.21206364), (-0.9772641, 0.000016396814, -0.21202545), (-0.9772618, 0.000016020907, -0.21203616), (-0.9854081, 8.54086e-7, -0.17020787), (0.98540515, -0.0000021297897, 0.17022559), (0.9854057, 1.6763806e-8, 0.17022176), (0.97725886, -0.000016342548, 0.2120498), (0.9772612, 0.000016341648, -0.21203925), (0.98540765, -0.0000028760717, -0.17021123), (0.98540807, -3.6135316e-7, -0.17020854)] (
            interpolation = "faceVarying"
        )
        point3f[] points = [(0.002994, -0.001034, -0.889139), (0.003005, -0.001034, -0.889139), (0.002994, -0.001024, -0.889139), (0.003005, -0.001024, -0.889139), (0.496871, -0.251642, 0.289377), (0.493202, -0.254857, 0.289376), (0.493739, -0.249757, 0.303811), (0.490094, -0.25295, 0.30381), (0.496871, -0.251642, 0.318246), (0.493202, -0.254857, 0.318246), (-0.487203, -0.254857, 0.289355), (-0.490872, -0.251642, 0.289355), (-0.484095, -0.25295, 0.30379), (-0.48774, -0.249757, 0.303791), (-0.487203, -0.254857, 0.318226), (-0.490872, -0.251642, 0.318226), (-0.490872, 0.346413, 0.289403), (0.496871, 0.346413, 0.289423), (-0.48774, 0.344508, 0.303836), (0.493739, 0.344508, 0.303857), (-0.490872, 0.346415, 0.318272), (0.496871, 0.346415, 0.318292)]
        texCoord2f[] primvars:UVMap = [(-141.04144, -111.22494), (-141.04141, -111.224915), (-141.04144, -111.224915), (-143.90816, 1.058645), (-143.87198, 1.045862), (-143.87198, 1.053866), (-143.87198, 1.045862), (-143.8358, 1.058645), (-143.87198, 1.053866), (-143.87192, -0.448347), (-143.83574, -0.435564), (-143.87192, -0.440288), (-143.83574, -0.435564), (-143.79956, -0.448347), (-143.79956, -0.440288), (-143.94402, -0.721821), (-143.90819, 1.7067), (-143.94406, 1.714422), (-143.90814, -0.714099), (-143.87231, 1.714422), (-143.90819, 1.7067), (-143.90874, -0.727234), (-143.94456, 1.719454), (-143.94461, -0.719452), (-143.94461, -0.719452), (-143.98042, 1.727234), (-143.98048, -0.727234), (-143.87192, -0.440288), (-143.83562, 1.05386), (-143.8718, 1.058633), (-143.83562, 1.05386), (-143.79956, -0.440288), (-143.79944, 1.058639), (-143.90816, 1.050586), (-143.87186, -0.443573), (-143.87198, 1.045862), (-143.87186, -0.443573), (-143.8358, 1.050586), (-143.87198, 1.045862), (-141.04144, -111.22494), (-141.04141, -111.22494), (-141.04141, -111.224915), (-143.90816, 1.058645), (-143.90816, 1.050586), (-143.87198, 1.045862), (-143.87198, 1.045862), (-143.8358, 1.050586), (-143.8358, 1.058645), (-143.87192, -0.448347), (-143.83574, -0.443568), (-143.83574, -0.435564), (-143.83574, -0.435564), (-143.83574, -0.443568), (-143.79956, -0.448347), (-143.94402, -0.721821), (-143.90814, -0.714099), (-143.90819, 1.7067), (-143.90814, -0.714099), (-143.87227, -0.721821), (-143.87231, 1.714422), (-143.90874, -0.727234), (-143.90869, 1.727234), (-143.94456, 1.719454), (-143.94461, -0.719452), (-143.94456, 1.719454), (-143.98042, 1.727234), (-143.87192, -0.440288), (-143.83574, -0.435564), (-143.83562, 1.05386), (-143.83562, 1.05386), (-143.83574, -0.435564), (-143.79956, -0.440288), (-143.90816, 1.050586), (-143.90804, -0.448346), (-143.87186, -0.443573), (-143.87186, -0.443573), (-143.83568, -0.448352), (-143.8358, 1.050586)] (
            interpolation = "faceVarying"
        )
        uniform token subdivisionScheme = "none"
    }
}

def Scope "_materials"
{
    def Material "M_FridgeB6_1"
    {
        token outputs:surface.connect = </_materials/M_FridgeB6_1/Principled_BSDF.outputs:surface>

        def Shader "Principled_BSDF"
        {
            uniform token info:id = "UsdPreviewSurface"
            float inputs:clearcoat = 0
            float inputs:clearcoatRoughness = 0.03
            color3f inputs:diffuseColor.connect = </_materials/M_FridgeB6_1/Image_Texture.outputs:rgb>
            float inputs:ior = 1.5
            float inputs:metallic = 0
            float3 inputs:normal.connect = </_materials/M_FridgeB6_1/Image_Texture_001.outputs:rgb>
            float inputs:opacity = 1
            float inputs:roughness = 0.8585787
            float inputs:specular = 0.5
            token outputs:surface
        }

        def Shader "Image_Texture"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @../../../textures/BrushedAluminum_AlbedoTransparency.png@
            token inputs:sourceColorSpace = "sRGB"
            float2 inputs:st.connect = </_materials/M_FridgeB6_1/uvmap.outputs:result>
            token inputs:wrapS = "repeat"
            token inputs:wrapT = "repeat"
            float3 outputs:rgb
        }

        def Shader "uvmap"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            token inputs:varname = "UVMap"
            float2 outputs:result
        }

        def Shader "Image_Texture_001"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @./textures/BrushedIron_Normal.png@
            token inputs:sourceColorSpace = "sRGB"
            float2 inputs:st.connect = </_materials/M_FridgeB6_1/uvmap.outputs:result>
            token inputs:wrapS = "repeat"
            token inputs:wrapT = "repeat"
            float3 outputs:rgb
        }
    }
}

