#usda 1.0
(
    defaultPrim = "DoorwayDouble_1"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "DoorwayDouble_1"
{
    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]

    def Mesh "DoorwayDouble_1" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        uniform bool doubleSided = 1
        float3[] extent = [(-0.995185, -0.061104, -1.0435), (0.997531, 0.019621, 1.086471)]
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [1, 3, 2, 5, 7, 6, 8, 0, 9, 8, 10, 11, 14, 12, 15, 18, 16, 19, 11, 21, 8, 3, 21, 16, 2, 16, 17, 4, 12, 7, 1, 15, 0, 0, 4, 9, 4, 10, 9, 19, 13, 18, 6, 22, 23, 19, 21, 22, 23, 21, 20, 7, 19, 22, 6, 10, 5, 6, 20, 11, 1, 13, 14, 17, 13, 2, 1, 0, 3, 5, 4, 7, 8, 3, 0, 8, 9, 10, 14, 13, 12, 18, 17, 16, 11, 20, 21, 3, 8, 21, 2, 3, 16, 4, 15, 12, 1, 14, 15, 0, 15, 4, 4, 5, 10, 19, 12, 13, 6, 7, 22, 19, 16, 21, 23, 22, 21, 7, 12, 19, 6, 11, 10, 6, 23, 20, 1, 2, 13, 17, 18, 13]
        rel material:binding = </_materials/M_DoorwayDouble_1_0>
        normal3f[] normals = [(1, 5.2819395e-8, 0), (1, 0.0000021582498, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0.0003501816, 0.99999994), (0, 0.0003501816, 0.99999994), (0, 0.0003501816, 0.99999994), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 1.539871e-8, 0), (-1, 0.0000011979358, 0), (-0.99999994, 0.0000012133332, 0), (0.0000036535464, -0.99999994, 0.0003464128), (0.00005849599, -1, 0.00029676093), (0.000049453825, -0.99999994, 0.0002883977), (-0.000049503764, -0.99999994, 0.00028839006), (0.00005849599, -1, 0.00029676093), (-0.00005875388, -0.9999999, 0.00029687936), (-0.000003653595, -0.99999994, 0.0003464138), (-0.00005875388, -0.9999999, 0.00029687936), (0, -0.99999994, 0.00034659682), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0.000001802563, 0.99999994, -0.00034361403), (0.00003618942, 1, -0.00031301507), (0.000030963096, 0.99999994, -0.00030819952), (0.000030963096, 0.99999994, -0.00030819952), (-0.000035994122, 1, -0.000313007), (-0.000030923482, 1, -0.00030830104), (-0.000035994122, 1, -0.000313007), (-0.0000018025614, 0.99999994, -0.00034361458), (-0.000030923482, 1, -0.00030830104), (0.00016263303, 0.9999999, -0.00023733919), (0.0000018506015, 1, -0.00034658183), (0, 1, -0.00034659935), (-0.0000018506067, 0.99999994, -0.00034657877), (-0.00016263357, 1, -0.00023735221), (0, 1, -0.0003465963), (0, -0.00035017717, -0.99999994), (0, -0.00035017732, -0.99999994), (0, -0.0003501773, -0.9999999), (1, -3.4329204e-8, 0), (1, -0.0000026706252, 0), (1, 0, 0), (-0.0001244553, 1, -0.00020866608), (0.00016263303, 0.9999999, -0.00023733919), (-0.00016263357, 1, -0.00023735221), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (1, 5.2819395e-8, 0), (1, 0.0000022110767, 0), (1, 0.0000021582498, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (0, 0.0003501816, 0.99999994), (0, 0.0003501816, 0.99999994), (0, 0.0003501816, 0.99999994), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 1.539871e-8, 0), (-1, 0, 0), (-1, 0.0000011979358, 0), (0.0000036535464, -0.99999994, 0.0003464128), (0, -1, 0.00034659644), (0.00005849599, -1, 0.00029676093), (-0.000049503764, -0.99999994, 0.00028839006), (0.000049453825, -0.99999994, 0.0002883977), (0.00005849599, -1, 0.00029676093), (-0.000003653595, -0.99999994, 0.0003464138), (-0.000049503764, -0.99999994, 0.00028839006), (-0.00005875388, -0.9999999, 0.00029687936), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0.000001802563, 0.99999994, -0.00034361403), (0, 0.99999994, -0.00034368626), (0.00003618942, 1, -0.00031301507), (0.000030963096, 0.99999994, -0.00030819952), (0.00003618942, 1, -0.00031301507), (-0.000035994122, 1, -0.000313007), (-0.000035994122, 1, -0.000313007), (0, 0.9999999, -0.00034368713), (-0.0000018025614, 0.99999994, -0.00034361458), (0.00016263303, 0.9999999, -0.00023733919), (0.00012445507, 1, -0.00020865013), (0.0000018506015, 1, -0.00034658183), (-0.0000018506067, 0.99999994, -0.00034657877), (-0.0001244553, 1, -0.00020866608), (-0.00016263357, 1, -0.00023735221), (0, -0.00035017717, -0.99999994), (0, -0.00035017723, -1), (0, -0.00035017732, -0.99999994), (1, -3.4329204e-8, 0), (0.99999994, -0.0000027049516, 0), (1, -0.0000026706252, 0), (-0.0001244553, 1, -0.00020866608), (0.00012445507, 1, -0.00020865013), (0.00016263303, 0.9999999, -0.00023733919), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
            interpolation = "faceVarying"
        )
        point3f[] points = [(0.997531, 0.019621, 1.086443), (0.997531, 0.018895, -1.0435), (0.997531, -0.061104, -1.0435), (0.997531, -0.060378, 1.086471), (-0.913383, 0.019593, 0.987414), (-0.913383, 0.018895, -1.0435), (-0.913383, -0.021104, -1.0435), (-0.913383, -0.020406, 0.987414), (-0.995185, -0.060378, 1.086471), (-0.995185, 0.019621, 1.086443), (-0.995185, 0.018895, -1.0435), (-0.995185, -0.061104, -1.0435), (0.916091, -0.020406, 0.987414), (0.916091, -0.021104, -1.0435), (0.916091, 0.018895, -1.0435), (0.916091, 0.019593, 0.987414), (0.897091, -0.060409, 0.961725), (0.897091, -0.061104, -1.0435), (0.897091, -0.021104, -1.0435), (0.897091, -0.020409, 0.961711), (-0.894383, -0.061104, -1.0435), (-0.894383, -0.060409, 0.961725), (-0.894383, -0.020409, 0.961711), (-0.894383, -0.021104, -1.0435)]
        texCoord2f[] primvars:UVMap = [(-9.927151, -1.426697), (-10.051015, 1.901381), (-10.05215, -1.426697), (-9.015412, -1.378206), (-9.07681, 1.795105), (-9.07791, -1.378206), (-9.397613, -0.859697), (-9.522611, 2.253932), (-9.522611, -0.859697), (-9.901621, 1.901384), (-10.025483, -1.426699), (-9.900485, -1.426699), (-9.061234, -1.378214), (-8.999826, 1.795113), (-9.062323, 1.795114), (-9.456207, -0.886016), (-9.394793, 2.247135), (-9.457292, 2.247113), (-8.17002, 1.901385), (-8.327522, -1.231785), (-8.170019, -1.426701), (-11.283647, -1.426701), (-8.327522, -1.231785), (-11.126709, -1.231785), (-11.283646, 1.901385), (-11.126709, -1.231785), (-11.126708, 1.901385), (-9.448272, -0.743936), (-9.510767, 2.114609), (-9.51077, -0.743936), (-10.835383, -1.426679), (-10.708134, 1.746625), (-10.835383, 1.901358), (-10.835383, 1.901358), (-7.849579, 1.746625), (-7.721764, 1.901358), (-7.849579, 1.746625), (-7.721764, -1.426679), (-7.721764, 1.901358), (-10.610097, 2.229881), (-10.639788, -0.903243), (-10.610101, -0.903243), (-7.78125, -0.903243), (-7.81094, 2.229881), (-7.810939, -0.903243), (-9.463225, 2.080727), (-9.525724, -0.718456), (-9.463226, -0.718456), (-9.40992, -0.886023), (-9.471326, 2.247139), (-9.472419, -0.886023), (-7.781252, 2.270042), (-10.610097, 2.229881), (-7.81094, 2.229881), (-9.537719, 0.55059), (-9.475219, 0.422772), (-9.475219, 0.55059), (-9.537719, 0.55059), (-9.60022, 0.580279), (-9.60022, 0.422772), (-9.451395, 0.550739), (-9.513894, 0.423486), (-9.451394, 0.423486), (-9.576395, 0.393798), (-9.513894, 0.423486), (-9.576397, 0.550739), (-9.927151, -1.426697), (-9.926017, 1.901338), (-10.051015, 1.901381), (-9.015412, -1.378206), (-9.014312, 1.795105), (-9.07681, 1.795105), (-9.397613, -0.859697), (-9.397613, 2.253932), (-9.522611, 2.253932), (-9.901621, 1.901384), (-10.026619, 1.901341), (-10.025483, -1.426699), (-9.061234, -1.378214), (-8.998737, -1.378214), (-8.999826, 1.795113), (-9.456207, -0.886016), (-9.393708, -0.886016), (-9.394793, 2.247135), (-8.17002, 1.901385), (-8.327523, 1.901385), (-8.327522, -1.231785), (-11.283647, -1.426701), (-8.170019, -1.426701), (-8.327522, -1.231785), (-11.283646, 1.901385), (-11.283647, -1.426701), (-11.126709, -1.231785), (-9.448272, -0.743936), (-9.448269, 2.114609), (-9.510767, 2.114609), (-10.835383, -1.426679), (-10.708135, -1.426679), (-10.708134, 1.746625), (-10.835383, 1.901358), (-10.708134, 1.746625), (-7.849579, 1.746625), (-7.849579, 1.746625), (-7.84958, -1.426679), (-7.721764, -1.426679), (-10.610097, 2.229881), (-10.639785, 2.270041), (-10.639788, -0.903243), (-7.78125, -0.903243), (-7.781252, 2.270042), (-7.81094, 2.229881), (-9.463225, 2.080727), (-9.525724, 2.080727), (-9.525724, -0.718456), (-9.40992, -0.886023), (-9.408827, 2.247117), (-9.471326, 2.247139), (-7.781252, 2.270042), (-10.639785, 2.270041), (-10.610097, 2.229881), (-9.537719, 0.55059), (-9.60022, 0.422772), (-9.475219, 0.422772), (-9.537719, 0.55059), (-9.537719, 0.580279), (-9.60022, 0.580279), (-9.451395, 0.550739), (-9.576397, 0.550739), (-9.513894, 0.423486), (-9.576395, 0.393798), (-9.513894, 0.393798), (-9.513894, 0.423486)] (
            interpolation = "faceVarying"
        )
        uniform token subdivisionScheme = "none"
    }
}

def Scope "_materials"
{
    def Material "M_DoorwayDouble_1_0"
    {
        token outputs:surface.connect = </_materials/M_DoorwayDouble_1_0/Principled_BSDF.outputs:surface>

        def Shader "Principled_BSDF"
        {
            uniform token info:id = "UsdPreviewSurface"
            float inputs:clearcoat = 0
            float inputs:clearcoatRoughness = 0.03
            color3f inputs:diffuseColor.connect = </_materials/M_DoorwayDouble_1_0/Image_Texture.outputs:rgb>
            float inputs:ior = 1.5
            float inputs:metallic = 0.209
            float3 inputs:normal.connect = </_materials/M_DoorwayDouble_1_0/Image_Texture_001.outputs:rgb>
            float inputs:opacity = 1
            float inputs:roughness = 0.8585787
            float inputs:specular = 0.2
            token outputs:surface
        }

        def Shader "Image_Texture"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @../../../textures/TexturesCom_WoodFine0050_1_seamless_S.png@
            token inputs:sourceColorSpace = "sRGB"
            float2 inputs:st.connect = </_materials/M_DoorwayDouble_1_0/uvmap.outputs:result>
            token inputs:wrapS = "repeat"
            token inputs:wrapT = "repeat"
            float3 outputs:rgb
        }

        def Shader "uvmap"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            token inputs:varname = "UVMap"
            float2 outputs:result
        }

        def Shader "Image_Texture_001"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @./textures/HammeredMetal_Normal.png@
            token inputs:sourceColorSpace = "sRGB"
            float2 inputs:st.connect = </_materials/M_DoorwayDouble_1_0/uvmap.outputs:result>
            token inputs:wrapS = "repeat"
            token inputs:wrapT = "repeat"
            float3 outputs:rgb
        }
    }
}

