#usda 1.0
(
    defaultPrim = "MeshRobothorWallDecor_4_3_0_GeomSubset_0"
    doc = "Blender v4.1.1"
    metersPerUnit = 1
    upAxis = "Z"
)

def Xform "MeshRobothorWallDecor_4_3_0_GeomSubset_0"
{
    matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]

    def Mesh "MeshRobothorWallDecor_4_3_0_GeomSubset_0" (
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        uniform bool doubleSided = 1
        float3[] extent = [(-0.246837, 0.004007, -0.38576), (0.24922, 0.014978, 0.182082)]
        int[] faceVertexCounts = [3, 3, 3, 3]
        int[] faceVertexIndices = [1, 2, 0, 4, 6, 5, 4, 7, 6, 1, 3, 2]
        rel material:binding = </_materials/M_RobothorWallDecor_4_3_0>
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -0.99999994, -0.00034861), (0, -0.99999994, -0.0003486105), (0, -0.9999999, -0.0003486115), (0, -0.99999994, -0.00034861), (0, -1, -0.00034860897), (0, -0.99999994, -0.0003486105), (0, 0, 1), (0, 0, 1), (0, 0, 1)] (
            interpolation = "faceVarying"
        )
        point3f[] points = [(0.001043, 0.014596, -0.38576), (0.001435, 0.014596, -0.38576), (0.001043, 0.014978, -0.38576), (0.001435, 0.014978, -0.38576), (0.24922, 0.004133, -0.179353), (-0.246837, 0.004133, -0.179353), (-0.246837, 0.004007, 0.182082), (0.24922, 0.004007, 0.182082)]
        texCoord2f[] primvars:UVMap = [(-9.379675, -9.75594), (-9.379271, -9.755536), (-9.379675, -9.755536), (-9, 0), (-10, 1), (-10, 0), (-9, 0), (-9, 1), (-10, 1), (-9.379675, -9.75594), (-9.379271, -9.75594), (-9.379271, -9.755536)] (
            interpolation = "faceVarying"
        )
        uniform token subdivisionScheme = "none"
    }
}

def Scope "_materials"
{
    def Material "M_RobothorWallDecor_4_3_0"
    {
        token outputs:surface.connect = </_materials/M_RobothorWallDecor_4_3_0/Principled_BSDF.outputs:surface>

        def Shader "Principled_BSDF"
        {
            uniform token info:id = "UsdPreviewSurface"
            float inputs:clearcoat = 0
            float inputs:clearcoatRoughness = 0.03
            color3f inputs:diffuseColor.connect = </_materials/M_RobothorWallDecor_4_3_0/Image_Texture.outputs:rgb>
            float inputs:ior = 1.5
            float inputs:metallic = 0
            float inputs:opacity = 1
            float inputs:roughness = 0.8585787
            float inputs:specular = 0.5
            token outputs:surface
        }

        def Shader "Image_Texture"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @../../../textures/Wall_Decor_Photo_1V_AlbedoTransparency.png@
            token inputs:sourceColorSpace = "sRGB"
            float2 inputs:st.connect = </_materials/M_RobothorWallDecor_4_3_0/uvmap.outputs:result>
            token inputs:wrapS = "repeat"
            token inputs:wrapT = "repeat"
            float3 outputs:rgb
        }

        def Shader "uvmap"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            token inputs:varname = "UVMap"
            float2 outputs:result
        }
    }
}

